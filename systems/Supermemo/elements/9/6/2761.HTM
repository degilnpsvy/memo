<HEAD><?xml:namespace prefix = st1 /><st1:chsdate w:st="on" IsROCDate="False" IsLunarDate="False" Day="30" Month="12" Year="1899"><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Bold-0-1000-22; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Bold-0-1000-22">4.9.1</SPAN></B></st1:chsdate></HEAD>
<BODY><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Bold-0-1000-22; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Bold-0-1000-22"></SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-BoldItalic-0-1000-64; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-BoldItalic-0-1000-64">
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt; TEXT-ALIGN: left; mso-layout-grid-align: none" align=left><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Bold-0-1000-22; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Bold-0-1000-22">4.9.1 </SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-BoldItalic-0-1000-64; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-BoldItalic-0-1000-64"><EM>The Cache Instruction<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></EM></SPAN></B></P></SPAN></B>
<P></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">The </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-63; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-63">cache </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">instruction has the general form of a MIPS load or store instruction (with the usual register plus 16-bit signed displacement address)</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8212;<SPAN lang=EN-US>but where the data register would have been encoded there</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">s a 5-bit operation field, which must encode the cache to be operated on, determine how to find the line, and figure out what to do with the line when you find it.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">You write a cache line in assembly as </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-63; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-63">cache OP,addr, </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">where OP is just a numeric value for the operation field.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">The best thing to do is to use the C preprocessor to define text </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8220;<SPAN lang=EN-US>names</SPAN>&#8221; <SPAN lang=EN-US>representing the numeric values for the operations. There are no standard names; I</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">ve arbitrarily used the names of C preprocessor definitions found in header files from the MIPS Technologies toolkit package. Of the 5-bit field, the upper 2 bits select which cache to work on:</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20"><FONT class=extract>0 = L1 I-cache</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20"><FONT class=extract>1 = L1 D-cache</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20"><FONT class=extract>2 = L3 cache, if fitted</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20"><FONT class=extract>3 = L2 cache, if fitted</FONT></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">Before we list the individual commands, note that they come in three flavors, which differ in how they select the cache entry (the </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8220;<SPAN lang=EN-US>cache line</SPAN>&#8221;<SPAN lang=EN-US>) they will work on:</SPAN></SPAN></FONT></P>
<P><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-30; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Italic-0-1000-30">Hit-type cache operation</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">: Presents an address (just like a load/store), which is looked up in the cache. If this location is in the cache (if it </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8220;<SPAN lang=EN-US>hits</SPAN>&#8221;<SPAN lang=EN-US>), the cache operation is carried out on the enclosing line. If this location is not in the cache, nothing happens.</SPAN></SPAN></FONT></P>
<P><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-30; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Italic-0-1000-30">Address-type cache operation</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">: Presents an address of some memory data, which is processed just like a cached access. That is, if the line you addressed was not previously in cache, the data is fetched from memory before the cache operation.</SPAN></FONT></P>
<P><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-30; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Italic-0-1000-30">Index-type cache operation</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">: Uses as many low bits of the virtual address as are needed to select the byte within the cache line, then the cache line address inside one of the cache ways, and then the way.( Some still-in-use MIPS CPUs use the least significant address bits to select the </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8220;<SPAN lang=EN-US>way.</SPAN>&#8221; <SPAN lang=EN-US>Those CPUs may need special initialization. I am not aware of any MIPS32/64-compliant CPUs that do this: but it</SPAN>&#8217;<SPAN lang=EN-US>s another thing to be careful about.) You have to know the size of your cache (discoverable from </SPAN></SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-63; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-63">Config1-2</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">, see section <st1:chsdate w:st="on" IsROCDate="False" IsLunarDate="False" Day="30" Month="12" Year="1899">3.3.7</st1:chsdate> for details) to know exactly where the field boundaries are, but your address is used something like this:</SPAN></FONT></P>
<TABLE class=MsoNormalTable style="MARGIN: auto auto auto 5.4pt; BORDER-COLLAPSE: collapse; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt" cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 21.3pt; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap width=28>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>31</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap colSpan=2>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>&nbsp;</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>5</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>4</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>3</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>2</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>1</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>0</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 1; mso-yfti-lastrow: yes">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; WIDTH: 115.3pt; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap width=154 colSpan=2>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>Unused</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>Way 1-0</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>Index</FONT></SPAN></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; PADDING-LEFT: 5.4pt; PADDING-BOTTOM: 0cm; BORDER-LEFT: #ffffff; PADDING-TOP: 0cm; BORDER-BOTTOM: #ffffff; HEIGHT: 14.25pt; BACKGROUND-COLOR: transparent" noWrap colSpan=5>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-font-kerning: 0pt; mso-bidi-font-family: &#23435;&#20307;"><FONT class=extract>byte-within-line</FONT></SPAN></P></TD></TR>
<TR height=0>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=34><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=125><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=84><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=64><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=35><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=35><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=35><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=35><FONT class=extract></FONT></TD>
<TD style="BORDER-RIGHT: #ffffff; BORDER-TOP: #ffffff; BORDER-LEFT: #ffffff; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: transparent" width=35><FONT class=extract></FONT></TD></TR></TBODY></TABLE>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">Once you</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">ve picked your cache and cache line, you have a choice of operations you can perform on it, as shown in Table 4.2. Three operations must be supported by a CPU to claim MIPS32/64 compatibility: that</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">s index invalidate, index store tag, and hit write-back invalidate. Other operations are optional</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8212;<SPAN lang=EN-US>if you use them, check your CPU manual carefully.</SPAN></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">The </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-63; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-63">synci </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">instruction (new to the MIPS32 Release 2 update) provides a clean mechanism for ensuring that instructions you</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">ve just written are correctly presented for execution (it combines a D-cache write-back with an I-cache invalidate). If your CPU supports it, you should use </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-63; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-63">synci </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">in preference to the traditional alternative (a pair of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-63; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-63">cache </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">instructions, to do D-cache write-back followed by an I-cache invalidate).</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt"></SPAN></FONT></P></BODY>