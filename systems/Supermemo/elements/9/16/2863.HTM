5.2 When Exceptions 
<P></P>
<P>Happen Since exceptions are precise, the programmer&#8217;s view of when an exception happens is unambiguous: <FONT class=extract>the last instruction executed before the exception was the one before the exception victim. And, if the exception wasn&#8217;t an interrupt, the victim is the instruction that caused it. </FONT></P>
<P><FONT class=extract><FONT class=extract>On an interrupt in a typical MIPS CPU, the last instruction to be completed before interrupt processing starts will be the one that has just finished its MEM stage when the interrupt is detected.</FONT> The exception victim will be the one that has just finished its ALU stage.</FONT> <FONT class=extract>However, take care: MIPS architects don&#8217;t make promises about exact interrupt latencies, and signals may be resynchronized through one or more clock stages before reaching the CPU core.</FONT>