Since <FONT class=extract>MIPS systems usually run OS code in the untranslated kseg0 memory region</FONT>, the common situation will be a miss by a user-privilege program. Several hardware features are provided,with the aim of speeding up the exception handler in this common case. First, these <FONT class=extract>refill exceptions are vectored through a low memory address used for no other exception.( On the original MIPS architecture, this is the only event deemed worthy of its own entry point.)</FONT> Second, <FONT class=extract>a series of cunning tricks allows the memory-held page table to be located in kernel virtual memory (the kseg2 region or its 64-bit alternative) so that physical memory space is not needed for the parts of the page table that map &#8220;holes&#8221; in the process&#8217;s address map.</FONT> 
<P></P>
<P>And to top it off, <FONT class=extract>the Context or XContext register can be used to give immediate access to the right entry from a memory-held page table.</FONT> We&#8217;ll work through this process in section 6.5. But before we get too far into it, we should note that use of all these features is not compulsory. <FONT class=extract>In a smaller system the TLB can be used to produce a fixed or rarely changing translation from program (virtual) to physical addresses; in these cases it won&#8217;t even need to be a cache<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">.</SPAN></FONT>