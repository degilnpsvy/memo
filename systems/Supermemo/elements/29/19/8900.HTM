<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.7 Symbols</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">BFD tries to maintain as much symbol information as it can when it moves information from file to file. BFD passes information to applications though the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asymbol</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure. When the application requests the symbol table, BFD reads the table in the native form and translates parts of it into the internal format. To maintain more than the information passed to applications, some targets keep some information &#8220;behind the scenes&#8221; in a structure only the particular back end knows about. For example, the coff back end keeps the original symbol table structure as well as the canonical structure when a BFD is read in. On output, the coff back end can reconstruct the output symbol table so that no information is lost, even information unique to coff which BFD doesn't know or understand. If a coff symbol table were read, but were written through an a.out back end, all the coff specific information would be lost. The symbol table of a BFD is not necessarily read in until a canonicalize request is made. Then the BFD back end fills in a table provided by the application with pointers to the canonical information. To output symbols, the application provides BFD with a table of pointers to pointers to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asymbol</CODE>s. This allows applications like the linker to output a symbol as it was read, since the &#8220;behind the scenes&#8221; information will be still available.</P>
<UL class=menu style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI><A accessKey=1 href="https://sourceware.org/binutils/docs-2.23.1/bfd/Reading-Symbols.html#Reading-Symbols">Reading Symbols</A></LI>
<LI><A accessKey=2 href="https://sourceware.org/binutils/docs-2.23.1/bfd/Writing-Symbols.html#Writing-Symbols">Writing Symbols</A></LI>
<LI><A accessKey=3 href="https://sourceware.org/binutils/docs-2.23.1/bfd/Mini-Symbols.html#Mini-Symbols">Mini Symbols</A></LI>
<LI><A accessKey=4 href="https://sourceware.org/binutils/docs-2.23.1/bfd/typedef-asymbol.html#typedef-asymbol">typedef asymbol</A></LI>
<LI><A accessKey=5 href="https://sourceware.org/binutils/docs-2.23.1/bfd/symbol-handling-functions.html#symbol-handling-functions">symbol handling functions</A></LI></UL>