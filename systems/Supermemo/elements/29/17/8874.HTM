<H4 class=subsection style="FONT-SIZE: medium; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.6.2 Section output</H4>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">To write a new object style BFD, the various sections to be written have to be created. They are attached to the BFD in the same way as input sections; data is written to the sections using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_set_section_contents</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Any program that creates or combines sections (e.g., the assembler and linker) must use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asection</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>fields<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>output_section</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>output_offset</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to indicate the file sections to which each section must be written. (If the section is being created from scratch,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>output_section</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>should probably point to the section itself and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>output_offset</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>should probably be zero.)</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The data to be written comes from input sections attached (via<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>output_section</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pointers) to the output sections. The output section structure can be considered a filter for the input section: the output section determines the vma of the output data and the name, but the input section determines the offset into the output section of the data to be written.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">E.g., to create a section "O", starting at 0x100, 0x123 long, containing two subsections, "A" at offset 0x0 (i.e., at vma 0x100) and "B" at offset 0x20 (i.e., at vma 0x120) the<CODE>asection</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structures would look like:</P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">        section name          "A"
          output_offset   0x00
          size            0x20
          output_section -----------&gt;  section name    "O"
                                  |    vma             0x100
        section name          "B" |    size            0x123
          output_offset   0x20    |
          size            0x103   |
          output_section  --------|</PRE>