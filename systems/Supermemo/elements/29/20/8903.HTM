<H4 class=subsection style="FONT-SIZE: medium; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.7.3 Mini Symbols</H4>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Mini symbols provide read-only access to the symbol table. They use less memory space, but require more time to access. They can be useful for tools like nm or objdump, which may have to handle symbol tables of extremely large executables.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_read_minisymbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function will read the symbols into memory in an internal form. It will return a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>void *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pointer to a block of memory, a symbol count, and the size of each symbol. The pointer is allocated using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>malloc</CODE>, and should be freed by the caller when it is no longer needed.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_minisymbol_to_symbol</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will take a pointer to a minisymbol, and a pointer to a structure returned by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_make_empty_symbol</CODE>, and return a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asymbol</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure. The return value may or may not be the same as the value from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_make_empty_symbol</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>which was passed in.