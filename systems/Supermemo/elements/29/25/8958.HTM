<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.12 Targets</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>Each port of BFD to a different machine requires the creation of a target back end. All the back end provides to the root part of BFD is a structure containing pointers to functions which perform certain low level operations on files. BFD translates the applications's requests through a pointer into calls to the back end routines.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">When a file is opened with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_openr</CODE>, its format and target are unknown. BFD uses various mechanisms to determine how to interpret the file. The operations performed are:</P>
<UL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI>Create a BFD by calling the internal routine<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_new_bfd</CODE>, then call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_find_target</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>with the target string supplied to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_openr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and the new BFD pointer.</LI>
<LI>If a null target string was provided to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_find_target</CODE>, look up the environment variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>GNUTARGET</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and use that as the target string.</LI>
<LI>If the target string is still<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NULL</CODE>, or the target string is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>default</CODE>, then use the first item in the target vector as the target type, and set<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>target_defaulted</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the BFD to cause<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_check_format</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to loop through all the targets. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs-2.23.1/bfd/bfd_005ftarget.html#bfd_005ftarget">bfd_target</A>. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs-2.23.1/bfd/Formats.html#Formats">Formats</A>.</LI>
<LI>Otherwise, inspect the elements in the target vector one by one, until a match on target name is found. When found, use it.</LI>
<LI>Otherwise return the error<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error_invalid_target</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_openr</CODE>.</LI>
<LI><CODE>bfd_openr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attempts to open the file using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_open_file</CODE>, and returns the BFD.</LI></UL><SPAN style="DISPLAY: inline! important; FLOAT: none; WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Once the BFD has been opened and the target selected, the file format may be determined. This is done by calling<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><CODE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">bfd_check_format</CODE><SPAN style="DISPLAY: inline! important; FLOAT: none; WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN>on the BFD with a suggested format. If</SPAN><CODE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">target_defaulted</CODE><SPAN style="DISPLAY: inline! important; FLOAT: none; WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN>has been set, each possible target type is tried to see if it recognizes the specified format.<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><CODE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">bfd_check_format</CODE><SPAN style="DISPLAY: inline! important; FLOAT: none; WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><CODE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">TRUE</CODE><SPAN style="DISPLAY: inline! important; FLOAT: none; WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN>when the caller guesses right.</SPAN>
<UL class=menu style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI><A accessKey=1 href="https://sourceware.org/binutils/docs-2.23.1/bfd/bfd_005ftarget.html#bfd_005ftarget">bfd_target</A></LI></UL>