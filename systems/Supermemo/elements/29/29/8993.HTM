<H5 class=subsubsection style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.14.1.5<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_openr_iovec</CODE></H5>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     bfd *bfd_openr_iovec (const char *filename, const char *target,
         void *(*open_func) (struct bfd *nbfd,
         void *open_closure),
         void *open_closure,
         file_ptr (*pread_func) (struct bfd *nbfd,
         void *stream,
         void *buf,
         file_ptr nbytes,
         file_ptr offset),
         int (*close_func) (struct bfd *nbfd,
         void *stream),
         int (*stat_func) (struct bfd *abfd,
         void *stream,
         struct stat *sb));
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>Create and return a BFD backed by a read-only<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stream</VAR>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stream</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is created using<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>open_func</VAR>, accessed using<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>pread_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and destroyed using<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>close_func</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_find_target</CODE>, so<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>target</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is interpreted as by that function.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>open_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(which can call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_zalloc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_get_filename</CODE>) to obtain the read-only stream backing the BFD.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>open_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>either succeeds returning the non-<CODE>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stream</VAR>, or fails returning<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(setting<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error</CODE>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>pread_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to request<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>nbytes</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>of data from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stream</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>starting at<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(e.g., via a call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_read</CODE>).<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>pread_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>either succeeds returning the number of bytes read (which can be less than<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>nbytes</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>when end-of-file), or fails returning -1 (setting<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error</CODE>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>close_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>when the BFD is later closed using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_close</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>close_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>either succeeds returning 0, or fails returning -1 (setting<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error</CODE>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to fill in a stat structure for bfd_stat, bfd_get_size, and bfd_get_mtime calls.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat_func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns 0 on success, or returns -1 on failure (setting<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error</CODE>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_openr_iovec</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>then an error has occurred. Possible errors are<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error_no_memory</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error_invalid_target</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_error_system_call</CODE>.