The first few instructions of an exception handler usually save the values of the CPU&#8217;s general-purpose registers, whose values are likely to be important to the software that was running before the exception. They&#8217;re saved on the <FONT class=clozed>kernel stack </FONT>of the process that was running when the interrupt hit. <FONT class=extract>It&#8217;s in the nature of MIPS that the store operations that save the register require you to use at least one general-purpose register first, which is why the registers called k0 and k1 are reserved for the use of exception handlers.</FONT>The handler also saves the values of some key CP0 registers: SR will be changed in the next section of the exception handler, but the whole at-exception value should be kept intact for when we return. Once that&#8217;s done, we&#8217;re ready to leave exception mode by changing SR, though we are going to leave interrupts disabled.