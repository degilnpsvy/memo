<SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">15.4 Demon Tweaks for a Critical Routine</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">It</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s worth looking quickly at some optimized Linux code to get a feel for how far it</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s worth taking architecture- or CPU-specific tuning.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-8r-0-1000-34; mso-bidi-font-family: Courier-8r-0-1000-34; mso-font-kerning: 0pt">clear page() </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">routine is heavily used in the Linux kernel. Pages filled with zero are directly required for the </SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>uninitialized</SPAN>&#8221;<SPAN lang=EN-US> portion of application data spaces, and it</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s also used as a way of cleaning ex-application pages to avoid accidental leakage of data from one application to another (which would violate the security policy).</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">This implementation of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-8r-0-1000-34; mso-bidi-font-family: Courier-8r-0-1000-34; mso-font-kerning: 0pt">clear page()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">uses several ideas. It unrolls loops</SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>each iteration of the loop clears a whole cache line (in this case, that</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s 32 bytes, eight words).</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">It also uses the MIPS-specific </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">pref </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">operation to avoid waiting on cache traffic. If prefetch really does need to read data from memory, that</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s going to take a long time compared with the CPU execution rate: So we</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">ll prefetch a long way ahead. In this case, </SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>a long way</SPAN>&#8221;<SPAN lang=EN-US> is 512 bytes, 16 cache lines.</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">But if the CPU can understand it, the prefetch hint is the specialized </SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>prefetch for store</SPAN>&#8221;<SPAN lang=EN-US> version, which makes a cache entry for a line without actually reading any data in (it relies on the programmer</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s promise to overwrite the whole cache line)</SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>see section 8.5.8.</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Here</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s the function with added commentary. Bear in mind that </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-8r-0-1000-34; mso-bidi-font-family: Courier-8r-0-1000-34; mso-font-kerning: 0pt">PAGE SIZE </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">is usually 4,096.</SPAN></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">#define PREF_AHEAD 512</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">clear_page:</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># the first loop (main_loop) stops short so as not to prefetch off</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># end of page</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">addiu a2, a0, PAGE_SIZE - PREF_AHEAD</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">main_loop:</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># the prefetch. Bring in cache line, but with luck we won</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-36; mso-ascii-font-family: Courier-Bold-8r-0-1000-36">&#8217;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">t read</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># memory. But if all this CPU offers is a simple prefetch, that</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># should work too.</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">pref Pref_PrepareForStore, PREF_AHEAD(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># now we</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-36; mso-ascii-font-family: Courier-Bold-8r-0-1000-36">&#8217;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">re going to do eight stores</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 0(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 4(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 8(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 12(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">addiu a0, a0, 32 # some CPUs choke on too many writes at</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># full-speed, so increment the loop pointer</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># in the middle to give it a break.</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -16(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -12(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -8(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">bne a2, a0, main_loop</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -4(a0) # last store in the branch delay slot</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># the second (end) loop does the rest, and has no prefetch which</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt"># would overrun.</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">addiu a2, a0, PREF_AHEAD</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">end_loop:</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 0(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 4(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 8(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, 12(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">addiu a0, a0, 32</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -16(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -12(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero,-8(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">bne a2, a0, end_loop</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">sw zero, -4(a0)</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">jr ra</SPAN></B></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-Bold-8r-0-1000-36; mso-bidi-font-family: Courier-Bold-8r-0-1000-36; mso-font-kerning: 0pt">nop</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt">&nbsp;</SPAN>