<FONT class=extract><I><SPAN style="FONT-FAMILY: Minion-Italic-0-1000-42; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Italic-0-1000-42; mso-font-kerning: 0pt" lang=EN-US>Memory map/address space</SPAN></I><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>: The map of memory locations available to a particular Linux thread. The address space of a thread is defined through a </SPAN><SPAN style="FONT-FAMILY: Courier-8r-0-1000-45; FONT-SIZE: 16pt; mso-bidi-font-family: Courier-8r-0-1000-45; mso-font-kerning: 0pt" lang=EN-US>mm struct</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>, pointed to by the thread.</SPAN></FONT> 
<P></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>For Linux OS ported to the MIPS architecture (hereinafter, </SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Linux/MIPS</SPAN>&#8221;<SPAN lang=EN-US>) on a 32-bit processor, the high half of the address space (addresses with bit 31 set) can be read and written only in kernel-privilege mode. The kernel code/data is normally in the corner of this, known as kseg0, which means the kernel itself does not depend on addresses translated through the TLB.</SPAN></SPAN></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>The user part of the address space is mapped differently for each application</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>only threads that collaborate in an explicitly multithreaded application share the user address space (i.e., they point to the same </SPAN></SPAN><SPAN style="FONT-FAMILY: Courier-8r-0-1000-45; FONT-SIZE: 16pt; mso-bidi-font-family: Courier-8r-0-1000-45; mso-font-kerning: 0pt" lang=EN-US>mm struct</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>). But all Linux threads share the same kernel map.</SPAN></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>A thread running a conventional single-threaded application runs in an address space that is distinct from all other threads and is exactly what older UNIX-like systems called a </SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>process.</SPAN>&#8221;<SPAN lang=EN-US></SPAN></SPAN></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>At any given time, much of an application</SPAN><SPAN style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>s address space may not in fact be mapped, or even not represented by any data present in physical memory at all. An attempt to access that will cause a TLB exception, which will be handled by the OS, which will load any missing data and set up an appropriate mapping before it returns to the application. That is, of course, </SPAN><I><SPAN style="FONT-FAMILY: Minion-Italic-0-1000-42; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Italic-0-1000-42; mso-font-kerning: 0pt" lang=EN-US>virtual memory</SPAN></I><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-19; FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt" lang=EN-US>.</SPAN>