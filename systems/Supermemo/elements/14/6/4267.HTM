<I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">Loaded explicitly</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">: The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier-8r-0-1000-45; mso-bidi-font-family: Courier-8r-0-1000-45; mso-font-kerning: 0pt">dlopen() </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">routine finds a library link unit and glues it into the program, building a data structure that includes pointers to the functions the new program will export.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Such a link unit is working very much like a C++ object (the function pointers are reminiscent of C++ methods)</SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>that</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s why link units are sometimes called dynamic shared objects.</SPAN>