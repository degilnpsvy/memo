<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">mtc0 t,cd<BR>mtc1 t,fd<BR>mtc2 t,cd</SPAN></P></TD><TD style="BORDER-TOP: #ffffff; HEIGHT: 85.5pt; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #ffffff; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">Move 32 bits from general-purpose register t to coprocessor register cd.<BR>Note that this instruction doesn't obey the usual convention of writing the destination register first.<BR>mtc0 is for the CPU control registers, mtc1 is for putting integer data into floating-point registers (although they're more often loaded directly from memory), and mtc2 is implemented only if the CPU uses coprocessor 2 instructions (very rare).<BR>If the coprocessor register is 64 bits wide, the data is loaded into the low bits, but the state of the high 32 bits is not defined.</SPAN></P></TD>