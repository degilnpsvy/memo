<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">3.2 Which Registers Are Relevant When?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">These are the registers you will need to consult in the following circumstances:</SPAN></P>
<p><I><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: &#26041;&#27491;&#33298;&#20307;; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">&#65290;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">After power-up</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">: You</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">ll need to set up </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">SR </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">to get the CPU into a workable state for the rest of the bootstrap process. It</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s common practice for the hardware to leave many register bits undefined following reset.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">MIPS32 CPUs other than the earliest have one or more configuration registers: </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">Config </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">Config1</SPAN></B><B><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Bold-0-1000-21; mso-bidi-font-family: Minion-Bold-0-1000-21; mso-font-kerning: 0pt">&#8211;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">3</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">. Some CPUs may have more, with CPU-specific fields (</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">Config7 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">is sometimes used for particularly CPU specific fields).</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">The first </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">Config </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">register has a few writable fields, which you may need to set before very much will work. Consult your hardware engineer about making sure that the CPU and system agree enough about configuration to get to the point of writing these registers!</SPAN></P>
<p><I><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: &#26041;&#27491;&#33298;&#20307;; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">&#65290;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">Handling any exception</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">: In the early MIPS CPUs any exception (apart from one particular MMU event) invoked a single common </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>general exception handler</SPAN>&#8221;<SPAN lang=EN-US> routine at a fixed address. But in the years since then many reasons have been found to add separate handlers for different purposes; see section 5.3.</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">On entry, no program registers have been saved, only the restart address in </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">EPC</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">. The MIPS hardware knows nothing about stacks. In any case, in a secure OS the privileged exception handler can</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">t assume anything about the integrity of the user-level code</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>so, in particular, it can</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">t assume that the stack pointer is valid or that stack space is available.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">You need to use at least one of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">k0 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">k1 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">to point to some memory space reserved to the exception handler. Now you can save things, using the other </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">k0 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">or </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">k1 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">register to stage data from control registers where necessary.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Consult the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">Cause </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">register to find out what kind of exception it was and dispatch accordingly.</SPAN></P>
<p><I><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: &#26041;&#27491;&#33298;&#20307;; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">&#65290;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">Returning from exception</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">: Control must eventually be returned to the value stored in </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">EPC </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">on entry. Whatever kind of exception it was, you will have to adjust </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">SR </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">back when you return, restoring the user-privilege state, enabling interrupts, and generally unwinding the exception effect. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Finally, the return-from-exception instruction </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">eret</SPAN></B><B><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">&#65288;<SPAN lang=EN-US>exception return</SPAN>&#65289; </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">combines the return to user space and resetting of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">SR(EXL)</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">.</SPAN></P>
<p><I><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: &#26041;&#27491;&#33298;&#20307;; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">&#65290;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">Interrupts</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">: </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">SR </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">is used to adjust the interrupt masks, to determine which (if any) interrupts will be allowed higher priority than the current one. The hardware offers no interrupt prioritization, but the software can do whatever it likes.</SPAN></P>
<p><I><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: &#26041;&#27491;&#33298;&#20307;; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">&#65290;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">Instructions just there to cause exceptions</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">: These are often used (for system calls, debug breakpoints, and to emulate some kinds of instruction). All MIPS CPUs have implemented instructions called </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">break </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-46; mso-bidi-font-family: Courier-Bold-8r-0-1000-46; mso-font-kerning: 0pt">syscall</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">; some implementations have added extra ones.</SPAN></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Futura-CondensedBold-0-1000-15; mso-bidi-font-family: Futura-CondensedBold-0-1000-15; mso-font-kerning: 0pt">Encoding of Control Registers</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: FuturaBook-0-1000-26; mso-bidi-font-family: FuturaBook-0-1000-26; mso-font-kerning: 0pt">A note about reserved fields is in order here. Many unused control register fields are marked</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: FuturaBook-0-1000-26; mso-bidi-font-family: FuturaBook-0-1000-26; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>0.</SPAN>&#8221;<SPAN lang=EN-US> Bits in such fields are guaranteed to read zero, and it is harmless to write them (though the value written is ignored). Other reserved fields are marked </SPAN>&#8220;<SPAN lang=EN-US>reserved</SPAN>&#8221;<SPAN lang=EN-US> or </SPAN>&#8220;</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: TMMathSy-0-1000-32; mso-bidi-font-family: TMMathSy-0-1000-32; mso-font-kerning: 0pt">&#215;</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: FuturaBook-0-1000-26; mso-bidi-font-family: FuturaBook-0-1000-26; mso-font-kerning: 0pt">&#8221;<SPAN lang=EN-US>; you should take care to always write such a field as either zero or a value you previously read from it. But you should not assume that you will get back zero or any other particular value.</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt"></SPAN>