<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">2.3 Integer Multiply Unit and Registers</SPAN> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">The MIPS architects decided that integer multiplication was important enough to deserve a hardwired instruction. This was not universal in 1980s, RISCs. One alternative was to implement a multiply step that fits in the standard integer execution pipeline but mandates software routines for every nontrivial multiplication; early SPARC CPUs did just that.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Another way of avoiding the complexity of the integer multiplier would be to perform integer multiplication in the floating-point unit</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>a good solution used in Motorola</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s short-lived 88000 family</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>but that would compromise the optional nature of the MIPS floating-point coprocessor.</SPAN></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Instead, <FONT class=extract>a MIPS CPU has a special-purpose integer multiply unit, which is not quite integrated with the main pipeline. The multiply unit</FONT></SPAN><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">s basic operation is to multiply two register-sized values together to produce a twice-registersized result, which is stored inside the multiply unit. The instructions </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">mfhi</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">, </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">mflo </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">retrieve the result in two halves into specified general registers.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Since multiply results are not returned so fast as to be automatically available for any subsequent instruction, the multiply result registers are and always were </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-24; mso-bidi-font-family: Minion-Italic-0-1000-24; mso-font-kerning: 0pt">interlocked</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">. An attempt to read out the results before the multiplication is complete results in the CPU being stopped until the operation completes.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">The integer multiply unit will also perform an integer division between values in two general-purpose registers; in this case the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">lo </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">register stores the result (quotient) and the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">hi </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">register stores the remainder.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">You don</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">t get a multiply unit answer out in one clock: multiply takes 4</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8211;<SPAN lang=EN-US>12 clock cycles and division 20</SPAN>&#8211;<SPAN lang=EN-US>80 clock cycles (it depends on the implementation, and for some implementations it depends on the size of the operands). Some CPUs have fully or partially pipelined multiply units</SPAN>&#8212;<SPAN lang=EN-US>that is, they can start a multiply operation every one or two clocks, even though the result will not arrive for four or five clocks.</SPAN></SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">MIPS32/64 includes a three-operand </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">mul </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">instruction, which returns the low half of the multiply result to a general-purpose register. But that instruction must stall until the operation is finished; highly tuned software will still use separate instructions to start the multiply and retrieve the results. MIPS32/64CPUs (and most other CPUs still on the market) also have multiply-accumulate operations, where products from successive multiply operations are accumulated inside the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">lo</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">/</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">hi </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">pair.</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt"><FONT class=extract>Integer multiply and divide operations never produce an exception: not even divide by zero (though the result you get from that is unpredictable).Compilers will often generate additional instructions to check for and trap on errors, particularly on divide by zero.</FONT></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Instructions </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">mthi</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">, </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">mtlo </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">are defined to set up the internal registers from general-purpose registers. They are essential to restore the values of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">hi </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-34; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt">lo </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">when returning from an exception but probably not for anything else.</SPAN></FONT><SPAN lang=EN-US style="FONT-SIZE: 14pt"></SPAN>