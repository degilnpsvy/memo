&#32473;&#20986;&#31243;&#24207;&#30340;&#25191;&#34892;&#32467;&#26524; 
<P></P>
<P>&nbsp;1#include &lt;iostream&gt;<BR>&nbsp;2<BR>&nbsp;3using namespace std;<BR>&nbsp;4<BR>&nbsp;5class Sales_item<BR>&nbsp;6{<BR>&nbsp;7 public:<BR>&nbsp;8&nbsp; Sales_item();<BR>&nbsp;9&nbsp; Sales_item(const Sales_item&amp;);<BR>10&nbsp; ~Sales_item();<BR>11&nbsp; Sales_item&amp; operator=(const Sales_item &amp;);<BR>12&nbsp; void out();<BR>13 private:<BR>14&nbsp; int item_no;<BR>15};<BR>16<BR>17Sales_item::Sales_item()<BR>18{<BR>19&nbsp; item_no=1;<BR>20}<BR>21<BR>22Sales_item::Sales_item(const Sales_item&amp; item)<BR>23{<BR>24&nbsp; item_no=item.item_no+1;<BR>25&nbsp; cout&lt;&lt;"constructor: "&lt;&lt;item_no&lt;&lt;endl;<BR>26}<BR>27<BR>28Sales_item::~Sales_item()<BR>29{<BR>30&nbsp; cout&lt;&lt;item_no&lt;&lt;" dismissed..."&lt;&lt;endl;<BR>31}<BR>32<BR>33void Sales_item::out()<BR>34{<BR>35&nbsp; //&nbsp; item_no++;<BR>36&nbsp; cout&lt;&lt;item_no&lt;&lt;endl;<BR>37}<BR>38<BR>39Sales_item&amp; Sales_item::operator=(const Sales_item &amp;item)<BR>40{<BR>41&nbsp; if(this!=&amp;item)<BR>42&nbsp;&nbsp;&nbsp; {<BR>43&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Sales_item temp(item);<BR>44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout&lt;&lt;"operator=:"&lt;&lt;temp.item_no&lt;&lt;endl;<BR>45&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this-&gt;item_no=temp.item_no+1;<BR>46&nbsp;&nbsp;&nbsp; }<BR>47&nbsp; return *this;<BR>48}<BR>49<BR>50int main()<BR>51{<BR>52&nbsp; Sales_item a;<BR>53&nbsp; Sales_item b;<BR>54&nbsp; b=a;<BR>55&nbsp; Sales_item c=b;<BR>56&nbsp; a.out();<BR>57&nbsp; b.out();<BR>58&nbsp; c.out();<BR>59}