<HEAD></HEAD>
<BODY><B><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: Times-Bold~30; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~30">Chapter 1 Naming Convention</SPAN></B> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">The purpose of a consistent naming convention is to enhance clarity and readability of the code under development and to ease maintenance effort along the development cycle of the project over time. <FONT class=extract>A good naming convention not only can serve as comments of a sort but also can reduce the possibility of name collision under collateral development.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Local variable names can be shorter, because they are used only within one context.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Global variable names should follow the general naming rule which is described in the following subsection.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Try to use abbreviations in symbol names as long as they are self-explanatory.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Use underscore to separate words in a name.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Use lower cases for variables</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Use upper cases for macros and enum constants.</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54">General Naming Rule</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The general rule for naming a file, a function, and a variable is shown as follows:</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>PREFIX_MODULE_NAME</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>Examples are shown below:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>File: rlx_cp3_perflib.c</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>Function: void rlx_cp3_init(void);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>Variable: unsigned int rlx_cp3_counters[8];</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>Prefix</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The purpose of the prefix identifier is to roughly categorize the items of interest into separate projects. The use of a prefix is to isolate proprietary source codes from public-domain ones and to indicate which project the particular file, function, or variable belongs to. The choice of prefix should come from a group-wise consensus.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The list of proposed prefix is shown as follows:</FONT></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">rlx</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: for general purpose sources</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">rsdk</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: for RSDK project</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">rlxsc | rsc | sc</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: for RLX SystemC project</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">rlxsim | rsim | iss | sim</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: for RLX Simulator project</SPAN></FONT></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>Module</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The purpose of the module identifier is to further categorize the items of interest into finer sub-groups. The choice of module name is left to the project members. Module name can be omitted if necessary.</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54">File</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">File Name</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">The choice of a file name should follow the standard naming rule. Example:</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">rlx_cp3_perflib.c</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">File Extension</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">Each source file should have a legitimate file extension except Makefile. The list of the proposed file extensions is summarized as follows:</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">.h</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: header files</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">.c</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: c source file</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">.cpp</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: C++ source file</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">.S | .s</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: assembly code</SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">.pl | .pm</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: perl source and module</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">.mk</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: second level makefiles.</SPAN></FONT></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54"><FONT class=extract>Function</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>Each global function should follow the general naming rule. Each static, local, or member functions of C++ class may or may not follow the general naming rule for the sake of reducing the length of function names.</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54"><FONT class=extract>Variable</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>Each global variable should follow the general naming rule. Each static, local, or member functions of C++ class may or may not follow the general naming rule for the sake of reducing the length of variable names.</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54">C++ Class</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">C++ is a different beast from C. Therefore, it deserves special attention on its naming convention.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>Class</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>There are two choices in the naming of a C++ class. They are summarized as follows:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Capitalize the first letter of the words in a symbol.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>class MyClass</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>{</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; public:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; MyClass();</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; ~MyClass();</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; int hehe;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; private:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; int haha;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>}</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. Use underscore to connect words in a symbol.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>class my_class</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>{</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; public:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; my_class();</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; ~my_class();</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; int hehe;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; private:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; int haha;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>}</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">Member variable</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">C++ member variables are considered local variables. Developers may or may not apply the general naming rules.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">Member function</SPAN></B></P>
<P><SPAN lang=EN-US style="mso-font-kerning: 0pt"><FONT size=3>C++ member functions are considered local functions. Developers may or may not apply the general naming rules.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="mso-font-kerning: 0pt"><FONT size=3>&nbsp;</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: Times-Bold~30; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~30">Chapter 2 Coding Style</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The general coding rules are listed as follows:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. each level of indentation should shift two spaces to the right.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. open-brace '{' for functions should start at column one.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. open-brace '{' for others should start at a newline with one incremented level of indentation.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. all defined macros or variables should be in upper case.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. parentheses and braces may be applied to enhance readability whenever necessary.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The proposed coding guide for header and source files is described in the following sections respectively. An example of a C source file following the coding rules is shown below:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>static void</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>lx5280_check_regno_in_asm(char *buffer)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>{</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; char *asm_string; /* An inline asm */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; int i = 0;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; asm_string = (char *) xmalloc(strlen(buffer) + 1);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; while (*buffer)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (*buffer != '\n')</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; asm_string[i++] = *buffer;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; buffer++;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* sunling: <?xml:namespace prefix = st1 /><st1:chsdate Year="2006" Month="6" Day="22" IsLunarDate="False" IsROCDate="False" w:st="on">2006-06-22</st1:chsdate> added. */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if (*buffer == '\0')</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>asm_string[i] = '\0';</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>/* sunling: <st1:chsdate Year="2006" Month="6" Day="22" IsLunarDate="False" IsROCDate="False" w:st="on">2006-06-22</st1:chsdate> added. */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>continue;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>}</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; asm_string[i] = '\0';</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>i = 0;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>buffer++;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>check_regno(asm_string);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/* Perhaps contains no "\n", check. */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; check_regno(asm_string);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; free(asm_string);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; asm_string = (char *) 0;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>}</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54"><FONT class=extract>Header File</FONT></SPAN></B></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">A header file should start with proper copyright header, a brief comment of the overall purpose, then, the header body. A special variable, </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">_HEADER_FILE_NAME_H_</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">, should be tested and defined at the beginning of the header file to avoid multiple inclusion. For example:</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#ifndef _HEADER_FILE_H_</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#define _HEADER_FILE_H_</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#endif</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>Below is an example of what a header file should look like:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Copyright (c) YEAR, Realtek Semiconductor Corp.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* header_file.h:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Header file for header project</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Tony Wu (tonywu@realtek.com.tw)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Jun. 20, 2006</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* brief comment of the file</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#ifndef _HEADER_FILE_H_</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#define _HEADER_FILE_H_</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Header file body</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#endif</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54"><FONT class=extract>Source File</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Copyright (c) YEAR, Realtek Semiconductor Corp.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* header_file.h:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Header file for header project</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Tony Wu (tonywu@realtek.com.tw)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Jun. 20, 2006</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* brief comment of the file</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* source file body</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54"><FONT class=extract>Comment</FONT></SPAN></B></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">The </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">/* </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">*/ </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">format is adopted for both single-line and multi-line comments to ensure maximal ANSI-C compatibility. The same format is also suggested for the C++ programs. Comments should be added before or after a line or a block of lines, at the end of a line. For examples:</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. single-line comment</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/* single-line comment */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. single-line comment after code</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>printf("the root of all evils"); /* single-line comment after code */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. multiple-line comment</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* multi-line comment: here is line 1;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* here is line 2</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* here is line 3</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*/</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>Comments should not be added in the middle of a line. For example:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>if ( /* case A: blah blah */ A)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>{</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>}</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>When and where to add comments:</FONT></SPAN></B></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">at the beginning of a file</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: please write a brief comment at the start of each source file, with the file name and a line or two about the overall purpose of the file.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">on a function declaration</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: there should be a comment on each function saying what the function does, what sorts of arguments it gets, and what the possible values of arguments mean and are used for. Also explain the signi_cance of the return value, if there is one.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">at the closing-brace '}' of nested loops</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: there should have a comment at the closing-brace of nested loops.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">at the closing #endif</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: every #endif should have a comment, except in the case of short conditionals. The comment should state the condition of the conditional that is ending, including its sense.</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#ifdef foo</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#else /* not foo */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>#endif /* not foo */</FONT></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">before a line or a block of lines</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: if necessary, a brief comment can be added before a line or a block of lines that serves the purpose to explain what the line or the block of line does.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35">before and after modifications</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">: there should be a comment before and after the modification that is applied to the original source code. The format of the comment is shown as follows:</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>static char *</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>concat(char *s1, char *s2)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>{</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; ...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; /* <st1:chsdate Year="2006" Month="6" Day="20" IsLunarDate="False" IsROCDate="False" w:st="on">2006-06-20</st1:chsdate> tonywu: change this to fulfill everybody */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; return("the root of all evil");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; /* <st1:chsdate Year="2006" Month="6" Day="20" IsLunarDate="False" IsROCDate="False" w:st="on">2006-06-20</st1:chsdate> tonywu: change this to fulfill everybody */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>}</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Times-Bold~54; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~54">Indentation</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">The purpose indentation style for the source files is GNU coding style.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>Function definitions</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. The open-brace '{' that starts the function body should be at column one.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. The function name should start at column one.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The example of function definition is shown as follows:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>static char *</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>concat(char *s1, char *s2) /* name starts in column one */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>{ /* open brace in column one */</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; ...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>}</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Bold~35; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~35"><FONT class=extract>Function body</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>. general example:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>if (x &lt; foo (y, z))</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; haha = bar[4] + 5;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>else</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; while (z)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; haha += foo(z, z);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>z--;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>}</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; return ++x + bar();</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. <FONT class=extract>if statement:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>if (foo_this_is_long &amp;&amp; bar &gt; win(x, y, z)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; &amp;&amp; remaining_condition)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; ...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; bogus statements here;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; ...</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. <FONT class=extract>if-nested statement:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>if (foo_this_is_long)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; printf("no, it is not that long\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>else</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; if (foo_this_is_short)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; printf("no, it is not that short\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>if (foo_this_is_long)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; if (foo_this_is_very_long)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; printf("no, it is not very long\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. <FONT class=extract>do-while statement:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>do</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; a = foo(a);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>while (a &gt; 0);</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. <FONT class=extract>switch-case statement:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>switch</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; case 1:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("this is case 1\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; case 2:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf("this is case 2\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; case 3:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; printf("this is case 3\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("and it has its own scope\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. <FONT class=extract>structure de_nition:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>static const char *counter_table[] = {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; " CPU cycles.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Instructions.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Icache Misses.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Icache Miss Busys.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Data Stores.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Data Loads.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Data Loads or Stores.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Dcache Misses.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" Dcache Miss Busys.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>" undefined.",</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp; </SPAN>NULL</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>};</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman">. <FONT class=extract>long expression:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Times-Roman; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Roman"><FONT class=extract>The GNU coding standards recommend breaking the expression before the operator. Example is shown as follows:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>if (!retval</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; not_a_struct</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>&amp;&amp; (type == "any" || type == "file")</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>&amp;&amp; (sr-&gt;is_user_function () || sr-&gt;is_dld_function ()))</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; {</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; printf("do something here\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;&nbsp;&nbsp; printf("do something here\n");</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp; }</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: Times-Bold~30; mso-font-kerning: 0pt; mso-bidi-font-family: Times-Bold~30">Appendix A <FONT class=extract>Copyright Header</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>/*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Copyright (c) YEAR, Realtek Semiconductor Corp.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* file_name:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* a brief comment</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Author Name (author@realtek.com.tw)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Revision Date</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Modifier Name (modifier@realtek.com.tw)</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier"><FONT class=extract>&nbsp;* Revision Date</FONT></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&nbsp;*/</SPAN><SPAN lang=EN-US style="mso-font-kerning: 0pt"></SPAN></FONT></P></BODY>