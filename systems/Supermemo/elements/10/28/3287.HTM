<B><SPAN style="FONT-FAMILY: Minion-Bold-0-1000-22; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Bold-0-1000-22; mso-font-kerning: 0pt" lang=EN-US>8.2.3 </SPAN></B><B><I><SPAN style="FONT-FAMILY: Minion-BoldItalic-0-1000-51; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-BoldItalic-0-1000-51; mso-font-kerning: 0pt" lang=EN-US>Inventory of Instructions</SPAN></I></B> 
<P></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>In the assembly descriptions we use the conventions given in Table 8.1. Table 8.2 gives a full inventory of the instruction descriptions in mnemonic order.</SPAN></P>
<P><FONT class=extract><B><SPAN style="FONT-FAMILY: Minion-Bold-0-1000-22; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Bold-0-1000-22; mso-font-kerning: 0pt" lang=EN-US>TABLE 8.1 </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>Conventions Used in Instruction Tables</SPAN></FONT></P>
<TABLE style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-COLLAPSE: collapse; BORDER-TOP: medium none; BORDER-RIGHT: medium none; mso-border-alt: solid windowtext .5pt; mso-yfti-tbllook: 480; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt; mso-border-insideh: .5pt solid windowtext; mso-border-insidev: .5pt solid windowtext" class=MsoTableGrid border=1 cellSpacing=0 cellPadding=0>
<TBODY>
<TR style="mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt" vAlign=top>
<P><B><I><SPAN style="FONT-FAMILY: Minion-BoldItalic-0-1000-51; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-BoldItalic-0-1000-51; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Word</FONT></SPAN></I></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt" vAlign=top>
<P><B><I><SPAN style="FONT-FAMILY: Minion-BoldItalic-0-1000-51; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-BoldItalic-0-1000-51; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Used for</FONT></SPAN></I></B></P></TD></TR>
<TR style="mso-yfti-irow: 1">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>s</SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>, </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>t</SPAN></B></FONT></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>CPU registers used as operands.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 2">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>CPU register that receives the result.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 3">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>j</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>Immediate</SPAN>&#8221;<SPAN lang=EN-US> constant.</SPAN></FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 4">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>label</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>The name of an entry point in the instruction stream.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 5">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>shf</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>For shift/rotate/extract/insert instructions, this is the amount of the implied shift operation, in bits.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 6">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sz</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>For extract/insert instructions, this is the size of the field being manipulated, in bits.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 7">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>offs</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>A signed 16-bit PC-relative word offset representing the distance in words (one word per instruction) to a label.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 8">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>addr</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>One of a number of different legitimate data address expressions usable when writing load/store (or load address) instructions in assembly. (See section 9.4 for a description of how the assembler implements the various options.)</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 9">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>at</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>The assembly temporary register, which is really </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>$1</SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>.</SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 10">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>zero</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>This register, </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>$0</SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>, always contains a zero value.</SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 11">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ra</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>The return address register </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>$31</SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>.</SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 12">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>hilo</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>The double-precision integer multiply result formed by concatenating </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>hi </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>and </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>lo</SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>. Each of </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>hi </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>and </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>lo </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>holds the same number of bits as a machine register, so </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>hilo </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>can hold a 64-bit integer on a 32-bit machine and a 128-bit result on a 64-bit machine.</SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 13">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>MAXNEG32BIT</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top rowSpan=2>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>The most negative number representable in twos complement arithmetic, 32- and 64-bit, respectively. It</SPAN><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>s a feature of twos complement numbers that the positive number </SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-fareast-font-family: TMMathSy-0-1000-40" lang=EN-US>&#8722;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>MAXNEG32BIT is not representable in 32 bits.</SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 14">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>MAXNEG64BIT</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 15">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>cd</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Coprocessor register that is written by instruction.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 16">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>cs</FONT></SPAN></B></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Coprocessor register that is read by instruction.</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 17">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>exception(CAUSE, code)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top rowSpan=2>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>Take a CPU trap; CAUSE determines the setting of the </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-34; FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-34; mso-font-kerning: 0pt" lang=EN-US>Cause(ExcCode) </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>register field. </SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>code</SPAN>&#8221;<SPAN lang=EN-US> is a value not interpreted by the hardware, but rather one encoded in a don</SPAN></SPAN><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>t-care field of the instruction, where system software can find it by reading the instruction. Not every such instruction sets a </SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>code</SPAN>&#8221;<SPAN lang=EN-US> value, so sometimes we</SPAN></SPAN><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>ll leave it out.</SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 18">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>exception(CAUSE)</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 19; mso-yfti-lastrow: yes">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><I><SPAN style="FONT-FAMILY: Minion-Italic-0-1000-32; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Italic-0-1000-32; mso-font-kerning: 0pt" lang=EN-US>const</SPAN></I><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>31..16</SPAN></FONT></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>Denotes the number obtained by just using bits 31 through 16 of the binary number </SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>const.</SPAN>&#8221;<SPAN lang=EN-US> The MIPS books use a similar convention.</SPAN></SPAN><SPAN style="FONT-SIZE: 14pt" lang=EN-US></SPAN></FONT></P></TD></TR></TBODY></TABLE>
<P><SPAN style="FONT-SIZE: 14pt" lang=EN-US><FONT class=extract>&nbsp;</FONT></SPAN></P>
<P><B><SPAN style="FONT-FAMILY: Minion-Bold-0-1000-22; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Bold-0-1000-22; mso-font-kerning: 0pt" lang=EN-US>TABLE 8.2 </SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>Assembly Instructions in Alphabetical Order</SPAN></P>
<TABLE style="BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; MARGIN: auto auto auto 4.85pt; BORDER-COLLAPSE: collapse; BORDER-TOP: medium none; BORDER-RIGHT: medium none; mso-border-alt: solid windowtext .5pt; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt; mso-border-insideh: .5pt solid windowtext; mso-border-insidev: .5pt solid windowtext" class=MsoNormalTable border=1 cellSpacing=0 cellPadding=0>
<TBODY>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Assembly/Machine Code</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Description</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 107.25pt; mso-yfti-irow: 1">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 107.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>abs d,s =&gt;<BR>sra $at,s,31<BR>xor d,s,$at<BR>subu d,d,$at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 107.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s &lt; 0 ? -s: s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 2">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>add d,s,j =&gt;<BR>addi d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Traps on overflow, rare<BR>d = s + (signed)j;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 3">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>add d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Traps on overflow, rare<BR>d = s + t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 4">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>addu d,s,j =&gt;<BR>addiu d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>You can also write this with j outside the range -32768</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8804;</FONT><SPAN lang=EN-US><FONT class=extract>j&lt;32768, but the code generated gets more complicated.<BR>d = s + (signed)j;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 5">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>addu d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s + t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 6">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>and d,s,j =&gt;<BR>andi d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>For 0 </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8804;<SPAN lang=EN-US> j &lt; 65535</SPAN>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>for larger numbers, extra instructions will be generated.<BR>d = s &amp; (unsigned) j;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 7">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>and d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s &amp; t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 8">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>b label =&gt;<BR>beq<BR>$zero,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 9">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bal label =&gt;<BR>bgezal $zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Function call (limited range but PC-relative addressing). Note that the return address that is left in ra is that of the next instruction but one: The next instruction in memory order is in the branch delay slot and gets executed before the function is invoked.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 10">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bc0f label<BR>bc0fl label<BR>bc0t label<BR>bc0tl label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Branch on coprocessor 0 condition. On old CPUs, this tested the state of a CPU input pin. No longer part of MIPS32 or MIPS64.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 11">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bc1f $fccN,label<BR>bc1fl $fccN,label<BR>bc1t $fccN,label<BR>bc1tl $fccN,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Branch on floating-point (coprocessor 1) condition set/true (t) or clear/false (f); described in section 7.9.7. Modern FPUs have multiple FP condition bits, selected by N = 0..7. Older code only uses condition bit 0, and then the </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>$fccN,</SPAN>&#8221;<SPAN lang=EN-US> can be omitted. The suffix </SPAN>&#8220;<SPAN lang=EN-US>l</SPAN>&#8221;<SPAN lang=EN-US> in bc1fl and so on indicates a branch-likely instruction; see section 8.5.4 for details, but note that the MIPS32/64 specifications deprecate branch-likely, and recommend programmers and compilers not to generate the instruction on code that may be ported to more than one implementation of the MIPS architecture.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 12">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bc1any2f $fccN,label<BR>bc1any2t $fccN,label<BR>bc1any4f $fccN,label<BR>bc1any4t $fccN,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>MIPS-3D instructions, which branch on the </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>OR</SPAN>&#8221;<SPAN lang=EN-US> of two or four conditions. See section 7.10.4.</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 13">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bc2f label<BR>bc2fl label<BR>bc2t label<BR>bc2tl label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Branch on coprocessor 2 condition. Useful only if a CPU uses the CP2 instruction set or offers an external pin. See bc1f and so on above for details.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 14">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>beq s,t,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s == t) goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 15">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>beql s,t,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variants of conditional branch above.<BR>The delay slot instruction is only executed if the branch is taken; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 16">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>beqz s,label =&gt;<BR>beq s,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s == 0) goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 17">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>beqzl</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Branch-likely variant of beqz; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 18">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bge s,t,label =&gt;<BR>slt at,s,t<BR>beq at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if ((signed) s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (signed) t) goto label;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 19">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgel s,t,label =&gt;<BR>slt at,s,t<BR>beql at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract><FONT class=extract>&#8220;<SPAN lang=EN-US>Likely</SPAN>&#8221;<SPAN lang=EN-US> form of bge, even though that instruction is itself a macro. Deeply deprecated, even though the assembler supports it. See section 8.5.4.</SPAN></FONT></FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 20">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgeu s,t,label =&gt;<BR>sltu at,s,t<BR>beq at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((unsigned) s </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8805;</FONT><SPAN lang=EN-US><FONT class=extract> (unsigned) t)<BR>goto label;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 21">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgez s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if (s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> 0) goto label;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 22">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgezal s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>If (s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> 0) call to "label()." But note that the </SPAN>&#8220;<SPAN lang=EN-US>return address</SPAN>&#8221;<SPAN lang=EN-US> is unconditionally saved in the register ra ($31).</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 23">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgezall s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variant; see section 8.5.4. It's hard to see what this instruction is good for.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 24">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgezl s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variant; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 25">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgt s,t,label =&gt;<BR>slt at,t,s<BR>bne at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((signed) s &gt; (signed) t)<BR>goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 26">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgtu s,t,label =&gt;<BR>slt at,t,s<BR>beq at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((unsigned) s &gt; (unsigned) t)<BR>goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 27">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgtz s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s &gt; 0) goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 28">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bgtzl s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely version of bgtz; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 29">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ble s,t,label =&gt;<BR>sltu at,t,s<BR>beq at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((signed) s </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8804;</FONT><SPAN lang=EN-US><FONT class=extract> (signed) t)<BR>goto label;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 30">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bleu s,t,label =&gt;<BR>sltu at,t,s<BR>beq at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((unsigned) s </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8804;</FONT><SPAN lang=EN-US><FONT class=extract> (unsigned) t)<BR>goto label;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 31">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>blez s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if (s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> 0) goto label;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 32">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>blezl s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variant of blez; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 33">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>blt s,t,label =&gt;<BR>slt at,s,t<BR>bne at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((signed) s &lt; (signed) t)<BR>goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 34">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bltl s,t,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely macro; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 35">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bltu s,t,label =&gt;<BR>sltu at,s,t<BR>bne at,$zero,offs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((unsigned) s &lt; (unsigned) t)<BR>goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 36">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bltz s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s &lt; 0) goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 37">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bltzal s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>If s &lt; 0 call function at label. But the </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>return address</SPAN>&#8221;</FONT><SPAN lang=EN-US><FONT class=extract> is unconditionally saved in the register ra ($31), whether the function call is taken or not.<BR>if (s &lt; 0) label();</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 38">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bltzall s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Bizarre branch-likely variant; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 39">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bltzl s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variant; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 40">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bne s,t,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s != t) goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 41">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bnel s,t,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variant; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 42">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bnez s,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s != 0) goto label;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 43">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>bnezl s,t,label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Deprecated branch-likely variant; see section 8.5.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 44">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>break code</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Breakpoint instruction for debuggers. The value code has no hardware effect, but the breakpoint exception routine can retrieve it by reading the exception-causing instruction.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 45">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>cache k,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Do something to a cache line, as described in section 4.9. Not implemented on very old MIPS CPUs, where cache management relies on CPU-dependent tricks.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 46">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>cfc1 t,cs<BR>cfc2 t,cs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move data from coprocessor control register cs to general-purpose register t. Only useful for a coprocessor that uses the auxiliary control register set, as the floating-point unit (coprocessor 1) does. The cfc0 instruction is not part of the MIPS32 specification.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 47">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ctc1 t,cs<BR>ctc2 t,cs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move data from general-purpose register t to coprocessor control register cs.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 48">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>clo d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Count leading (high-order) one bits in s considered as a 32-bit word.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 49">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>clz d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Count leading (high-order) zero bits in s considered as a 32-bit word.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 50">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dabs d,s =&gt;<BR>dsra at,s,31<BR>xor d,s,at<BR>dsub d,d,at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit version<BR>d = s &lt; 0: -s: s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 51">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dadd d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit version; but this one traps on overflow, and is used rarely.<BR>d = s + t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 52">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>daddi d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit add with overflow trap, rare<BR>d = s + j;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 53">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>daddiu d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit add immediate, more often written with a daddu mnemonic.<BR>d = s + j;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 54">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>daddu d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit<BR>d = s + t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 55">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dclo d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Count leading ones in s starting at bit 63 of register.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 56">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dclz d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Count leading zeros in s starting at bit 63 of register.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 57">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ddiv $zero,s,t =&gt;<BR>ddiv s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Plain 64-bit hardware divide instruction, because we specified $zero as the destination.<BR>lo = (long long) s / (long long) t;<BR>hi = (long long) s % (long long) t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 142.5pt; mso-yfti-irow: 58">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 142.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ddiv d,s,t =&gt;<BR>teq t,$zero,0x7<BR>ddiv $zero,s,t<BR>daddiu $at,$zero,-1<BR>bne t,$at,1f<BR>daddiu $at,$zero,1<BR>dsll32 $at,$at,31<BR>teq $t1,$at,0x6<BR>1:<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 142.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit signed divide with divide-by-zero and overflow check.<BR>lo = (long long) s / (long long) t;<BR>hi = (long long) s % (long long) t;<BR>if (t == 0) exception (BREAK, 7);<BR>if (t == -1 &amp;&amp; s = MAXNEG64BIT)<BR>/* result overflows */<BR>exception (BREAK, 6);<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 59">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ddivu $zero,s,t =&gt;<BR>ddivu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Plain unsigned 64-bit hardware divide instruction.<BR>lo = (unsigned long long) s / (unsigned long long) t;<BR>hi = (unsigned long long) s % (unsigned long long) t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 60">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ddivu d,s,t =&gt;<BR>teq t,$zero,0x7<BR>ddivu s,t<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit unsigned divide with divide-by-zero check.<BR>lo = (unsigned long long) s / (unsigned long long) t;<BR>hi = (unsigned long long) s % (unsigned long long) t;<BR>if (t == 0) exception(BREAK,7);<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 61">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>deret</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Return from EJTAG debug exception. Control passes to the instruction at the location found in the CP0 register DEPC, and the debug mode bit is cleared. The instruction sequentially after deret is not run (there is no delay-slot instruction). There's more about EJTAG in section 12.1.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 62">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dext d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Extract bitfield from 64-bit register. shf is the distance the field needs to be shifted so it starts at bit 0 in s, and sz is the number of bits in the field. s = d(sz+shf)..shf;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 63">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dext d,s,shf,sz =&gt;<BR>dextm d,s,shf,sz<BR>dext d,s,shf,sz =&gt;<BR>dextu d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>The assembler gives you a dextm or dextu machine code as required when shf or sz is more than 32 bits. In all normal circumstances, just code dext and let the assembler handle it.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 64">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dextm d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Machine instruction to encode dext when sz is 32 or more.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 65">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dextu d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Machine instruction to encode dext when shf is 32 or more.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 66">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>di d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Disable interrupts. Clears the global interrupt enable bit in the status register (SR(IE), see section 3.3.1), leaving the original value of SR in d. This operation is atomic; the alternative read/modify/write sequence can be interrupted in the middle with confusing results.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 67">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dins d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Insert bitfield into 64-bit register. The data to insert forms the low bits of s. shf is the distance the data needs to be shifted left, and sz is the width of the field in bits.<BR>d = d63..(shf+sz) | s(sz)..0 | (shf &gt; 0 ? d(shf-1)..0: 0);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 68">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dins d,s,shf,sz =&gt;<BR>dinsm d,s,shf,sz<BR>dins d,s,shf,sz =&gt;<BR>dinsu d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>The assembler gives you a dinsm or dinsu machine code as required when shf or sz is more than 32 bits. In all normal circumstances, just code dins and let the assembler handle it.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 69">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dinsm d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract><FONT class=extract><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>Machine instruction to encode dins when sz is 32 or more.</FONT></FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 70">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dinsu d,s,shf,sz </FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Machine instruction to encode dins when shf is 32 or more.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 71">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>div $zero,s,t =&gt;<BR>div s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Plain signed 32-bit hardware divide; the assembler doesn't insert any divide-by-zero or overflow checks when the destination register is $zero.<BR>lo = s / t;<BR>hi = s % t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 128.25pt; mso-yfti-irow: 72">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 128.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>div d,s,t =&gt;<BR>teq t,$zero,0x7<BR>div $zero,s,t<BR>li $at,-1<BR>bne t,$at,1f<BR>lui $at,0x8000<BR>teq s,$at,0x6<BR>1f:<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 128.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Signed 32-bit division with exceptions generated by divide-by-zero and overflow conditions:<BR>if (t == 0)<BR>exception(BREAK,7); /* divide by zero */<BR>lo = s/t; hi = s%t;<BR>if (t == -1 &amp;&amp; s == MAXNEG32BIT)<BR>exception(BREAK, 6); /* result overflows */<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 73">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>divu $zero,s,t =&gt;<BR>divu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>/* $zero as destination means no checks */<BR>lo = s/t;<BR>hi = s % t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 74">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>divu d,s,t =&gt;<BR>teq t,$zero,0x7<BR>divu s,t<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unsigned divide, but take an exception if you divide by zero:<BR>if (t == 0) exception(BREAK,7);<BR>lo = (unsigned) s / (unsigned) t;<BR>hi = (unsigned) s % (unsigned) t;<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 75">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>dla t,addr =&gt;<BR># various </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8230;<SPAN lang=EN-US></SPAN></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load 64-bit address; see section 9.4.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 114pt; mso-yfti-irow: 76">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 114pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dli t,const =&gt;<BR># biggest case:<BR>lui t,const63..48<BR>ori t,const47..32<BR>dsll t,16<BR>ori t,const31..16<BR>dsll t,16<BR>ori t,const15..0</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 114pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load 64-bit constant. Separate mnemonic from li required only for values between 0x8000.0000 and 0xFFFF.FFFF, where 32=&gt;64-bit<BR>transition rules require li to flood the high-order 32 bits with ones.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 77">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmadd16 s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Found only on NEC's Vr41xx family CPUs.<BR>(long long)lo = (long long)lo + ((short)s * (short)t);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 78">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmfc1 t,fs<BR>dmfc2 t,fs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move 64 bits from coprocessor register cs to general-purpose register t. Only needed and implemented, of course, for coprocessors with 64-bit registers. dmfc1 is for floating-point unit registers; dmfc2 is exceedingly rare.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 79">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmtc1 t,cs<BR>dmtc2 t,cs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move 64 bits from general-purpose register t to coprocessor register cs.<BR>Comments as for dmfc1 above.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 80">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmul d,s,t =&gt;<BR>dmultu s,t<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit signed multiply instruction; the product of s and t is computed as a 128-bit value, with no overflow possible.<BR>There's no machine-level single instruction that does a three-register 64-bit multiply, although there is such an instruction (mul) for 32-bit operands.<BR>hilo = s * t; /* with 128-bit precision */<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 99.75pt; mso-yfti-irow: 81">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 99.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmulo d,s,t =&gt;<BR>dmult s,t<BR>mflo d<BR>dsra d,d,63<BR>mfhi $at<BR>tne d,$at,0x6<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 99.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Signed multiply, take an exception on overflow.<BR>hilo = s * t; /* with 128-bit precision */<BR>if ((lo</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8805;</FONT><SPAN lang=EN-US><FONT class=extract>0 &amp;&amp; hi!=0) || (lo&lt;0 &amp;&amp;@hi!=-1))<BR>exception(BREAK, 6);<BR>d = lo;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 82">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmulou d,s,t =&gt;<BR>dmultu s,t<BR>mfhi $at<BR>mflo d<BR>tne $at,$zero,0x6</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unsigned multiply, take an exception on overflow.<BR>hilo = (long long) s * (long long) t;<BR>if (hi != 0)<BR>exception(BREAK,6);<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 83">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmult s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Real machine-level 64-bit signed integer multiply instruction, result in hilo.<BR>hilo = (long long) s * (long long) t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 84">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dmultu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unsigned version of real machine-level 64-bit integer multiply.<BR>hilo = (unsigned long long) s * (unsigned long<BR>long) t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 85">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dneg d,s =&gt;<BR>dsub d,$zero,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unitary negate, which traps on overflow</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>you probably want dnegu,below.<BR>(long long) d = -(long long) s; /* trap on<BR>overflow */</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 86">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dnegu d,s =&gt;<BR>dsubu d,$zero,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>(long long) d = -(long long) s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 142.5pt; mso-yfti-irow: 87">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 142.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>drem d,s,t =&gt;<BR>teq t,$zero,0x7<BR>ddiv $zero,s,t<BR>daddiu $at,$zero,-1<BR>bne t,$at,1f<BR>daddiu $at,$zero,1<BR>dsll $at,$at,63<BR>teq s,$at,0x6<BR>1f:<BR>mfhi d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 142.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit signed integer remainder, with overflow checks.<BR>if (t == 0) exception(BREAK,7);<BR>if (s == MAXNEG64BIT &amp;&amp; t == -1)<BR>exception(BREAK,6); /* overflow */<BR>d = (long long) s % (long long) t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 88">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dremu d,s,t =&gt;<BR>teq t,$zero,0x7<BR>ddivu $zero,s,t<BR>mfhi d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit unsigned integer remainder, with overflow check.<BR>if (t == 0) exception(BREAK, 7);<BR>d = (unsigned long long)s % (unsigned long long)t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 89">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dret</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Out-of-date return-from-exception instruction, used on now-obsolete<BR>R6000 CPU and some </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>MIPS II</SPAN>&#8221;<SPAN lang=EN-US> followers.</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 90">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>drol d,s,t =&gt;<BR>dnegu $at,t<BR>drotrv d,s,$at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit rotate left, where rotate amount is a variable.<BR>d = (s &lt;&lt;t) | ((unsigned long long)s&gt;&gt;(64-t));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 91">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>drol d,s,j =&gt;<BR>drotr d,s,64-j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit rotate left by a constant amount.<BR>d = (s &lt;&lt;j) | ((unsigned long long)s&gt;&gt;(64-j));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 92">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dror d,s,t =&gt;<BR>drotrv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit rotate right, where rotate amount is a variable.<BR>d = ((unsigned long long)s&gt;&gt;t) | (s&lt;&lt;(64-t));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 93">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dror d,s,j =&gt;<BR>drotr d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit rotate right by a constant amount less than 32 positions.<BR>d = ((unsigned long long)s&gt;&gt;j) | (s&lt;&lt;(64-j));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 94">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dror d,s,j =&gt;<BR>drotr32 d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit rotate right by a constant amount of 32 positions or more.<BR>d = ((unsigned long long)s&gt;&gt;j) | (s&lt;&lt;(64-j));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 95">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsbh d,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Swap each pair of bytes in the register (there are four pairs in a 64-bit register).</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 96">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dshd d,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Swap each pair of halfwords (16-bit chunks) in the register (there are two pairs in a 64-bit register).</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 97">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsll d,s,t =&gt;<BR>dsllv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit shift left by variable shift amount.<BR>d = (long long)s &lt;&lt; (t % 64);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 98">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsllv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>You can write the name of the machine-code shift-left-by-amount-inregister instruction like this, but it's better to just write dsll.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 99">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsll d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit shift-left by a constant less than 32.<BR>d = (long long) s &lt;&lt;shf;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 100">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsll d,s,shf =&gt;<BR>dsll32 d,s,shf-32</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>64-bit shift-left by a constant of 32 or more.<BR>d = (long long) s &lt;&lt;shf /* 32 </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> shf &lt; 63 */</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 101">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsra d,s,t =&gt;<BR>drsav d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit shift-right: C semantics for shift-right signed, or an arithmetic shift</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>as bits shift down, the top of the register is filled with copies of bit 63, which gives you a correct implementation of signed divide by a power of two.<BR>d = (signed long long) s &gt;&gt;(t%64);</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 102">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsra d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit shift-right arithmetic by a constant (for </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>arithmetic</SPAN>&#8221;</FONT><SPAN lang=EN-US><FONT class=extract> see dsra d,s,t above).Where the constant is less than 32, this is a machine instruction with the same name.<BR>d = (signed long long) s &gt;&gt;(t%64);</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 103">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsra d,s,shf =&gt;<BR>dsra32 d,s,shf-32</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>As above, for 32 </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> shf &lt; 63. You probably don't want to ever write dsra32.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 104">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsrl d,s,t =&gt;<BR>dsrlv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Shift-right logical</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>that means zeros are drawn in at top, consistent with C semantics for unsigned integers. This is the variable-shift-amount version. d = (long long unsigned) s &gt;&gt;(t%64)</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 105">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsrl d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Shift-right by a constant, a constant less than 32.<BR>d = (long long unsigned) s &gt;&gt;shf%32;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 106">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsrl d,s,shf =&gt;<BR>dsrl32 d,s,shf-32</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>As above, when shf is 32 or more.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 107">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsub d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit subtract, which takes exception on overflow: rare.<BR>d = s - t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 108">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>dsubu d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s - t; /* 64-bit */</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 109">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ehb</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Execution hazard barrier</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>an instruction when you need to be sure that any coprocessor zero side effects of previous instructions have completed before any subsequent instructions get to do anything. See section 8.5.10.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 110">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ei d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Enable interrupts</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>well, at least unconditionally set the global interrupt enable bit in the status register (SR(IE), see section 3.3.1). The old value of SR is left in d. This operation is atomic. It's an analog of the (more useful) di instruction above.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 111">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>eret</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Return from exception: a privileged-mode instruction. Clears the SR(EXL) bit and branches to the location saved in EPC. See section 5.5.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 112">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ext d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Extract bitfield from 32-bit register. shf is the distance the field needs to be shifted so it starts at bit 0 in s, and sz is the number of bits in the field.<BR>mask = (2**sz - 1) &lt;&lt; shf;<BR>d = (s &amp; mask) &gt;&gt; shf;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 113">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ins d,s,shf,sz</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Insert bitfield into 32-bit register. The data to insert forms the low bits of s.<BR>shf is the distance the data needs to be shifted left, and sz is the width of the field in bits.<BR>mask = (2**sz - 1) &lt;&lt; shf;<BR>d = (d &amp; </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#732;<SPAN lang=EN-US>mask) | ((s &lt;&lt; shf) &amp; mask);</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 114">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>j label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>The basic </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>go-to</SPAN>&#8221;<SPAN lang=EN-US> instruction. Note that it's limited to reaching instructions within a 228-byte </SPAN>&#8220;<SPAN lang=EN-US>page.</SPAN>&#8221;</FONT><SPAN lang=EN-US><BR><FONT class=extract>goto label;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 115">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>j r =&gt;<BR>jr r</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Jump to the instruction pointed to by register r. This is the only way of transferring control to an arbitrary address, since all the address-in-instruction formats span less than 32 bits.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 116">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>jal label</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Subroutine call, with return address in $ra ($31). Note that the return address is the next instruction but one</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>as is usual with MIPS branches, the immediately following instruction position is the branch delay slot, and the instruction there is always executed before you reach the subroutine.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 117">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>jal d,addr =&gt;<BR>la $at,addr<BR>jalr d,$at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Like function call, but leaves the return address in the register d instead of the usual $31. Synthesized with jalr. It's cheating to use the instruction la in the machine code expansion, as la is itself a macro</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>but it means we can avoid explaining addressing modes here (see section 9.4 instead).</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 118">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>jalr d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Variant of jal d,addr above, when the address syntax is just another register s. You can write jal or jalr.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 119">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>jal s =&gt;<BR>jalr $ra,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>If you specify just one register, that's the address to call, and the return address is put in the usual $ra.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 120">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>la d,addr =&gt;<BR># many options</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Load address</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>always a synthesized instruction, which may produce very different code sequences according to how addr is written. More about this in section 9.4.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 121">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lb d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>8-bit load, sign-extend to fill register.<BR>For this and all load/store instructions, you can write addr in many ways</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;<SPAN lang=EN-US>see section 9.4</SPAN>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>but the load/store instruction can only compute an address with a register and signed 16-bit offset.<BR>d = *((signed char *) addr);</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 122">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lbu d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>8-bit load, zero-extend to fill register.<BR>d = *((unsigned char *)addr);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 123">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ld d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit load: exception if address is not eight-byte-aligned.<BR>d = *((long long *)addr);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 124">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ldc1 fd,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit load of coprocessor 1 (floating-point) register. More often written as<BR>l.d, see section 8.3.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 125">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ldc2 fd,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit load of coprocessor 2 register, if coprocessor 2 is used and is 64 bits<BR>wide.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 126">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ldl d,addr<BR>ldr d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Load double </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>left/right</SPAN>&#8221;&#8212;<SPAN lang=EN-US>used as a pair, these instructions implement a 64-bit unaligned load uld; see below and section 2.5.2.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 127">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ldxc1 fd,s(t)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>64-bit load of coprocessor 1 (floating-point) register, with two-register </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>indexed</SPAN>&#8221;</FONT><SPAN lang=EN-US><FONT class=extract> addressing. More often written as l.d, see section 8.3.<BR>fd = *((double *)(t+b));</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 128">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lh d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>16-bit load, sign-extend to fill register.<BR>t = *((signed short *)addr);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 129">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lhu d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>16-bit load, zero-extend to fill register.<BR>t = *((unsigned short *)addr);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 130">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>li d,j =&gt;<BR>ori d,$zero,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Load register with constant value (an </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>immediate</SPAN>&#8221;<SPAN lang=EN-US>). This expansion is for 0 </SPAN>&#8804;<SPAN lang=EN-US> j </SPAN>&#8804;<SPAN lang=EN-US> 65535.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 131">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>li d,j =&gt;<BR>addiu d,$zero,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>This one is for </SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt" lang=EN-US>&#8722;</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>32768 </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> j &lt; 0.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 132">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>li d,j =&gt;<BR>lui d,hi16(j)<BR>ori d,d,lo16(j)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>This one is for any other value of j that is representable as a 32-bit integer.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 133">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ll t,addr<BR>lld t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load-linked. Load 32 bits/64 bits, respectively, with link side effects; used together with sc or scd to implement a lockless semaphore (see section 8.5.2).</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 134">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lui t,u</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load upper immediate (constant u is sign-extended into 64-bit registers).<BR>t = u &lt;&lt;16;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 135">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lw t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit load, sign-extended for 64-bit CPUs.<BR>t = *((int *)(addr));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 136">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lwc1 fd,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Load FP single to FP register file</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>more often written l.s. See section 8.3.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 137">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lwc2 cd,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit load to coprocessor2 register, if implemented. Rare.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 138">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lwl t,addr<BR>lwr t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load word left/right. See ulw below and section 2.5.2 for how these instructions work together to perform an unaligned 32-bit load operation.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 139">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lwu t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit zero-extending load, only found on 64-bit CPUs.<BR>t = (unsigned long long)*((unsigned int *)addr);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 140">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>lwxc1 fd,t(b)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load 32-bit FP value using indexed (register+register) address. More often written as l.s, see section 8.3.<BR>fd = *((float *)(t+b));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 141">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mad s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit integer multiply-accumulate, standard in MIPS32. The two registers are multiplied with full precision and accumulated:<BR>hilo = hilo + ((long long) s * (long long) t);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 142">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>madu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Same but unsigned:<BR>hilo = hilo+((unsigned long long)s *<BR>(unsigned long long)t);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 143">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>madd d,s,t<BR>maddu d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Integer multiply-accumulate with integral write of result to a general register (signed and unsigned versions). The general-register write is only implemented by Toshiba 3900 series cores, with this unique name. But note that in the case where d is actually zero, this is compatible with the MIPS32 standard mad/madu.<BR>hilo += (long long) s * (long long) t;<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 144">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>madd16 s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>NEC Vr4100-specific integer multiply-accumulate; handles only 16-bit operands:<BR>lo = lo + ((short)s * (short)t);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 145">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mfc0 t,cs<BR>mfc1 t,fs<BR>mfc2 t,cs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Move 32 bits of data from coprocessor register cs into general-purpose register t</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>if cs is 64 bits wide, that will be the low-numbered bits. mfc0 is vital for access to the CPU control registers, mfc1 for putting floating-point unit data back into integer registers. mfc2 is only useful if coprocessor 2 is implemented, which is rare.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 146">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mfhc1 t,cs<BR>mfhc2 t,fs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move the higher 32 bits of the 64-bit coprocessor register cs or fs into general-purpose register t.<BR>Provided only when a MIPS32 integer unit is partnered by a 64-bit, otherwise MIPS64-compatible coprocessor. For example, MIPS<BR>Technologies' 24Kf core has a 64-bit floating-point unit.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 147">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mfhi d<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move integer multiply unit results to general-purpose register d. lo contains the result of a division, the least significant 32 bits of the result of a mul, or the least significant 64 bits of the result of a dmul. hi contains the remainder of a division or the most significant bits of a multiplication. These instructions are always interlocked; even on the earliest CPUs, the hardware waits for any incomplete multiply/divide to finish.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 148">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>move d,s =&gt;<BR>or d,s,$zero</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 149">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>movf d,s,$fccN</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>A variety of conditional-move instructions</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>more about them in section 8.5.3.<BR>if (!fcc(N)) d = s;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 150">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>movn d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (t) d = s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 151">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>movt d,s,$fccN</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (fcc(N)) d = s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 152">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>movt.d fd,fs,N<BR>movt.s fd,fs,N</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Double- and single-precision versions.<BR>if (fcc(N)) fd = fs;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 153">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>movz d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (!t) d = s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 154">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>msub s,t<BR>msubu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>The negative version of integer multiply/accumulate, in signed and unsigned versions.<BR>hilo = hilo - ((long long) s * (long long) t);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 85.5pt; mso-yfti-irow: 155">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 85.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mtc0 t,cd<BR>mtc1 t,fd<BR>mtc2 t,cd</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 85.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move 32 bits from general-purpose register t to coprocessor register cd.<BR>Note that this instruction doesn't obey the usual convention of writing the destination register first.<BR>mtc0 is for the CPU control registers, mtc1 is for putting integer data into floating-point registers (although they're more often loaded directly from memory), and mtc2 is implemented only if the CPU uses coprocessor 2 instructions (very rare).<BR>If the coprocessor register is 64 bits wide, the data is loaded into the low bits, but the state of the high 32 bits is not defined.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 156">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mthc1 t,cd<BR>mthc2 t,fd</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move 32 bits from general-purpose register t to the higher bits of 64-bit coprocessor register cd, while leaving the low bits unchanged.<BR>Provided only when a MIPS32 integer unit is partnered by a 64-bit, otherwise MIPS64-compatible coprocessor</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>for example, MIPS<BR>Technologies' 32-bit 24Kf core has a 64-bit floating-point unit.</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 157">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mthi s<BR>mtlo s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Move contents of general-purpose register s into the multiply-unit result registers hi and lo, respectively. This may not seem useful, but they are required to restore the CPU state when returning from an exception.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 158">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mul d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Genuine three-register 32-bit integer multiply, defined in MIPS32 and available on some earlier CPUs. The full-precision result is still delivered to the internal hilo register. There is no unsigned version.<BR>hilo = (long long) s * (long long) t;<BR>d = lo;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 159">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mul d,s,t =&gt;<BR>mult s,t<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Three-register multiply can be synthesized when the assembler is generating a pre-MIPS32 instruction set.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 99.75pt; mso-yfti-irow: 160">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 99.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mulo d,s,t =&gt;<BR>mult s,t<BR>mflo d<BR>sra d,d,31<BR>mfhi $at<BR>tne d,$at,0x6<BR>mflo d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 99.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit signed multiply with overflow check.<BR>Overflow is detected by the case where hi does not simply contain the sign-extension of lo.<BR>hilo = (signed)s * (signed)t;<BR>if ((lo</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8805;</FONT><SPAN lang=EN-US><FONT class=extract>0 &amp;&amp; hi!=0) || (s&lt;0) &amp;&amp; hi!=-1)<BR>exception(BREAK, 6);</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 161">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mulou d,s,t =&gt;<BR>multu s,t<BR>mfhi $at<BR>mflo d<BR>tne $at,$zero,0x6</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit unsigned multiply with overflow check:<BR>hilo = (unsigned)s * (unsigned)t;<BR>if (hi != 0)<BR>exception(BREAK, 6);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 162">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>mult s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>hilo = (signed)s * (signed)t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 163">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>multu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>hilo = (unsigned)s * (unsigned)t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 164">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>neg d,s =&gt;<BR>sub d,$zero,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>This version traps on overflow and is very rarely used.<BR>d = -s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 165">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>negu d,s =&gt;<BR>subu d,$zero,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>No overflow: C always generates this.<BR>d = -s;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 166">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>nop =&gt;<BR>sll $zero,$zero,$zero</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>No-op, instruction code == 0.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 167">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>nor d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Like all bitwise operations, there's no need for a separate op-code for 64-bit CPUs.<BR>d = </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#732;<SPAN lang=EN-US>(s | t);</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 168">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>not d,s =&gt;<BR>nor d,s,$zero</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#732;<SPAN lang=EN-US>s;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 169">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>nudge addr<BR>nudgex s(t)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Shortcuts for prefetch instructions pref nudge and prefx nudge, see below and section 8.5.8</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 170">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>or d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s | t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 171">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ori t,r,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>OR with a constant. Machine instruction, but more often written as or d,s,j:<BR>d = s | (unsigned) j;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 172">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>pref hint,addr<BR>prefx hint,t(b)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Prefetch instruction for memory reference optimization. A program that knows in advance it may need data can arrange for it to be brought into the cache early, with no real side effects. Implementations are always entitled to treat pref as a no-op.<BR>hint defines which sort of prefetch this is; see section 8.5.8.<BR>prefx is only available with floating-point, where it matches the register+register address mode available for floating-point load/store instructions.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 173">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>r2u s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>LSI ATMizer-II only; converts to strange floating-point format. Result appears in lo.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 174">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>radd s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>LSI ATMizer-II only; strange floating-point add. Result appears in lo.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 175">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rdhwr d,$cs</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Read hardware register: allows unprivileged user-mode software to read one of a set of CPU registers. See section 8.5.12.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 176">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rdpgpr d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Read register from previous shadow set</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>see section 5.8.6.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 114pt; mso-yfti-irow: 177">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 114pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rem d,s,t =&gt;<BR>teq t,$zero,0x7<BR>div $zero,s,t<BR>li $at,-1<BR>bne t,$at,1f<BR>lui $at,0x8000<BR>teq s,$at,0x6 1f:<BR>mfhi d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 114pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Signed integer remainder, with divide-by-zero and overflow checks:<BR>if (t==0) exception(BREAK, 7);<BR>if (t==-1 &amp;&amp; s==MAXNEG32BIT)<BR>exception(BREAK, 6);<BR>d = s % t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 178">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>remu d,s,t =&gt;<BR>teq t,$zero,0x7<BR>divu $zero,s,t<BR>mfhi d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unsigned integer remainder, with divide-by-zero check:<BR>if (t==0) exception(BREAK, 7);<BR>d = (unsigned)s % (unsigned)t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 179">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rfe</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Pre-MIPS32 (in fact, MIPS I-only) instruction to restore CPU state when returning from exception. Now obsolete and not described further here.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 180">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rmul s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>LSI ATMizer-II only; strange floating-point multiply. Result appears in lo.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 181">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rol d,s,shf =&gt;<BR>rotr d,s,32-shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Rotate left by constant. rotr was new with MIPS32R2; for older ISAs, this will be synthesized to something longer.<BR>d = (s&lt;&lt;shf) | ((unsigned)s&gt;&gt;(32-shf));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 182">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rol d,s,t =&gt;<BR>negu $at,t<BR>rotrv d,s,$at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Rotate left. Instruction sets prior to MIPS32R2 lacked the rotate-right machine instruction; for older instruction sets, it will be synthesized to a longer sequence.<BR>d = (s&lt;&lt;t) | ((unsigned)s&gt;&gt;(32-t));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 183">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ror d,s,shf =&gt;<BR>rotr d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Rotate right by constant.Will be synthesized for instruction sets earlier than MIPS32R2.<BR>d = ((unsigned)s&gt;&gt;shf) | (s&lt;&lt;(32-shf));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 184">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ror d,s,t =&gt;<BR>rotrv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Rotate right by variable amount.Will be synthesized for instruction sets earlier than MIPS32R2.<BR>d = ((unsigned)s&gt;&gt;t) | (s&lt;&lt;(32-t));</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 185">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rotr d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Rotate-right by immediate: machine code, only available in MIPS32R2.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 186">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rotrv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Rotate-right by variable amount: machine code, only available in MIPS32R2.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 187">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>rsub s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>LSI ATMizer-II only; strange floating-point multiply. Result appears in lo.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 188">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sb t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>*((char *)addr) = t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 189">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sc t,addr<BR>scd t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store word/double conditional; explained in section 8.5.2.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 190">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sd t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Will take an exception if addr is not eight-byte aligned.<BR>*((long long *)addr) = t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 191">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sdbbp c</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Debug breakpoint instruction</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;</FONT><FONT class=extract><FONT class=extract><SPAN lang=EN-US>different from a break because it drops straight into debug mode, not just exception mode. The optional c is just encoded into the instruction, where a debugger could read it.<BR>Note that there have been two different encodings used for this instruction</SPAN>&#8212;</FONT></FONT><SPAN lang=EN-US><FONT class=extract>the obsolete one is now associated only with the Toshiba R3900 core and its descendants.<BR>See description of EJTAG debug unit in section 12.1.</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 192">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sdc1 ft,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store floating-point double register to memory; more often called s.d.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 193">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sdc2 cs, addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store contents of 64-bit coprocessor 2 register to memory.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 194">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sdl t,addr<BR>sdr t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store double left/right; see section 2.5.2 for an explanation.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 195">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sdxc1 fs,t(b)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Indexed FP store double (both t and b are registers), usually written s.d.<BR>*((double *)(t+b)) = fs;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 196">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>seb d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>In-register sign-extend, byte to register:<BR>d = (long long)(signed char)(s &amp; 0xff);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 197">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>seh d,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>In-register sign-extend, halfword to register:<BR>d = (long long)(signed short)(s &amp; 0xffff);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 198">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>seq d,s,t =&gt;<BR>xor d,s,t<BR>sltiu d,d,1</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>First of set of </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>set if </SPAN>&#8221;</FONT><SPAN lang=EN-US><FONT class=extract> assembly mnemonics, built by analogy to the real machine instruction slt.<BR>d = (s == t) ? 1 : 0;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 199">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sge d,s,t =&gt;<BR>slt d,s,t<BR>xori d,d,1</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = ((signed)s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (signed)t) ? 1 : 0;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 200">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sgeu d,s,t =&gt;<BR>sltu d,s,t<BR>xori d,d,1</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = ((unsigned)s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (unsigned)t) ? 1 : 0;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 201">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sgt d,s,t =&gt;<BR>slt d,t,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = ((signed)s &gt; (signed)t) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 202">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sgtu d,s,t =&gt;<BR>sltu d,t,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = ((unsigned)s &gt; (unsigned)t) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 203">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sh t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store halfword:<BR>*((short *)addr) = t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 204">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sle d,s,t =&gt;<BR>slt d,t,s<BR>xori d,d,1</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = ((signed)s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> (signed)t) ? 1 : 0;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 205">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sleu d,s,t =&gt;<BR>sltu d,t,s<BR>xori d,d,1</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = ((unsigned)s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> (unsigned)t) ? 1 : 0;</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 206">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sll d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = s &lt;&lt;shf; /* 0 </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8804;<SPAN lang=EN-US> shf &lt; 32 */</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 207">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sll d,t,s =&gt;<BR>sllv d,t,s<BR>sllv d,t,s</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = t &lt;&lt;(s % 32);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 208">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>slt d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = ((signed) s &lt; (signed) t) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 209">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>slt d,s,j =&gt;<BR>slti d,s,j<BR>slti d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>/* j constant */<BR>d = ((signed) s &lt; (signed) j) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 210">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sltiu d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>/* j constant */<BR>d = ((unsigned) s &lt; (unsigned) j) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 211">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sltu d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = ((unsigned) s &lt; (unsigned) t) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 212">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sne d,s,t =&gt;<BR>xor d,s,t<BR>sltu d,$zero,d</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = (s != t) ? 1 : 0;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 213">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sra d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit shift-right by a constant. C semantics for shift-right signed, an arithmetic shift</FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8212;</FONT><SPAN lang=EN-US><FONT class=extract>as bits shift down the top of the register is filled with copies of bit 31, which gives you a correct implementation of signed divide by a power of 2.<BR>d = (signed) s &gt;&gt;shf;</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 214">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sra d,s,t =&gt;<BR>srav d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit shift-right arithmetic, by a variable shift amount:<BR>d = (signed) s &gt;&gt;(t%32)</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 215">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>srl d,s,shf</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit shift-right logical: like a C shift of an unsigned quantity, where zeros are shifted in from the top:<BR>d = (unsigned) s &gt;&gt;shf;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 216">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>srl d,s,t =&gt;<BR>slrv d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit shift-right logical, shift amount in register.<BR>d = (unsigned) s &gt;&gt;(t % 32);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 217">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ssnop =&gt;<BR>sll $zero,$zero,1</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract><FONT class=extract>&#8220;<SPAN lang=EN-US>Superscalar</SPAN>&#8221;<SPAN lang=EN-US> no-op; a no-op, but one that no CPU should issue in the same clock cycle as other instructions. Used for mystical timing purposes.</SPAN></FONT></FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 218">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>standby</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Enter one of the power-down modes, for NEC Vr4100 family CPU only;<BR>wait</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>see below</SPAN>&#8212;<SPAN lang=EN-US>is a more widely used instruction.</SPAN></SPAN></FONT></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 219">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sub d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Trap on overflow, little used.<BR>d = s - t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 220">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>subu d,s,j =&gt;<BR>addiu d,s,-j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s - j;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 221">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>subu d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>d = s - t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 222">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>suspend</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Enter a Vr4100 CPU's power-down modes.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 223">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sw t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store word.<BR>*((int *)addr) = t;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 224">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>swc1 ft,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Floating-point store single; more often written s.s.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 225">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>swc2 ft,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store 32-bit data from coprocessor 2 register, rare</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 226">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>swl t,addr<BR>swr t,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store word left/right; see section 2.5.2.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 227">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>swxc1 fs,t(b)</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store floating-point single using indexed (two-register) addressing; usually written with s.s.<BR>*((float *)(t + b)) = fs;</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 228">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>sync</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load/store barrier, mainly for multiprocessors; see section 8.5.9.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 229">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>synci addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Synchronize I-cache with D-cache: Run instruction for each cache-line-sized block after writing instructions but before executing them.See section 8.5.11.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 230">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>syscall B</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Cause a </FONT></SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt"><FONT class=extract>&#8220;<SPAN lang=EN-US>system call</SPAN>&#8221;</FONT><SPAN lang=EN-US><FONT class=extract> exception.<BR>exception(SYSCALL, B);</FONT></SPAN></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 231">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>teq s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Conditional trap instruction: generate a TRAP exception if the appropriate condition is satisfied; this one is.<BR>if (s == t) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 232">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>teq s,j =&gt;<BR>teqi s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (s == j) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 233">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tge s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if ((signed) s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (signed) t) exception(TRAP);</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 234">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tge s,j =&gt;<BR>tgei s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if ((signed) s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (signed) j) exception(TRAP);</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 235">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tgeu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if ((unsigned) s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (unsigned) t) exception(TRAP);</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 236">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tgeu s,j =&gt;<BR>tgeiu s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>if ((unsigned) s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8805;<SPAN lang=EN-US> (unsigned) j) exception(TRAP);</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 237">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tlbp</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>TLB maintenance; see Chapter 6.<BR>If the virtual page number currently in EntryLo matches a TLB entry, sets Index to that entry. Otherwise sets Index to the illegal value 0x8000.0000 (top bit set).</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 238">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tlbr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>TLB maintenance; see Chapter 6.<BR>Copies information from the TLB entry selected by Index into the registers EntryLo, EntryHi1, EntryHi0, and PageMask.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 239">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tlbwi<BR>tlbwr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>TLB maintenance; see Chapter 6.<BR>Writes the TLB entry selected by Index (instruction tlbwi) or Random (instruction tlbwr), respectively, using data from EntryLo, EntryHi1, EntryHi0, and PageMask.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 240">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tlt s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>More conditional traps:<BR>if ((signed) s &lt; (signed) t) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 241">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tlt s,j =&gt;<BR>tlti s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((signed) s &lt; (signed) j) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 242">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tltu s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((unsigned) s &lt; (unsigned) t) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 243">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tltu s,j =&gt;<BR>tltiu s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if ((unsigned) s &lt; (unsigned) j) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 244">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tne s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (t != s) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 245">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>tne s,j =&gt;<BR>tnei s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>if (t != j) exception(TRAP);</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 246">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>u2r s</SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>LSI ATMizer-II only; converts unsigned to strange floating point. Result appears in lo.</SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 247">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>udi0 d,r,s,uc<BR>through<BR>udi15 d,r,s,uc</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Builds an instruction in that corner of the instruction encoding reserved for user-defined instructions. Such instructions can use three general-purpose instructions, and have a subsidiary 5-bit op-code uc, which is available to the user logic.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 248">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>uld d,addr =&gt;<BR>ldl d,addr<BR>ldr d,addr+7</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unaligned load double, synthesized from load-left and load-right as detailed in section 2.5.2 (shown for big-endian only).</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 249">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ulh d,addr =&gt;<BR>lb d,addr<BR>lbu at,addr+1<BR>sll d,d,8<BR>or d,d,at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unaligned load halfword and sign-extend. This is the big-endian expansion (the little-endian version is left as an excercise for the reader). The expansion may be more complex, depending on addressing mode.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 71.25pt; mso-yfti-irow: 250">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ulhu d,addr =&gt;<BR>lbu d,addr<BR>lbu at,addr+1<BR>sll d,d,8<BR>or d,d,at</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 71.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unaligned load halfword and zero-extend.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 251">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ulw d,addr =&gt;<BR>lwl d,addr<BR>lwr d,addr+3</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Load word unaligned; sign-extend if 64 bits (shown for big-endian only).<BR>See section 2.5.2.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 252">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>usd d,addr =&gt;<BR>sdl d,addr<BR>sdr d,addr+7</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unaligned store double.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 57pt; mso-yfti-irow: 253">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>ush addr =&gt;<BR>sb d,addr+1<BR>srl d,d,8<BR>sb d,addr</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 57pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Unaligned store half.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 254">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>usw s,addr =&gt;<BR>swl s,addr<BR>swr s,addr+3</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Store word unaligned; see section 2.5.2.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 255">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>wait</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>MIPS32 instruction to enter some kind of power-down state. Usually implemented by suspending execution until an interrupt is detected. Software should not assume that the suspension will always happen or that waking up from wait necessarily indicates an unmasked interrupt</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8211;<SPAN lang=EN-US>wait should be called from an idle loop.</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 256">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>wrpgpr cd, t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>Write to a register in the previous shadow register set; see section 5.8.6 for details.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 42.75pt; mso-yfti-irow: 257">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>wsbh</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 42.75pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>32-bit byte-swap within each of the two halfwords. This is a 32-bit instruction; on a 64-bit CPU the top half of the register is left filled with the sign extension of bit 31.<BR>wsbh works well together with bit-rotates to perform many forms of byte reorganization in a small number of instructions.</FONT></SPAN></P></TD></TR>
<TR style="HEIGHT: 14.25pt; mso-yfti-irow: 258">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>xor d,s,t</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 14.25pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = s</SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#710;<SPAN lang=EN-US>t;</SPAN></SPAN></FONT></P></TD></TR>
<TR style="HEIGHT: 28.5pt; mso-yfti-irow: 259; mso-yfti-lastrow: yes">
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: windowtext 1pt solid; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>xor d,s,j =&gt;<BR>xori d,s,j</FONT></SPAN></P></TD>
<TD style="BORDER-BOTTOM: windowtext 1pt solid; BORDER-LEFT: #ffffff; PADDING-BOTTOM: 0cm; BACKGROUND-COLOR: transparent; PADDING-LEFT: 5.4pt; PADDING-RIGHT: 5.4pt; HEIGHT: 28.5pt; BORDER-TOP: #ffffff; BORDER-RIGHT: windowtext 1pt solid; PADDING-TOP: 0cm; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><FONT class=extract><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>d = s </SPAN><SPAN style="FONT-FAMILY: &#23435;&#20307;; FONT-SIZE: 14pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#710;<SPAN lang=EN-US> j;</SPAN></SPAN></FONT></P></TD></TR></TBODY></TABLE>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt" lang=EN-US>&nbsp;</SPAN>