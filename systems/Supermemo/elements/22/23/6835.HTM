Let&#8217;s complete the process of setting up the origin remote by establishing new remote tracking branches in the original repository to represent the branches from the remote repository. First, you can see that there is only one branch, as expected, called master.</P>
<P># List all branches </P>
<P>$ git branch -a </P>
<P>* master</P>
<P>Now, use git remote update:</P>
<P>$ git remote update</P>
<P>Updating origin </P>
<P>From /tmp/Depot/public_html</P>
<P>* [new branch] master -&gt; origin/master </P>
<P>$ git branch -a </P>
<P>* master</P>
<P>origin/master</P>
<P>Depending on your version of Git,( 2. Version 1.6.3 appears to be the delineation here.) the remote-tracking branch ref may be shown with or without the remotes/ prefix:</P>
<P>$ git branch -a </P>
<P>* master</P>
<P>remotes/origin/master</P>
<P>Git introduced a new branch called origin/master into the repository. It is a remote tracking branch within the origin remote. Nobody does development in this branch. Instead, its purpose is to hold and track the commits made in the remote origin repository&#8217;s master branch. You could consider it your local repository&#8217;s proxy for commits made in the remote; eventually you can use it to bring those commits into your repository.