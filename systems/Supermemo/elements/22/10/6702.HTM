<FONT class=extract>Running git diff on a conflicted file only shows you the sections that really have a conflict. In a large file with numerous changes scattered throughout, most of those changes don&#8217;t have a conflict; either one side of the merge changed a particular section or the other side did. When you&#8217;re trying to resolve a conflict, you rarely care about those sections, so git diff trims out uninteresting sections using a simple heuristic: if a section has changes versus only one side, that section isn&#8217;t shown.</FONT></P>
<P>This optimization has a slightly confusing side effect: once you resolve something that used to be a conflict by simply picking one side or the other, it stops showing up. That&#8217;s because you modified the section so that it only changes one side or the other (i.e., the side that you didn&#8217;t choose), so to Git it looks just like a section that was never conflicted at all.</P>
<P>This is really more a side effect of the implementation than an intentional feature, but you might consider it useful anyway: git diff shows you only those sections of the file that are still conflicted, so you can use it to keep track of the conflicts you haven&#8217;t fixed yet.