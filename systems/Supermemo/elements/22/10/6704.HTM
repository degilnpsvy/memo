<SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT size=6>The options provided to git log are as follows: </FONT></SPAN>
<P></P>
<P><SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT size=6><FONT class=extract>? --merge shows only commits related to files that produced a conflict</FONT> </FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT size=6><FONT class=extract>? --left-right displays &lt; if the commit was from the &#8220;left&#8221; side of the merge (&#8220;our&#8221; version, the one you started with), or &gt; if the commit was from the &#8220;right&#8221; side of the merge (&#8220;their&#8221; version, the one you&#8217;re merging in)</FONT> </FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT size=6><FONT class=extract>? -p shows the commit message and the patch associated with each commit</FONT> </FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract size=6>If your repository were more complicated and several files had conflicts, you could also provide the exact filename(s) you&#8217;re interested in as a command line option, like this: </FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract size=6>$ git log --merge --left-right -p hello</FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: TheSansMonoCd-W5Regular; FONT-SIZE: 8pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt" lang=EN-US><FONT size=6>The examples here have been kept small for demonstration purposes. Of course, reallife situations are likely to be significantly larger and more complex. <FONT class=extract>One technique to mitigate the pain of large merges with nasty, extended conflicts is to use several small commits with well-defined effects contained to individual concepts. Git handles small commits well, so there is no need to wait until the last minute to commit large, widespread changes. Smaller commits and more frequent merge cycles reduce the pain of conflict resolution.</FONT></FONT></SPAN>