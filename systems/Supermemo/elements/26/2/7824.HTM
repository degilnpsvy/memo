<SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: MyriadPro-SemiboldCond; mso-bidi-font-size: 14.0pt; mso-bidi-font-family: MyriadPro-SemiboldCond; mso-font-kerning: 0pt">Method Name Resolution</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This section describes the names you give to methods when you define them. A related</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">topic is method name resolution: how does the Ruby interpreter find the definition of</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">the method named in a method invocation expression? The answer to that question</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">must wait until we</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">ve discussed classes in Ruby. It is covered in </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#167;<SPAN lang=EN-US>7.8.</SPAN></SPAN>