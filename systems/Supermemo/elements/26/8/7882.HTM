<SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: MyriadPro-SemiboldCond; mso-bidi-font-size: 14.0pt; mso-bidi-font-family: MyriadPro-SemiboldCond; mso-font-kerning: 0pt">Duck Typing and Equality</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">+ </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">operator we defined earlier did no type checking at all: it works with any argument</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">object with </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">x </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">y </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods that return numbers. This </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">== </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is implemented</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">differently; instead of allowing duck typing, it requires that the argument is a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">Point</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This is an implementation choice. The implementation of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">== </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">above chooses to define</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">equality so that an object cannot be equal to a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">Point </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">unless it is itself a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">Point</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Implementations may be stricter or more liberal than this. The implementation above</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">uses the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">is_a? </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">predicate to test the class of the argument. This allows an instance of a</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">subclass of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">Point </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to be equal to a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">Point</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. A stricter implementation would use</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">instance_of? </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to disallow subclass instances. Similarly, the implementation above uses</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">== </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to compare the X and Y coordinates. For numbers, the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">== </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">operator allows type</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">conversion, which means that the point </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">(1,1) </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is equal to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">(1.0,1.0)</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. This is probably</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">as it should be, but a stricter definition of equality could use </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">eql? </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to compare the</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">coordinates.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">A more liberal definition of equality would support duck typing. Some caution is</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">required, however. Our </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">== </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method should not raise a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">NoMethodError </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">if the argument</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">object does not have </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">x </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">y </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods. Instead, it should simply return </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">false</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">def ==(o) # Is self == o?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">@x == o.x &amp;&amp; @y == o.y # Assume o has proper x and y methods</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">rescue # If that assumption fails</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">false # Then self != o</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">end</SPAN>