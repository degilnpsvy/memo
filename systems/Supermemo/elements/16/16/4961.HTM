<H5 class=subsubsection style="FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">14.8.2.16<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:cache</CODE></H5>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:cache</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>header argument controls the use of in-buffer caching of the results of evaluating code blocks. It can be used to avoid re-evaluating unchanged code blocks. Note that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:cache</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>header argument will not attempt to cache results when the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:session</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>header argument is used, because the results of the code block execution may be stored in the session outside of the Org mode buffer. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:cache</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>header argument can have one of two values:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>yes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>no</CODE>.</P>
<UL style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<LI style="LIST-STYLE-IMAGE: url(http://orgmode.org/triangle.png); TEXT-ALIGN: justify; MARGIN: 10px"><CODE>no</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>The default. No caching takes place, and the code block will be evaluated every time it is called.</LI>
<LI style="LIST-STYLE-IMAGE: url(http://orgmode.org/triangle.png); TEXT-ALIGN: justify; MARGIN: 10px"><CODE>yes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>Every time the code block is run a SHA1 hash of the code and arguments passed to the block will be generated. This hash is packed into the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+RESULTS:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line and will be checked on subsequent executions of the code block. If the code block has not changed since the last time it was evaluated, it will not be re-evaluated.</LI></UL>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Code block caches notice if the value of a variable argument to the code block has changed. If this is the case, the cache is invalidated and the code block is re-run. In the following example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>caller</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will not be re-run unless the results of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>random</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>have changed since it was last run.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">      #+NAME: random
      #+BEGIN_SRC R :cache yes
      runif(1)
      #+END_SRC
     
      #+RESULTS[a2a72cd647ad44515fab62e144796432793d68e1]: random
      0.4659510825295
     
      #+NAME: caller
      #+BEGIN_SRC emacs-lisp :var x=random :cache yes
      x
      #+END_SRC
     
      #+RESULTS[bec9c8724e397d5df3b696502df3ed7892fc4f5f]: caller
      0.254227238707244</PRE>