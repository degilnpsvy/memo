<H5 class=subsubsection style="FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">9.1.3.1 Template elements</H5>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Now lets look at the elements of a template definition. Each entry in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>org-capture-templates</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a list with the following items:</P>
<DL style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><VAR>keys</VAR></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">The keys that will select the template, as a string, characters only, for example<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"a"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for a template to be selected with a single key, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"bt"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for selection with two keys. When using several keys, keys using the same prefix key must be sequential in the list and preceded by a 2-element entry explaining the prefix key, for example<PRE class=smalllisp style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: smaller; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; COLOR: black; PADDING-BOTTOM: 12pt; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">                   ("b" "Templates for marking stuff to buy")
</PRE>
<P class=noindent style="TEXT-ALIGN: justify; MARGIN-TOP: 0px">If you do not define a template for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><KBD>C</KBD><SPAN class=Apple-converted-space>&nbsp;</SPAN>key, this key will be used to open the customize buffer for this complex variable.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><VAR>description</VAR></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">A short string describing the template, which will be shown during selection.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><VAR>type</VAR></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">The type of entry, a symbol. Valid values are:
<DL>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>entry</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">An Org mode node, with a headline. Will be filed as the child of the target entry or as a top-level entry. The target file should be an Org mode file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>item</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">A plain list item, placed in the first plain list at the target location. Again the target file should be an Org file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>checkitem</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">A checkbox item. This only differs from the plain list item by the default template.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>table-line</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">a new line in the first table at the target location. Where exactly the line will be inserted depends on the properties<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:prepend</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:table-line-pos</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see below).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>plain</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Text to be inserted as it is.</DD></DL><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><VAR>target</VAR></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify"><A name=index-org_002ddefault_002dnotes_002dfile-985></A>Specification of where the captured item should be placed. In Org mode files, targets usually define a node. Entries will become children of this node. Other types will be added to the table or list in the body of this node. Most target specifications contain a file name. If that file name is the empty string, it defaults to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>org-default-notes-file</CODE>. A file can also be given as a variable, function, or Emacs Lisp form.
<P style="TEXT-ALIGN: justify; MARGIN-TOP: 0px">Valid values are:</P>
<DL>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file "path/to/file")</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Text will be placed at the beginning or end of that file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(id "id of existing org entry")</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Filing as child of this entry, or in the body of the entry.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file+headline "path/to/file" "node headline")</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Fast configuration if the target heading is unique in the file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file+olp "path/to/file" "Level 1 heading" "Level 2" ...)</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">For non-unique headings, the full path is safer.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file+regexp "path/to/file" "regexp to find location")</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Use a regular expression to position the cursor.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file+datetree "path/to/file")</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Will create a heading in a date tree for today's date<A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#fn-91" name=fnd-91 rel=footnote><SUP>91</SUP></A>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file+datetree+prompt "path/to/file")</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Will create a heading in a date tree, but will prompt for the date.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(file+function "path/to/file" function-finding-location)</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">A function to find the right location in the file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(clock)</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">File to the entry that is currently being clocked.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>(function function-finding-location)</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Most general way, write your own function to find both file and location.</DD></DL><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><VAR>template</VAR></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">The template for creating the capture item. If you leave this empty, an appropriate default template will be used. Otherwise this is a string with escape codes, which will be replaced depending on time and context of the capture call. The string with escapes may be loaded from a template file, using the special syntax<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(file "path/to/template")</CODE>. See below for more details.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><VAR>properties</VAR></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">The rest of the entry is a property list of additional options. Recognized properties are:
<DL>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:prepend</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Normally new captured information will be appended at the target location (last child, last table line, last list item...). Setting this property will change that.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:immediate-finish</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">When set, do not offer to edit the information, just file it away immediately. This makes sense if the template only needs information that can be added automatically.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:empty-lines</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Set this to the number of lines to insert before and after the new item. Default 0, only common other value is 1.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:clock-in</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Start the clock in this item.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:clock-keep</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Keep the clock running when filing the captured entry.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:clock-resume</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">If starting the capture interrupted a clock, restart that clock when finished with the capture. Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:clock-keep</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has precedence over<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:clock-resume</CODE>. When setting both to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>t</CODE>, the current clock will run and the previous one will not be resumed.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:unnarrowed</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Do not narrow the target buffer, simply show the full buffer. Default is to narrow it so that you only see the new material.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:table-line-pos</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Specification of the location in the table where the new line should be inserted. It should be a string like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"II-3"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>meaning that the new line should become the third line before the second horizontal separator line.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>:kill-buffer</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">If the target file was not yet visited when capture was invoked, kill the buffer again after capture is completed.</DD></DL></DD></DL>