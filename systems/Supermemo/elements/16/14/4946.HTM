<H5 class=subsubsection style="FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">14.8.2.1<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:var</CODE></H5>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:var</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>header argument is used to pass arguments to code blocks. The specifics of how arguments are included in a code block vary by language; these are addressed in the language-specific documentation. However, the syntax used to specify arguments is the same across all languages. In every case, variables require a default value when they are declared.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">The values passed to arguments can either be literal values, references, or Emacs Lisp code (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#var">Emacs Lisp evaluation of variables</A>). References include anything in the Org mode file that takes a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+NAME:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+RESULTS:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line: tables, lists,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+BEGIN_EXAMPLE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>blocks, other code blocks and the results of other code blocks.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Note: When a reference is made to another code block, the referenced block will be evaluated unless it has current cached results (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#cache">cache</A>).</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Argument values can be indexed in a manner similar to arrays (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#var">Indexable variable values</A>).</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">The following syntax is used to pass arguments to code blocks using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:var</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>header argument.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     :var name=assign
</PRE>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">The argument,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>assign</CODE>, can either be a literal value, such as a string &#8216;<SAMP><SPAN class=samp>"string"</SPAN></SAMP>&#8217; or a number &#8216;<SAMP><SPAN class=samp>9</SPAN></SAMP>&#8217;, or a reference to a table, a list, a literal example, another code block (with or without arguments), or the results of evaluating another code block.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Here are examples of passing values by reference:</P>
<DL style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><DFN>table</DFN></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">an Org mode table named with either a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+NAME:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line<PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; COLOR: black; PADDING-BOTTOM: 12pt; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">          #+NAME: example-table
          | 1 |
          | 2 |
          | 3 |
          | 4 |
          
          #+NAME: table-length
          #+BEGIN_SRC emacs-lisp :var table=example-table
          (length table)
          #+END_SRC
          
          #+RESULTS: table-length
          : 4
</PRE><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><DFN>list</DFN></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">a simple list named with a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+NAME:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line (note that nesting is not carried through to the source code block)<PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; COLOR: black; PADDING-BOTTOM: 12pt; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">          #+NAME: example-list
            - simple
              - not
              - nested
            - list
          
          #+BEGIN_SRC emacs-lisp :var x=example-list
            (print x)
          #+END_SRC
          
          #+RESULTS:
          | simple | list |
</PRE><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><DFN>code block without arguments</DFN></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">a code block name (from the example above), as assigned by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+NAME:</CODE>, optionally followed by parentheses<PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; COLOR: black; PADDING-BOTTOM: 12pt; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">          #+BEGIN_SRC emacs-lisp :var length=table-length()
          (* 2 length)
          #+END_SRC
          
          #+RESULTS:
          : 8
</PRE><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><DFN>code block with arguments</DFN></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">a code block name, as assigned by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+NAME:</CODE>, followed by parentheses and optional arguments passed within the parentheses following the code block name using standard function call syntax<PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; COLOR: black; PADDING-BOTTOM: 12pt; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">          #+NAME: double
          #+BEGIN_SRC emacs-lisp :var input=8
          (* 2 input)
          #+END_SRC
          
          #+RESULTS: double
          : 16
          
          #+NAME: squared
          #+BEGIN_SRC emacs-lisp :var input=double(input=1)
          (* input input)
          #+END_SRC
          
          #+RESULTS: squared
          : 4
</PRE><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><DFN>literal example</DFN></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">a literal example block named with a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+NAME:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line<PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; COLOR: black; PADDING-BOTTOM: 12pt; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">          #+NAME: literal-example
          #+BEGIN_EXAMPLE
          A literal example
          on two lines
          #+END_EXAMPLE
          
          #+NAME: read-literal-example
          #+BEGIN_SRC emacs-lisp :var x=literal-example
            (concatenate 'string x " for you.")
          #+END_SRC
          
          #+RESULTS: read-literal-example
          : A literal example
          : on two lines for you.
          
</PRE></DD></DL>
<H5 class=subsubheading style="FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Indexable variable values</H5>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">It is possible to reference portions of variable values by &#8220;indexing&#8221; into the variables. Indexes are 0 based with negative values counting back from the end. If an index is separated by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>,</CODE>s then each subsequent section will index into the next deepest nesting or dimension of the value. Note that this indexing occurs<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>before</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>other table related header arguments like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:hlines</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:colnames</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:rownames</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are applied. The following example assigns the last cell of the first row the table<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>example-table</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the variable<CODE>data</CODE>:</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     #+NAME: example-table
     | 1 | a |
     | 2 | b |
     | 3 | c |
     | 4 | d |
     
     #+BEGIN_SRC emacs-lisp :var data=example-table[0,-1]
       data
     #+END_SRC
     
     #+RESULTS:
     : a
</PRE>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Ranges of variable values can be referenced using two integers separated by a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:</CODE>, in which case the entire inclusive range is referenced. For example the following assigns the middle three rows of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>example-table</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>data</CODE>.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     #+NAME: example-table
     | 1 | a |
     | 2 | b |
     | 3 | c |
     | 4 | d |
     | 5 | 3 |
     
     #+BEGIN_SRC emacs-lisp :var data=example-table[1:3]
       data
     #+END_SRC
     
     #+RESULTS:
     | 2 | b |
     | 3 | c |
     | 4 | d |
</PRE>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Additionally, an empty index, or the single character<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*</CODE>, are both interpreted to mean the entire range and as such are equivalent to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0:-1</CODE>, as shown in the following example in which the entire first column is referenced.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     #+NAME: example-table
     | 1 | a |
     | 2 | b |
     | 3 | c |
     | 4 | d |
     
     #+BEGIN_SRC emacs-lisp :var data=example-table[,0]
       data
     #+END_SRC
     
     #+RESULTS:
     | 1 | 2 | 3 | 4 |
</PRE>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">It is possible to index into the results of code blocks as well as tables. Any number of dimensions can be indexed. Dimensions are separated from one another by commas, as shown in the following example.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     #+NAME: 3D
     #+BEGIN_SRC emacs-lisp
       '(((1  2  3)  (4  5  6)  (7  8  9))
         ((10 11 12) (13 14 15) (16 17 18))
         ((19 20 21) (22 23 24) (25 26 27)))
     #+END_SRC
     
     #+BEGIN_SRC emacs-lisp :var data=3D[1,,1]
       data
     #+END_SRC
     
     #+RESULTS:
     | 11 | 14 | 17 |
</PRE>
<H5 class=subsubheading style="FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Emacs Lisp evaluation of variables</H5>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Emacs lisp code can be used to initialize variable values. When a variable value starts with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>'</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>`</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>it will be evaluated as Emacs Lisp and the result of the evaluation will be assigned as the variable value. The following example demonstrates use of this evaluation to reliably pass the file-name of the Org mode buffer to a code block&#8212;note that evaluation of header arguments is guaranteed to take place in the original Org mode file, while there is no such guarantee for evaluation of the code block body.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     #+BEGIN_SRC sh :var filename=(buffer-file-name) :exports both
       wc -w $filename
     #+END_SRC
</PRE>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Note that values read from tables and lists will not be evaluated as Emacs Lisp, as shown in the following example.</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     #+NAME: table
     | (a b c) |
     
     #+HEADERS: :var data=table[0,0]
     #+BEGIN_SRC perl
       $data
     #+END_SRC
     
     #+RESULTS:
     : (a b c)</PRE>