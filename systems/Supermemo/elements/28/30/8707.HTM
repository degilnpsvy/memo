/*<BR>&nbsp;* Generate inline load/store functions for all MMU modes (typically<BR>&nbsp;* at least _user and _kernel) as well as _data versions, for all data<BR>&nbsp;* sizes.<BR>&nbsp;*<BR>&nbsp;* Used by target op helpers.<BR>&nbsp;*<BR>&nbsp;* The syntax for the accessors is:<BR>&nbsp;*<BR>&nbsp;* load: <FONT class=clozed>cpu_ld{sign}{size}_{mmusuffix}(env, ptr)</FONT><BR>&nbsp;*<BR>&nbsp;* store: cpu_st{sign}{size}_{mmusuffix}(env, ptr, val)<BR>&nbsp;*<BR>&nbsp;* sign is:<BR>&nbsp;* (empty): for 32 and 64 bit sizes<BR>&nbsp;*&nbsp;&nbsp; u&nbsp;&nbsp;&nbsp; : unsigned<BR>&nbsp;*&nbsp;&nbsp; s&nbsp;&nbsp;&nbsp; : signed<BR>&nbsp;*<BR>&nbsp;* size is:<BR>&nbsp;*&nbsp;&nbsp; b: 8 bits<BR>&nbsp;*&nbsp;&nbsp; w: 16 bits<BR>&nbsp;*&nbsp;&nbsp; <FONT class=clozed>l</FONT>: 32 bits<BR>&nbsp;*&nbsp;&nbsp; q: 64 bits<BR>&nbsp;*<BR>&nbsp;* mmusuffix is <SPAN class=cloze>[...]</SPAN>.<BR>&nbsp;*/