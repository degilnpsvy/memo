<H3 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: helvetica; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=nasm.note>3.1 A Note on Assemblers</A></H3>
<P style="WORD-SPACING: 0px; FONT: medium helvetica; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Linux will almost always be intalled with the default assemblers<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>as</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>as86</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>available, and quite likely also<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>gas</TT>. However, we will be using NASM, the Netwide Assembler. It uses the Intel syntax just like TASM, MASM, and other DOS assemblers, and the structure is also fairly similar. (Useless info:<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>as</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>gas</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>use the AT&amp;T syntax, which is somewhat different &#8211; eg. all registers must be prefixed with a %, and the source operand comes before the destination. See the References for a link to a tut using<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>as</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and AT&amp;T syntax.)</P>
<P style="WORD-SPACING: 0px; FONT: medium helvetica; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">NASM is cool because it's portable (there are Linux, Unix and DOS versions), it's free and it's powerful with lots of nice features. Trust me.