<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: helvetica; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">5. More Advanced Concepts</H2>
<P style="WORD-SPACING: 0px; FONT: medium helvetica; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Before I go on, you're probably wondering what that<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>equ $-hello</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>thing is doing in our Hello World program (line 3). As you may remember, when you use<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>equ</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to declare a variable (instead of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>db</TT>, for example), you are actually declaring a constant. Declaring the length of our string as a constant is sensible because it sure isn't going to change. But how does<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>$-hello</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>turn out to be the length of 'Hello world!' ? When NASM sees a '$' it replaces it with the assembly position at the beginning of that line. (That is also the position at the end of the previous line.) So subtracting the position of a variable from '$' will give us the number of bytes between the variable and '$'. If we want to declare a variable that contains the length of a string we've declared by saying<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>hello: db 'Hello world!',10</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>then we just stick<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>helloLen: equ $-hello</TT>on the next line. That will make<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>helloLen</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>equal to the number of bytes that<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>hello</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>takes up in memory, which in this case is 13 (the linefeed character also counts). Don't worry if this confuses you &#8211; just remember that it's a neat and easy way to declare the length of a string.</P>
<P style="WORD-SPACING: 0px; FONT: medium helvetica; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If you're more than just casually interested, I'd encourage you to check out the NASM documentation for more information on these things, and how to use some of the other neat features that I'm not going to mention in this tutorial.