<B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">Building Programs with Cygmon</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">There is a special linker script for use with Cygmon. An example of the final link command follows; substitute your host operating system name for </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">canonicalname </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">(see &#8220;Target processors and naming conventions&#8221; on page 7 for the content that toy replace). </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">eval.ld </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">is the linker script. The user program is given a program memory area starting at the appropriate address, and a stack growing down from that address. Space between the program memory and the stack pointer is used for the heap.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">canonicalname-gcc hello.o -Teval.ld -o hello</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Specify use of the linker script after all other object files and libraries to ensure this usage.</SPAN>