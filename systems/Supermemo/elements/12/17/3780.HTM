<SPAN style="mso-bookmark: OLE_LINK1"><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-49; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Italic-0-1000-49">Minimal exception handling</SPAN></I></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19">: <FONT class=extract>Interrupts are just one sort of exception (the MIPS word </FONT></SPAN></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-49; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Italic-0-1000-49"><FONT class=extract>exception </FONT></SPAN></I></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19"><FONT class=extract>covers all sorts of events where the CPU may want to interrupt normal sequential processing and invoke a software handler).</FONT> An exception may result from an interrupt, an attempt to access virtual memory that isn</SPAN></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19">t physically present, or many other things. You go through an exception, too, on a deliberately planted trap instruction like a system call that is used to get into the kernel in a protected OS. All exceptions result in control passing to the same fixed entry point. ( I exaggerate slightly; these days there are quite a few different entry points, and there were always at least two. Details will be given in section 5.3. </SPAN></SPAN><FONT class=extract><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19">On any exception, a MIPS CPU </SPAN></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-49; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Italic-0-1000-49">does not </SPAN></I></SPAN></FONT><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19"><FONT class=extract>store anything on a stack, write memory, or preserve any registers for you</FONT>.)</SPAN></SPAN> 
<P></P>
<P><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19">By convention, two general-purpose registers are reserved so that exception routines can bootstrap themselves (it is impossible to do anything on a MIPS CPU without using some registers). For a program running in any system that takes interrupts or traps, the values of these registers may change at any time, so you</SPAN></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-fareast-font-family: Minion-Regular-0-1000-19; mso-ascii-font-family: Minion-Regular-0-1000-19">&#8217;</SPAN></SPAN><SPAN style="mso-bookmark: OLE_LINK1"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-19">d better not use them.</SPAN></SPAN>