<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">5. D-cache initialization is slightly more awkward, because there is no</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">D-side equivalent of the </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>fill</SPAN>&#8221;<SPAN lang=EN-US> operation; we have to load through the cache and rely on normal miss processing. Here</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">s how it</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">s done:</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">/* clear all tags */</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">for (addr = KSEG0; addr &lt; KSEG0 + size; addr += lnsize)</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">Index_Store_Tag_D (addr);</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">/* load from each line (in cached space) */</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">for (addr = KSEG0; addr &lt; KSEG0 + size; addr += lnsize)</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">junk = *addr;</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">/* clear all tags */</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">for (addr = KSEG0; addr &lt; KSEG0 + size; addr += lnsize)</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-77; mso-bidi-font-family: Courier-8r-0-1000-77; mso-font-kerning: 0pt">Index_Store_Tag_D (addr);</SPAN>