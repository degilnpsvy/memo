<B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">Cygmon, a ROM Monitor</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">If you are trying to debug a program running on a machine that cannot run the GNU debugger, GDB, in its usual way, you can use remote debugging with Cygmon, a ROM monitor with a command line interface. For example, use Cygmon if you use remote debugging on an operating system kernel, or on a small system which does not have a general purpose operating system powerful enough to run a full-featured debugger.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Cygmon supports assembly level language debugging without a host-based debugger,allowing you to set and clear breakpoints, disassemble code, examine memory, and have the use of a system call handler to support the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">newlib </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">C library&#8217;s function bindings.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Completely compatible with existing tools and existing GNU debugging protocols,</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Cygmon has basic program handling and debugging commands. All commands consist of words followed by arguments separated by spaces. Any unique subset of a command is recognized as being that command, so </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">du </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">is equivalent to the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">dump </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">command. Generally, a command with some or all of its arguments empty will either assume a default set of arguments or return the status of the operation controlled by the command. Cygmon includes an API, using system calls for various functions, such as for providing access to the serial ports and on-board timer functionality, if you make them available to your program.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Cygmon allows you to load your projects into memory, run them, and view memory usage. You can also include several more advanced options at compile time, such as for disassembling machine instructions (though, of course, inclusion of such options significantly increases code size). Some configurations of GDB have special serial or TCP/IP interfaces to make this work with particular debugging targets; in addition, GDB comes with a generic serial protocol (specific to GDB, yet not specific to any particular target system) to use for writing remote sub-routines (or <I>stubs</I>, code running on a remote system exchanging with GDB). Other remote targets may then be available in your configuration of GDB; many targets can also then use the Cygmon software emulation tool.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">For more information, see &#8220;Using Cygmon for Remote Debugging&#8221; on page 57.</SPAN>