<B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">Using Cygwin to Port UNIX Applications to Windows</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Cygwin, a full-featured Win32 porting layer for UNIX applications, is compatible with all Win32 hosts (currently, these are Microsoft Windows NT/95/98 systems). With Cygwin, you can make all directories have similar behavior, with all the UNIX default tools in their familiar place. Scripting languages include </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">bash</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">tsh</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">tcsh</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">. Tools such as Perl, Tcl/Tk, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">sed</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">awk</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">vim</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, Emacs, xemacs, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">telnetd </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ftpd</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">. In order to emulate a UNIX kernel to access all processes that can run with it, use the Cygwin DLL (dynamically linked library). The Cygwin DLL will create shared memory areas so that other processes using separate instances of the DLL can access the kernel.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">Using DLLs with Cygwin, link into your program at run time instead of build time. The following documentation describes the three parts of a DLL and their usage. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><B><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">exports</SPAN></I></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, a list of functions and variables that the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file makes available to other programs as a list of <I>global </I>symbols, with the rest of the contents hidden. Create this list with a text editor; it&#8217;s also possible to do it automatically from the list of functions in your code. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">dlltool </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">utility creates the exports section of the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file from your text file of exported symbols.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><B><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">code and data</SPAN></I></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, the parts you write, along with the functions, variables, and so forth, merged together, building one object file and linking it to a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file; they are not put into a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.exe </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><B><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">import library</SPAN></I></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, a regular UNIX-like </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">library, containing the vital information for the operating system and the program to interacts as it or <I>imports </I>the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">as data, linking the data into an </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.exe </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file, all generated by the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">dlltool </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">utility.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">The following example shows a the use of the compile command with </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">gcc</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">, demonstrating how to build a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file, using a single </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">myprog.c </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file, for a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">myprog.exe </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">program, with a single </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">mydll.c </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file, for the contents of a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file, with the resulting</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">mydll.dll </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">file then compiling everything as objects.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">gcc -c myprog.c</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">gcc -c mydll.c</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">See &#8220;Building and Using DLLs with Cygwin&#8221; on page 52 for more explanation of linking with the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">dlltool </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">tool.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">See &#8220;Using Cygwin&#8221; on page 47 for more general information. Find the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">~/cygwin/doc </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">directory to locate documentation discussing use of the GNU development tools with a Win32 host and exploring the architecture of the Cygwin library. For more details, see </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">http://sources.redhat.com/cygwin/ </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt">for documentation.</SPAN>