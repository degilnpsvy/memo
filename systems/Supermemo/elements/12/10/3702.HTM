&nbsp;<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-BoldItalic-0-1000-50; mso-bidi-font-family: Minion-BoldItalic-0-1000-50; mso-font-kerning: 0pt"><STRONG><EM>Leaf Functions</EM></STRONG></SPAN> 
<P></P>
<P></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Functions that contain no calls to other functions are called </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-25; mso-bidi-font-family: Minion-Italic-0-1000-25; mso-font-kerning: 0pt">leaf functions</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">. They don</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">t have to worry about setting up argument structures and can safely maintain data in the nonpreserved registers </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">t0</SPAN></B><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8211;</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">t7</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">, </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a0</SPAN></B><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8211;</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a3</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">, and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">v0 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">v1</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">. They can use the stack for storage if they feel like it but can and should leave the return address in register </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">ra </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">and return directly to it.</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#65288;<SPAN lang=EN-US>13. Storing the return address somewhere else may work perfectly well, but the debugger won</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">t be </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">able to find it.</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#65289;<SPAN lang=EN-US></SPAN></SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt"><FONT class=extract>Most functions that you may write in assembly for tuning reasons or as convenience functions for accessing features not visible in C will be leaf functions; many of them will use no stack space at all. The declaration of such a function is very simple, for example:</FONT></SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;mips/asm.h&gt;</FONT></SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;mips/regdef.h&gt;</FONT></SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>LEAF(myleaf)</FONT></SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>...</FONT></SPAN></B></P>
<P><B><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-BoldOblique-8r-0-1000-8; mso-bidi-font-family: Courier-BoldOblique-8r-0-1000-8; mso-font-kerning: 0pt"><FONT class=extract>&lt;your code goes here&gt;</FONT></SPAN></I></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>...</FONT></SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>j ra</FONT></SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"><FONT class=extract>END(myleaf)</FONT></SPAN></B></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Most toolchains can pass your assembly source code through the C macro preprocessor before assembling it</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>UNIX-like tools decide based on the filename extension. The files </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">mips/asm.h </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">mips/regdef.h </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">include useful macros (like </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">LEAF </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">END</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">, shown above) for declaring global functions and data; they also allow you to use the software register names, for example, </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a0 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">instead of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">$4</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">The </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">LEAF </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">and </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">END </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">macros package together whatever you have to tell the assembler to help the debugger navigate your function: They don</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">t contribute anything else except the function name.</SPAN></FONT></P>
<P><B><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-BoldItalic-0-1000-50; mso-bidi-font-family: Minion-BoldItalic-0-1000-50; mso-font-kerning: 0pt">Nonleaf Functions</SPAN></I></B></P>
<P><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-25; mso-bidi-font-family: Minion-Italic-0-1000-25; mso-font-kerning: 0pt">Nonleaf functions </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">are those that contain calls to other functions. Normally, the function starts with code (the function prologue) to reset </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sp </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">to the low-water mark of its use inside the function; that low-water mark will be the base of the argument structure for the nested function call. We</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">ll also need stack space to save the incoming values of any of the </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>saved</SPAN>&#8221;<SPAN lang=EN-US> registers </SPAN></SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">s0</SPAN></B><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8211;</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">s8 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">that the function uses. Stack locations must also be reserved for </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">ra</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">, automatic (i.e., stack-based local) variables, and any further registers whose value this function needs to preserve over its own calls. (If the values of the argument registers </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a0</SPAN></B><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8211;</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a3 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">need to be preserved, they can be saved into their standard positions on the argument structure.)</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Note that since </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sp </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">is set only once (in the function prologue), all stack-held locations can be referenced by fixed offsets from </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sp</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">. To illustrate this, we will define a fairly trivial C module. But the function </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">nonleaf() </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">will take five arguments (so it will need to pass at least one argument on the stack), it will call another function with five arguments, and one of those arguments will be a pointer to a stack location. That should show you enough to get the feel for how the ABI works.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">extern nested (int a, int b, int c, int d, int *e);</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">extern nonleaf (int a, int b, int c, int d, int e)</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">{</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">nested(d, b, c, a, &amp;e);</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">}</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">This will give you a stack structure similar to that shown in Table 11.4.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&nbsp;</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">You can see where argument slots are reserved, but not used, because the corresponding arguments are in registers. You can also see where padding is introduced, because the lowest saved register and the bottom of the running stackframe must both be aligned to eight bytes.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Compile </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">nonleaf.c </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">to assembly code with the GNU C compiler and we get:</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.file 1 "nonleaf.c"</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.section .mdebug.abi32</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.previous</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.text</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.align 2</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.globl nonleaf</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set nomips16</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.ent nonleaf</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">nonleaf:</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.frame $sp,32,$31 # vars= 0, regs= 1/0, args= 24, gp= 0</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.mask 0x80000000,-8</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.fmask 0x00000000,0</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set noreorder</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set nomacro</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">addiu $sp,$sp,-32</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sw $31,24($sp)</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">move $2,$4</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">addiu $3,$sp,48</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sw $3,16($sp)</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">move $4,$7</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">jal nested</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">move $7,$2</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">lw $31,24($sp)</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">j $31</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">addiu $sp,$sp,32</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set macro</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set reorder</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.end nonleaf</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.ident "GCC: (GNU) 3.4.4 mipssde-6.03.01-20051114"</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">We</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">ll probably need to walk through that in sections.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.file 1 "nonleaf.c"</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.section .mdebug.abi32</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.previous</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">The start of the file is housekeeping information for very basic debug (if we</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">d compiled the file with the </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;&#8211;<SPAN lang=EN-US>g</SPAN>&#8221;<SPAN lang=EN-US> flag, we</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">d have got a lot more debugging information). No further explanation, sorry!</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.text</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.align 2</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.globl nonleaf</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.ent nonleaf</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">nonleaf:</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Object code and linkage housekeeping. We</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">re generating code so it will go in the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.text </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">section of the object file, and the function entry point name is a global symbol that is also an entry point. And there is the entry point label, too.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.frame $sp,32,$31 # vars= 0, regs= 1/0, args= 24, gp= 0</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.mask 0x80000000,-8</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.fmask 0x00000000,0</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Information about the stack. We</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">ll generate a 32-byte stack frame for this function, as seen in Table 11.4. The only register to be saved is </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">$31</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">, the return address. That shows up in the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.mask </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">as bit 31 of a bit map of saved registers, and that </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">-8 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">indicates the position of the stack block used for saving GP registers.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.fmask </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">does the same job for FP registers: There aren</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">t any FP registers used here, so it</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">s zero.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set noreorder</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set nomacro</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Those two are telling the assembler that the compiler is taking charge here. The assembler is not to move instructions around to fill branch delay slots, or to interpret </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>macro instructions</SPAN>&#8221;<SPAN lang=EN-US> (ones that expand to more than one instruction in machine code).</SPAN></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">It</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">s about time we got on with some code:</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">addiu $sp,$sp,-32</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sw $31,24($sp)</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Adjust the stack pointer and save the return address from the call to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">nonleaf()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">move $2,$4 # remember </SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-58; mso-ascii-font-family: Courier-Bold-8r-0-1000-58">&#8216;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-58; mso-ascii-font-family: Courier-Bold-8r-0-1000-58">&#8217;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"> for later</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">addiu $3,$sp,48</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">sw $3,16($sp) # put &amp;e in argument slot</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">move $4,$7 # first argument is </SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-58; mso-ascii-font-family: Courier-Bold-8r-0-1000-58">&#8216;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">d</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-58; mso-ascii-font-family: Courier-Bold-8r-0-1000-58">&#8217;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"></SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">jal nested</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">move $7,$2 # in delay slot, third argument is </SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-58; mso-ascii-font-family: Courier-Bold-8r-0-1000-58">&#8216;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">a</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt; mso-fareast-font-family: Courier-Bold-8r-0-1000-58; mso-ascii-font-family: Courier-Bold-8r-0-1000-58">&#8217;</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt"></SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Adjust the arguments and call </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-8r-0-1000-29; mso-bidi-font-family: Courier-8r-0-1000-29; mso-font-kerning: 0pt">nested()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">lw $31,24($sp)</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">j $31</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">addiu $sp,$sp,32</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Retrieve the return address and return. Restore the stack pointer in the delay slot.</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set macro</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.set reorder</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.end nonleaf</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-58; mso-bidi-font-family: Courier-Bold-8r-0-1000-58; mso-font-kerning: 0pt">.ident "GCC: (GNU) 3.4.4 mipssde-6.03.01-20051114"</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Re-enable all the assembly things you turned off, and include a string to identify the compiler build.</SPAN>