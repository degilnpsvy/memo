Artistic Style 2.03<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Maintained by: Jim Pattee<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Original Author: Tal Davidson 
<P></P>
<P>Usage&nbsp; :&nbsp; astyle [options] Source1.cpp Source2.cpp&nbsp; [...]<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; astyle [options] &lt; Original &gt; Beautified</P>
<P>When indenting a specific file, the resulting indented file RETAINS the<BR>original file-name. The original pre-indented file is renamed, with a<BR>suffix of ".orig" added to the original filename.</P>
<P>Wildcards (* and ?) may be used in the filename.<BR>A 'recursive' option can process directories recursively.</P>
<P>By default, astyle is set up to indent C/C++/C#/Java files, with four<BR>spaces per indent, a maximal indentation of 40 spaces inside continuous<BR>statements, a minimum indentation of eight spaces inside conditional<BR>statements, and NO formatting options.</P>
<P>Option's Format:<BR>----------------<BR>&nbsp;&nbsp;&nbsp; Long options (starting with '--') must be written one at a time.<BR>&nbsp;&nbsp;&nbsp; Short options (starting with '-') may be appended together.<BR>&nbsp;&nbsp;&nbsp; Thus, -bps4 is the same as -b -p -s4.</P>
<P>Default options file:<BR>---------------------<BR>&nbsp;&nbsp;&nbsp; Artistic Style looks for a default options file in the following order:<BR>&nbsp;&nbsp;&nbsp; 1. The contents of the ARTISTIC_STYLE_OPTIONS environment variable if it exists.<BR>&nbsp;&nbsp;&nbsp; 2. The file called .astylerc in the directory pointed to by the HOME environment variable ( i.e. HOME/.astylerc ).<BR>&nbsp;&nbsp;&nbsp; 3. The file called astylerc in the directory pointed to by the USERPROFILE environment variable ( i.e. %USERPROFILE%\astylerc ).<BR>&nbsp;&nbsp;&nbsp; If a default options file is found, the options in this file will be parsed BEFORE the command-line options.<BR>&nbsp;&nbsp;&nbsp; Long options within the default option file may be written without the preliminary '--'.</P>
<P>Bracket Style Options:<BR>----------------------<BR>&nbsp;&nbsp;&nbsp; --style=allman&nbsp; OR&nbsp; --style=ansi&nbsp; OR&nbsp; --style=bsd<BR>&nbsp;&nbsp;&nbsp;&nbsp; OR&nbsp; --style=break&nbsp; OR&nbsp; -A1<BR>&nbsp;&nbsp;&nbsp; Allman style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Broken brackets.</P>
<P>&nbsp;&nbsp;&nbsp; --style=java&nbsp; OR&nbsp; --style=attach&nbsp; OR&nbsp; -A2<BR>&nbsp;&nbsp;&nbsp; Java style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Attached brackets.</P>
<P>&nbsp;&nbsp;&nbsp; --style=kr&nbsp; OR&nbsp; --style=k&amp;r&nbsp; OR&nbsp; --style=k/r&nbsp; OR&nbsp; -A3<BR>&nbsp;&nbsp;&nbsp; Kernighan &amp; Ritchie style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Linux brackets.</P>
<P>&nbsp;&nbsp;&nbsp; --style=stroustrup&nbsp; OR&nbsp; -A4<BR>&nbsp;&nbsp;&nbsp; Stroustrup style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Stroustrup brackets.</P>
<P>&nbsp;&nbsp;&nbsp; --style=whitesmith&nbsp; OR&nbsp; -A5<BR>&nbsp;&nbsp;&nbsp; Whitesmith style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Broken, indented brackets.<BR>&nbsp;&nbsp;&nbsp; Indented class blocks and switch blocks.</P>
<P>&nbsp;&nbsp;&nbsp; --style=banner&nbsp; OR&nbsp; -A6<BR>&nbsp;&nbsp;&nbsp; Banner style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Attached, indented brackets.<BR>&nbsp;&nbsp;&nbsp; Indented class blocks and switch blocks.</P>
<P>&nbsp;&nbsp;&nbsp; --style=gnu&nbsp; OR&nbsp; -A7<BR>&nbsp;&nbsp;&nbsp; GNU style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Broken brackets, indented blocks.</P>
<P>&nbsp;&nbsp;&nbsp; --style=linux&nbsp; OR&nbsp; -A8<BR>&nbsp;&nbsp;&nbsp; Linux style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Linux brackets, minimum conditional indent is one-half indent.</P>
<P>&nbsp;&nbsp;&nbsp; --style=horstmann&nbsp; OR&nbsp; -A9<BR>&nbsp;&nbsp;&nbsp; Horstmann style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Run-in brackets, indented switches.</P>
<P>&nbsp;&nbsp;&nbsp; --style=1tbs&nbsp; OR&nbsp; --style=otbs&nbsp; OR&nbsp; -A10<BR>&nbsp;&nbsp;&nbsp; One True Brace Style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Linux brackets, add brackets to all conditionals.</P>
<P>&nbsp;&nbsp;&nbsp; --style=pico&nbsp; OR&nbsp; -A11<BR>&nbsp;&nbsp;&nbsp; Pico style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Run-in opening brackets and attached closing brackets.<BR>&nbsp;&nbsp;&nbsp; Uses keep one line blocks and keep one line statements.</P>
<P>&nbsp;&nbsp;&nbsp; --style=lisp&nbsp; OR&nbsp; -A12<BR>&nbsp;&nbsp;&nbsp; Lisp style formatting/indenting.<BR>&nbsp;&nbsp;&nbsp; Attached opening brackets and attached closing brackets.<BR>&nbsp;&nbsp;&nbsp; Uses keep one line statements.</P>
<P>Tab Options:<BR>------------<BR>&nbsp;&nbsp;&nbsp; default indent option<BR>&nbsp;&nbsp;&nbsp; If no indentation option is set, the default option of 4 spaces per indent will be used.</P>
<P>&nbsp;&nbsp;&nbsp; --indent=spaces=#&nbsp; OR&nbsp; -s#<BR>&nbsp;&nbsp;&nbsp; Indent using # spaces per indent. Not specifying # will result in a default of 4 spaces per indent.</P>
<P>&nbsp;&nbsp;&nbsp; --indent=tab&nbsp; OR&nbsp; --indent=tab=#&nbsp; OR&nbsp; -t&nbsp; OR&nbsp; -t#<BR>&nbsp;&nbsp;&nbsp; Indent using tab characters, assuming that each&nbsp;indent is # spaces long. Not specifying # will result in a default assumption of 4 spaces per indent.</P>
<P>&nbsp;&nbsp;&nbsp; --indent=force-tab=#&nbsp; OR&nbsp; -T#<BR>&nbsp;&nbsp;&nbsp; Indent using tab characters, assuming that each indent is # spaces long. Force tabs to be used in areas AStyle would prefer to use spaces.</P>
<P>&nbsp;&nbsp;&nbsp; --indent=force-tab-x=#&nbsp; OR&nbsp; -xT#<BR>&nbsp;&nbsp;&nbsp; Allows the tab length to be set to a length that is different from the indent length. This may cause the indentation to be a mix of both spaces and tabs. This option sets the tab length.</P>
<P>Indentation options:<BR>--------------------<BR>&nbsp;&nbsp;&nbsp; --indent-classes&nbsp; OR&nbsp; -C<BR>&nbsp;&nbsp;&nbsp; Indent 'class' blocks, so that the inner 'public:',<BR>&nbsp;&nbsp;&nbsp; 'protected:' and 'private: headers are indented in<BR>&nbsp;&nbsp;&nbsp; relation to the class block.</P>
<P>&nbsp;&nbsp;&nbsp; --indent-switches&nbsp; OR&nbsp; -S<BR>&nbsp;&nbsp;&nbsp; Indent 'switch' blocks, so that the inner 'case XXX:'<BR>&nbsp;&nbsp;&nbsp; headers are indented in relation to the switch block.</P>
<P>&nbsp;&nbsp;&nbsp; --indent-cases&nbsp; OR&nbsp; -K<BR>&nbsp;&nbsp;&nbsp; Indent case blocks from the 'case XXX:' headers.<BR>&nbsp;&nbsp;&nbsp; Case statements not enclosed in blocks are NOT indented.</P>
<P>&nbsp;&nbsp;&nbsp; --indent-namespaces&nbsp; OR&nbsp; -N<BR>&nbsp;&nbsp;&nbsp; Indent the contents of namespace blocks.</P>
<P>&nbsp;&nbsp;&nbsp; --indent-labels&nbsp; OR&nbsp; -L<BR>&nbsp;&nbsp;&nbsp; Indent labels so that they appear one indent less than<BR>&nbsp;&nbsp;&nbsp; the current indentation level, rather than being<BR>&nbsp;&nbsp;&nbsp; flushed completely to the left (which is the default).</P>
<P>&nbsp;&nbsp;&nbsp; --indent-preprocessor&nbsp; OR&nbsp; -w<BR>&nbsp;&nbsp;&nbsp; Indent multi-line #define statements.</P>
<P>&nbsp;&nbsp;&nbsp; --indent-col1-comments&nbsp; OR&nbsp; -Y<BR>&nbsp;&nbsp;&nbsp; Indent line comments that start in column one.</P>
<P>&nbsp;&nbsp;&nbsp; --min-conditional-indent=#&nbsp; OR&nbsp; -m#<BR>&nbsp;&nbsp;&nbsp; Indent a minimal # spaces in a continuous conditional<BR>&nbsp;&nbsp;&nbsp; belonging to a conditional header.<BR>&nbsp;&nbsp;&nbsp; The valid values are:<BR>&nbsp;&nbsp;&nbsp; 0 - no minimal indent.<BR>&nbsp;&nbsp;&nbsp; 1 - indent at least one additional indent.<BR>&nbsp;&nbsp;&nbsp; 2 - indent at least two additional indents.<BR>&nbsp;&nbsp;&nbsp; 3 - indent at least one-half an additional indent.<BR>&nbsp;&nbsp;&nbsp; The default value is 2, two additional indents.</P>
<P>&nbsp;&nbsp;&nbsp; --max-instatement-indent=#&nbsp; OR&nbsp; -M#<BR>&nbsp;&nbsp;&nbsp; Indent a maximal # spaces in a continuous statement,<BR>&nbsp;&nbsp;&nbsp; relative to the previous line.<BR>&nbsp;&nbsp;&nbsp; The valid values are 40 thru 120.<BR>&nbsp;&nbsp;&nbsp; The default value is 40.</P>
<P>Padding options:<BR>--------------------<BR>&nbsp;&nbsp;&nbsp; --break-blocks&nbsp; OR&nbsp; -f<BR>&nbsp;&nbsp;&nbsp; Insert empty lines around unrelated blocks, labels, classes, ...</P>
<P>&nbsp;&nbsp;&nbsp; --break-blocks=all&nbsp; OR&nbsp; -F<BR>&nbsp;&nbsp;&nbsp; Like --break-blocks, except also insert empty lines <BR>&nbsp;&nbsp;&nbsp; around closing headers (e.g. 'else', 'catch', ...).</P>
<P>&nbsp;&nbsp;&nbsp; --pad-oper&nbsp; OR&nbsp; -p<BR>&nbsp;&nbsp;&nbsp; Insert space padding around operators.</P>
<P>&nbsp;&nbsp;&nbsp; --pad-paren&nbsp; OR&nbsp; -P<BR>&nbsp;&nbsp;&nbsp; Insert space padding around parenthesis on both the outside<BR>&nbsp;&nbsp;&nbsp; and the inside.</P>
<P>&nbsp;&nbsp;&nbsp; --pad-paren-out&nbsp; OR&nbsp; -d<BR>&nbsp;&nbsp;&nbsp; Insert space padding around parenthesis on the outside only.</P>
<P>&nbsp;&nbsp;&nbsp; --pad-first-paren-out&nbsp; OR&nbsp; -xd<BR>&nbsp;&nbsp;&nbsp; Insert space padding around first parenthesis in a series on<BR>&nbsp;&nbsp;&nbsp; the outside only.</P>
<P>&nbsp;&nbsp;&nbsp; --pad-paren-in&nbsp; OR&nbsp; -D<BR>&nbsp;&nbsp;&nbsp; Insert space padding around parenthesis on the inside only.</P>
<P>&nbsp;&nbsp;&nbsp; --pad-header&nbsp; OR&nbsp; -H<BR>&nbsp;&nbsp;&nbsp; Insert space padding after paren headers (e.g. 'if', 'for'...).</P>
<P>&nbsp;&nbsp;&nbsp; --unpad-paren&nbsp; OR&nbsp; -U<BR>&nbsp;&nbsp;&nbsp; Remove unnecessary space padding around parenthesis. This<BR>&nbsp;&nbsp;&nbsp; can be used in combination with the 'pad' options above.</P>
<P>&nbsp;&nbsp;&nbsp; --delete-empty-lines&nbsp; OR&nbsp; -xd<BR>&nbsp;&nbsp;&nbsp; Delete empty lines within a function or method.<BR>&nbsp;&nbsp;&nbsp; It will NOT delete lines added by the break-blocks options.</P>
<P>&nbsp;&nbsp;&nbsp; --fill-empty-lines&nbsp; OR&nbsp; -E<BR>&nbsp;&nbsp;&nbsp; Fill empty lines with the white space of their previous lines.</P>
<P>&nbsp;&nbsp;&nbsp; --align-pointer=type&nbsp;&nbsp;&nbsp; OR&nbsp; -k1<BR>&nbsp;&nbsp;&nbsp; --align-pointer=middle&nbsp; OR&nbsp; -k2<BR>&nbsp;&nbsp;&nbsp; --align-pointer=name&nbsp;&nbsp;&nbsp; OR&nbsp; -k3<BR>&nbsp;&nbsp;&nbsp; Attach a pointer or reference operator (*, &amp;, or ^) to either<BR>&nbsp;&nbsp;&nbsp; the operator type (left), middle, or operator name (right).<BR>&nbsp;&nbsp;&nbsp; To align the reference separately use --align-reference.</P>
<P>&nbsp;&nbsp;&nbsp; --align-reference=none&nbsp;&nbsp;&nbsp; OR&nbsp; -W0<BR>&nbsp;&nbsp;&nbsp; --align-reference=type&nbsp;&nbsp;&nbsp; OR&nbsp; -W1<BR>&nbsp;&nbsp;&nbsp; --align-reference=middle&nbsp; OR&nbsp; -W2<BR>&nbsp;&nbsp;&nbsp; --align-reference=name&nbsp;&nbsp;&nbsp; OR&nbsp; -W3<BR>&nbsp;&nbsp;&nbsp; Attach a reference operator (&amp;) to either<BR>&nbsp;&nbsp;&nbsp; the operator type (left), middle, or operator name (right).<BR>&nbsp;&nbsp;&nbsp; If not set, follow pointer alignment.</P>
<P>Formatting options:<BR>-------------------<BR>&nbsp;&nbsp;&nbsp; --break-closing-brackets&nbsp; OR&nbsp; -y<BR>&nbsp;&nbsp;&nbsp; Break brackets before closing headers (e.g. 'else', 'catch', ...).<BR>&nbsp;&nbsp;&nbsp; Use with --brackets=attach, --brackets=linux, <BR>&nbsp;&nbsp;&nbsp; or --brackets=stroustrup.</P>
<P>&nbsp;&nbsp;&nbsp; --break-elseifs&nbsp; OR&nbsp; -e<BR>&nbsp;&nbsp;&nbsp; Break 'else if()' statements into two different lines.</P>
<P>&nbsp;&nbsp;&nbsp; --add-brackets&nbsp; OR&nbsp; -j<BR>&nbsp;&nbsp;&nbsp; Add brackets to unbracketed one line conditional statements.</P>
<P>&nbsp;&nbsp;&nbsp; --add-one-line-brackets&nbsp; OR&nbsp; -J<BR>&nbsp;&nbsp;&nbsp; Add one line brackets to unbracketed one line conditional<BR>&nbsp;&nbsp;&nbsp; statements.</P>
<P>&nbsp;&nbsp;&nbsp; --keep-one-line-blocks&nbsp; OR&nbsp; -O<BR>&nbsp;&nbsp;&nbsp; Don't break blocks residing completely on one line.</P>
<P>&nbsp;&nbsp;&nbsp; --keep-one-line-statements&nbsp; OR&nbsp; -o<BR>&nbsp;&nbsp;&nbsp; Don't break lines containing multiple statements into<BR>&nbsp;&nbsp;&nbsp; multiple single-statement lines.</P>
<P>&nbsp;&nbsp;&nbsp; --convert-tabs&nbsp; OR&nbsp; -c<BR>&nbsp;&nbsp;&nbsp; Convert tabs to the appropriate number of spaces.</P>
<P>&nbsp;&nbsp;&nbsp; --close-templates&nbsp; OR&nbsp; -xy<BR>&nbsp;&nbsp;&nbsp; Close ending angle brackets on template definitions.</P>
<P>&nbsp;&nbsp;&nbsp; --max-code-length=#&nbsp;&nbsp;&nbsp; OR&nbsp; -xC#<BR>&nbsp;&nbsp;&nbsp; --break-after-logical&nbsp; OR&nbsp; -xL<BR>&nbsp;&nbsp;&nbsp; max-code-length=# will break the line if it exceeds more than<BR>&nbsp;&nbsp;&nbsp; # characters. The valid values are 50 thru 200.<BR>&nbsp;&nbsp;&nbsp; If the line contains logical conditionals they will be placed<BR>&nbsp;&nbsp;&nbsp; first on the new line. The option break-after-logical will<BR>&nbsp;&nbsp;&nbsp; cause the logical conditional to be placed last on the<BR>&nbsp;&nbsp;&nbsp; previous line.</P>
<P>&nbsp;&nbsp;&nbsp; --mode=c<BR>&nbsp;&nbsp;&nbsp; Indent a C or C++ source file (this is the default).</P>
<P>&nbsp;&nbsp;&nbsp; --mode=java<BR>&nbsp;&nbsp;&nbsp; Indent a Java source file.</P>
<P>&nbsp;&nbsp;&nbsp; --mode=cs<BR>&nbsp;&nbsp;&nbsp; Indent a C# source file.</P>
<P>Other options:<BR>--------------<BR>&nbsp;&nbsp;&nbsp; --suffix=####<BR>&nbsp;&nbsp;&nbsp; Append the suffix #### instead of '.orig' to original filename.</P>
<P>&nbsp;&nbsp;&nbsp; --suffix=none&nbsp; OR&nbsp; -n<BR>&nbsp;&nbsp;&nbsp; Do not retain a backup of the original file.</P>
<P>&nbsp;&nbsp;&nbsp; --recursive&nbsp; OR&nbsp; -r&nbsp; OR&nbsp; -R<BR>&nbsp;&nbsp;&nbsp; Process subdirectories recursively.</P>
<P>&nbsp;&nbsp;&nbsp; --exclude=####<BR>&nbsp;&nbsp;&nbsp; Specify a file or directory #### to be excluded from processing.</P>
<P>&nbsp;&nbsp;&nbsp; ignore-exclude-errors&nbsp; OR&nbsp; -i<BR>&nbsp;&nbsp;&nbsp; Allow processing to continue if there are errors in the exclude=###<BR>&nbsp;&nbsp;&nbsp; options. It will display the unmatched excludes.</P>
<P>&nbsp;&nbsp;&nbsp; ignore-exclude-errors-x&nbsp; OR&nbsp; -xi<BR>&nbsp;&nbsp;&nbsp; Allow processing to continue if there are errors in the exclude=###<BR>&nbsp;&nbsp;&nbsp; options. It will NOT display the unmatched excludes.</P>
<P>&nbsp;&nbsp;&nbsp; --errors-to-stdout&nbsp; OR&nbsp; -X<BR>&nbsp;&nbsp;&nbsp; Print errors and help information to standard-output rather than<BR>&nbsp;&nbsp;&nbsp; to standard-error.</P>
<P>&nbsp;&nbsp;&nbsp; --preserve-date&nbsp; OR&nbsp; -Z<BR>&nbsp;&nbsp;&nbsp; The date and time modified will not be changed in the formatted file.</P>
<P>&nbsp;&nbsp;&nbsp; --verbose&nbsp; OR&nbsp; -v<BR>&nbsp;&nbsp;&nbsp; Verbose mode. Extra informational messages will be displayed.</P>
<P>&nbsp;&nbsp;&nbsp; --formatted&nbsp; OR&nbsp; -Q<BR>&nbsp;&nbsp;&nbsp; Formatted display mode. Display only the files that have been formatted.</P>
<P>&nbsp;&nbsp;&nbsp; --quiet&nbsp; OR&nbsp; -q<BR>&nbsp;&nbsp;&nbsp; Quiet mode. Suppress all output except error messages.</P>
<P>&nbsp;&nbsp;&nbsp; --lineend=windows&nbsp; OR&nbsp; -z1<BR>&nbsp;&nbsp;&nbsp; --lineend=linux&nbsp;&nbsp;&nbsp; OR&nbsp; -z2<BR>&nbsp;&nbsp;&nbsp; --lineend=macold&nbsp;&nbsp; OR&nbsp; -z3<BR>&nbsp;&nbsp;&nbsp; Force use of the specified line end style. Valid options<BR>&nbsp;&nbsp;&nbsp; are windows (CRLF), linux (LF), and macold (CR).</P>
<P>Command Line Only:<BR>------------------<BR>&nbsp;&nbsp;&nbsp; --options=####<BR>&nbsp;&nbsp;&nbsp; Specify an options file #### to read and use.</P>
<P>&nbsp;&nbsp;&nbsp; --options=none<BR>&nbsp;&nbsp;&nbsp; Disable the default options file.<BR>&nbsp;&nbsp;&nbsp; Only the command-line parameters will be used.</P>
<P>&nbsp;&nbsp;&nbsp; --ascii&nbsp; OR&nbsp; -I<BR>&nbsp;&nbsp;&nbsp; The displayed output will be ascii characters only.</P>
<P>&nbsp;&nbsp;&nbsp; --version&nbsp; OR&nbsp; -V<BR>&nbsp;&nbsp;&nbsp; Print version number.</P>
<P>&nbsp;&nbsp;&nbsp; --help&nbsp; OR&nbsp; -h&nbsp; OR&nbsp; -?<BR>&nbsp;&nbsp;&nbsp; Print this help message.</P>
<P>&nbsp;