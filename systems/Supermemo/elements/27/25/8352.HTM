There are two main applications for properties in Org mode. First, properties are like tags, but with a value. Imagine maintaining a file where you document bugs and plan releases for a piece of software. Instead of using tags like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:release_1:</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:release_2:</CODE>, you can use a property, say<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>:Release:</CODE>, that in different subtrees has different values, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>1.0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>2.0</CODE>. Second, you can use properties to implement (very basic) database capabilities in an Org buffer. Imagine keeping track of your music CDs, where properties could be things such as the album, artist, date of release, number of tracks, and so on.