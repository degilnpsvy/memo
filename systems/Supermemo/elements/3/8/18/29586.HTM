static struct my_data *get_entry()<BR>{<BR>&nbsp;struct my_data *entry = NULL;<BR>&nbsp;mutex_lock(&amp;mutex);<BR>&nbsp;if (!list_empty(&amp;q)) {<BR>&nbsp;&nbsp;entry = container_of(q.next, struct my_data, link);<BR>&nbsp;&nbsp;if (!kref_get_unless_zero(&amp;entry-&gt;refcount))<BR>&nbsp;&nbsp;&nbsp;entry = NULL;<BR>&nbsp;}<BR>&nbsp;mutex_unlock(&amp;mutex);<BR>&nbsp;return entry;<BR>}
<P></P>
<P>static void release_entry(struct kref *ref)<BR>{<BR>&nbsp;struct my_data *entry = container_of(ref, struct my_data, refcount);</P>
<P>&nbsp;mutex_lock(&amp;mutex);<BR>&nbsp;list_del(&amp;entry-&gt;link);<BR>&nbsp;mutex_unlock(&amp;mutex);<BR>&nbsp;kfree(entry);<BR>}</P>
<P>static void put_entry(struct my_data *entry)<BR>{<BR>&nbsp;kref_put(&amp;entry-&gt;refcount, release_entry);<BR>}