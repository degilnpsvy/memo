/**<BR>&nbsp;* down_killable - acquire the semaphore unless killed<BR>&nbsp;* @sem: the semaphore to be acquired<BR>&nbsp;*<BR>&nbsp;* Attempts to acquire the semaphore.&nbsp; If no more tasks are allowed to<BR>&nbsp;* acquire the semaphore, calling this function will put the task to sleep.<BR>&nbsp;* If the sleep is interrupted by a fatal signal, this function will return<BR>&nbsp;* -EINTR.&nbsp; If the semaphore is successfully acquired, this function returns<BR>&nbsp;* 0.<BR>&nbsp;*/<BR>int down_killable(struct semaphore *sem)<BR>{<BR>&nbsp;unsigned long flags;<BR>&nbsp;int result = 0;
<P></P>
<P>&nbsp;raw_spin_lock_irqsave(&amp;sem-&gt;lock, flags);<BR>&nbsp;if (likely(sem-&gt;count &gt; 0))<BR>&nbsp;&nbsp;sem-&gt;count--;<BR>&nbsp;else<BR>&nbsp;&nbsp;result = __down_killable(sem);<BR>&nbsp;raw_spin_unlock_irqrestore(&amp;sem-&gt;lock, flags);</P>
<P>&nbsp;return result;<BR>}<BR>EXPORT_SYMBOL(down_killable);