&nbsp;* There are primitives for adding and removing nodes to/from a klist.<BR>&nbsp;* When deleting, <SPAN class=cloze>[...]</SPAN>() will simply decrement the reference count.<BR>&nbsp;* Only when the count goes to 0 is the node removed from the list.<BR>&nbsp;* klist_remove() will try to delete the node from the list and block until<BR>&nbsp;* it is actually removed. This is useful for objects (like devices) that<BR>&nbsp;* have been removed from the system and must be freed (but must wait until<BR>&nbsp;* all accessors have finished).