Callbacks so sysfs can detemine namespaces.<PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#33" name=33>33</A><SPAN class=c>/*
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#34" name=34>34</A> * Callbacks so sysfs can determine namespaces
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#35" name=35>35</A> *   @grab_current_ns: return a new reference to calling task's namespace
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#36" name=36>36</A> *   @netlink_ns: return namespace to which a sock belongs (right?)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#37" name=37>37</A> *   @initial_ns: return the initial namespace (i.e. init_net_ns)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#38" name=38>38</A> *   @drop_ns: drops a reference to namespace
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#39" name=39>39</A> */</SPAN>
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#40" name=40>40</A><B>struct</B> <A class=xs name=kobj_ns_type_operations></A><A class=xs href="http://172.21.12.145:8080/source/s?refs=kobj_ns_type_operations&amp;project=linux-4.5">kobj_ns_type_operations</A> {
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#41" name=41>41</A>	<B>enum</B> <A class=d href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#kobj_ns_type">kobj_ns_type</A> <A class=xmb name=type></A><A class=xmb href="http://172.21.12.145:8080/source/s?refs=type&amp;project=linux-4.5">type</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#42" name=42>42</A>	<B>bool</B> (*<A class=xmb name=current_may_mount></A><A class=xmb href="http://172.21.12.145:8080/source/s?refs=current_may_mount&amp;project=linux-4.5">current_may_mount</A>)(<B>void</B>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#43" name=43>43</A>	<B>void</B> *(*<A class=xmb name=grab_current_ns></A><A class=xmb href="http://172.21.12.145:8080/source/s?refs=grab_current_ns&amp;project=linux-4.5">grab_current_ns</A>)(<B>void</B>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#44" name=44>44</A>	<B>const</B> <B>void</B> *(*<A class=xmb name=netlink_ns></A><A class=xmb href="http://172.21.12.145:8080/source/s?refs=netlink_ns&amp;project=linux-4.5">netlink_ns</A>)(<B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=sock&amp;project=linux-4.5">sock</A> *<A href="http://172.21.12.145:8080/source/s?defs=sk&amp;project=linux-4.5">sk</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#45" name=45>45</A>	<B>const</B> <B>void</B> *(*<A class=xmb name=initial_ns></A><A class=xmb href="http://172.21.12.145:8080/source/s?refs=initial_ns&amp;project=linux-4.5">initial_ns</A>)(<B>void</B>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#46" name=46>46</A>	<B>void</B> (*<A class=xmb name=drop_ns></A><A class=xmb href="http://172.21.12.145:8080/source/s?refs=drop_ns&amp;project=linux-4.5">drop_ns</A>)(<B>void</B> *);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/kobject_ns.h#47" name=47>47</A>};</PRE>