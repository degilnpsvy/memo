B1.5.16 Reset management
<P></P>
<P>The AIRCR provides the following mechanisms for a system reset:<BR>&#8226; The control bit SYSRESETREQ requests a reset by an external system resource. The system components that are reset by this request are IMPLEMENTATION DEFINED. SYSRESETREQ is required to cause a Local reset.<BR>&#8226; The control bit VECTRESET causes a Local reset. It is IMPLEMENTATION DEFINED whether other parts of the system are reset as a result of this control bit. This is a debug feature, see Reset and debug on page B1-680.</P>
<P>Note<BR>A single write to the AIRCR that sets both SYSRESETREQ and VECTRESET to 1 can cause UNPREDICTABLE behavior.</P>
<P>See Application Interrupt and Reset Control Register, AIRCR on page B3-717 for more information.</P>
<P>For SYSRESETREQ, the architecture does not guarantee that the reset takes place immediately. A typical code sequence to synchronize reset following a write to the SYSRESETREQ control bit is:<BR>DSB;<BR>Loop B Loop;</P>
<P>The AIRCR also provides a mechanism to reset the active state of all exceptions. Writing 1 to the VECTCLRACTIVE bit clears the active state of all exceptions and clears the exception number in the IPSR to 0, see The IPSR on page B1-625. Once the effect of the write to the VECTCLRACTIVE is complete, the IPSR and the active state of all exceptions read-as-zero.</P>
<P>Note<BR>This applies to active state only, writing 1 to the VECTCLRACTIVE bit does not affect the pending state of any exception.</P>
<P>Reset and debug<BR>A Power-on reset fully resets the debug logic. A Local reset only partly resets the debug logic. See Debug and reset on page C1-822 for more information. A debugger must halt the processor before using VECTRESET, otherwise the effect is UNPREDICTABLE.