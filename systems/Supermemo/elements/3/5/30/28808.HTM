B1.5.18 Wait For Event and Send Event</P>
<P>ARMv7-M can support software-based synchronization with respect to system events using the SEV and WFE hint instructions. Software can:<BR>&#8226; use the WFE instruction to indicate that it is able to suspend execution of a process or thread until an event occurs, permitting hardware to enter a low power state<BR>&#8226; rely on a mechanism that is transparent to software and provides low latency wakeup.</P>
<P>The Wait For Event system relies on hardware and software working together to achieve energy saving. For example, stalling execution of a processor until a device or another processor has set a flag:<BR>&#8226; the hardware provides the mechanism to enter the Wait For Event low-power state<BR>&#8226; software enters a polling loop to determine when the flag is set:<BR>&nbsp;&nbsp; &#8213; the polling processor issues a Wait For Event instruction as part of a polling loop if the flag is clear<BR>&nbsp;&nbsp; &#8213; an event is generated (hardware interrupt or Send Event instruction from another processor) when the flag is set.</P>
<P>The mechanism depends on the interaction of:<BR>&#8226; WFE wakeup events, see WFE wakeup events on page B1-682<BR>&#8226; the Event Register, see The Event Register on page B1-682<BR>&#8226; the Send Event instruction, see The Send Event instruction on page B1-682<BR>&#8226; the Wait For Event instruction, see The Wait For Event instruction on page B1-682.</P>
<P>WFE wakeup events</P>
<P>The following events are WFE wakeup events:<BR>&#8226; the execution of an SEV instruction on any processor in the multiprocessor system<BR>&#8226; any exception entering the Pending state if SEVONPEND in the System Control Register is set<BR>&#8226; an asynchronous exception at a priority that preempts any currently active exceptions<BR>&#8226; a debug event with debug enabled.</P>
<P>The Event Register</P>
<P>The Event Register is a single bit register for each processor in a multiprocessor system. When set, an Event Register indicates that an event has occurred, since the register was last cleared, that might prevent the processor needing to suspend operation on issuing a WFE instruction. The following conditions apply to the Event Register:<BR>&#8226; A reset clears the Event Register.<BR>&#8226; Any WFE wakeup event, or the execution of an exception return instruction, sets the Event Register. For the definition of exception return instructions see Exception return behavior on page B1-652.<BR>&#8226; A WFE instruction clears the Event Register.<BR>&#8226; Software cannot read or write the value of the Event Register directly.</P>
<P>The Send Event instruction</P>
<P>The Send Event instruction, see SEV on page A7-426, causes a wakeup event to be signaled to all processors in a multiprocessor system. The mechanism used to signal the event to the processors is IMPLEMENTATION DEFINED.</P>
<P>The Wait For Event instruction</P>
<P>The action of the Wait For Event instruction, see WFE on page A7-610, depends on the state of the Event Register:<BR>&#8226; If the Event Register is set, the instruction clears the register and returns immediately.<BR>&#8226; If the Event Register is clear the processor can suspend execution and enter a low-power state. It can remain in that state until the processor detects a WFE wakeup event or a reset. When the processor detects a WFE wakeup event, or earlier if the implementation chooses, the WFE instruction completes.</P>
<P>WFE wakeup events can occur before a WFE instruction is issued. Software using the Wait For Event mechanism must be tolerant to spurious wakeup events, including multiple wakeups.</P>
<P><BR>Pseudocode details of the Wait For Event lock mechanism</P>
<P>The SetEventRegister() pseudocode procedure sets the processor Event Register.</P>
<P>The ClearEventRegister() pseudocode procedure clears the processor Event Register.</P>
<P>The EventRegistered() pseudocode function returns TRUE if the processor Event Register is set to 1 and FALSE if it is set to 0:</P>
<P>boolean EventRegistered()</P>
<P>The WaitForEvent() pseudocode procedure optionally suspends execution until a WFE wakeup event or reset occurs, or until some earlier time if the implementation chooses. It is IMPLEMENTATION DEFINED whether restarting execution after the period of suspension causes a ClearEventRegister() to occur.</P>
<P>The SendEvent() pseudocode procedure sets the Event Register of every processor in a multiprocessor system.