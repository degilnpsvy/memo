<SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Store Register Unprivileged calculates an address from a base register value and an immediate offset, and stores a word from a register to memory. See Memory accesses on page A7-214 for information about memory accesses. When privileged software uses an STRT instruction, the memory access is restricted as if the software was unprivileged. See also Effect of MPU_CTRL settings on unprivileged instructions on page B3-768.</FONT></SPAN> 
<P></P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt">
<P>if Rn == &#8216;1111&#8217; then UNDEFINED;<BR>t = UInt(Rt); n = UInt(Rn); postindex = FALSE; add = TRUE;<BR>register_form = FALSE; imm32 = ZeroExtend(imm8, 32);<BR>if t IN {13,15} then UNPREDICTABLE;</P>
<P>Assembler syntax<BR>STRT&lt;c&gt;&lt;q&gt; &lt;Rt&gt;, [&lt;Rn&gt; {, #&lt;imm&gt;}]<BR>where:<BR>&lt;c&gt;&lt;q&gt; See Standard assembler syntax fields on page A7-207.<BR>&lt;Rt&gt; Specifies the source register.<BR>&lt;Rn&gt; Specifies the base register. This register is allowed to be the SP.<BR>&lt;imm&gt; Specifies the immediate offset added to the value of &lt;Rn&gt; to form the address. The range of allowed values is 0-255. &lt;imm&gt; can be omitted, meaning an offset of 0.<BR>The pre-UAL syntax STR&lt;c&gt;T is equivalent to STRT&lt;c&gt;.</P>
<P>Operation<BR>if ConditionPassed() then<BR>&nbsp; EncodingSpecificOperations();<BR>&nbsp; address = R[n] + imm32;<BR>&nbsp; data = R[t];<BR>&nbsp; MemU_unpriv[address,4] = data;<BR>&nbsp; <BR>Exceptions<BR>UsageFault, MemManage, BusFault.</P>
<P>Encoding T1 ARMv7-M<BR>STRT&lt;c&gt; &lt;Rt&gt;,[&lt;Rn&gt;,#&lt;imm8&gt;]</P></SPAN>