<SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Signed Multiply Accumulate (halfwords) performs a signed multiply accumulate operation. The multiply acts on two signed 16-bit quantities, taken from either the bottom or the top half of their respective source registers. The other halves of these source registers are ignored. The 32-bit product is added to a 32-bit accumulate value and the result is written to the destination register.</FONT></SPAN>
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>If overflow occurs during the addition of the accumulate value, the instruction sets the Q flag in the APSR. It is not possible for overflow to occur during the multiplication.</FONT></SPAN>
<P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt">if ConditionPassed() then<BR>EncodingSpecificOperations();<BR>operand1 = if n_high then R[n]&lt;31:16&gt; else R[n]&lt;15:0&gt;;<BR>operand2 = if m_high then R[m]&lt;31:16&gt; else R[m]&lt;15:0&gt;;<BR>result = SInt(operand1) * SInt(operand2) + SInt(R[a]);<BR>R[d] = result&lt;31:0&gt;;<BR>if result != SInt(result&lt;31:0&gt;) then // Signed overflow<BR>APSR.Q = &#8216;1&#8217;;</SPAN>