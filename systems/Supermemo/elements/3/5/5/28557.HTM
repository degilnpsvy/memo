<SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Signed Multiply Accumulate Long (halfwords) multiplies two signed 16-bit values to produce a 32-bit value, and accumulates this with a 64-bit value. The multiply acts on two signed 16-bit quantities, taken from either the bottom or the top half of their respective source registers. The other halves of these source registers are ignored. The 32-bit product is sign-extended and accumulated with a 64-bit accumulate value. Overflow is possible during this instruction, but only as a result of the 64-bit addition. This overflow is not detected if it occurs. Instead, the result wraps around modulo 264.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt">if ConditionPassed() then<BR>EncodingSpecificOperations();<BR>operand1 = if n_high then R[n]&lt;31:16&gt; else R[n]&lt;15:0&gt;;<BR>operand2 = if m_high then R[m]&lt;31:16&gt; else R[m]&lt;15:0&gt;;<BR>result = SInt(operand1) * SInt(operand2) + SInt(R[dHi]:R[dLo]);<BR>R[dHi] = result&lt;63:32&gt;;<BR>R[dLo] = result&lt;31:0&gt;;</SPAN>