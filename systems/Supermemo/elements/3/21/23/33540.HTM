const QEMULogItem qemu_log_items[] = {<BR>&nbsp;&nbsp;&nbsp; <FONT class=extract>{ CPU_LOG_TB_OUT_ASM, "out_asm",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show generated host assembly code for each compiled TB" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_TB_IN_ASM, "in_asm",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show target assembly code for each compiled TB" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_TB_OP, "op",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show micro ops for each compiled TB" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_TB_OP_OPT, "op_opt",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show micro ops after optimization" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_TB_OP_IND, "op_ind",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show micro ops before indirect lowering" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_INT, "int",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show interrupts/exceptions in short format" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_EXEC, "exec",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show trace before each executed TB (lots of logs)" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_TB_CPU, "cpu",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show CPU registers before entering a TB (lots of logs)" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_MMU, "mmu",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "log MMU-related activities" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_PCALL, "pcall",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "x86 only: show protected mode far calls/returns/exceptions" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_RESET, "cpu_reset",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "show CPU state before CPU resets" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { LOG_UNIMP, "unimp",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "log unimplemented functionality" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { LOG_GUEST_ERROR, "guest_errors",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "log when the guest OS does something invalid (eg accessing a\n"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "non-existent register)" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_PAGE, "page",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "dump pages at beginning of user mode emulation" },</FONT><BR><FONT class=extract>&nbsp;&nbsp;&nbsp; { CPU_LOG_TB_NOCHAIN, "nochain",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "do not chain compiled TBs so that \"exec\" and \"cpu\" show\n"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "complete traces" },</FONT><BR>&nbsp;&nbsp;&nbsp; { 0, NULL, NULL },<BR>};