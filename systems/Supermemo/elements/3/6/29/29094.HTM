There is a key difference between interrupt handling and process switching: the code executed by an interrupt or by an exception handler is not a process. Rather, it is a kernel control path that runs on behalf of the same process that was running when the interrupt occurred (see the section ``Nested Execution of Exception and Interrupt Handlers&#8217;&#8217;). As a kernel control path, the interrupt handler is lighter than a process (it has less context and requires less time to set up or tear down).</FONT></SPAN>