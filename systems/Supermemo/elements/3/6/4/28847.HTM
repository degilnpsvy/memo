One such case is immediately following an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asm</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>statement that either never terminates, or one that transfers control elsewhere and never returns. In this example, without the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_unreachable</CODE>, GCC issues a warning that control reaches the end of a non-void function. It also generates code to return after the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asm</CODE>.
<P></P><PRE class=smallexample style="FONT-SIZE: smaller">          int f (int c, int v)
          {
            if (c)
              {
                return v;
              }
            else
              {
                asm("jmp error_handler");
                __builtin_unreachable ();
              }
          }
</PRE>
<P class=noindent>Because the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>asm</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>statement unconditionally transfers control out of the function, control never reaches the end of the function body. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_unreachable</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is in fact unreachable and communicates this fact to the compiler.