list_for_each_entry_safe_reverse</P>
<P>&nbsp;* @pos:&nbsp;the type * to use as a loop cursor.<BR>&nbsp;* @n:&nbsp;&nbsp;another type * to use as temporary storage<BR>&nbsp;* @head:&nbsp;the head for your list.<BR>&nbsp;* @member:&nbsp;the name of the list_head within the struct.<BR>&nbsp;*<BR>&nbsp;* Iterate backwards over list of given type, safe against removal<BR>&nbsp;* of list entry.<BR>&nbsp;*/<BR>#define list_for_each_entry_safe_reverse(pos, n, head, member)&nbsp;&nbsp;\<BR><FONT class=clozed>&nbsp;for (pos = list_last_entry(head, typeof(*pos), member),&nbsp;&nbsp;\<BR>&nbsp;&nbsp;n = list_prev_entry(pos, member);&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;pos-&gt;member != (head); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pos = n, n = list_prev_entry(n, member))</FONT>