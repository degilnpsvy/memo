Normal sequential execution of instructions effectively calculates:<BR>(address_of_current_instruction) + (2 or 4) /*16- and 32-bit instr mix*/<BR>after each instruction to determine which instruction to execute next. If this calculation overflows the top of the address space, the result is <SPAN class=cloze>[...]</SPAN>. In ARMv7-M this condition cannot occur because the top of memory is defined to always have the Execute Never (XN) memory attribute associated with it. See The system address map on page B3-704 for more details. An access violation will be reported if this scenario occurs.