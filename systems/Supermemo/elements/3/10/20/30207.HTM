void tcg_gen_op1(TCGContext *ctx, TCGOpcode opc, TCGArg a1)<BR>{<BR>&nbsp;&nbsp;&nbsp; int pi = ctx-&gt;gen_next_parm_idx;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_debug_assert(pi + 1 &lt;= OPPARAM_BUF_SIZE);<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_next_parm_idx = pi + 1;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi] = a1;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_emit_op(ctx, opc, pi);<BR>}</P>
<P>void tcg_gen_op2(TCGContext *ctx, TCGOpcode opc, TCGArg a1, TCGArg a2)<BR>{<BR>&nbsp;&nbsp;&nbsp; int pi = ctx-&gt;gen_next_parm_idx;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_debug_assert(pi + 2 &lt;= OPPARAM_BUF_SIZE);<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_next_parm_idx = pi + 2;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 0] = a1;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 1] = a2;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_emit_op(ctx, opc, pi);<BR>}</P>
<P>void tcg_gen_op3(TCGContext *ctx, TCGOpcode opc, TCGArg a1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TCGArg a2, TCGArg a3)<BR>{<BR>&nbsp;&nbsp;&nbsp; int pi = ctx-&gt;gen_next_parm_idx;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_debug_assert(pi + 3 &lt;= OPPARAM_BUF_SIZE);<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_next_parm_idx = pi + 3;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 0] = a1;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 1] = a2;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 2] = a3;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_emit_op(ctx, opc, pi);<BR>}</P>
<P>void tcg_gen_op4(TCGContext *ctx, TCGOpcode opc, TCGArg a1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TCGArg a2, TCGArg a3, TCGArg a4)<BR>{<BR>&nbsp;&nbsp;&nbsp; int pi = ctx-&gt;gen_next_parm_idx;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_debug_assert(pi + 4 &lt;= OPPARAM_BUF_SIZE);<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_next_parm_idx = pi + 4;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 0] = a1;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 1] = a2;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 2] = a3;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 3] = a4;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_emit_op(ctx, opc, pi);<BR>}</P>
<P>void tcg_gen_op5(TCGContext *ctx, TCGOpcode opc, TCGArg a1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TCGArg a2, TCGArg a3, TCGArg a4, TCGArg a5)<BR>{<BR>&nbsp;&nbsp;&nbsp; int pi = ctx-&gt;gen_next_parm_idx;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_debug_assert(pi + 5 &lt;= OPPARAM_BUF_SIZE);<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_next_parm_idx = pi + 5;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 0] = a1;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 1] = a2;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 2] = a3;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 3] = a4;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 4] = a5;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_emit_op(ctx, opc, pi);<BR>}</P>
<P>void tcg_gen_op6(TCGContext *ctx, TCGOpcode opc, TCGArg a1, TCGArg a2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TCGArg a3, TCGArg a4, TCGArg a5, TCGArg a6)<BR>{<BR>&nbsp;&nbsp;&nbsp; int pi = ctx-&gt;gen_next_parm_idx;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_debug_assert(pi + 6 &lt;= OPPARAM_BUF_SIZE);<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_next_parm_idx = pi + 6;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 0] = a1;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 1] = a2;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 2] = a3;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 3] = a4;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 4] = a5;<BR>&nbsp;&nbsp;&nbsp; ctx-&gt;gen_opparam_buf[pi + 5] = a6;</P>
<P>&nbsp;&nbsp;&nbsp; tcg_emit_op(ctx, opc, pi);<BR>}