<DT>&#8216;<SAMP><SPAN class=samp>&amp;</SPAN></SAMP>&#8217; 
<DD>Means (in a particular alternative) that this operand is an <DFN>earlyclobber</DFN> operand, which is written before the instruction is finished using the input operands. Therefore, this operand may not lie in a register that is read by the instruction or as part of any memory address. 
<P>&#8216;<SAMP><SPAN class=samp>&amp;</SPAN></SAMP>&#8217; applies only to the alternative in which it is written. In constraints with multiple alternatives, sometimes one alternative requires &#8216;<SAMP><SPAN class=samp>&amp;</SPAN></SAMP>&#8217; while others do not. See, for example, the &#8216;<SAMP><SPAN class=samp>movdf</SPAN></SAMP>&#8217; insn of the 68000. </P>
<P>A operand which is read by the instruction can be tied to an earlyclobber operand if its only use as an input occurs before the early result is written. Adding alternatives of this form often allows GCC to produce better code when only some of the read operands can be affected by the earlyclobber. See, for example, the &#8216;<SAMP><SPAN class=samp>mulsi3</SPAN></SAMP>&#8217; insn of the ARM. </P>
<P>Furthermore, if the <DFN>earlyclobber</DFN> operand is also a read/write operand, then that operand is written only after it's used. </P>
<P>&#8216;<SAMP><SPAN class=samp>&amp;</SPAN></SAMP>&#8217; does not obviate the need to write &#8216;<SAMP><SPAN class=samp>=</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>+</SPAN></SAMP>&#8217;. As <DFN>earlyclobber</DFN> operands are always written, a read-only <DFN>earlyclobber</DFN> operand is ill-formed and will be rejected by the compiler. </P></DD>
<P>&nbsp;</P>
<P>Inline ASM, Constraint Modifier Characters