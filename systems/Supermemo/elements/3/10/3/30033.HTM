<DT>&#8216;<SAMP><SPAN class=samp>&lt;</SPAN></SAMP>&#8217; 
<DD>A memory operand with autodecrement addressing (either predecrement or postdecrement) is allowed. In inline <CODE>asm</CODE> this constraint is only allowed if the operand is used exactly once in an instruction that can handle the side-effects. Not using an operand with &#8216;<SAMP><SPAN class=samp>&lt;</SPAN></SAMP>&#8217; in constraint string in the inline <CODE>asm</CODE> pattern at all or using it in multiple instructions isn't valid, because the side-effects wouldn't be performed or would be performed more than once. Furthermore, on some targets the operand with &#8216;<SAMP><SPAN class=samp>&lt;</SPAN></SAMP>&#8217; in constraint string must be accompanied by special instruction suffixes like <CODE>%U0</CODE> instruction suffix on PowerPC or <CODE>%P0</CODE> on IA-64. 
<P><A name=index-g_t_0040samp_007b_003e_007d-in-constraint-3669></A><BR></P>
<DT>&#8216;<SAMP><SPAN class=samp>&gt;</SPAN></SAMP>&#8217; 
<DD>A memory operand with autoincrement addressing (either preincrement or postincrement) is allowed. In inline <CODE>asm</CODE> the same restrictions as for &#8216;<SAMP><SPAN class=samp>&lt;</SPAN></SAMP>&#8217; apply.&nbsp;
<P>Inline ASM Simple Constraints</P></DD>