/* Invert the sense of the comparison.&nbsp; */<BR>static inline TCGCond tcg_invert_cond(TCGCond c)<BR>{<BR>&nbsp;&nbsp;&nbsp; return (TCGCond)(c ^ 1);<BR>}
<P></P>
<P>/* Swap the operands in a comparison.&nbsp; */<BR>static inline TCGCond tcg_swap_cond(TCGCond c)<BR>{<BR>&nbsp;&nbsp;&nbsp; return c &amp; 6 ? (TCGCond)(c ^ 9) : c;<BR>}</P>
<P>/* Create an "unsigned" version of a "signed" comparison.&nbsp; */<BR>static inline TCGCond tcg_unsigned_cond(TCGCond c)<BR>{<BR>&nbsp;&nbsp;&nbsp; return c &amp; 2 ? (TCGCond)(c ^ 6) : c;<BR>}</P>
<P>/* Must a comparison be considered unsigned?&nbsp; */<BR>static inline bool is_unsigned_cond(TCGCond c)<BR>{<BR>&nbsp;&nbsp;&nbsp; return (c &amp; 4) != 0;<BR>}</P>
<P>/* Create a "high" version of a double-word comparison.<BR>&nbsp;&nbsp; This removes equality from a LTE or GTE comparison.&nbsp; */<BR>static inline TCGCond tcg_high_cond(TCGCond c)<BR>{<BR>&nbsp;&nbsp;&nbsp; switch (c) {<BR>&nbsp;&nbsp;&nbsp; case TCG_COND_GE:<BR>&nbsp;&nbsp;&nbsp; case TCG_COND_LE:<BR>&nbsp;&nbsp;&nbsp; case TCG_COND_GEU:<BR>&nbsp;&nbsp;&nbsp; case TCG_COND_LEU:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (TCGCond)(c ^ 8);<BR>&nbsp;&nbsp;&nbsp; default:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return c;<BR>&nbsp;&nbsp;&nbsp; }<BR>}