<H3>struct GMemVTable</H3><PRE class=programlisting>struct GMemVTable {
  gpointer (*malloc)      (gsize    n_bytes);
  gpointer (*realloc)     (gpointer mem,
			   gsize    n_bytes);
  void     (*free)        (gpointer mem);
  /* optional; set to NULL if not used ! */
  gpointer (*calloc)      (gsize    n_blocks,
			   gsize    n_block_bytes);
  gpointer (*try_malloc)  (gsize    n_bytes);
  gpointer (*try_realloc) (gpointer mem,
			   gsize    n_bytes);
};
</PRE>
<P>A set of functions used to perform memory allocation. The same <A title="struct GMemVTable" class=link href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#GMemVTable"><SPAN class=type>GMemVTable</SPAN></A> must be used for all allocations in the same program; a call to <A title=g_mem_set_vtable&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-mem-set-vtable"><CODE class=function>g_mem_set_vtable()</CODE></A>, if it exists, should be prior to any use of GLib.</P>
<DIV class=refsect3><A name=id-1.4.7.8.3.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMemVTable.malloc></A>malloc</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>function to use for allocating memory.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMemVTable.realloc></A>realloc</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>function to use for reallocating memory.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMemVTable.free></A>free</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>function to use to free memory.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMemVTable.calloc></A>calloc</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>function to use for allocating zero-filled memory.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMemVTable.try-malloc></A>try_malloc</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>function to use for allocating memory without a default error handler.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMemVTable.try-realloc></A>try_realloc</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>function to use for reallocating memory without a default error handler.</P></TD></TR></TBODY></TABLE></DIV></DIV>