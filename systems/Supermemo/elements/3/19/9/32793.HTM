<H3>g_mem_set_vtable&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_mem_set_vtable (<EM class=parameter><CODE><A title="struct GMemVTable" class=link href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#GMemVTable"><SPAN class=type>GMemVTable</SPAN></A> *vtable</CODE></EM>);</PRE>
<P>Sets the <A title="struct GMemVTable" class=link href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#GMemVTable"><SPAN class=type>GMemVTable</SPAN></A> to use for memory allocation. You can use this to provide custom memory allocation routines.</P>
<P>The <EM class=parameter><CODE>vtable</CODE></EM> only needs to provide <CODE class=function>malloc()</CODE>, <CODE class=function>realloc()</CODE>, and <CODE class=function>free()</CODE> functions; GLib can provide default implementations of the others. The <CODE class=function>malloc()</CODE> and <CODE class=function>realloc()</CODE> implementations should return <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> on failure, GLib will handle error-checking for you. <EM class=parameter><CODE>vtable</CODE></EM> is copied, so need not persist after this function has been called.</P>
<P>Note that this function must be called before using any other GLib functions.</P>
<DIV class=refsect3><A name=id-1.4.7.7.26.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>vtable</P></TD>
<TD class=parameter_description>
<P>table of memory allocation routines.</P></TD></TR></TBODY></TABLE></DIV></DIV>