D1.2.62 DWT_FUNCTION&lt;n&gt;, DWT Comparator Function Register, n = 0-14<BR>The DWT_FUNCTION&lt;n&gt; characteristics are:<BR>Purpose Controls the operation of watchpoint comparator n.<BR>Usage constraints Privileged access permitted only. Unprivileged accesses generate a BusFault.<BR>This register is word accessible only. Halfword and byte accesses are UNPREDICTABLE.<BR>If the Main Extension is not implemented then it is IMPLEMENTATION DEFINED whether this<BR>register is accessible only to the debugger and RES0 for software. Otherwise the register is<BR>accessible to the debugger and software.<BR>Configurations Present only if the DWT is implemented.<BR>This register is RES0 if the DWT is not implemented.<BR>Attributes 32-bit read/write register located at 0xE0001028 + 16n.<BR>This register is not banked between Security states.<BR>Field descriptions<BR>The DWT_FUNCTION&lt;n&gt; bit assignments are:<BR>ID, bits [31:27]<BR>Identify capability. Identifies the capabilities for MATCH for comparator n.<BR>The possible values of this field are:<BR>0b00000 Reserved.<BR>0b01000 Data Address, and Data Address With Value.<BR>0b01001 Cycle Counter, Data Address, and Data Address With Value.<BR>0b01010 Instruction Address, Data Address, and Data Address With Value.<BR>0b01011 Cycle Counter, Instruction Address, Data Address and Data Address With Value.<BR>0b11000 Data Address, Data Address Limit, and Data Address With Value.<BR>0b11010 Instruction Address, Instruction Address Limit, Data Address, Data Address Limit, and<BR>Data Address With Value.<BR>0b11100 Data Address, Data Address Limit, Data Value, Linked Data Value, and Data Address<BR>With Value.<BR>0b11110 Instruction Address, Instruction Address Limit, Data Address, Data Address Limit,<BR>Data value, Linked Data Value, and Data Address With Value.<BR>All other values are reserved.<BR>Comparator 0 never supports linking. If more than one comparator is implemented, then at least one<BR>comparator must support linking. ARM recommends that odd-numbered comparators support<BR>linking.<BR>Cycle Counter matching is only supported if the Main Extension is implemented and<BR>DWT_CTRL.NOCYCCNT == 0, meaning the cycle counter is implemented. Comparator 0 must<BR>support Cycle Counter matching if the cycle counter is implemented.<BR>Data Address With Value is supported for the first four comparators only, and only if the Main<BR>Extension and ITM are implemented, and DWT_CTRL.NOTRCPKT == 0. Data Value and Linked<BR>Data Value are only supported if the Main Extension is implemented.<BR>This field is read-only.<BR>This field reads as an IMPLEMENTATION DEFINED value.<BR>Bits [26:25]<BR>Reserved, RES0.<BR>MATCHED, bit [24]<BR>Comparator matched. Set to 1 when the comparator matches.<BR>The possible values of this bit are:<BR>0 No match.<BR>1 Match. The comparator has matched since the last read of this register.<BR>For an Instruction Address Limit or Data Address Limit comparator, this bit is UNKNOWN on reads.<BR>This bit is read-only.<BR>This bit clears to zero when read.<BR>This bit resets to an UNKNOWN value on a Cold reset.<BR>Bits [23:12]<BR>Reserved, RES0.<BR>DATAVSIZE, bits [11:10]<BR>Data value size. Defines the size of the object being watched for by Data Value and Data Address<BR>comparators.<BR>The possible values of this field are:<BR>0b00 1 byte.<BR>0b01 2 bytes.<BR>0b10 4 bytes.<BR>All other values are reserved.<BR>For an Instruction Address or Instruction Address Limit comparator, DATAVSIZE must be 0b01 (2<BR>bytes). If this comparator is part of an data address range pair, DATAVSIZE must be 0b00 (1 byte).<BR>For a Data Address comparator, DWT_COMPn must be aligned to the size specified by<BR>DATAVSIZE. For a Data Value or Linked Data Value comparator:<BR>&#8226; For halfword comparisons, DWT_COMPn [31:16] must be equal to DWT_COMPn[15:0].<BR>&#8226; For byte comparisons, DWT_COMPn [31:24], DWT_COMPn [23:16], and DWT_COMPn<BR>[15:18] must be equal to DWT_COMPn [7:0].<BR>This field resets to an UNKNOWN value on a Cold reset.<BR>Bits [9:6]<BR>Reserved, RES0.<BR>ACTION, bits [5:4]<BR>Action on match. Defines the action on a match. This field is ignored and the comparator generates<BR>no actions if it is disabled by MATCH.<BR>The possible values of this field are:<BR>0b00 Trigger only.<BR>0b01 Generate debug event.<BR>0b10 For a Cycle Counter, Instruction Address, Data Address, Data Value or Linked Data<BR>Value comparator, generate a Data Trace Match packet.<BR>For a Data Address With Value comparator, generate a Data Trace Data Value packet.<BR>0b11 For a Data Address Limit comparator, generate a Data Trace Data Address packet.<BR>For a Cycle Counter, Instruction Address Limit, or Data Address comparator, generate<BR>a Data Trace PC Value packet.<BR>For a Data Address With Value comparator, generate both a Data Trace PC Value packet<BR>and a Data Trace Data Value packet.<BR>If the Main Extension is not implemented, the values 0b10 and 0b11 are reserved.<BR>This field resets to an UNKNOWN value on a Cold reset.<BR>MATCH, bits [3:0]<BR>Match type. Controls the type of match generated by this comparator.<BR>The possible values of this field are:<BR>0b0000 Disabled. Never generates a match.<BR>0b0001 Cycle Counter. Matches if DWT_CYCCNT equals the comparator value. The<BR>comparator is checked each time DWT_CYCCNT is written to, directly or indirectly.<BR>Only supported if the Main Extension is implemented, DWT_FUNCTION&lt;n&gt;.ID&lt;0&gt;<BR>== 1 and DWT_CTRL.NOCYCCNT == 0.<BR>0b0010 Instruction Address. If not linked to, an instruction matches if the address of the first<BR>byte of the instruction matches the comparator address.<BR>Only supported if DWT_FUNCTION&lt;n&gt;.ID&lt;1&gt; == 1.<BR>0b0011 Instruction Address Limit. An instruction matches if the address of the first byte of the<BR>instruction lies between the lower comparator address (specified by comparator &lt;n-1&gt;)<BR>and the limit comparator address (specified by this comparator, &lt;n&gt;). Both addresses<BR>are inclusive to the range. Comparator &lt;n-1&gt; must be programmed for Instruction<BR>Address (0b0010) or Disabled (0b0000), and the lower address must be strictly less-than<BR>the limit comparator address, otherwise it is UNPREDICTABLE whether or not any<BR>comparator generates matches.<BR>Only supported if DWT_FUNCTION&lt;n&gt;.ID&lt;4&gt; == 1 and<BR>DWT_FUNCTION&lt;n&gt;.ID&lt;1&gt; == 1.<BR>0b0100 Data Address. If not linked to by a Data Address Limit comparator, an access matches<BR>if any accessed byte lies between the comparator address and a limit defined by the<BR>DATAVSIZE field. Supported for all comparators.<BR>0b0101 Data Address, writes. As 0b0100, except that only write accesses generate a match.<BR>0b0110 Data Address, reads. As 0b0100, except that only read accesses generate a match.<BR>0b0111 Data Address Limit. An access matches if any byte made by the access lies between the<BR>lower address (specified by comparator &lt;n-1&gt;) and the limit address (specified by this<BR>comparator, &lt;n&gt;). Both addresses are inclusive to the range. Comparator &lt;n-1&gt; must be<BR>programmed for Data Address (0b01xx, not 0b0111), Data Address With Data Value<BR>(0b11xx, not 0b1111), or Disabled (0b0000), and the lower address must be strictly<BR>less-than the limit comparator address, otherwise it is UNPREDICTABLE whether or not<BR>any comparator generates matches. DWT_FUNCTION&lt;n-1&gt;.MATCH[1:0] determines<BR>the matching access types.<BR>Only supported if DWT_FUNCTION&lt;n&gt;.ID&lt;4&gt; == 1.<BR>0b1000 Data Value. An access matches if the value accessed matches the comparator value.<BR>Only supported if the Main Extension is implemented and<BR>DWT_FUNCTION&lt;n&gt;.ID&lt;2&gt; == 1.<BR>0b1001 Data Value, writes. As 0b1000, except that only write accesses generate a match.<BR>0b1010 Data Value, reads. As 0b1000, except that only read accesses generate a match.<BR>0b1011 Linked Data Value. An access matches if the value accessed matches the comparator<BR>value (specified by comparator &lt;n&gt;) and the linked data address (specified by<BR>comparator &lt;n-1&gt;) for the same access matches. Comparator &lt;n-1&gt; must be<BR>programmed for Data Address (0b01xx, not 0b0111), or Data Address With Value<BR>(0b11xx, not 0b1111), or Disabled (0b0000), and DATAVSIZE for the two comparators<BR>must be the same, otherwise it is UNPREDICTABLE whether or not any comparator<BR>generates matches. DWT_FUNCTION&lt;n-1&gt;.MATCH[1:0] determines the matching<BR>access types.<BR>Only supported if the Main Extension is implemented and<BR>DWT_FUNCTION&lt;n&gt;.ID&lt;4&gt; == 1 and DWT_FUNCTION&lt;n&gt;.ID&lt;2&gt; == 1.<BR>0b1100 Data Address With Value. As 0b01xx, except that the data value is traced.<BR>Supported for the first four comparators only, and only if DWT_CTRL.NOTRCPKT ==<BR>0 and ITM is also implemented.<BR>0b1101 Data Address With Value, writes. As 0b1100, except that only write accesses generate a<BR>match.<BR>0b1110 Data Address With Value, reads. As 0b1100, except that only read accesses generate a<BR>match.<BR>Any value not supported by the comparator is reserved. For a pair of linked comparators, &lt;n&gt; and<BR>&lt;n-1&gt;, DWT_FUNCTION&lt;n-1&gt;.MATCH[1:0] determines the matching access types. See MATCH<BR>table for further details.<BR>This field resets to zero on a Cold reset.