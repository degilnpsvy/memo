D1.2.19 DAUTHCTRL, Debug Authentication Control Register</P>
<P>The DAUTHCTRL characteristics are:<BR>Purpose: This register allows the IMPLEMENTATION DEFINED authentication interface to be overridden from software.<BR>Usage constraints: Privileged access permitted only. Unprivileged accesses generate a BusFault.<BR>&nbsp; This register is word accessible only. Halfword and byte accesses are UNPREDICTABLE.<BR>&nbsp; This register is RES0 if accessed via the debugger.<BR>Configurations: Present only if Halting debug or the Main Extension is implemented.<BR>&nbsp; This register is RES0 if both Halting debug and Main Extension are not implemented.<BR>&nbsp; Present only if the Security Extension is implemented.<BR>&nbsp; This register is RES0 if the Security Extension is not implemented.<BR>Attributes: 32-bit read/write register located at 0xE000EE04.<BR>&nbsp; This register is RAZ/WI when accessed as Non-secure.<BR>&nbsp; This register is not banked between Security states.</P>
<P>The DAUTHCTRL bit assignments are:<BR>Bits [31:4]<BR>Reserved, RES0.</P>
<P>INTSPNIDEN, bit [3]<BR>Internal Secure non-invasive debug enable. Overrides the external Secure non-invasive debug authentication interface.<BR>The possible values of this bit are:<BR>0 Secure Non-invasive debug prohibited.<BR>1 Secure Non-invasive debug allowed.<BR>Ignored if DAUTHCTRL.SPNIDENSEL == 0. See SecureNoninvasiveDebugAllowed().<BR>This bit resets to zero on a Cold reset.</P>
<P>SPNIDENSEL, bit [2]<BR>Secure non-invasive debug enable select. Selects between DAUTHCTRL and the IMPLEMENTATION DEFINED external authentication interface for control of Secure non-invasive debug.<BR>The possible values of this bit are:<BR>0 Secure non-invasive debug controlled by the IMPLEMENTATION DEFINED external authentication interface. In the CoreSight authentication interface, this is controlled by the SPNIDEN signal.<BR>1 Secure non-invasive debug controlled by DAUTHCTRL.INTSPNIDEN.<BR>The PE ignores the value of this bit and Secure non-invasive debug is allowed if DHCSR.S_SDE == 1. See SecureNoninvasiveDebugAllowed().<BR>This bit resets to zero on a Cold reset.</P>
<P>INTSPIDEN, bit [1]<BR>Internal Secure invasive debug enable. Overrides the external Secure invasive debug authentication interfaces.<BR>The possible values of this bit are:<BR>0 Secure halting and self-hosted debug prohibited.<BR>1 Secure halting and self-hosted debug allowed.<BR>Ignored if DAUTHCTRL.SPIDENSEL == 0. See SecureHaltingDebugAllowed() and SecureDebugMonitorAllowed().<BR>This bit resets to zero on a Cold reset.</P>
<P>SPIDENSEL, bit [0]<BR>Secure invasive debug enable select. Selects between DAUTHCTRL and the IMPLEMENTATION DEFINED external authentication interface for control of Secure invasive debug.<BR>The possible values of this bit are:<BR>0 Secure halting and self-hosted debug controlled by the IMPLEMENTATION DEFINED external authentication interface. In the CoreSight authentication interface, both are controlled by the SPIDEN signal.<BR>1 Secure halting and self-hosted debug controlled by DAUTHCTRL.INTSPIDEN.<BR>See SecureHaltingDebugAllowed() and SecureDebugMonitorAllowed().<BR>This bit resets to zero on a Cold reset.