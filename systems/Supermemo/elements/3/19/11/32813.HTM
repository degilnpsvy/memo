<H3>g_io_channel_win32_new_fd&nbsp;()</H3><PRE class=programlisting><A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=returnvalue>GIOChannel</SPAN></A>&nbsp;*
g_io_channel_win32_new_fd (<EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> fd</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A> given a file descriptor on Windows. This works for file descriptors from the C runtime.</P>
<P>This function works for file descriptors as returned by the <CODE class=function>open()</CODE>, <CODE class=function>creat()</CODE>, <CODE class=function>pipe()</CODE> and <CODE class=function>fileno()</CODE> calls in the Microsoft C runtime. In order to meaningfully use this function your code should use the same C runtime as GLib uses, which is msvcrt.dll. Note that in current Microsoft compilers it is near impossible to convince it to build code that would use msvcrt.dll. The last Microsoft compiler version that supported using msvcrt.dll as the C runtime was version</P>
<DIV class=orderedlist>
<OL class=orderedlist type=1>
<LI class=listitem>
<P>The GNU compiler and toolchain for Windows, also known as Mingw, fully supports msvcrt.dll.</P></LI></OL></DIV>
<P>If you have created a <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A> for a file descriptor and started watching (polling) it, you shouldn't call <CODE class=function>read()</CODE> on the file descriptor. This is because adding polling for a file descriptor is implemented in GLib on Windows by starting a thread that sits blocked in a <CODE class=function>read()</CODE> from the file descriptor most of the time. All reads from the file descriptor should be done by this internal GLib thread. Your code should call only <A title=g_io_channel_read&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#g-io-channel-read"><CODE class=function>g_io_channel_read()</CODE></A>.</P>
<P>This function is available only in GLib on Windows.</P>
<DIV class=refsect3><A name=id-1.4.9.7.4.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>a C library file descriptor.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.9.7.4.10></A>
<H4>Returns</H4>
<P>a new <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A>.</P></DIV>