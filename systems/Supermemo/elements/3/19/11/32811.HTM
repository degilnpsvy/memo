<H3>g_io_channel_unix_new&nbsp;()</H3><PRE class=programlisting><A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=returnvalue>GIOChannel</SPAN></A>&nbsp;*
g_io_channel_unix_new (<EM class=parameter><CODE><SPAN class=type>int</SPAN> fd</CODE></EM>);</PRE>
<P>Creates a new <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A> given a file descriptor. On UNIX systems this works for plain files, pipes, and sockets.</P>
<P>The returned <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A> has a reference count of 1.</P>
<P>The default encoding for <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A> is UTF-8. If your application is reading output from a command using via pipe, you may need to set the encoding to the encoding of the current locale (see <A title=g_get_charset&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-get-charset"><CODE class=function>g_get_charset()</CODE></A>) with the <A title=g_io_channel_set_encoding&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#g-io-channel-set-encoding"><CODE class=function>g_io_channel_set_encoding()</CODE></A> function.</P>
<P>If you want to read raw binary data without interpretation, then call the <A title=g_io_channel_set_encoding&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#g-io-channel-set-encoding"><CODE class=function>g_io_channel_set_encoding()</CODE></A> function with <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for the encoding argument.</P>
<P>This function is available in GLib on Windows, too, but you should avoid using it on Windows. The domain of file descriptors and sockets overlap. There is no way for GLib to know which one you mean in case the argument you pass to this function happens to be both a valid file descriptor and socket. If that happens a warning is issued, and GLib assumes that it is the file descriptor you mean.</P>
<DIV class=refsect3><A name=id-1.4.9.7.2.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>a file descriptor.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.9.7.2.10></A>
<H4>Returns</H4>
<P>a new <A title="struct GIOChannel" class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOChannel"><SPAN class=type>GIOChannel</SPAN></A>.</P></DIV>