<H3>g_prefix_error&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_prefix_error (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **err</CODE></EM>,
                <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Formats a string according to <EM class=parameter><CODE>format</CODE></EM> and prefix it to an existing error message. If <EM class=parameter><CODE>err</CODE></EM> is <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> (ie: no error variable) then do nothing.</P>
<P>If *<EM class=parameter><CODE>err</CODE></EM> is <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> (ie: an error variable is present but there is no error condition) then also do nothing. Whether or not it makes sense to take advantage of this feature is up to you.</P>
<DIV class=refsect3><A name=id-1.4.10.7.12.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>err</P></TD>
<TD class=parameter_description>
<P>a return location for a <A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A>, or <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>printf()-style format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments to <EM class=parameter><CODE>format</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.16