The g_return family of macros (<A title=g_return_if_fail() class=link href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-if-fail"><CODE class=function>g_return_if_fail()</CODE></A>, <A title=g_return_val_if_fail() class=link href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail"><CODE class=function>g_return_val_if_fail()</CODE></A>, <A title=g_return_if_reached class=link href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-if-reached"><CODE class=function>g_return_if_reached()</CODE></A>, <A title=g_return_val_if_reached() class=link href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-reached"><CODE class=function>g_return_val_if_reached()</CODE></A>) should only be used for programming errors, a typical use case is checking for invalid parameters at the beginning of a public function. They should not be used if you just mean "if (error) return", they should only be used if you mean "if (bug in program) return". The program behavior is generally considered undefined after one of these checks fails. They are not intended for normal control flow, only to give a perhaps-helpful warning before giving up.