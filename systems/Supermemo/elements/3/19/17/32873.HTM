<H3>g_set_error_literal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_set_error_literal (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **err</CODE></EM>,
                     <EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
                     <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>,
                     <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *message</CODE></EM>);</PRE>
<P>Does nothing if <EM class=parameter><CODE>err</CODE></EM> is <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>; if <EM class=parameter><CODE>err</CODE></EM> is non-<A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, then *<EM class=parameter><CODE>err</CODE></EM> must be <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. A new <A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> is created and assigned to *<EM class=parameter><CODE>err</CODE></EM> . Unlike <A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error"><CODE class=function>g_set_error()</CODE></A>, <EM class=parameter><CODE>message</CODE></EM> is not a <CODE class=function>printf()</CODE>-style format string. Use this function if <EM class=parameter><CODE>message</CODE></EM> contains text you don't have control over, that could include <CODE class=function>printf()</CODE> escape sequences.</P>
<DIV class=refsect3><A name=id-1.4.10.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>err</P></TD>
<TD class=parameter_description>
<P>a return location for a <A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A>, or <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>domain</P></TD>
<TD class=parameter_description>
<P>error domain</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>code</P></TD>
<TD class=parameter_description>
<P>error code</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>message</P></TD>
<TD class=parameter_description>
<P>error message</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.18