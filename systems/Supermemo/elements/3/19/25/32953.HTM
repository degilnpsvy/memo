D1.2.32 DCRDR, Debug Core Register Data Register</P>
<P>The DCRDR characteristics are:<BR>Purpose: With the DCRSR, provides debug access to the general-purpose registers, special-purpose registers, and the FP Extension registers. If the Main Extension is implemented, it can also be used for message passing between an external debugger and a debug agent running on the PE.<BR>Usage constraints: Privileged access permitted only. Unprivileged accesses generate a BusFault.<BR>&nbsp; This register is word accessible only. Halfword and byte accesses are UNPREDICTABLE.<BR>&nbsp; If the Main Extension is not implemented then this register is accessible only to the debugger and UNKNOWN to software.<BR>Configurations: Present only if Halting debug is implemented.<BR>&nbsp; This register is RES0 if Halting debug is not implemented.<BR>Attributes: 32-bit read/write register located at 0xE000EDF8.<BR>&nbsp; Secure software can access the Non-secure view of this register via DCRDR_NS located at 0xE002EDF8. The location 0xE002EDF8 is RES0 to software executing in Non-secure state and the debugger.<BR>&nbsp; This register is not banked between Security states.</P>
<P>The DCRDR bit assignments are:</P>
<P>DBGTMP, bits [31:0]<BR>Data temporary buffer. Provides debug access for reading and writing the general-purpose registers, special-purpose registers, and Floating-point Extension registers.<BR>The value of this register is UNKNOWN if the PE is in Debug state, the debugger has written to DCRSR since entering Debug state and DHCSR.S_REGRDY is set to 0. The value of this register is UNKNOWN if the Main Extension is not implemented and the PE is in Non-debug state.<BR>This field resets to an UNKNOWN value on a Warm reset.