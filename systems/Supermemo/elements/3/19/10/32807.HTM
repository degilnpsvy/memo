<H3>g_slice_dup()</H3><PRE class=programlisting>#define             g_slice_dup(type, mem)</PRE>
<P>A convenience macro to duplicate a block of memory using the slice allocator.</P>
<P>It calls <A title=g_slice_copy&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html#g-slice-copy"><CODE class=function>g_slice_copy()</CODE></A> with <CODE class=literal>sizeof (@type)</CODE> and casts the returned pointer to a pointer of the given type, avoiding a type cast in the source code. Note that the underlying slice allocation mechanism can be changed with the <A title=G_SLICE class=link href="https://developer.gnome.org/glib/stable/glib-running.html#G_SLICE"><CODE class=literal>G_SLICE=always-malloc</CODE></A> environment variable.</P>
<DIV class=refsect3><A name=id-1.4.8.6.9.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>the type to duplicate, typically a structure name</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>mem</P></TD>
<TD class=parameter_description>
<P>the memory to copy into the allocated block</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.8.6.9.7></A>
<H4>Returns</H4>
<P>a pointer to the allocated block, cast to a pointer to <EM class=parameter><CODE>type</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.14