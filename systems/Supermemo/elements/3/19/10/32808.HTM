<H3>g_slice_free()</H3><PRE class=programlisting>#define             g_slice_free(type, mem)</PRE>
<P>A convenience macro to free a block of memory that has been allocated from the slice allocator.</P>
<P>It calls <A title=g_slice_free1&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html#g-slice-free1"><CODE class=function>g_slice_free1()</CODE></A> using <CODE class=literal>sizeof (type)</CODE> as the block size. Note that the exact release behaviour can be changed with the <CODE class=literal>G_DEBUG=gc-friendly</CODE> environment variable, also see <A title=G_SLICE class=link href="https://developer.gnome.org/glib/stable/glib-running.html#G_SLICE"><CODE class=literal>G_SLICE</CODE></A> for related debugging options.</P>
<DIV class=refsect3><A name=id-1.4.8.6.10.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>the type of the block to free, typically a structure name</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>mem</P></TD>
<TD class=parameter_description>
<P>a pointer to the block to free</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10