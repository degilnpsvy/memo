<H1 class=title>Exercise 17: More Files</H1>
<P id=p1>Now let's do a few more things with files. We'll write a Python script to copy one file to another. It'll be very short but will give you ideas about other things you can do with files.</P>
<TABLE class=highlighttable>
<TBODY>
<TR></TR></TBODY></TABLE>
<TABLE class=highlighttable>
<TBODY>
<TR>
<TD class=code>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex17.py-idio.html-1></A><FONT class=extract><SPAN class=kn>from</SPAN> <SPAN class=nn>sys</SPAN> <SPAN class=kn>import</SPAN> <SPAN class=n>argv</SPAN>
</FONT><A name=python--ex17.py-idio.html-2></A><FONT class=extract><SPAN class=kn>from</SPAN> <SPAN class=nn>os.path</SPAN> <SPAN class=kn>import</SPAN> <SPAN class=n>exists</SPAN>
</FONT><A name=python--ex17.py-idio.html-3></A>
<A name=python--ex17.py-idio.html-4></A><FONT class=extract><SPAN class=n>script</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>from_file</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>to_file</SPAN> <SPAN class=o>=</SPAN> <SPAN class=n>argv</SPAN>
</FONT><A name=python--ex17.py-idio.html-5></A>
<A name=python--ex17.py-idio.html-6></A><FONT class=extract><SPAN class=k>print</SPAN> <SPAN class=s2>"Copying from </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2> to </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2>"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>from_file</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>to_file</SPAN><SPAN class=p>)</SPAN>
</FONT><A name=python--ex17.py-idio.html-7></A>
<A name=python--ex17.py-idio.html-8></A><FONT class=extract><SPAN class=c1># we could do these two on one line, how?</SPAN>
</FONT><A name=python--ex17.py-idio.html-9></A><FONT class=extract><SPAN class=n>in_file</SPAN> <SPAN class=o>=</SPAN> <SPAN class=nb>open</SPAN><SPAN class=p>(</SPAN><SPAN class=n>from_file</SPAN><SPAN class=p>)</SPAN>
</FONT><A name=python--ex17.py-idio.html-10></A><FONT class=extract><SPAN class=n>indata</SPAN> <SPAN class=o>=</SPAN> <SPAN class=n>in_file</SPAN><SPAN class=o>.</SPAN><SPAN class=n>read</SPAN><SPAN class=p>()</SPAN>
</FONT><A name=python--ex17.py-idio.html-11></A>
<A name=python--ex17.py-idio.html-12></A><FONT class=extract><SPAN class=k>print</SPAN> <SPAN class=s2>"The input file is </SPAN><SPAN class=si>%d</SPAN><SPAN class=s2> bytes long"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=nb>len</SPAN><SPAN class=p>(</SPAN><SPAN class=n>indata</SPAN><SPAN class=p>)</SPAN>
</FONT><A name=python--ex17.py-idio.html-13></A>
<A name=python--ex17.py-idio.html-14></A><FONT class=extract><SPAN class=k>print</SPAN> <SPAN class=s2>"Does the output file exist? </SPAN><SPAN class=si>%r</SPAN><SPAN class=s2>"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=n>exists</SPAN><SPAN class=p>(</SPAN><SPAN class=n>to_file</SPAN><SPAN class=p>)</SPAN>
</FONT><A name=python--ex17.py-idio.html-15></A><FONT class=extract><SPAN class=k>print</SPAN> <SPAN class=s2>"Ready, hit RETURN to continue, CTRL-C to abort."</SPAN>
</FONT><A name=python--ex17.py-idio.html-16></A><FONT class=extract><SPAN class=nb>raw_input</SPAN><SPAN class=p>()</SPAN>
</FONT><A name=python--ex17.py-idio.html-17></A>
<A name=python--ex17.py-idio.html-18></A><FONT class=extract><SPAN class=n>out_file</SPAN> <SPAN class=o>=</SPAN> <SPAN class=nb>open</SPAN><SPAN class=p>(</SPAN><SPAN class=n>to_file</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'w'</SPAN><SPAN class=p>)</SPAN>
</FONT><A name=python--ex17.py-idio.html-19></A><FONT class=extract><SPAN class=n>out_file</SPAN><SPAN class=o>.</SPAN><SPAN class=n>write</SPAN><SPAN class=p>(</SPAN><SPAN class=n>indata</SPAN><SPAN class=p>)</SPAN>
</FONT><A name=python--ex17.py-idio.html-20></A>
<A name=python--ex17.py-idio.html-21></A><FONT class=extract><SPAN class=k>print</SPAN> <SPAN class=s2>"Alright, all done."</SPAN>
</FONT><A name=python--ex17.py-idio.html-22></A>
<A name=python--ex17.py-idio.html-23></A><FONT class=extract><SPAN class=n>out_file</SPAN><SPAN class=o>.</SPAN><SPAN class=n>close</SPAN><SPAN class=p>()</SPAN>
</FONT><A name=python--ex17.py-idio.html-24></A><FONT class=extract><SPAN class=n>in_file</SPAN><SPAN class=o>.</SPAN><SPAN class=n>close</SPAN><SPAN class=p>()</SPAN></FONT>
</PRE></DIV></TD></TR></TBODY></TABLE>
<P id=p2>You should immediately notice that we <TT class="docutils literal">import</TT> another handy command named <TT class="docutils literal">exists</TT>. This returns <TT class="docutils literal">True</TT> if a file exists, based on its name in a string as an argument. It returns <TT class="docutils literal">False</TT> if not. We'll be using this function in the second half of this book to do lots of things, but right now you should see how you can import it.</P>
<P id=p3>Using <TT class="docutils literal">import</TT> is a way to get tons of free code other better (well, usually) programmers have written so you do not have to write it.</P>
<DIV id=what-you-should-see class=section>
<H1>What You Should See</H1>
<P id=p4>Just like your other scripts, run this one with two arguments: the file to copy from and the file to copy it to. I'm going to use a simple test file named <TT class="docutils literal">test.txt</TT>:</P>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex17.sh-idio-shint-pyg.html-1></A>
</PRE></DIV>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex17.sh-idio-shint-pyg.html-1></A><SPAN class=gp>$</SPAN> <SPAN class=nb>echo</SPAN> <SPAN class=s2>"This is a test file."</SPAN> &gt; test.txt
</PRE></DIV>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex17.sh-idio-shint-pyg.html-1></A><SPAN class=gp>$</SPAN> cat test.txt
<A name=python--ex17.sh-idio-shint-pyg.html-2></A><SPAN class=go>This is a test file.</SPAN>
<A name=python--ex17.sh-idio-shint-pyg.html-3></A><SPAN class=gp>$</SPAN>
<A name=python--ex17.sh-idio-shint-pyg.html-4></A><SPAN class=gp>$</SPAN> python ex17.py test.txt new_file.txt
<A name=python--ex17.sh-idio-shint-pyg.html-5></A><SPAN class=go>Copying from test.txt to new_file.txt</SPAN>
<A name=python--ex17.sh-idio-shint-pyg.html-6></A><SPAN class=go>The input file is 21 bytes long</SPAN>
<A name=python--ex17.sh-idio-shint-pyg.html-7></A><SPAN class=go>Does the output file exist? False</SPAN>
<A name=python--ex17.sh-idio-shint-pyg.html-8></A><SPAN class=go>Ready, hit RETURN to continue, CTRL-C to abort.</SPAN>
<A name=python--ex17.sh-idio-shint-pyg.html-9></A>
<A name=python--ex17.sh-idio-shint-pyg.html-10></A><SPAN class=go>Alright, all done.</SPAN>
</PRE></DIV>
<P id=p5>It should work with any file. Try a bunch more and see what happens. Just be careful you do not blast an important file.</P>
<DIV class=warning>
<P id=p6 class="first admonition-title">Warning</P>
<P id=p7 class=last>Did you see the trick I did with <TT class="docutils literal">echo</TT> to make a file, and <TT class="docutils literal">cat</TT> to show the file? You can learn how to do that in Appendix A.</P></DIV></DIV>
<DIV id=study-drills class=section>
<H1>Study Drills</H1>
<OL class="arabic simple">
<LI>This script is <EM>really</EM> annoying. There's no need to ask you before doing the copy, and it prints too much out to the screen. Try to make the script more friendly to use by removing features. 
<LI>See how short you can make the script. I could make this one line long. 
<LI>Notice at the end of the <EM>What You Should See</EM> I used something called <TT class="docutils literal">cat</TT>? It's an old command that "con*cat*enates" files together, but mostly it's just an easy way to print a file to the screen. Type <TT class="docutils literal">man cat</TT> to read about it. 
<LI>Find out why you had to write <TT class="docutils literal">out_file.close()</TT> in the code. 
<LI>Go read up on Python's <TT class="docutils literal">import</TT> statement, and start <TT class="docutils literal">python</TT> to try it out. Try importing some things and see if you can get it right. It's alright if you do not.</LI></OL></DIV>
<DIV id=common-student-questions class=section>
<H1>Common Student Questions</H1>
<DL class=docutils>
<DT>Why is the <TT class="docutils literal">'w'</TT> in quotes? 
<DD>That's a string. You've been using strings for a while now. Make sure you know what a string is. 
<DT>No way you can make this one line! 
<DD>That ; depends ; on ; how ; you ; define ; one ; line ; of ; code. 
<DT>Is it normal to feel like this exercise was really hard? 
<DD>Yes, it is totally normal. Programming may not "click" for you until maybe even Exercise 36, or it might not until you finish the book and then make something with Python. Everyone is different, so just keep going and keep reviewing exercises that you had trouble with until it clicks. Be patient. 
<DT>What does the <TT class="docutils literal">len()</TT> function do? 
<DD>It gets the length of the string that you pass to it then returns that as a number. Play with it. 
<DT>When I try to make this script shorter I get an error when I close the files at the end. 
<DD>You probably did something like this, <TT class="docutils literal">indata = <SPAN class=pre>open(from_file).read()</SPAN></TT>, which means you don't need to then do <TT class="docutils literal">in_file.close()</TT> when you reach the end of the script. It should already be closed by Python once that one line runs. 
<DT>I get a <TT class="docutils literal">Syntax:EOL while scanning string literal</TT> error. 
<DD>You forgot to end a string properly with a quote. Go look at that line again.</DD></DL></DIV>