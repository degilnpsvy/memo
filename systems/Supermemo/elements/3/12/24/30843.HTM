static const ARMCPRegInfo el3_cp_reginfo[] = {<BR>&nbsp;&nbsp;&nbsp; { .name = "SCR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 1, .crm = 1, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .fieldoffset = offsetof(CPUARMState, cp15.scr_el3),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetvalue = 0, .writefn = scr_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "SCR",&nbsp; .type = ARM_CP_ALIAS,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .cp = 15, .opc1 = 0, .crn = 1, .crm = 1, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW, .accessfn = access_trap_aa32s_el1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetoflow32(CPUARMState, cp15.scr_el3),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = scr_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "SDER32_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 1, .crm = 1, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.sder) },<BR>&nbsp;&nbsp;&nbsp; { .name = "SDER",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .cp = 15, .opc1 = 0, .crn = 1, .crm = 1, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetoflow32(CPUARMState, cp15.sder) },<BR>&nbsp;&nbsp;&nbsp; { .name = "MVBAR", .cp = 15, .opc1 = 0, .crn = 12, .crm = 0, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW, .accessfn = access_trap_aa32s_el1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = vbar_write, .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.mvbar) },<BR>&nbsp;&nbsp;&nbsp; { .name = "TTBR0_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 2, .crm = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .writefn = vmsa_ttbr_write, .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.ttbr0_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "TCR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 2, .crm = 0, .opc2 = 2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* no .writefn needed as this can't cause an ASID change;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * we must provide a .raw_writefn and .resetfn because we handle<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * reset and migration for the AArch32 TTBCR(S), which might be<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * using mask and base_mask.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetfn = vmsa_ttbcr_reset, .raw_writefn = vmsa_ttbcr_raw_write,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.tcr_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "ELR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .type = ARM_CP_ALIAS,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 4, .crm = 0, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, elr_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "ESR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 5, .crm = 2, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .fieldoffset = offsetof(CPUARMState, cp15.esr_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "FAR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 6, .crm = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .fieldoffset = offsetof(CPUARMState, cp15.far_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "SPSR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .type = ARM_CP_ALIAS,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 4, .crm = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, banked_spsr[BANK_MON]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "VBAR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 12, .crm = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .writefn = vbar_write,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.vbar_el[3]),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetvalue = 0 },<BR>&nbsp;&nbsp;&nbsp; { .name = "CPTR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 1, .crm = 1, .opc2 = 2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .accessfn = cptr_access, .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.cptr_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "TPIDR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 13, .crm = 0, .opc2 = 2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.tpidr_el[3]) },<BR>&nbsp;&nbsp;&nbsp; { .name = "AMAIR_EL3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 10, .crm = 3, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .type = ARM_CP_CONST,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetvalue = 0 },<BR>&nbsp;&nbsp;&nbsp; { .name = "AFSR0_EL3", .state = ARM_CP_STATE_BOTH,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 5, .crm = 1, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .type = ARM_CP_CONST,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetvalue = 0 },<BR>&nbsp;&nbsp;&nbsp; { .name = "AFSR1_EL3", .state = ARM_CP_STATE_BOTH,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 3, .opc1 = 6, .crn = 5, .crm = 1, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_RW, .type = ARM_CP_CONST,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetvalue = 0 },<BR>&nbsp;&nbsp;&nbsp; { .name = "TLBI_ALLE3IS", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 1, .opc1 = 6, .crn = 8, .crm = 3, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_W, .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = tlbi_aa64_alle3is_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "TLBI_VAE3IS", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 1, .opc1 = 6, .crn = 8, .crm = 3, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_W, .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = tlbi_aa64_vae3is_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "TLBI_VALE3IS", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 1, .opc1 = 6, .crn = 8, .crm = 3, .opc2 = 5,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_W, .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = tlbi_aa64_vae3is_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "TLBI_ALLE3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 1, .opc1 = 6, .crn = 8, .crm = 7, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_W, .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = tlbi_aa64_alle3_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "TLBI_VAE3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 1, .opc1 = 6, .crn = 8, .crm = 7, .opc2 = 1,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_W, .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = tlbi_aa64_vae3_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "TLBI_VALE3", .state = ARM_CP_STATE_AA64,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc0 = 1, .opc1 = 6, .crn = 8, .crm = 7, .opc2 = 5,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL3_W, .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = tlbi_aa64_vae3_write },<BR>&nbsp;&nbsp;&nbsp; REGINFO_SENTINEL<BR>};