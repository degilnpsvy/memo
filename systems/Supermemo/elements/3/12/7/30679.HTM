B4.31 Special-purpose mask registers, PRIMASK, BASEPRI, FAULTMASK, for software-controlled priority boosting 
<P></P>
<P>IBNJG <FONT class=extract>In a PE with the Main Extension, software can use the PRIMASK, FAULTMASK, and BASEPRI registers as follows. A PE without the Main Extension implements PRIMASK, but does not implement FAULTMASK and BASEPRI.</FONT></P>
<P><FONT class=extract>PRIMASK<BR>In a PE without the Security Extension:<BR>&#8226; Setting this bit to 1 boosts the current execution priority to 0, masking all exceptions with a lower priority.<BR>In a PE with the Security Extension:<BR>&#8226; Setting PRIMASK_S to 1 boosts the current execution priority to 0.<BR>&#8226; If AIRCR.PRIS is:<BR>&nbsp; 0 Setting PRIMASK_NS to 1 boosts the current execution priority to 0.<BR>&nbsp; 1 Setting PRIMASK_NS to 1 boosts the current execution priority to 0x80.<BR>In a PE with the Security Extension, when the current execution priority is boosted to a particular value, all exceptions with a lower priority are masked.</FONT></P>
<P><FONT class=extract>FAULTMASK<BR>In a PE without the Security Extension:<BR>&#8226; Setting this bit to 1 boosts the current execution priority to -1, masking all exceptions with a lower priority.<BR>In a PE with the Security Extension, if AIRCR.BFHFNMINS is:<BR>0 Setting FAULTMASK_S to 1 boosts the current execution priority to -1.<BR>&nbsp; If AIRCR.PRIS is:<BR>&nbsp; 0 Setting FAULTMASK_NS to 1 boosts the current execution priority to 0.<BR>&nbsp; 1 Setting FAULTMASK_NS to 1 boosts the current execution priority to 0x80.<BR>1 Setting FAULTMASK_S to 1 boosts the current execution priority to -3.<BR>&nbsp; Setting FAULTMASK_NS to 1 boosts the current execution priority to -1.<BR>In a PE with the Security Extension, when the current execution priority is boosted to a particular value, all exceptions with a lower priority are masked.</FONT></P>
<P><FONT class=extract>BASEPRI<BR>In a PE without the Security Extension:<BR>&#8226; Software can set this field to a priority number between 1 and the maximum supported priority number. This boosts the current execution priority to that number, masking all exceptions with a lower priority.<BR>In a PE with the Security Extension:<BR>&#8226; Software can set BASEPRI_S to a priority number between 1 and the maximum supported priority number.<BR>&#8226; If AIRCR.PRIS is:<BR>&nbsp; 0 Software can set BASEPRI_NS to a priority number between 1 and the maximum supported priority number.<BR>&nbsp; 1 Software can set BASEPRI_NS to a priority number between 1 and the maximum supported priority number. The value in BASEPRI_NS is then mapped to the bottom half of the priority range, so that the current execution priority is boosted to the mapped-to value in the bottom half of the priority range.<BR>&nbsp; <BR>In a PE with the Security Extension, when the current execution priority is boosted to a particular value, all exceptions with a lower priority are masked.</FONT></P>
<P>RFHMC The PRIMASK, FAULTMASK, and BASEPRI priority boosting mechanisms only boost the group priority, not the subpriority.</P>
<P>RKBNF Without the Security Extension:<BR>&#8226; An exception return other than from an NMI sets FAULTMASK to 0.<BR>With the Security Extension:<BR>&#8226; An exception return other than from an NMI sets FAULTMASK to 0 if the raw execution priority is greater than or equal to 0. EXC_RETURN.ES indicates which banked instance of FAULTMASK is set to 0.</P>
<P>IPLKD The raw execution priority is:<BR>&#8226; The execution priority minus the effects of AIRCR.PRIS == 1, and minus any software-controlled PRIMASK, FAULTMASK, or BASEPRI priority boosting.</P>
<P>IGBVL The requested execution priority is negative when any of the following are true:<BR>&#8226; The banked FAULTMASK bit for the current Security state is 1, including when AIRCR.PRIS is also 1.<BR>&#8226; HardFault for the current Security state is active.<BR>&#8226; AIRCR.BFHFNMINS.</P>
<P>See also:<BR>&#8226; Priority model on page B4-56.<BR>&#8226; Exception numbers and exception priority numbers on page B4-46.