/* Sort alphabetically by type name, except for "any". */<BR>static gint arm_cpu_list_compare(gconstpointer a, gconstpointer b)<BR>{<BR>&nbsp;&nbsp;&nbsp; ObjectClass *class_a = (ObjectClass *)a;<BR>&nbsp;&nbsp;&nbsp; ObjectClass *class_b = (ObjectClass *)b;<BR>&nbsp;&nbsp;&nbsp; const char *name_a, *name_b;</P>
<P>&nbsp;&nbsp;&nbsp; name_a = object_class_get_name(class_a);<BR>&nbsp;&nbsp;&nbsp; name_b = object_class_get_name(class_b);<BR>&nbsp;&nbsp;&nbsp; if (strcmp(name_a, "any-" TYPE_ARM_CPU) == 0) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 1;<BR>&nbsp;&nbsp;&nbsp; } else if (strcmp(name_b, "any-" TYPE_ARM_CPU) == 0) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return -1;<BR>&nbsp;&nbsp;&nbsp; } else {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return strcmp(name_a, name_b);<BR>&nbsp;&nbsp;&nbsp; }<BR>}</P>
<P>static void arm_cpu_list_entry(gpointer data, gpointer user_data)<BR>{<BR>&nbsp;&nbsp;&nbsp; ObjectClass *oc = data;<BR>&nbsp;&nbsp;&nbsp; CPUListState *s = user_data;<BR>&nbsp;&nbsp;&nbsp; const char *typename;<BR>&nbsp;&nbsp;&nbsp; char *name;</P>
<P>&nbsp;&nbsp;&nbsp; typename = object_class_get_name(oc);<BR>&nbsp;&nbsp;&nbsp; name = g_strndup(typename, strlen(typename) - strlen("-" TYPE_ARM_CPU));<BR>&nbsp;&nbsp;&nbsp; (*s-&gt;cpu_fprintf)(s-&gt;file, "&nbsp; %s\n",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name);<BR>&nbsp;&nbsp;&nbsp; g_free(name);<BR>}</P>
<P>void arm_cpu_list(FILE *f, fprintf_function cpu_fprintf)<BR>{<BR>&nbsp;&nbsp;&nbsp; CPUListState s = {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .file = f,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .cpu_fprintf = cpu_fprintf,<BR>&nbsp;&nbsp;&nbsp; };<BR>&nbsp;&nbsp;&nbsp; GSList *list;</P>
<P>&nbsp;&nbsp;&nbsp; list = object_class_get_list(TYPE_ARM_CPU, false);<BR>&nbsp;&nbsp;&nbsp; list = g_slist_sort(list, arm_cpu_list_compare);<BR>&nbsp;&nbsp;&nbsp; (*cpu_fprintf)(f, "Available CPUs:\n");<BR>&nbsp;&nbsp;&nbsp; g_slist_foreach(list, arm_cpu_list_entry, &amp;s);<BR>&nbsp;&nbsp;&nbsp; g_slist_free(list);<BR>#ifdef CONFIG_KVM<BR>&nbsp;&nbsp;&nbsp; /* The 'host' CPU type is dynamically registered only if KVM is<BR>&nbsp;&nbsp;&nbsp;&nbsp; * enabled, so we have to special-case it here:<BR>&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; (*cpu_fprintf)(f, "&nbsp; host (only available in KVM mode)\n");<BR>#endif<BR>}</P>
<P>static void arm_cpu_add_definition(gpointer data, gpointer user_data)<BR>{<BR>&nbsp;&nbsp;&nbsp; ObjectClass *oc = data;<BR>&nbsp;&nbsp;&nbsp; CpuDefinitionInfoList **cpu_list = user_data;<BR>&nbsp;&nbsp;&nbsp; CpuDefinitionInfoList *entry;<BR>&nbsp;&nbsp;&nbsp; CpuDefinitionInfo *info;<BR>&nbsp;&nbsp;&nbsp; const char *typename;</P>
<P>&nbsp;&nbsp;&nbsp; typename = object_class_get_name(oc);<BR>&nbsp;&nbsp;&nbsp; info = g_malloc0(sizeof(*info));<BR>&nbsp;&nbsp;&nbsp; info-&gt;name = g_strndup(typename,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strlen(typename) - strlen("-" TYPE_ARM_CPU));</P>
<P>&nbsp;&nbsp;&nbsp; entry = g_malloc0(sizeof(*entry));<BR>&nbsp;&nbsp;&nbsp; entry-&gt;value = info;<BR>&nbsp;&nbsp;&nbsp; entry-&gt;next = *cpu_list;<BR>&nbsp;&nbsp;&nbsp; *cpu_list = entry;<BR>}</P>
<P>CpuDefinitionInfoList *arch_query_cpu_definitions(Error **errp)<BR>{<BR>&nbsp;&nbsp;&nbsp; CpuDefinitionInfoList *cpu_list = NULL;<BR>&nbsp;&nbsp;&nbsp; GSList *list;</P>
<P>&nbsp;&nbsp;&nbsp; list = object_class_get_list(TYPE_ARM_CPU, false);<BR>&nbsp;&nbsp;&nbsp; g_slist_foreach(list, arm_cpu_add_definition, &amp;cpu_list);<BR>&nbsp;&nbsp;&nbsp; g_slist_free(list);</P>
<P>&nbsp;&nbsp;&nbsp; return cpu_list;<BR>}