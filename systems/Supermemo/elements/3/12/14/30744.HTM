Subsystem-Specific Callbacks<BR>~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
<P></P>
<P>When a subsystem defines a new attribute type, it must implement a<BR>set of sysfs operations for forwarding read and write calls to the<BR>show and store methods of the attribute owners. </P>
<P>struct sysfs_ops {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ssize_t (*show)(struct kobject *, struct attribute *, char *);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ssize_t (*store)(struct kobject *, struct attribute *, const char *, size_t);<BR>};</P>
<P>[ Subsystems should have already defined a struct <SPAN class=cloze>[...]</SPAN> as a<BR>descriptor for this type, which is where the sysfs_ops pointer is<BR>stored. See the kobject documentation for more information. ]</P>
<P>When a file is read or written, sysfs calls the appropriate method<BR>for the type. The method then translates the generic struct kobject<BR>and struct attribute pointers to the appropriate pointer types, and<BR>calls the associated methods. </P>
<P><BR>To illustrate:</P>
<P>#define to_dev(obj) container_of(obj, struct device, kobj)<BR>#define to_dev_attr(_attr) container_of(_attr, struct device_attribute, attr)</P>
<P>static ssize_t dev_attr_show(struct kobject *kobj, struct attribute *attr,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *buf)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct device_attribute *dev_attr = to_dev_attr(attr);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct device *dev = to_dev(kobj);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ssize_t ret = -EIO;</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (dev_attr-&gt;show)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ret = dev_attr-&gt;show(dev, dev_attr, buf);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (ret &gt;= (ssize_t)PAGE_SIZE) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; print_symbol("dev_attr_show: %s returned bad count\n",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (unsigned long)dev_attr-&gt;show);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ret;<BR>}