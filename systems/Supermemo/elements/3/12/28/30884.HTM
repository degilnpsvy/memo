B4.8 Stack pointer
<P></P>
<P>RMPWV In a PE with the Security Extension, four stacks and four stack pointer registers are implemented:</P>
<P>Stack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stack pointer register<BR>Secure&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Main&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MSP_S<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Process&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; PSP_S<BR>Non-secure&nbsp; Main&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MSP_NS<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Process&nbsp;&nbsp; PSP_NS</P>
<P>Otherwise, two stacks and two stack pointer registers are implemented:</P>
<P>Stack&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Stack pointer register<BR>Main&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; MSP<BR>Process&nbsp; &nbsp; PSP</P>
<P>RTXRW In Handler mode, the PE uses the main stack.<BR>IDMLS In Thread mode, CONTROL.SPSEL determines whether the PE uses the main or process stack.<BR>RBLPL In a PE with the Security Extension, the Secure main stack, MSP_S, is selected and initialized on reset. Otherwise, MSP is selected and initialized on reset.<BR>RXPWM &lt;stack_pointer_register_name&gt;[1:0] is always treated as RES0, so that all stack pointers are always guaranteed to be word-aligned.<BR>RKQFB After the exception entry stacking operation, the stack pointer is doubleword-aligned.<BR>IPWRQ ARM recommends that the Secure stacks be located in Secure memory.</P>
<P>See also:<BR>&#8226; Security states, Secure state and Non-secure state on page B4-43.<BR>&#8226; PE modes, Thread mode and Handler mode on page B4-37.<BR>&#8226; Exception entry, context stacking on page B4-64.<BR>&#8226; Vector tables on page B4-83.<BR>&#8226; Registers on page B4-39.<BR>&#8226; Stack limit checks on page B4-70.