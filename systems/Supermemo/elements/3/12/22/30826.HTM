static const ARMCPRegInfo omap_cp_reginfo[] = {<BR>&nbsp;&nbsp;&nbsp; { .name = "DFSR", .cp = 15, .crn = 5, .crm = CP_ANY,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc1 = CP_ANY, .opc2 = CP_ANY, .access = PL1_RW, .type = ARM_CP_OVERRIDE,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetoflow32(CPUARMState, cp15.esr_el[1]),<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .resetvalue = 0, },<BR>&nbsp;&nbsp;&nbsp; { .name = "", .cp = 15, .crn = 15, .crm = 0, .opc1 = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW, .type = ARM_CP_NOP },<BR>&nbsp;&nbsp;&nbsp; { .name = "TICONFIG", .cp = 15, .crn = 15, .crm = 1, .opc1 = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.c15_ticonfig), .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = omap_ticonfig_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "IMAX", .cp = 15, .crn = 15, .crm = 2, .opc1 = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.c15_i_max), .resetvalue = 0, },<BR>&nbsp;&nbsp;&nbsp; { .name = "IMIN", .cp = 15, .crn = 15, .crm = 3, .opc1 = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW, .resetvalue = 0xff0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.c15_i_min) },<BR>&nbsp;&nbsp;&nbsp; { .name = "THREADID", .cp = 15, .crn = 15, .crm = 4, .opc1 = 0, .opc2 = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .access = PL1_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .fieldoffset = offsetof(CPUARMState, cp15.c15_threadid), .resetvalue = 0,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = omap_threadid_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "TI925T_STATUS", .cp = 15, .crn = 15,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .crm = 8, .opc1 = 0, .opc2 = 0, .access = PL1_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .type = ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .readfn = arm_cp_read_zero, .writefn = omap_wfi_write, },<BR>&nbsp;&nbsp;&nbsp; /* TODO: Peripheral port remap register:<BR>&nbsp;&nbsp;&nbsp;&nbsp; * On OMAP2 mcr p15, 0, rn, c15, c2, 4 sets up the interrupt controller<BR>&nbsp;&nbsp;&nbsp;&nbsp; * base address at $rn &amp; ~0xfff and map size of 0x200 &lt;&lt; ($rn &amp; 0xfff),<BR>&nbsp;&nbsp;&nbsp;&nbsp; * when MMU is off.<BR>&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; { .name = "OMAP_CACHEMAINT", .cp = 15, .crn = 7, .crm = CP_ANY,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .opc1 = 0, .opc2 = CP_ANY, .access = PL1_W,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .type = ARM_CP_OVERRIDE | ARM_CP_NO_RAW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .writefn = omap_cachemaint_write },<BR>&nbsp;&nbsp;&nbsp; { .name = "C9", .cp = 15, .crn = 9,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .crm = CP_ANY, .opc1 = CP_ANY, .opc2 = CP_ANY, .access = PL1_RW,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .type = ARM_CP_CONST | ARM_CP_OVERRIDE, .resetvalue = 0 },<BR>&nbsp;&nbsp;&nbsp; REGINFO_SENTINEL<BR>};