D2.2.3 <FONT class=extract>AIRCR, Application Interrupt and Reset Control Register</FONT> 
<P></P>
<P><FONT class=extract>The AIRCR characteristics are:<BR>Purpose: Sets or returns interrupt control and reset configuration.<BR>Usage constraints: Privileged access permitted only. Unprivileged accesses generate a BusFault. This register is word accessible only. Halfword and byte accesses are UNPREDICTABLE.<BR>Configurations: This register is always implemented.<BR>Attributes: 32-bit read/write register located at 0xE000ED0C.<BR>&nbsp; Secure software can access the Non-secure view of this register via AIRCR_NS located at 0xE002ED0C. The location 0xE002ED0C is RES0 to software executing in Non-secure state and the debugger.<BR>&nbsp; This register is banked between Security states on a bit by bit basis.</FONT></P>
<P><FONT class=extract>VECTKEY, bits [31:16], on a write<BR>Vector key. Writes to the AIRCR must be accompanied by a write of the value 0x05FA to this field. Writes to the AIRCR fields that are not accompanied by this value are ignored for the purpose of updating any of the AIRCR values or initiating any AIRCR functionality.<BR>This field is not banked between Security states.<BR>The possible values of this field are:<BR>&nbsp; 0x05FA Permit write to AIRCR fields.<BR>&nbsp; Not 0x05FA Accompanying write to AIRCR fields ignored.<BR>&nbsp; <BR>VECTKEYSTAT, bits [31:16], on a read<BR>Vector key status. Returns the bitwise inverse of the value required to be written to VECTKEY.<BR>This field is not banked between Security states.<BR>This field reads as 0xFA05.</FONT></P>
<P><FONT class=extract>ENDIANNESS, bit [15]<BR>Data endianness. Indicates how the PE interprets the memory system data endianness.<BR>This bit is not banked between Security states.<BR>The possible values of this bit are:<BR>0 Little-endian.<BR>1 Big-endian.<BR>This bit is read-only.<BR>This bit reads as an IMPLEMENTATION DEFINED value.</FONT></P>
<P><FONT class=extract>PRIS, bit [14]<BR>Prioritize Secure exceptions. The value of this bit defines whether Secure exception priority boosting is enabled.<BR>This bit is not banked between Security states.<BR>The possible values of this bit are:<BR>0 Priority ranges of Secure and Non-secure exceptions are identical.<BR>1 Non-secure exceptions are de-prioritized.<BR>To allow lock down of this bit, it is IMPLEMENTATION DEFINED whether this bit is writable.<BR>This bit is RAZ/WI from Non-secure.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P><FONT class=extract>BFHFNMINS, bit [13]<BR>BusFault, HardFault, and NMI Non-secure enable. The value of this bit defines whether BusFault and NMI exceptions are Non-secure, and whether exceptions target the Non-secure HardFault exception.<BR>This bit is not banked between Security states.<BR>The possible values of this bit are:<BR>0 BusFault, HardFault, and NMI are Secure.<BR>1 BusFault and NMI are Non-secure and exceptions can target Non-secure HardFault.<BR>If an implementation resets into Secure state, this bit resets to zero. If an implementation does not support Secure state, this bit is RAO/WI. To allow lock down of this filed it is IMPLEMENTATION DEFINED whether this bit is writable. The effect of setting both BFHFNMINS and PRIS to 1 is UNPREDICTABLE.<BR>This bit is read-only from Non-secure.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P>Bits [12:11]<BR>Reserved, RES0.</P>
<P><FONT class=extract>PRIGROUP, bits [10:8]<BR>Priority grouping. The value of this field defines the exception priority binary point position for the selected Security state.<BR>This field is banked between Security states.<BR>The possible values of this field are:<BR>0b000 Group priority [7:1], subpriority [0].<BR>0b001 Group priority [7:2], subpriority [1:0].<BR>0b010 Group priority [7:3], subpriority [2:0].<BR>0b011 Group priority [7:4], subpriority [3:0].<BR>0b100 Group priority [7:5], subpriority [4:0].<BR>0b101 Group priority [7:6], subpriority [5:0].<BR>0b110 Group priority [7], subpriority [6:0].<BR>0b111 No group priority, subpriority [7:0].<BR>If the Main Extension is not implemented, this field is RES0.<BR>This field resets to zero on a Warm reset.</FONT></P>
<P>Bits [7:4]<BR>Reserved, RES0.</P>
<P><FONT class=extract>SYSRESETREQS, bit [3]<BR>System reset request Secure only. The value of this bit defines whether the SYSRESETREQ bit is functional for Non-secure use.<BR>This bit is not banked between Security states.<BR>The possible values of this bit are:<BR>0 SYSRESETREQ functionality is available to both Security states.<BR>1 SYSRESETREQ functionality is only available to Secure state.<BR>This bit is RAZ/WI from Non-secure.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P><FONT class=extract>SYSRESETREQ, bit [2]<BR>System reset request. This bit allows software or a debugger to request a system reset.<BR>This bit is not banked between Security states.<BR>The possible values of this bit are:<BR>0 Do not request a system reset.<BR>1 Request a system reset.<BR>When SYSRESETREQS is set to 1, the Non-secure view of this bit is RAZ/WI.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P><FONT class=extract>VECTCLRACTIVE, bit [1]<BR>Clear active state.<BR>A debugger write of one to this bit when the PE is halted in Debug state:<BR>&#8226; IPSR is cleared to zero.<BR>&#8226; The active state for all Non-secure exceptions is cleared.<BR>&#8226; If DHCSR.S_SDE==1, the active state for all Secure exceptions are cleared.<BR>This bit is not banked between Security states.<BR>The possible values of this bit are:<BR>0 Do not clear active state.<BR>1 Clear active state.<BR>Writes to this bit while the PE is in Non-debug state are ignored.<BR>This bit reads as zero.</FONT></P>
<P>Bit [0]<BR>Reserved, RES0.