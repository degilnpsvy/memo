A1.1 About the ARMv8 architecture, and architecture profiles 
<P></P>
<P>The ARM architecture described in this Architecture Reference Manual defines the behavior of an abstract machine, referred to as a <FONT class=extract>Processing Element (PE)</FONT>. Implementations compliant with the ARM architecture must conform to the described behavior of the PE. This manual is not intended to describe how to build an implementation of the PE, nor to limit the scope of such implementations beyond the defined behaviors.</P>
<P>Except where the architecture specifies differently, the programmer-visible behavior of an implementation that is compliant with the ARM architecture must be the same as a simple sequential execution of the program on the processing element. This programmer-visible behavior does not include the execution time of the program.</P>
<P>The ARM Architecture Reference Manual also describes rules for software to use the PE.</P>
<P>The ARM architecture includes definitions of:<BR>&#8226; An associated debug architecture.<BR>&#8226; Associated trace architectures, which define trace macrocells that implementers can implement with the associated processor hardware. For more information, see the ARM&#174; Embedded Trace Macrocell Architecture Specification .</P>
<P>The ARM architecture is a Reduced Instruction Set Computer (RISC) architecture with the following RISC architectural features:<BR>&#8226; A large uniform register file.<BR>&#8226; A load/store architecture, where data-processing operations only operate on register contents, not directly on memory contents.<BR>&#8226; Simple addressing modes, with all load/store addresses determined from register contents and instruction fields only.</P>
<P><FONT class=extract>ARM defines three architecture profiles:<BR>A Application profile:<BR>&#8226; Supports a Virtual Memory System Architecture (VMSA) based on a Memory Management Unit (MMU).<BR>&nbsp; Note<BR>&nbsp; An ARMv8-A implementation can be called an AArchv8-A implementation.<BR>&#8226; Supports the A64, A32, and T32 instruction sets.<BR>R Real-time profile:<BR>&#8226; Supports a Protected Memory System Architecture (PMSA) based on a Memory Protection Unit (MPU).<BR>&#8226; Supports the A32 and T32 instruction sets.<BR>M Microcontroller profile, described in this manual:<BR>&#8226; Implements a programmers' model designed for low-latency interrupt processing, with hardware stacking of registers and support for writing interrupt handlers in high-level languages.<BR>&#8226; Optionally implements a variant of the R-profile PMSA.<BR>&#8226; Supports a variant of the T32 instruction set.</FONT></P>
<P>Note<BR>This Architecture Reference Manual:<BR>&#8226; Describes only the ARMv8-M profile.<BR>&#8226; Does not describe details of other ARM architecture profiles or of earlier versions of the M profile<BR>architecture.