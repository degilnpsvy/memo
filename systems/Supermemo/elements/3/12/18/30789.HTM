uint64_t read_raw_cp_reg(CPUARMState *env, const ARMCPRegInfo *ri)<BR>{<BR>&nbsp;&nbsp;&nbsp; /* Raw read of a coprocessor register (as needed for migration, etc). */<BR>&nbsp;&nbsp;&nbsp; if (ri-&gt;type &amp; ARM_CP_CONST) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ri-&gt;resetvalue;<BR>&nbsp;&nbsp;&nbsp; } else if (ri-&gt;raw_readfn) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ri-&gt;raw_readfn(env, ri);<BR>&nbsp;&nbsp;&nbsp; } else if (ri-&gt;readfn) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ri-&gt;readfn(env, ri);<BR>&nbsp;&nbsp;&nbsp; } else {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return raw_read(env, ri);<BR>&nbsp;&nbsp;&nbsp; }<BR>}</P>
<P>static void write_raw_cp_reg(CPUARMState *env, const ARMCPRegInfo *ri,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint64_t v)<BR>{<BR>&nbsp;&nbsp;&nbsp; /* Raw write of a coprocessor register (as needed for migration, etc).<BR>&nbsp;&nbsp;&nbsp;&nbsp; * Note that constant registers are treated as write-ignored; the<BR>&nbsp;&nbsp;&nbsp;&nbsp; * caller should check for success by whether a readback gives the<BR>&nbsp;&nbsp;&nbsp;&nbsp; * value written.<BR>&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; if (ri-&gt;type &amp; ARM_CP_CONST) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<BR>&nbsp;&nbsp;&nbsp; } else if (ri-&gt;raw_writefn) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ri-&gt;raw_writefn(env, ri, v);<BR>&nbsp;&nbsp;&nbsp; } else if (ri-&gt;writefn) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ri-&gt;writefn(env, ri, v);<BR>&nbsp;&nbsp;&nbsp; } else {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; raw_write(env, ri, v);<BR>&nbsp;&nbsp;&nbsp; }<BR>}