# qemu:translate-common.c 
<P></P>
<P>/*<BR>&nbsp;*&nbsp; Host code generation common components<BR>&nbsp;*<BR>&nbsp;*&nbsp; Copyright (c) 2015 Peter Crosthwaite &lt;<A href="mailto:crosthwaite.peter@gmail.com">crosthwaite.peter@gmail.com</A>&gt;<BR>&nbsp;*<BR>&nbsp;* This library is free software; you can redistribute it and/or<BR>&nbsp;* modify it under the terms of the GNU Lesser General Public<BR>&nbsp;* License as published by the Free Software Foundation; either<BR>&nbsp;* version 2 of the License, or (at your option) any later version.<BR>&nbsp;*<BR>&nbsp;* This library is distributed in the hope that it will be useful,<BR>&nbsp;* but WITHOUT ANY WARRANTY; without even the implied warranty of<BR>&nbsp;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp; See the GNU<BR>&nbsp;* Lesser General Public License for more details.<BR>&nbsp;*<BR>&nbsp;* You should have received a copy of the GNU Lesser General Public<BR>&nbsp;* License along with this library; if not, see &lt;<A href="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</A>&gt;.<BR>&nbsp;*/</P>
<P></P>
<P>#include "qemu/osdep.h"<BR>#include "qemu-common.h"<BR>#include "qom/cpu.h"</P>
<P><FONT class=extract>uintptr_t qemu_real_host_page_size;<BR>intptr_t qemu_real_host_page_mask;</FONT></P>
<P>#ifndef CONFIG_USER_ONLY<BR>/* mask must never be zero, except for A20 change call */<BR>static void tcg_handle_interrupt(CPUState *cpu, int mask)<BR>{<BR>&nbsp;&nbsp;&nbsp; int old_mask;</P>
<P>&nbsp;&nbsp;&nbsp; old_mask = cpu-&gt;interrupt_request;<BR>&nbsp;&nbsp;&nbsp; cpu-&gt;interrupt_request |= mask;</P>
<P>&nbsp;&nbsp;&nbsp; /*<BR>&nbsp;&nbsp;&nbsp;&nbsp; * If called from iothread context, wake the target cpu in<BR>&nbsp;&nbsp;&nbsp;&nbsp; * case its halted.<BR>&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; if (!qemu_cpu_is_self(cpu)) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; qemu_cpu_kick(cpu);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<BR>&nbsp;&nbsp;&nbsp; }</P>
<P>&nbsp;&nbsp;&nbsp; if (use_icount) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu-&gt;icount_decr.u16.high = 0xffff;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!cpu-&gt;can_do_io<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; (mask &amp; ~old_mask) != 0) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu_abort(cpu, "Raised interrupt while not in I/O function");<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; } else {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cpu-&gt;tcg_exit_req = 1;<BR>&nbsp;&nbsp;&nbsp; }<BR>}</P>
<P>CPUInterruptHandler cpu_interrupt_handler = tcg_handle_interrupt;<BR>#endif