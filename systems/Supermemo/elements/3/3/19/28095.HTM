/**<BR>&nbsp;* sprintf - Format a string and place it in a buffer<BR>&nbsp;* @buf: The buffer to place the result into<BR>&nbsp;* @fmt: The format string to use<BR>&nbsp;* @...: Arguments for the format string<BR>&nbsp;*<BR>&nbsp;* The function returns the number of characters written<BR>&nbsp;* into @buf. Use snprintf() or scnprintf() in order to avoid<BR>&nbsp;* buffer overflows.<BR>&nbsp;*<BR>&nbsp;* See the vsnprintf() documentation for format string extensions over C99.<BR>&nbsp;*/<BR>int sprintf(char *buf, const char *fmt, ...)<BR>{<BR><FONT class=clozed>&nbsp;va_list args;<BR>&nbsp;int i; </FONT>
<P></P>
<P><FONT class=clozed>&nbsp;va_start(args, fmt);<BR>&nbsp;i = vsnprintf(buf, INT_MAX, fmt, args);<BR>&nbsp;va_end(args);</FONT></P>
<P><FONT class=clozed>&nbsp;return i</FONT>;<BR>}<BR>EXPORT_SYMBOL(sprintf);