/**<BR>&nbsp;* vsprintf - Format a string and place it in a buffer<BR>&nbsp;* @buf: The buffer to place the result into<BR>&nbsp;* @fmt: The format string to use<BR>&nbsp;* @args: Arguments for the format string<BR>&nbsp;*<BR>&nbsp;* The function returns the number of characters written<BR>&nbsp;* into @buf. Use <FONT class=clozed>vsnprintf() or vscnprintf() in order to avoid<BR>&nbsp;* buffer overflows.<BR></FONT>&nbsp;*<BR>&nbsp;* If you're not already dealing with a va_list consider using sprintf().<BR>&nbsp;*<BR>&nbsp;* See the vsnprintf() documentation for format string extensions over C99.<BR>&nbsp;*/<BR>int vsprintf(char *buf, const char *fmt, va_list args)<BR>{<BR>&nbsp;return vsnprintf(buf, INT_MAX, fmt, args);<BR>}<BR>EXPORT_SYMBOL(vsprintf);