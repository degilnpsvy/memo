<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin___clear_cache</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>char *begin, char *end</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005f_005f_005fclear_005fcache-3630></A></VAR><BR>
<BLOCKQUOTE>
<P>This function is used to flush the processor's instruction cache for the region of memory between<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>begin</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>inclusive and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>end</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>exclusive. Some targets require that the instruction cache be flushed, after modifying memory containing code, in order to obtain deterministic behavior.</P>
<P>If the target does not require instruction cache flushes,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin___clear_cache</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has no effect. Otherwise either instructions are emitted in-line to clear the instruction cache or a call to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__clear_cache</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function in libgcc is made.</P></BLOCKQUOTE></DIV>