5.5.1 Data pointers</P>
<P>Where a secure function dereferences a data pointer that is passed to it from non-secure code care must be taken to ensure that the pointer can't be used as an attack vector (E.G. by passing a pointer that points to an arbitrary secure location instead of non-secure memory). To avoid the need to manually compare the pointer value against the address ranges of the secure memory regions the TT instruction can be used (see section 5.6.3). When executed from the secure state this instruction writes the security status of a memory location into a register, and therefore can be used to validate pointers before they are dereferenced.</P>
<P>In some cases it can be useful to validate memory accesses against the security status of another memory location (eg when following a chain of pointers). This is especially useful when the task needs to be performed deep in the secure code, or when validating complex structures of pointers to pointers (eg see section 11.1.2.2). This can be achieved using the TT instruction on multiple locations and comparing the results.