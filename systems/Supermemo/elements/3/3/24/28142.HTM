<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<BLOCKQUOTE>
<P></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: float<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_nansf</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>const char *str</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fnansf-3650></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_nans</CODE>, except the return type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>float</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: long double<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_nansl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>const char *str</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fnansl-3651></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_nans</CODE>, except the return type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long double</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_ffs</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fffs-3652></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns one plus the index of the least significant 1-bit of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR>, or if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is zero, returns zero.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_clz</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fclz-3653></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns the number of leading 0-bits in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR>, starting at the most significant bit position. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 0, the result is undefined.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_ctz</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fctz-3654></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns the number of trailing 0-bits in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR>, starting at the least significant bit position. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 0, the result is undefined.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_clrsb</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fclrsb-3655></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns the number of leading redundant sign bits in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR>, i.e. the number of bits following the most significant bit that are identical to it. There are no special cases for 0 or other values.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_popcount</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fpopcount-3656></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns the number of 1-bits in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_parity</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fparity-3657></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns the parity of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR>, i.e. the number of 1-bits in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>modulo 2.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_ffsl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fffsl-3658></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_ffs</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_clzl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fclzl-3659></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_clz</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_ctzl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fctzl-3660></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_ctz</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_clrsbl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fclrsbl-3661></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_clrsb</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_popcountl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fpopcountl-3662></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_popcount</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_parityl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fparityl-3663></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_parity</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_ffsll</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>long long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fffsll-3664></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_ffs</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_clzll</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fclzll-3665></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_clz</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_ctzll</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fctzll-3666></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_ctz</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_clrsbll</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>long long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fclrsbll-3667></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_clrsb</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_popcountll</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fpopcountll-3668></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_popcount</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_parityll</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned long long</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fparityll-3669></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_parity</CODE>, except the argument type is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>unsigned long long</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: double<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_powi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>double, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fpowi-3670></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns the first argument raised to the power of the second. Unlike the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pow</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function no guarantees about precision and rounding are made.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: float<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_powif</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>float, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fpowif-3671></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_powi</CODE>, except the argument and return types are<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>float</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: long double<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_powil</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>long double, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fpowil-3672></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_powi</CODE>, except the argument and return types are<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long double</CODE>.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: uint16_t<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_bswap16</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>uint16_t x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fbswap16-3673></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>x</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>with the order of the bytes reversed; for example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0xaabb</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>becomes<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0xbbaa</CODE>. Byte here always means exactly 8 bits.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: uint32_t<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_bswap32</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>uint32_t x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fbswap32-3674></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_bswap16</CODE>, except the argument and return types are 32 bit.</FONT></P></BLOCKQUOTE></DIV>
<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>&#8212; Built-in Function: uint64_t<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_bswap64</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>uint64_t x</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005fbswap64-3675></A></VAR><BR></FONT>
<BLOCKQUOTE>
<P><FONT class=extract>Similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_bswap32</CODE>, except the argument and return types are 64 bit.</FONT></P></BLOCKQUOTE></DIV>