********* Arithmetic 
<P></P>
<P>* add_i32/i64 t0, t1, t2 </P>
<P>t0=t1+t2 </P>
<P>&nbsp;</P>
<P>* sub_i32/i64 t0, t1, t2 </P>
<P>t0=t1-t2 </P>
<P>&nbsp;</P>
<P>* neg_i32/i64 t0, t1 </P>
<P>t0=-t1 (two's complement) </P>
<P>&nbsp;</P>
<P>* mul_i32/i64 t0, t1, t2 </P>
<P>t0=t1*t2 </P>
<P>&nbsp;</P>
<P>* div_i32/i64 t0, t1, t2 </P>
<P>t0=t1/t2 (signed). Undefined behavior if division by zero or overflow. </P>
<P>&nbsp;</P>
<P>* divu_i32/i64 t0, t1, t2 </P>
<P>t0=t1/t2 (unsigned). Undefined behavior if division by zero. </P>
<P>&nbsp;</P>
<P>* rem_i32/i64 t0, t1, t2 </P>
<P>t0=t1%t2 (signed). Undefined behavior if division by zero or overflow. </P>
<P>&nbsp;</P>
<P>* remu_i32/i64 t0, t1, t2 </P>
<P>t0=t1%t2 (unsigned). Undefined behavior if division by zero.