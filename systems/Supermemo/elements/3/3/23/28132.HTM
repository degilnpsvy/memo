<DIV class=defun style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_fpclassify</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int, int, int, int, int, ...</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005ffpclassify-3635></A></VAR><BR>
<BLOCKQUOTE>
<P>This built-in implements the C99 fpclassify functionality. The first five int arguments should be the target library's notion of the possible FP classes and are used for return values. They must be constant values and they must appear in this order:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FP_NAN</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FP_INFINITE</CODE>,<CODE>FP_NORMAL</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FP_SUBNORMAL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FP_ZERO</CODE>. The ellipsis is for exactly one floating-point value to classify. GCC treats the last argument as type-generic, which means it does not do default promotion from float to double.</P></BLOCKQUOTE></DIV>