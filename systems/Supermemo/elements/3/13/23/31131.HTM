B4.25 Exceptions during exception entry 
<P></P>
<P>ILBGQ <FONT class=extract>During exception entry exceptions can occur, for example asynchronous exceptions, or the exception entry sequence itself might cause an exception, for example a MemManage fault on the push to the stack.<BR>Any exception that occurs during exception entry is a late-arriving exception, and:<BR>&#8226; The exception that caused the original entry sequence is the original exception.<BR>&#8226; The priority of the code stream running at the time of the original exception is the preempted priority.<BR>When the exception entry sequence itself causes an exception, the latter exception is a derived exception.<BR>The following mechanism is called late-arrival preemption:<BR>&#8226; The PE takes a late-arriving exception during an exception entry if the late-arriving exception is higher priority, including taking into account any priority adjustment by AIRCR.PRIS. In this case:<BR>&nbsp; &#8213; The late-arriving exception uses the exception entry sequence started by the original exception. The original exception remains pending.<BR>&nbsp; &#8213; The PE takes the original exception after returning from the late-arriving exception.</FONT><BR>RMRTR <FONT class=extract>For:<BR>&#8226; Derived exceptions, late-arrival preemption is mandatory.<BR>&#8226; Late-arriving asynchronous exceptions, it is IMPLEMENTATION DEFINED whether late-arrival preemption is used. If the PE does not implement late-arrival preemption for late-arriving asynchronous exceptions, late-arriving asynchronous exceptions become pending.</FONT><BR>RGDNT <FONT class=extract>If the group priority field value of a derived exception is higher than or equal to the preempted priority:<BR>&#8226; If the derived exception is a DebugMonitor exception, it is ignored.<BR>&#8226; Otherwise, the PE escalates the derived exception to Hardfault.</FONT><BR>RGVHV <FONT class=extract>If a higher priority late-arriving Secure exception occurs during entry to a Non-secure exception when the Background Security state is Secure, it is IMPLEMENTATION DEFINED whether:<BR>&#8226; The stacking of the additional state context is rolled back.<BR>&#8226; The stacking of the additional state context is completed and EXC_RETURN.DCRS is set to 0.</FONT><BR>INJCW <FONT class=extract>The architecture does not specify the point during exception entry at which the PE recognizes the arrival of an asynchronous exception.</FONT><BR>See also:<BR>&#8226; Exception numbers and exception priority numbers on page B4-46.<BR>&#8226; Priority model on page B4-56.<BR>&#8226; Exception states on page B4-55.<BR>&#8226; Exception handling on page B4-63.<BR>&#8226; Tail-chaining on page B4-79.