B4.29 Vector tables 
<P></P>
<P>RNWFF <FONT class=extract>In a PE with the Security Extension, two vector tables are implemented, the Secure Vector table and the Non-secure<BR>Vector table, and it is IMPLEMENTATION DEFINED which of the following is true:<BR>&#8226; The PE supports configurability of each vector table base, and two Vector Table Offset Registers, VTOR_S<BR>and VTOR_NS, are provided for this purpose.<BR>&#8226; The PE does not support configurability of either vector table base, and VTOR_S and VTOR_NS are<BR>RAZ/WI.<BR>If the PE supports configurability of each vector table base:<BR>&#8226; Exceptions that target Secure state use VTOR_S to determine the base address of the Secure vector table.<BR>&#8226; Exceptions that target Non-secure state use VTOR_NS to determine the base address of the Non-secure vector table.</FONT><BR>RGTJQ <FONT class=extract>In a PE without the Security Extension, a single vector table is implemented, and it is IMPLEMENTATION DEFINED which of the following is true:<BR>&#8226; The PE supports configurability of the vector table base, and a single Vector Table Offset Register, VTOR, is provided for this purpose.<BR>&#8226; The PE does not support configurability of the vector table base, and VTOR is RAZ/WI.</FONT><BR>IWFGX <FONT class=extract>ARM recommends that VTOR_S points to memory that is Secure and not Non-secure callable.</FONT><BR>RWPRT <FONT class=extract>A vector table contains both:<BR>&#8226; The initialization value for the main stack pointer on reset.<BR>&#8226; The start address of each exception handler.<BR>The exception number defines the order of entries.</FONT></P>
<P><FONT class=extract>Word offset in vector table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value held at offset<BR>0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Initial value for the main stack pointer on reset<BR>Exception number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Start address for the handler for the exception with that number<BR>Exception number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Start address for the handler for the exception with that number<BR>.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .<BR>.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .<BR>.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .<BR>Exception number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Start address for the handler for the exception with that number</FONT></P>
<P>RLFDL <FONT class=extract>In a PE with a configurable vector table base, the vector table must be naturally aligned to a power of two, with an alignment value that is:<BR>&nbsp; &#8226; A minimum of 128 bytes.<BR>&nbsp; &#8226; Greater than or equal to (Number of Exceptions supported x4).</FONT><BR>RXPPT <FONT class=extract>For all vector table entries other than the entry at offset 0, if bit[0] is not set to 1, the first instruction in the exception will result in an INVSTATE UsageFault.</FONT><BR>IBVSC <FONT class=extract>For all vector table entries other than the entry at offset 0, bit[0] defines EPSR.T on exception entry. Setting bit[0] to 1 indicates that the exception handler is in the T32 Instruction set state.</FONT><BR>See also:<BR>&#8226; Exception numbers and exception priority numbers on page B4-46.<BR>&#8226; Execution Program Status Register (EPSR) on page B4-41.