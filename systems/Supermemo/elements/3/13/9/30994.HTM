B3.1.1 The Wait for Event (WFE) instruction<BR>RDCMH <FONT class=extract>When a WFE instruction is executed, if the state of the Event register is:<BR>&#8226; Clear, the PE can suspend execution and enter a low-power state.<BR>&#8226; Set, the instruction clears the register and completes immediately.<BR></FONT>RBGZM<FONT class=extract> If the PE enters a low-power state on a WFE instruction, it remains in that low-power state until it receives a WFE wakeup event. When the PE recognizes a WFE wakeup event, the WFE instruction completes. The following are WFE wakeup events:<BR>&#8226; The execution of a SEV instruction by any PE.<BR>&#8226; When SCR.SEVONPEND is 1, any exception entering the pending state.<BR>&#8226; Any exception at a priority that would preempt the current execution priority, taking into account any active exceptions and including the effects of any software-controlled priority booting by AIRCR.PRIS == 1 and PRIMASK, FAULTMASK, or BASEPRI.<BR>&#8226; If debug is enabled, a debug event.</FONT><BR>RYRDC <FONT class=extract>The ARMv8-M architecture does not define the exact nature of the low-power state entered on a WFE instruction, except that it must not cause a loss of memory coherency.</FONT><BR>ITZJZ <FONT class=extract>ARM recommends that software always uses the WFE instruction in a loop.</FONT><BR>See also:<BR>&#8226; WaitForEvent on page E3-1278.<BR>&#8226; SendEvent on page E3-1258.