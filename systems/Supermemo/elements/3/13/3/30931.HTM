<H1 class=title>Exercise 39: Dictionaries, Oh Lovely Dictionaries</H1>
<P id=p1>You are now going to learn about the Dictionary data structure in Python. A Dictionary (or "dict") is a way to store data just like a <TT class="docutils literal">list</TT>, but instead of using only numbers to get the data, you can use almost anything. This lets you treat a <TT class="docutils literal">dict</TT> like it's a database for storing and organizing data.</P>
<P id=p2>Let's compare what can dicts can do to what lists can do. You see, a list lets you do this:</P>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex39_pycon.py-idio-pycon-pyg.html-1></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>things</SPAN> <SPAN class=o>=</SPAN> <SPAN class=p>[</SPAN><SPAN class=s1>'a'</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'b'</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'c'</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'d'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-2></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>things</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>1</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-3></A><SPAN class=go>b</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-4></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>things</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>1</SPAN><SPAN class=p>]</SPAN> <SPAN class=o>=</SPAN> <SPAN class=s1>'z'</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-5></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>things</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>1</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-6></A><SPAN class=go>z</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-7></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>things</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-8></A><SPAN class=go>['a', 'z', 'c', 'd']</SPAN>
</PRE></DIV>
<P id=p3>You can use numbers to "index" into a list, meaning you can use numbers to find out what's in lists. You should know this about lists by now, but make sure you understand that you can <EM>only</EM> use numbers to get items out of a list.</P>
<P id=p4>What a <TT class="docutils literal">dict</TT> does is let you use <EM>anything</EM>, not just numbers. Yes, a dict associates one thing to another, no matter what it is. Take a look:</P>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex39_pycon.py-idio-pycon-pyg.html-1></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>stuff</SPAN> <SPAN class=o>=</SPAN> <SPAN class=p>{</SPAN><SPAN class=s1>'name'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'Zed'</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'age'</SPAN><SPAN class=p>:</SPAN> <SPAN class=mi>39</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'height'</SPAN><SPAN class=p>:</SPAN> <SPAN class=mi>6</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>12</SPAN> <SPAN class=o>+</SPAN> <SPAN class=mi>2</SPAN><SPAN class=p>}</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-2></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'name'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-3></A><SPAN class=go>Zed</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-4></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'age'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-5></A><SPAN class=go>39</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-6></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'height'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-7></A><SPAN class=go>74</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-8></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'city'</SPAN><SPAN class=p>]</SPAN> <SPAN class=o>=</SPAN> <SPAN class=s2>"San Francisco"</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-9></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'city'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-10></A><SPAN class=go>San Francisco</SPAN>
</PRE></DIV>
<P id=p5>You will see that instead of just numbers we're using strings to say what we want from the <TT class="docutils literal">stuff</TT> dictionary. We can also put new things into the dictionary with strings. It doesn't have to be strings though. We can also do this:</P>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex39_pycon.py-idio-pycon-pyg.html-1></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>1</SPAN><SPAN class=p>]</SPAN> <SPAN class=o>=</SPAN> <SPAN class=s2>"Wow"</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-2></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>2</SPAN><SPAN class=p>]</SPAN> <SPAN class=o>=</SPAN> <SPAN class=s2>"Neato"</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-3></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>1</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-4></A><SPAN class=go>Wow</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-5></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>print</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>2</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-6></A><SPAN class=go>Neato</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-7></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>stuff</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-8></A><SPAN class=go>{'city': 'San Francisco', 2: 'Neato', 'name': 'Zed', 1: 'Wow', 'age': 39, 'height': 74}</SPAN>
</PRE></DIV>
<P id=p6>In this code I used numbers, and then you can see there are numbers and strings as keys in the dict when I print it. I could use anything. Well, almost but just pretend you can use anything for now.</P>
<P id=p7>Of course, a dictionary that you can only put things in is pretty stupid, so here's how you delete things, with the <TT class="docutils literal">del</TT> keyword:</P>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex39_pycon.py-idio-pycon-pyg.html-1></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>del</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'city'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-2></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>del</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>1</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-3></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=k>del</SPAN> <SPAN class=n>stuff</SPAN><SPAN class=p>[</SPAN><SPAN class=mi>2</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-4></A><SPAN class=gp>&gt;&gt;&gt; </SPAN><SPAN class=n>stuff</SPAN>
<A name=python--ex39_pycon.py-idio-pycon-pyg.html-5></A><SPAN class=go>{'name': 'Zed', 'age': 39, 'height': 74}</SPAN>
</PRE></DIV>
<DIV id=a-dictionary-example class=section>
<H1>A Dictionary Example</H1>
<P id=p8>We'll now do an exercise that you <EM>must</EM> study very carefully. I want you to type this code in and try to understand what's going on. Take note of when you put things in a dict, get from a hash, and all the operations you use. Notice how this example is mapping states to their abbreviations, and then the abbreviations to cities in the states. Remember, "mapping" or "associating" is the key concept in a dictionary.</P>
<TABLE class=highlighttable>
<TBODY>
<TR></TR></TBODY></TABLE></DIV>
<DIV id=a-dictionary-example class=section>
<TABLE class=highlighttable>
<TBODY>
<TR>
<TD class=code>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex39.py-idio.html-1></A><SPAN class=c1># create a mapping of state to abbreviation</SPAN>
<A name=python--ex39.py-idio.html-2></A><SPAN class=n>states</SPAN> <SPAN class=o>=</SPAN> <SPAN class=p>{</SPAN>
<A name=python--ex39.py-idio.html-3></A>    <SPAN class=s1>'Oregon'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'OR'</SPAN><SPAN class=p>,</SPAN>
<A name=python--ex39.py-idio.html-4></A>    <SPAN class=s1>'Florida'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'FL'</SPAN><SPAN class=p>,</SPAN>
<A name=python--ex39.py-idio.html-5></A>    <SPAN class=s1>'California'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'CA'</SPAN><SPAN class=p>,</SPAN>
<A name=python--ex39.py-idio.html-6></A>    <SPAN class=s1>'New York'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'NY'</SPAN><SPAN class=p>,</SPAN>
<A name=python--ex39.py-idio.html-7></A>    <SPAN class=s1>'Michigan'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'MI'</SPAN>
<A name=python--ex39.py-idio.html-8></A><SPAN class=p>}</SPAN>
<A name=python--ex39.py-idio.html-9></A>
<A name=python--ex39.py-idio.html-10></A><SPAN class=c1># create a basic set of states and some cities in them</SPAN>
<A name=python--ex39.py-idio.html-11></A><SPAN class=n>cities</SPAN> <SPAN class=o>=</SPAN> <SPAN class=p>{</SPAN>
<A name=python--ex39.py-idio.html-12></A>    <SPAN class=s1>'CA'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'San Francisco'</SPAN><SPAN class=p>,</SPAN>
<A name=python--ex39.py-idio.html-13></A>    <SPAN class=s1>'MI'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'Detroit'</SPAN><SPAN class=p>,</SPAN>
<A name=python--ex39.py-idio.html-14></A>    <SPAN class=s1>'FL'</SPAN><SPAN class=p>:</SPAN> <SPAN class=s1>'Jacksonville'</SPAN>
<A name=python--ex39.py-idio.html-15></A><SPAN class=p>}</SPAN>
<A name=python--ex39.py-idio.html-16></A>
<A name=python--ex39.py-idio.html-17></A><SPAN class=c1># add some more cities</SPAN>
<A name=python--ex39.py-idio.html-18></A><SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'NY'</SPAN><SPAN class=p>]</SPAN> <SPAN class=o>=</SPAN> <SPAN class=s1>'New York'</SPAN>
<A name=python--ex39.py-idio.html-19></A><SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'OR'</SPAN><SPAN class=p>]</SPAN> <SPAN class=o>=</SPAN> <SPAN class=s1>'Portland'</SPAN>
<A name=python--ex39.py-idio.html-20></A>
<A name=python--ex39.py-idio.html-21></A><SPAN class=c1># print out some cities</SPAN>
<A name=python--ex39.py-idio.html-22></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-23></A><SPAN class=k>print</SPAN> <SPAN class=s2>"NY State has: "</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'NY'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39.py-idio.html-24></A><SPAN class=k>print</SPAN> <SPAN class=s2>"OR State has: "</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'OR'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39.py-idio.html-25></A>
<A name=python--ex39.py-idio.html-26></A><SPAN class=c1># print some states</SPAN>
<A name=python--ex39.py-idio.html-27></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-28></A><SPAN class=k>print</SPAN> <SPAN class=s2>"Michigan's abbreviation is: "</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>states</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'Michigan'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39.py-idio.html-29></A><SPAN class=k>print</SPAN> <SPAN class=s2>"Florida's abbreviation is: "</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>states</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'Florida'</SPAN><SPAN class=p>]</SPAN>
<A name=python--ex39.py-idio.html-30></A>
<A name=python--ex39.py-idio.html-31></A><SPAN class=c1># do it by using the state then cities dict</SPAN>
<A name=python--ex39.py-idio.html-32></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-33></A><SPAN class=k>print</SPAN> <SPAN class=s2>"Michigan has: "</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=n>states</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'Michigan'</SPAN><SPAN class=p>]]</SPAN>
<A name=python--ex39.py-idio.html-34></A><SPAN class=k>print</SPAN> <SPAN class=s2>"Florida has: "</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=n>states</SPAN><SPAN class=p>[</SPAN><SPAN class=s1>'Florida'</SPAN><SPAN class=p>]]</SPAN>
<A name=python--ex39.py-idio.html-35></A>
<A name=python--ex39.py-idio.html-36></A><SPAN class=c1># print every state abbreviation</SPAN>
<A name=python--ex39.py-idio.html-37></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-38></A><SPAN class=k>for</SPAN> <SPAN class=n>state</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>abbrev</SPAN> <SPAN class=ow>in</SPAN> <SPAN class=n>states</SPAN><SPAN class=o>.</SPAN><SPAN class=n>items</SPAN><SPAN class=p>():</SPAN>
<A name=python--ex39.py-idio.html-39></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"</SPAN><SPAN class=si>%s</SPAN><SPAN class=s2> is abbreviated </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2>"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>state</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>abbrev</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex39.py-idio.html-40></A>
<A name=python--ex39.py-idio.html-41></A><SPAN class=c1># print every city in state</SPAN>
<A name=python--ex39.py-idio.html-42></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-43></A><SPAN class=k>for</SPAN> <SPAN class=n>abbrev</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>city</SPAN> <SPAN class=ow>in</SPAN> <SPAN class=n>cities</SPAN><SPAN class=o>.</SPAN><SPAN class=n>items</SPAN><SPAN class=p>():</SPAN>
<A name=python--ex39.py-idio.html-44></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"</SPAN><SPAN class=si>%s</SPAN><SPAN class=s2> has the city </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2>"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>abbrev</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>city</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex39.py-idio.html-45></A>
<A name=python--ex39.py-idio.html-46></A><SPAN class=c1># now do both at the same time</SPAN>
<A name=python--ex39.py-idio.html-47></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-48></A><SPAN class=k>for</SPAN> <SPAN class=n>state</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>abbrev</SPAN> <SPAN class=ow>in</SPAN> <SPAN class=n>states</SPAN><SPAN class=o>.</SPAN><SPAN class=n>items</SPAN><SPAN class=p>():</SPAN>
<A name=python--ex39.py-idio.html-49></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"</SPAN><SPAN class=si>%s</SPAN><SPAN class=s2> state is abbreviated </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2> and has city </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2>"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=p>(</SPAN>
<A name=python--ex39.py-idio.html-50></A>        <SPAN class=n>state</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>abbrev</SPAN><SPAN class=p>,</SPAN> <SPAN class=n>cities</SPAN><SPAN class=p>[</SPAN><SPAN class=n>abbrev</SPAN><SPAN class=p>])</SPAN>
<A name=python--ex39.py-idio.html-51></A>
<A name=python--ex39.py-idio.html-52></A><SPAN class=k>print</SPAN> <SPAN class=s1>'-'</SPAN> <SPAN class=o>*</SPAN> <SPAN class=mi>10</SPAN>
<A name=python--ex39.py-idio.html-53></A><SPAN class=c1># safely get a abbreviation by state that might not be there</SPAN>
<A name=python--ex39.py-idio.html-54></A><SPAN class=n>state</SPAN> <SPAN class=o>=</SPAN> <SPAN class=n>states</SPAN><SPAN class=o>.</SPAN><SPAN class=n>get</SPAN><SPAN class=p>(</SPAN><SPAN class=s1>'Texas'</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex39.py-idio.html-55></A>
<A name=python--ex39.py-idio.html-56></A><SPAN class=k>if</SPAN> <SPAN class=ow>not</SPAN> <SPAN class=n>state</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex39.py-idio.html-57></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"Sorry, no Texas."</SPAN>
<A name=python--ex39.py-idio.html-58></A>
<A name=python--ex39.py-idio.html-59></A><SPAN class=c1># get a city with a default value</SPAN>
<A name=python--ex39.py-idio.html-60></A><SPAN class=n>city</SPAN> <SPAN class=o>=</SPAN> <SPAN class=n>cities</SPAN><SPAN class=o>.</SPAN><SPAN class=n>get</SPAN><SPAN class=p>(</SPAN><SPAN class=s1>'TX'</SPAN><SPAN class=p>,</SPAN> <SPAN class=s1>'Does Not Exist'</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex39.py-idio.html-61></A><SPAN class=k>print</SPAN> <SPAN class=s2>"The city for the state 'TX' is: </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2>"</SPAN> <SPAN class=o>%</SPAN> <SPAN class=n>city</SPAN>
</PRE></DIV></TD></TR></TBODY></TABLE></DIV>
<DIV id=what-you-should-see class=section>
<H1>What You Should See</H1>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex39.sh-idio-shint-pyg.html-1></A><SPAN class=gp>$</SPAN> python ex39.py
<A name=python--ex39.sh-idio-shint-pyg.html-2></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-3></A><SPAN class=go>NY State has:  New York</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-4></A><SPAN class=go>OR State has:  Portland</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-5></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-6></A><SPAN class=go>Michigan's abbreviation is:  MI</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-7></A><SPAN class=go>Florida's abbreviation is:  FL</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-8></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-9></A><SPAN class=go>Michigan has:  Detroit</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-10></A><SPAN class=go>Florida has:  Jacksonville</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-11></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-12></A><SPAN class=go>California is abbreviated CA</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-13></A><SPAN class=go>Michigan is abbreviated MI</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-14></A><SPAN class=go>New York is abbreviated NY</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-15></A><SPAN class=go>Florida is abbreviated FL</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-16></A><SPAN class=go>Oregon is abbreviated OR</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-17></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-18></A><SPAN class=go>FL has the city Jacksonville</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-19></A><SPAN class=go>CA has the city San Francisco</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-20></A><SPAN class=go>MI has the city Detroit</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-21></A><SPAN class=go>OR has the city Portland</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-22></A><SPAN class=go>NY has the city New York</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-23></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-24></A><SPAN class=go>California state is abbreviated CA and has city San Francisco</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-25></A><SPAN class=go>Michigan state is abbreviated MI and has city Detroit</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-26></A><SPAN class=go>New York state is abbreviated NY and has city New York</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-27></A><SPAN class=go>Florida state is abbreviated FL and has city Jacksonville</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-28></A><SPAN class=go>Oregon state is abbreviated OR and has city Portland</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-29></A><SPAN class=go>----------</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-30></A><SPAN class=go>Sorry, no Texas.</SPAN>
<A name=python--ex39.sh-idio-shint-pyg.html-31></A><SPAN class=go>The city for the state 'TX' is: Does Not Exist</SPAN>
</PRE></DIV></DIV>
<DIV id=what-dictionaries-can-do class=section>
<H1>What Dictionaries Can Do</H1>
<P id=p9>Dictionaries are another example of a data structure, and like lists they are one of the most commonly used data structures in programming. A dictionary is used to <EM>map</EM> or <EM>associate</EM> things you want to store to keys you need to get them. Again, programmers don't use a term like "dictionary" for something that doesn't work like an actual dictionary full of words, so let's use that as our real world example.</P>
<P id=p10>Let's say you want to find out what the word "Honorificabilitudinitatibus" means. Today you would simply copy-paste that word into a search engine and then find out the answer, and we could say a search engine is like a really huge super complex version of the <EM>Oxford English Dictionary</EM> (OED). Before search engines what you would do is this:</P>
<OL class="arabic simple">
<LI>Go to your library and get "the dictionary". Let's say it's the OED.</LI>
<LI>You know "honorificabilitudinitatibus" starts with the letter 'H' so you look on the side of the book for the little tab that has 'H' on it.</LI>
<LI>Then you'd skim the pages until you are close to where "hon" started.</LI>
<LI>Then you'd skim a few more pages until you found "honorificabilitudinitatibus" or hit the beginning of the "hp" words and realize this word isn't in the OED.</LI>
<LI>Once you found the entry, you'd read the definition to figure out what it means.</LI></OL>
<P id=p11>This process is nearly exactly the way a dict works, and you are basically "mapping" the word "honorificabilitudinitatibus" to its definition. A dict in Python is just like a dictionary in the real world like the OED.</P></DIV>
<DIV id=study-drills class=section>
<H1>Study Drills</H1>
<OL class="arabic simple">
<LI>Do this same kind of mapping with cities and states/regions in your country or some other country.</LI>
<LI>Find the Python documentation for dictionaries and try to do even more things to them.</LI>
<LI>Find out what you <EM>can't</EM> do with dictionaries. A big one is that they do not have order, so try playing with that.</LI></OL></DIV>
<DIV id=common-student-questions class=section>
<H1>Common Student Questions</H1>
<DL class=docutils>
<DT>What is the difference between a list and a dictionary?</DT>
<DD>A list is for an ordered list of items. A dictionary (or <TT class="docutils literal">dict</TT>) is for matching some items (called "keys") to other items (called "values").</DD>
<DT>What would I use a dictionary for?</DT>
<DD>When you have to take one value and "look up" another value. In fact you could call dictionaries "look up tables."</DD>
<DT>What would I use a list for?</DT>
<DD>Use a list for any sequence of things that need to be in order, and you only need to look them up by a numeric index.</DD>
<DT>What if I need a dictionary, but I need it to be in order?</DT>
<DD>Take a look at the <TT class="docutils literal">collections.OrderedDict</TT> data structure in Python. Search for it online to find the documentation.</DD></DL></DIV>