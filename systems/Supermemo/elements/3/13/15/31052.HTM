D2.2.146 <FONT class=extract>MMFSR, MemManage Fault Status Register</FONT> 
<P></P>
<P><FONT class=extract>The MMFSR characteristics are:<BR>Purpose: Shows the status of MPU faults.<BR>Usage constraints: Privileged access permitted only. Unprivileged accesses generate a BusFault.<BR>&nbsp; If the Main Extension is implemented, this register is word, halfword, and byte accessible.<BR>&nbsp; If the Main Extension is not implemented, this register is word accessible only, halfword and byte accesses are UNPREDICTABLE.<BR>Configurations: Present only if the Main Extension is implemented.<BR>&nbsp; This register is RES0 if the Main Extension is not implemented.<BR>Attributes: 8-bit read/write-one-to-clear register located at 0xE000ED28.<BR>&nbsp; Secure software can access the Non-secure view of this register via MMFSR_NS located at 0xE002ED28. The location 0xE002ED28 is RES0 to software executing in Non-secure state and the debugger.<BR>&nbsp; This register is banked between Security states.<BR>&nbsp; This register is part of CFSR.</FONT></P>
<P><FONT class=extract>MMARVALID, bit [7]<BR>MMFAR valid flag. Indicates validity of the MMFAR register.<BR>The possible values of this bit are:<BR>0 MMFAR content not valid.<BR>1 MMFAR content valid.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P>Bit [6]<BR>Reserved, RES0.</P>
<P><FONT class=extract>MLSPERR, bit [5]<BR>MemManage lazy state preservation error flag. Records whether a MemManage fault occurred during FP lazy state preservation.<BR>The possible values of this bit are:<BR>0 No MemManage occurred.<BR>1 MemManage occurred.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P><FONT class=extract>MSTKERR, bit [4]<BR>MemManage stacking error flag. Records whether a derived MemManage fault occurred during exception entry stacking.<BR>The possible values of this bit are:<BR>0 No derived MemManage occurred.<BR>1 Derived MemManage occurred during exception entry.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P><FONT class=extract>MUNSTKERR, bit [3]<BR>MemManage unstacking error flag. Records whether a derived MemManage fault occurred during exception return unstacking.<BR>The possible values of this bit are:<BR>0 No derived MemManage fault occurred.<BR>1 Derived MemManage fault occurred during exception return.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P>Bit [2]<BR>Reserved, RES0.</P>
<P><FONT class=extract>DACCVIOL, bit [1]<BR>Data access violation flag. Records whether a data access violation has occurred.<BR>The possible values of this bit are:<BR>0 No MemManage fault on data access has occurred.<BR>1 MemManage fault on data access has occurred.<BR>A DACCVIOL will be accompanied by an MMFAR update.<BR>This bit resets to zero on a Warm reset.</FONT></P>
<P><FONT class=extract>IACCVIOL, bit [0]<BR>Instruction access violation. Records whether an instruction related memory access violation has occurred.<BR>The possible values of this bit are:<BR>0 No MemManage fault on instruction access has occurred.<BR>1 MemManage fault on instruction access has occurred.<BR>An IACCVIOL is only recorded if a faulted instruction is executed.<BR>This bit resets to zero on a Warm reset.</FONT>