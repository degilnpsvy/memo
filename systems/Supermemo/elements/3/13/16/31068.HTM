B4.18 Function returns from Non-secure state</P>
<P>RHPFG A function return from Non-secure state begins when one of the following instructions loads a FNC_RETURN value into the PC:<BR>&nbsp; &#8226; A POP or LDM that includes loading the PC.<BR>&nbsp; &#8226; An LDR with the PC as a destination.<BR>&nbsp; &#8226; A BX with any register.<BR>On detecting a FNC_RETURN value in the PC:<BR>&nbsp; &#8226; The stack is unstacked.<BR>&nbsp; &#8226; EPSR.IT is set to 0b00.<BR>&nbsp; &#8226; The following integrity checks on function return are performed:<BR>&nbsp;&nbsp;&nbsp; &#8213; A check that IPSR is zero or 1 before the value of it is restored.<BR>&nbsp;&nbsp;&nbsp; &#8213; A check that if the return is to Thread mode, the stacked IPSR value is zero.<BR>&nbsp;&nbsp;&nbsp; &#8213; A check that if the return is to Handler mode, the stacked IPSR value is nonzero.<BR>RDWTF The FNC_RETURN value is:<BR>&nbsp; 1111 1110 1111 1111 1111 1111 1111 111S<BR>&nbsp; Bits[31:1] This is what identifies the value as a FNC_RETURN value.<BR>&nbsp; Bit[0], S The function call was from:<BR>&nbsp;&nbsp;&nbsp; 0 Secure state.<BR>&nbsp;&nbsp;&nbsp; 1 Non-secure state.<BR>RUKFL Any failed integrity check on function return generates:<BR>&nbsp; In a PE with the Main Extension:<BR>&nbsp;&nbsp;&nbsp; An INVPC UsageFault that is synchronous to the instruction that loaded the FNC_RETURN value into the PC.<BR>&nbsp; Otherwise:<BR>&nbsp;&nbsp;&nbsp; A Secure HardFault that is synchronous to the instruction that loaded the FNC_RETURN value into the PC.<BR>RLDVW When the stack is unstacked on detecting a FNC_RETURN value in the PC, if ReturnAddress[0] is 0, the PE generates an INVSTATE UsageFault.