B4.21 Exception entry, register clearing after context stacking</P>
<P>RDRRB In a PE without the Security Extension and without the Floating-point Extension, the PE hardware sets R0-R3, R12, APSR, and EPSR to an UNKNOWN value after it has pushed state context to the stack.<BR>RDJRX In a PE without the Security Extension but with the Floating-point Extension:<BR>&nbsp; &#8226; The PE hardware sets R0-R3, R12, APSR, and EPSR to an UNKNOWN value after it has pushed state context to the stack.<BR>&nbsp; &#8226; The PE hardware sets S0-S15 and the FPSCR to an UNKNOWN value after it has pushed FP context to the stack.<BR>RSNDB In a PE with the Security Extension but without the Floating-point Extension, after the PE hardware has pushed state context to the stack, it sets R0-R3, R12, APSR, and EPSR to:<BR>&nbsp; &#8226; An UNKNOWN value if the exception is taken to Secure state.<BR>&nbsp; &#8226; Zero if the exception is taken to Non-secure state.<BR>If the PE did not also push additional state context to the stack, as indicated by EXC_RETURN.DCRS, the values of R4-R11 remain unchanged.<BR>If the PE also pushed additional state context to the stack, as indicated by EXC_RETURN.DCRS, then afterwards:<BR>&nbsp; &#8226; If the Background Security state is Non-secure, R4-R11 remain unchanged.<BR>&nbsp; &#8226; If the Background Security state is Secure, the PE sets R4-R11 to:<BR>&nbsp;&nbsp;&nbsp; &#8213; An UNKNOWN value if the exception is taken to Secure state.<BR>&nbsp;&nbsp;&nbsp; &#8213; Zero if the exception is taken to Non-secure state.<BR>RJWBK In a PE with the Security Extension and Floating-point Extension, register clearing behavior after context stacking is as follows:<BR>State context and additional state context<BR>&nbsp; Register clearing behavior is the same as for a PE with the Security Extension but without the Floating-point Extension.<BR>FP context and additional FP context<BR>&nbsp; &#8226; If FPCCR_S.TS is 0 when the FP context is pushed to the stack, S0-S15 and the FPSCR are set to an UNKNOWN value after stacking.<BR>&nbsp; &#8226; If FPCCR_S.TS is 1 when the FP context and additional FP context are both pushed to the stack, S0-S31 and the FPSCR are set to zero after stacking.<BR>&nbsp; In both cases, CONTROL.FPCA is set to 0 to indicate that the Floating-point Extension is not active.<BR>&nbsp; <BR>See also:<BR>&#8226; Exception entry, context stacking on page B4-64.<BR>&#8226; Tail-chaining on page B4-79.