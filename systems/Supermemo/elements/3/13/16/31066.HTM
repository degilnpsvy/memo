B4.16 Security state transitions 
<P></P>
<P>RPQHT <FONT class=extract>For a branch to an address in the other Security state, the following table shows when the PE changes Security state:</FONT></P>
<P><FONT class=extract>Current Security state -&gt; Security attribute of the branch target address: Security state change</FONT></P>
<P><FONT class=extract>Secure -&gt; Non-secure:<BR>Change to Non-secure state if the branch was an interstating branch instruction, BXNS or BLXNS, with the lsb of its target address set to 0.<BR>Otherwise:<BR>&#8226; In a PE with the Main Extension, an INVTRAN SecureFault is generated.<BR>&#8226; In a PE without the Main Extension, a Secure HardFault is generated.</FONT></P>
<P><FONT class=extract>Non-secure -&gt; Secure and Non-secure callable:<BR>Change to Secure state if both:<BR>&#8226; The branch target address contains an SG instruction.<BR>&#8226; The whole of the instruction at the branch target address is flagged as Secure and Non-secure callable.<BR>Otherwise:<BR>&#8226; In a PE with the Main Extension, an INVEP SecureFault is generated.<BR>&#8226; In a PE without the Main Extension, a Secure HardFault is generated.</FONT></P>
<P><FONT class=extract>Non-secure -&gt; Secure and not Non-secure callable:<BR>In a PE with the Main Extension, an INVEP SecureFault is generated.<BR>In a PE without the Main Extension, a Secure Hardfault is generated.</FONT></P>
<P>IKWMP <FONT class=extract>SG instructions in Secure memory are valid entry points to Secure code. They prevent Non-secure code from being able to jump to arbitrary addresses in Secure code.</FONT><BR>IWJRL <FONT class=extract>When an interstating branch is executed in Secure state, the lsb of the target address indicates the target Security state:<BR>&nbsp; 1 The target Security state is Secure.<BR>&nbsp; 0 The target Security state is Non-secure.<BR>&nbsp; Interstating branches are UNDEFINED in Non-secure state.</FONT><BR>RXNVW <FONT class=extract>If sequential instruction execution crosses from Non-secure memory to Secure memory, then if the Secure memory entry point contains an SG instruction and the whole of the instruction at the Secure memory entry point is flagged as Secure and Non-secure callable, it is CONSTRAINED UNPREDICTABLE whether:<BR>&nbsp; &#8226; The PE changes to Secure state.<BR>&nbsp; &#8226; A fault is generated:<BR>&nbsp;&nbsp;&nbsp; &#8213; An INVEP SecureFault in a PE with the Main Extension.<BR>&nbsp;&nbsp;&nbsp; &#8213; A Secure HardFault in a PE without the Main Extension.<BR></FONT>RDWXH <FONT class=extract>When an exception is taken to the other Security state, the PE automatically transitions to that other Security state.</FONT>