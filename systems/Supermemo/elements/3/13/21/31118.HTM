D2.2.77 <FONT class=extract>EXC_RETURN, Exception Return Payload</FONT> 
<P></P>
<P>The EXC_RETURN characteristics are:<BR>Purpose: Value provided in LR on entry to an exception, and used with a BX or load to PC to perform an exception return.<BR>Usage constraints: None.<BR>Configurations: All.<BR>Attributes: 32-bit payload.</P>
<P>The EXC_RETURN bit assignments are:<BR>PREFIX, bits [31:24]<BR>Prefix. Indicates that this is an EXC_RETURN value.<BR>This field reads as 0b11111111.</P>
<P>Bits [23:7]<BR>Reserved, RES1.</P>
<P>S, bit [6]<BR>Secure or Non-secure stack. Indicates whether a Secure or Non-secure stack is used to restore stack frame on exception return.<BR>The possible values of this bit are:<BR>0 Non-secure stack used.<BR>1 Secure stack used.</P>
<P><FONT class=extract>DCRS, bit [5]<BR>Default callee register stacking. Indicates whether the default stacking rules apply, or whether the<BR>callee registers are already on the stack.<BR>The possible values of this bit are:<BR>0 Stacking of the callee saved registers skipped.<BR>1 Default rules for stacking the callee registers followed.</FONT></P>
<P>FType, bit [4]<BR>Stack frame type. Indicates whether the stack frame is a standard integer only stack frame, or an<BR>extended floating-point stack frame.<BR>The possible values of this bit are:<BR>0 Extended stack frame.<BR>1 Standard stack frame.</P>
<P>Mode, bit [3]<BR>Mode. Indicates the Mode that was stacked from.<BR>The possible values of this bit are:<BR>0 Handler mode.<BR>1 Thread mode.</P>
<P>SPSEL, bit [2]<BR>Stack pointer selection. Indicates which stack pointer the exception frame resides on.<BR>The possible values of this bit are:<BR>0 Main stack pointer.<BR>1 Process stack pointer.</P>
<P>Bit [1]<BR>Reserved, RES0.</P>
<P>ES, bit [0]<BR>Exception Secure. The security domain the exception was taken to.<BR>The possible values of this bit are:<BR>0 Non-secure.<BR>1 Secure.