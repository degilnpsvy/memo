<H1 class=title>Exercise 31: Making Decisions</H1>
<P id=p1>In the first half of this book you mostly just printed out things called functions, but everything was basically in a straight line. Your scripts ran starting at the top and went to the bottom where they ended. If you made a function you could run that function later, but it still didn't have the kind of branching you need to really make decisions. Now that you have <TT class="docutils literal">if</TT>, <TT class="docutils literal">else</TT>, and <TT class="docutils literal">elif</TT> you can start to make scripts that decide things.</P>
<P id=p2>In the last script you wrote out a simple set of tests asking some questions. In this script you will ask the user questions and make decisions based on their answers. Write this script, and then play with it quite a lot to figure it out.</P>
<TABLE class=highlighttable>
<TBODY>
<TR></TR></TBODY></TABLE>
<TABLE class=highlighttable>
<TBODY>
<TR>
<TD class=code>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex31.py-idio.html-1></A><SPAN class=k>print</SPAN> <SPAN class=s2>"You enter a dark room with two doors.  Do you go through door #1 or door #2?"</SPAN>
<A name=python--ex31.py-idio.html-2></A>
<A name=python--ex31.py-idio.html-3></A><SPAN class=n>door</SPAN> <SPAN class=o>=</SPAN> <SPAN class=nb>raw_input</SPAN><SPAN class=p>(</SPAN><SPAN class=s2>"&gt; "</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex31.py-idio.html-4></A>
<A name=python--ex31.py-idio.html-5></A><SPAN class=k>if</SPAN> <SPAN class=n>door</SPAN> <SPAN class=o>==</SPAN> <SPAN class=s2>"1"</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-6></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"There's a giant bear here eating a cheese cake.  What do you do?"</SPAN>
<A name=python--ex31.py-idio.html-7></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"1. Take the cake."</SPAN>
<A name=python--ex31.py-idio.html-8></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"2. Scream at the bear."</SPAN>
<A name=python--ex31.py-idio.html-9></A>
<A name=python--ex31.py-idio.html-10></A>    <SPAN class=n>bear</SPAN> <SPAN class=o>=</SPAN> <SPAN class=nb>raw_input</SPAN><SPAN class=p>(</SPAN><SPAN class=s2>"&gt; "</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex31.py-idio.html-11></A>
<A name=python--ex31.py-idio.html-12></A>    <SPAN class=k>if</SPAN> <SPAN class=n>bear</SPAN> <SPAN class=o>==</SPAN> <SPAN class=s2>"1"</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-13></A>        <SPAN class=k>print</SPAN> <SPAN class=s2>"The bear eats your face off.  Good job!"</SPAN>
<A name=python--ex31.py-idio.html-14></A>    <SPAN class=k>elif</SPAN> <SPAN class=n>bear</SPAN> <SPAN class=o>==</SPAN> <SPAN class=s2>"2"</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-15></A>        <SPAN class=k>print</SPAN> <SPAN class=s2>"The bear eats your legs off.  Good job!"</SPAN>
<A name=python--ex31.py-idio.html-16></A>    <SPAN class=k>else</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-17></A>        <SPAN class=k>print</SPAN> <SPAN class=s2>"Well, doing </SPAN><SPAN class=si>%s</SPAN><SPAN class=s2> is probably better.  Bear runs away."</SPAN> <SPAN class=o>%</SPAN> <SPAN class=n>bear</SPAN>
<A name=python--ex31.py-idio.html-18></A>
<A name=python--ex31.py-idio.html-19></A><SPAN class=k>elif</SPAN> <SPAN class=n>door</SPAN> <SPAN class=o>==</SPAN> <SPAN class=s2>"2"</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-20></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"You stare into the endless abyss at Cthulhu's retina."</SPAN>
<A name=python--ex31.py-idio.html-21></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"1. Blueberries."</SPAN>
<A name=python--ex31.py-idio.html-22></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"2. Yellow jacket clothespins."</SPAN>
<A name=python--ex31.py-idio.html-23></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"3. Understanding revolvers yelling melodies."</SPAN>
<A name=python--ex31.py-idio.html-24></A>
<A name=python--ex31.py-idio.html-25></A>    <SPAN class=n>insanity</SPAN> <SPAN class=o>=</SPAN> <SPAN class=nb>raw_input</SPAN><SPAN class=p>(</SPAN><SPAN class=s2>"&gt; "</SPAN><SPAN class=p>)</SPAN>
<A name=python--ex31.py-idio.html-26></A>
<A name=python--ex31.py-idio.html-27></A>    <SPAN class=k>if</SPAN> <SPAN class=n>insanity</SPAN> <SPAN class=o>==</SPAN> <SPAN class=s2>"1"</SPAN> <SPAN class=ow>or</SPAN> <SPAN class=n>insanity</SPAN> <SPAN class=o>==</SPAN> <SPAN class=s2>"2"</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-28></A>        <SPAN class=k>print</SPAN> <SPAN class=s2>"Your body survives powered by a mind of jello.  Good job!"</SPAN>
<A name=python--ex31.py-idio.html-29></A>    <SPAN class=k>else</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-30></A>        <SPAN class=k>print</SPAN> <SPAN class=s2>"The insanity rots your eyes into a pool of muck.  Good job!"</SPAN>
<A name=python--ex31.py-idio.html-31></A>
<A name=python--ex31.py-idio.html-32></A><SPAN class=k>else</SPAN><SPAN class=p>:</SPAN>
<A name=python--ex31.py-idio.html-33></A>    <SPAN class=k>print</SPAN> <SPAN class=s2>"You stumble around and fall on a knife and die.  Good job!"</SPAN>
</PRE></DIV></TD></TR></TBODY></TABLE>
<P id=p3>A key point here is that you are now putting the <TT class="docutils literal"><SPAN class=pre>if-statements</SPAN></TT> <EM>inside</EM> <TT class="docutils literal"><SPAN class=pre>if-statements</SPAN></TT> as code that can run. This is very powerful and can be used to create "nested" decisions, where one branch leads to another and another.</P>
<P id=p4>Make sure you understand this concept of if-statements inside if-statements. In fact, do the Study Drills to really nail it.</P>
<DIV id=what-you-should-see class=section>
<H1>What You Should See</H1>
<P id=p5>Here is me playing this little adventure game. I do not do so well.</P>
<DIV class=highlight><PRE><SPAN></SPAN><A name=python--ex31.sh-idio-shint-pyg.html-1></A><SPAN class=gp>$</SPAN> python ex31.py
<A name=python--ex31.sh-idio-shint-pyg.html-2></A><SPAN class=go>You enter a dark room with two doors.  Do you go through door #1 or door #2?</SPAN>
<A name=python--ex31.sh-idio-shint-pyg.html-3></A><SPAN class=gp>&gt;</SPAN>  1
<A name=python--ex31.sh-idio-shint-pyg.html-4></A><SPAN class=go>There's a giant bear here eating a cheese cake.  What do you do?</SPAN>
<A name=python--ex31.sh-idio-shint-pyg.html-5></A><SPAN class=go>1. Take the cake.</SPAN>
<A name=python--ex31.sh-idio-shint-pyg.html-6></A><SPAN class=go>2. Scream at the bear.</SPAN>
<A name=python--ex31.sh-idio-shint-pyg.html-7></A><SPAN class=gp>&gt;</SPAN>  2
<A name=python--ex31.sh-idio-shint-pyg.html-8></A><SPAN class=go>The bear eats your legs off.  Good job!</SPAN>
</PRE></DIV></DIV>
<DIV id=study-drills class=section>
<H1>Study Drills</H1>
<OL class="arabic simple">
<LI>Make new parts of the game and change what decisions people can make. Expand the game out as much as you can before it gets ridiculous. 
<LI>Write a completely new game. Maybe you don't like this one, so make your own. This is your computer, do what you want.</LI></OL></DIV>
<DIV id=common-student-questions class=section>
<H1>Common Student Questions</H1>
<DL class=docutils>
<DT>Can you replace <TT class="docutils literal">elif</TT> with a sequence of <TT class="docutils literal"><SPAN class=pre>if-else</SPAN></TT> combinations? 
<DD>You can in some situations, but it depends on how each <TT class="docutils literal">if/else</TT> is written. It also means that Python will check <EM>every</EM> <TT class="docutils literal"><SPAN class=pre>if-else</SPAN></TT> combination, rather than just the first false ones like it would with <TT class="docutils literal"><SPAN class=pre>if-elif-else</SPAN></TT>. Try to make some of these to figure out the differences. 
<DT>How do I tell if a number is between a range of numbers? 
<DD>You have two options: Use <TT class="docutils literal">0 &lt; x &lt; 10</TT> or <TT class="docutils literal">1 &lt;= x &lt; 10</TT>, which is classic notation, or use <TT class="docutils literal">x in range(1, 10)</TT>. 
<DT>What if I wanted more options in the <TT class="docutils literal"><SPAN class=pre>if-elif-else</SPAN></TT> blocks? 
<DD>Add more <TT class="docutils literal">elif</TT> blocks for each possible choice.</DD></DL></DIV>