<H1 class=title>Next Steps</H1>
<P id=p1>You're not a programmer quite yet. I like to think of this book as giving you your "programming black belt." You know enough to start another book on programming and handle it just fine. This book should have given you the mental tools and attitude you need to go through most Python books and actually learn something. It might even make it easy.</P>
<P id=p2>I recommend you check out some of these projects and try to build something with them:</P>
<UL class=simple>
<LI><A class="reference external" href="http://learnrubythehardway.org/"><FONT color=#000080>Learn Ruby The Hard Way</FONT></A> You will learn even more about programming as you learn more programming languages, so try learning Ruby too.</LI>
<LI><A class="reference external" href="https://docs.djangoproject.com/en/1.4/intro/tutorial01/"><FONT color=#000080>The Django Tutorial</FONT></A> and try to build a web application with the <A class="reference external" href="https://www.djangoproject.com/"><FONT color=#000080>Django Web Framework</FONT></A>.</LI>
<LI><A class="reference external" href="http://www.scipy.org/"><FONT color=#000080>SciPy</FONT></A> if you're into science, math, and engineering and also <A class="reference external" href="http://dexy.it/"><FONT color=#000080>Dexy</FONT></A> for when you want to write awesome papers that incorporate SciPy or any code really.</LI>
<LI><A class="reference external" href="http://www.pygame.org/news.html"><FONT color=#000080>PyGame</FONT></A> and see if you can make a game with graphics and sound.</LI>
<LI><A class="reference external" href="http://pandas.pydata.org/"><FONT color=#000080>Pandas</FONT></A> for doing data manipulation and analysis.</LI>
<LI><A class="reference external" href="http://nltk.org/"><FONT color=#000080>Natural Language Tool Kit</FONT></A> for analyzing written text and writing things like spam filters and chat bots.</LI>
<LI><A class="reference external" href="http://docs.python-requests.org/en/latest/index.html"><FONT color=#000080>Requests</FONT></A> to learn the client side of HTTP and the web.</LI>
<LI><A class="reference external" href="http://simplecv.org/"><FONT color=#000080>SimpleCV</FONT></A> to play with making your computer see things in the real world.</LI>
<LI><A class="reference external" href="http://scrapy.org/"><FONT color=#000080>ScraPy</FONT></A> and try scraping some web sites to get information off them.</LI>
<LI><A class="reference external" href="https://www.panda3d.org/"><FONT color=#000080>Panda3D</FONT></A> for doing 3D graphic and games.</LI>
<LI><A class="reference external" href="http://kivy.org/"><FONT color=#000080>Kivy</FONT></A> for doing user interfaces on desktops and mobile platforms.</LI>
<LI><A class="reference external" href="http://scikit-learn.org/stable/"><FONT color=#000080>SciKit-Learn</FONT></A> for machine learning applications.</LI>
<LI><A class="reference external" href="http://renpy.org/"><FONT color=#000080>Ren'Py</FONT></A> for doing interactive fiction games, similar to what you've built in this book but with pictures.</LI>
<LI><A class="reference external" href="http://c.learncodethehardway.org/"><FONT color=#000080>Learn C The Hard Way</FONT></A> after you're familiar with Python and try learning C and algorithms with my other book. Take it slow; C is different but a very good thing to learn.</LI></UL>
<P id=p3>Pick one of the above resources, and go through any tutorials and documentation they have. As you go through documentation with code in it, <EM>type in all of the code</EM> and make it work. That's how I do it. That's how every programmer does it. Reading programming documentation is not enough to learn it; you have to do it. After you get through the tutorial and any other documentation they have, make something. Anything will do, even something someone else has already written. Just make something.</P>
<P id=p4>Just understand anything you write will probably suck. That's alright though I suck at every programming language I first start using. Nobody writes pure perfect gold when they're a beginner, and anyone who tells you they did is a huge liar.</P>
<DIV id=how-to-learn-any-programming-language class=section>
<H1>How to Learn Any Programming Language</H1>
<P id=p5>I'm going to teach you how to learn most of the programming languages you may want to learn in the future. The organization of this book is based on how I and many other programmers learn new languages. The process that I usually follow is:</P>
<OL class="arabic simple">
<LI>Get a book or some introductory text about the language.</LI>
<LI>Go through the book and type in all of the code making all of it run.</LI>
<LI>Read the book as you work on the code, taking notes.</LI>
<LI>Use the language to implement a small set of programs you are familiar with in another language.</LI>
<LI>Read other people's code in the language, and try to copy their patterns.</LI></OL>
<P id=p6>In this book, I forced you to go through this process very slowly and in small chunks. Other books aren't organized the same way and this means you have to extrapolate how I've made you do this to how their content is organized. Best way to do this is to read the book lightly and make a list of all the major code sections. Turn this list into a set of exercises based on the chapters and then simply do them in order one at a time.</P>
<P id=p7>The above process also works for new technologies, assuming they have books you can read. For anything without books, you do the above process but use online documentation or source code as your initial introduction.</P>
<P id=p8>Each new language you learn makes you a better programmer, and as you learn more they become easier to learn. By your third or fourth language you should be able to pick up similar languages in a week, with stranger languages taking longer. Now that you know Python you could potentially learn Ruby and JavaScript fairly quickly by comparison. This is simply because many languages share similar concepts and once you learn the concepts in one language they work in others.</P>
<P id=p9>The final thing to remember about learning a new language is: Don't be a stupid tourist. A stupid tourist is someone who goes to another country and then complains that the food isn't like the food at home. "Why can't I get a good burger in this stupid country!?" When you're learning a new language, assume that what it does isn't stupid, it's just different, and embrace it so you can learn it.</P>
<P id=p10>After you learn a language though, don't be a slave to that language's way of doing things. Sometimes the people who use a language actually do some very idiotic things for no other reason than "that's how we've always done it." If you like your style better and you know how everyone else does it, then feel free to break their rules if it improves things.</P>
<P id=p11>I really enjoy learning new programming languages. I think of myself as a "programmer anthropologist" and think of them as little insights about the group of programmers who use them. I'm learning a language they all use to talk to each other through computers and I find this fascinating. Then again I'm kind of a weird guy so just learn programming languages because you want to.</P>
<P id=p12>Enjoy! This is really fun stuff.</P></DIV>