<H3>GPOINTER_TO_INT()</H3><PRE class=programlisting>#define GPOINTER_TO_INT(p)&nbsp;((gint)  (glong) (p))
</PRE>
<P>Extracts an integer from a pointer. The integer must have been stored in the pointer with <A title=GINT_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS"><CODE class=function>GINT_TO_POINTER()</CODE></A>.</P>
<P>Remember, you may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</P>
<DIV class=refsect3><A name=id-1.3.5.6.3.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>p</P></TD>
<TD class=parameter_description>
<P>pointer containing an integer</P></TD></TR></TBODY></TABLE></DIV></DIV>