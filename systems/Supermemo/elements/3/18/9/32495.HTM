<DIV class=refsect2>
<H3>g_module_open&nbsp;()</H3><PRE class=programlisting><A title=GModule class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#GModule"><SPAN class=returnvalue>GModule</SPAN></A>&nbsp;*
g_module_open (<EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *file_name</CODE></EM>,
               <EM class=parameter><CODE><A title="enum GModuleFlags" class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#GModuleFlags"><SPAN class=type>GModuleFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Opens a module. If the module has already been opened, its reference count is incremented.</P>
<P>First of all <A title=g_module_open&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#g-module-open"><CODE class=function>g_module_open()</CODE></A> tries to open <EM class=parameter><CODE>file_name</CODE></EM> as a module. If that fails and <EM class=parameter><CODE>file_name</CODE></EM> has the ".la"-suffix (and is a libtool archive) it tries to open the corresponding module. If that fails and it doesn't have the proper module suffix for the platform (<A title=G_MODULE_SUFFIX class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#G-MODULE-SUFFIX:CAPS"><SPAN class=type>G_MODULE_SUFFIX</SPAN></A>), this suffix will be appended and the corresponding module will be opended. If that fails and <EM class=parameter><CODE>file_name</CODE></EM> doesn't have the ".la"-suffix, this suffix is appended and <A title=g_module_open&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#g-module-open"><CODE class=function>g_module_open()</CODE></A> tries to open the corresponding module. If eventually that fails as well, <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<DIV class=refsect3><A name=id-1.4.6.7.4.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>the name of the file containing the module, or <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to obtain a <A title=GModule class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#GModule"><SPAN class=type>GModule</SPAN></A> representing the main program itself. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>the flags used for opening the module. This can be the logical OR of any of the <A title="enum GModuleFlags" class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#GModuleFlags"><SPAN class=type>GModuleFlags</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.6.7.4.7></A>
<H4>Returns</H4>
<P>a <A title=GModule class=link href="https://developer.gnome.org/glib/stable/glib-Dynamic-Loading-of-Modules.html#GModule"><SPAN class=type>GModule</SPAN></A> on success, or <A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> on failure</P></DIV></DIV>