/* shifts/rotates */<BR>DEF(shl_i32, 1, 2, 0, 0)<BR>DEF(shr_i32, 1, 2, 0, 0)<BR>DEF(sar_i32, 1, 2, 0, 0)<BR>DEF(rotl_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_rot_i32))<BR>DEF(rotr_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_rot_i32))<BR>DEF(deposit_i32, 1, 2, 2, IMPL(TCG_TARGET_HAS_deposit_i32))</P>
<P>DEF(brcond_i32, 0, 2, 2, TCG_OPF_BB_END)</P>
<P>DEF(add2_i32, 2, 4, 0, IMPL(TCG_TARGET_HAS_add2_i32))<BR>DEF(sub2_i32, 2, 4, 0, IMPL(TCG_TARGET_HAS_sub2_i32))<BR>DEF(mulu2_i32, 2, 2, 0, IMPL(TCG_TARGET_HAS_mulu2_i32))<BR>DEF(muls2_i32, 2, 2, 0, IMPL(TCG_TARGET_HAS_muls2_i32))<BR>DEF(muluh_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_muluh_i32))<BR>DEF(mulsh_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_mulsh_i32))<BR>DEF(brcond2_i32, 0, 4, 2, TCG_OPF_BB_END | IMPL(TCG_TARGET_REG_BITS == 32))<BR>DEF(setcond2_i32, 1, 4, 1, IMPL(TCG_TARGET_REG_BITS == 32))</P>
<P>DEF(ext8s_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_ext8s_i32))<BR>DEF(ext16s_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_ext16s_i32))<BR>DEF(ext8u_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_ext8u_i32))<BR>DEF(ext16u_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_ext16u_i32))<BR>DEF(bswap16_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_bswap16_i32))<BR>DEF(bswap32_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_bswap32_i32))<BR>DEF(not_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_not_i32))<BR>DEF(neg_i32, 1, 1, 0, IMPL(TCG_TARGET_HAS_neg_i32))<BR>DEF(andc_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_andc_i32))<BR>DEF(orc_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_orc_i32))<BR>DEF(eqv_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_eqv_i32))<BR>DEF(nand_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_nand_i32))<BR>DEF(nor_i32, 1, 2, 0, IMPL(TCG_TARGET_HAS_nor_i32))</P>
<P>DEF(mov_i64, 1, 1, 0, TCG_OPF_64BIT | TCG_OPF_NOT_PRESENT)<BR>DEF(movi_i64, 1, 0, 1, TCG_OPF_64BIT | TCG_OPF_NOT_PRESENT)<BR>DEF(setcond_i64, 1, 2, 1, IMPL64)<BR>DEF(movcond_i64, 1, 4, 1, IMPL64 | IMPL(TCG_TARGET_HAS_movcond_i64))