<B><CODE class=systemitem>--disable-mem-pools</CODE> and <CODE class=systemitem>--enable-mem-pools</CODE>.&nbsp;</B> Many small chunks of memory are often allocated via collective pools in GLib and are cached after release to speed up reallocations. For sparse memory systems this behaviour is often inferior, so memory pools can be disabled to avoid excessive caching and force atomic maintenance of chunks through the <CODE class=function>g_malloc()</CODE> and <CODE class=function>g_free()</CODE> functions. Code currently affected by this: </P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P><SPAN class=structname>GMemChunk</SPAN>s become basically non-effective </P>
<LI class=listitem>
<P><SPAN class=structname>GSignal</SPAN> disables all caching (potentially very slow) </P>
<LI class=listitem>
<P><SPAN class=structname>GType</SPAN> doesn't honour the <SPAN class=structname>GTypeInfo</SPAN> <EM class=structfield><CODE>n_preallocs</CODE></EM> field anymore </P>
<LI class=listitem>
<P>the <SPAN class=structname>GBSearchArray</SPAN> flag <CODE class=literal>G_BSEARCH_ALIGN_POWER2</CODE> becomes non-functional </P></LI></UL></DIV>