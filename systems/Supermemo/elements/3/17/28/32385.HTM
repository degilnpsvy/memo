<H3>G_GINT64_FORMAT</H3><PRE class=programlisting>#define G_GINT64_FORMAT "li"
</PRE>
<P>This is the platform dependent conversion specifier for scanning and printing values of type <A title=gint64 class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A>. See also <A title=G_GINT16_FORMAT class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#G-GINT16-FORMAT:CAPS"><SPAN class=type>G_GINT16_FORMAT</SPAN></A>.</P>
<P>Some platforms do not support scanning and printing 64-bit integers, even though the types are supported. On such platforms <A title=G_GINT64_FORMAT class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#G-GINT64-FORMAT:CAPS"><CODE class=literal>G_GINT64_FORMAT</CODE></A> is not defined. Note that <CODE class=function>scanf()</CODE> may not support 64-bit integers, even if <A title=G_GINT64_FORMAT class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#G-GINT64-FORMAT:CAPS"><CODE class=literal>G_GINT64_FORMAT</CODE></A> is defined. Due to its weak error handling, <CODE class=function>scanf()</CODE> is not recommended for parsing anyway; consider using <A title=g_ascii_strtoull&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-ascii-strtoull"><CODE class=function>g_ascii_strtoull()</CODE></A> instead.