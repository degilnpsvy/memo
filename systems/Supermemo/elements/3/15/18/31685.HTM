B6.3 The global monitor 
<P></P>
<P>RFKFB For each PE in the system, the global monitor:<BR>&#8226; Can hold at least one marked block.<BR>&#8226; Maintains a state machine for each marked block it can hold.</P>
<P>RVDLP For each PE, the architecture only requires global monitor support for a single marked address. Any situation that might benefit from the use of multiple marked addresses on a single PE is CONSTRAINED UNPREDICTABLE.</P>
<P>RNNDC The global monitor can either reside in a block that is part of the hardware on which the PE executes or exist as a secondary monitor at the memory interfaces.</P>
<P>IXTLH The IMPLEMENTATION DEFINED aspects of the monitors mean that the global monitor and the local monitor can be combined into a single unit, provided that the unit performs the global monitor and the local monitor functions defined in this manual.</P>
<P>IKDWM For shareable memory locations, in some implementations and for some memory types, the properties of the global monitor require functionality outside the PE. Some system implementations might not implement this functionality for all locations of memory. In particular, this can apply to:<BR>&#8226; Any type of memory in the system implementation that does not support hardware cache coherency.<BR>&#8226; Non-cacheable memory, or memory treated as Non-cacheable, in an implementation that does support hardware cache coherency.<BR>In such a system, it is defined by the system:<BR>&#8226; Whether the global monitor is implemented.<BR>&#8226; If the global monitor is implemented, which address ranges or memory types it monitors.</P>
<P>IQJNL The only memory types for which it is architecturally guaranteed that a global exclusive monitor is implemented are:<BR>&#8226; Inner Shareable, Inner Write-Back, Outer Write-Back Normal memory with Read allocation hint and Write allocation hint and not transient.<BR>&#8226; Outer Shareable, Inner Write-Back, Outer Write-Back Normal memory with Read allocation hint and Write allocation hints and not transient.</P>
<P>RHBKJ The set of memory types that support atomic instructions includes all of the memory types for which a global monitor is implemented.</P>
<P>RBTRF If the global monitor is not implemented for an address range or memory type, then performing a Load-Exclusive/Store-Exclusive instruction to such a location has one or more of the following effects:<BR>&#8226; The instruction generates BusFault.<BR>&#8226; The instruction generates a DACCVIOL MemManage fault.<BR>&#8226; The instruction is treated as a NOP.<BR>&#8226; The Load-Exclusive instruction is treated as if it were accessing a Non-shareable location, but the state of the local monitor becomes UNKNOWN.<BR>&#8226; The Store-Exclusive instruction is treated as if it were accessing a Non-shareable location, but the state of the local monitor becomes UNKNOWN.<BR>&#8226; The value held in the result register of the Store-Exclusive instruction becomes UNKNOWN.</P>
<P>RFQRT For write transactions generated by non-PE observers that do not implement exclusive accesses or other atomic access mechanisms, the effect that writes have on the global monitor and the local monitor that are used by an ARM PE is IMPLEMENTATION DEFINED. The writes might not clear the global monitors of other PEs for:<BR>&#8226; Some address ranges.<BR>&#8226; Some memory types.</P>
<P>RHKQT A Load-Exclusive instruction from shareable memory performs a load from memory, and causes the physical address of the access to be marked as exclusive access for the requesting PE. This access can also cause the exclusive access mark to be removed from any other physical address that has been marked by the requesting PE.</P>
<P>RRXVB The global monitor only supports a single outstanding exclusive access to shareable memory for each PE.</P>
<P>RMPKM A Load-Exclusive instruction by one PE has no effect on the global monitor state for any other PE.</P>
<P>RMFGC A Store-Exclusive instruction performs a conditional store to memory:<BR>&#8226; The store is guaranteed to succeed only if the physical address accessed is marked as exclusive access for the requesting PE and both the local monitor and the global monitor state machines for the requesting PE are in the Exclusive Access state. In this case:<BR>&#8213; A status value of 0 is returned to a register to acknowledge the successful store.<BR>&#8213; The final state of the global monitor state machine for the requesting PE is IMPLEMENTATION DEFINED.<BR>&#8213; If the address accessed is marked for exclusive access in the global monitor state machine for any other PE then that state machine transitions to Open Access state.<BR>&#8226; If no address is marked as exclusive access for the requesting PE, the store does not succeed:<BR>&#8213; A status value of 1 is returned to a register to indicate that the store failed.<BR>&#8213; The global monitor is not affected and remains in Open Access state for the requesting PE.<BR>&#8226; If a different physical address is marked as exclusive access for the requesting PE, it is IMPLEMENTATION DEFINED whether the store succeeds or not:<BR>&#8213; If the store succeeds a status value of 0 is returned to a register, otherwise a value of 1 is returned.<BR>&#8213; If the global monitor state machine for the PE was in the Exclusive Access state before the Store-Exclusive instruction it is IMPLEMENTATION DEFINED whether that state machine transitions to the Open Access state.</P>
<P>RNNMG In a shared memory system, the global monitor implements a separate state machine for each PE in the system. The state machine for accesses to shareable memory by PE(n) can respond to all the shareable memory accesses visible to it.</P>
<P>RWKPJ In a shared memory system, the global monitor implements a separate state machine for each observer that can generate a Load-Exclusive or a Store-Exclusive instruction in the system.</P>
<P>RNWWH Whenever the global monitor state for a PE changes from Exclusive access to Open access, an event is generated and held in the Event register for that PE. This register is used by the Wait for Event mechanism.</P>
<P><FONT class=extract>RGDMD The state machine for PE(n) in a global monitor is as follows.</FONT></P>
<P>RGXLF The architecture does not require a load instruction by another PE, that is not a Load-Exclusive instruction, to have any effect on the global monitor.</P>
<P>RRGFK Whether a Store-Exclusive instruction successfully updates memory or not depends on whether the address accessed matches the marked shareable memory address for the PE issuing the Store-Exclusive instruction, and whether the local monitor and the global monitor are in the exclusive state.</P>
<P>RDLMP A Load-Exclusive instruction can only update the marked shareable memory address for the PE issuing the Load-Exclusive instruction.</P>
<P>RQVWF When the global monitor is in the Exclusive Access state, it is IMPLEMENTATION DEFINED whether a CLREX instruction causes the global monitor to transition from Exclusive Access to Open Access state.</P>
<P>RBSGB It is IMPLEMENTATION DEFINED:<BR>&#8226; Whether a modification to a Non-shareable memory location can cause a global monitor to transition from Exclusive Access to Open Access state.<BR>&#8226; Whether a Load-Exclusive instruction to a Non-shareable memory location can cause a global monitor to transition from Open Access to Exclusive Access state.</P>
<P>See also:<BR>&#8226; Appendix G1 Architectural Constraints on UNPREDICTABLE behaviors.<BR>&#8226; Exclusive access instructions and the monitors on page B6-165.