B5.21 Mismatched memory attributes</P>
<P>RXHTK Memory locations are accessed with mismatched attributes if all accesses to the location do not use a common definition of all the following memory attributes of that location:<BR>&#8226; Memory type - Device or Normal.<BR>&#8226; Shareability.<BR>&#8226; Cacheability, for the same level of the Inner or Outer cache, but excluding any cache allocation hints.</P>
<P>RVKHJ When a memory location is accessed with mismatched attributes, the only permitted effects are one or more of the following:<BR>&#8226; Uniprocessor semantics for reads and writes to that memory location might be lost. This means:<BR>&nbsp; &#8213; A read of the memory location by one agent might not return the value that was most recently written to that memory location by the same agent.<BR>&nbsp; &#8213; Multiple writes to the memory location by one agent with different memory attributes might not be ordered in program order.<BR>&#8226; There might be a loss of coherency when multiple agents attempt to access a memory location.<BR>&#8226; There might be a loss of the properties that are derived from the memory type.<BR>&#8226; If all Load-Exclusive/Store-Exclusive instructions that are executed across all threads to access a given memory location do not use consistent memory attributes, the exclusive monitor state becomes UNKNOWN.<BR>&#8226; Bytes that are written without the Write-Back cacheable attribute and that are within the same Write-Back granule as bytes that are written with the Write-Back cacheable attribute might have their values reverted to the old values as a result of cache Write-Back.</P>
<P>RNJLB The loss of the properties that are associated with mismatched memory type attributes refers only to the following properties of Device memory that are additional to the properties of Normal memory:<BR>&#8226; Prohibition of speculative read accesses.<BR>&#8226; Prohibition on Gathering.<BR>&#8226; Prohibition on Re-ordering.</P>
<P>RQCKK If the only memory type mismatch that is associated with a memory location across all users of the memory location is between different types of Device memory, then all accesses might take the properties of the weakest Device memory type.</P>
<P>RHCCD Any agent that reads a memory location with mismatched attributes using the same common definition of the Shareability and Cacheability attributes is guaranteed to access it coherently, to the extent required by that common definition of the memory attributes, only if all the following conditions are met:<BR>&#8226; All aliases to the memory location with write permission both use a common definition of the Shareability and Cacheability attributes for the memory location, and have the Inner Cacheability attribute the same as the Outer Cacheability attribute.<BR>&#8226; All aliases to a memory location use a definition of the Shareability attributes that encompasses all the agents with permission to access the location.</P>
<P>RGBKH The possible permitted effects that are caused by mismatched attributes for a memory location are defined more precisely if all the mismatched attributes define the memory location as one of:<BR>&#8226; Any Device memory type.<BR>&#8226; Normal Inner Non-cacheable, Outer Non-cacheable memory.<BR>In these cases, the only permitted software-visible effects of the mismatched attributes are one or more of the following:<BR>&#8226; Possible loss of properties that are derived from the memory type when multiple agents attempt to access the memory location.<BR>&#8226; Possible reordering of memory transactions to the same memory location with different memory attributes, potentially leading to a loss of coherency or uniprocessor semantics. Any possible loss of coherency or uniprocessor semantics can be avoided by inserting DMB barrier instructions between accesses to the same memory location that might use different attributes.</P>
<P>RVVBS If the mismatched attributes for a location mean that multiple cacheable accesses to the location might be made with different Shareability attributes, then ordering and coherency are guaranteed only if:<BR>&#8226; Each PE that accesses the location with a cacheable attribute performs a clean and invalidate of the location before and after accessing that location.<BR>&#8226; A DMB barrier with scope that covers the full Shareability of the accesses is placed between any accesses to the same memory location that use different attributes.</P>
<P>RVCXW If multiple agents attempt to use Load-Exclusive or Store-Exclusive instructions to access a location, and the accesses from the different agents have different memory attributes associated with the location, the exclusive monitor state becomes UNKNOWN.</P>
<P>ITPWG ARM strongly recommends that software does not use mismatched attributes for aliases of the same location. An implementation might not optimize the performance of a system that uses mismatched aliases.</P>
<P>See also:<BR>&#8226; Chapter B8 The ARMv8-M Protected Memory System Architecture.<BR>&#8226; Shareability domains on page B5-139.<BR>&#8226; Cacheability attributes on page B5-134.<BR>&#8226; Device memory on page B5-135.<BR>&#8226; Normal memory on page B5-133.<BR>&#8226; Load-Exclusive and Store-Exclusive accesses to Normal memory on page B5-144.