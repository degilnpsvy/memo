ExceptionTaken() Part of ExceptionEntry() behavior Exception entry behavior on page B1-643</P>
<P>// ExceptionTaken()<BR>// ================</P>
<P>ExceptionTaken(bits(9) ExceptionNumber)</P>
<P>&nbsp;&nbsp;&nbsp; bit tbit;<BR>&nbsp;&nbsp;&nbsp; bits(32) tmp;<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; R[0..3] = bits(32) UNKNOWN;<BR>&nbsp;&nbsp;&nbsp; R[12] = bits(32) UNKNOWN;<BR>&nbsp;&nbsp;&nbsp; tmp = MemA[VectorTable+4*ExceptionNumber,4];<BR>&nbsp;&nbsp;&nbsp; PC = tmp AND 0xFFFFFFFE;<BR>&nbsp;&nbsp;&nbsp; tbit = tmp&lt;0&gt;;<BR>&nbsp;&nbsp;&nbsp; CurrentMode = Mode_Handler;<BR>&nbsp;&nbsp;&nbsp; APSR = bits(32) UNKNOWN; // Flags UNPREDICTABLE due to other activations<BR>&nbsp;&nbsp;&nbsp; IPSR&lt;8:0&gt; = ExceptionNumber // ExceptionNumber set in IPSR<BR>&nbsp;&nbsp;&nbsp; EPSR.T = tbit; // T-bit set from vector<BR>&nbsp;&nbsp;&nbsp; EPSR.IT&lt;7:0&gt; = 0x0; // IT/ICI bits cleared<BR>&nbsp;&nbsp;&nbsp; //* PRIMASK, FAULTMASK, BASEPRI unchanged on exception entry*//<BR>&nbsp;&nbsp;&nbsp; if HaveFPExt() then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CONTROL.FPCA = &#8216;1&#8217;; // Floating-point extension only<BR>&nbsp;&nbsp;&nbsp; CONTROL.SPSEL = &#8216;0&#8217;; // current Stack is Main, CONTROL.nPRIV unchanged<BR>&nbsp;&nbsp;&nbsp; //* CONTROL.nPRIV unchanged *//<BR>&nbsp;&nbsp;&nbsp; ExceptionActive[ExceptionNumber]= &#8216;1&#8217;;<BR>&nbsp;&nbsp;&nbsp; SCS_UpdateStatusRegs(); // update SCS registers as appropriate<BR>&nbsp;&nbsp;&nbsp; ClearExclusiveLocal();<BR>&nbsp;&nbsp;&nbsp; SetEventRegister(); // see WFE instruction for more details<BR>&nbsp;&nbsp;&nbsp; InstructionSynchronizationBarrier();