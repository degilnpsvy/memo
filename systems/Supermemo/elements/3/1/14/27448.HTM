Shift_C() 
<P></P>
<P>Perform a specified shift by a specified amount on a bitstring, with carry output </P>
<P>Shift operations on page A7-213</P>
<P>&nbsp;</P>
<P></P>
<P>// Shift_C()<BR>// =========</P>
<P>(bits(N), bit) Shift_C(bits(N) value, SRType type, integer amount, bit carry_in)<BR>&nbsp;&nbsp;&nbsp; assert !(type == SRType_RRX &amp;&amp; amount != 1);</P>
<P>&nbsp;&nbsp;&nbsp; if amount == 0 then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (result, carry_out) = (value, carry_in);<BR>&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case type of<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; when SRType_LSL<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (result, carry_out) = LSL_C(value, amount);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; when SRType_LSR<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (result, carry_out) = LSR_C(value, amount);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; when SRType_ASR<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (result, carry_out) = ASR_C(value, amount);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; when SRType_ROR<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (result, carry_out) = ROR_C(value, amount);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; when SRType_RRX<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (result, carry_out) = RRX_C(value, carry_in);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (result, carry_out);