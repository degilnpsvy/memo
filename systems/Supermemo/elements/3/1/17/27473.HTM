WriteToRegField() Indicate a write of 1 to a specified field in a system control register External interrupt input behavior on page B3-751<BR>External interrupt input behavior<BR>The following pseudocode describes the relationship between external interrupt inputs and the NVIC behavior:</P>
<P>// DEFINITIONS</P>
<P>NVIC[] is an array of active high external interrupt input signals;<BR>&nbsp;&nbsp;&nbsp; // the type of signal (level or pulse) and its assertion level/sense is IMPLEMENTATION DEFINED<BR>&nbsp;&nbsp;&nbsp; // and might not be the same for all inputs</P>
<P>boolean Edge(integer INTNUM); // Returns true if on a clock edge NVIC[INTNUM]<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // has changed from &#8216;0&#8217; to &#8216;1&#8217;<BR>boolean NVIC_Pending[INTNUM]; // an array of pending status bits for the external interrupts<BR>integer INTNUM; // the external interrupt number</P>
<P>&nbsp;&nbsp;&nbsp; // The WriteToRegField helper function returns TRUE on a write of &#8216;1&#8217; event<BR>&nbsp;&nbsp;&nbsp; // to the field FieldNumber of the RegName register.<BR>&nbsp;&nbsp;&nbsp; <BR>boolean WriteToRegField(register RegName, integer FieldNumber)</P>
<P>boolean ExceptionIN(integer INTNUM); // returns TRUE if exception entry in progress<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // to activate INTNUM<BR>boolean ExceptionOUT(integer INTNUM); // returns TRUE if exception return in progress<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // from active INTNUM</P>
<P>// INTERRUPT INTERFACE</P>
<P>sampleInterruptHi = WriteToRegField(AIRCR, VECTCLRACTIVE) || ExceptionOUT(INTNUM);<BR>sampleInterruptLo = WriteToRegField(ICPR, INTNUM);</P>
<P>InterruptAssertion = Edge(INTNUM) || (NVIC[INTNUM] &amp;&amp; sampleInterruptHi);<BR>InterruptDeassertion = !NVIC[INTNUM] &amp;&amp; sampleInterruptLo;</P>
<P>// NVIC BEHAVIOR</P>
<P>clearPend = ExceptionIN(INTNUM) || InterruptDeassertion;<BR>setPend = InterruptAssertion || WriteToRegField(ISPR, INTNUM);</P>
<P>if clearPend &amp;&amp; setPend then<BR>&nbsp;&nbsp;&nbsp; IMPLEMENTATION DEFINED whether NVIC_Pending[INTNUM] is TRUE or FALSE;<BR>else<BR>&nbsp;&nbsp;&nbsp; NVIC_Pending[INTNUM] = setPend || (NVIC_Pending[INTNUM] &amp;&amp; !clearPend);