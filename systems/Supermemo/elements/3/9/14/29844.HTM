/**<BR>&nbsp;* <FONT class=clozed>down_interruptible</FONT> - acquire the semaphore unless interrupted<BR>&nbsp;* @sem: the semaphore to be acquired<BR>&nbsp;*<BR>&nbsp;* Attempts to acquire the semaphore.&nbsp; If no more tasks are allowed to<BR>&nbsp;* acquire the semaphore, calling this function will <SPAN class=cloze>[...]</SPAN><BR>&nbsp;*/<BR>int down_interruptible(struct semaphore *sem)<BR>{<BR>&nbsp;unsigned long flags;<BR>&nbsp;int result = 0; 
<P></P>
<P>&nbsp;raw_spin_lock_irqsave(&amp;sem-&gt;lock, flags);<BR>&nbsp;if (likely(sem-&gt;count &gt; 0))<BR>&nbsp;&nbsp;sem-&gt;count--;<BR>&nbsp;else<BR>&nbsp;&nbsp;result = __down_interruptible(sem);<BR>&nbsp;raw_spin_unlock_irqrestore(&amp;sem-&gt;lock, flags);</P>
<P>&nbsp;return result;<BR>}<BR>EXPORT_SYMBOL(down_interruptible);