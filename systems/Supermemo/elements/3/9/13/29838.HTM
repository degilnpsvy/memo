B2.2.7 Pseudocode details of operations on exclusive monitors 
<P></P>
<P><FONT class=extract>The SetExclusiveMonitors() function sets the exclusive monitors for a load exclusive instruction. The ExclusiveMonitorsPass() function checks whether a store exclusive instruction still has possession of the exclusive monitors and therefore completes successfully.</FONT></P>
<P><FONT class=extract>// SetExclusiveMonitors()<BR>// ======================</FONT></P>
<P><FONT class=extract>SetExclusiveMonitors(bits(32) address, integer size)</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; memaddrdesc = ValidateAddress(address, FindPriv(), FALSE);</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; if memaddrdesc.memattrs.shareable then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MarkExclusiveGlobal(memaddrdesc.physicaladdress, ProcessorID(), size);</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; MarkExclusiveLocal(memaddrdesc.physicaladdress, ProcessorID(), size);</FONT></P>
<P><FONT class=extract>// ExclusiveMonitorsPass()<BR>// =======================</FONT></P>
<P><FONT class=extract>boolean ExclusiveMonitorsPass(bits(32) address, integer size)</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; // It is IMPLEMENTATION DEFINED whether the detection of memory aborts happens<BR>&nbsp;&nbsp;&nbsp; // before or after the check on the local Exclusive Monitor. As a result a failure<BR>&nbsp;&nbsp;&nbsp; // of the local monitor can occur on some implementations even if the memory<BR>&nbsp;&nbsp;&nbsp; // access would give a memory abort.<BR>&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; if address != Align(address, size) then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; UFSR.UNALIGNED = &#8216;1&#8217;;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ExceptionTaken(UsageFault);<BR>&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memaddrdesc = ValidateAddress(address, FindPriv(), TRUE);<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; passed = IsExclusiveLocal(memaddrdesc.physicaladdress, ProcessorID(), size);<BR>&nbsp;&nbsp;&nbsp; if memaddrdesc.memattrs.shareable then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; passed = passed &amp;&amp; IsExclusiveGlobal(memaddrdesc.physicaladdress, ProcessorID(), size);<BR>&nbsp;&nbsp;&nbsp; if passed then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ClearExclusiveLocal(ProcessorID());<BR>&nbsp;&nbsp;&nbsp; return passed;</FONT></P>
<P><FONT class=extract>The MarkExclusiveGlobal() procedure takes as arguments an address, the processor identifier processorid and the size of the transfer. The procedure records that processor processorid has requested exclusive access covering at least size bytes from the address. The size of region marked as exclusive is IMPLEMENTATION DEFINED, up to a limit of 2KB, and no smaller than size, and aligned in the address space to the size of the region. It is UNPREDICTABLE whether this causes any previous request for exclusive access to any other address by the same processor to be cleared.</FONT></P>
<P><FONT class=extract>MarkExclusiveGlobal(bits(32) address, integer processorid, integer size)</FONT></P>
<P><FONT class=extract>The MarkExclusiveLocal() procedure takes as arguments an address, the processor identifier processorid and the size of the transfer. The procedure records in a local record that processor processorid has requested exclusive access to an address covering at least size bytes from the address. The size of the region marked as exclusive is IMPLEMENTATION DEFINED, and can at its largest cover the whole of memory, but is no smaller than size, and is aligned in the address space to the size of the region. It is IMPLEMENTATION DEFINED whether this procedure also performs a MarkExclusiveGlobal() using the same parameters.</FONT></P>
<P><FONT class=extract>MarkExclusiveLocal(bits(32) address, integer processorid, integer size)</FONT></P>
<P><FONT class=extract>The IsExclusiveGlobal() function takes as arguments an address, the processor identifier processorid and the size of the transfer. The function returns TRUE if the processor processorid has marked in a global record an address range as exclusive access requested that covers at least the size bytes from the address. It is IMPLEMENTATION DEFINED whether it returns TRUE or FALSE if a global record has marked a different address as exclusive access requested. If no address is marked in a global record as exclusive access, IsExclusiveGlobal() returns FALSE.</FONT></P>
<P><FONT class=extract>boolean IsExclusiveGlobal(bits(32) address, integer processorid, integer size)</FONT></P>
<P><FONT class=extract>The IsExclusiveLocal() function takes as arguments an address, the processor identifier processorid and the size of the transfer. The function returns TRUE if the processor processorid has marked an address range as exclusive access requested that covers at least the size bytes from the address. It is IMPLEMENTATION DEFINED whether this function returns TRUE or FALSE if the address marked as exclusive access requested does not cover all of the size bytes from the address. If no address is marked as exclusive access requested, then this function returns FALSE. It is IMPLEMENTATION DEFINED whether this result is ANDed with the result of IsExclusiveGlobal() with the same parameters.</FONT></P>
<P><FONT class=extract>boolean IsExclusiveLocal(bits(32) address, integer processorid, integer size)</FONT></P>
<P><FONT class=extract>The ClearExclusiveByAddress() procedure takes as arguments an address, the processor identifier processorid and the size of the transfer. The procedure clears the global records of all processors, other than processorid, for which an address region including any of the size bytes starting from the supplied address has had a request for an exclusive access. It is IMPLEMENTATION DEFINED whether the equivalent global record of the processor processorid is also cleared if any of the size bytes starting from the address has had a request for an exclusive access, or if any other address has had a request for an exclusive access.</FONT></P>
<P><FONT class=extract>ClearExclusiveByAddress(bits(32) address, integer processorid, integer size)</FONT></P>
<P><FONT class=extract>The ClearExclusiveLocal() procedure takes the argument processor identifier processorid. The procedure clears the local record of processor processorid for which an address has had a request for an exclusive access. It is IMPLEMENTATION DEFINED whether this operation also clears the global record of processor processorid that an address has had a request for an exclusive access.</FONT></P>
<P><FONT class=extract>ClearExclusiveLocal(integer processorid)</FONT>