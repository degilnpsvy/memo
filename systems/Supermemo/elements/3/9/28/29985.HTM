<H4 class=subsection>6.44.4 Controlling Names Used in Assembler Code</H4>
<P><A name=index-assembler-names-for-identifiers-3704></A><A name=index-names-used-in-assembler-code-3705></A><A name=index-identifiers_002c-names-in-assembler-code-3706></A>You can specify the name to be used in the assembler code for a C function or variable by writing the <CODE>asm</CODE> (or <CODE>__asm__</CODE>) keyword after the declarator. It is up to you to make sure that the assembler names you choose do not conflict with any other assembler symbols, or reference registers. </P>
<H5 class=subsubheading>Assembler names for data:</H5>
<P>This sample shows how to specify the assembler name for data: </P><PRE class=smallexample>     int foo asm ("myfoo") = 2;
</PRE>
<P class=noindent>This specifies that the name to be used for the variable <CODE>foo</CODE> in the assembler code should be &#8216;<SAMP><SPAN class=samp>myfoo</SPAN></SAMP>&#8217; rather than the usual &#8216;<SAMP><SPAN class=samp>_foo</SPAN></SAMP>&#8217;. </P>
<P>On systems where an underscore is normally prepended to the name of a C variable, this feature allows you to define names for the linker that do not start with an underscore. </P>
<P>GCC does not support using this feature with a non-static local variable since such variables do not have assembler names. If you are trying to put the variable in a particular register, see <A href="https://gcc.gnu.org/onlinedocs/gcc/Explicit-Register-Variables.html#Explicit-Register-Variables">Explicit Register Variables</A>. </P>
<H5 class=subsubheading>Assembler names for functions:</H5>
<P>To specify the assembler name for functions, write a declaration for the function before its definition and put <CODE>asm</CODE> there, like this: </P><PRE class=smallexample>     int func (int x, int y) asm ("MYFUNC");
     
     int func (int x, int y)
     {
        /* <SPAN class=roman>...</SPAN> */
</PRE>
<P class=noindent>This specifies that the name to be used for the function <CODE>func</CODE> in the assembler code should be <CODE>MYFUNC</CODE>.