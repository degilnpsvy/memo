<H4 class=subsection>6.44.6 Size of an <CODE>asm</CODE></H4>
<P>Some targets require that GCC track the size of each instruction used in order to generate correct code. Because the final length of the code produced by an <CODE>asm</CODE> statement is only known by the assembler, GCC must make an estimate as to how big it will be. It does this by counting the number of instructions in the pattern of the <CODE>asm</CODE> and multiplying that by the length of the longest instruction supported by that processor. (When working out the number of instructions, it assumes that any occurrence of a newline or of whatever statement separator character is supported by the assembler &#8211; typically &#8216;<SAMP><SPAN class=samp>;</SPAN></SAMP>&#8217; &#8212; indicates the end of an instruction.) </P>
<P>Normally, GCC's estimate is adequate to ensure that correct code is generated, but it is possible to confuse the compiler if you use pseudo instructions or assembler macros that expand into multiple real instructions, or if you use assembler directives that expand to more space in the object file than is needed for a single instruction. If this happens then the assembler may produce a diagnostic saying that a label is unreachable.