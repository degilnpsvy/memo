/**<BR>&nbsp;* <SPAN class=cloze>[...]</SPAN> - create a platform device<BR>&nbsp;* @name: base name of the device we're adding<BR>&nbsp;* @id: instance id<BR>&nbsp;*<BR>&nbsp;* Create a platform device object which can have other objects attached<BR>&nbsp;* to it, and which will have attached objects freed when it is released.<BR>&nbsp;*/<BR>struct platform_device *platform_device_alloc(const char *name, int id)<BR>{<BR>&nbsp;struct platform_object *pa; 
<P></P>
<P>&nbsp;pa = kzalloc(sizeof(*pa) + strlen(name) + 1, GFP_KERNEL);<BR>&nbsp;if (pa) {<BR>&nbsp;&nbsp;strcpy(pa-&gt;name, name);<BR>&nbsp;&nbsp;pa-&gt;pdev.name = pa-&gt;name;<BR>&nbsp;&nbsp;pa-&gt;pdev.id = id;<BR>&nbsp;&nbsp;device_initialize(&amp;pa-&gt;pdev.dev);<BR>&nbsp;&nbsp;pa-&gt;pdev.dev.release = platform_device_release;<BR>&nbsp;&nbsp;arch_setup_pdev_archdata(&amp;pa-&gt;pdev);<BR>&nbsp;}</P>
<P>&nbsp;return pa ? &amp;pa-&gt;pdev : NULL;<BR>}<BR>EXPORT_SYMBOL_GPL(platform_device_alloc);