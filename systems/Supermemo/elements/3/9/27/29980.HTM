<H4 class=subsection>6.44.3 Constraints for <CODE>asm</CODE> Operands</H4>
<P><A name=index-operand-constraints_002c-_0040code_007basm_007d-3658></A><A name=index-constraints_002c-_0040code_007basm_007d-3659></A><A name=index-g_t_0040code_007basm_007d-constraints-3660></A>Here are specific details on what constraint letters you can use with <CODE>asm</CODE> operands. Constraints can say whether an operand may be in a register, and which kinds of register; whether the operand can be a memory reference, and which kinds of address; whether the operand may be an immediate constant, and which possible values it may have. Constraints can also require two operands to match. Side-effects aren't allowed in operands of inline <CODE>asm</CODE>, unless &#8216;<SAMP><SPAN class=samp>&lt;</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>&gt;</SPAN></SAMP>&#8217; constraints are used, because there is no guarantee that the side-effects will happen exactly once in an instruction that can update the addressing register. </P>
<UL class=menu>
<LI><A accessKey=1 href="https://gcc.gnu.org/onlinedocs/gcc/Simple-Constraints.html#Simple-Constraints">Simple Constraints</A>: Basic use of constraints. 
<LI><A accessKey=2 href="https://gcc.gnu.org/onlinedocs/gcc/Multi-Alternative.html#Multi-Alternative">Multi-Alternative</A>: When an insn has two alternative constraint-patterns. 
<LI><A accessKey=3 href="https://gcc.gnu.org/onlinedocs/gcc/Modifiers.html#Modifiers">Modifiers</A>: More precise control over effects of constraints. 
<LI><A accessKey=4 href="https://gcc.gnu.org/onlinedocs/gcc/Machine-Constraints.html#Machine-Constraints">Machine Constraints</A>: Special constraints for some particular machines. </LI></UL>