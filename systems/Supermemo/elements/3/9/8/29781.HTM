/**<BR>&nbsp;* enum probe_type - device driver probe type to try<BR>&nbsp;*&nbsp;Device drivers may opt in for special handling of their<BR>&nbsp;*&nbsp;respective probe routines. This tells the core what to<BR>&nbsp;*&nbsp;expect and prefer.<BR>&nbsp;*<BR>&nbsp;* @PROBE_DEFAULT_STRATEGY: Used by drivers that work equally well<BR>&nbsp;*&nbsp;whether probed synchronously or asynchronously.<BR>&nbsp;* @PROBE_PREFER_ASYNCHRONOUS: Drivers for "slow" devices which<BR>&nbsp;*&nbsp;probing order is not essential for booting the system may<BR>&nbsp;*&nbsp;opt into executing their probes asynchronously.<BR>&nbsp;* @PROBE_FORCE_SYNCHRONOUS: Use this to annotate drivers that need<BR>&nbsp;*&nbsp;their probe routines to run synchronously with driver and<BR>&nbsp;*&nbsp;device registration (with the exception of -EPROBE_DEFER<BR>&nbsp;*&nbsp;handling - re-probing always ends up being done asynchronously).<BR>&nbsp;*<BR>&nbsp;* Note that the end goal is to switch the kernel to use asynchronous<BR>&nbsp;* probing by default, so annotating drivers with<BR>&nbsp;* %PROBE_PREFER_ASYNCHRONOUS is a temporary measure that allows us<BR>&nbsp;* to speed up boot process while we are validating the rest of the<BR>&nbsp;* drivers.<BR>&nbsp;*/<BR>enum probe_type {<BR>&nbsp;PROBE_DEFAULT_STRATEGY,<BR>&nbsp;PROBE_PREFER_ASYNCHRONOUS,<BR>&nbsp;PROBE_FORCE_SYNCHRONOUS,<BR>};