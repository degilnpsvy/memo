/**<BR>&nbsp;* struct device_driver - The basic device driver structure<BR>&nbsp;* @name:&nbsp;Name of the device driver.<BR>&nbsp;* @bus:&nbsp;The bus which the device of this driver belongs to.<BR>&nbsp;* @owner:&nbsp;The module owner.<BR>&nbsp;* @mod_name:&nbsp;Used for built-in modules.<BR>&nbsp;* @suppress_bind_attrs: Disables bind/unbind via sysfs.<BR>&nbsp;* @probe_type:&nbsp;Type of the probe (synchronous or asynchronous) to use.<BR>&nbsp;* @of_match_table: The open firmware table.<BR>&nbsp;* @acpi_match_table: The ACPI match table.<BR>&nbsp;* @probe:&nbsp;Called to query the existence of a specific device,<BR>&nbsp;*&nbsp;&nbsp;whether this driver can work with it, and bind the driver<BR>&nbsp;*&nbsp;&nbsp;to a specific device.<BR>&nbsp;* @remove:&nbsp;Called when the device is removed from the system to<BR>&nbsp;*&nbsp;&nbsp;unbind a device from this driver.<BR>&nbsp;* @shutdown:&nbsp;Called at shut-down time to quiesce the device.<BR>&nbsp;* @suspend:&nbsp;Called to put the device to sleep mode. Usually to a<BR>&nbsp;*&nbsp;&nbsp;low power state.<BR>&nbsp;* @resume:&nbsp;Called to bring a device from sleep mode.<BR>&nbsp;* @groups:&nbsp;Default attributes that get created by the driver core<BR>&nbsp;*&nbsp;&nbsp;automatically.<BR>&nbsp;* @pm:&nbsp;&nbsp;Power management operations of the device which matched<BR>&nbsp;*&nbsp;&nbsp;this driver.<BR>&nbsp;* @p:&nbsp;&nbsp;Driver core's private data, no one other than the driver<BR>&nbsp;*&nbsp;&nbsp;core can touch this.<BR>&nbsp;*<BR>&nbsp;* The device driver-model tracks all of the drivers known to the system.<BR>&nbsp;* The main reason for this tracking is to enable the driver core to match<BR>&nbsp;* up drivers with new devices. Once drivers are known objects within the<BR>&nbsp;* system, however, a number of other things become possible. Device drivers<BR>&nbsp;* can export information and configuration variables that are independent<BR>&nbsp;* of any specific device.<BR>&nbsp;*/<BR>struct device_driver {<BR>&nbsp;const char&nbsp;&nbsp;*name;<BR>&nbsp;struct bus_type&nbsp;&nbsp;*bus;
<P></P>
<P>&nbsp;struct module&nbsp;&nbsp;*owner;<BR>&nbsp;const char&nbsp;&nbsp;*mod_name;&nbsp;/* used for built-in modules */</P>
<P>&nbsp;bool suppress_bind_attrs;&nbsp;/* disables bind/unbind via sysfs */<BR>&nbsp;enum probe_type probe_type;</P>
<P>&nbsp;const struct of_device_id&nbsp;*of_match_table;<BR>&nbsp;const struct acpi_device_id&nbsp;*acpi_match_table;</P>
<P>&nbsp;int (*probe) (struct device *dev);<BR>&nbsp;int (*remove) (struct device *dev);<BR>&nbsp;void (*shutdown) (struct device *dev);<BR>&nbsp;int (*suspend) (struct device *dev, pm_message_t state);<BR>&nbsp;int (*resume) (struct device *dev);<BR>&nbsp;const struct attribute_group **groups;</P>
<P>&nbsp;const struct dev_pm_ops *pm;</P>
<P>&nbsp;struct driver_private *p;<BR>};