<B>Register operand constraint(r)</B> 
<P>When operands are specified using this constraint, they get stored in General Purpose Registers(GPR). Take the following example: </P>
<P></P>
<P><CODE>asm ("movl %%eax, %0\n" :"=r"(myval)); </CODE></P>
<P></P>
<P>Here the variable myval is kept in a register, the value in register <CODE>eax</CODE> is copied onto that register, and the value of <CODE>myval</CODE> is updated into the memory from this register. When the "r" constraint is specified, gcc may keep the variable in any of the available GPRs. To specify the register, you must directly specify the register names by using specific register constraints. They are: </P>
<P></P>
<BLOCKQUOTE><CODE><PRE>+---+--------------------+
| r |    Register(s)     |
+---+--------------------+
| a |   %eax, %ax, %al   |
| b |   %ebx, %bx, %bl   |
| c |   %ecx, %cx, %cl   |
| d |   %edx, %dx, %dl   |
| S |   %esi, %si        |
| D |   %edi, %di        |
+---+--------------------+
</PRE></CODE></BLOCKQUOTE>