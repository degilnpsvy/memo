<B>Memory operand constraint(m)</B> 
<P>When the operands are in the memory, any operations performed on them will occur directly in the memory location, as opposed to register constraints, which first store the value in a register to be modified and then write it back to the memory location. But register constraints are usually used only when they are absolutely necessary for an instruction or they significantly speed up the process. Memory constraints can be used most efficiently in cases where a C variable needs to be updated inside "asm" and you really don&#8217;t want to use a register to hold its value. For example, the value of idtr is stored in the memory location loc: </P>
<P><CODE>asm("sidt %0\n" : :"m"(loc));</CODE>