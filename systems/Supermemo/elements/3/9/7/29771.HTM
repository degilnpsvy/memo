#define __SEMAPHORE_INITIALIZER(name, n)&nbsp;&nbsp;&nbsp;&nbsp;\<BR>{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;.lock&nbsp;&nbsp;= __RAW_SPIN_LOCK_UNLOCKED((name).lock),&nbsp;\<BR>&nbsp;.count&nbsp;&nbsp;= n,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;.wait_list&nbsp;= LIST_HEAD_INIT((name).wait_list),&nbsp;&nbsp;\<BR>} 
<P></P>
<P>#define <SPAN class=cloze>[...]</SPAN>(name)&nbsp;\<BR>&nbsp;struct semaphore name = __SEMAPHORE_INITIALIZER(name, 1)</P>
<P>static inline void sema_init(struct semaphore *sem, int val)<BR>{<BR>&nbsp;static struct lock_class_key __key;<BR>&nbsp;*sem = (struct semaphore) __SEMAPHORE_INITIALIZER(*sem, val);<BR>&nbsp;lockdep_init_map(&amp;sem-&gt;lock.dep_map, "semaphore-&gt;lock", &amp;__key, 0);<BR>}