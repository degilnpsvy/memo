&nbsp;&nbsp;&nbsp; /* Information associated with an exception about to be taken:<BR>&nbsp;&nbsp;&nbsp;&nbsp; * code which raises an exception must set cs-&gt;exception_index and<BR>&nbsp;&nbsp;&nbsp;&nbsp; * the relevant parts of this structure; the cpu_do_interrupt function<BR>&nbsp;&nbsp;&nbsp;&nbsp; * will then set the guest-visible registers as part of the exception<BR>&nbsp;&nbsp;&nbsp;&nbsp; * entry process.<BR>&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; struct {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint32_t syndrome; /* AArch64 format syndrome register */<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint32_t fsr; /* AArch32 format fault status register info */<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint64_t vaddress; /* virtual addr associated with exception, if any */<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint32_t target_el; /* EL the exception should be targeted for */<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* If we implement EL2 we will also need to store information<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; * about the intermediate physical address for stage 2 faults.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; } exception;&nbsp;
<P>&nbsp;</P>
<P>In CPUARMState, in target-arm/cpu.h