B3.5 Protected Memory System Architecture, PMSAv7 
<P></P>
<P><FONT class=extract>Supporting a model of unprivileged and privileged software execution requires a memory protection scheme that controls the access rights. ARMv7-M supports the Protected Memory System Architecture (PMSAv7). The system address space of a PMSAv7 implementation is protected by a Memory Protection Unit (MPU). The MPU divides the memory into regions. The number of supported regions is IMPLEMENTATION DEFINED.</FONT> <FONT class=extract>PMSAv7 can support regions as small as 32 bytes, but the limited register resources in the 4GB address space mean the MPU provides an inherently coarse-grained protection scheme.</FONT> The scheme is completely predictive, with all control information held in registers that are closely-coupled to the processor. Memory accesses are only required for software control of the MPU register interface, see Register support for PMSAv7 in the SCS on page B3-764.</P>
<P>MPU support in ARMv7-M is optional. When implemented, its relation to the system memory map described in The system address map on page B3-704 as follows:<BR>&#8226; MPU support provides control of access rights on physical addresses. It does not perform address translation.<BR>&#8226; <FONT class=extract>When the MPU is disabled or not present, the system adopts the default system memory map listed in Table B3-1 on page B3-705. When the MPU is enabled, the enabled regions define the system address map with the following provisos:<BR>&nbsp; &#8213; accesses to the Private Peripheral Bus (PPB) always uses the default system address map<BR>&nbsp; &#8213; exception vector reads from the Vector Address Table always use the default system address map<BR>&nbsp; &#8213; the MPU is restricted in how it can change the default memory map attributes associated with System space (address 0xE0000000 or higher).<BR>&nbsp;&nbsp;&nbsp; System space is always marked as XN, Execute Never.<BR>&nbsp; &#8213; When the execution priority is less than 0, MPU_CTRL.HFNMIENA determines whether memory accesses use the MPU or the default memory map attributes. The execution priority is less than 0 if the processor is executing the NMI or HardFault handler, or if FAULTMASK is set to 1.<BR>&nbsp; &#8213; the default system memory map can be configured to provide a background region for privileged accesses<BR>&nbsp; &#8213; accesses with an address match in more than one region use the highest matching region number for the access attributes<BR>&nbsp; &#8213; accesses that do not match all access conditions of a region address match (with the MPU enabled) or a background/default memory map match generate a fault.</FONT>