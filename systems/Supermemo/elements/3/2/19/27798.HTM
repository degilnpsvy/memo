5.6.4 TT 
<P></P>
<P>Test target. The method is used to query the security state and access permissions of a memory location. NOTE: This instruction fits into the unpredictable space in the T1 encoding of STREX(register). See ARM ARMv7-M issue D section A7.7.164</P>
<P>Encoding T1 Security extensions</P>
<P>TT {A} {T} &lt;c&gt; Rd, Rn</P>
<P>d = UInt{Rd}; n = UInt(Rn); alt = (A == '1'); forceunpriv = (T == '1');<BR>if d IN {13,15} || n == 15 then UNPREDICTABLE;<BR>if alt &amp;&amp; !IsSecure() then UNDEFINED;</P>
<P>Operation:<BR>if ConditionPassed() then<BR>&nbsp;&nbsp; EncodingSpecificOperations();<BR>&nbsp;&nbsp; addr = R[n];<BR>&nbsp;&nbsp; TT_RESP_Type resp = Zeros();</P>
<P>&nbsp;&nbsp; // Only allow security checks if we're in the secure state<BR>&nbsp;&nbsp; if IsSecure() then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sAttributes = SecurityCheck(addr, FALSE, IsSecure());<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if sAttributes.srvalid then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.SREGION = sAttributes.Sregion;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.SRVALID = '1';<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if sAttributes.irvalid then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.IREGION = sAttributes.iregion;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.IRVALID = '1';<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; addrSecure = if sAttributes.ns then '0' else '1';<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.S = addrSecure;</P>
<P>&nbsp;&nbsp; // MPU region information only available when privileged or when inspecting the other domain MPU<BR>&nbsp;&nbsp; if CurrentModeIsPrivileged() || alt then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (write, read, region, hit) = IsAccessible(addr, forceunpriv, alt ^ IsSecure());<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if hit == '1' then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.MREGION = region;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.MRVALID = '1';<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.R = read;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.RW = write;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if IsSecure() then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.NSR = read AND NOT addrSecure;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; resp.NSRW = write AND NOT addrSecure;<BR>&nbsp;&nbsp; R[d] = resp;</P>
<P>This instruction is useful when validating pointers originating from code executing in another state. In addition to security information, the instruction can also return information about the MPU region associated with an address. Normally this is from the MPU associated with the current state, however if the "A" flag is set then information from the MPU associated with the alternate domain is returned.<BR>NOTE: This option is only valid when executing in the secure state, and causes an UNDEFINED fault to be raised if used from the non-secure state.</P>
<P>The "T" flag forces the instruction to return the unprivileged read/read-write MPU permissions. This is useful when checking pointers that have been passed to privileged code from unprivileged code.</P>
<P>NOTE: Since the MPU information returned by the TT instruction is generically useful, this instruction is also added to v8-M processors that don't implement the security extensions.</P>
<P>NOTE: Some fields are only valid when the instruction is executed from a privileged and/or secure state, see the description of the individual fields for details. Invalid fields are RAZ.</P>
<P>MREGION (Bits[7:0]) The MPU region that the address maps to. See section 11.3.5 for rational. This field is RAZ if MRVALID is 0.</P>
<P>SREGION (Bits[15:8]) The SAU region that the address maps to. This field is only valid if the instruction was executed from the secure state. This field is RAZ if SRVALID is 0. See section 11.3.5 for rational.</P>
<P>MRVALID (Bit[16]) This field is set to 1 if the MREGION field is valid. The MREGION will be invalid if any of the following conditions are true:<BR>&nbsp; * The MPU is not present or MPU_CTRL.ENABLE is 0.<BR>&nbsp; * The address did not match any enabled MPU regions<BR>&nbsp; * The address matched multiple MPU regions<BR>&nbsp; * The TT instruction was executed from an unprivileged mode and the "A" flag was not specified</P>
<P>SRVALID (Bit[17]) This field is set to 1 if the SREGION field is valid. The SREGION will be invalid if any of the following conditions are true:<BR>&nbsp; * SAU_CTRL.ENABLE is set to 0<BR>&nbsp; * The address did not match any enabled SAU regions<BR>&nbsp; * The address matched multiple SAU regions<BR>&nbsp; * The address is exempt from security attribution<BR>&nbsp; * The TT instruction was executed from the non-secure state, or on a processor that doesn't implement the security extensions</P>
<P>R (Bit[18]) Read accessibility - Set to 1 if the memory location is can be read according to the permissions of the selected MPU when operating in the current mode. If the "T" flag is specified this field returns the unprivileged permissions regardless of whether the current mode is privileged or not. This field is invalid and RAZ if the TT instruction was executed from an unprivileged mode and the "A" flag was not specified. This field is also RAZ if the address matches multiple MPU regions.</P>
<P>RW (Bit[19]) Read/write accessibility - Set to 1 if the memory location is can be read and written according to the permissions of the selected MPU when operating in the current mode. If the "T" flag is specified this field returns the unprivileged permissions regardless of whether the current mode is privileged or not. This field is invalid and RAZ if the TT instruction was executed from an unprivileged mode and the "A" flag was not specified. This field is also RAZ if the address matches multiple MPU regions.</P>
<P>NSR Bit[20] Equal to R AND NOT S. Can be used in condition the LSLS(immediate) instruction to quickly check both the MPU and SAU/IDAU permissions. This field is only valid if the instruction was executed from the secure state and R field is valid.</P>
<P>NSRW Bit[21] Equal to RW AND NOT S. Can be used in combination the LSLS(immediate) instruction to quickly check both the MPU and SAU/IDAU permissions. This field is only valid if the instruction was executed from the secure state and the RW field is valid.</P>
<P>S (Bit[22]) Security. A value of 1 indicates the memory location is secure. This field is only valid if the instrution was executed from the secure state.</P>
<P>IRVALID (Bit[23]) This field is set to 1 if the IREGION field is valid. The IREGION will be invalid if any of the following conditions are true:<BR>&nbsp; * The IDAU did not supply region number information<BR>&nbsp; * The address is exempt from security attribution<BR>&nbsp; * The TT instruction was executed from the non-secure state, or on a processor that doesn't implement the security extensions</P>
<P>IREGION (Bit[31:24]) The IDAU region that the address maps to. This field is only valid if the instruction was executed from the secure state. This field is RAZ if IRVALID is 0. See section 11.3.5 for rational.