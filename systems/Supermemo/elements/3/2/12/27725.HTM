A3.5.6 Strongly-ordered memory 
<P></P>
<P><FONT class=extract>The Strongly-ordered memory type attribute defines memory locations where an access to the location can cause side effects, or where the value returned for a load can vary depending on the number of loads performed. Examples of memory regions normally marked as being Strongly-ordered are memory-mapped peripherals and I/O locations.</FONT></P>
<P><FONT class=extract>For explicit accesses from the processor to memory marked as Strongly-ordered:<BR>&#8226; all accesses occur at their program size<BR>&#8226; the number of accesses is the number specified by the program.</FONT></P>
<P>An implementation must not perform more accesses to a Strongly-ordered memory location than are specified by a simple sequential execution of the program, except as a result of an exception. This section describes this permitted effect of an exception.</P>
<P>The architecture does not permit speculative data accesses to memory marked as Strongly-ordered.</P>
<P>Address locations in Strongly-ordered memory are not held in a cache, and are always treated as Shareable memory locations.</P>
<P>All explicit accesses to Strongly-ordered memory must correspond to the ordering requirements of accesses described in Ordering requirements for memory accesses on page A3-114.</P>
<P>An instruction that generates a sequence of accesses as described in Atomicity in the ARM architecture on page A3-101 might be abandoned as a result of an exception being taken during the sequence of accesses. On return from the exception the instruction is restarted, and therefore one or more of the memory locations might be accessed multiple times. This can result in repeated write accesses to a location that has been changed between the write accesses.</P>
<P>Note<BR>Do not use an instruction that generates a sequence of accesses to access Strongly-ordered memory if the instruction might restart after an exception and repeat any write accesses, see Exceptions in Load Multiple and Store Multiple operations on page B1-658 for more information.</P>
<P>Any unaligned access that is not faulted by the alignment restrictions and accesses Strongly-ordered memory has UNPREDICTABLE behavior.