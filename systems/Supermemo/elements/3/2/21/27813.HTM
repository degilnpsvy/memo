Data Memory Barrier (DMB) 
<P></P>
<P>The DMB instruction is a data memory barrier. The processor that executes the DMB instruction is referred to as the executing processor, Pe. The DMB instruction takes the required shareability domain and required access types as arguments.</P>
<P>Note<BR>ARMv7-M only supports system-wide barriers with no shareability domain or access type limitations.</P>
<P>A DMB creates two groups of memory accesses, Group A and Group B:</P>
<P>Group A Contains:<BR>&#8226; all explicit memory accesses of the required access types from observers within the same shareability domain as Pe that are observed by Pe before the DMB instruction. This includes any accesses of the required access types and required shareability domain performed by Pe.<BR>&#8226; all loads of required access types from observers within the same shareability domain as Pe that have been observed by any given observer Py within the same required shareability domain as Pe before Py has performed a memory access that is a member of Group A.</P>
<P>Group B Contains:<BR>&#8226; all explicit memory accesses of the required access types by Pe that occur in program order after the DMB instruction<BR>&#8226; all explicit memory accesses of the required access types by any given observer Px within the same required shareability domain as Pe that can only occur after Px has observed a store that is a member of Group B.</P>
<P>Any observer with the same required shareability domain as Pe observes all members of Group A before it observes any member of Group B. Where members of Group A and Group B access the same memory-mapped peripheral, all members of Group A will be visible at the memory-mapped peripheral before any members of Group B are visible at that peripheral.</P>
<P>Note<BR>&#8226; A memory access might be in neither Group A nor Group B. The DMB does not affect the order of observation of such a memory access.<BR>&#8226; The second part of the definition of Group A is recursive. Ultimately, membership of Group A derives from the observation by Py of a load before Py performs an access that is a member of Group A as a result of the first part of the definition of Group A.<BR>&#8226; The second part of the definition of Group B is recursive. Ultimately, membership of Group B derives from the observation by any observer of an access by Pe that is a member of Group B as a result of the first part of the definition of Group B.</P>
<P>DMB only affects memory accesses. It has no effect on the ordering of any other instructions executing on the processor.</P>
<P>For details of the DMB instruction see DMB on page A7-267.