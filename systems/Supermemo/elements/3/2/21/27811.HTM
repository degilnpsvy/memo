Program order for instruction execution 
<P></P>
<P>The program order of instruction execution is the order of the instructions in the control flow trace.</P>
<P>Explicit memory accesses in an execution can be either:<BR>&nbsp; Strictly Ordered&nbsp;&nbsp; Denoted by &lt;. Must occur strictly in order.<BR>&nbsp; Ordered&nbsp;&nbsp; Denoted by &lt;=. Can occur either in order or simultaneously.<BR>&nbsp; <BR>Multiple load and store instructions, LDC, LDC2, LDMDB, LDMIA, LDRD, POP, PUSH, STC, STC2, STMDB, STMIA, STRD, VLDR.F64, VSTR.F64, VLDM, VPUSH, VSTM, and VPOP, generate multiple word accesses, each of which is a separate access for the purpose of determining ordering.</P>
<P>The rules for determining program order for two accesses A1 and A2 are:</P>
<P>If A1 and A2 are generated by two different instructions:<BR>&#8226; A1 &lt; A2 if the instruction that generates A1 occurs before the instruction that generates A2 in program order<BR>&#8226; A2 &lt; A1 if the instruction that generates A2 occurs before the instruction that generates A1 in program order.</P>
<P>If A1 and A2 are generated by the same instruction:<BR>&#8226; If A1 and A2 are two word loads generated by an LDC, LDC2, LDMDB, LDMIA or POP instruction, or two word stores generated by a PUSH, STC, STC2, STMDB, or STMIA instruction, excluding LDMDB, LDMIA or POP instructions with a register list that includes the PC:<BR>&nbsp; &#8213; A1 &lt;= A2 if the address of A1 is less than the address of A2<BR>&nbsp; &#8213; A2 &lt;= A1 if the address of A2 is less than the address of A1.<BR>&#8226; If A1 and A2 are two word loads generated by an LDMDB, LDMIA or POP instruction with a register list that includes the PC, the program order of the memory accesses is not defined.<BR>&#8226; If A1 and A2 are two word loads generated by an LDRD instruction or two word stores generated by an STRD instruction, the program order of the memory accesses is not defined.<BR>&#8226; For any instruction or operation not explicitly mentioned in this section, if the single-copy atomicity rules described in Single-copy atomicity on page A3-101 mean the operation becomes a sequence of accesses, then the time-ordering of those accesses is not defined.