A3.7.3 Memory barriers 
<P></P>
<P>Memory barrier is the general term applied to an instruction, or sequence of instructions, used to force synchronization events by a processor with respect to retiring load and store instructions in a processor. <FONT class=extract>A memory barrier is used to guarantee both:<BR>&#8226; completion of preceding load and store instructions to the programmers&#8217; model<BR>&#8226; flushing of any prefetched instructions before the memory barrier event.</FONT></P>
<P><FONT class=extract>ARMv7-M requires three explicit memory barriers to support the memory order model described in this chapter. The three memory barriers are:<BR>&#8226; Data Memory Barrier, see Data Memory Barrier (DMB)<BR>&#8226; Data Synchronization Barrier, see Data Synchronization Barrier (DSB) on page A3-117<BR>&#8226; Instruction Synchronization Barrier, see Instruction Synchronization Barrier (ISB) on page A3-118.</FONT></P>
<P><FONT class=extract>The DMB and DSB memory barriers affect reads and writes to the memory system generated by load and store instructions. Instruction fetches are not explicit accesses and are not affected.</FONT></P>
<P>Note<BR>In ARMv7-M, memory barrier operations might be required in conjunction with data or unified cache and branch predictor maintenance operations.