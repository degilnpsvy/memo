<H2 style="MARGIN: 13pt 0cm"><SPAN lang=EN-US style="FONT-SIZE: 22pt; LINE-HEIGHT: 173%; mso-bidi-font-size: 16.0pt"><FONT face=Cambria>4.6 Secure stacks</FONT></SPAN></H2>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>The security extensions bank the stack pointers with the security state, resulting in the following 4 stack pointer registers:</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style='FONT: 7pt "Times New Roman"'> </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SP_Main_Secure or MSP_S</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style='FONT: 7pt "Times New Roman"'> </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SP_Process_Secure or PSP_S</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style='FONT: 7pt "Times New Roman"'> </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SP_Main_NonSecure or MSP_NS</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 11.0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style='FONT: 7pt "Times New Roman"'> </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SP_Process_NonSecure or PSP_NS</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>To allow the non-secure statck pointers to be accessed from the secure state the following SYSm values have been added (see sections MRS/MSR pseudo code modifications). NOTE: These aliases behave as RAZ/WI when accessed from the non-secure state:</FONT></SPAN></P>
<TABLE class=MsoNormalTable style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; mso-border-alt: solid windowtext .5pt; mso-yfti-tbllook: 1184; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt; mso-border-insideh: .5pt solid windowtext; mso-border-insidev: .5pt solid windowtext" cellSpacing=0 cellPadding=0 border=1>
<TBODY>
<TR style="mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; WIDTH: 213.05pt; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt" vAlign=top width=284>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Register</FONT></SPAN></P></TD>
<TD style="BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; WIDTH: 213.05pt; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt" vAlign=top width=284>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SYSm value</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 1">
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; WIDTH: 213.05pt; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top width=284>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SP_Main_NonSecure</FONT></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; WIDTH: 213.05pt; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top width=284>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>0b10001:000</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 2; mso-yfti-lastrow: yes">
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; WIDTH: 213.05pt; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top width=284>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>SP_Process_NonSecure</FONT></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; WIDTH: 213.05pt; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top width=284>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>0b10001:001</FONT></SPAN></P></TD></TR></TBODY></TABLE>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Any accesses to SP_Main, MSP, SP_Process, or PSP refer to the stack pointer associated with the current state of the processor.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>To accommodate the additional stack pointers the LookUpSP() function is modified as shown below. NOTE: The UNPREDICTABLE behavior that is present in the current ARM ARM has been removed from this function as it is now a valid architectural state.</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp;// LookUpSP()<BR>// ==========</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>RName LookUpSP()<BR>&nbsp; return LookUpSP_with_security_mode(IsSecure(), CurrentMode());</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>// LookUpSP_with_security_mode()<BR>// =============================</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>RName LookUpSP_with_security_mode(boolean isSecure, Mode mode)<BR>&nbsp; RName sp;<BR>&nbsp; bit spSel;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp; // Get the SPSEL bit corresponding to the security state requested<BR>&nbsp; if is Secure then<BR>&nbsp;&nbsp;&nbsp; spSel = CONTROL_S.SPSEL;<BR>&nbsp; else<BR>&nbsp;&nbsp;&nbsp; spSel = CONTROL_NS.SPSEL;</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp; // Should we be using the process or main stack pointers<BR>&nbsp; if spSel == '1' &amp;&amp; mode==Mode_Thread then<BR>&nbsp;&nbsp;&nbsp; if isSecure then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sp = RNameSP_Process_Secure;<BR>&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sp = RNameSP_Process_NonSecure;<BR>&nbsp; else<BR>&nbsp;&nbsp;&nbsp; if isSecure then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sp = RNameSP_Main_Secure;<BR>&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sp = RNameSP_Main_NonSecure;<BR>&nbsp; return sp;<BR></FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>In order to prevent trivial attacks the two stacks associated with secure state should be located in secure memory.</FONT></SPAN>