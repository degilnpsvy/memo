ARMv7-M defines the following exception categories:<BR><FONT class=extract>*Reset<BR>&nbsp;&nbsp;&nbsp; Reset is a special form of exception that, when asserted, terminates current execution in a potentially unrecoverable way. When reset is deasserted, execution restarts from a fixed point.</FONT><BR><FONT class=extract>*Supervisor call (SVCall)<BR>&nbsp;&nbsp;&nbsp; An exception caused explicitly by the SVC instruction. Application software uses the SVC instruction to make a call to an underlying operating system. This is called a Supervisor call. The SVC instruction enables the application to issue a Supervisor call that requires privileged access to the system and executes in program order with respect to the application.<BR>&nbsp;&nbsp;&nbsp; ARMv7-M also supports an interrupt-driven Supervisor-calling mechanism, PendSV, see Overview of the exceptions supported on page B1-631.</FONT><BR><FONT class=extract>*Fault<BR>&nbsp;&nbsp;&nbsp; A fault is an exception that results from an error condition in instruction execution. A fault can be reported synchronously or asynchronously to the instruction that caused it. In general, faults are reported synchronously. The Imprecise BusFault is an asynchronous fault supported in the ARMv7-M profile.<BR>&nbsp;&nbsp;&nbsp; A synchronous fault is always reported with the instruction that caused the fault. The architecture makes no guarantee about how an asynchronous fault is reported relative to the instruction that caused the fault.<BR>&nbsp;&nbsp;&nbsp; Synchronous debug monitor exceptions are faults. Debug watchpoints are asynchronous and are treated as an interrupt.</FONT><BR><FONT class=extract>*Interrupt<BR>&nbsp;&nbsp;&nbsp; An interrupt is an exception, other than a reset, fault or a supervisor call. All interrupts are asynchronous to the instruction stream. Typically interrupts are used by other components of the system that must communicate with the processor. This can include software running on another processor in the system.</FONT>