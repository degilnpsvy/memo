3 SECURITY EXTENSIONS OVERVIEW 
<P></P>
<P>3.1 Basic operation</P>
<P>The security extensions introduce a new secure state of execution that is orthogonal to the existing thread/handler modes, thus creating 4 possible states((Non-secure secure)*(thread handler) mode). Areas of memory and other critical resources which are marked as secure can only be accessed when the core is in one of the secure states.</P>
<P><FONT class=extract>A key aspect of the extensions is that they offer level of high performance. Different customers have different protection goals, in some cases the secure code only needs to be protected against badly written code (e.g. accidental array overwrites), rather than malicious code, to give customers a degree of choice in some cases the security extensions allow the level of protection to be lowered to further reduce overheads.</FONT></P>
<P>3.2 Overview</P>
<P>Overview: features:</P>
<P>* A detailed definition of the secure state<BR>* Provision for extending the protection provided by the secure state out into the wider system<BR>* Provision for quickly transitioning between secure and non-secure states<BR>* Provision for taking exceptions directly to the destination state without exposing the secure state to attack<BR>* Provision for incremental lockdown of the debug interface enabling debugging of non-secure code whilst still protected secure code and data<BR>* Expected software interfacing model