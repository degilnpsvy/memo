Effect of MPU_CTRL settings on unprivileged instructions 
<P></P>
<P>The Thumb instruction set includes instructions that, when executed by privileged software, perform unprivileged memory accesses:<BR>&#8226; the following sections describe instructions that perform unprivileged register loads:<BR>&nbsp; &#8213; LDRBT on page A7-299<BR>&nbsp; &#8213; LDRHT on page A7-315<BR>&nbsp; &#8213; LDRSBT on page A7-323<BR>&nbsp; &#8213; LDRSHT on page A7-331<BR>&nbsp; &#8213; LDRT on page A7-332<BR>&#8226; the following sections describe instructions that perform unprivileged register stores:<BR>&nbsp; &#8213; STRBT on page A7-481<BR>&nbsp; &#8213; STRHT on page A7-493<BR>&nbsp; &#8213; STRT on page A7-494.<BR>&nbsp; <BR>Table B3-47 on page B3-769 shows how the MPU_CTRL.HFNMIENA and MPU_CTRL.ENABLE bits affect the handling of these instructions when issued by an exception handler for HardFault, or NMI, or for another exception when FAULTMASK is set to 1, and when this is different for other privileged software.</P>
<P>Table B3-47 Effect of MPU_CTRL settings on unprivileged instructions</P>
<P>Table B3-47 shows whether the MPU configuration or the default memory map determines the attributes for the address accessed by the unprivileged load or store instruction. Handling of the instruction access then depends on those attributes. If the attributes do not permit an unprivileged access then the memory system generates a fault. If the access is from the NMI or HardFault handler, or when execution priority is -1 because FAULTMASK is set to 1, then this fault causes a lockup.