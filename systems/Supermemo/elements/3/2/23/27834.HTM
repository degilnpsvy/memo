The SP registers 
<P></P>
<P><FONT class=extract>An ARMv7-M processor implements two stacks:<BR>&#8226; the Main stack, SP_main or MSP<BR>&#8226; the Process stack, SP_process or PSP.</FONT></P>
<P><FONT class=extract>The stack pointer, SP, banks SP_main and SP_process. The current stack depends on the mode and, in Thread mode, the value of the CONTROL.SPSEL bit, see The special-purpose CONTROL register on page B1-628. A reset selects and initializes SP_main, see Reset behavior on page B1-641.</FONT></P>
<P><FONT class=extract>ARMv7-M implementations treat SP bits [1:0] as RAZ/WI. ARM strongly recommends that software treats SP bits [1:0] as SBZP for maximum portability across ARMv7 profiles.</FONT></P>
<P><FONT class=extract>The processor selects the SP used by an instruction that references the SP explicitly according to the function LookUpSP() described in Pseudocode details for ARM core register access on page B1-629.</FONT></P>
<P>The stack pointer that is used in exception entry and exit is described in the pseudocode sequences of the exception entry and exit, see Exception entry behavior on page B1-643 and Exception return behavior on page B1-652t.