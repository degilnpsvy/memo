<H1 lang=en id=firstHeading class=firstHeading style='OVERFLOW: visible; FONT-SIZE: 1.8em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(162,169,177) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0.25em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>Fixed-point combinator</H1>
<DIV id=bodyContent class=mw-body-content style="FONT-SIZE: 0.87em; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(34,34,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; Z-INDEX: 0; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px">
<DIV id=siteSub style="FONT-SIZE: 12px; DISPLAY: block">From Wikipedia, the free encyclopedia</DIV>
<DIV id=contentSub style="FONT-SIZE: 11px; WIDTH: auto; COLOR: rgb(84,84,84); MARGIN: 0px 0px 1.4em 1em; LINE-HEIGHT: 1.2em"><SPAN class=mw-redirectedfrom>&nbsp;&nbsp;(Redirected from<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Fixpoint operator" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixpoint_operator&amp;redirect=no">Fixpoint operator</A>)</SPAN></DIV>
<DIV id=jump-to-nav class=mw-jump style="OVERFLOW: hidden; MARGIN-BOTTOM: 1.4em; HEIGHT: 0px; ZOOM: 1; MARGIN-TOP: -1.4em; user-select: none"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#mw-head"></A><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#p-search"></A></DIV>
<DIV lang=en id=mw-content-text class=mw-content-ltr style="DIRECTION: ltr" dir=ltr>
<P style="MARGIN: 0.5em 0px">In<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Computer science" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Computer_science">computer science</A>, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>fixed-point combinator</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>fixpoint combinator<SUP id=cite_ref-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-1">[1]</A></SUP></B>) is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Higher-order function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Higher-order_function">higher-order function</A><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>that satisfies the equation</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ f=f\ (y\ f)\ \ {\text{ for all }}f}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 22.37ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ f=f\ (y\ f)\ \ {\text{   for all }}f" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6ddae1bc601024ec851d2146dcfb1ca9983d0dd5"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">or in words:<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y,</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>when applied to an arbitrary function<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f,</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>yields the same result as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>applied to the result of applying<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I>. It is so named because, by setting<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x=y\ f}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 7.48ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x=y\ f" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9109cd93be38eef0c020d3509f71501e8623e617"></SPAN>, it represents a solution to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Fixed point (mathematics)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed_point_(mathematics)">fixed point</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>equation,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x=f\ x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 7.65ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x=f\ x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/dab56687e8c35983e95028b20feac81105fff88d"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fixed point</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>of a function<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a value that doesn't change under the application of the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I>.</P>
<P style="MARGIN: 0.5em 0px">Functions that satisfy the equation for<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>expand as,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ f=f\ (f\ (\ldots f\ (y\ f)\ldots ))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 26.52ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle y\ f=f\ (f\ (\ldots f\ (y\ f)\ldots ))}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c14391622bd3f99db2ca41899d700f1fc3a942e7"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">A particular implementation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Haskell Curry" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Haskell_Curry">Curry's</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>paradoxical combinator<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I>, represented in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus">lambda calculus</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>by</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle Y=\lambda f.(\lambda x.f\ (x\ x))\ (\lambda x.f\ (x\ x))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 34.25ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="Y=\lambda f.(\lambda x.f\ (x\ x))\ (\lambda x.f\ (x\ x))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/56e983b6b234595a6b3b420f774a27401ce396c9"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">This combinator may be used in implementing<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Curry's paradox" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Curry%27s_paradox">Curry's paradox</A>. The heart of Curry's paradox is that untyped lambda calculus is unsound as a deductive system, and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator demonstrates that by allowing an anonymous expression to represent zero, or even many values. This is inconsistent in mathematical logic.</P>
<P style="MARGIN: 0.5em 0px">Applied to a function with one variable the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator usually does not terminate. More interesting results are obtained by applying the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator to functions of two or more variables. The second variable may be used as a counter, or index. The resulting function behaves like a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>while</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>or a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>for</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>loop in an imperative language.</P>
<P style="MARGIN: 0.5em 0px">Used in this way the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator implements simple recursion. In the lambda calculus it is not possible to refer to the definition of a function in a function body. Recursion may only be achieved by passing in a function as a parameter. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator demonstrates this style of programming.</P>
<P style="MARGIN: 0.5em 0px"></P>
<DIV id=toc class=toc style="FONT-SIZE: 13px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; ZOOM: 1; PADDING-BOTTOM: 7px; PADDING-TOP: 7px; PADDING-LEFT: 7px; BORDER-LEFT: rgb(162,169,177) 1px solid; DISPLAY: table; PADDING-RIGHT: 7px; BACKGROUND-COLOR: rgb(248,249,250)">
<DIV id=toctitle style="DIRECTION: ltr; TEXT-ALIGN: center">
<H2 style="OVERFLOW: hidden; FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: sans-serif; BORDER-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; BORDER-LEFT: 0px; DISPLAY: inline; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px">Contents</H2><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=toctoggle style="FONT-SIZE: 12px; user-select: none">&nbsp;[<A role=button tabIndex=0 id=togglelink style="CURSOR: pointer; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)">hide</A>]&nbsp;</SPAN></DIV>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-1 tocsection-1" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Introduction"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Introduction</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-2" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Values_and_domains"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Values and domains</SPAN></A></LI>
<LI class="toclevel-2 tocsection-3" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Function_versus_implementation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Function versus implementation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-4" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#What_is_a_.22combinator.22.3F"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">What is a "combinator"?</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-5" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Usage"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Usage</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-6" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#The_factorial_function"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">2.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">The factorial function</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-7" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Fixed_point_combinators_in_lambda_calculus"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Fixed point combinators in lambda calculus</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-8" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Equivalent_definition_of_a_fixed-point_combinator"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Equivalent definition of a fixed-point combinator</SPAN></A></LI>
<LI class="toclevel-2 tocsection-9" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Derivation_of_the_Y_combinator"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Derivation of the Y combinator</SPAN></A></LI>
<LI class="toclevel-2 tocsection-10" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Other_fixed-point_combinators"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Other fixed-point combinators</SPAN></A></LI>
<LI class="toclevel-2 tocsection-11" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Strict_fixed_point_combinator"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Strict fixed point combinator</SPAN></A></LI>
<LI class="toclevel-2 tocsection-12" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Non-standard_fixed-point_combinators"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Non-standard fixed-point combinators</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-13" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Implementation_in_other_languages"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Implementation in other languages</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-14" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Lazy_functional_implementation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Lazy functional implementation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-15" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Strict_functional_implementation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Strict functional implementation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-16" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Imperative_language_implementation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Imperative language implementation</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-17" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Typing"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Typing</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-18" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Type_for_the_Y_combinator"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Type for the Y combinator</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-19" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#General_information"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">6</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">General information</SPAN></A></LI>
<LI class="toclevel-1 tocsection-20" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#See_also"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">See also</SPAN></A></LI>
<LI class="toclevel-1 tocsection-21" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#Notes"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">8</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Notes</SPAN></A></LI>
<LI class="toclevel-1 tocsection-22" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#References"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">9</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">References</SPAN></A></LI>
<LI class="toclevel-1 tocsection-23" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#External_links"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">10</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">External links</SPAN></A></LI></UL></DIV>
<P style="MARGIN: 0.5em 0px"></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Introduction class=mw-headline>Introduction</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Introduction" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=1">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator is an implementation of the fixed-point combinator in lambda calculus. Fixed-point combinators may also be easily defined in other functional and imperative languages. The implementation in lambda calculus is more difficult due to limitations in lambda calculus.</P>
<P style="MARGIN: 0.5em 0px">The fixed combinator may be used in a number of different areas,</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title=Mathematics style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mathematics">General mathematics</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus">Untyped lambda calculus</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Typed_lambda_calculus">Typed lambda calculus</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Functional programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_programming">Functional programming</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Imperative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Imperative_programming">Imperative programming</A></LI></UL>
<P style="MARGIN: 0.5em 0px">Fixed point combinators may be applied to a range of different functions, but normally will not terminate unless there is an extra parameter. Even with lazy evaluation when the function to be fixed refers to its parameter, another call to the function is invoked. The calculation never gets started. The extra parameter is needed to trigger the start of the calculation.</P>
<P style="MARGIN: 0.5em 0px">The type of the fixed point is the return type of the function being fixed. This may be a real or a function or any other type.</P>
<P style="MARGIN: 0.5em 0px">In the untyped lambda calculus, the function to apply the fix point combinator to may be expressed using an encoding, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_encoding">Church encoding</A>. In this case particular lambda terms (which define functions) are considered as values. "Running" (beta reducing) the fixed point combinator on the encoding gives a lambda term for the result which may then be interpreted as fixed point value.</P>
<P style="MARGIN: 0.5em 0px">Alternately a function may be considered as a lambda term defined purely in lambda calculus.</P>
<P style="MARGIN: 0.5em 0px">These different approaches affect how a mathematician and a programmer may regard a fixed point combinator. A lambda calculus mathematician may see the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator applied to a function as being an expression satisfying the fixed point equation, and therefore a solution.</P>
<P style="MARGIN: 0.5em 0px">In contrast a person only wanting to apply a fixed point combinator to some general programming task may see it only as a means of implementing recursion.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Values_and_domains class=mw-headline>Values and domains</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Values and domains" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=2">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Every expression has one value. This is true in general mathematics and it must be true in lambda calculus. This means that in lambda calculus, applying a fixed point combinator to a function gives you an expression whose value is the fixed point of the function.</P>
<P style="MARGIN: 0.5em 0px">However this is a value in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Deductive lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Deductive_lambda_calculus#Domain_of_lambda_calculus">lambda calculus domain</A>, it may not correspond to any value in the domain of the function, so in a practical sense it is not necessarily a fixed point of the function, and only in the lambda calculus domain is it a fixed point of the equation.</P>
<P style="MARGIN: 0.5em 0px">For example, consider,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x^{2}=-1\Rightarrow x={\frac {-1}{x}}\Rightarrow f\ x={\frac {-1}{x}}\land Y\ f=x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 5.17ex; BORDER-RIGHT: 0px; WIDTH: 44.87ex; VERTICAL-ALIGN: -1.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x^{2}=-1\Rightarrow x={\frac {-1}{x}}\Rightarrow f\ x={\frac {-1}{x}}\land Y\ f=x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/859ff688bcd9ba9d037d4c48d865574e72a9d441"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px"><A title="Church encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_encoding#Division">Division</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_encoding#Signed_numbers">Signed numbers</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>may be implemented in the Church encoding, so<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>may be represented by a lambda term. This equation has no solution in the real numbers. But in the domain of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Complex number" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Complex_number">complex numbers</A><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>i</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>-i</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>are solutions. This demonstrates that there may be solutions to an equation in another domain. However the lambda term for the solution for the above equation is weirder than that. The lambda term<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle Y\ f}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 3.65ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="Y\ f" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/89ed6dbee4552b82466b371398bf02a21f41df11"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>represents the state where x could be either<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>i</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>-i</I>, as one value. The information distinguishing these two values has been lost, in the change of domain.</P>
<P style="MARGIN: 0.5em 0px">For the lambda calculus mathematician, this is a consequence of the definition of lambda calculus. For the programmer, it means that the beta reduction of the lambda term will loop forever, never reaching a normal form.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Function_versus_implementation class=mw-headline>Function versus implementation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Function versus implementation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=3">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The fixed-point combinator may be defined in mathematics and then implemented in other languages. General mathematics defines a function based on its<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Extensionality style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Extensionality">extensional</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>properties.<SUP id=cite_ref-2 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-2">[2]</A></SUP>That is, two functions are equal if they perform the same mapping. Lambda calculus and programming languages regard function identity as an<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Intensional definition" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Intensional_definition">intensional</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>property. A functions identity is based on its implementation.</P>
<P style="MARGIN: 0.5em 0px">A lambda calculus function (or term) is an implementation of a mathematical function. In the lambda calculus there are a number of combinator (implementations) that satisfy the mathematical definition of a fixed-point combinator.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=What_is_a_.22combinator.22.3F class=mw-headline>What is a "combinator"?</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title='Edit section: What is a "combinator"?' style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=4">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Combinatory logic" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Combinatory_logic">combinator</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a particular type of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Higher-order function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Higher-order_function">higher-order function</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that may be used in defining functions without using variables. The combinators may be combined to direct values to their correct places in the expression without ever naming them as variables.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Usage class=mw-headline>Usage</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Usage" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=5">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">Usually when applied to functions of one parameter, implementations of the fixed point combinator fail to terminate. Functions with extra parameters are more interesting.</P>
<P style="MARGIN: 0.5em 0px">The Y combinator is an example of what makes the Lambda calculus inconsistent. So it should be regarded with suspicion. However it is safe to consider the Y combinator when defined in mathematic logic only. The definition is,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ f=f\ (y\ f)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 12.88ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ f=f\ (y\ f)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/76760ac4bedbc0a3ecce3b77e1e5be32a7585dd2"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">It is easy to see how<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>may be applied to one variable. Applying it to two or more variables requires adding them to the equation,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ f\ x=f\ (y\ f)\ x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 16.72ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ f\ x=f\ (y\ f)\ x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/25b13b6fe50ebbe2f7f1f6747153f8f09b76c849"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">This version of the equation must be shown consistent with the previous by the definition for equality of functions,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\forall xf\ x=g\ x)\equiv f=g}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 22.47ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\forall xf\ x=g\ x)\equiv f=g" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6c41a7dc4803e4b2c3032a6fd08d9927914d1a76"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">This definition allows the two equations for y to be regarded as equivalent, provided that the domain of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is well defined. So if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>has multiple parameters the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>may still be regarded as a fixed point, with some restrictions.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=The_factorial_function class=mw-headline>The factorial function</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: The factorial function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=6">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The factorial function provides a good example of how the fixed point combinator may be applied to functions of two variables. The result demonstrates simple recursion, as would be implemented in a single loop, in an imperative language. The definition of numbers used is explained in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_encoding">Church encoding</A>. The fixed point function is,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle F\ f\ n=(\operatorname {IsZero} \ n)\ 1\ (\operatorname {multiply} \ n\ (f\ (\operatorname {pred} \ n)))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 47.53ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="F\ f\ n=(\operatorname {IsZero} \ n)\ 1\ (\operatorname {multiply} \ n\ (f\ (\operatorname {pred} \ n)))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/3ed62f51544e9a3bec2e33324ed7d9008b6cfbe9"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">so<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y F</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ F\ n=F\ (y\ F)\ n}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 18.23ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ F\ n=F\ (y\ F)\ n" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/52885491c42ee087dcc9949e55d9a3e2142fcf7d"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">or</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ F\ n=(\operatorname {IsZero} \ n)\ 1\ (\operatorname {multiply} \ n\ ((y\ F)\ (\operatorname {pred} \ n)))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 51.44ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ F\ n=(\operatorname {IsZero} \ n)\ 1\ (\operatorname {multiply} \ n\ ((y\ F)\ (\operatorname {pred} \ n)))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c068803e081bd28dde8d97b80730e1901ec00273"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Setting<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ F=\operatorname {fact} }</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 10.46ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ F=\operatorname {fact} " src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fc482de01da63d1b8534713087add7e556908e48"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \operatorname {fact} \ n=(\operatorname {IsZero} \ n)\ 1\ (\operatorname {multiply} \ n\ (\operatorname {fact} \ (\operatorname {pred} \ n)))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 51.1ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\operatorname {fact} \ n=(\operatorname {IsZero} \ n)\ 1\ (\operatorname {multiply} \ n\ (\operatorname {fact} \ (\operatorname {pred} \ n)))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/020eccd7c610c5ca2740dc549af807d50eb0bbe3"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">this definition is equivalent to the mathematical definition of factorial,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \operatorname {fact} \ n=\operatorname {if} n=0\operatorname {then} 1\operatorname {else} n*\operatorname {fact} \ (n-1)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 43.43ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\operatorname {fact} \ n=\operatorname {if} n=0\operatorname {then} 1\operatorname {else} n*\operatorname {fact} \ (n-1)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/71594fd2189d054e356c35de12debdf7932a546d"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">This definition puts<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>F</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the role of the body of a loop to be iterated.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Fixed_point_combinators_in_lambda_calculus class=mw-headline>Fixed point combinators in lambda calculus</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Fixed point combinators in lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=7">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator, discovered by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Haskell Curry" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Haskell_Curry">Haskell B. Curry</A>, is defined as:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle Y=\lambda f.(\lambda x.f\ (x\ x))\ (\lambda x.f\ (x\ x))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 34.25ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="Y=\lambda f.(\lambda x.f\ (x\ x))\ (\lambda x.f\ (x\ x))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/56e983b6b234595a6b3b420f774a27401ce396c9"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Beta reduction of this gives,</P>
<TABLE style="FONT-SIZE: 14px" cellPadding=0>
<TBODY>
<TR>
<TD><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle Y\ g}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 3.49ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="Y\ g" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/10c886e541e92257a3830f771b7aa6dde854753b"></SPAN></TD>
<TD><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle =(\lambda f.(\lambda x.f\ (x\ x))\ (\lambda x.f\ (x\ x)))\ g}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 35.36ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="=(\lambda f.(\lambda x.f\ (x\ x))\ (\lambda x.f\ (x\ x)))\ g" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ace1a138819e323d1b4836f2ffb90adb9233125e"></SPAN></TD>
<TD style="PADDING-LEFT: 30px">(by definition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I>)</TD></TR>
<TR>
<TD></TD>
<TD><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle =(\lambda x.g\ (x\ x))\ (\lambda x.g\ (x\ x))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 27.8ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="=(\lambda x.g\ (x\ x))\ (\lambda x.g\ (x\ x))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f50181f6914d84d4e614dfbcf2291be2be72b5dc"></SPAN></TD>
<TD style="PADDING-LEFT: 30px">(by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=&#914;-reduction class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/%CE%92-reduction">&#946;-reduction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of &#955;f: applied Y to g)</TD></TR>
<TR>
<TD></TD>
<TD><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle =g((\lambda x.g\ (x\ x))\ (\lambda x.g\ (x\ x)))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 30.75ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="=g((\lambda x.g\ (x\ x))\ (\lambda x.g\ (x\ x)))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/13f44b45d40b412ba8b41678180281afa22740d4"></SPAN></TD>
<TD style="PADDING-LEFT: 30px">(by &#946;-reduction of &#955;x: applied left function to right function)</TD></TR>
<TR>
<TD></TD>
<TD><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle =g\ (Y\ g)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 9.49ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="=g\ (Y\ g)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/46b5bc5ab46552672b8160c6d8eeac1b7f6d43e0"></SPAN></TD>
<TD style="PADDING-LEFT: 30px">(by second equality)</TD></TR></TBODY></TABLE>
<P style="MARGIN: 0.5em 0px">By repeatedly applying this equality we get,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle Y\ g=g\ (Y\ g)=g\ (g\ (Y\ g))=g\ (\ldots g\ (Y\ g)\ldots )}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 47.21ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="Y\ g=g\ (Y\ g)=g\ (g\ (Y\ g))=g\ (\ldots g\ (Y\ g)\ldots )" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e5f5149dad9b24e048686eee9a716130926eefe6"></SPAN></DD></DL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Equivalent_definition_of_a_fixed-point_combinator class=mw-headline>Equivalent definition of a fixed-point combinator</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Equivalent definition of a fixed-point combinator" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=8">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">This fixed-point combinator may be defined as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>in,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x=f\ x\land y\ f=x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 17.73ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x=f\ x\land y\ f=x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/81a6f5e88a2369d3ba13499043dca00151b118da"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">An expression for y may be derived using rules from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Let expression" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Let_expression#Let_definition_in_mathematics">definition of a let expression</A>. Firstly using the rule,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\exists xE\land F)\iff \operatorname {let} x:E\operatorname {in} F}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 30.07ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\exists xE\land F)\iff \operatorname {let} x:E\operatorname {in} F" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/84e8012d98c7e4b970ec2be01d6b9b148b7d4fa4"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \operatorname {let} x=f\ x\operatorname {in} y\ f=x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 20.88ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\operatorname {let} x=f\ x\operatorname {in} y\ f=x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/4ad78b32ad634c6f07799fc4e4effa14ce473739"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Also using,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\not \in \operatorname {FV} (E)\land x\in \operatorname {FV} (F)\to \operatorname {let} x:G\operatorname {in} E\ F=E\ (\operatorname {let} x:G\operatorname {in} F)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 63.26ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x\not \in \operatorname {FV} (E)\land x\in \operatorname {FV} (F)\to \operatorname {let} x:G\operatorname {in} E\ F=E\ (\operatorname {let} x:G\operatorname {in} F)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a9acd37658a221df3a5267ee2a809de7cbcd1533"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">gives</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y\ f=\operatorname {let} x=f\ x\operatorname {in} x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 20.88ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y\ f=\operatorname {let} x=f\ x\operatorname {in} x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6a37a2e4e6537e349fa8760cf5a6aeeec8979769"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Then using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Deductive lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Deductive_lambda_calculus#Eta_reduction_as_mathematics">eta reduction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>rule,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle f\ x=y\iff f=\lambda x.y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 23.7ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="f\ x=y\iff f=\lambda x.y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/20592d32f1e928fe1463abc607a676e5a4abaed1"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y=\lambda f.\operatorname {let} x=f\ x\operatorname {in} x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 22.71ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="y=\lambda f.\operatorname {let} x=f\ x\operatorname {in} x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/efd5f60320e2d1dd87f9feaceafb40235f9a7eeb"></SPAN></DD></DL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Derivation_of_the_Y_combinator class=mw-headline>Derivation of the Y combinator</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Derivation of the Y combinator" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=9">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Curry's Y combinator may be readily obtained from the definition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I>.<SUP id=cite_ref-3 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-3">[3]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Starting with,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.\operatorname {let} x=f\ x\operatorname {in} x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 18.43ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.\operatorname {let} x=f\ x\operatorname {in} x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0e25fc97e7bf5afa669559f5da31dbcedb7279df"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">A lambda abstraction does not support reference to the variable name, in the applied expression, so<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>must be passed in as a parameter to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>. We can think of this as replacing<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>by<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x x</I>, but formally this is not correct. Instead defining<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \forall z,y\ z=x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 10.74ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\forall z,y\ z=x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0cca2480357259e716b5cdea0661f59f2cb87280"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.\operatorname {let} y\ z=f\ (y\ z)\operatorname {in} y\ z}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 24.78ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.\operatorname {let} y\ z=f\ (y\ z)\operatorname {in} y\ z" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/3afdf1e35ea13f59586f18560a18afe9fc9fac6e"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">The let expression may be regarded as the definition of the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I>, where<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the parameter. Instantiation<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the call gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.\operatorname {let} y\ z=f\ (y\ z)\operatorname {in} y\ y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 24.84ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.\operatorname {let} y\ z=f\ (y\ z)\operatorname {in} y\ y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/42799a9dbcc6837f3271e6a1a3336090812470f9"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">And because the parameter<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>always passes the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I>.</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.\operatorname {let} y\ z=f\ (z\ z)\operatorname {in} y\ y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 24.78ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.\operatorname {let} y\ z=f\ (z\ z)\operatorname {in} y\ y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/7890beb34d45aa58f7ed77a0b88a8d0a7927f618"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Deductive lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Deductive_lambda_calculus#Eta_reduction_as_mathematics">eta reduction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>rule,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle f\ x=y\equiv f=\lambda x.y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 19.9ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="f\ x=y\equiv f=\lambda x.y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/2df5a4e4f0762b8a59a3046a789cfee78801a770"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.\operatorname {let} y=\lambda z.f\ (z\ z)\operatorname {in} y\ y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 26.61ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.\operatorname {let} y=\lambda z.f\ (z\ z)\operatorname {in} y\ y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f5fcbefe8bf71386d4382f7d830ff4e4878971ee"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Let expression" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Let_expression#Let_definition_in_mathematics">let expression may be expressed as a lambda abstraction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>using,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle n\not \in FV(E)\to (\operatorname {let} n=E\operatorname {in} L\equiv (\lambda n.L)\ E)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 43.22ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="n\not \in FV(E)\to (\operatorname {let} n=E\operatorname {in} L\equiv (\lambda n.L)\ E)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/047b4be24ef22146ac0862c981fe65b3a5aac285"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">gives,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.(\lambda y.y\ y)\ (\lambda z.f\ (z\ z))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 24.41ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.(\lambda y.y\ y)\ (\lambda z.f\ (z\ z))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/991d92d47c50a9d0e23470864edb93c8979a181a"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">This is possibly the simplest implementation of a fixed point combinator in lambda calculus. However one beta reduction gives the more symmetrical form of Curry's Y combinator.</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda f.(\lambda z.f\ (z\ z))\ (\lambda z.f\ (z\ z))}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 27.91ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda f.(\lambda z.f\ (z\ z))\ (\lambda z.f\ (z\ z))" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e6fe58fe689548dfc33e6c8d77a22ed825e865e0"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">See also<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Let expression" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Let_expression#Conversion_from_let_to_lambda_expressions">translating between let and lambda expressions</A>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Other_fixed-point_combinators class=mw-headline>Other fixed-point combinators</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Other fixed-point combinators" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=10">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In untyped lambda calculus fixed-point combinators are not especially rare. In fact there are infinitely many of them.<SUP id=cite_ref-bimbo_4-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-bimbo-4">[4]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>In 2005 Mayer Goldberg showed that the set of fixed-point combinators of untyped lambda calculus is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Recursively enumerable" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursively_enumerable">recursively enumerable</A>.<SUP id=cite_ref-gold_5-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-gold-5">[5]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator can be expressed in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="SKI combinator calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/SKI_combinator_calculus">SKI-calculus</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>as</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>Y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= S (K (S I I)) (S (S (K S) K) (K (S I I)))</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">The simplest fixed point combinator in the SK-calculus, found by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="John Tromp (page does not exist)" class=new style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(165,88,88)" href="https://en.wikipedia.org/w/index.php?title=John_Tromp&amp;action=edit&amp;redlink=1">John Tromp</A>, is</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>Y'</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= S S K (S (K (S S (S (S S K)))) K)</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">although note that it is not in normal form, which is longer. This combinator corresponds to the lambda expression</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>Y'</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= (&#955;x. &#955;y. x y x) (&#955;y. &#955;x. y (x y x))</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">The following fixed-point combinator is simpler than the Y combinator, and &#946;-reduces into the Y combinator; it is sometimes cited as the Y combinator itself:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>X</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= &#955;f.(&#955;x.x x) (&#955;x.f (x x))</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Another common fixed point combinator is the Turing fixed-point combinator (named after its discoverer,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Alan Turing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Alan_Turing">Alan Turing</A>):</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>&#920;</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= (&#955;x. &#955;y. (y (x x y))) (&#955;x. &#955;y. (y (x x y)))</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">It also has a simple call-by-value form:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>&#920;</I><SUB style="FONT-SIZE: 13px; LINE-HEIGHT: 1"><B>v</B></SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>= (&#955;x. &#955;y. (y (&#955;z. x x y z))) (&#955;x. &#955;y. (y (&#955;z. x x y z)))</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">The analog for<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Mutual recursion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mutual_recursion">mutual recursion</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>polyvariadic fix-point combinator</I>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SUP id=cite_ref-6 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-6">[6]</A></SUP><SUP id=cite_ref-7 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-7">[7]</A></SUP><SUP id=cite_ref-8 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-8">[8]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>which may be denoted Y*.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Strict_fixed_point_combinator class=mw-headline>Strict fixed point combinator</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Strict fixed point combinator" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=11">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator will work in strict languages (or where normal order is applied). The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator has the next argument defined explicitly, preventing the expansion of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>g in the right hand side of the definition:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>Z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>g v = g (<I>Z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>g) v</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">and in lambda calculus is an eta-expansion:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none"><I>Z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= &#955;f.(&#955;x.f (&#955;v.((x x) v))) (&#955;x.f (&#955;v.((x x) v)))</SPAN></DD></DL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Non-standard_fixed-point_combinators class=mw-headline>Non-standard fixed-point combinators</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Non-standard fixed-point combinators" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=12">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In untyped lambda calculus there are terms that have the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="B&#246;hm tree" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/B%C3%B6hm_tree">B&#246;hm tree</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a fixed-point combinator, that is they have the same infinite extension &#955;x.x (x (x ... )). These are called<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>non-standard fixed-point combinators</I>. Any fixed-point combinator is also a non-standard one, but not all non-standard fixed-point combinators are fixed-point combinators because some of them fail to satisfy the equation that defines the "standard" ones. These strange combinators are called<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>strictly non-standard fixed-point combinators</I>; an example is the following combinator;</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none">N = B M (B (B M) B)</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">where,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none">B = &#955;x,y,z.x (y z)</SPAN></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=texhtml style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none">M = &#955;x.x x</SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">The set of non-standard fixed-point combinators is not recursively enumerable.<SUP id=cite_ref-gold_5-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-gold-5">[5]</A></SUP></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Implementation_in_other_languages class=mw-headline>Implementation in other languages</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Implementation in other languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=13">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">Note that the Y combinator is a particular implementation of a fixed point combinator in lambda calculus. Its structure is determined by the limitations of lambda calculus. It is not necessary or helpful to use this structure in implementing the fixed point combinator in other languages.</P>
<P style="MARGIN: 0.5em 0px">Simple examples of fixed point combinators implemented in some<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Programming paradigm" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Programming_paradigm">programming paradigms</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>are given below.</P>
<P style="MARGIN: 0.5em 0px">For examples of implementations of the fixed point combinators in various languages see,</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(102,51,102); PADDING-RIGHT: 13px" href="http://rosettacode.org/wiki/Y_combinator" rel=nofollow>Rosetta code - Y combinator</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(102,51,102); PADDING-RIGHT: 13px" href="http://arcfn.com/2009/03/y-combinator-in-arc-and-java.html" rel=nofollow>Java code</A>.</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(102,51,102); PADDING-RIGHT: 13px" href="https://stackoverflow.com/questions/152084/fixed-point-combinators-in-c/154267#154267" rel=nofollow>C++ code</A>.</LI></UL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Lazy_functional_implementation class=mw-headline>Lazy functional implementation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Lazy functional implementation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=14">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In a language that supports<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lazy evaluation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lazy_evaluation">lazy evaluation</A>, like in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Haskell (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Haskell_(programming_language)">Haskell</A>, it is possible to define a fixed-point combinator using the defining equation of the fixed-point combinator which is conventionally named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">fix</CODE>. The definition is given here, followed by some usage examples.</P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"> <SPAN class=n>fix</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">::</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN><SPAN class=p>)</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN>
 <SPAN class=n>fix</SPAN> <SPAN class=n>f</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">=</SPAN> <SPAN class=n>f</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>fix</SPAN> <SPAN class=n>f</SPAN><SPAN class=p>)</SPAN>                <SPAN class=c1 style="COLOR: rgb(64,128,128); FONT-STYLE: italic">-- Lambda lifted</SPAN>
 <SPAN class=c1 style="COLOR: rgb(64,128,128); FONT-STYLE: italic">-- alternative:</SPAN>
 <SPAN class=c1 style="COLOR: rgb(64,128,128); FONT-STYLE: italic">-- fix f = let x = f x in x      -- Lambda dropped</SPAN>
 
 <SPAN class=n>fix</SPAN> <SPAN class=p>(</SPAN><SPAN class=nf style="COLOR: rgb(0,0,255)">\</SPAN><SPAN class=n>x</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">9</SPAN><SPAN class=p>)</SPAN>                    <SPAN class=c1 style="COLOR: rgb(64,128,128); FONT-STYLE: italic">-- this evaluates to 9</SPAN>
 <SPAN class=n>factabs</SPAN> <SPAN class=n>fact</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">=</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN>               <SPAN class=c1 style="COLOR: rgb(64,128,128); FONT-STYLE: italic">-- factabs is F from the lambda calculus example</SPAN>
 <SPAN class=n>factabs</SPAN> <SPAN class=n>fact</SPAN> <SPAN class=n>x</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">=</SPAN> <SPAN class=n>x</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">*</SPAN> <SPAN class=n>fact</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>x</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">-</SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>)</SPAN>
 <SPAN class=p>(</SPAN><SPAN class=n>fix</SPAN> <SPAN class=n>factabs</SPAN><SPAN class=p>)</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">5</SPAN>                  <SPAN class=c1 style="COLOR: rgb(64,128,128); FONT-STYLE: italic">-- evaluates to 120</SPAN>
</PRE></DIV>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Strict_functional_implementation class=mw-headline>Strict functional implementation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Strict functional implementation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=15">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In a strict functional language the argument to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is expanded beforehand, yielding an infinite call sequence,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle f\ (f...(f\ (\operatorname {fix} \ f))...)\ x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 23.58ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle f\ (f...(f\ (\operatorname {fix} \ f))...)\ x}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/2b4a07994a8d0546f7d1a69ef8a03db511aeca7d"></SPAN>.</DD></DL>
<P style="MARGIN: 0.5em 0px">This may be resolved by defining fix with an extra parameter.</P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">let</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">rec</SPAN> <SPAN class=n>fix</SPAN> <SPAN class=n>f</SPAN> <SPAN class=n>x</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>f</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=n>fix</SPAN> <SPAN class=n>f</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN> <SPAN class=n>x</SPAN> <SPAN class=c style="COLOR: rgb(64,128,128); FONT-STYLE: italic">(* note the extra x; here fix f = \x-&gt; f (fix f) x *)</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">let</SPAN> <SPAN class=n>factabs</SPAN> <SPAN class=n>fact</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">function</SPAN>   <SPAN class=c style="COLOR: rgb(64,128,128); FONT-STYLE: italic">(* factabs has extra level of lambda abstraction *)</SPAN>
   <SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">-&gt;</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN>
 <SPAN class=o style="COLOR: rgb(102,102,102)">|</SPAN> <SPAN class=n>x</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">-&gt;</SPAN> <SPAN class=n>x</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">*</SPAN> <SPAN class=n>fact</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=n>x</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">-</SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">let</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">_</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=n>fix</SPAN> <SPAN class=n>factabs</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">5</SPAN>       <SPAN class=c style="COLOR: rgb(64,128,128); FONT-STYLE: italic">(* evaluates to "120" *)</SPAN>
</PRE></DIV>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Imperative_language_implementation class=mw-headline>Imperative language implementation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Imperative language implementation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=16">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">This example is a slightly interpretive implementation of a fixed point combinator. A class is used to contain the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fix</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>function, called<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fixer</I>. The function to be fixed is contained in a class that inherits from fixer. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fix</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>function accesses the function to be fixed as a virtual function. As for the strict functional definition,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fix</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is explicitly given an extra parameter<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>, which means that lazy evaluation is not needed.</P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">template</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN> <SPAN class=n>R</SPAN><SPAN class=p>,</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">typename</SPAN> <SPAN class=n>D</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&gt;</SPAN>
<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">class</SPAN> <SPAN class=nc style="FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">fixer</SPAN>
<SPAN class=p>{</SPAN>
<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">public</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">:</SPAN>
    <SPAN class=n>R</SPAN> <SPAN class=n>fix</SPAN><SPAN class=p>(</SPAN><SPAN class=n>D</SPAN> <SPAN class=n>x</SPAN><SPAN class=p>)</SPAN>
    <SPAN class=p>{</SPAN>
        <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN> <SPAN class=n>f</SPAN><SPAN class=p>(</SPAN><SPAN class=n>x</SPAN><SPAN class=p>);</SPAN>
    <SPAN class=p>}</SPAN>
<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">private</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">:</SPAN>
    <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">virtual</SPAN> <SPAN class=n>R</SPAN> <SPAN class=n>f</SPAN><SPAN class=p>(</SPAN><SPAN class=n>D</SPAN><SPAN class=p>)</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>;</SPAN>
<SPAN class=p>};</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">class</SPAN> <SPAN class=nc style="FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">fact</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">:</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">public</SPAN> <SPAN class=n>fixer</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&lt;</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">long</SPAN><SPAN class=p>,</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">long</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">&gt;</SPAN>
<SPAN class=p>{</SPAN>
    <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">virtual</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">long</SPAN> <SPAN class=n>f</SPAN><SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">long</SPAN> <SPAN class=n>x</SPAN><SPAN class=p>)</SPAN>
    <SPAN class=p>{</SPAN>
        <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">if</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>x</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">==</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">0</SPAN><SPAN class=p>)</SPAN>
        <SPAN class=p>{</SPAN>
            <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN> <SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>;</SPAN>
        <SPAN class=p>}</SPAN>
        <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">return</SPAN> <SPAN class=n>x</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">*</SPAN> <SPAN class=n>fix</SPAN><SPAN class=p>(</SPAN><SPAN class=n>x</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">-</SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">1</SPAN><SPAN class=p>);</SPAN>
    <SPAN class=p>}</SPAN>
<SPAN class=p>};</SPAN>

<SPAN class=kt style="COLOR: rgb(176,0,64)">long</SPAN> <SPAN class=n>result</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>fact</SPAN><SPAN class=p>().</SPAN><SPAN class=n>fix</SPAN><SPAN class=p>(</SPAN><SPAN class=mi style="COLOR: rgb(102,102,102)">5</SPAN><SPAN class=p>);</SPAN>
</PRE></DIV>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Typing class=mw-headline>Typing</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Typing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=17">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">In<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Polymorphic lambda calculus" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Polymorphic_lambda_calculus">polymorphic lambda calculus</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<A title="System F" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/System_F">System F</A>) a polymorphic fixed-point combinator has type;</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">&#8704;a.(a &#8594; a) &#8594; a</DD></DL>
<P style="MARGIN: 0.5em 0px">where<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>a</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Type variable" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Type_variable">type variable</A>. That is,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fix</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>takes a function, which maps a &#8594; a and uses it to return a value of type a.</P>
<P style="MARGIN: 0.5em 0px">In the simply typed lambda calculus extended with<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Recursive type" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursive_type">recursive types</A>, fixed-point operators can be written, but the type of a "useful" fixed-point operator (one whose application always returns) may be restricted.</P>
<P style="MARGIN: 0.5em 0px">In the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Simply typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus">simply typed lambda calculus</A>, the fixed-point combinator Y cannot be assigned a type<SUP id=cite_ref-9 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-9">[9]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>because at some point it would deal with the self-application sub-term<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x~x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 3.26ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x~x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e36de5dff3a40e4bcd904074607097a76ad64dc2"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>by the application rule:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle {\Gamma \vdash x\!:\!t_{1}\to t_{2}\quad \Gamma \vdash x\!:\!t_{1}} \over {\Gamma \vdash x~x\!:\!t_{2}}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 5.84ex; BORDER-RIGHT: 0px; WIDTH: 25.91ex; VERTICAL-ALIGN: -2.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{{\Gamma \vdash x\!:\!t_{1}\to t_{2}\quad \Gamma \vdash x\!:\!t_{1}} \over {\Gamma \vdash x~x\!:\!t_{2}}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ee3c6f5becbb3b6fa40eb163294eeebd10120478"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">where<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>has the infinite type<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t_{1}=t_{1}\to t_{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.34ex; BORDER-RIGHT: 0px; WIDTH: 12.46ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="t_{1}=t_{1}\to t_{2}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/2b9e5460e5a8ae6d4f350794945ee848b8c07026"></SPAN>. No fixed-point combinator can in fact be typed, in those systems any support for recursion must be explicitly added to the language.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Type_for_the_Y_combinator class=mw-headline>Type for the Y combinator</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Type for the Y combinator" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=18">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In programming languages that support<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Recursive type" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursive_type">recursive types</A>, it is possible to type the Y combinator by appropriately accounting for the recursion at the type level. The need to self-apply the variable x can be managed using a type (Rec a), which is defined so as to be isomorphic to (Rec a -&gt; a).</P>
<P style="MARGIN: 0.5em 0px">For example, in the following Haskell code, we have<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">In</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">out</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>being the names of the two directions of the isomorphism, with types:<SUP id=cite_ref-10 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-10">[10]</A></SUP></P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"><SPAN class=kt style="COLOR: rgb(176,0,64)">In</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">::</SPAN> <SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">Rec</SPAN> <SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN><SPAN class=p>)</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">Rec</SPAN> <SPAN class=n>a</SPAN>
<SPAN class=nf style="COLOR: rgb(0,0,255)">out</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">::</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">Rec</SPAN> <SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">Rec</SPAN> <SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN><SPAN class=p>)</SPAN>
</PRE></DIV>
<P style="MARGIN: 0.5em 0px">which lets us write:</P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"><SPAN class=kr style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">newtype</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">Rec</SPAN> <SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">=</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">In</SPAN> <SPAN class=p>{</SPAN> <SPAN class=n>out</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">::</SPAN> <SPAN class=kt style="COLOR: rgb(176,0,64)">Rec</SPAN> <SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN> <SPAN class=p>}</SPAN>

<SPAN class=nf style="COLOR: rgb(0,0,255)">y</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">::</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>a</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN><SPAN class=p>)</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>a</SPAN>
<SPAN class=nf style="COLOR: rgb(0,0,255)">y</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">=</SPAN> <SPAN class=nf style="COLOR: rgb(0,0,255)">\</SPAN><SPAN class=n>f</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=p>(</SPAN><SPAN class=nf style="COLOR: rgb(0,0,255)">\</SPAN><SPAN class=n>x</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>f</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>out</SPAN> <SPAN class=n>x</SPAN> <SPAN class=n>x</SPAN><SPAN class=p>))</SPAN> <SPAN class=p>(</SPAN><SPAN class=kt style="COLOR: rgb(176,0,64)">In</SPAN> <SPAN class=p>(</SPAN><SPAN class=nf style="COLOR: rgb(0,0,255)">\</SPAN><SPAN class=n>x</SPAN> <SPAN class=ow style="FONT-WEIGHT: bold; COLOR: rgb(170,34,255)">-&gt;</SPAN> <SPAN class=n>f</SPAN> <SPAN class=p>(</SPAN><SPAN class=n>out</SPAN> <SPAN class=n>x</SPAN> <SPAN class=n>x</SPAN><SPAN class=p>)))</SPAN>
</PRE></DIV>
<P style="MARGIN: 0.5em 0px">Or equivalently in OCaml:</P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">type</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">'</SPAN><SPAN class=n>a</SPAN> <SPAN class=n>recc</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=nc style="FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">In</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">of</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">'</SPAN><SPAN class=n>a</SPAN> <SPAN class=n>recc</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">-&gt;</SPAN> <SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">'</SPAN><SPAN class=n>a</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN>
<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">let</SPAN> <SPAN class=n>out</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=nc style="FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">In</SPAN> <SPAN class=n>x</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=n>x</SPAN>

<SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">let</SPAN> <SPAN class=n>y</SPAN> <SPAN class=n>f</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">=</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">fun</SPAN> <SPAN class=n>x</SPAN> <SPAN class=n>a</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">-&gt;</SPAN> <SPAN class=n>f</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=n>out</SPAN> <SPAN class=n>x</SPAN> <SPAN class=n>x</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN> <SPAN class=n>a</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=nc style="FONT-WEIGHT: bold; COLOR: rgb(0,0,255)">In</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">fun</SPAN> <SPAN class=n>x</SPAN> <SPAN class=n>a</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">-&gt;</SPAN> <SPAN class=n>f</SPAN> <SPAN class=o style="COLOR: rgb(102,102,102)">(</SPAN><SPAN class=n>out</SPAN> <SPAN class=n>x</SPAN> <SPAN class=n>x</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">)</SPAN> <SPAN class=n>a</SPAN><SPAN class=o style="COLOR: rgb(102,102,102)">))</SPAN>
</PRE></DIV>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=General_information class=mw-headline>General information</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: General information" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Fixed-point_combinator&amp;action=edit&amp;section=19">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The function for which any input is a fixed point is called the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Identity function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Identity_function">identity function</A>. Formally:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \forall xf\ x=x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 10.3ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\forall xf\ x=x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/148f711ae5f598c0a87cca00d6e126c7ad302754"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Other functions have the special property that after being applied once, further applications don't have any effect. More formally:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \forall xf\ f\ x=f\ x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 14.04ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\forall xf\ f\ x=f\ x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/fdfeb20e45669344ba67a9c484d2773efff0a6e3"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">Such functions are called<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Idempotent class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Idempotent">idempotent</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see also<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Projection (mathematics)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Projection_(mathematics)">projection</A>). An example of such a function is the function that returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>0</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>for all even integers, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>1</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>for all odd integers. This is akin to projection</P>
<P style="MARGIN: 0.5em 0px">Fixed-point combinators do not necessarily exist in more restrictive models of computation. For instance, they do not exist in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Simply typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus">simply typed lambda calculus</A>.</P>
<P style="MARGIN: 0.5em 0px">The Y combinator allows<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Recursion (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursion_(computer_science)">recursion</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to be defined as a set of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Production (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Production_(computer_science)">rewrite rules</A>,<SUP id=cite_ref-11 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-11">[11]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>without requiring native recursion support in the language.<SUP id=cite_ref-12 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-12">[12]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Recursive join" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursive_join">recursive join</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Relational databases" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Relational_databases">relational databases</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>implements a fixed point, by recursively adding records to a set until no more may be added.</P>
<P style="MARGIN: 0.5em 0px">In programming languages that support<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Anonymous function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Anonymous_function">anonymous functions</A>, fixed-point combinators allow the definition and use of anonymous<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Recursion style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursion">recursive functions</A>, i.e. without having to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Name binding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Name_binding">bind</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>such functions to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Identifier style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Identifier">identifiers</A>. In this setting, the use of fixed-point combinators is sometimes called<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A title="Anonymous recursion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Anonymous_recursion">anonymous recursion</A></I>.<SUP id=cite_ref-13 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-13">[13]</A></SUP><SUP id=cite_ref-ifworks_14-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator#cite_note-ifworks-14">[14]</A></SUP></P></DIV></DIV>