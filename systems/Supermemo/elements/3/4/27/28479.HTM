<SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Pop Multiple Registers loads a subset, or possibly all, of the general-purpose registers R0-R12 and the PC or the LR from the stack.</FONT></SPAN> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>If the registers loaded include the PC, the word loaded for the PC is treated as a branch address or an exception return value. Bit&lt;0&gt; complies with the ARM architecture interworking rules for branches to Thumb state execution and must be 1. If bit&lt;0&gt; is 0, a UsageFault exception occurs.</FONT></SPAN>
<P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt">if ConditionPassed() then<BR>&nbsp;&nbsp;&nbsp; EncodingSpecificOperations();<BR>&nbsp;&nbsp;&nbsp; address = SP;<BR>&nbsp;&nbsp;&nbsp; for i = 0 to 14<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if registers&lt;i&gt; == &#8216;1&#8217; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; R[i} = MemA[address,4]; address = address + 4;<BR>&nbsp;&nbsp;&nbsp; if registers&lt;15&gt; == &#8216;1&#8217; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; LoadWritePC(MemA[address,4]);<BR>&nbsp;&nbsp;&nbsp; SP = SP + 4*BitCount(registers);</SPAN>