<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>glib-genmarshal</SPAN></H2>
<P>glib-genmarshal &#8212; C code marshaller generation utility for GLib closures</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=cmdsynopsis>
<P><CODE class=command>glib-genmarshal</CODE> [OPTION...] [FILE...]</P></DIV></DIV>
<DIV class=refsect1><A name=id-1.5.3.5></A>
<H2>Description</H2>
<P><SPAN class=command><STRONG>glib-genmarshal</STRONG></SPAN> is a small utility that generates C code marshallers for callback functions of the GClosure mechanism in the GObject sublibrary of GLib. The marshaller functions have a standard signature, they get passed in the invoking closure, an array of value structures holding the callback function parameters and a value structure for the return value of the callback. The marshaller is then responsible to call the respective C code function of the closure with all the parameters on the stack and to collect its return value. </P>
<P><SPAN class=command><STRONG>glib-genmarshal</STRONG></SPAN> takes a list of marshallers to generate as input. The marshaller list is either read from standard input or from files passed as additional arguments on the command line. </P>
<DIV class=refsect2><A name=id-1.5.3.5.4></A>
<H3>Marshaller list format</H3>
<P>The marshaller lists are processed line by line, a line can contain a comment in the form of </P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc ppc"># this is a comment</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>or a marshaller specification of the form </P><PRE class=programlisting><EM class=replaceable><CODE>RTYPE</CODE></EM>:<EM class=replaceable><CODE>PTYPE</CODE></EM>
<EM class=replaceable><CODE>RTYPE</CODE></EM>:<EM class=replaceable><CODE>PTYPE</CODE></EM>,<EM class=replaceable><CODE>PTYPE</CODE></EM>
<EM class=replaceable><CODE>RTYPE</CODE></EM>:<EM class=replaceable><CODE>PTYPE</CODE></EM>,<EM class=replaceable><CODE>PTYPE</CODE></EM>,<EM class=replaceable><CODE>PTYPE</CODE></EM>
</PRE>
<P>(up to 16 <EM class=replaceable><CODE>PTYPE</CODE></EM>s may be present). </P>
<P>The <EM class=replaceable><CODE>RTYPE</CODE></EM> part specifies the callback's return type and the <EM class=replaceable><CODE>PTYPE</CODE></EM>s right to the colon specify the callback's parameter list, except for the first and the last arguments which are always pointers. </P></DIV>
<HR>

<DIV class=refsect2><A name=id-1.5.3.5.5></A>
<H3>Parameter types</H3>
<P>Currently, the following types are supported: </P>
<DIV class=variablelist>
<TABLE class=variablelist border=0>
<COLGROUP>
<COL vAlign=top align=left>
<COL></COLGROUP>
<TBODY>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>VOID</CODE></EM></SPAN></P></TD>
<TD>
<P>indicates no return type, or no extra parameters. If <EM class=replaceable><CODE>VOID</CODE></EM> is used as the parameter list, no additional parameters may be present. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>BOOLEAN</CODE></EM></SPAN></P></TD>
<TD>
<P>for boolean types (gboolean) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>CHAR</CODE></EM></SPAN></P></TD>
<TD>
<P>for signed char types (gchar) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>UCHAR</CODE></EM></SPAN></P></TD>
<TD>
<P>for unsigned char types (guchar) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>INT</CODE></EM></SPAN></P></TD>
<TD>
<P>for signed integer types (gint) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>UINT</CODE></EM></SPAN></P></TD>
<TD>
<P>for unsigned integer types (guint) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>LONG</CODE></EM></SPAN></P></TD>
<TD>
<P>for signed long integer types (glong) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>ULONG</CODE></EM></SPAN></P></TD>
<TD>
<P>for unsigned long integer types (gulong) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>INT64</CODE></EM></SPAN></P></TD>
<TD>
<P>for signed 64bit integer types (gint64) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>UINT64</CODE></EM></SPAN></P></TD>
<TD>
<P>for unsigned 64bit integer types (guint64) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>ENUM</CODE></EM></SPAN></P></TD>
<TD>
<P>for enumeration types (gint) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>FLAGS</CODE></EM></SPAN></P></TD>
<TD>
<P>for flag enumeration types (guint) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>FLOAT</CODE></EM></SPAN></P></TD>
<TD>
<P>for single-precision float types (gfloat) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>DOUBLE</CODE></EM></SPAN></P></TD>
<TD>
<P>for double-precision float types (gdouble) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>STRING</CODE></EM></SPAN></P></TD>
<TD>
<P>for string types (gchar*) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>BOXED</CODE></EM></SPAN></P></TD>
<TD>
<P>for boxed (anonymous but reference counted) types (GBoxed*) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>PARAM</CODE></EM></SPAN></P></TD>
<TD>
<P>for GParamSpec or derived types (GParamSpec*) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>POINTER</CODE></EM></SPAN></P></TD>
<TD>
<P>for anonymous pointer types (gpointer) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>OBJECT</CODE></EM></SPAN></P></TD>
<TD>
<P>for GObject or derived types (GObject*) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>VARIANT</CODE></EM></SPAN></P></TD>
<TD>
<P>for GVariant types (GVariant*) </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>NONE</CODE></EM></SPAN></P></TD>
<TD>
<P>deprecated alias for <EM class=replaceable><CODE>VOID</CODE></EM> </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><EM class=replaceable><CODE>BOOL</CODE></EM></SPAN></P></TD>
<TD>
<P>deprecated alias for <EM class=replaceable><CODE>BOOLEAN</CODE></EM> </P></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV></DIV>
<DIV class=refsect1><A name=id-1.5.3.6></A>
<H2>Options</H2>
<DIV class=variablelist>
<TABLE class=variablelist border=0>
<COLGROUP>
<COL vAlign=top align=left>
<COL></COLGROUP>
<TBODY>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--header</CODE></SPAN></P></TD>
<TD>
<P>Generate header file contents of the marshallers. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--body</CODE></SPAN></P></TD>
<TD>
<P>Generate C code file contents of the marshallers. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--prefix=<EM class=replaceable><CODE>PREFIX</CODE></EM></CODE></SPAN></P></TD>
<TD>
<P>Specify marshaller prefix. The default prefix is <CODE class=literal>`g_cclosure_marshal'</CODE>. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--skip-source</CODE></SPAN></P></TD>
<TD>
<P>Skip source location remarks in generated comments. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--stdinc</CODE></SPAN></P></TD>
<TD>
<P>Use the standard marshallers of the GObject library, and include <CODE class=filename>gmarshal.h</CODE> in generated header files. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--nostdinc</CODE></SPAN></P></TD>
<TD>
<P>Do not use the standard marshallers of the GObject library, and skip <CODE class=filename>gmarshal.h</CODE> include directive in generated header files. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--internal</CODE></SPAN></P></TD>
<TD>
<P>Mark generated functions as internal, using G_GNUC_INTERNAL. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--valist-marshallers</CODE></SPAN></P></TD>
<TD>
<P>Generate valist marshallers, for use with g_signal_set_va_marshaller(). </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>-v</CODE>, <CODE class=option>--version</CODE></SPAN></P></TD>
<TD>
<P>Print version information. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--g-fatal-warnings</CODE></SPAN></P></TD>
<TD>
<P>Make warnings fatal, that is, exit immediately once a warning occurs. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>-h</CODE>, <CODE class=option>--help</CODE></SPAN></P></TD>
<TD>
<P>Print brief help and exit. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>-v</CODE>, <CODE class=option>--version</CODE></SPAN></P></TD>
<TD>
<P>Print version and exit. </P></TD></TR>
<TR>
<TD>
<P><SPAN class=term><CODE class=option>--output=FILE</CODE></SPAN></P></TD>
<TD>
<P>Write output to FILE instead of stdout. </P></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=id-1.5.3.7></A>
<H2>Example</H2>
<P>To generate marshallers for the following callback functions: </P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>   <SPAN class=function>foo</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data1<SPAN class="gtkdoc opt">,</SPAN>
            gpointer data2<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc kwb">void</SPAN>   <SPAN class=function>bar</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data1<SPAN class="gtkdoc opt">,</SPAN>
            gint     param1<SPAN class="gtkdoc opt">,</SPAN>
            gpointer data2<SPAN class="gtkdoc opt">);</SPAN>
gfloat <SPAN class=function>baz</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data1<SPAN class="gtkdoc opt">,</SPAN>
            gboolean param1<SPAN class="gtkdoc opt">,</SPAN>
            guchar   param2<SPAN class="gtkdoc opt">,</SPAN>
            gpointer data2<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>The <CODE class=filename>marshaller.list</CODE> file has to look like this: </P><PRE class=programlisting>VOID:VOID
VOID:INT
FLOAT:BOOLEAN,UCHAR
</PRE>
<P>and you call glib-genmarshal like this: </P><PRE class=programlisting>glib-genmarshal --header marshaller.list &gt; marshaller.h
glib-genmarshal --body marshaller.list &gt; marshaller.c
</PRE>
<P>The generated marshallers have the arguments encoded in their function name. For this particular list, they are </P><PRE class=programlisting>g_cclosure_user_marshal_VOID__VOID(),
g_cclosure_user_marshal_VOID__INT(),
g_cclosure_user_marshal_FLOAT__BOOLEAN_UCHAR().
</PRE>
<P>They can be used directly for GClosures or be passed in as the GSignalCMarshaller c_marshaller; argument upon creation of signals: </P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>GClosure <SPAN class="gtkdoc opt">*</SPAN>cc_foo<SPAN class="gtkdoc opt">, *</SPAN>cc_bar<SPAN class="gtkdoc opt">, *</SPAN>cc_baz<SPAN class="gtkdoc opt">;</SPAN>

cc_foo <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new">g_cclosure_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">,</SPAN> foo<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal">g_closure_set_marshal</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>cc_foo<SPAN class="gtkdoc opt">,</SPAN> g_cclosure_user_marshal_VOID__VOID<SPAN class="gtkdoc opt">);</SPAN>
cc_bar <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new">g_cclosure_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">,</SPAN> bar<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal">g_closure_set_marshal</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>cc_bar<SPAN class="gtkdoc opt">,</SPAN> g_cclosure_user_marshal_VOID__INT<SPAN class="gtkdoc opt">);</SPAN>
cc_baz <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-cclosure-new">g_cclosure_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">,</SPAN> baz<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-set-marshal">g_closure_set_marshal</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>cc_baz<SPAN class="gtkdoc opt">,</SPAN> g_cclosure_user_marshal_FLOAT__BOOLEAN_UCHAR<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=id-1.5.3.8></A>
<H2>See also</H2>
<P><SPAN class=citerefentry><SPAN class=refentrytitle>glib-mkenums</SPAN>(1)</SPAN> </P></DIV>