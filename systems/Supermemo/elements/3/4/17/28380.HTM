<SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Load Register Byte Unprivileged calculates an address from a base register value and an immediate offset, loads a byte from memory, zero-extends it to form a 32-bit word, and writes it to a register. See Memory accesses on page A7-214 for information about memory accesses. When privileged software uses an LDRBT instruction, the memory access is restricted as if the software was unprivileged. See also Effect of MPU_CTRL settings on unprivileged instructions on page B3-768.</FONT></SPAN> 
<P></P><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt">
<P>if Rn == &#8216;1111&#8217; then SEE LDRB (literal);<BR>t = UInt(Rt); n = UInt(Rn); postindex = FALSE; add = TRUE;<BR>register_form = FALSE; imm32 = ZeroExtend(imm8, 32);<BR>if t IN {13,15} then UNPREDICTABLE;</P>
<P>Encoding T1 ARMv7-M<BR>LDRBT&lt;c&gt; &lt;Rt&gt;,[&lt;Rn&gt;,#&lt;imm8&gt;]</P>
<P>&nbsp;</P>
<P>if ConditionPassed() then<BR>&nbsp;&nbsp;&nbsp; EncodingSpecificOperations();<BR>&nbsp;&nbsp;&nbsp; address = R[n] + imm32;<BR>&nbsp;&nbsp;&nbsp; R[t] = ZeroExtend(MemU_unpriv[address,1],32);</P></SPAN>