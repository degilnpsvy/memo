A5.1.2 Use of 0b1111 as a register specifier 
<P></P>
<P>The use of 0b1111 as a register specifier is not normally permitted in Thumb instructions. When a value of 0b1111 is permitted, a variety of meanings is possible. For register reads, these meanings are:<BR>&#8226; Read the PC value, that is, the address of the current instruction + 4. The base register of the table branch instructions TBB and TBH can be the PC. This enables branch tables to be placed in memory immediately after the instruction. (Some instructions read the PC value implicitly, without the use of a register specifier, for example the conditional branch instruction B&lt;cond&gt;.)<BR>&nbsp; Note<BR>&nbsp; Use of the PC as the base register in the STC instruction is deprecated in ARMv7.<BR>&#8226; Read the word-aligned PC value, that is, the address of the current instruction + 4, with bits [1:0] forced to zero. The base register of LDC, LDR, LDRB, LDRD (pre-indexed, no write-back), LDRH, LDRSB, and LDRSH instructions can be the word-aligned PC. This enables PC-relative data addressing. In addition, some encodings of the ADD and SUB instructions permit their source registers to be 0b1111 for the same purpose.<BR>&#8226; Read zero. This is done in some cases when one instruction is a special case of another, more general instruction, but with one operand zero. In these cases, the instructions are listed on separate pages, with a special case in the pseudocode for the more general instruction cross-referencing the other page.</P>
<P>For register writes, these meanings are:<BR>&#8226; The PC can be specified as the destination register of an LDR instruction. This is done by encoding Rt as 0b1111. The loaded value is treated as an address, and the effect of execution is a branch to that address. bit [0] of the loaded value selects the execution state after the branch and must have the value 1.<BR>&nbsp; Some other instructions write the PC in similar ways, either:<BR>&nbsp; &#8213; implicitly, for example, B&lt;cond&gt;<BR>&nbsp; &#8213; by using a register mask rather than a register specifier, for example LDM.<BR>&nbsp; The address to branch to can be:<BR>&nbsp; &#8213; a loaded value, for example LDM<BR>&nbsp; &#8213; a register value, for example BX<BR>&nbsp; &#8213; the result of a calculation, for example TBB or TBH.<BR>&#8226; Discard the result of a calculation. This is done in some cases when one instruction is a special case of another, more general instruction, but with the result discarded. In these cases, the instructions are listed on separate pages, with a special case in the pseudocode for the more general instruction cross-referencing the other page.<BR>&#8226; If the destination register specifier of an LDRB, LDRH, LDRSB, or LDRSH instruction is 0b1111, the instruction is a memory hint instead of a load operation.<BR>&#8226; If the destination register specifier of an MRC instruction is 0b1111, bits [31:28] of the value transferred from the coprocessor are written to the N, Z, C, and V flags in the APSR, and bits [27:0] are discarded.