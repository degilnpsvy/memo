A5.1.3 Use of 0b1101 as a register specifier
<P></P>
<P>R13 is defined in the Thumb instruction set so that its use is primarily as a stack pointer, and R13 is normally identified as SP in Thumb instructions. In 32-bit Thumb instructions, if you use SP as a general purpose register beyond the architecturally defined constraints described in this section, the results are UNPREDICTABLE.</P>
<P>The following subsections describe the restrictions that apply to using SP:<BR>&#8226; SP[1:0] definition<BR>&#8226; 32-bit Thumb instruction support for SP.</P>
<P>See also 16-bit Thumb instruction support for SP on page A5-155.</P>
<P><BR>SP[1:0] definition</P>
<P>Bits [1:0] of SP must be treated as SBZP (Should Be Zero or Preserved). Writing a non-zero value to bits [1:0] results in UNPREDICTABLE behavior. Reading bits [1:0] returns zero.</P>
<P><BR>32-bit Thumb instruction support for SP</P>
<P>32-bit Thumb instruction support for SP is restricted to the following:<BR>&#8226; SP as the source or destination register of a MOV instruction. Only register to register transfers without shifts are supported, with no flag setting:<BR>&nbsp;&nbsp; MOV SP,Rm<BR>&nbsp;&nbsp; MOV Rn,SP<BR>&#8226; Adjusting SP up or down by a multiple of its alignment:<BR>&nbsp;&nbsp; ADD{W} SP,SP,#N ; For N a multiple of 4<BR>&nbsp;&nbsp; SUB{W} SP,SP,#N ; For N a multiple of 4<BR>&nbsp;&nbsp; ADD SP,SP,Rm,LSL #shft ; For shft=0,1,2,3<BR>&nbsp;&nbsp; SUB SP,SP,Rm,LSL #shft ; For shft=0,1,2,3<BR>&#8226; SP as a base register, Rn, of any load or store instruction. This supports SP-based addressing for load, store, or memory hint instructions, with positive or negative offsets, with and without write-back.<BR>&#8226; SP as the first operand, Rn, in any ADD{S}, CMN, CMP, or SUB{S} instruction. The add and subtract instructions support SP-based address generation, with the address going into a general-purpose register. CMN and CMP are useful for stack checking in some circumstances.<BR>&#8226; SP as the transferred register, Rt, in any LDR or STR instruction.<BR>&#8226; SP as the address in a POP or PUSH instruction.</P>
<P><BR>16-bit Thumb instruction support for SP</P>
<P>For 16-bit data processing instructions that affect high registers, SP can only be used as described in 32-bit Thumb instruction support for SP on page A5-154. ARM deprecates any other use. This affects the high register forms of CMP and ADD, where ARM deprecates the use of SP as Rm.