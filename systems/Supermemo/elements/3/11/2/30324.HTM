uint32_t HELPER(add_setq)(CPUARMState *env, uint32_t a, uint32_t b)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res = a + b;<BR>&nbsp;&nbsp;&nbsp; if (((res ^ a) &amp; SIGNBIT) &amp;&amp; !((a ^ b) &amp; SIGNBIT))<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>uint32_t HELPER(add_saturate)(CPUARMState *env, uint32_t a, uint32_t b)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res = a + b;<BR>&nbsp;&nbsp;&nbsp; if (((res ^ a) &amp; SIGNBIT) &amp;&amp; !((a ^ b) &amp; SIGNBIT)) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = ~(((int32_t)a &gt;&gt; 31) ^ SIGNBIT);<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>uint32_t HELPER(sub_saturate)(CPUARMState *env, uint32_t a, uint32_t b)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res = a - b;<BR>&nbsp;&nbsp;&nbsp; if (((res ^ a) &amp; SIGNBIT) &amp;&amp; ((a ^ b) &amp; SIGNBIT)) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = ~(((int32_t)a &gt;&gt; 31) ^ SIGNBIT);<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>uint32_t HELPER(double_saturate)(CPUARMState *env, int32_t val)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res;<BR>&nbsp;&nbsp;&nbsp; if (val &gt;= 0x40000000) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = ~SIGNBIT;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp; } else if (val &lt;= (int32_t)0xc0000000) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = SIGNBIT;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp; } else {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = val &lt;&lt; 1;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>uint32_t HELPER(add_usaturate)(CPUARMState *env, uint32_t a, uint32_t b)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res = a + b;<BR>&nbsp;&nbsp;&nbsp; if (res &lt; a) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = ~0;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>uint32_t HELPER(sub_usaturate)(CPUARMState *env, uint32_t a, uint32_t b)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res = a - b;<BR>&nbsp;&nbsp;&nbsp; if (res &gt; a) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; res = 0;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>/* Signed saturation.&nbsp; */<BR>static inline uint32_t do_ssat(CPUARMState *env, int32_t val, int shift)<BR>{<BR>&nbsp;&nbsp;&nbsp; int32_t top;<BR>&nbsp;&nbsp;&nbsp; uint32_t mask;</P>
<P>&nbsp;&nbsp;&nbsp; top = val &gt;&gt; shift;<BR>&nbsp;&nbsp;&nbsp; mask = (1u &lt;&lt; shift) - 1;<BR>&nbsp;&nbsp;&nbsp; if (top &gt; 0) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return mask;<BR>&nbsp;&nbsp;&nbsp; } else if (top &lt; -1) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return ~mask;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return val;<BR>}</P>
<P>/* Unsigned saturation.&nbsp; */<BR>static inline uint32_t do_usat(CPUARMState *env, int32_t val, int shift)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t max;</P>
<P>&nbsp;&nbsp;&nbsp; max = (1u &lt;&lt; shift) - 1;<BR>&nbsp;&nbsp;&nbsp; if (val &lt; 0) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return 0;<BR>&nbsp;&nbsp;&nbsp; } else if (val &gt; max) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env-&gt;QF = 1;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return max;<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return val;<BR>}</P>
<P>/* Signed saturate.&nbsp; */<BR>uint32_t HELPER(ssat)(CPUARMState *env, uint32_t x, uint32_t shift)<BR>{<BR>&nbsp;&nbsp;&nbsp; return do_ssat(env, x, shift);<BR>}</P>
<P>/* Dual halfword signed saturate.&nbsp; */<BR>uint32_t HELPER(ssat16)(CPUARMState *env, uint32_t x, uint32_t shift)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res;</P>
<P>&nbsp;&nbsp;&nbsp; res = (uint16_t)do_ssat(env, (int16_t)x, shift);<BR>&nbsp;&nbsp;&nbsp; res |= do_ssat(env, ((int32_t)x) &gt;&gt; 16, shift) &lt;&lt; 16;<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}</P>
<P>/* Unsigned saturate.&nbsp; */<BR>uint32_t HELPER(usat)(CPUARMState *env, uint32_t x, uint32_t shift)<BR>{<BR>&nbsp;&nbsp;&nbsp; return do_usat(env, x, shift);<BR>}</P>
<P>/* Dual halfword unsigned saturate.&nbsp; */<BR>uint32_t HELPER(usat16)(CPUARMState *env, uint32_t x, uint32_t shift)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t res;</P>
<P>&nbsp;&nbsp;&nbsp; res = (uint16_t)do_usat(env, (int16_t)x, shift);<BR>&nbsp;&nbsp;&nbsp; res |= do_usat(env, ((int32_t)x) &gt;&gt; 16, shift) &lt;&lt; 16;<BR>&nbsp;&nbsp;&nbsp; return res;<BR>}