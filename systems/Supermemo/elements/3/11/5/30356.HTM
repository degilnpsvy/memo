/* Return the current CPSR value.&nbsp; */<BR>uint32_t cpsr_read(CPUARMState *env); 
<P></P>
<P>typedef enum CPSRWriteType {<BR>&nbsp;&nbsp;&nbsp; CPSRWriteByInstr = 0,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* from guest MSR or CPS */<BR>&nbsp;&nbsp;&nbsp; CPSRWriteExceptionReturn = 1, /* from guest exception return insn */<BR>&nbsp;&nbsp;&nbsp; CPSRWriteRaw = 2,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* trust values, do not switch reg banks */<BR>&nbsp;&nbsp;&nbsp; CPSRWriteByGDBStub = 3,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* from the GDB stub */<BR>} CPSRWriteType;</P>
<P>/* Set the CPSR.&nbsp; Note that some bits of mask must be all-set or all-clear.*/<BR>void cpsr_write(CPUARMState *env, uint32_t val, uint32_t mask,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CPSRWriteType write_type);