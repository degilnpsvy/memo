#!/bin/sh 
<P></P>
<P>###########################################################################<BR># /usr/bin/service<BR>#<BR># A convenient wrapper for the /etc/init.d init scripts.<BR>#<BR># This script is a modified version of the /sbin/service utility found on<BR># Red Hat/Fedora systems (licensed GPLv2+).<BR>#<BR># Copyright (C) 2006 Red Hat, Inc. All rights reserved.<BR># Copyright (C) 2008 Canonical Ltd.<BR>#&nbsp;&nbsp; * August 2008 - Dustin Kirkland &lt;<A href="mailto:kirkland@canonical.com">kirkland@canonical.com</A>&gt;<BR>#<BR># This program is free software; you can redistribute it and/or modify<BR># it under the terms of the GNU General Public License as published by<BR># the Free Software Foundation; either version 2 of the License, or<BR># (at your option) any later version.<BR>#<BR># This program is distributed in the hope that it will be useful,<BR># but WITHOUT ANY WARRANTY; without even the implied warranty of<BR># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&nbsp; See the<BR># GNU General Public License for more details.<BR>#<BR># You should have received a copy of the GNU General Public License<BR># along with this program; if not, write to the Free Software<BR># Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA&nbsp; 02111-1307&nbsp; USA<BR>#<BR># On Debian GNU/Linux systems, the complete text of the GNU General<BR># Public License can be found in `/usr/share/common-licenses/GPL-2'.<BR>###########################################################################</P>
<P><BR>is_ignored_file() {<BR>&nbsp;case "$1" in<BR>&nbsp;&nbsp;skeleton | README | *.dpkg-dist | *.dpkg-old | rc | rcS | single | reboot | bootclean.sh)<BR>&nbsp;&nbsp;&nbsp;return 0<BR>&nbsp;&nbsp;;;<BR>&nbsp;esac<BR>&nbsp;return 1<BR>}</P>
<P>VERSION="`basename $0` ver. 0.91-ubuntu1"<BR>USAGE="Usage: `basename $0` &lt; option &gt; | --status-all | \<BR>[ service_name [ command | --full-restart ] ]"<BR>SERVICE=<BR>ACTION=<BR>SERVICEDIR="/etc/init.d"<BR>OPTIONS=</P>
<P>if [ $# -eq 0 ]; then<BR>&nbsp;&nbsp; echo "${USAGE}" &gt;&amp;2<BR>&nbsp;&nbsp; exit 1<BR>fi</P>
<P>cd /<BR>while [ $# -gt 0 ]; do<BR>&nbsp; case "${1}" in<BR>&nbsp;&nbsp;&nbsp; --help | -h | --h* )<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo "${USAGE}" &gt;&amp;2<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit 0<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp;&nbsp; --version | -V )<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo "${VERSION}" &gt;&amp;2<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit 0<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp;&nbsp; *)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if [ -z "${SERVICE}" -a $# -eq 1 -a "${1}" = "--status-all" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cd ${SERVICEDIR}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for SERVICE in * ; do<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; case "${SERVICE}" in<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; functions | halt | killall | single| linuxconf| kudzu)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ! is_ignored_file "${SERVICE}" \<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; [ -x "${SERVICEDIR}/${SERVICE}" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ! grep -qs "\(^\|\W\)status)" "$SERVICE"; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #printf " %s %-60s %s\n" "[?]" "$SERVICE:" "unknown" 1&gt;&amp;2<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " [ ? ]&nbsp; $SERVICE" 1&gt;&amp;2<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; out=$(env -i LANG="$LANG" PATH="$PATH" TERM="$TERM" "$SERVICEDIR/$SERVICE" status 2&gt;&amp;1)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if [ "$?" = "0" -a -n "$out" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #printf " %s %-60s %s\n" "[+]" "$SERVICE:" "running"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " [ + ]&nbsp; $SERVICE"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #printf " %s %-60s %s\n" "[-]" "$SERVICE:" "NOT running"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; echo " [ - ]&nbsp; $SERVICE"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #env -i LANG="$LANG" PATH="$PATH" TERM="$TERM" "$SERVICEDIR/$SERVICE" status<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; esac<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; done<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit 0<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; elif [ $# -eq 2 -a "${2}" = "--full-restart" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SERVICE="${1}"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if [ -x "${SERVICEDIR}/${SERVICE}" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env -i LANG="$LANG" PATH="$PATH" TERM="$TERM" "$SERVICEDIR/$SERVICE" stop<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; env -i LANG="$LANG" PATH="$PATH" TERM="$TERM" "$SERVICEDIR/$SERVICE" start<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exit $?<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; elif [ -z "${SERVICE}" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SERVICE="${1}"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; elif [ -z "${ACTION}" ]; then<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ACTION="${1}"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OPTIONS="${OPTIONS} ${1}"<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fi<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; shift<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp; esac<BR>done</P>
<P>if [ -r "/etc/init/${SERVICE}.conf" ] &amp;&amp; which initctl &gt;/dev/null \<BR>&nbsp;&nbsp; &amp;&amp; initctl version | grep -q upstart<BR>then<BR>&nbsp;&nbsp; # Upstart configuration exists for this job and we're running on upstart<BR>&nbsp;&nbsp; case "${ACTION}" in<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; start|stop|status|reload)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Action is a valid upstart action<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exec ${ACTION} ${SERVICE} ${OPTIONS}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; restart)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Map restart to the usual sysvinit behavior.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; stop ${SERVICE} ${OPTIONS} || :<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exec start ${SERVICE} ${OPTIONS}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; force-reload)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; # Upstart just uses reload for force-reload<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exec reload ${SERVICE} ${OPTIONS}<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;;<BR>&nbsp;&nbsp; esac<BR>fi</P>
<P># Otherwise, use the traditional sysvinit<BR>if [ -x "${SERVICEDIR}/${SERVICE}" ]; then<BR>&nbsp;&nbsp; exec env -i LANG="$LANG" PATH="$PATH" TERM="$TERM" "$SERVICEDIR/$SERVICE" ${ACTION} ${OPTIONS}<BR>else<BR>&nbsp;&nbsp; echo "${SERVICE}: unrecognized service" &gt;&amp;2<BR>&nbsp;&nbsp; exit 1<BR>fi