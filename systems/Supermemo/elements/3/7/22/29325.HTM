&nbsp;&nbsp;&nbsp; /* PSTATE isn't an architectural register for ARMv8. However, it is<BR>&nbsp;&nbsp;&nbsp;&nbsp; * convenient for us to assemble the underlying state into a 32 bit format<BR>&nbsp;&nbsp;&nbsp;&nbsp; * identical to the architectural format used for the SPSR. (This is also<BR>&nbsp;&nbsp;&nbsp;&nbsp; * what the Linux kernel's 'pstate' field in signal handlers and KVM's<BR>&nbsp;&nbsp;&nbsp;&nbsp; * 'pstate' register are.) Of the PSTATE bits:<BR>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp; NZCV are kept in the split out env-&gt;CF/VF/NF/ZF, (which have the same<BR>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp;&nbsp;&nbsp; semantics as for AArch32, as described in the comments on each field)<BR>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp; nRW (also known as M[4]) is kept, inverted, in env-&gt;aarch64<BR>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp; DAIF (exception masks) are kept in env-&gt;daif<BR>&nbsp;&nbsp;&nbsp;&nbsp; *&nbsp; all other bits are stored in their correct places in env-&gt;pstate<BR>&nbsp;&nbsp;&nbsp;&nbsp; */<BR>&nbsp;&nbsp;&nbsp; uint32_t pstate;&nbsp;
<P>&nbsp;</P>
<P>In CPUARMState, in target-arm/cpu.h