<SPAN style="COLOR: #ff0000"><STRONG><SPAN style="FONT-FAMILY: 'comic sans ms', sans-serif">Traps</SPAN></STRONG></SPAN>: Reported immediately following the execution of the trapping instruction; after the kernel 
<P></P>
<P>returns control to the program, it is allowed to continue its execution with no loss of continuity. <STRONG><SPAN style="FONT-FAMILY: 'comic sans ms', sans-serif">The</SPAN></STRONG></P>
<P><STRONG><SPAN style="FONT-FAMILY: 'comic sans ms', sans-serif">saved value of eip is the address of the instruction that should be executed after the one that caused</SPAN></STRONG></P>
<P><STRONG><SPAN style="FONT-FAMILY: 'comic sans ms', sans-serif">the trap. A trap is triggered only when there is no need to reexecute the instruction that terminated.</SPAN></STRONG></P>
<P>The main use of traps is for debugging purpose. The role of the interrupt signal in this case is to</P>
<P>notify the debugger that a specific instruction has been executed (for instance, a breakpoint has been</P>
<P><STRONG><SPAN style="FONT-FAMILY: 'comic sans ms', sans-serif">reached</SPAN></STRONG> within a program). Once the user has examined the data provided by the debugger, she may</P>
<P>ask that execution of the debugged program resume, starting from the next instruction.