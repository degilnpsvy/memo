list_safe_reset_next</P>
<P>&nbsp;* @pos:&nbsp;the loop cursor used in the list_for_each_entry_safe loop<BR>&nbsp;* @n:&nbsp;&nbsp;temporary storage used in list_for_each_entry_safe<BR>&nbsp;* @member:&nbsp;the name of the list_head within the struct.<BR>&nbsp;*<BR>&nbsp;* list_safe_reset_next is not safe to use in general if the list may be<BR>&nbsp;* modified concurrently (eg. the lock is dropped in the loop body). An<BR>&nbsp;* exception to this is if the cursor element (pos) is pinned in the list,<BR>&nbsp;* and list_safe_reset_next is called after re-taking the lock and before<BR>&nbsp;* completing the current iteration of the loop body.<BR>&nbsp;*/<BR>#define list_safe_reset_next(pos, n, member)&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;n = list_next_entry(pos, member)