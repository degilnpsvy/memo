/**<BR>&nbsp;* wait_for_completion_interruptible_timeout: - waits for completion (w/(to,intr))<BR>&nbsp;* @x:&nbsp; holds the state of this particular completion<BR>&nbsp;* @timeout:&nbsp; timeout value in jiffies<BR>&nbsp;*<BR>&nbsp;* This waits for either a completion of a specific task to be signaled or for a<BR>&nbsp;* specified timeout to expire. It is interruptible. The timeout is in jiffies.<BR>&nbsp;*<BR>&nbsp;* Return: -ERESTARTSYS if interrupted, 0 if timed out, positive (at least 1,<BR>&nbsp;* or number of jiffies left till timeout) if completed.<BR>&nbsp;*/<BR>long __sched<BR>wait_for_completion_interruptible_timeout(struct completion *x,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; unsigned long timeout)<BR>{<BR>&nbsp;return wait_for_common(x, timeout, TASK_INTERRUPTIBLE);<BR>}<BR>EXPORT_SYMBOL(wait_for_completion_interruptible_timeout);