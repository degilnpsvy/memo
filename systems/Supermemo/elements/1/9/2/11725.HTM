<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">8.2.13.4 Guidelines for creating a target that calls <I>nb_transport </I></SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">a) When calling <B>nb_transport_bw</B>, set the phase argument to END_REQ or BEGIN_RESP according to state of the transaction. Do not send BEGIN_RESP before having received (or inferred) END_RESP from the previous transaction. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">b) When making a series of calls to <B>nb_transport_bw </B>for a given transaction, ensure that the effective local times (simulation time + timing annotation) form a non-decreasing sequence of values. </SPAN></P>
<P class=Default style="MARGIN: 0cm 0cm 0pt"><FONT face=Arial><SPAN lang=EN-US style="FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt">c) Respond appropriately to the incoming phase values BEGIN_REQ and END_RESP, whether received on the forward path (a call to <B>nb_transport_fw</B>), the return path (TLM_UPDATED returned from <B>nb_transport_bw</B>), or implicitly (for example, TLM_COMPLETED returned from <B>nb_transport_bw</B>). </SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Times New Roman'; mso-bidi-font-size: 12.0pt"></SPAN></FONT></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">Incoming phase values of END_REQ and BEGIN_RESP would be illegal. Treat all other incoming phase values as being ignorable. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">d) In the implementation of <B>nb_transport_fw</B>, when needing to keep a pointer or reference to a transaction object beyond the return from the method, call the <B>acquire </B>method of the transaction. Call the <B>release </B>method when the transaction object is finished with. </SPAN>