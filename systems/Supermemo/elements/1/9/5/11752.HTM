<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">9.2.1 Introduction </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">Temporal decoupling permits SystemC processes to run ahead of simulation time for an amount of time known as the time quantum. See 5 Global quantum The utility class <B>tlm_quantumkeeper </B>provides a set of methods for managing and interacting with the time quantum. When using temporal decoupling, use of the quantum keeper is recommended in order to maintain a consistent coding style. However, it is straightforward in principle to implement temporal decoupling directly in SystemC. Whether or not the utility class <B>tlm_quantumkeeper </B>is used, all temporally decoupled models should reference the global quantum maintained by the class <B>tlm_global_quantum</B>. Class <B>tlm_quantumkeeper </B>is in namespace <B>tlm_utils</B>. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">For a general description of temporal decoupling, see 3.3.2 Loosely-timed coding style and temporal decoupling </SPAN></P><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: 'Times New Roman'; mso-bidi-font-size: 10.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-ansi-language: EN-US; mso-fareast-language: ZH-CN; mso-bidi-language: AR-SA">For a description of timing annotation, see 4.1.3 Timing annotation with the transport interfaces </SPAN>