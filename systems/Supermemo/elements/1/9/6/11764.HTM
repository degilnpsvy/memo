<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">9.4.1 Introduction </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The generic payload contains an array of pointers to extension objects such that each transaction object can contain at most one instance of each extension type. This mechanism alone does not directly permit multiple instances of the same extension to be added to a given transaction object. This clause describes a set of utilities that provide instance-specific extensions, that is, multiple extensions of the same type added to a single transaction object. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">An instance-specific extension type is created using a class template <B>instance_specific_extension</B>, used in a similar manner to class <B>tlm_extension</B>. Unlike <B>tlm_extension</B>, applications are not required or permitted to implement virtual <B>clone </B>and <B>copy_from </B>methods. The access methods are restricted to <B>set_extension</B>, <B>get_extension</B>, <B>clear_extension </B>and <B>resize_extensions</B>. Automatic deletion of instance-specific extensions is not supported, so a component calling <B>set_extension </B>should also call <B>clear_extension</B>. As for class <B>tlm_extension</B>, method <B>resize_extensions </B>need only be called if a transaction object is constructed during static initialization. An instance-specific extension is accessed using an object of type <B>instance_specific_extension_accessor</B>. This class provides a single method <B>operator() </B>which returns a proxy object through which the access methods can be called. Each object of type <B>instance_specific_extension_accessor </B>gives access to a distinct set of extension objects, even when used with the same transaction object. In the class definition below, terms in <I>italics </I>are implementation-defined names that should not be used directly by an application.. </SPAN>