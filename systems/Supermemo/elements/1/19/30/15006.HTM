<SPAN style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US>In order to build a shared version of the static library we created earlier, we perform the following steps:</SPAN> 
<P></P>
<P><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 17pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: DA" lang=DA>$ gcc -g -c <SPAN class=cloze>[...]</SPAN> -Wall mod1.c mod2.c mod3.c</SPAN></P>
<P><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 17pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: DA" lang=DA>$ gcc -g&nbsp;<SPAN class=cloze>[...]</SPAN> libfoo.so mod1.o mod2.o mod3.o</SPAN></P>
<P><SPAN style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US>The first of these commands creates the three object modules that are to be put into the library. (We explain the cc &#8211;fPIC option in the next section.) The cc &#8211;shared command creates a shared library containing the three object modules.</SPAN></P>
<P><SPAN style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US>By convention, shared libraries have the prefix lib and the suffix .so (for shared object).</SPAN>