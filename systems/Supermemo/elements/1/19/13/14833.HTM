<H3 class=section>6.7 The <CODE>override</CODE> Directive</H3>
<P><A name=index-override-526></A><A name=index-overriding-with-_0040code_007boverride_007d-527></A><A name=index-variables_002c-overriding-528></A><FONT class=extract>If a variable has been set with a command argument (see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Overriding"><FONT class=extract>Overriding Variables</FONT></A><FONT class=extract>), then ordinary assignments in the makefile are ignored.</FONT> <FONT class=extract>If you want to set the variable in the makefile even though it was set with a command argument, you can use an <CODE>override</CODE> directive, which is a line that looks like this: </FONT><PRE class=example><FONT class=extract>     override <VAR>variable</VAR> = <VAR>value</VAR>
</FONT></PRE>
<P class=noindent><FONT class=extract>or </FONT><PRE class=example><FONT class=extract>     override <VAR>variable</VAR> := <VAR>value</VAR>
</FONT></PRE>
<P><FONT class=extract>To append more text to a variable defined on the command line, use: </FONT><PRE class=example><FONT class=extract>     override <VAR>variable</VAR> += <VAR>more text</VAR>
</FONT></PRE>
<P class=noindent><FONT class=extract>See </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Appending"><FONT class=extract>Appending More Text to Variables</FONT></A><FONT class=extract>.</FONT> 
<P><FONT class=extract>Variable assignments marked with the <CODE>override</CODE> flag have a higher priority than all other assignments, except another <CODE>override</CODE>. Subsequent assignments or appends to this variable which are not marked <CODE>override</CODE> will be ignored.</FONT> 
<P><FONT class=extract>The <CODE>override</CODE> directive was not invented for escalation in the war between makefiles and command arguments. It was invented so you can alter and add to values that the user specifies with command arguments. </FONT>
<P><FONT class=extract>For example, suppose you always want the &#8216;<SAMP><SPAN class=samp>-g</SPAN></SAMP>&#8217; switch when you run the C compiler, but you would like to allow the user to specify the other switches with a command argument just as usual. You could use this <CODE>override</CODE> directive: </FONT><PRE class=example><FONT class=extract>     override CFLAGS += -g
</FONT></PRE>
<P><FONT class=extract>You can also use <CODE>override</CODE> directives with <CODE>define</CODE> directives. This is done as you might expect: </FONT><PRE class=example><FONT class=extract>     override define foo =
     bar
     endef
</FONT></PRE>
<P class=noindent><FONT class=extract>See </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Multi_002dLine"><FONT class=extract>Defining Multi-Line Variables</FONT></A><FONT class=extract>.</FONT>