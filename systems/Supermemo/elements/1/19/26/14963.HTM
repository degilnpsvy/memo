<DT><CODE><FONT class=clozed>$*</FONT></CODE> 
<DD>The stem with which an implicit rule matches (see <A href="https://www.gnu.org/software/make/manual/make.html#Pattern-Match">How Patterns Match</A>). If the target is <SAMP><SPAN class=file>dir/a.foo.b</SPAN></SAMP> and the target pattern is <SAMP><SPAN class=file>a.%.b</SPAN></SAMP> then the stem is <SAMP><SPAN class=file>dir/foo</SPAN></SAMP>. The stem is useful for constructing names of related files. <A name=index-stem_002c-variable-for-983></A>In a static pattern rule, the stem is part of the file name that matched the &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; in the target pattern. 
<P>In an explicit rule, there is no stem; so &#8216;<SAMP><SPAN class=samp>$*</SPAN></SAMP>&#8217; cannot be determined in that way. Instead, if the target name ends with a recognized suffix (see <A href="https://www.gnu.org/software/make/manual/make.html#Suffix-Rules">Old-Fashioned Suffix Rules</A>), &#8216;<SAMP><SPAN class=samp>$*</SPAN></SAMP>&#8217; is set to the target name minus the suffix. For example, if the target name is &#8216;<SAMP><SPAN class=samp>foo.c</SPAN></SAMP>&#8217;, then &#8216;<SAMP><SPAN class=samp>$*</SPAN></SAMP>&#8217; is set to &#8216;<SAMP><SPAN class=samp>foo</SPAN></SAMP>&#8217;, since &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217; is a suffix. GNU <CODE>make</CODE> does this bizarre thing only for compatibility with other implementations of <CODE>make</CODE>. You should generally avoid using &#8216;<SAMP><SPAN class=samp>$*</SPAN></SAMP>&#8217; except in implicit rules or static pattern rules. 
<P>If the target name in an explicit rule does not end with a recognized suffix, &#8216;<SAMP><SPAN class=samp>$*</SPAN></SAMP>&#8217; is set to the empty string for that rule.</P></DD>