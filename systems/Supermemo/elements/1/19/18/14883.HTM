<H3 class=section>9.6 Testing the Compilation of a Program</H3>
<P><A name=index-testing-compilation-732></A><A name=index-compilation_002c-testing-733></A><FONT class=clozed>Normally, when an error happens in executing a shell command, <CODE>make</CODE> gives up immediately, returning a nonzero status. No further recipes are executed for any target. The error implies that the goal cannot be correctly remade, and <CODE>make</CODE> reports this as soon as it knows. </FONT>
<P><FONT class=clozed>When you are compiling a program that you have just changed, this is not what you want. Instead, you would rather that <CODE>make</CODE> try compiling every file that can be tried, to show you as many compilation errors as possible. </FONT>
<P><A name=index-g_t_0040code_007b_002dk_007d-734></A><A name=index-g_t_0040code_007b_002d_002dkeep_002dgoing_007d-735></A><FONT class=clozed>On these occasions, you should use the &#8216;<SAMP><SPAN class=samp>-k</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>--keep-going</SPAN></SAMP>&#8217; flag. This tells <CODE>make</CODE> to continue to consider the other prerequisites of the pending targets, remaking them if necessary, before it gives up and returns nonzero status. For example, after an error in compiling one object file, &#8216;<SAMP><SPAN class=samp>make -k</SPAN></SAMP>&#8217; will continue compiling other object files even though it already knows that linking them will be impossible. In addition to continuing after failed shell commands, &#8216;<SAMP><SPAN class=samp>make -k</SPAN></SAMP>&#8217; will continue as much as possible after discovering that it does not know how to make a target or prerequisite file. This will always cause an error message, but without &#8216;<SAMP><SPAN class=samp>-k</SPAN></SAMP>&#8217;, it is a fatal error (see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Options-Summary"><FONT class=clozed>Summary of Options</FONT></A><FONT class=clozed>). </FONT>
<P><FONT class=clozed>The usual behavior of <CODE>make</CODE> assumes that your purpose is to get the goals up to date; once <CODE>make</CODE> learns that this is impossible, it might as well report the failure immediately. The &#8216;<SAMP><SPAN class=samp>-k</SPAN></SAMP>&#8217; flag says that the real purpose is to test as much as possible of the changes made in the program, perhaps to find several independent problems so that you can correct them all before the next attempt to compile.</FONT> This is why Emacs' <KBD>M-x compile</KBD> command passes the &#8216;<SAMP><SPAN class=samp>-k</SPAN></SAMP>&#8217; flag by default.