<DIV class=navheader style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<TABLE width="100%" summary="Navigation header">
<TBODY>
<TR>
<TH align=middle colSpan=3>6.4.&nbsp;SPIM Features</TH></TR>
<TR>
<TD align=left width="20%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch06s03.html">Prev</A>&nbsp;</TD>
<TH align=middle width="60%">Chapter&nbsp;6.&nbsp;SPIM, the MIPS Simulator</TH>
<TD align=right width="20%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch06s05.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=section title="6.4.&nbsp;SPIM Features" style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DIV class=titlepage>
<DIV>
<DIV>
<H2 class=title style="CLEAR: both"><A name=id286960853></A>6.4.&nbsp;SPIM Features</H2></DIV></DIV></DIV>
<P>SPIM has some useful features that are not documented in the SPIM manual.</P>
<DIV class=section title="6.4.1.&nbsp;Named Constants">
<DIV class=titlepage>
<DIV>
<DIV>
<H3 class=title><A name=id286960858></A>6.4.1.&nbsp;Named Constants</H3></DIV></DIV></DIV>
<P>Named constants are a feature of MAL that SPIM supports. The constant name follows the same naming rules as a variable. Note that this feature only works for integer numeric constants, not floating point or strings. Also note that this feature is provided by SPIM, not APP.</P><PRE class=programlisting>	    MIN_AGE = 18
	    </PRE>
<P>Constant names such as MIN_AGE above, once defined, can be used as immediate operands in immediate instructions, and as initializers in variable definition directives.</P><PRE class=programlisting>	    blt     $t0, MIN_AGE, too_young
	    </PRE>
<P>Constant definitions are not instructions, and hence are not executed at run-time. SPIM simply replaces each name with the value before executing the program. (Normally, this substitution would be done by the assembler, but SPIM is an assembly language interpreter.)</P></DIV></DIV>
<DIV class=navfooter style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<HR>

<TABLE width="100%" summary="Navigation footer">
<TBODY>
<TR>
<TD align=left width="40%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch06s03.html">Prev</A>&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=u href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch06.html">Up</A></TD>
<TD align=right width="40%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch06s05.html">Next</A></TD></TR>
<TR>
<TD vAlign=top align=left width="40%">6.3.&nbsp;Using SPIM&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=h href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/index.html">Home</A></TD>
<TD vAlign=top align=right width="40%">&nbsp;6.5.&nbsp;Homework</TD></TR></TBODY></TABLE></DIV>