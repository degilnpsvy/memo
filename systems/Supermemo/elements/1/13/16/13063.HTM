<DIV class=navheader style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<TABLE width="100%" summary="Navigation header">
<TBODY>
<TR>
<TH align=middle colSpan=3>7.2.&nbsp;Comments</TH></TR>
<TR>
<TD align=left width="20%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07.html">Prev</A>&nbsp;</TD>
<TH align=middle width="60%">Chapter&nbsp;7.&nbsp;Code Quality Standards</TH>
<TD align=right width="20%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07s03.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=section title=7.2.&nbsp;Comments style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DIV class=titlepage>
<DIV>
<DIV>
<H2 class=title style="CLEAR: both"><A name=id286960951></A>7.2.&nbsp;Comments</H2></DIV></DIV></DIV>
<DIV class=section title="7.2.1.&nbsp;Block Comments">
<DIV class=titlepage>
<DIV>
<DIV>
<H3 class=title><A name=id286915376></A>7.2.1.&nbsp;Block Comments</H3></DIV></DIV></DIV>
<P>There must be a block comment above each subprogram (including the main program) containing:</P>
<DIV class=orderedlist>
<OL class=orderedlist type=1>
<LI class=listitem>Description of what the subprogram does.</LI>
<LI class=listitem>Description of each argument to the subprogram.</LI>
<LI class=listitem>Descriptions of return values, if there are any.</LI>
<LI class=listitem>Author's name.</LI>
<LI class=listitem>Date created.</LI>
<LI class=listitem>Subsequent major modifications.</LI></OL></DIV>
<DIV class=example><A name=id286960974></A>
<P class=title><B>Example&nbsp;7.1.&nbsp;Block Comment</B></P>
<DIV class=example-contents><PRE class=programlisting>    ######################################################################### 
    #   Subprogram Description:
    #       Compute the sine of any real number x.
    #
    #   Arguments:
    #       $a0 = a real number x
    #
    #   Returns:
    #       $v0 = sine(x)
    #       $v1 = not used
    #
    #########################################################################
    
    #########################################################################
    #   Modification history:
    #   Date        Name        Modification
    #   2011-01-08  Jason Bacon Begin
    #########################################################################
    </PRE></DIV></DIV><BR class=example-break>
<P><SPAN class=emphasis><EM>Block comments should<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=emphasis><EM>NEVER</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>describe what happens inside a subprogram.<SPAN class=Apple-converted-space>&nbsp;</SPAN></EM></SPAN>Comments outside a subprogram are for the user of the subprogram, not the author. That is, they should regard the subprogram as a black-box, and discuss only how to call the subprogram, i.e. a description of its purpose, arguments and return value. Comments about how the subprogram accomplishes its task belong inside the subprogram with the code it describes.</P>
<P>The block comment above a subprogram should not require any changes following changes to the body of the subprogram. If they do, someone (probably you) will forget to update the comments after changing the code, and the comments will become lies, which are worse than no comments at all.</P>
<P>Comments should never be separated from the code they describe. Code and the comments that describe it should always be one cohesive bundle.</P>
<DIV class=example><A name=id286960998></A>
<P class=title><B>Example&nbsp;7.2.&nbsp;Limit Block Comments to Interface</B></P>
<DIV class=example-contents>
<P>Limited to interface:</P><PRE class=programlisting>    #########################################################################
    #   Description:
    #       Find smallest element in the list
    #
    
    #
    #########################################################################

	    .text
    sort:
    </PRE>
<P>Not limited to interface:</P><PRE class=programlisting>    #########################################################################
    #   Description:
    #       Use a linear search to find smallest element in the list
    #
    
    #
    #########################################################################

	    .text
    sort:
    </PRE></DIV></DIV><BR class=example-break>
<P>All block comments must use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=emphasis><EM>exactly</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>the same format.</P>
<P>There should be two blank lines above subprogram block comments and one blank line between code segments within a subprogram.</P></DIV>
<DIV class=section title="7.2.2.&nbsp;Internal Comments">
<DIV class=titlepage>
<DIV>
<DIV>
<H3 class=title><A name=id286961024></A>7.2.2.&nbsp;Internal Comments</H3></DIV></DIV></DIV>
<P>Code within a subprogram must be separated into sections that each have a distinct purpose. Typically, each section will be around 5 to 10 lines of code, and there will be no more than a few sections in each subprogram. (Most subprograms should be no more than 20 or 30 lines of code.)</P>
<P>Internal comments should include:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist type=disc>
<LI class=listitem>
<P>A brief comment above logical segment of code describing what the code block is for. There should be one blank line above each of these comments.</P>
<DIV class=example><A name=id286961040></A>
<P class=title><B>Example&nbsp;7.3.&nbsp;Internal Comments</B></P>
<DIV class=example-contents><PRE class=programlisting>	# Input dimensions of the stock
	read_int_var(length)
	read_int_var(width)

	# Cross-sectional area determines tensile strength
	lw      $t0, length
	lw      $t1, width
	mul     $t0, $t0, $t1
	sw      $t0, area
    </PRE></DIV></DIV><BR class=example-break></LI>
<LI class=listitem>
<P>Comments to the right of individual statements whose purpose is not obvious. Well-written code should rarely require documenting individual statements. Look at the example above to see how well-chosen and completely spelled-out variable names make the code itself easy to follow (self-documenting). Nevertheless, there will occasionally be complex or esoteric statements that require some clarification.</P></LI>
<LI class=listitem>
<P>All comments should discuss the algorithms, the code. They should discuss how the code serves the algorithm, not narrate what the code does. The comments in the code below are purely narrative, and an insult to the reader's intelligence.</P>
<DIV class=example><A name=id286961057></A>
<P class=title><B>Example&nbsp;7.4.&nbsp;Insulting Comments</B></P>
<DIV class=example-contents><PRE class=programlisting>	# Input length and width
	read_int_var(length)
	read_int_var(width)

	# Compute the area
	lw      $t0, length
	lw      $t1, width
	mul     $t0, $t0, $t1
	sw      $t0, area
    </PRE></DIV></DIV><BR class=example-break></LI></UL></DIV></DIV>
<P>All comments must be neat, and readable, with proper spelling and grammar. Do not cram elements together:</P>
<DIV class=example><A name=id286961070></A>
<P class=title><B>Example&nbsp;7.5.&nbsp;Crammed Comment</B></P>
<DIV class=example-contents><PRE class=programlisting>    #This comment is crammed against the delimiter
    </PRE></DIV></DIV><BR class=example-break>
<P>Comments should refer<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=emphasis><EM>only</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the module they describe. Block comments should never refer to another subprogram, and internal comments should not refer to another section of code besides the one they describe.</P>
<P>Subprograms should be designed, implemented, and documented as completely independent modules,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=emphasis><EM>not</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a piece of a larger program. The larger program provides the motivation for creating a subprogram, but the relationship ends there. Once implemented, each subprogram should be easy to move to a library and/or use in other programs<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=emphasis><EM>without modifying the code or the comments</EM></SPAN>.</P>
<DIV class=example><A name=id286961095></A>
<P class=title><B>Example&nbsp;7.6.&nbsp;Comments Referencing Other Modules</B></P>
<DIV class=example-contents><PRE class=programlisting>    #####################################################################
    #   Description:
    #       Find smallest element in the list.  ( OK )
    #       This function is used by the sort() function.  ( BAD )
    #####################################################################

	    .text
    find_low:
    </PRE></DIV></DIV><BR class=example-break></DIV>
<DIV class=navfooter style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<HR>

<TABLE width="100%" summary="Navigation footer">
<TBODY>
<TR>
<TD align=left width="40%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07.html">Prev</A>&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=u href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07.html">Up</A></TD>
<TD align=right width="40%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07s03.html">Next</A></TD></TR>
<TR>
<TD vAlign=top align=left width="40%">Chapter&nbsp;7.&nbsp;Code Quality Standards&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=h href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/index.html">Home</A></TD>
<TD vAlign=top align=right width="40%">&nbsp;7.3.&nbsp;Formatting</TD></TR></TBODY></TABLE></DIV>