<DIV class=navheader style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<TABLE width="100%" summary="Navigation header">
<TBODY>
<TR>
<TH align=middle colSpan=3>7.5.&nbsp;Execution</TH></TR>
<TR>
<TD align=left width="20%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07s04.html">Prev</A>&nbsp;</TD>
<TH align=middle width="60%">Chapter&nbsp;7.&nbsp;Code Quality Standards</TH>
<TD align=right width="20%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07s06.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=section title=7.5.&nbsp;Execution style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DIV class=titlepage>
<DIV>
<DIV>
<H2 class=title style="CLEAR: both"><A name=id286961193></A>7.5.&nbsp;Execution</H2></DIV></DIV></DIV>
<P>All programs are graded on how they run on miller or weise. If you program on another system, it is your responsibility to retest the program on miller or weise, which could be time-consuming. I recommend doing all development on miller or weise to avoid last-minute debugging issues.</P>
<P>Software should never impose unnecessary limitations. Use of arrays where they are not needed limits the number of input elements and increases memory use for no good reason. ( It makes your software bloat-ware. )</P>
<P>Input of dates, social security numbers, etc. should be flexible, i.e. should accept all standard separators ('-', '/', ' '), ignore whitespace, etc.</P>
<P>Choose appropriate data types for all variables. This generally means choosing the fastest type available with the necessary range and precision for the data.</P>
<P>Software should never waste resources: Use of arrays or linked lists when multiple elements need not be in memory at the same time wastes memory and imposes pointless limits on the input Use of inefficient algorithms wastes CPU time Re-reading files wastes I/O time</P>
<P>Don't do superstitious variable initializations, e.g.: They are a waste of time and screen space.</P>
<DIV class=example><A name=id286961214></A>
<P class=title><B>Example&nbsp;7.9.&nbsp;Superstitiously initializing $t0 to 0</B></P>
<DIV class=example-contents><PRE class=programlisting>    li      $t0, 0
    read_int_reg($t0)
    </PRE></DIV></DIV><BR class=example-break></DIV>
<DIV class=navfooter style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<HR>

<TABLE width="100%" summary="Navigation footer">
<TBODY>
<TR>
<TD align=left width="40%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07s04.html">Prev</A>&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=u href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07.html">Up</A></TD>
<TD align=right width="40%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch07s06.html">Next</A></TD></TR>
<TR>
<TD vAlign=top align=left width="40%">7.4.&nbsp;Readability&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=h href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/index.html">Home</A></TD>
<TD vAlign=top align=right width="40%">&nbsp;7.6.&nbsp;Error Handling</TD></TR></TBODY></TABLE></DIV>