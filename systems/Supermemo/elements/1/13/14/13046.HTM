<DIV class=navheader style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<TABLE width="100%" summary="Navigation header">
<TBODY>
<TR>
<TH align=middle colSpan=3>4.17.&nbsp;IEEE Floating Point Formats</TH></TR>
<TR>
<TD align=left width="20%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch04s16.html">Prev</A>&nbsp;</TD>
<TH align=middle width="60%">Chapter&nbsp;4.&nbsp;Data Representation</TH>
<TD align=right width="20%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch04s18.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=section title="4.17.&nbsp;IEEE Floating Point Formats" style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DIV class=titlepage>
<DIV>
<DIV>
<H2 class=title style="CLEAR: both"><A name=ieee_float></A>4.17.&nbsp;IEEE Floating Point Formats</H2></DIV></DIV></DIV>
<P></P>
<DIV class=table><A name=ieee32></A>
<P class=title><B>Table&nbsp;4.6.&nbsp;IEEE 32-bit Format</B></P>
<DIV class=table-contents>
<TABLE summary="IEEE 32-bit Format" border=1>
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH align=left>S</TH>
<TH align=left>E</TH>
<TH align=left>F</TH></TR></THEAD>
<TBODY>
<TR>
<TD align=left>31</TD>
<TD align=left>30-23</TD>
<TD align=left>22-0</TD></TR></TBODY></TABLE></DIV></DIV><BR class=table-break>
<P>S is the sign bit. Like integer formats, 1 indicates a negative number.</P>
<P>F is the fractional part of the mantissa. The non-fractional part is not stored, and assumed to be 1, so the actual mantissa is 1.F<SUB>2</SUB>. This method provides an extra bit of precision that need not be stored, so we have a 24-bit fixed point mantissa in reality, even though we only store 23 bits.</P>
<P>The exponent is stored in bias-127 notation, hence E, when interpreted as an unsigned binary number, is the exponent + 127. Biased notation is used because it facilitates the comparison of the exponents of two values using an unsigned binary comparitor.</P>
<P>The absolute value of the number is 1.F x 2<SUP>E-127</SUP>, except for some special cases:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist type=disc>
<LI class=listitem>If E = 255, and F is non-zero, then the value is NaN. (Not a Number)</LI>
<LI class=listitem>If E = 255, F = 0 and S = 1, then the value is -infinity.</LI>
<LI class=listitem>If E = 255, F = 0, and S = 0, then the value is +infinity.</LI>
<LI class=listitem>If E = 0, and F = 0, then the value is 0.</LI></UL></DIV>
<P>The floating-point hardware uses more than 23 bits for computation to avoid round-off error. This is particularly important when adding values with different exponents, since the mantissas must be offset by up to 128 bits before addition, thus producing a sum with up to 24 + 128 = 152 bits. The result is trimmed back to 24 bits when normalization occurs.</P>
<P>What is the largest positive value that can be represented in 32-bit IEEE floating point? Start by taking the largest positive mantissa and the largest positive exponent:</P>
<P>+1.11111111111111111111111<SUB>2</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>x 2<SUP>+128</SUP></P>
<P>However, any value where E=255 (exponent = 128) and the mantissa is non-zero is a special case representing NaN, so we must take the next largest exponent:</P>
<P>+1.11111111111111111111111<SUB>2</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>x 2<SUP>+127</SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 3.4028 x 10<SUP>38</SUP></P>
<P>What is the smallest positive value that can be represented in 32-bit IEEE floating point? Start by taking the smallest positive mantissa and the smallest negtative exponent:</P>
<P>1.00000000000000000000000<SUB>2</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>x 2<SUP>-127</SUP></P>
<P>However, since this value is a special case in IEEE format used to represent 0, we take the next smallest mantissa:</P>
<P>1.00000000000000000000001<SUB>2</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>x 2<SUP>-127</SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 1.1754 x 10<SUP>-38</SUP></P>
<P>Precision is 24 bits, or around 6-7 decimal digits.</P>
<P>The 64-bit format is similar to the 32-bit format, but uses an 11-bit bias-1023 exponent, and a 53-bit fixed-point mantissa in the form 1.x, where only the fractional portion x (52 bits) is stored.</P>
<DIV class=table><A name=ieee64></A>
<P class=title><B>Table&nbsp;4.7.&nbsp;IEEE 64-bit Format</B></P>
<DIV class=table-contents>
<TABLE summary="IEEE 64-bit Format" border=1>
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH align=left>S</TH>
<TH align=left>E</TH>
<TH align=left>F</TH></TR></THEAD>
<TBODY>
<TR>
<TD align=left>63</TD>
<TD align=left>62-52</TD>
<TD align=left>51-0</TD></TR></TBODY></TABLE></DIV></DIV><BR class=table-break>
<P>The range of the 64-bit format is +/- (2.2250 x 10<SUP>-308</SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to 1.7976 x 10<SUP>308</SUP>)</P></DIV>
<DIV class=navfooter style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<HR>

<TABLE width="100%" summary="Navigation footer">
<TBODY>
<TR>
<TD align=left width="40%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch04s16.html">Prev</A>&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=u href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch04.html">Up</A></TD>
<TD align=right width="40%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch04s18.html">Next</A></TD></TR>
<TR>
<TD vAlign=top align=left width="40%">4.16.&nbsp;Floating Point&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=h href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/index.html">Home</A></TD>
<TD vAlign=top align=right width="40%">&nbsp;4.18.&nbsp;Character Storage</TD></TR></TBODY></TABLE></DIV>