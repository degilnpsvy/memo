<DIV class=navheader style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<TABLE width="100%" summary="Navigation header">
<TBODY>
<TR>
<TH align=middle colSpan=3>8.3.&nbsp;If-Then-Else</TH></TR>
<TR>
<TD align=left width="20%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch08s02.html">Prev</A>&nbsp;</TD>
<TH align=middle width="60%">Chapter&nbsp;8.&nbsp;Program Flow in Assembly/Machine Language</TH>
<TD align=right width="20%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch08s04.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=section title=8.3.&nbsp;If-Then-Else style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DIV class=titlepage>
<DIV>
<DIV>
<H2 class=title style="CLEAR: both"><A name=id286961670></A>8.3.&nbsp;If-Then-Else</H2></DIV></DIV></DIV><PRE class=programlisting>	MAX_KIDS_AGE = 12
	
	if ( age &lt; MAX_KIDS_AGE )
	    free_peanuts = 1;
	else
	    free_peanuts = 0;
	</PRE>
<P>Which block executes faster, the if or the else?</P><PRE class=programlisting>		lw      $t0, age
		blt     $t0, MAX_KIDS_AGE, give_free_peanuts
		sw      $zero, free_peanuts
		j       done_with_peanuts
	give_free_peanuts:
		li      $t0, 1
		sw      $t0, free_peanuts
	done_with_peanuts:
	</PRE>
<P>Alternatively...</P><PRE class=programlisting>		lw      $t0, age
		bge     $t0, MAX_KIDS_AGE, no_free_peanuts
		li      $t0, 1
		sw      $t0, free_peanuts
		j       done_with_peanuts
	no_free_peanuts:
		sw      $zero, free_peanuts
	done_with_peanuts:
	</PRE>
<P>Statistically, it has been shown that if conditions are false more often than true, so most compilers are designed to favor speed in the else clause. Which code segment above favors the else clause?</P>
<P>You can probabilistically improve the speed of your HLL programs by choosing conditions that will favor the else clause. For example, if most passengers are MAX_KIDS_AGE or older, choose the condition<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=code>age &lt; MAX_KIDS_AGE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>rather than<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=code>age &gt;= MAX_KIDS_AGE</CODE>.</P>
<P>Floating point comparison instructions work slightly differently. Rather than bundling the comparison and branch into a single instruction, floating point uses separate compare and branch instructions. The floating point compare instructions set a flag (a 1-bit memory cell in the fp coprocessor) called the<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM class=glossterm>floating point coprocessor flag</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>to indicate whether the relation was true or false. The branch instructions then read this bit to determine whether or not to branch.</P><PRE class=programlisting>	if ( radius &lt; 0.0 )
	    System.out.printf("Error: Radius cannot be negative.\n")
	else
	    area = PI * radius * radius;
	</PRE><PRE class=programlisting>		.data
	# Constants
	ZERO:       .double 0.0
	PI:         .double 3.14159265358979326
	
	# Variables
	radius:     .double 0.0
	
	radius_prompt:  .asciiz "Please enter the radius of the sphere:"
	
		.text
		
		# Input radius
		print_string_var(radius_prompt)
		read_double_var(radius)
		l.d     $f0, radius
		
		# Validate radius
		l.d     $f2, ZERO
		c.lt.d  $f0, $f2
		bc1t    negative_radius
		
		l.d     $f2, PI
		j       done
	
	negative_radius:
		print_string_var(radius_error)
	
	done:
		...
	</PRE></DIV>
<DIV class=navfooter style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<HR>

<TABLE width="100%" summary="Navigation footer">
<TBODY>
<TR>
<TD align=left width="40%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch08s02.html">Prev</A>&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=u href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch08.html">Up</A></TD>
<TD align=right width="40%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch08s04.html">Next</A></TD></TR>
<TR>
<TD vAlign=top align=left width="40%">8.2.&nbsp;Arithmetic Expressions&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=h href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/index.html">Home</A></TD>
<TD vAlign=top align=right width="40%">&nbsp;8.4.&nbsp;Switch Statements</TD></TR></TBODY></TABLE></DIV>