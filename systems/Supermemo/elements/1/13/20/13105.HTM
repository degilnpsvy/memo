<DIV class=navheader style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<TABLE width="100%" summary="Navigation header">
<TBODY>
<TR>
<TH align=middle colSpan=3>12.6.&nbsp;Jump Tables</TH></TR>
<TR>
<TD align=left width="20%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch12s05.html">Prev</A>&nbsp;</TD>
<TH align=middle width="60%">Chapter&nbsp;12.&nbsp;Memory and Arrays</TH>
<TD align=right width="20%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch12s07.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=section title="12.6.&nbsp;Jump Tables" style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DIV class=titlepage>
<DIV>
<DIV>
<H2 class=title style="CLEAR: both"><A name=jump_table></A>12.6.&nbsp;Jump Tables</H2></DIV></DIV></DIV>
<P>Often, the values in a switch statement cover a very limited range. In these cases, it is practical to use a jump table rather than a series of comparisons to check every value, especially of the number of cases is large:</P>
<P>Switch</P><PRE class=programlisting>	switch(num)
	{
	    case    1:
		statement1;
		break;
	    case    2:
		statement2;
		break;
	    ...
	    case    100:
		statement100;
		break;
	    default:
		break;
	}
	</PRE>
<P>MAL</P><PRE class=programlisting>		    .text
		    
	
		    .data
		    # An array of code addresses
	jumptable:  .word   case1, case2, ... , case100
	
		    .text
		    
		    # Compute byte offset into jumptable
		    lw      $t0, num        # Num is index to array
		    sll     $t0, $t0, 2     # Each element is 4 bytes
		    
		    # Get array element (address of case label)
		    lw      $t1, jumptable($t0)
		    jr      $t1             # Go to address in $t0

	case1:      add     $t0, $t0, $t1
		    j       done
	
	case2:      sub     $t0, $t0, $t1
		    j       done
		    
		    ...
	
	done:
	</PRE>
<P>What is the advantage of a jump table?</P>
<P>Constructing HLL code to minimize the range of case values in a given switch statement may allow the compiler to utilize a jump table instead of a series of conditional checks. Some compilers are smarter than others.</P></DIV>
<DIV class=navfooter style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<HR>

<TABLE width="100%" summary="Navigation footer">
<TBODY>
<TR>
<TD align=left width="40%"><A accessKey=p href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch12s05.html">Prev</A>&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=u href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch12.html">Up</A></TD>
<TD align=right width="40%">&nbsp;<A accessKey=n href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/ch12s07.html">Next</A></TD></TR>
<TR>
<TD vAlign=top align=left width="40%">12.5.&nbsp;Lookup Tables&nbsp;</TD>
<TD align=middle width="20%"><A accessKey=h href="http://www.cs.uwm.edu/classes/cs315/Bacon/Lecture/HTML/index.html">Home</A></TD>
<TD vAlign=top align=right width="40%">&nbsp;12.7.&nbsp;Dynamic Memory Allocation</TD></TR></TBODY></TABLE></DIV>