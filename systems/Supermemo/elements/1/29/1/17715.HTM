<H3 class=section>2.8 Loading Shared Libraries Into Your Program</H3>
<P>This section describes a feature that is specific to <CODE>gawk</CODE>. </P>
<P>The &#8216;<SAMP>@load</SAMP>&#8217; keyword can be used to read external <CODE>awk</CODE> shared libraries. This allows you to link in compiled code that may offer superior performance and/or give you access to extended capabilities not supported by the <CODE>awk</CODE> language. The <CODE>AWKLIBPATH</CODE> variable is used to search for the shared library. Using &#8216;<SAMP>@load</SAMP>&#8217; is completely equivalent to using the <SAMP>-l</SAMP> command-line option. </P>
<P>If the shared library is not initially found in <CODE>AWKLIBPATH</CODE>, another search is conducted after appending the platform&#8217;s default shared library suffix to the filename. For example, on GNU/Linux systems, the suffix &#8216;<SAMP>.so</SAMP>&#8217; is used. </P>
<DIV class=example><PRE class=example>$ <KBD><EM>gawk '@load "ordchr"; BEGIN {print chr(65)}'</EM></KBD>
-| A
</PRE></DIV>
<P>This is equivalent to the following example: </P>
<DIV class=example><PRE class=example>$ <KBD><EM>gawk -lordchr 'BEGIN {print chr(65)}'</EM></KBD>
-| A
</PRE></DIV>
<P>For command-line usage, the <SAMP>-l</SAMP> option is more convenient, but &#8216;<SAMP>@load</SAMP>&#8217; is useful for embedding inside an <CODE>awk</CODE> source file that requires access to a shared library. </P>
<P><A href="http://www.gnu.org/software/gawk/manual/gawk.html#Dynamic-Extensions">Dynamic Extensions</A>, describes how to write extensions (in C or C++) that can be loaded with either &#8216;<SAMP>@load</SAMP>&#8217; or the <SAMP>-l</SAMP> option.