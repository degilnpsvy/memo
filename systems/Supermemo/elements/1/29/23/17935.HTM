<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>14.3.6 Miscellaneous Commands</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">There are a few more commands which do not fit into the previous categories, as follows:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DD><A name=index-debugger-commands_002c-dump></A><A name=index-dump-debugger-command></A></DD>
<DT><CODE>dump</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>[<VAR>filename</VAR>]</DT>
<DD>
<P>Dump bytecode of the program to standard output or to the file named in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>. This prints a representation of the internal instructions which<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>executes to implement the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>commands in a program. This can be very enlightening, as the following partial dump of Davide Brini&#8217;s obfuscated code (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/gawk/manual/gawk.html#Signature-Program">Signature Program</A>) demonstrates:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=smallexample><PRE style="FONT-SIZE: smaller" class=smallexample>gawk&gt; <KBD style="FONT-STYLE: oblique">dump</KBD>
-| 	# BEGIN
-| 
-| [     1:0xfcd340] Op_rule             : [in_rule = BEGIN] [source_file = brini.awk]
-| [     1:0xfcc240] Op_push_i           : "~" [MALLOC|STRING|STRCUR]
-| [     1:0xfcc2a0] Op_push_i           : "~" [MALLOC|STRING|STRCUR]
-| [     1:0xfcc280] Op_match            : 
-| [     1:0xfcc1e0] Op_store_var        : O
-| [     1:0xfcc2e0] Op_push_i           : "==" [MALLOC|STRING|STRCUR]
-| [     1:0xfcc340] Op_push_i           : "==" [MALLOC|STRING|STRCUR]
-| [     1:0xfcc320] Op_equal            : 
-| [     1:0xfcc200] Op_store_var        : o
-| [     1:0xfcc380] Op_push             : o
-| [     1:0xfcc360] Op_plus_i           : 0 [MALLOC|NUMCUR|NUMBER]
-| [     1:0xfcc220] Op_push_lhs         : o [do_reference = true]
-| [     1:0xfcc300] Op_assign_plus      : 
-| [      :0xfcc2c0] Op_pop              : 
-| [     1:0xfcc400] Op_push             : O
-| [     1:0xfcc420] Op_push_i           : "" [MALLOC|STRING|STRCUR]
-| [      :0xfcc4a0] Op_no_op            : 
-| [     1:0xfcc480] Op_push             : O
-| [      :0xfcc4c0] Op_concat           : [expr_count = 3] [concat_flag = 0]
-| [     1:0xfcc3c0] Op_store_var        : x
-| [     1:0xfcc440] Op_push_lhs         : X [do_reference = true]
-| [     1:0xfcc3a0] Op_postincrement    : 
-| [     1:0xfcc4e0] Op_push             : x
-| [     1:0xfcc540] Op_push             : o
-| [     1:0xfcc500] Op_plus             : 
-| [     1:0xfcc580] Op_push             : o
-| [     1:0xfcc560] Op_plus             : 
-| [     1:0xfcc460] Op_leq              : 
-| [      :0xfcc5c0] Op_jmp_false        : [target_jmp = 0xfcc5e0]
-| [     1:0xfcc600] Op_push_i           : "%c" [MALLOC|STRING|STRCUR]
-| [      :0xfcc660] Op_no_op            : 
-| [     1:0xfcc520] Op_assign_concat    : c
-| [      :0xfcc620] Op_jmp              : [target_jmp = 0xfcc440]
-| 
&#8230; 
-| 
-| [     2:0xfcc5a0] Op_K_printf         : [expr_count = 17] [redir_type = ""]
-| [      :0xfcc140] Op_no_op            : 
-| [      :0xfcc1c0] Op_atexit           : 
-| [      :0xfcc640] Op_stop             : 
-| [      :0xfcc180] Op_no_op            : 
-| [      :0xfcd150] Op_after_beginfile  : 
-| [      :0xfcc160] Op_no_op            : 
-| [      :0xfcc1a0] Op_after_endfile    : 
gawk&gt;
</PRE></DIV><A name=index-debugger-commands_002c-h-_0028help_0029></A><A name=index-debugger-commands_002c-help></A><A name=index-help-debugger-command></A><A name=index-h-debugger-command-_0028alias-for-help_0029></A></DD>
<DT><CODE>help</CODE></DT>
<DT><CODE>h</CODE></DT>
<DD>
<P>Print a list of all of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>debugger commands with a short summary of their usage. &#8216;<SAMP>help<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>command</VAR></SAMP>&#8217; prints the information about the command<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>command</VAR>.</P><A name=index-debugger-commands_002c-l-_0028list_0029></A><A name=index-debugger-commands_002c-list></A><A name=index-list-debugger-command></A><A name=index-l-debugger-command-_0028alias-for-list_0029></A></DD>
<DT><CODE>list</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>[<CODE>-</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><CODE>:</CODE><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR>&#8211;<VAR>m</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>function</VAR>]</DT>
<DT><CODE>l</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>[<CODE>-</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><CODE>:</CODE><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR>&#8211;<VAR>m</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>|<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>function</VAR>]</DT>
<DD>
<P>Print the specified lines (default 15) from the current source file or the file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>. The possible arguments to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>list</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are as follows:</P>
<DL compact>
<DT><CODE>-</CODE></DT>
<DD>
<P>Print lines before the lines last printed.</P></DD>
<DT><CODE>+</CODE></DT>
<DD>
<P>Print lines after the lines last printed.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>list</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>without any argument does the same thing.</P></DD>
<DT><VAR>n</VAR></DT>
<DD>
<P>Print lines centered around line number<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR>.</P></DD>
<DT><VAR>n</VAR>&#8211;<VAR>m</VAR></DT>
<DD>
<P>Print lines from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>m</VAR>.</P></DD>
<DT><VAR>filename</VAR><CODE>:</CODE><VAR>n</VAR></DT>
<DD>
<P>Print lines centered around line number<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>in source file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>. This command may change the current source file.</P></DD>
<DT><VAR>function</VAR></DT>
<DD>
<P>Print lines centered around beginning of the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>function</VAR>. This command may change the current source file.</P></DD></DL><A name=index-debugger-commands_002c-q-_0028quit_0029></A><A name=index-debugger-commands_002c-quit></A><A name=index-quit-debugger-command></A><A name=index-q-debugger-command-_0028alias-for-quit_0029></A><A name=index-exit-the-debugger></A></DD>
<DT><CODE>quit</CODE></DT>
<DT><CODE>q</CODE></DT>
<DD>
<P>Exit the debugger. Debugging is great fun, but sometimes we all have to tend to other obligations in life, and sometimes we find the bug, and are free to go on to the next one! As we saw above, if you are running a program, the debugger warns you if you accidentally type &#8216;<SAMP>q</SAMP>&#8217; or &#8216;<SAMP>quit</SAMP>&#8217;, to make sure you really want to quit.</P><A name=index-debugger-commands_002c-trace></A><A name=index-trace-debugger-command></A></DD>
<DT><CODE>trace</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>on</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: serif; FONT-WEIGHT: normal" class=roman>|</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>off</CODE></DT>
<DD>
<P>Turn on or off a continuous printing of instructions which are about to be executed, along with printing the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line which they implement. The default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>off</CODE>.</P>
<P>It is to be hoped that most of the &#8220;opcodes&#8221; in these instructions are fairly self-explanatory, and using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stepi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nexti</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>while<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>trace</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is on will make them into familiar friends.</P></DD></DL>