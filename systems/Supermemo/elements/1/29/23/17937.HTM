<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>14.5 Limitations and Future Plans</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We hope you find the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>debugger useful and enjoyable to work with, but as with any program, especially in its early releases, it still has some limitations. A few which are worth being aware of are:</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>At this point, the debugger does not give a detailed explanation of what you did wrong when you type in something it doesn&#8217;t like. Rather, it just responds &#8216;<SAMP>syntax error</SAMP>&#8217;. When you do figure out what your mistake was, though, you&#8217;ll feel like a real guru.</LI>
<LI>If you perused the dump of opcodes in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/gawk/manual/gawk.html#Miscellaneous-Debugger-Commands">Miscellaneous Debugger Commands</A>, (or if you are already familiar with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>internals), you will realize that much of the internal manipulation of data in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE>, as in many interpreters, is done on a stack.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>Op_push</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>Op_pop</CODE>, etc., are the &#8220;bread and butter&#8221; of most<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>code. Unfortunately, as of now, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>debugger does not allow you to examine the stack&#8217;s contents.
<P>That is, the intermediate results of expression evaluation are on the stack, but cannot be printed. Rather, only variables which are defined in the program can be printed. Of course, a workaround for this is to use more explicit variables at the debugging stage and then change back to obscure, perhaps more optimal code later.</P></LI>
<LI>There is no way to look &#8220;inside&#8221; the process of compiling regular expressions to see if you got it right. As an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>programmer, you are expected to know what<CODE>/[^[:alnum:][:blank:]]/</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>means.</LI>
<LI>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>debugger is designed to be used by running a program (with all its parameters) on the command line, as described in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/gawk/manual/gawk.html#Debugger-Invocation">Debugger Invocation</A>. There is no way (as of now) to attach or &#8220;break in&#8221; to a running program. This seems reasonable for a language which is used mainly for quickly executing, short programs.</LI>
<LI>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>debugger only accepts source supplied with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>-f</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.</LI></UL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Look forward to a future release when these and other missing features may be added, and of course feel free to try to add them yourself!