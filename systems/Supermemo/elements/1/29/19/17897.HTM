<H4 class=subsection>11.3.6 Removing Duplicates from Unsorted Text</H4><A name=index-lines_002c-duplicate_002c-removing></A>
<P>The <CODE>uniq</CODE> program (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Uniq-Program">Uniq Program</A>), removes duplicate lines from <EM>sorted</EM> data. </P>
<P>Suppose, however, you need to remove duplicate lines from a data file but that you want to preserve the order the lines are in. A good example of this might be a shell history file. The history file keeps a copy of all the commands you have entered, and it is not unusual to repeat a command several times in a row. Occasionally you might want to compact the history by removing duplicate entries. Yet it is desirable to maintain the order of the original commands. </P>
<P>This simple program does the job. It uses two arrays. The <CODE>data</CODE> array is indexed by the text of each line. For each line, <CODE>data[$0]</CODE> is incremented. If a particular line has not been seen before, then <CODE>data[$0]</CODE> is zero. In this case, the text of the line is stored in <CODE>lines[count]</CODE>. Each element of <CODE>lines</CODE> is a unique command, and the indices of <CODE>lines</CODE> indicate the order in which those lines are encountered. The <CODE>END</CODE> rule simply prints out the lines, in order: </P><A name=index-Rakitzis_002c-Byron></A><A name=index-histsort_002eawk-program></A>
<DIV class=example><PRE class=example># histsort.awk --- compact a shell history file
# Thanks to Byron Rakitzis for the general idea

</PRE><PRE class=example>{
    if (data[$0]++ == 0)
        lines[++count] = $0
}
</PRE><PRE class=example></PRE><PRE class=example>END {
    for (i = 1; i &lt;= count; i++)
        print lines[i]
}
</PRE></DIV>
<P>This program also provides a foundation for generating other useful information. For example, using the following <CODE>print</CODE> statement in the <CODE>END</CODE> rule indicates how often a particular command is used: </P>
<DIV class=example><PRE class=example>print data[lines[i]], lines[i]
</PRE></DIV>
<P>This works because <CODE>data[$0]</CODE> is incremented each time a line is seen.