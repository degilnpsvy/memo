<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>16.7.12 Extension Time Functions</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">These functions can be used either by invoking<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>with a command-line argument of &#8216;<SAMP>-l time</SAMP>&#8217; or by inserting &#8216;<SAMP>@load "time"</SAMP>&#8217; in your script.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>@load "time"</CODE></DT>
<DD>
<P>This is how you load the extension.</P><A name=index-gettimeofday_0028_0029-extension-function></A></DD>
<DT><CODE>the_time = gettimeofday()</CODE></DT>
<DD>
<P>Return the time in seconds that has elapsed since 1970-01-01 UTC as a floating point value. If the time is unavailable on this platform, return -1 and set<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERRNO</CODE>. The returned time should have sub-second precision, but the actual precision may vary based on the platform. If the standard C<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gettimeofday()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call is available on this platform, then it simply returns the value. Otherwise, if on Windows, it tries to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>GetSystemTimeAsFileTime()</CODE>.</P><A name=index-sleep_0028_0029-extension-function></A></DD>
<DT><CODE>result = sleep(<VAR>seconds</VAR>)</CODE></DT>
<DD>
<P>Attempt to sleep for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>seconds</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>seconds. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>seconds</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is negative, or the attempt to sleep fails, return -1 and set<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERRNO</CODE>. Otherwise, return zero after sleeping for the indicated amount of time. Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>seconds</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>may be a floating-point (non-integral) value. Implementation details: depending on platform availability, this function tries to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nanosleep()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>select()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to implement the delay.</P></DD></DL>