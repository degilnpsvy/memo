<H4 class=subsubsection>6.1.3.2 Assigning Variables on the Command Line</H4><A name=index-variables_002c-assigning-on-command-line></A><A name=index-command-line_002c-variables_002c-assigning-on></A>
<P>Any <CODE>awk</CODE> variable can be set by including a <EM>variable assignment</EM> among the arguments on the command line when <CODE>awk</CODE> is invoked (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Other-Arguments">Other Arguments</A>). Such an assignment has the following form: </P>
<DIV class=example><PRE class=example><VAR>variable</VAR>=<VAR>text</VAR>
</PRE></DIV><A name=index-_002dv-option-1></A>
<P>With it, a variable is set either at the beginning of the <CODE>awk</CODE> run or in between input files. When the assignment is preceded with the <SAMP>-v</SAMP> option, as in the following: </P>
<DIV class=example><PRE class=example>-v <VAR>variable</VAR>=<VAR>text</VAR>
</PRE></DIV>
<P>the variable is set at the very beginning, even before the <CODE>BEGIN</CODE> rules execute. The <SAMP>-v</SAMP> option and its assignment must precede all the file name arguments, as well as the program text. (See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>, for more information about the <SAMP>-v</SAMP> option.) Otherwise, the variable assignment is performed at a time determined by its position among the input file arguments&#8212;after the processing of the preceding input file argument. For example: </P>
<DIV class=example><PRE class=example>awk '{ print $n }' n=4 inventory-shipped n=2 mail-list
</PRE></DIV>
<P>prints the value of field number <CODE>n</CODE> for all input records. Before the first file is read, the command line sets the variable <CODE>n</CODE> equal to four. This causes the fourth field to be printed in lines from <SAMP>inventory-shipped</SAMP>. After the first file has finished, but before the second file is started, <CODE>n</CODE> is set to two, so that the second field is printed in lines from <SAMP>mail-list</SAMP>: </P>
<DIV class=example><PRE class=example>$ <KBD><EM>awk '{ print $n }' n=4 inventory-shipped n=2 mail-list</EM></KBD>
-| 15
-| 24
&#8230;
-| 555-5553
-| 555-3412
&#8230;
</PRE></DIV><A name=index-dark-corner_002c-command_002dline-arguments></A>
<P>Command-line arguments are made available for explicit examination by the <CODE>awk</CODE> program in the <CODE>ARGV</CODE> array (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#ARGC-and-ARGV">ARGC and ARGV</A>). <CODE>awk</CODE> processes the values of command-line assignments for escape sequences (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Escape-Sequences">Escape Sequences</A>). (d.c.)