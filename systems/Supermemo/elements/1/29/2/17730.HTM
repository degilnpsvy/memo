<H3 class=section>4.3 Nonconstant Field Numbers</H3><A name=index-fields_002c-numbers></A><A name=index-field-numbers></A>
<P>The number of a field does not need to be a constant. Any expression in the <CODE>awk</CODE> language can be used after a &#8216;<SAMP>$</SAMP>&#8217; to refer to a field. The value of the expression specifies the field number. If the value is a string, rather than a number, it is converted to a number. Consider this example: </P>
<DIV class=example><PRE class=example>awk '{ print $NR }'
</PRE></DIV>
<P>Recall that <CODE>NR</CODE> is the number of records read so far: one in the first record, two in the second, etc. So this example prints the first field of the first record, the second field of the second record, and so on. For the twentieth record, field number 20 is printed; most likely, the record has fewer than 20 fields, so this prints a blank line. Here is another example of using expressions as field numbers: </P>
<DIV class=example><PRE class=example>awk '{ print $(2*2) }' mail-list
</PRE></DIV>
<P><CODE>awk</CODE> evaluates the expression &#8216;<SAMP>(2*2)</SAMP>&#8217; and uses its value as the number of the field to print. The &#8216;<SAMP>*</SAMP>&#8217; sign represents multiplication, so the expression &#8216;<SAMP>2*2</SAMP>&#8217; evaluates to four. The parentheses are used so that the multiplication is done before the &#8216;<SAMP>$</SAMP>&#8217; operation; they are necessary whenever there is a binary operator in the field-number expression. This example, then, prints the type of relationship (the fourth field) for every line of the file <SAMP>mail-list</SAMP>. (All of the <CODE>awk</CODE> operators are listed, in order of decreasing precedence, in <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Precedence">Precedence</A>.) </P>
<P>If the field number you compute is zero, you get the entire record. Thus, &#8216;<SAMP>$(2-2)</SAMP>&#8217; has the same value as <CODE>$0</CODE>. Negative field numbers are not allowed; trying to reference one usually terminates the program. (The POSIX standard does not define what happens when you reference a negative field number. <CODE>gawk</CODE> notices this and terminates your program. Other <CODE>awk</CODE> implementations may behave differently.) </P>
<P>As mentioned in <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Fields">Fields</A>, <CODE>awk</CODE> stores the current record&#8217;s number of fields in the built-in variable <CODE>NF</CODE> (also see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din-Variables">Built-in Variables</A>). The expression <CODE>$NF</CODE> is not a special feature&#8212;it is the direct consequence of evaluating <CODE>NF</CODE> and using its value as a field number.