<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>15.4.1 Setting the Working Precision</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-PREC-variable-1></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-setting-working-precision></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>uses a global working precision; it does not keep track of the precision or accuracy of individual numbers. Performing an arithmetic operation or calling a built-in function rounds the result to the current working precision. The default working precision is 53 bits, which can be modified using the built-in variable<CODE>PREC</CODE>. You can also set the value to one of the pre-defined case-insensitive strings shown in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/gawk/manual/gawk.html#table_002dpredefined_002dprecision_002dstrings">Table 15.3</A>, to emulate an IEEE-754 binary format.</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=float><A name=table_002dpredefined_002dprecision_002dstrings></A>
<TABLE>
<THEAD>
<TR>
<TH><CODE>PREC</CODE></TH>
<TH>IEEE-754 Binary Format</TH></TR></THEAD>
<TBODY>
<TR>
<TD><CODE>"half"</CODE></TD>
<TD>16-bit half-precision.</TD></TR>
<TR>
<TD><CODE>"single"</CODE></TD>
<TD>Basic 32-bit single precision.</TD></TR>
<TR>
<TD><CODE>"double"</CODE></TD>
<TD>Basic 64-bit double precision.</TD></TR>
<TR>
<TD><CODE>"quad"</CODE></TD>
<TD>Basic 128-bit quadruple precision.</TD></TR>
<TR>
<TD><CODE>"oct"</CODE></TD>
<TD>256-bit octuple precision.</TD></TR></TBODY></TABLE>
<DIV class=float-caption>
<P><STRONG>Table 15.3:<SPAN class=Apple-converted-space>&nbsp;</SPAN></STRONG>Predefined precision strings for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>PREC</CODE></P></DIV></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The following example illustrates the effects of changing precision on arithmetic operations:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>$ <KBD style="FONT-STYLE: oblique">gawk -M -v PREC=100 'BEGIN { x = 1.0e-400; print x + 0</KBD>
&gt;   <KBD style="FONT-STYLE: oblique">PREC = "double"; print x + 0 }'</KBD>
-| 1e-400
-| 0
</PRE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Binary and decimal precisions are related approximately, according to the formula:</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><VAR>prec</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 3.322 *<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dps</VAR></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Here,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>prec</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>denotes the binary precision (measured in bits) and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dps</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(short for decimal places) is the decimal digits. We can easily calculate how many decimal digits the 53-bit significand of an IEEE double is equivalent to: 53 / 3.322 which is equal to about 15.95. But what does 15.95 digits actually mean? It depends whether you are concerned about how many digits you can rely on, or how many digits you need.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">It is important to know how many bits it takes to uniquely identify a double-precision value (the C type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE>). If you want to convert from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to decimal and back to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(e.g., saving a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>representing an intermediate result to a file, and later reading it back to restart the computation), then a few more decimal digits are required. 17 digits is generally enough for a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">It can also be important to know what decimal numbers can be uniquely represented with a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE>. If you want to convert from decimal to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and back again, 15 digits is the most that you can get. Stated differently, you should not present the numbers from your floating-point computations with more than 15 significant digits in them.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Conversely, it takes a precision of 332 bits to hold an approximation of the constant<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>pi</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>that is accurate to 100 decimal places.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">You should always add some extra bits in order to avoid the confusing round-off issues that occur because numbers are stored internally in binary.