<H4 class=subsection>4.9.9 Points to Remember About <CODE>getline</CODE></H4>
<P>Here are some miscellaneous points about <CODE>getline</CODE> that you should bear in mind: </P>
<UL>
<LI>When <CODE>getline</CODE> changes the value of <CODE>$0</CODE> and <CODE>NF</CODE>, <CODE>awk</CODE> does <EM>not</EM> automatically jump to the start of the program and start testing the new record against every pattern. However, the new record is tested against any subsequent rules. </LI>
<LI><A name=index-differences-in-awk-and-gawk_002c-implementation-limitations></A><A name=index-implementation-issues_002c-gawk_002c-limits></A><A name=index-awk_002c-implementations_002c-limits></A><A name=index-gawk_002c-implementation-issues_002c-limits></A>Many <CODE>awk</CODE> implementations limit the number of pipelines that an <CODE>awk</CODE> program may have open to just one. In <CODE>gawk</CODE>, there is no such limit. You can open as many pipelines (and coprocesses) as the underlying operating system permits. </LI>
<LI><A name=index-side-effects_002c-FILENAME-variable></A><A name=index-FILENAME-variable_002c-getline_002c-setting-with></A><A name=index-dark-corner_002c-FILENAME-variable></A><A name=index-getline-command_002c-FILENAME-variable-and></A><A name=index-BEGIN-pattern_002c-getline-and></A>An interesting side effect occurs if you use <CODE>getline</CODE> without a redirection inside a <CODE>BEGIN</CODE> rule. Because an unredirected <CODE>getline</CODE> reads from the command-line data files, the first <CODE>getline</CODE> command causes <CODE>awk</CODE> to set the value of <CODE>FILENAME</CODE>. Normally, <CODE>FILENAME</CODE> does not have a value inside <CODE>BEGIN</CODE> rules, because you have not yet started to process the command-line data files. (d.c.) (See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#BEGIN_002fEND">BEGIN/END</A>, also see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Auto_002dset">Auto-set</A>.) </LI>
<LI>Using <CODE>FILENAME</CODE> with <CODE>getline</CODE> (&#8216;<SAMP>getline &lt; FILENAME</SAMP>&#8217;) is likely to be a source for confusion. <CODE>awk</CODE> opens a separate input stream from the current input file. However, by not using a variable, <CODE>$0</CODE> and <CODE>NR</CODE> are still updated. If you&#8217;re doing this, it&#8217;s probably by accident, and you should reconsider what it is you&#8217;re trying to accomplish. </LI>
<LI><A href="http://www.gnu.org/software/gawk/manual/gawk.html#Getline-Summary">Getline Summary</A>, presents a table summarizing the <CODE>getline</CODE> variants and which variables they can affect. It is worth noting that those variants which do not use redirection can cause <CODE>FILENAME</CODE> to be updated if they cause <CODE>awk</CODE> to start reading a new input file. </LI>
<LI>If the variable being assigned is an expression with side effects, different versions of <CODE>awk</CODE> behave differently upon encountering end-of-file. Some versions don&#8217;t evaluate the expression; many versions (including <CODE>gawk</CODE>) do. Here is an example, due to Duncan Moore: 
<DIV class=example><PRE class=example>BEGIN {
    system("echo 1 &gt; f")
    while ((getline a[++c] &lt; "f") &gt; 0) { }
    print c
}
</PRE></DIV>
<P>Here, the side effect is the &#8216;<SAMP>++c</SAMP>&#8217;. Is <CODE>c</CODE> incremented if end of file is encountered, before the element in <CODE>a</CODE> is assigned? </P>
<P><CODE>gawk</CODE> treats <CODE>getline</CODE> like a function call, and evaluates the expression &#8216;<SAMP>a[++c]</SAMP>&#8217; before attempting to read from <SAMP>f</SAMP>. Other versions of <CODE>awk</CODE> only evaluate the expression once they know that there is a string value to be assigned. Caveat Emptor. </P></LI></UL>