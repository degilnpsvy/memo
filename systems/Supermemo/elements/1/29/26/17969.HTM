<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>16.4.6.2 Registering An Exit Callback Function</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">An<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>exit callback</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is a function that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>calls before it exits. Such functions are useful if you have general &#8220;clean up&#8221; tasks that should be performed in your extension (such as closing data base connections or other resource deallocations). You can register such a function with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>using the following function.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>void awk_atexit(void (*funcp)(void *data, int exit_status),</CODE></DT>
<DT><CODE>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void *arg0);</CODE></DT>
<DD>
<P>The parameters are:</P>
<DL compact>
<DT><CODE>funcp</CODE></DT>
<DD>
<P>A pointer to the function to be called before<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>exits. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>data</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>parameter will be the original value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>arg0</CODE>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>exit_status</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>parameter is the exit status value that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>intends to pass to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>exit()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call.</P></DD>
<DT><CODE>arg0</CODE></DT>
<DD>
<P>A pointer to private data which<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>saves in order to pass to the function pointed to by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>funcp</CODE>.</P></DD></DL></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Exit callback functions are called in Last-In-First-Out (LIFO) order&#8212;that is, in the reverse order in which they are registered with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE>.