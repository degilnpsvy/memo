<H4 class=subsection>7.4.2 The <CODE>while</CODE> Statement</H4><A name=index-while-statement></A><A name=index-loops></A><A name=index-loops_002c-while></A><A name=index-loops_002c-See-Also-while-statement></A>
<P>In programming, a <EM>loop</EM> is a part of a program that can be executed two or more times in succession. The <CODE>while</CODE> statement is the simplest looping statement in <CODE>awk</CODE>. It repeatedly executes a statement as long as a condition is true. For example: </P>
<DIV class=example><PRE class=example>while (<VAR>condition</VAR>)
  <VAR>body</VAR>
</PRE></DIV><A name=index-body_002c-in-loops></A>
<P><VAR>body</VAR> is a statement called the <EM>body</EM> of the loop, and <VAR>condition</VAR> is an expression that controls how long the loop keeps running. The first thing the <CODE>while</CODE> statement does is test the <VAR>condition</VAR>. If the <VAR>condition</VAR> is true, it executes the statement <VAR>body</VAR>. After <VAR>body</VAR> has been executed, <VAR>condition</VAR> is tested again, and if it is still true, <VAR>body</VAR> is executed again. This process repeats until the <VAR>condition</VAR> is no longer true. If the <VAR>condition</VAR> is initially false, the body of the loop is never executed and <CODE>awk</CODE> continues with the statement following the loop. This example prints the first three fields of each record, one per line: </P>
<DIV class=example><PRE class=example>awk '{
       i = 1
       while (i &lt;= 3) {
           print $i
           i++
       }
}' inventory-shipped
</PRE></DIV>
<P>The body of this loop is a compound statement enclosed in braces, containing two statements. The loop works in the following manner: first, the value of <CODE>i</CODE> is set to one. Then, the <CODE>while</CODE> statement tests whether <CODE>i</CODE> is less than or equal to three. This is true when <CODE>i</CODE> equals one, so the <CODE>i</CODE>-th field is printed. Then the &#8216;<SAMP>i++</SAMP>&#8217; increments the value of <CODE>i</CODE> and the loop repeats. The loop terminates when <CODE>i</CODE> reaches four. </P>
<P>A newline is not required between the condition and the body; however using one makes the program clearer unless the body is a compound statement or else is very simple. The newline after the open-brace that begins the compound statement is not required either, but the program is harder to read without it.