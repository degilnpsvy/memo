<H4 class=subsection>7.4.7 The <CODE>continue</CODE> Statement</H4><A name=index-continue-statement></A>
<P>Similar to <CODE>break</CODE>, the <CODE>continue</CODE> statement is used only inside <CODE>for</CODE>, <CODE>while</CODE>, and <CODE>do</CODE> loops. It skips over the rest of the loop body, causing the next cycle around the loop to begin immediately. Contrast this with <CODE>break</CODE>, which jumps out of the loop altogether. </P>
<P>The <CODE>continue</CODE> statement in a <CODE>for</CODE> loop directs <CODE>awk</CODE> to skip the rest of the body of the loop and resume execution with the increment-expression of the <CODE>for</CODE> statement. The following program illustrates this fact: </P>
<DIV class=example><PRE class=example>BEGIN {
     for (x = 0; x &lt;= 20; x++) {
         if (x == 5)
             continue
         printf "%d ", x
     }
     print ""
}
</PRE></DIV>
<P>This program prints all the numbers from 0 to 20&#8212;except for 5, for which the <CODE>printf</CODE> is skipped. Because the increment &#8216;<SAMP>x++</SAMP>&#8217; is not skipped, <CODE>x</CODE> does not remain stuck at 5. Contrast the <CODE>for</CODE> loop from the previous example with the following <CODE>while</CODE> loop: </P>
<DIV class=example><PRE class=example>BEGIN {
     x = 0
     while (x &lt;= 20) {
         if (x == 5)
             continue
         printf "%d ", x
         x++
     }
     print ""
}
</PRE></DIV>
<P>This program loops forever once <CODE>x</CODE> reaches 5. </P><A name=index-POSIX-awk_002c-continue-statement-and></A><A name=index-dark-corner_002c-continue-statement></A><A name=index-gawk_002c-continue-statement-in></A><A name=index-Brian-Kernighan_0027s-awk-9></A>
<P>The <CODE>continue</CODE> statement has no special meaning with respect to the <CODE>switch</CODE> statement, nor does it have any meaning when used outside the body of a loop. Historical versions of <CODE>awk</CODE> treated a <CODE>continue</CODE> statement outside a loop the same way they treated a <CODE>break</CODE> statement outside a loop: as if it were a <CODE>next</CODE> statement (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Next-Statement">Next Statement</A>). (d.c.) Recent versions of Brian Kernighan&#8217;s <CODE>awk</CODE> no longer work this way, nor does <CODE>gawk</CODE>.