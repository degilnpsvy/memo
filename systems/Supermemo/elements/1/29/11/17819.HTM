<H4 class=subsection>7.4.9 The <CODE>nextfile</CODE> Statement</H4><A name=index-nextfile-statement></A>
<P>The <CODE>nextfile</CODE> statement is similar to the <CODE>next</CODE> statement. However, instead of abandoning processing of the current record, the <CODE>nextfile</CODE> statement instructs <CODE>awk</CODE> to stop processing the current data file. </P>
<P>Upon execution of the <CODE>nextfile</CODE> statement, <CODE>FILENAME</CODE> is updated to the name of the next data file listed on the command line, <CODE>FNR</CODE> is reset to one, and processing starts over with the first rule in the program. If the <CODE>nextfile</CODE> statement causes the end of the input to be reached, then the code in any <CODE>END</CODE> rules is executed. An exception to this is when <CODE>nextfile</CODE> is invoked during execution of any statement in an <CODE>END</CODE> rule; In this case, it causes the program to stop immediately. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#BEGIN_002fEND">BEGIN/END</A>. </P>
<P>The <CODE>nextfile</CODE> statement is useful when there are many data files to process but it isn&#8217;t necessary to process every record in every file. Without <CODE>nextfile</CODE>, in order to move on to the next data file, a program would have to continue scanning the unwanted records. The <CODE>nextfile</CODE> statement accomplishes this much more efficiently. </P>
<P>In <CODE>gawk</CODE>, execution of <CODE>nextfile</CODE> causes additional things to happen: any <CODE>ENDFILE</CODE> rules are executed except in the case as mentioned below, <CODE>ARGIND</CODE> is incremented, and any <CODE>BEGINFILE</CODE> rules are executed. (<CODE>ARGIND</CODE> hasn&#8217;t been introduced yet. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din-Variables">Built-in Variables</A>.) </P>
<P>With <CODE>gawk</CODE>, <CODE>nextfile</CODE> is useful inside a <CODE>BEGINFILE</CODE> rule to skip over a file that would otherwise cause <CODE>gawk</CODE> to exit with a fatal error. In this case, <CODE>ENDFILE</CODE> rules are not executed. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#BEGINFILE_002fENDFILE">BEGINFILE/ENDFILE</A>. </P>
<P>While one might think that &#8216;<SAMP>close(FILENAME)</SAMP>&#8217; would accomplish the same as <CODE>nextfile</CODE>, this isn&#8217;t true. <CODE>close()</CODE> is reserved for closing files, pipes, and coprocesses that are opened with redirections. It is not related to the main processing that <CODE>awk</CODE> does with the files listed in <CODE>ARGV</CODE>. </P>
<BLOCKQUOTE>
<P><B>NOTE:</B> For many years, <CODE>nextfile</CODE> was a <CODE>gawk</CODE> extension. As of September, 2012, it was accepted for inclusion into the POSIX standard. See <A href="http://austingroupbugs.net/view.php?id=607">the Austin Group website</A>. </P></BLOCKQUOTE><A name=index-functions_002c-user_002ddefined_002c-next_002fnextfile-statements-and-1></A><A name=index-nextfile-statement_002c-user_002ddefined-functions-and></A><A name=index-Brian-Kernighan_0027s-awk-10></A><A name=index-mawk-utility-3></A>
<P>The current version of the Brian Kernighan&#8217;s <CODE>awk</CODE>, and <CODE>mawk</CODE> (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Other-Versions">Other Versions</A>) also support <CODE>nextfile</CODE>. However, they don&#8217;t allow the <CODE>nextfile</CODE> statement inside function bodies (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#User_002ddefined">User-defined</A>). <CODE>gawk</CODE> does; a <CODE>nextfile</CODE> inside a function body reads the next record and starts processing it with the first rule in the program, just as any other <CODE>nextfile</CODE> statement.