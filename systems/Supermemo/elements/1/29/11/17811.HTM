<H4 class=subsection>7.4.1 The <CODE>if</CODE>-<CODE>else</CODE> Statement</H4><A name=index-if-statement></A>
<P>The <CODE>if</CODE>-<CODE>else</CODE> statement is <CODE>awk</CODE>&#8217;s decision-making statement. It looks like this: </P>
<DIV class=example><PRE class=example>if (<VAR>condition</VAR>) <VAR>then-body</VAR> <SPAN class=roman><FONT face=Batang>[</FONT></SPAN>else <VAR>else-body</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN>
</PRE></DIV>
<P>The <VAR>condition</VAR> is an expression that controls what the rest of the statement does. If the <VAR>condition</VAR> is true, <VAR>then-body</VAR> is executed; otherwise, <VAR>else-body</VAR> is executed. The <CODE>else</CODE> part of the statement is optional. The condition is considered false if its value is zero or the null string; otherwise, the condition is true. Refer to the following: </P>
<DIV class=example><PRE class=example>if (x % 2 == 0)
    print "x is even"
else
    print "x is odd"
</PRE></DIV>
<P>In this example, if the expression &#8216;<SAMP>x % 2 == 0</SAMP>&#8217; is true (that is, if the value of <CODE>x</CODE> is evenly divisible by two), then the first <CODE>print</CODE> statement is executed; otherwise, the second <CODE>print</CODE> statement is executed. If the <CODE>else</CODE> keyword appears on the same line as <VAR>then-body</VAR> and <VAR>then-body</VAR> is not a compound statement (i.e., not surrounded by curly braces), then a semicolon must separate <VAR>then-body</VAR> from the <CODE>else</CODE>. To illustrate this, the previous example can be rewritten as: </P>
<DIV class=example><PRE class=example>if (x % 2 == 0) print "x is even"; else
        print "x is odd"
</PRE></DIV>
<P>If the &#8216;<SAMP>;</SAMP>&#8217; is left out, <CODE>awk</CODE> can&#8217;t interpret the statement and it produces a syntax error. Don&#8217;t actually write programs this way, because a human reader might fail to see the <CODE>else</CODE> if it is not the first thing on its line.