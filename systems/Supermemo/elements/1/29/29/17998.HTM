<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>16.7.3 Interface To<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fork()</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wait()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>waitpid()</CODE></H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fork</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>extension adds three functions, as follows.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>@load "fork"</CODE></DT>
<DD>
<P>This is how you load the extension.</P><A name=index-fork_0028_0029-extension-function></A></DD>
<DT><CODE>pid = fork()</CODE></DT>
<DD>
<P>This function creates a new process. The return value is zero in the child and the process-ID number of the child in the parent, or -1 upon error. In the latter case,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERRNO</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>indicates the problem. In the child,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>PROCINFO["pid"]</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>PROCINFO["ppid"]</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are updated to reflect the correct values.</P><A name=index-waitpid_0028_0029-extension-function></A></DD>
<DT><CODE>ret = waitpid(pid)</CODE></DT>
<DD>
<P>This function takes a numeric argument, which is the process-ID to wait for. The return value is that of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>waitpid()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call.</P><A name=index-wait_0028_0029-extension-function></A></DD>
<DT><CODE>ret = wait()</CODE></DT>
<DD>
<P>This function waits for the first child to die. The return value is that of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wait()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">There is no corresponding<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>exec()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Here is an example:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>@load "fork"
&#8230;
if ((pid = fork()) == 0)
    print "hello from the child"
else
    print "hello from the parent"
</PRE></DIV><BR class=Apple-interchange-newline>