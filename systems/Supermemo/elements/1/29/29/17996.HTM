<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>16.7.1 File Related Functions</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>filefuncs</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>extension provides three different functions, as follows: The usage is:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>@load "filefuncs"</CODE></DT>
<DD>
<P>This is how you load the extension.</P><A name=index-chdir_0028_0029-extension-function></A></DD>
<DT><CODE>result = chdir("/some/directory")</CODE></DT>
<DD>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>chdir()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is a direct hook to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>chdir()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call to change the current directory. It returns zero upon success or less than zero upon error. In the latter case it updates<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERRNO</CODE>.</P><A name=index-stat_0028_0029-extension-function></A></DD>
<DT><CODE>result = stat("/some/path", statdata<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: serif; FONT-WEIGHT: normal" class=roman>[</SPAN>, follow<SPAN style="FONT-FAMILY: serif; FONT-WEIGHT: normal" class=roman>]</SPAN>)</CODE></DT>
<DD>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function provides a hook into the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call. It returns zero upon success or less than zero upon error. In the latter case it updates<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERRNO</CODE>.</P>
<P>By default, it uses the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lstat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call. However, if passed a third argument, it uses<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instead.</P>
<P>In all cases, it clears the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>statdata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array. When the call is successful,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>fills the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>statdata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array with information retrieved from the filesystem, as follows:</P>
<TABLE>
<TBODY>
<TR>
<TD width="25%"><CODE>statdata["name"]</CODE></TD>
<TD width="60%">The name of the file.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["dev"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_dev</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["ino"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_ino</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["mode"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_mode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["nlink"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_nlink</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["uid"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_uid</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["gid"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_gid</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["size"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_size</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["atime"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_atime</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["mtime"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_mtime</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["ctime"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_ctime</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["rdev"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_rdev</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>. This element is only present for device files.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["major"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_major</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>. This element is only present for device files.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["minor"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_minor</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>. This element is only present for device files.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["blksize"]</CODE></TD>
<TD width="60%">Corresponds to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>st_blksize</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct stat</CODE>, if this field is present on your system. (It is present on all modern systems that we know of.)</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["pmode"]</CODE></TD>
<TD width="60%">A human-readable version of the mode value, such as printed by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ls</CODE>. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"-rwxr-xr-x"</CODE>.</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["linkval"]</CODE></TD>
<TD width="60%">If the named file is a symbolic link, this element will exist and its value is the value of the symbolic link (where the symbolic link points to).</TD></TR>
<TR>
<TD width="25%"><CODE>statdata["type"]</CODE></TD>
<TD width="60%">The type of the file as a string. One of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"file"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"blockdev"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"chardev"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"directory"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"socket"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"fifo"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"symlink"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"door"</CODE>, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"unknown"</CODE>. Not all systems support all file types.</TD></TR></TBODY></TABLE><A name=index-fts_0028_0029-extension-function></A></DD>
<DT><CODE>flags = or(FTS_PHYSICAL, ...)</CODE></DT>
<DT><CODE>result = fts(pathlist, flags, filedata)</CODE></DT>
<DD>
<P>Walk the file trees provided in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pathlist</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and fill in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>filedata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array as described below.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>flags</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the bitwise OR of several predefined constant values, also described below. Return zero if there were no errors, otherwise return -1.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function provides a hook to the C library<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>routines for traversing file hierarchies. Instead of returning data about one file at a time in a stream, it fills in a multidimensional array with data about each file and directory encountered in the requested hierarchies.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The arguments are as follows:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>pathlist</CODE></DT>
<DD>
<P>An array of filenames. The element values are used; the index values are ignored.</P></DD>
<DT><CODE>flags</CODE></DT>
<DD>
<P>This should be the bitwise OR of one or more of the following predefined constant flag values. At least one of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FTS_LOGICAL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FTS_PHYSICAL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>must be provided; otherwise<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns an error value and sets<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERRNO</CODE>. The flags are:</P>
<DL compact>
<DT><CODE>FTS_LOGICAL</CODE></DT>
<DD>
<P>Do a &#8220;logical&#8221; file traversal, where the information returned for a symbolic link refers to the linked-to file, and not to the symbolic link itself. This flag is mutually exclusive with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FTS_PHYSICAL</CODE>.</P></DD>
<DT><CODE>FTS_PHYSICAL</CODE></DT>
<DD>
<P>Do a &#8220;physical&#8221; file traversal, where the information returned for a symbolic link refers to the symbolic link itself. This flag is mutually exclusive with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FTS_LOGICAL</CODE>.</P></DD>
<DT><CODE>FTS_NOCHDIR</CODE></DT>
<DD>
<P>As a performance optimization, the C library<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>routines change directory as they traverse a file hierarchy. This flag disables that optimization.</P></DD>
<DT><CODE>FTS_COMFOLLOW</CODE></DT>
<DD>
<P>Immediately follow a symbolic link named in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pathlist</CODE>, whether or not<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FTS_LOGICAL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set.</P></DD>
<DT><CODE>FTS_SEEDOT</CODE></DT>
<DD>
<P>By default, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>routines do not return entries for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>.</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(dot) and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>..</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(dot-dot). This option causes entries for dot-dot to also be included. (The extension always includes an entry for dot, see below.)</P></DD>
<DT><CODE>FTS_XDEV</CODE></DT>
<DD>
<P>During a traversal, do not cross onto a different mounted filesystem.</P></DD></DL></DD>
<DT><CODE>filedata</CODE></DT>
<DD>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>filedata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array is first cleared. Then,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>creates an element in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>filedata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for every element in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pathlist</CODE>. The index is the name of the directory or file given in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pathlist</CODE>. The element for this index is itself an array. There are two cases.</P>
<DL compact>
<DT><EM>The path is a file</EM></DT>
<DD>
<P>In this case, the array contains two or three elements:</P>
<DL compact>
<DT><CODE>"path"</CODE></DT>
<DD>
<P>The full path to this file, starting from the &#8220;root&#8221; that was given in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pathlist</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array.</P></DD>
<DT><CODE>"stat"</CODE></DT>
<DD>
<P>This element is itself an array, containing the same information as provided by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function described earlier for its<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>statdata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument. The element may not be present if the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>system call for the file failed.</P></DD>
<DT><CODE>"error"</CODE></DT>
<DD>
<P>If some kind of error was encountered, the array will also contain an element named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"error"</CODE>, which is a string describing the error.</P></DD></DL></DD>
<DT><EM>The path is a directory</EM></DT>
<DD>
<P>In this case, the array contains one element for each entry in the directory. If an entry is a file, that element is as for files, just described. If the entry is a directory, that element is (recursively), an array describing the subdirectory. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FTS_SEEDOT</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>was provided in the flags, then there will also be an element named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>".."</CODE>. This element will be an array containing the data as provided by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat()</CODE>.</P>
<P>In addition, there will be an element whose index is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"."</CODE>. This element is an array containing the same two or three elements as for a file:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"path"</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"stat"</CODE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"error"</CODE>.</P></DD></DL></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function returns zero if there were no errors. Otherwise it returns -1.</P>
<BLOCKQUOTE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<P><B>NOTE:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>extension does not exactly mimic the interface of the C library<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>routines, choosing instead to provide an interface that is based on associative arrays, which should be more comfortable to use from an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>program. This includes the lack of a comparison function, since<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>already provides powerful array sorting facilities. While an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fts_read()</CODE>-like interface could have been provided, this felt less natural than simply creating a multidimensional array to represent the file hierarchy and its information.</P></BLOCKQUOTE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">See<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>test/fts.awk</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gawk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>distribution for an example.