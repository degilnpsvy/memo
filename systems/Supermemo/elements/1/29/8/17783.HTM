<H4 class=subsection>6.2.1 Arithmetic Operators</H4><A name=index-arithmetic-operators></A><A name=index-operators_002c-arithmetic></A>
<P>The <CODE>awk</CODE> language uses the common arithmetic operators when evaluating expressions. All of these arithmetic operators follow normal precedence rules and work as you would expect them to. </P>
<P>The following example uses a file named <SAMP>grades</SAMP>, which contains a list of student names as well as three test scores per student (it&#8217;s a small class): </P>
<DIV class=example><PRE class=example>Pat   100 97 58
Sandy  84 72 93
Chris  72 92 89
</PRE></DIV>
<P>This program takes the file <SAMP>grades</SAMP> and prints the average of the scores: </P>
<DIV class=example><PRE class=example>$ <KBD><EM>awk '{ sum = $2 + $3 + $4 ; avg = sum / 3</EM></KBD>
&gt;        <KBD><EM>print $1, avg }' grades</EM></KBD>
-| Pat 85
-| Sandy 83
-| Chris 84.3333
</PRE></DIV>
<P>The following list provides the arithmetic operators in <CODE>awk</CODE>, in order from the highest precedence to the lowest: </P>
<DL compact>
<DD><A name=index-common-extensions_002c-_002a_002a-operator></A><A name=index-extensions_002c-common_002c-_002a_002a-operator></A><A name=index-POSIX-awk_002c-arithmetic-operators-and></A>
<DT><CODE><VAR>x</VAR> ^ <VAR>y</VAR></CODE> 
<DT><CODE><VAR>x</VAR> ** <VAR>y</VAR></CODE> 
<DD>
<P>Exponentiation; <VAR>x</VAR> raised to the <VAR>y</VAR> power. &#8216;<SAMP>2 ^ 3</SAMP>&#8217; has the value eight; the character sequence &#8216;<SAMP>**</SAMP>&#8217; is equivalent to &#8216;<SAMP>^</SAMP>&#8217;. (c.e.) </P>
<DT><CODE>- <VAR>x</VAR></CODE> 
<DD>
<P>Negation. </P>
<DT><CODE>+ <VAR>x</VAR></CODE> 
<DD>
<P>Unary plus; the expression is converted to a number. </P>
<DT><CODE><VAR>x</VAR> * <VAR>y</VAR></CODE> 
<DD>
<P>Multiplication. </P><A name=index-troubleshooting_002c-division></A><A name=index-division></A>
<DT><CODE><VAR>x</VAR> / <VAR>y</VAR></CODE> 
<DD>
<P>Division; because all numbers in <CODE>awk</CODE> are floating-point numbers, the result is <EM>not</EM> rounded to an integer&#8212;&#8216;<SAMP>3 / 4</SAMP>&#8217; has the value 0.75. (It is a common mistake, especially for C programmers, to forget that <EM>all</EM> numbers in <CODE>awk</CODE> are floating-point, and that division of integer-looking constants produces a real number, not an integer.) </P>
<DT><CODE><VAR>x</VAR> % <VAR>y</VAR></CODE> 
<DD>
<P>Remainder; further discussion is provided in the text, just after this list. </P>
<DT><CODE><VAR>x</VAR> + <VAR>y</VAR></CODE> 
<DD>
<P>Addition. </P>
<DT><CODE><VAR>x</VAR> - <VAR>y</VAR></CODE> 
<DD>
<P>Subtraction. </P></DD></DL>
<P>Unary plus and minus have the same precedence, the multiplication operators all have the same precedence, and addition and subtraction have the same precedence. </P><A name=index-differences-in-awk-and-gawk_002c-trunc_002dmod-operation></A><A name=index-trunc_002dmod-operation></A>
<P>When computing the remainder of &#8216;<SAMP><VAR>x</VAR> % <VAR>y</VAR></SAMP>&#8217;, the quotient is rounded toward zero to an integer and multiplied by <VAR>y</VAR>. This result is subtracted from <VAR>x</VAR>; this operation is sometimes known as &#8220;trunc-mod.&#8221; The following relation always holds: </P>
<DIV class=example><PRE class=example>b * int(a / b) + (a % b) == a
</PRE></DIV>
<P>One possibly undesirable effect of this definition of remainder is that <CODE><VAR>x</VAR> % <VAR>y</VAR></CODE> is negative if <VAR>x</VAR> is negative. Thus: </P>
<DIV class=example><PRE class=example>-17 % 8 = -1
</PRE></DIV>
<P>In other <CODE>awk</CODE> implementations, the signedness of the remainder may be machine-dependent. </P><A name=index-portability_002c-_002a_002a-operator-and></A><A name=index-_002a-_0028asterisk_0029_002c-_002a_002a-operator></A><A name=index-asterisk-_0028_002a_0029_002c-_002a_002a-operator></A>
<BLOCKQUOTE>
<P><B>NOTE:</B> The POSIX standard only specifies the use of &#8216;<SAMP>^</SAMP>&#8217; for exponentiation. For maximum portability, do not use the &#8216;<SAMP>**</SAMP>&#8217; operator. </P></BLOCKQUOTE>