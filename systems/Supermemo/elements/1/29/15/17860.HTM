<H2 class=chapter>10 A Library of <CODE>awk</CODE> Functions</H2><A name=index-libraries-of-awk-functions></A><A name=index-functions_002c-library></A><A name=index-functions_002c-user_002ddefined_002c-library-of></A>
<P><A href="http://www.gnu.org/software/gawk/manual/gawk.html#User_002ddefined">User-defined</A>, describes how to write your own <CODE>awk</CODE> functions. Writing functions is important, because it allows you to encapsulate algorithms and program tasks in a single place. It simplifies programming, making program development more manageable, and making programs more readable. </P><A name=index-Kernighan_002c-Brian-5></A><A name=index-Plauger_002c-P_002eJ_002e></A>
<P>In their seminal 1976 book, <CITE>Software Tools</CITE>,<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT61" name=DOCF61><SUP>61</SUP></A> Brian Kernighan and P.J. Plauger wrote: </P>
<BLOCKQUOTE>
<P>Good Programming is not learned from generalities, but by seeing how significant programs can be made clean, easy to read, easy to maintain and modify, human-engineered, efficient and reliable, by the application of common sense and good programming practices. Careful study and imitation of good programs leads to better writing. </P></BLOCKQUOTE>
<P>In fact, they felt this idea was so important that they placed this statement on the cover of their book. Because we believe strongly that their statement is correct, this chapter and <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Sample-Programs">Sample Programs</A>, provide a good-sized body of code for you to read, and we hope, to learn from. </P>
<P>This chapter presents a library of useful <CODE>awk</CODE> functions. Many of the sample programs presented later in this Web page use these functions. The functions are presented here in a progression from simple to complex. </P><A name=index-Texinfo-1></A>
<P><A href="http://www.gnu.org/software/gawk/manual/gawk.html#Extract-Program">Extract Program</A>, presents a program that you can use to extract the source code for these example library functions and programs from the Texinfo source for this Web page. (This has already been done as part of the <CODE>gawk</CODE> distribution.) </P>
<P>If you have written one or more useful, general-purpose <CODE>awk</CODE> functions and would like to contribute them to the <CODE>awk</CODE> user community, see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#How-To-Contribute">How To Contribute</A>, for more information. </P><A name=index-portability_002c-example-programs></A>
<P>The programs in this chapter and in <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Sample-Programs">Sample Programs</A>, freely use features that are <CODE>gawk</CODE>-specific. Rewriting these programs for different implementations of <CODE>awk</CODE> is pretty straightforward. </P>
<UL>
<LI>Diagnostic error messages are sent to <SAMP>/dev/stderr</SAMP>. Use &#8216;<SAMP>| "cat 1&gt;&amp;2"</SAMP>&#8217; instead of &#8216;<SAMP>&gt; "/dev/stderr"</SAMP>&#8217; if your system does not have a <SAMP>/dev/stderr</SAMP>, or if you cannot use <CODE>gawk</CODE>. </LI>
<LI>A number of programs use <CODE>nextfile</CODE> (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Nextfile-Statement">Nextfile Statement</A>) to skip any remaining input in the input file. </LI>
<LI><A name=index-case-sensitivity_002c-example-programs></A><A name=index-IGNORECASE-variable_002c-in-example-programs></A>Finally, some of the programs choose to ignore upper- and lowercase distinctions in their input. They do so by assigning one to <CODE>IGNORECASE</CODE>. You can achieve almost the same effect<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT62" name=DOCF62><SUP>62</SUP></A> by adding the following rule to the beginning of the program: 
<DIV class=example><PRE class=example># ignore case
{ $0 = tolower($0) }
</PRE></DIV>
<P>Also, verify that all regexp and string constants used in comparisons use only lowercase letters. </P></LI></UL>
<TABLE class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=1 href="http://www.gnu.org/software/gawk/manual/gawk.html#Library-Names">Library Names</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>How to best name private global variables in library functions. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=2 href="http://www.gnu.org/software/gawk/manual/gawk.html#General-Functions">General Functions</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Functions that are of general use. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=3 href="http://www.gnu.org/software/gawk/manual/gawk.html#Data-File-Management">Data File Management</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Functions for managing command-line data files. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=4 href="http://www.gnu.org/software/gawk/manual/gawk.html#Getopt-Function">Getopt Function</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>A function for processing command-line arguments. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=5 href="http://www.gnu.org/software/gawk/manual/gawk.html#Passwd-Functions">Passwd Functions</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Functions for getting user information. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=6 href="http://www.gnu.org/software/gawk/manual/gawk.html#Group-Functions">Group Functions</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Functions for getting group information. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=7 href="http://www.gnu.org/software/gawk/manual/gawk.html#Walking-Arrays">Walking Arrays</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>A function to walk arrays of arrays. </TD></TR></TBODY></TABLE>