<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>15.2.3 Floating-point Rounding Mode</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-rounding-mode_002c-floating_002dpoint></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>rounding mode</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifies the behavior for the results of numerical operations when discarding extra precision. Each rounding mode indicates how the least significant returned digit of a rounded result is to be calculated.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/gawk/manual/gawk.html#table_002drounding_002dmodes">Table 15.2</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>lists the IEEE-754 defined rounding modes:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=float><A name=table_002drounding_002dmodes></A>
<TABLE>
<THEAD>
<TR>
<TH width="45%">Rounding Mode</TH>
<TH width="55%">IEEE Name</TH></TR></THEAD>
<TBODY>
<TR>
<TD width="45%">Round to nearest, ties to even</TD>
<TD width="55%"><CODE>roundTiesToEven</CODE></TD></TR>
<TR>
<TD width="45%">Round toward plus Infinity</TD>
<TD width="55%"><CODE>roundTowardPositive</CODE></TD></TR>
<TR>
<TD width="45%">Round toward negative Infinity</TD>
<TD width="55%"><CODE>roundTowardNegative</CODE></TD></TR>
<TR>
<TD width="45%">Round toward zero</TD>
<TD width="55%"><CODE>roundTowardZero</CODE></TD></TR>
<TR>
<TD width="45%">Round to nearest, ties away from zero</TD>
<TD width="55%"><CODE>roundTiesToAway</CODE></TD></TR></TBODY></TABLE>
<DIV class=float-caption>
<P><STRONG>Table 15.2:<SPAN class=Apple-converted-space>&nbsp;</SPAN></STRONG>IEEE 754 Rounding Modes</P></DIV></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The default mode<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>roundTiesToEven</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the most preferred, but the least intuitive. This method does the obvious thing for most values, by rounding them up or down to the nearest digit. For example, rounding 1.132 to two digits yields 1.13, and rounding 1.157 yields 1.16.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">However, when it comes to rounding a value that is exactly halfway between, things do not work the way you probably learned in school. In this case, the number is rounded to the nearest even digit. So rounding 0.125 to two digits rounds down to 0.12, but rounding 0.6875 to three digits rounds up to 0.688. You probably have already encountered this rounding mode when using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>printf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to format floating-point numbers. For example:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>BEGIN {
    x = -4.5
    for (i = 1; i &lt; 10; i++) {
        x += 1.0
        printf("%4.1f =&gt; %2.0f\n", x, x)
    }
}
</PRE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">produces the following output when run on the author&#8217;s system:<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT93" name=DOCF93><SUP>93</SUP></A></P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>-3.5 =&gt; -4
-2.5 =&gt; -2
-1.5 =&gt; -2
-0.5 =&gt; 0
 0.5 =&gt; 0
 1.5 =&gt; 2
 2.5 =&gt; 2
 3.5 =&gt; 4
 4.5 =&gt; 4
</PRE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The theory behind the rounding mode<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>roundTiesToEven</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is that it more or less evenly distributes upward and downward rounds of exact halves, which might cause any round-off error to cancel itself out. This is the default rounding mode used in IEEE-754 computing functions and operators.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The other rounding modes are rarely used. Round toward positive infinity (<CODE>roundTowardPositive</CODE>) and round toward negative infinity (<CODE>roundTowardNegative</CODE>) are often used to implement interval arithmetic, where you adjust the rounding mode to calculate upper and lower bounds for the range of output. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>roundTowardZero</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>mode can be used for converting floating-point numbers to integers. The rounding mode<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>roundTiesToAway</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>rounds the result to the nearest number and selects the number with the larger magnitude if a tie occurs.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Some numerical analysts will tell you that your choice of rounding style has tremendous impact on the final outcome, and advise you to wait until final output for any rounding. Instead, you can often avoid round-off error problems by setting the precision initially to some value sufficiently larger than the final desired precision, so that the accumulation of round-off error does not influence the outcome. If you suspect that results from your computation are sensitive to accumulation of round-off error, one way to be sure is to look for a significant difference in output when you change the rounding mode.