<H4 class=subsection>9.1.7 Getting Type Information</H4>
<P><CODE>gawk</CODE> provides a single function that lets you distinguish an array from a scalar variable. This is necessary for writing code that traverses every element of a true multidimensional array (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Arrays-of-Arrays">Arrays of Arrays</A>). </P>
<DL compact>
<DD><A name=index-isarray_0028_0029-function-_0028gawk_0029></A><A name=index-scalar-or-array></A></DD>
<DT><CODE>isarray(<VAR>x</VAR>)</CODE></DT>
<DD>
<P>Return a true value if <VAR>x</VAR> is an array. Otherwise return false. </P></DD></DL>
<P><CODE>isarray()</CODE> is meant for use in two circumstances. The first is when traversing a multidimensional array: you can test if an element is itself an array or not. The second is inside the body of a user-defined function (not discussed yet; see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#User_002ddefined">User-defined</A>), to test if a parameter is an array or not. </P>
<P>Note, however, that using <CODE>isarray()</CODE> at the global level to test variables makes no sense. Since you are the one writing the program, you are supposed to know if your variables are arrays or not. And in fact, due to the way <CODE>gawk</CODE> works, if you pass the name of a variable that has not been previously used to <CODE>isarray()</CODE>, <CODE>gawk</CODE> will end up turning it into a scalar.