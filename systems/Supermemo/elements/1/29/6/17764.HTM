<H4 class=subsection>5.5.4 Examples Using <CODE>printf</CODE></H4>
<P>The following simple example shows how to use <CODE>printf</CODE> to make an aligned table: </P>
<DIV class=example><PRE class=example>awk '{ printf "%-10s %s\n", $1, $2 }' mail-list
</PRE></DIV>
<P>This command prints the names of the people (<CODE>$1</CODE>) in the file <SAMP>mail-list</SAMP> as a string of 10 characters that are left-justified. It also prints the phone numbers (<CODE>$2</CODE>) next on the line. This produces an aligned two-column table of names and phone numbers, as shown here: </P>
<DIV class=example><PRE class=example>$ <KBD><EM>awk '{ printf "%-10s %s\n", $1, $2 }' mail-list</EM></KBD>
-| Amelia     555-5553
-| Anthony    555-3412
-| Becky      555-7685
-| Bill       555-1675
-| Broderick  555-0542
-| Camilla    555-2912
-| Fabius     555-1234
-| Julie      555-6699
-| Martin     555-6480
-| Samuel     555-3430
-| Jean-Paul  555-2127
</PRE></DIV>
<P>In this case, the phone numbers had to be printed as strings because the numbers are separated by a dash. Printing the phone numbers as numbers would have produced just the first three digits: &#8216;<SAMP>555</SAMP>&#8217;. This would have been pretty confusing. </P>
<P>It wasn&#8217;t necessary to specify a width for the phone numbers because they are last on their lines. They don&#8217;t need to have spaces after them. </P>
<P>The table could be made to look even nicer by adding headings to the tops of the columns. This is done using the <CODE>BEGIN</CODE> pattern (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#BEGIN_002fEND">BEGIN/END</A>) so that the headers are only printed once, at the beginning of the <CODE>awk</CODE> program: </P>
<DIV class=example><PRE class=example>awk 'BEGIN { print "Name      Number"
             print "----      ------" }
     { printf "%-10s %s\n", $1, $2 }' mail-list
</PRE></DIV>
<P>The above example mixes <CODE>print</CODE> and <CODE>printf</CODE> statements in the same program. Using just <CODE>printf</CODE> statements can produce the same results: </P>
<DIV class=example><PRE class=example>awk 'BEGIN { printf "%-10s %s\n", "Name", "Number"
             printf "%-10s %s\n", "----", "------" }
     { printf "%-10s %s\n", $1, $2 }' mail-list
</PRE></DIV>
<P>Printing each column heading with the same format specification used for the column elements ensures that the headings are aligned just like the columns. </P>
<P>The fact that the same format specification is used three times can be emphasized by storing it in a variable, like this: </P>
<DIV class=example><PRE class=example>awk 'BEGIN { format = "%-10s %s\n"
             printf format, "Name", "Number"
             printf format, "----", "------" }
     { printf format, $1, $2 }' mail-list
</PRE></DIV>
<P>At this point, it would be a worthwhile exercise to use the <CODE>printf</CODE> statement to line up the headings and table data for the <SAMP>inventory-shipped</SAMP> example that was covered earlier in the section on the <CODE>print</CODE> statement (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Print">Print</A>).