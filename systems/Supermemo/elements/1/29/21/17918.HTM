<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>13.4.3<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>Portability Issues</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-portability_002c-internationalization-and></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-internationalization_002c-localization_002c-portability-and></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE>gawk</CODE>&#8217;s internationalization features were purposely chosen to have as little impact as possible on the portability of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>programs that use them to other versions of<CODE>awk</CODE>. Consider this program:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>BEGIN {
    TEXTDOMAIN = "guide"
    if (Test_Guide)   # set with -v
        bindtextdomain("/test/guide/messages")
    print _"don't panic!"
}
</PRE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">As written, it won&#8217;t work on other versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE>. However, it is actually almost portable, requiring very little change:</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><A name=index-TEXTDOMAIN-variable_002c-portability-and></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>Assignments to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>TEXTDOMAIN</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>won&#8217;t have any effect, since<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>TEXTDOMAIN</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not special in other<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>implementations.</LI>
<LI>Non-GNU versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>treat marked strings as the concatenation of a variable named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>with the string following it.<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT86" name=DOCF86><SUP>86</SUP></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>Typically, the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has the null string (<CODE>""</CODE>) as its value, leaving the original string constant as the result.</LI>
<LI>By defining &#8220;dummy&#8221; functions to replace<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>dcgettext()</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>dcngettext()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bindtextdomain()</CODE>, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>program can be made to run, but all the messages are output in the original language. For example:<A name=index-bindtextdomain_0028_0029-function-_0028gawk_0029_002c-portability-and></A><A name=index-dcgettext_0028_0029-function-_0028gawk_0029_002c-portability-and></A><A name=index-dcngettext_0028_0029-function-_0028gawk_0029_002c-portability-and></A>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example>function bindtextdomain(dir, domain)
{
    return dir
}

function dcgettext(string, domain, category)
{
    return string
}

function dcngettext(string1, string2, number, domain, category)
{
    return (number == 1 ? string1 : string2)
}
</PRE></DIV></LI>
<LI>The use of positional specifications in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>printf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sprintf()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>not</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>portable. To support<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gettext()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>at the C level, many systems&#8217; C versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sprintf()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>do support positional specifiers. But it works only if enough arguments are supplied in the function call. Many versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pass<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>printf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>formats and arguments unchanged to the underlying C library version of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sprintf()</CODE>, but only one format and argument at a time. What happens if a positional specification is used is anybody&#8217;s guess. However, since the positional specifications are primarily for use in<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>translated</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>format strings, and since non-GNU<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>awk</CODE>s never retrieve the translated string, this should not be a problem in practice.</LI></UL>