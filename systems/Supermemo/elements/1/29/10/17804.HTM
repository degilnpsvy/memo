<H4 class=subsubsection>7.1.4.1 Startup and Cleanup Actions</H4><A name=index-BEGIN-pattern-2></A><A name=index-END-pattern-1></A>
<P>A <CODE>BEGIN</CODE> rule is executed once only, before the first input record is read. Likewise, an <CODE>END</CODE> rule is executed once only, after all the input is read. For example: </P>
<DIV class=example><PRE class=example>$ <KBD><EM>awk '</EM></KBD>
&gt; <KBD><EM>BEGIN { print "Analysis of \"li\"" }</EM></KBD>
&gt; <KBD><EM>/li/ { ++n }</EM></KBD>
&gt; <KBD><EM>END   { print "\"li\" appears in", n, "records." }' mail-list</EM></KBD>
-| Analysis of "li"
-| "li" appears in 4 records.
</PRE></DIV><A name=index-BEGIN-pattern_002c-operators-and></A><A name=index-END-pattern_002c-operators-and></A>
<P>This program finds the number of records in the input file <SAMP>mail-list</SAMP> that contain the string &#8216;<SAMP>li</SAMP>&#8217;. The <CODE>BEGIN</CODE> rule prints a title for the report. There is no need to use the <CODE>BEGIN</CODE> rule to initialize the counter <CODE>n</CODE> to zero, since <CODE>awk</CODE> does this automatically (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Variables">Variables</A>). The second rule increments the variable <CODE>n</CODE> every time a record containing the pattern &#8216;<SAMP>li</SAMP>&#8217; is read. The <CODE>END</CODE> rule prints the value of <CODE>n</CODE> at the end of the run. </P>
<P>The special patterns <CODE>BEGIN</CODE> and <CODE>END</CODE> cannot be used in ranges or with Boolean operators (indeed, they cannot be used with any operators). An <CODE>awk</CODE> program may have multiple <CODE>BEGIN</CODE> and/or <CODE>END</CODE> rules. They are executed in the order in which they appear: all the <CODE>BEGIN</CODE> rules at startup and all the <CODE>END</CODE> rules at termination. <CODE>BEGIN</CODE> and <CODE>END</CODE> rules may be intermixed with other rules. This feature was added in the 1987 version of <CODE>awk</CODE> and is included in the POSIX standard. The original (1978) version of <CODE>awk</CODE> required the <CODE>BEGIN</CODE> rule to be placed at the beginning of the program, the <CODE>END</CODE> rule to be placed at the end, and only allowed one of each. This is no longer required, but it is a good idea to follow this template in terms of program organization and readability. </P>
<P>Multiple <CODE>BEGIN</CODE> and <CODE>END</CODE> rules are useful for writing library functions, because each library file can have its own <CODE>BEGIN</CODE> and/or <CODE>END</CODE> rule to do its own initialization and/or cleanup. The order in which library functions are named on the command line controls the order in which their <CODE>BEGIN</CODE> and <CODE>END</CODE> rules are executed. Therefore, you have to be careful when writing such rules in library files so that the order in which they are executed doesn&#8217;t matter. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>, for more information on using library functions. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Library-Functions">Library Functions</A>, for a number of useful library functions. </P>
<P>If an <CODE>awk</CODE> program has only <CODE>BEGIN</CODE> rules and no other rules, then the program exits after the <CODE>BEGIN</CODE> rule is run.<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT37" name=DOCF37><SUP>37</SUP></A> However, if an <CODE>END</CODE> rule exists, then the input is read, even if there are no other rules in the program. This is necessary in case the <CODE>END</CODE> rule checks the <CODE>FNR</CODE> and <CODE>NR</CODE> variables.