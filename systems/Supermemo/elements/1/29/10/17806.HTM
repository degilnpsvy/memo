<H4 class=subsection>7.1.5 The <CODE>BEGINFILE</CODE> and <CODE>ENDFILE</CODE> Special Patterns</H4><A name=index-BEGINFILE-pattern></A><A name=index-ENDFILE-pattern></A><A name=index-differences-in-awk-and-gawk_002c-BEGINFILE_002fENDFILE-patterns></A>
<P>This section describes a <CODE>gawk</CODE>-specific feature. </P>
<P>Two special kinds of rule, <CODE>BEGINFILE</CODE> and <CODE>ENDFILE</CODE>, give you &#8220;hooks&#8221; into <CODE>gawk</CODE>&#8217;s command-line file processing loop. As with the <CODE>BEGIN</CODE> and <CODE>END</CODE> rules (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#BEGIN_002fEND">BEGIN/END</A>), all <CODE>BEGINFILE</CODE> rules in a program are merged, in the order they are read by <CODE>gawk</CODE>, and all <CODE>ENDFILE</CODE> rules are merged as well. </P>
<P>The body of the <CODE>BEGINFILE</CODE> rules is executed just before <CODE>gawk</CODE> reads the first record from a file. <CODE>FILENAME</CODE> is set to the name of the current file, and <CODE>FNR</CODE> is set to zero. </P>
<P>The <CODE>BEGINFILE</CODE> rule provides you the opportunity to accomplish two tasks that would otherwise be difficult or impossible to perform: </P>
<UL>
<LI>You can test if the file is readable. Normally, it is a fatal error if a file named on the command line cannot be opened for reading. However, you can bypass the fatal error and move on to the next file on the command line. <A name=index-gawk_002c-ERRNO-variable-in-2></A><A name=index-ERRNO-variable_002c-with-BEGINFILE-pattern></A><A name=index-nextfile-statement_002c-BEGINFILE_002fENDFILE-patterns-and></A>
<P>You do this by checking if the <CODE>ERRNO</CODE> variable is not the empty string; if so, then <CODE>gawk</CODE> was not able to open the file. In this case, your program can execute the <CODE>nextfile</CODE> statement (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Nextfile-Statement">Nextfile Statement</A>). This causes <CODE>gawk</CODE> to skip the file entirely. Otherwise, <CODE>gawk</CODE> exits with the usual fatal error. </P></LI>
<LI>If you have written extensions that modify the record handling (by inserting an &#8220;input parser&#8221;), you can invoke them at this point, before <CODE>gawk</CODE> has started processing the file. (This is a <EM>very</EM> advanced feature, currently used only by the <A href="http://gawkextlib.sourceforge.net/"><CODE>gawkextlib</CODE> project</A>.) </LI></UL>
<P>The <CODE>ENDFILE</CODE> rule is called when <CODE>gawk</CODE> has finished processing the last record in an input file. For the last input file, it will be called before any <CODE>END</CODE> rules. The <CODE>ENDFILE</CODE> rule is executed even for empty input files. </P>
<P>Normally, when an error occurs when reading input in the normal input processing loop, the error is fatal. However, if an <CODE>ENDFILE</CODE> rule is present, the error becomes non-fatal, and instead <CODE>ERRNO</CODE> is set. This makes it possible to catch and process I/O errors at the level of the <CODE>awk</CODE> program. </P><A name=index-next-statement_002c-BEGINFILE_002fENDFILE-patterns-and></A>
<P>The <CODE>next</CODE> statement (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Next-Statement">Next Statement</A>) is not allowed inside either a <CODE>BEGINFILE</CODE> or and <CODE>ENDFILE</CODE> rule. The <CODE>nextfile</CODE> statement (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Nextfile-Statement">Nextfile Statement</A>) is allowed only inside a <CODE>BEGINFILE</CODE> rule, but not inside an <CODE>ENDFILE</CODE> rule. </P><A name=index-getline-statement_002c-BEGINFILE_002fENDFILE-patterns-and></A>
<P>The <CODE>getline</CODE> statement (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Getline">Getline</A>) is restricted inside both <CODE>BEGINFILE</CODE> and <CODE>ENDFILE</CODE>. Only the &#8216;<SAMP>getline <VAR>variable</VAR> &lt; <VAR>file</VAR></SAMP>&#8217; form is allowed. </P>
<P><CODE>BEGINFILE</CODE> and <CODE>ENDFILE</CODE> are <CODE>gawk</CODE> extensions. In most other <CODE>awk</CODE> implementations, or if <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), they are not special.