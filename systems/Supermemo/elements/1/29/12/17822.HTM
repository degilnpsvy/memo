<H4 class=subsection>7.5.1 Built-in Variables That Control <CODE>awk</CODE></H4><A name=index-built_002din-variables_002c-user_002dmodifiable></A><A name=index-user_002dmodifiable-variables></A>
<P>The following is an alphabetical list of variables that you can change to control how <CODE>awk</CODE> does certain things. The variables that are specific to <CODE>gawk</CODE> are marked with a pound sign&nbsp;(&#8216;<SAMP>#</SAMP>&#8217;).<!-- /@w --> </P>
<DL compact>
<DD><A name=index-BINMODE-variable></A><A name=index-binary-input_002foutput></A><A name=index-input_002foutput_002c-binary></A></DD>
<DT><CODE>BINMODE #</CODE></DT>
<DD>
<P>On non-POSIX systems, this variable specifies use of binary mode for all I/O. Numeric values of one, two, or three specify that input files, output files, or all files, respectively, should use binary I/O. A numeric value less than zero is treated as zero, and a numeric value greater than three is treated as three. Alternatively, string values of <CODE>"r"</CODE> or <CODE>"w"</CODE> specify that input files and output files, respectively, should use binary I/O. A string value of <CODE>"rw"</CODE> or <CODE>"wr"</CODE> indicates that all files should use binary I/O. Any other string value is treated the same as <CODE>"rw"</CODE>, but causes <CODE>gawk</CODE> to generate a warning message. <CODE>BINMODE</CODE> is described in more detail in <A href="http://www.gnu.org/software/gawk/manual/gawk.html#PC-Using">PC Using</A>. </P><A name=index-differences-in-awk-and-gawk_002c-BINMODE-variable></A>
<P>This variable is a <CODE>gawk</CODE> extension. In other <CODE>awk</CODE> implementations (except <CODE>mawk</CODE>, see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Other-Versions">Other Versions</A>), or if <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), it is not special. </P><A name=index-CONVFMT-variable-1></A><A name=index-POSIX-awk_002c-CONVFMT-variable-and></A><A name=index-numbers_002c-converting_002c-to-strings></A><A name=index-strings_002c-converting_002c-numbers-to></A></DD>
<DT><CODE>CONVFMT</CODE></DT>
<DD>
<P>This string controls conversion of numbers to strings (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Conversion">Conversion</A>). It works by being passed, in effect, as the first argument to the <CODE>sprintf()</CODE> function (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#String-Functions">String Functions</A>). Its default value is <CODE>"%.6g"</CODE>. <CODE>CONVFMT</CODE> was introduced by the POSIX standard. </P><A name=index-gawk_002c-FIELDWIDTHS-variable-in-1></A><A name=index-FIELDWIDTHS-variable-1></A><A name=index-differences-in-awk-and-gawk_002c-FIELDWIDTHS-variable></A><A name=index-field-separators_002c-FIELDWIDTHS-variable-and></A><A name=index-separators_002c-field_002c-FIELDWIDTHS-variable-and></A></DD>
<DT><CODE>FIELDWIDTHS #</CODE></DT>
<DD>
<P>This is a space-separated list of columns that tells <CODE>gawk</CODE> how to split input with fixed columnar boundaries. Assigning a value to <CODE>FIELDWIDTHS</CODE> overrides the use of <CODE>FS</CODE> and <CODE>FPAT</CODE> for field splitting. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Constant-Size">Constant Size</A>, for more information. </P>
<P>If <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), then <CODE>FIELDWIDTHS</CODE> has no special meaning, and field-splitting operations occur based exclusively on the value of <CODE>FS</CODE>. </P><A name=index-gawk_002c-FPAT-variable-in-1></A><A name=index-FPAT-variable-1></A><A name=index-differences-in-awk-and-gawk_002c-FPAT-variable></A><A name=index-field-separators_002c-FPAT-variable-and></A><A name=index-separators_002c-field_002c-FPAT-variable-and></A></DD>
<DT><CODE>FPAT #</CODE></DT>
<DD>
<P>This is a regular expression (as a string) that tells <CODE>gawk</CODE> to create the fields based on text that matches the regular expression. Assigning a value to <CODE>FPAT</CODE> overrides the use of <CODE>FS</CODE> and <CODE>FIELDWIDTHS</CODE> for field splitting. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Splitting-By-Content">Splitting By Content</A>, for more information. </P>
<P>If <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), then <CODE>FPAT</CODE> has no special meaning, and field-splitting operations occur based exclusively on the value of <CODE>FS</CODE>. </P><A name=index-FS-variable-1></A><A name=index-separators_002c-field></A><A name=index-field-separators-1></A></DD>
<DT><CODE>FS</CODE></DT>
<DD>
<P>This is the input field separator (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Field-Separators">Field Separators</A>). The value is a single-character string or a multicharacter regular expression that matches the separations between fields in an input record. If the value is the null string (<CODE>""</CODE>), then each character in the record becomes a separate field. (This behavior is a <CODE>gawk</CODE> extension. POSIX <CODE>awk</CODE> does not specify the behavior when <CODE>FS</CODE> is the null string. Nonetheless, some other versions of <CODE>awk</CODE> also treat <CODE>""</CODE> specially.) </P><A name=index-POSIX-awk_002c-FS-variable-and></A>
<P>The default value is <CODE>"&nbsp;"</CODE><!-- /@w -->, a string consisting of a single space. As a special exception, this value means that any sequence of spaces, TABs, and/or newlines is a single separator.<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT38" name=DOCF38><SUP>38</SUP></A> It also causes spaces, TABs, and newlines at the beginning and end of a record to be ignored. </P>
<P>You can set the value of <CODE>FS</CODE> on the command line using the <SAMP>-F</SAMP> option: </P>
<DIV class=example><PRE class=example>awk -F, '<VAR>program</VAR>' <VAR>input-files</VAR>
</PRE></DIV><A name=index-gawk_002c-field-separators-and></A>
<P>If <CODE>gawk</CODE> is using <CODE>FIELDWIDTHS</CODE> or <CODE>FPAT</CODE> for field splitting, assigning a value to <CODE>FS</CODE> causes <CODE>gawk</CODE> to return to the normal, <CODE>FS</CODE>-based field splitting. An easy way to do this is to simply say &#8216;<SAMP>FS = FS</SAMP>&#8217;, perhaps with an explanatory comment. </P><A name=index-gawk_002c-IGNORECASE-variable-in-1></A><A name=index-IGNORECASE-variable></A><A name=index-differences-in-awk-and-gawk_002c-IGNORECASE-variable></A><A name=index-case-sensitivity_002c-and-string-comparisons></A><A name=index-case-sensitivity_002c-and-regexps></A><A name=index-regular-expressions_002c-case-sensitivity-1></A></DD>
<DT><CODE>IGNORECASE #</CODE></DT>
<DD>
<P>If <CODE>IGNORECASE</CODE> is nonzero or non-null, then all string comparisons and all regular expression matching are case independent. Thus, regexp matching with &#8216;<SAMP>~</SAMP>&#8217; and &#8216;<SAMP>!~</SAMP>&#8217;, as well as the <CODE>gensub()</CODE>, <CODE>gsub()</CODE>, <CODE>index()</CODE>, <CODE>match()</CODE>, <CODE>patsplit()</CODE>, <CODE>split()</CODE>, and <CODE>sub()</CODE> functions, record termination with <CODE>RS</CODE>, and field splitting with <CODE>FS</CODE> and <CODE>FPAT</CODE>, all ignore case when doing their particular regexp operations. However, the value of <CODE>IGNORECASE</CODE> does <EM>not</EM> affect array subscripting and it does not affect field splitting when using a single-character field separator. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Case_002dsensitivity">Case-sensitivity</A>. </P>
<P>If <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), then <CODE>IGNORECASE</CODE> has no special meaning. Thus, string and regexp operations are always case-sensitive. </P><A name=index-gawk_002c-LINT-variable-in></A><A name=index-LINT-variable></A><A name=index-differences-in-awk-and-gawk_002c-LINT-variable></A><A name=index-lint-checking></A></DD>
<DT><CODE>LINT #</CODE></DT>
<DD>
<P>When this variable is true (nonzero or non-null), <CODE>gawk</CODE> behaves as if the <SAMP>--lint</SAMP> command-line option is in effect. (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>). With a value of <CODE>"fatal"</CODE>, lint warnings become fatal errors. With a value of <CODE>"invalid"</CODE>, only warnings about things that are actually invalid are issued. (This is not fully implemented yet.) Any other true value prints nonfatal warnings. Assigning a false value to <CODE>LINT</CODE> turns off the lint warnings. </P>
<P>This variable is a <CODE>gawk</CODE> extension. It is not special in other <CODE>awk</CODE> implementations. Unlike the other special variables, changing <CODE>LINT</CODE> does affect the production of lint warnings, even if <CODE>gawk</CODE> is in compatibility mode. Much as the <SAMP>--lint</SAMP> and <SAMP>--traditional</SAMP> options independently control different aspects of <CODE>gawk</CODE>&#8217;s behavior, the control of lint warnings during program execution is independent of the flavor of <CODE>awk</CODE> being executed. </P><A name=index-OFMT-variable-2></A><A name=index-numbers_002c-converting_002c-to-strings-1></A><A name=index-strings_002c-converting_002c-numbers-to-1></A></DD>
<DT><CODE>OFMT</CODE></DT>
<DD>
<P>This string controls conversion of numbers to strings (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Conversion">Conversion</A>) for printing with the <CODE>print</CODE> statement. It works by being passed as the first argument to the <CODE>sprintf()</CODE> function (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#String-Functions">String Functions</A>). Its default value is <CODE>"%.6g"</CODE>. Earlier versions of <CODE>awk</CODE> also used <CODE>OFMT</CODE> to specify the format for converting numbers to strings in general expressions; this is now done by <CODE>CONVFMT</CODE>. </P><A name=index-sprintf_0028_0029-function_002c-OFMT-variable-and></A><A name=index-print-statement_002c-OFMT-variable-and></A><A name=index-OFS-variable-2></A><A name=index-separators_002c-field-1></A><A name=index-field-separators-2></A></DD>
<DT><CODE>OFS</CODE></DT>
<DD>
<P>This is the output field separator (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Output-Separators">Output Separators</A>). It is output between the fields printed by a <CODE>print</CODE> statement. Its default value is <CODE>"&nbsp;"</CODE><!-- /@w -->, a string consisting of a single space. </P><A name=index-ORS-variable-1></A></DD>
<DT><CODE>ORS</CODE></DT>
<DD>
<P>This is the output record separator. It is output at the end of every <CODE>print</CODE> statement. Its default value is <CODE>"\n"</CODE>, the newline character. (See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Output-Separators">Output Separators</A>.) </P><A name=index-PREC-variable></A></DD>
<DT><CODE>PREC #</CODE></DT>
<DD>
<P>The working precision of arbitrary precision floating-point numbers, 53 bits by default (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Setting-Precision">Setting Precision</A>). </P><A name=index-ROUNDMODE-variable></A></DD>
<DT><CODE>ROUNDMODE #</CODE></DT>
<DD>
<P>The rounding mode to use for arbitrary precision arithmetic on numbers, by default <CODE>"N"</CODE> (&#8216;<SAMP>roundTiesToEven</SAMP>&#8217; in the IEEE-754 standard) (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Setting-Rounding-Mode">Setting Rounding Mode</A>). </P><A name=index-RS-variable-1></A><A name=index-separators_002c-for-records-2></A><A name=index-record-separators-1></A></DD>
<DT><CODE>RS</CODE></DT>
<DD>
<P>This is <CODE>awk</CODE>&#8217;s input record separator. Its default value is a string containing a single newline character, which means that an input record consists of a single line of text. It can also be the null string, in which case records are separated by runs of blank lines. If it is a regexp, records are separated by matches of the regexp in the input text. (See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Records">Records</A>.) </P>
<P>The ability for <CODE>RS</CODE> to be a regular expression is a <CODE>gawk</CODE> extension. In most other <CODE>awk</CODE> implementations, or if <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), just the first character of <CODE>RS</CODE>&#8217;s value is used. </P><A name=index-SUBSEP-variable></A><A name=index-separators_002c-subscript></A><A name=index-subscript-separators></A></DD>
<DT><CODE>SUBSEP</CODE></DT>
<DD>
<P>This is the subscript separator. It has the default value of <CODE>"\034"</CODE> and is used to separate the parts of the indices of a multidimensional array. Thus, the expression <CODE>foo["A",&nbsp;"B"]<!-- /@w --></CODE> really accesses <CODE>foo["A\034B"]</CODE> (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Multidimensional">Multidimensional</A>). </P><A name=index-gawk_002c-TEXTDOMAIN-variable-in></A><A name=index-TEXTDOMAIN-variable></A><A name=index-differences-in-awk-and-gawk_002c-TEXTDOMAIN-variable></A><A name=index-internationalization_002c-localization></A></DD>
<DT><CODE>TEXTDOMAIN #</CODE></DT>
<DD>
<P>This variable is used for internationalization of programs at the <CODE>awk</CODE> level. It sets the default text domain for specially marked string constants in the source text, as well as for the <CODE>dcgettext()</CODE>, <CODE>dcngettext()</CODE> and <CODE>bindtextdomain()</CODE> functions (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Internationalization">Internationalization</A>). The default value of <CODE>TEXTDOMAIN</CODE> is <CODE>"messages"</CODE>. </P>
<P>This variable is a <CODE>gawk</CODE> extension. In other <CODE>awk</CODE> implementations, or if <CODE>gawk</CODE> is in compatibility mode (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Options">Options</A>), it is not special. </P></DD></DL>