<H4 class=subsection>8.1.4 Basic Array Example</H4><A name=index-arrays_002c-an-example-of-using></A>
<P>The following program takes a list of lines, each beginning with a line number, and prints them out in order of line number. The line numbers are not in order when they are first read&#8212;instead they are scrambled. This program sorts the lines by making an array using the line numbers as subscripts. The program then prints out the lines in sorted order of their numbers. It is a very simple program and gets confused upon encountering repeated numbers, gaps, or lines that don&#8217;t begin with a number: </P>
<DIV class=example><PRE class=example>{
  if ($1 &gt; max)
    max = $1
  arr[$1] = $0
}

END {
  for (x = 1; x &lt;= max; x++)
    print arr[x]
}
</PRE></DIV>
<P>The first rule keeps track of the largest line number seen so far; it also stores each line into the array <CODE>arr</CODE>, at an index that is the line&#8217;s number. The second rule runs after all the input has been read, to print out all the lines. When this program is run with the following input: </P>
<DIV class=example><PRE class=example>5  I am the Five man
2  Who are you?  The new number two!
4  . . . And four on the floor
1  Who is number one?
3  I three you.
</PRE></DIV>
<P>Its output is: </P>
<DIV class=example><PRE class=example>1  Who is number one?
2  Who are you?  The new number two!
3  I three you.
4  . . . And four on the floor
5  I am the Five man
</PRE></DIV>
<P>If a line number is repeated, the last line with a given number overrides the others. Gaps in the line numbers can be handled with an easy improvement to the program&#8217;s <CODE>END</CODE> rule, as follows: </P>
<DIV class=example><PRE class=example>END {
  for (x = 1; x &lt;= max; x++)
    if (x in arr)
      print arr[x]
}
</PRE></DIV>