<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">4.1.3.1 The sc_time argument </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">a) It is recommended that the transaction object should not contain timing information. Any timing annotation should be expressed using the <B>sc_time </B>argument to <I>transport </I></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">b) The time argument shall be non-negative, and shall be expressed relative to the current simulation time <B>sc_time_stamp()</B>. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">c) The time argument shall apply on both the call to and return from <I>transport </I>(subject to the rules of the <B>tlm_sync_enum </B>return value of <I>nb_transport</I>). </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">d) The <I>nb_transport </I>method may itself increase the value of the time argument, but shall not decrease the value. The <B>b_transport </B>method may increase the value of the time argument, or may decrease the value in the case that it has called <B>wait </B>and thus synchronized with simulation time, but only by an amount that is less than or equal to the time for which the process was suspended. This rule is consistent with time not running backward in a SystemC simulation. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">e) In the following description, the <I>recipient </I>of the transaction on the call to <I>transport </I>is the callee, and the <I>recipient </I>of the transaction on return from <I>transport </I>is the caller. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">f) The <I>recipient </I>shall behave as if it had received the transaction at an effective local time of <B>sc_time_stamp() + t</B>, where <B>t </B>is the value of the time argument. In other words, the recipient shall behave as if the timing point associated with the interface method call is to occur at the effective local time. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">g) Given a sequence of calls to <I>transport</I>, the effective local times at which the transactions are to be processed may or may not be in increasing time order in general. For transactions created by different initiators, it is fundamental to temporal decoupling that interface method call order may be different from effective local time order. The responsibility to handle transactions with out-of-order timing annotations lies with the recipient. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">h) Upon receipt of a transaction with a non-zero timing annotation, any recipient always has choices which reflect the modeling tradeoff between speed and accuracy. The recipient can execute any state changes caused by the transaction immediately and pass on the timing annotation, possibly increased, or it can schedule some internal process to resume after part or all of the annotated time has elapsed and execute the state changes only then. The choice is not enforced by the transport interface, but may be documented as part of a protocol traits class or coding style. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">i) If the recipient is not concerned with timing accuracy or with processing a sequence of incoming transactions in the order given by their timing annotations, it may process each transaction immediately, without delay. Having done so, the recipient may also choose to increase the value of the timing annotation to model the time needed to process the transaction. This scenario assumes that the system design can tolerate out-of-order execution because of the existence of some explicit mechanism (over and above the TLM-2.0 interfaces) to enforce the correct causal chain of events. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">j) If the recipient is to implement an accurate model of timing and execution order, it should ensure that the transaction is indeed processed at the correct time relative to any other SystemC processes with which it may interact. In SystemC, the appropriate mechanism to schedule an event at a future time is the timed event notification. For convenience, TLM-2.0 provides a family of utility classes, know as payload event queues, which can be used to queue transactions for processing at the proper simulation time according to the natural semantics of SystemC (see 9.3 Payload event queue). In other words, an approximately-timed recipient should typically put the transaction into a payload event queue. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">k) Rather than processing the transaction directly, the recipient may pass the transaction on with a further call to or return from a <I>transport </I>method without modification to the transaction and using the same phase and timing annotation (or with an increased timing annotation). </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">l) With the loosely-timed coding style, transactions are typically executed immediately such that execution order matches interface method call order, and the <B>b_transport </B>method is recommended. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">m) With the approximately-timed coding style, transactions are typically delayed such that their execution order matches the effective local time order, and the <I>nb_transport </I>method is recommended. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">n) Each component can make the above choice dynamically on a call-by-call basis. For example, a loosely-timed component may execute a series of transactions immediately in call order, passing on the timing annotations, but may then choose to schedule the very next transaction for execution only after the delay given by the timing annotation has elapsed (known as <I>synchronization on demand</I>). This is a matter of coding style. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">o) The above choice exists for both blocking and non-blocking transport. For example, <B>b_transport </B>may increase the timing annotation and return immediately or may <B>wait </B>for the timing annotation to elapse before returning. <I>nb_transport </I>may increase the timing annotation and return TLM_COMPLETED or may return TLM_ACCEPTED and schedule the transaction for execution later. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">p) As a consequence of the above rules, if a component is the recipient of a series of transactions where the order of the incoming interface method calls is different from the effective local time order, the component is free to choose the mutual execution order of those particular transactions. The recommendation is to execute all transactions in call order or to execute all transactions in effective local time order, but this is not an obligation. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">q) Note that the order in which incoming transactions are executed by a component should in effect always be the same as interface method call order, because a component will either execute an incoming transaction before returning from the interface method call regardless of the timing annotation (loosely-timed), or will schedule the transaction for execution at the proper future time and return TLM_ACCEPTED (approximately-timed), thus indicating to the caller that it should wait before issuing the next transaction. (TLM_ACCEPTED alone does not forbid the caller from issuing the next transaction, but in the case of the base protocol, the request and response exclusion rules may do so.) </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">r) Timing annotation can also be described in terms of temporal decoupling. A non-zero timing annotation can be considered as an invitation to the recipient to &#8213;warp time&#8214;. The recipient can choose to enter a time warp, or it can put the transaction in a queue for later processing and yield. In a loosely-timed model, time warping is generally acceptable. On the other hand, if the target has dependencies on other asynchronous events, the target may have to wait for simulation time to advance before it can predict the future state of the transaction with certainty. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">s) For a general description of temporal decoupling, see 3.3.2 Loosely-timed coding style and temporal decoupling </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">t) For a description of the quantum, see 9.2 Quantum keeper </SPAN></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">Example </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The following pseudo-code fragments illustrate just some of the many possible coding styles: </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">1</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// ---------------------------------------------</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>2</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// Various interface method definitions</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>3</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// ---------------------------------------------</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>4void</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #6060ff">b_transport</SPAN>(<SPAN style="COLOR: #00bf00">TRANS</SPAN> &amp;<SPAN style="COLOR: #bfbf00">trans</SPAN>, <SPAN style="COLOR: #bf00bf">sc_core</SPAN>::<SPAN style="COLOR: #00bf00">sc_time</SPAN> &amp;<SPAN style="COLOR: #bfbf00">t</SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>5</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>6</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Loosely-timed coding style</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">7</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>execute_transaction(trans);</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>8</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>t = t + latency;</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>9</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">}</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">10void</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"> <SPAN style="COLOR: #6060ff">b_transport</SPAN>(<SPAN style="COLOR: #00bf00">TRANS</SPAN> &amp;<SPAN style="COLOR: #bfbf00">trans</SPAN>, <SPAN style="COLOR: #bf00bf">sc_core</SPAN>::<SPAN style="COLOR: #00bf00">sc_time</SPAN> &amp;<SPAN style="COLOR: #bfbf00">t</SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">11</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">12</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Loosely-timed with synchronization at the target or synchronization-on-demand</SPAN></SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">13</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>wait(t);</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">14</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>execute_transaction(trans);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">15</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>t = SC_ZERO_TIME;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">16</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">17tlm_sync_enum</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #6060ff">nb_transport_fw</SPAN>(<SPAN style="COLOR: #00bf00">TRANS</SPAN> &amp;<SPAN style="COLOR: #bfbf00">trans</SPAN>, <SPAN style="COLOR: #00bf00">PHASE</SPAN> &amp;<SPAN style="COLOR: #bfbf00">phase</SPAN>, <SPAN style="COLOR: #bf00bf">sc_core</SPAN>::<SPAN style="COLOR: #00bf00">sc_time</SPAN> &amp;<SPAN style="COLOR: #bfbf00">t</SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">18</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">19</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Pseudo-loosely-timed coding style using non-blocking transport (not recommended)</SPAN></SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">20</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>execute_transaction(trans);</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">21</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>t = t + latency;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">22</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">return</SPAN> TLM_COMPLETED;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">23</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">24tlm_sync_enum</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #6060ff">nb_transport_fw</SPAN>(<SPAN style="COLOR: #00bf00">TRANS</SPAN> &amp;<SPAN style="COLOR: #bfbf00">trans</SPAN>, <SPAN style="COLOR: #00bf00">PHASE</SPAN> &amp;<SPAN style="COLOR: #bfbf00">phase</SPAN>, <SPAN style="COLOR: #bf00bf">sc_core</SPAN>::<SPAN style="COLOR: #00bf00">sc_time</SPAN> &amp;<SPAN style="COLOR: #bfbf00">t</SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">25</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">26</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Approximately-timed coding style</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">27</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Post the transaction into a payload event queue for execution at time sc_time_stamp() + t</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">28</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>payload_event_queue-&gt;notify(trans, phase, t);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">29</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Increment the transaction reference count</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">30</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>trans.acquire();</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">31</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">return</SPAN> TLM_ACCEPTED;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">32</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">33tlm_sync_enum</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #6060ff">nb_transport_fw</SPAN>(<SPAN style="COLOR: #00bf00">TRANS</SPAN> &amp;<SPAN style="COLOR: #bfbf00">trans</SPAN>, <SPAN style="COLOR: #00bf00">PHASE</SPAN> &amp;<SPAN style="COLOR: #bfbf00">phase</SPAN>, <SPAN style="COLOR: #bf00bf">sc_core</SPAN>::<SPAN style="COLOR: #00bf00">sc_time</SPAN> &amp;<SPAN style="COLOR: #bfbf00">t</SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">34</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">35</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Approximately-timed coding style making use of the backward path</SPAN></SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">36</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>payload_event_queue-&gt;notify(trans, phase, t);</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">37</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>trans.acquire();</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">38</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Modify the phase and time arguments</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">39</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>phase = END_REQ;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">40</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>t = t + accept_delay;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">41</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">return</SPAN> TLM_UPDATED;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">42</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">43</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// ---------------------------------------------------------------------------</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">44</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// b_transport interface method calls, loosely-timed coding style</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">45</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// ---------------------------------------------------------------------------</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">46</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">initialize_transaction(T1);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">47</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">socket-&gt;b_transport(T1, t);<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// t may increase</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">48</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">process_response(T1);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">49</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">50</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">initialize_transaction(T2);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">51</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">socket-&gt;b_transport(T2, t);<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// t may increase</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">52</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">process_response(T2);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">53</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">54</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// Initiator may sync after each transaction or after a series of transactions</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">55</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">quantum_keeper-&gt;set(t);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">56</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #40ffff; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">if</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> (quantum_keeper-&gt;need_sync())</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">57</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">58</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>quantum_keeper-&gt;sync();</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">59</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">60</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// -------------------------------------------------------------------------------------</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">61</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// nb_transport interface method call, approximately-timed coding style</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">62</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #bf0000; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">// -------------------------------------------------------------------------------------</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">63</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">initialize_transaction(T3);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">64</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">status = socket-&gt;nb_transport_fw(T3, phase, t);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">65</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #40ffff; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">if</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> (status == TLM_ACCEPTED)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">66</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">67</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// No action, but expect an incoming nb_transport_bw method call</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">68</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">69</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #40ffff; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">else</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #40ffff">if</SPAN> (status == TLM_UPDATED)<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Backward path is being used</SPAN></SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">70</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">71</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>payload_event_queue-&gt;notify(T3, phase, t);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">72</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">73</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #40ffff; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">else</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #40ffff">if</SPAN> (status == TLM_COMPLETED)<SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Early completion</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">74</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">75</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Timing annotation may be taken into account in one of several ways</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">76</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// Either (1) by waiting, as shown here</SPAN></SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">77</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>wait(t);</SPAN></P>
<p><SPAN lang=FR style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR">78</SPAN><SPAN lang=FR style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: FR"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>process_response(T3);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">79</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// or (2) by creating an event notification</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">80</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// response_event.notify( t );</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">81</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="COLOR: #bf0000">// or (3) by being passed on to the next transport method call (code not shown here)</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9pt; COLOR: #00bf00; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">82</SPAN><SPAN lang=EN-US style="FONT-SIZE: 9pt; FONT-FAMILY: 'Lucida Console'; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}</SPAN>