<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">4.1.2.9 Message sequence chart &#8211; using the backward path </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN>
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The following message sequence charts illustrate various calling sequences to <I>nb_transport</I>. The arguments and return value passed to and from <I>nb_transport </I>are shown using the notation <I>return, phase, delay</I>, where return is the value returned from the function call, phase is the value of the phase argument, and delay is the value of the <B>sc_time </B>argument The notation &#8215;-&#8216; indicates that the value is unused. </SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The following message sequence charts use the phases of the base protocol as an example, that is, BEGIN_REQ, END_REQ and so on. With the approximately-timed coding style and the base protocol, a transaction is passed back-and-forth twice between initiator and target. For other protocols, the number of phases and their names may be different. </SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">If the recipient of an <I>nb_transport </I>call is unable immediately to calculate the next state of the transaction or the delay to the next timing point, it should return a value of TLM_ACCEPTED. The caller should yield control to the scheduler and expect to receive a call to <I>nb_transport </I>on the opposite path when the callee is ready to respond. Notice that in this case, unlike the loosely-timed case, the caller could be the initiator or the target. </SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">Transactions may be pipelined. The initiator could call <I>nb_transport </I>to send another transaction to the target before having seen the final phase transition of the previous transaction. Because processes are regularly yielding control to the scheduler in order to allow simulation time to advance, the approximately-timed coding style is expected to simulate a lot more slowly than the loosely-timed coding style.</SPAN>