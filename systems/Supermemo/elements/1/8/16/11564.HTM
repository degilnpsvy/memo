<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">7.20.3 Extension pointers, objects and transaction bridges </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">An extension is an object of a type derived from the class <B>tlm_extension</B>. The generic payload contains an array of pointers to extension objects. Every generic payload object is capable of carrying a single instance of every type of extension. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The array-of-pointers to extensions has a slot for every registered extension. The <B>set_extension </B>method simply overwrites a pointer, and in principle can be called from an initiator, interconnect component, or target. This provides a very a flexible low-level mechanism, but is open to misuse. The ownership and deletion of extension objects has to be well-understood and carefully considered by the user. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">When creating a transaction bridge between two separate generic payload transactions, it is the responsibility of the bridge to copy any extensions, if required, from the incoming transaction object to the outgoing transaction object, and to own and manage the outgoing transaction and its extensions. The same holds for the data array and byte enable array. The methods <B>deep_copy_from </B>and <B>update_original_from </B>are provided so that a transaction bridge can perform a deep copy of a transaction object, including the data and byte enable arrays and the extension objects. If the bridge adds further extensions to the outgoing transaction, those extensions would be owned by the bridge. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The management of extensions is described more fully in clause 7.5 Generic payload memory management. </SPAN>