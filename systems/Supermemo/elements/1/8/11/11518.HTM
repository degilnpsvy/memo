<B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">6.1.1 Introduction </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; FONT-FAMILY: Arial; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The combined forward and backward transport interfaces group the core TLM-2.0 interfaces for use by the initiator and target sockets. Note that the combined interfaces include the transport, DMI and debug transport interfaces, but do not include any TLM-1 core interfaces. The forward interface provides method calls on the forward path from initiator socket to target socket, and the backwards interface on the backward path from target socket to initiator socket. Neither the blocking transport interface nor the debug transport interface require a backward calling path. It would be technically possible to define new socket class templates unrelated to the standard initiator and target sockets and then to instantiate those class templates using the combined interfaces as template arguments, but for the sake of interoperability this is not recommended. On the other hand, deriving new socket classes from the standard sockets is recommended for convenience. </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15pt; COLOR: black; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">The combined interface templates are parameterized with a <I>protocol traits class </I>that defines the types used by the forward and backward interfaces, namely the payload type and the phase type. A protocol traits class is associated with a specific protocol. The default protocol type is the class <B>tlm_base_protocol_types</B>. See 8.2 Base protocol. </SPAN>