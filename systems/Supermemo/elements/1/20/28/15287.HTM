<FONT class=extract>Sometimes, however, you may not want a variable to be inherited. For these situations, <CODE>make</CODE> provides the <CODE>private</CODE> modifier. Although this modifier can be used with any variable assignment, it makes the most sense with target- and pattern-specific variables.</FONT> <FONT class=extract>Any variable marked <CODE>private</CODE> will be visible to its local target but will not be inherited by prerequisites of that target.</FONT> <FONT class=extract>A global variable marked <CODE>private</CODE> will be visible in the global scope but will not be inherited by any target, and hence will not be visible in any recipe.</FONT> 
<P><FONT class=extract>As an example, consider this makefile: </FONT><PRE class=example><FONT class=extract>     EXTRA_CFLAGS =
     
     prog: private EXTRA_CFLAGS = -L/usr/local/lib
     prog: a.o b.o
</FONT></PRE>
<P><FONT class=extract>Due to the <CODE>private</CODE> modifier, <CODE>a.o</CODE> and <CODE>b.o</CODE> will not inherit the <CODE>EXTRA_CFLAGS</CODE> variable assignment from the <CODE>prog</CODE> target.</FONT>