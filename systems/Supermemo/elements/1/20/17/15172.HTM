This is marginally more exciting, but the true power of this feature only becomes apparent when you discover that secondary expansions always take place within the scope of the automatic variables for that target. This means that you can use variables such as <CODE>$@</CODE>, <CODE>$*</CODE>, etc. during the second expansion and they will have their expected values, just as in the recipe. All you have to do is defer the expansion by escaping the <CODE>$</CODE>. Also, secondary expansion occurs for both explicit and implicit (pattern) rules. Knowing this, the possible uses for this feature increase dramatically. For example: <PRE class=example>     .SECONDEXPANSION:
     main_OBJS := main.o try.o test.o
     lib_OBJS := lib.o api.o
     
     main lib: <SPAN class=cloze>[...]</SPAN></PRE>