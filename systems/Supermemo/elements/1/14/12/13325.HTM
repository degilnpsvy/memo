<A name=Bash-Conditional-Expressions></A>
<H3 class=section>6.4 Bash Conditional Expressions</H3><A name=index-expressions_002c-conditional></A>
<P>Conditional expressions are used by the <CODE>[[</CODE> compound command and the <CODE>test</CODE> and <CODE>[</CODE> builtin commands. </P>
<P>Expressions may be unary or binary. Unary expressions are often used to examine the status of a file. There are string operators and numeric comparison operators as well. If the <VAR>file</VAR> argument to one of the primaries is of the form <SAMP>/dev/fd/<VAR>N</VAR></SAMP>, then file descriptor <VAR>N</VAR> is checked. If the <VAR>file</VAR> argument to one of the primaries is one of <SAMP>/dev/stdin</SAMP>, <SAMP>/dev/stdout</SAMP>, or <SAMP>/dev/stderr</SAMP>, file descriptor 0, 1, or 2, respectively, is checked. </P>
<P>When used with &#8216;<SAMP>[[</SAMP>&#8217;, the &#8216;<SAMP>&lt;</SAMP>&#8217; and &#8216;<SAMP>&gt;</SAMP>&#8217; operators sort lexicographically using the current locale. The <CODE>test</CODE> command uses ASCII ordering. </P>
<P>Unless otherwise specified, primaries that operate on files follow symbolic links and operate on the target of the link, rather than the link itself. </P>
<DL compact>
<DT><CODE>-a <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists. </P>
<DT><CODE>-b <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a block special file. </P>
<DT><CODE>-c <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a character special file. </P>
<DT><CODE>-d <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a directory. </P>
<DT><CODE>-e <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists. </P>
<DT><CODE>-f <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a regular file. </P>
<DT><CODE>-g <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and its set-group-id bit is set. </P>
<DT><CODE>-h <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a symbolic link. </P>
<DT><CODE>-k <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and its "sticky" bit is set. </P>
<DT><CODE>-p <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a named pipe (FIFO). </P>
<DT><CODE>-r <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is readable. </P>
<DT><CODE>-s <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and has a size greater than zero. </P>
<DT><CODE>-t <VAR>fd</VAR></CODE> 
<DD>
<P>True if file descriptor <VAR>fd</VAR> is open and refers to a terminal. </P>
<DT><CODE>-u <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and its set-user-id bit is set. </P>
<DT><CODE>-w <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is writable. </P>
<DT><CODE>-x <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is executable. </P>
<DT><CODE>-G <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is owned by the effective group id. </P>
<DT><CODE>-L <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a symbolic link. </P>
<DT><CODE>-N <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and has been modified since it was last read. </P>
<DT><CODE>-O <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is owned by the effective user id. </P>
<DT><CODE>-S <VAR>file</VAR></CODE> 
<DD>
<P>True if <VAR>file</VAR> exists and is a socket. </P>
<DT><CODE><VAR>file1</VAR> -ef <VAR>file2</VAR></CODE> 
<DD>
<P>True if <VAR>file1</VAR> and <VAR>file2</VAR> refer to the same device and inode numbers. </P>
<DT><CODE><VAR>file1</VAR> -nt <VAR>file2</VAR></CODE> 
<DD>
<P>True if <VAR>file1</VAR> is newer (according to modification date) than <VAR>file2</VAR>, or if <VAR>file1</VAR> exists and <VAR>file2</VAR> does not. </P>
<DT><CODE><VAR>file1</VAR> -ot <VAR>file2</VAR></CODE> 
<DD>
<P>True if <VAR>file1</VAR> is older than <VAR>file2</VAR>, or if <VAR>file2</VAR> exists and <VAR>file1</VAR> does not. </P>
<DT><CODE>-o <VAR>optname</VAR></CODE> 
<DD>
<P>True if the shell option <VAR>optname</VAR> is enabled. The list of options appears in the description of the <SAMP>-o</SAMP> option to the <CODE>set</CODE> builtin (see <A href="http://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html#The-Set-Builtin">The Set Builtin</A>). </P>
<DT><CODE>-v <VAR>varname</VAR></CODE> 
<DD>
<P>True if the shell variable <VAR>varname</VAR> is set (has been assigned a value). </P>
<DT><CODE>-z <VAR>string</VAR></CODE> 
<DD>
<P>True if the length of <VAR>string</VAR> is zero. </P>
<DT><CODE>-n <VAR>string</VAR></CODE> 
<DT><CODE><VAR>string</VAR></CODE> 
<DD>
<P>True if the length of <VAR>string</VAR> is non-zero. </P>
<DT><CODE><VAR>string1</VAR> == <VAR>string2</VAR></CODE> 
<DT><CODE><VAR>string1</VAR> = <VAR>string2</VAR></CODE> 
<DD>
<P>True if the strings are equal. &#8216;<SAMP>=</SAMP>&#8217; should be used with the <CODE>test</CODE> command for <SMALL><FONT size=2>POSIX</FONT></SMALL> conformance. </P>
<DT><CODE><VAR>string1</VAR> != <VAR>string2</VAR></CODE> 
<DD>
<P>True if the strings are not equal. </P>
<DT><CODE><VAR>string1</VAR> &lt; <VAR>string2</VAR></CODE> 
<DD>
<P>True if <VAR>string1</VAR> sorts before <VAR>string2</VAR> lexicographically. </P>
<DT><CODE><VAR>string1</VAR> &gt; <VAR>string2</VAR></CODE> 
<DD>
<P>True if <VAR>string1</VAR> sorts after <VAR>string2</VAR> lexicographically. </P>
<DT><CODE><VAR>arg1</VAR> OP <VAR>arg2</VAR></CODE> 
<DD>
<P><CODE>OP</CODE> is one of &#8216;<SAMP>-eq</SAMP>&#8217;, &#8216;<SAMP>-ne</SAMP>&#8217;, &#8216;<SAMP>-lt</SAMP>&#8217;, &#8216;<SAMP>-le</SAMP>&#8217;, &#8216;<SAMP>-gt</SAMP>&#8217;, or &#8216;<SAMP>-ge</SAMP>&#8217;. These arithmetic binary operators return true if <VAR>arg1</VAR> is equal to, not equal to, less than, less than or equal to, greater than, or greater than or equal to <VAR>arg2</VAR>, respectively. <VAR>Arg1</VAR> and <VAR>arg2</VAR> may be positive or negative integers. </P></DD></DL>
<HR>

<DIV class=header>
<P>Next: <A accessKey=n href="http://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic" rel=next>Shell Arithmetic</A>, Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Interactive-Shells.html#Interactive-Shells" rel=previous>Interactive Shells</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Bash-Features.html#Bash-Features" rel=up>Bash Features</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>