<A name=Interactive-Shell-Behavior></A>
<H4 class=subsection>6.3.3 Interactive Shell Behavior</H4>
<P>When the shell is running interactively, it changes its behavior in several ways. </P>
<OL>
<LI>Startup files are read and executed as described in <A href="http://www.gnu.org/software/bash/manual/html_node/Bash-Startup-Files.html#Bash-Startup-Files">Bash Startup Files</A>. 
<LI>Job Control (see <A href="http://www.gnu.org/software/bash/manual/html_node/Job-Control.html#Job-Control">Job Control</A>) is enabled by default. When job control is in effect, Bash ignores the keyboard-generated job control signals <CODE>SIGTTIN</CODE>, <CODE>SIGTTOU</CODE>, and <CODE>SIGTSTP</CODE>. 
<LI>Bash expands and displays <CODE>PS1</CODE> before reading the first line of a command, and expands and displays <CODE>PS2</CODE> before reading the second and subsequent lines of a multi-line command. 
<LI>Bash executes the value of the <CODE>PROMPT_COMMAND</CODE> variable as a command before printing the primary prompt, <CODE>$PS1</CODE> (see <A href="http://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html#Bash-Variables">Bash Variables</A>). 
<LI>Readline (see <A href="http://www.gnu.org/software/bash/manual/html_node/Command-Line-Editing.html#Command-Line-Editing">Command Line Editing</A>) is used to read commands from the user&#8217;s terminal. 
<LI>Bash inspects the value of the <CODE>ignoreeof</CODE> option to <CODE>set -o</CODE> instead of exiting immediately when it receives an <CODE>EOF</CODE> on its standard input when reading a command (see <A href="http://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html#The-Set-Builtin">The Set Builtin</A>). 
<LI>Command history (see <A href="http://www.gnu.org/software/bash/manual/html_node/Bash-History-Facilities.html#Bash-History-Facilities">Bash History Facilities</A>) and history expansion (see <A href="http://www.gnu.org/software/bash/manual/html_node/History-Interaction.html#History-Interaction">History Interaction</A>) are enabled by default. Bash will save the command history to the file named by <CODE>$HISTFILE</CODE> when an interactive shell exits. 
<LI>Alias expansion (see <A href="http://www.gnu.org/software/bash/manual/html_node/Aliases.html#Aliases">Aliases</A>) is performed by default. 
<LI>In the absence of any traps, Bash ignores <CODE>SIGTERM</CODE> (see <A href="http://www.gnu.org/software/bash/manual/html_node/Signals.html#Signals">Signals</A>). 
<LI>In the absence of any traps, <CODE>SIGINT</CODE> is caught and handled ((see <A href="http://www.gnu.org/software/bash/manual/html_node/Signals.html#Signals">Signals</A>). <CODE>SIGINT</CODE> will interrupt some shell builtins. 
<LI>An interactive login shell sends a <CODE>SIGHUP</CODE> to all jobs on exit if the <CODE>huponexit</CODE> shell option has been enabled (see <A href="http://www.gnu.org/software/bash/manual/html_node/Signals.html#Signals">Signals</A>). 
<LI>The <SAMP>-n</SAMP> invocation option is ignored, and &#8216;<SAMP>set -n</SAMP>&#8217; has no effect (see <A href="http://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html#The-Set-Builtin">The Set Builtin</A>). 
<LI>Bash will check for mail periodically, depending on the values of the <CODE>MAIL</CODE>, <CODE>MAILPATH</CODE>, and <CODE>MAILCHECK</CODE> shell variables (see <A href="http://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html#Bash-Variables">Bash Variables</A>). 
<LI>Expansion errors due to references to unbound shell variables after &#8216;<SAMP>set -u</SAMP>&#8217; has been enabled will not cause the shell to exit (see <A href="http://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html#The-Set-Builtin">The Set Builtin</A>). 
<LI>The shell will not exit on expansion errors caused by <VAR>var</VAR> being unset or null in <CODE>${<VAR>var</VAR>:?<VAR>word</VAR>}</CODE> expansions (see <A href="http://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html#Shell-Parameter-Expansion">Shell Parameter Expansion</A>). 
<LI>Redirection errors encountered by shell builtins will not cause the shell to exit. 
<LI>When running in <SMALL><FONT size=2>POSIX</FONT></SMALL> mode, a special builtin returning an error status will not cause the shell to exit (see <A href="http://www.gnu.org/software/bash/manual/html_node/Bash-POSIX-Mode.html#Bash-POSIX-Mode">Bash POSIX Mode</A>). 
<LI>A failed <CODE>exec</CODE> will not cause the shell to exit (see <A href="http://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#Bourne-Shell-Builtins">Bourne Shell Builtins</A>). 
<LI>Parser syntax errors will not cause the shell to exit. 
<LI>Simple spelling correction for directory arguments to the <CODE>cd</CODE> builtin is enabled by default (see the description of the <CODE>cdspell</CODE> option to the <CODE>shopt</CODE> builtin in <A href="http://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html#The-Shopt-Builtin">The Shopt Builtin</A>). 
<LI>The shell will check the value of the <CODE>TMOUT</CODE> variable and exit if a command is not read within the specified number of seconds after printing <CODE>$PS1</CODE> (see <A href="http://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html#Bash-Variables">Bash Variables</A>). </LI></OL>
<HR>

<DIV class=header>
<P>Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Is-this-Shell-Interactive_003f.html#Is-this-Shell-Interactive_003f" rel=previous>Is this Shell Interactive?</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Interactive-Shells.html#Interactive-Shells" rel=up>Interactive Shells</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>