<A name=Lists></A>
<H4 class=subsection>3.2.3 Lists of Commands</H4><A name=index-commands_002c-lists></A>
<P><FONT class=extract>A <CODE>list</CODE> is a sequence of one or more pipelines separated by one of the operators &#8216;<SAMP>;</SAMP>&#8217;, &#8216;<SAMP>&amp;</SAMP>&#8217;, &#8216;<SAMP>&amp;&amp;</SAMP>&#8217;, or &#8216;<SAMP>||</SAMP>&#8217;, and optionally terminated by one of &#8216;<SAMP>;</SAMP>&#8217;, &#8216;<SAMP>&amp;</SAMP>&#8217;, or a <CODE>newline</CODE>. </FONT></P>
<P><FONT class=extract>Of these list operators, &#8216;<SAMP>&amp;&amp;</SAMP>&#8217; and &#8216;<SAMP>||</SAMP>&#8217; have equal precedence, followed by &#8216;<SAMP>;</SAMP>&#8217; and &#8216;<SAMP>&amp;</SAMP>&#8217;, which have equal precedence. </FONT></P>
<P><FONT class=extract>A sequence of one or more newlines may appear in a <CODE>list</CODE> to delimit commands, equivalent to a semicolon. </FONT></P>
<P><FONT class=extract>If a command is terminated by the control operator &#8216;<SAMP>&amp;</SAMP>&#8217;, the shell executes the command asynchronously in a subshell. This is known as executing the command in the <VAR>background</VAR>. The shell does not wait for the command to finish, and the return status is 0 (true). When job control is not active (see </FONT><A href="http://www.gnu.org/software/bash/manual/html_node/Job-Control.html#Job-Control"><FONT class=extract>Job Control</FONT></A><FONT class=extract>), the standard input for asynchronous commands, in the absence of any explicit redirections, is redirected from <CODE>/dev/null</CODE>.</FONT> </P>
<P><FONT class=extract>Commands separated by a &#8216;<SAMP>;</SAMP>&#8217; are executed sequentially; the shell waits for each command to terminate in turn. The return status is the exit status of the last command executed.</FONT> </P>
<P><FONT class=extract><SMALL><FONT size=2>AND</FONT></SMALL> and <SMALL><FONT size=2>OR</FONT></SMALL> lists are sequences of one or more pipelines separated by the control operators &#8216;<SAMP>&amp;&amp;</SAMP>&#8217; and &#8216;<SAMP>||</SAMP>&#8217;, respectively. <SMALL><FONT size=2>AND</FONT></SMALL> and <SMALL><FONT size=2>OR</FONT></SMALL> lists are executed with left associativity.</FONT> </P>
<P><FONT class=extract>An <SMALL><FONT size=2>AND</FONT></SMALL> list has the form </FONT></P>
<DIV class=example><PRE class=example><FONT class=extract><VAR>command1</VAR> &amp;&amp; <VAR>command2</VAR>
</FONT></PRE></DIV>
<P><FONT class=extract><VAR>command2</VAR> is executed if, and only if, <VAR>command1</VAR> returns an exit status of zero.</FONT> </P>
<P><FONT class=extract>An <SMALL><FONT size=2>OR</FONT></SMALL> list has the form </FONT></P>
<DIV class=example><PRE class=example><FONT class=extract><VAR>command1</VAR> || <VAR>command2</VAR>
</FONT></PRE></DIV>
<P><FONT class=extract><VAR>command2</VAR> is executed if, and only if, <VAR>command1</VAR> returns a non-zero exit status.</FONT> </P>
<P><FONT class=extract>The return status of <SMALL><FONT size=2>AND</FONT></SMALL> and <SMALL><FONT size=2>OR</FONT></SMALL> lists is the exit status of the last command executed in the list.</FONT> </P>
<HR>

<DIV class=header>
<P>Next: <A accessKey=n href="http://www.gnu.org/software/bash/manual/html_node/Compound-Commands.html#Compound-Commands" rel=next>Compound Commands</A>, Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Pipelines.html#Pipelines" rel=previous>Pipelines</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Shell-Commands.html#Shell-Commands" rel=up>Shell Commands</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>