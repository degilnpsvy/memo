<A name=Shell-Parameters></A>
<H3 class=section>3.4 Shell Parameters</H3><A name=index-parameters></A><A name=index-variable_002c-shell></A><A name=index-shell-variable></A>
<TABLE class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=1 href="http://www.gnu.org/software/bash/manual/html_node/Positional-Parameters.html#Positional-Parameters">Positional Parameters</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>The shell&#8217;s command-line arguments. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=2 href="http://www.gnu.org/software/bash/manual/html_node/Special-Parameters.html#Special-Parameters">Special Parameters</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Parameters denoted by special characters. </TD></TR></TBODY></TABLE>
<P>A <VAR>parameter</VAR> is an entity that stores values. It can be a <CODE>name</CODE>, a number, or one of the special characters listed below. A <VAR>variable</VAR> is a parameter denoted by a <CODE>name</CODE>. <FONT class=extract>A variable has a <VAR>value</VAR> and zero or more <VAR>attributes</VAR>. Attributes are assigned using the <CODE>declare</CODE> builtin command (see the description of the <CODE>declare</CODE> builtin in </FONT><A href="http://www.gnu.org/software/bash/manual/html_node/Bash-Builtins.html#Bash-Builtins"><FONT class=extract>Bash Builtins</FONT></A><FONT class=extract>).</FONT> </P>
<P>A parameter is set if it has been assigned a value. The null string is a valid value. <FONT class=extract>Once a variable is set, it may be unset only by using the <CODE>unset</CODE> builtin command. </FONT></P>
<P><FONT class=extract>A variable may be assigned to by a statement of the form </FONT></P>
<DIV class=example><PRE class=example><FONT class=extract><VAR>name</VAR>=[<VAR>value</VAR>]
</FONT></PRE></DIV>
<P><FONT class=extract>If <VAR>value</VAR> is not given, the variable is assigned the null string. All <VAR>value</VAR>s undergo tilde expansion, parameter and variable expansion, command substitution, arithmetic expansion, and quote removal (detailed below). If the variable has its <CODE>integer</CODE> attribute set, then <VAR>value</VAR> is evaluated as an arithmetic expression even if the <CODE>$((&#8230;))</CODE> expansion is not used (see </FONT><A href="http://www.gnu.org/software/bash/manual/html_node/Arithmetic-Expansion.html#Arithmetic-Expansion"><FONT class=extract>Arithmetic Expansion</FONT></A><FONT class=extract>). Word splitting is not performed, with the exception of <CODE>"$@"</CODE> as explained below. Filename expansion is not performed. Assignment statements may also appear as arguments to the <CODE>alias</CODE>, <CODE>declare</CODE>, <CODE>typeset</CODE>, <CODE>export</CODE>, <CODE>readonly</CODE>, and <CODE>local</CODE> builtin commands. </FONT></P>
<P><FONT class=extract>In the context where an assignment statement is assigning a value to a shell variable or array index (see </FONT><A href="http://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays"><FONT class=extract>Arrays</FONT></A><FONT class=extract>), the &#8216;<SAMP>+=</SAMP>&#8217; operator can be used to append to or add to the variable&#8217;s previous value. When &#8216;<SAMP>+=</SAMP>&#8217; is applied to a variable for which the <VAR>integer</VAR> attribute has been set, <VAR>value</VAR> is evaluated as an arithmetic expression and added to the variable&#8217;s current value, which is also evaluated. When &#8216;<SAMP>+=</SAMP>&#8217; is applied to an array variable using compound assignment (see </FONT><A href="http://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays"><FONT class=extract>Arrays</FONT></A><FONT class=extract>), the variable&#8217;s value is not unset (as it is when using &#8216;<SAMP>=</SAMP>&#8217;), and new values are appended to the array beginning at one greater than the array&#8217;s maximum index (for indexed arrays), or added as additional key-value pairs in an associative array. When applied to a string-valued variable, <VAR>value</VAR> is expanded and appended to the variable&#8217;s value.</FONT> </P>
<HR>

<DIV class=header>
<P>Next: <A accessKey=n href="http://www.gnu.org/software/bash/manual/html_node/Shell-Expansions.html#Shell-Expansions" rel=next>Shell Expansions</A>, Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Shell-Functions.html#Shell-Functions" rel=previous>Shell Functions</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Basic-Shell-Features.html#Basic-Shell-Features" rel=up>Basic Shell Features</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>