<A name=Signals></A>
<H4 class=subsection>3.7.6 Signals</H4><A name=index-signal-handling></A>
<P>When Bash is interactive, in the absence of any traps, it ignores <CODE>SIGTERM</CODE> (so that &#8216;<SAMP>kill 0</SAMP>&#8217; does not kill an interactive shell), and <CODE>SIGINT</CODE> is caught and handled (so that the <CODE>wait</CODE> builtin is interruptible). When Bash receives a <CODE>SIGINT</CODE>, it breaks out of any executing loops. In all cases, Bash ignores <CODE>SIGQUIT</CODE>. If job control is in effect (see <A href="http://www.gnu.org/software/bash/manual/html_node/Job-Control.html#Job-Control">Job Control</A>), Bash ignores <CODE>SIGTTIN</CODE>, <CODE>SIGTTOU</CODE>, and <CODE>SIGTSTP</CODE>. </P>
<P>Non-builtin commands started by Bash have signal handlers set to the values inherited by the shell from its parent. When job control is not in effect, asynchronous commands ignore <CODE>SIGINT</CODE> and <CODE>SIGQUIT</CODE> in addition to these inherited handlers. Commands run as a result of command substitution ignore the keyboard-generated job control signals <CODE>SIGTTIN</CODE>, <CODE>SIGTTOU</CODE>, and <CODE>SIGTSTP</CODE>. </P>
<P>The shell exits by default upon receipt of a <CODE>SIGHUP</CODE>. Before exiting, an interactive shell resends the <CODE>SIGHUP</CODE> to all jobs, running or stopped. Stopped jobs are sent <CODE>SIGCONT</CODE> to ensure that they receive the <CODE>SIGHUP</CODE>. To prevent the shell from sending the <CODE>SIGHUP</CODE> signal to a particular job, it should be removed from the jobs table with the <CODE>disown</CODE> builtin (see <A href="http://www.gnu.org/software/bash/manual/html_node/Job-Control-Builtins.html#Job-Control-Builtins">Job Control Builtins</A>) or marked to not receive <CODE>SIGHUP</CODE> using <CODE>disown -h</CODE>. </P>
<P>If the <CODE>huponexit</CODE> shell option has been set with <CODE>shopt</CODE> (see <A href="http://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html#The-Shopt-Builtin">The Shopt Builtin</A>), Bash sends a <CODE>SIGHUP</CODE> to all jobs when an interactive login shell exits. </P>
<P>If Bash is waiting for a command to complete and receives a signal for which a trap has been set, the trap will not be executed until the command completes. When Bash is waiting for an asynchronous command via the <CODE>wait</CODE> builtin, the reception of a signal for which a trap has been set will cause the <CODE>wait</CODE> builtin to return immediately with an exit status greater than 128, immediately after which the trap is executed. </P>
<HR>

<DIV class=header>
<P>Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Exit-Status.html#Exit-Status" rel=previous>Exit Status</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Executing-Commands.html#Executing-Commands" rel=up>Executing Commands</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>