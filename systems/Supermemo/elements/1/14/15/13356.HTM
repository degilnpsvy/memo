<A name=Commands-For-Completion></A>
<H4 class=subsection>8.4.6 Letting Readline Type For You</H4>
<DL compact>
<DT><CODE>complete (<SPAN class=key>TAB</SPAN>)</CODE> <A name=index-complete-_0028TAB_0029></A>
<DD>
<P>Attempt to perform completion on the text before point. The actual completion performed is application-specific. Bash attempts completion treating the text as a variable (if the text begins with &#8216;<SAMP>$</SAMP>&#8217;), username (if the text begins with &#8216;<SAMP>~</SAMP>&#8217;), hostname (if the text begins with &#8216;<SAMP>@</SAMP>&#8217;), or command (including aliases and functions) in turn. If none of these produces a match, filename completion is attempted. </P>
<DT><CODE>possible-completions (M-?)</CODE> <A name=index-possible_002dcompletions-_0028M_002d_003f_0029></A>
<DD>
<P>List the possible completions of the text before point. When displaying completions, Readline sets the number of columns used for display to the value of <CODE>completion-display-width</CODE>, the value of the environment variable <CODE>COLUMNS</CODE>, or the screen width, in that order. </P>
<DT><CODE>insert-completions (M-*)</CODE> <A name=index-insert_002dcompletions-_0028M_002d_002a_0029></A>
<DD>
<P>Insert all completions of the text before point that would have been generated by <CODE>possible-completions</CODE>. </P>
<DT><CODE>menu-complete ()</CODE> <A name=index-menu_002dcomplete-_0028_0029></A>
<DD>
<P>Similar to <CODE>complete</CODE>, but replaces the word to be completed with a single match from the list of possible completions. Repeated execution of <CODE>menu-complete</CODE> steps through the list of possible completions, inserting each match in turn. At the end of the list of completions, the bell is rung (subject to the setting of <CODE>bell-style</CODE>) and the original text is restored. An argument of <VAR>n</VAR> moves <VAR>n</VAR> positions forward in the list of matches; a negative argument may be used to move backward through the list. This command is intended to be bound to <TT class=key>TAB</TT>, but is unbound by default. </P>
<DT><CODE>menu-complete-backward ()</CODE> <A name=index-menu_002dcomplete_002dbackward-_0028_0029></A>
<DD>
<P>Identical to <CODE>menu-complete</CODE>, but moves backward through the list of possible completions, as if <CODE>menu-complete</CODE> had been given a negative argument. </P>
<DT><CODE>delete-char-or-list ()</CODE> <A name=index-delete_002dchar_002dor_002dlist-_0028_0029></A>
<DD>
<P>Deletes the character under the cursor if not at the beginning or end of the line (like <CODE>delete-char</CODE>). If at the end of the line, behaves identically to <CODE>possible-completions</CODE>. This command is unbound by default. </P>
<DT><CODE>complete-filename (M-/)</CODE> <A name=index-complete_002dfilename-_0028M_002d_002f_0029></A>
<DD>
<P>Attempt filename completion on the text before point. </P>
<DT><CODE>possible-filename-completions (C-x /)</CODE> <A name=index-possible_002dfilename_002dcompletions-_0028C_002dx-_002f_0029></A>
<DD>
<P>List the possible completions of the text before point, treating it as a filename. </P>
<DT><CODE>complete-username (M-~)</CODE> <A name=index-complete_002dusername-_0028M_002d_007e_0029></A>
<DD>
<P>Attempt completion on the text before point, treating it as a username. </P>
<DT><CODE>possible-username-completions (C-x ~)</CODE> <A name=index-possible_002dusername_002dcompletions-_0028C_002dx-_007e_0029></A>
<DD>
<P>List the possible completions of the text before point, treating it as a username. </P>
<DT><CODE>complete-variable (M-$)</CODE> <A name=index-complete_002dvariable-_0028M_002d_0024_0029></A>
<DD>
<P>Attempt completion on the text before point, treating it as a shell variable. </P>
<DT><CODE>possible-variable-completions (C-x $)</CODE> <A name=index-possible_002dvariable_002dcompletions-_0028C_002dx-_0024_0029></A>
<DD>
<P>List the possible completions of the text before point, treating it as a shell variable. </P>
<DT><CODE>complete-hostname (M-@)</CODE> <A name=index-complete_002dhostname-_0028M_002d_0040_0029></A>
<DD>
<P>Attempt completion on the text before point, treating it as a hostname. </P>
<DT><CODE>possible-hostname-completions (C-x @)</CODE> <A name=index-possible_002dhostname_002dcompletions-_0028C_002dx-_0040_0029></A>
<DD>
<P>List the possible completions of the text before point, treating it as a hostname. </P>
<DT><CODE>complete-command (M-!)</CODE> <A name=index-complete_002dcommand-_0028M_002d_0021_0029></A>
<DD>
<P>Attempt completion on the text before point, treating it as a command name. Command completion attempts to match the text against aliases, reserved words, shell functions, shell builtins, and finally executable filenames, in that order. </P>
<DT><CODE>possible-command-completions (C-x !)</CODE> <A name=index-possible_002dcommand_002dcompletions-_0028C_002dx-_0021_0029></A>
<DD>
<P>List the possible completions of the text before point, treating it as a command name. </P>
<DT><CODE>dynamic-complete-history (M-<SPAN class=key>TAB</SPAN>)</CODE> <A name=index-dynamic_002dcomplete_002dhistory-_0028M_002dTAB_0029></A>
<DD>
<P>Attempt completion on the text before point, comparing the text against lines from the history list for possible completion matches. </P>
<DT><CODE>dabbrev-expand ()</CODE> <A name=index-dabbrev_002dexpand-_0028_0029></A>
<DD>
<P>Attempt menu completion on the text before point, comparing the text against lines from the history list for possible completion matches. </P>
<DT><CODE>complete-into-braces (M-{)</CODE> <A name=index-complete_002dinto_002dbraces-_0028M_002d_007b_0029></A>
<DD>
<P>Perform filename completion and insert the list of possible completions enclosed within braces so the list is available to the shell (see <A href="http://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html#Brace-Expansion">Brace Expansion</A>). </P></DD></DL>
<HR>

<DIV class=header>
<P>Next: <A accessKey=n href="http://www.gnu.org/software/bash/manual/html_node/Keyboard-Macros.html#Keyboard-Macros" rel=next>Keyboard Macros</A>, Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Numeric-Arguments.html#Numeric-Arguments" rel=previous>Numeric Arguments</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Bindable-Readline-Commands.html#Bindable-Readline-Commands" rel=up>Bindable Readline Commands</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>