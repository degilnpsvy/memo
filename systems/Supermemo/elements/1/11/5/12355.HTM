<SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">Adding a Generated File and Generator (Step 5)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">In this section we will show how you can add a generated source file into the build process of an application. For this example we will create a table of precomputed square roots as part of the build process, and then compile that table into our application. To accomplish this we first need a program that will generate the table. In the MathFunctions subdirectory a new source file named MakeTable.cxx will do just that.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">// A simple program that builds a sqrt table </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#include &lt;stdio.h&gt;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#include &lt;stdlib.h&gt;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#include &lt;math.h&gt;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">int main (int argc, char *argv[])</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>int i;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>double result;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>// make sure we have enough arguments</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>if (argc &lt; 2)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>return 1;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>// open the output file</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>FILE *fout = fopen(argv[1],"w");</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>if (!fout)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>return 1;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>// create a source file with a table of square roots</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>fprintf(fout,"double sqrtTable[] = {\n");</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>for (i = 0; i &lt; 10; ++i)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>result = sqrt(static_cast&lt;double&gt;(i));</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>fprintf(fout,"%g,\n",result);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>// close the table with a zero</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>fprintf(fout,"0};\n");</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>fclose(fout);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>return 0;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">Note that the table is produced as valid C++ code and that the name of the file to write the output to is passed in as an argument. The next step is to add the appropriate commands to MathFunctions&#8217; CMakeLists file to build the MakeTable executable, and then run it as part of the build process. A few commands are needed to accomplish this, as shown below.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># first we add the executable that generates the table</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_executable(MakeTable MakeTable.cxx)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the command to generate the source code</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_custom_command (</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/Table.h</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>COMMAND MakeTable ${CMAKE_CURRENT_BINARY_DIR}/Table.h</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>DEPENDS MakeTable</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the binary tree directory to the search path for </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># include files</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">include_directories( ${CMAKE_CURRENT_BINARY_DIR} )</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the main library</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_library(MathFunctions mysqrt.cxx ${CMAKE_CURRENT_BINARY_DIR}/Table.h<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">First the executable for MakeTable is added as any other executable would be added. Then we add a custom command that specifies how to produce Table.h by running MakeTable. Next we have to let CMake know that mysqrt.cxx depends on the generated file Table.h. This is done by adding the generated Table.h to the list of sources for the library MathFunctions. We also have to add the current binary directory to the list of include directories so that Table.h can be found and included by mysqrt.cxx.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">When this project is built it will first build the MakeTable executable. It will then run MakeTable to produce Table.h. Finally, it will compile mysqrt.cxx which includes Table.h to produce the MathFunctions library.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">At this point the top level CMakeLists file with all the features we have added looks like the following:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">cmake_minimum_required (VERSION 2.6)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">project (Tutorial)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># The version number.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">set (Tutorial_VERSION_MAJOR 1)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">set (Tutorial_VERSION_MINOR 0)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># does this system provide the log and exp functions?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">include (${CMAKE_ROOT}/Modules/CheckFunctionExists.cmake)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">check_function_exists (log HAVE_LOG)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">check_function_exists (exp HAVE_EXP)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># should we use our own math functions</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">option(USE_MYMATH </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>"Use tutorial provided math implementation" ON)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># configure a header file to pass some of the CMake settings</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># to the source code</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">configure_file (</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>"${PROJECT_SOURCE_DIR}/TutorialConfig.h.in"</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>"${PROJECT_BINARY_DIR}/TutorialConfig.h"</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the binary tree to the search path for include files</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># so that we will find TutorialConfig.h</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">include_directories ("${PROJECT_BINARY_DIR}")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the MathFunctions library?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">if (USE_MYMATH)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>include_directories ("${PROJECT_SOURCE_DIR}/MathFunctions")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>add_subdirectory (MathFunctions)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>set (EXTRA_LIBS ${EXTRA_LIBS} MathFunctions)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">endif (USE_MYMATH)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the executable</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_executable (Tutorial tutorial.cxx)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">target_link_libraries (Tutorial<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>${EXTRA_LIBS})</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the install targets</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">install (TARGETS Tutorial DESTINATION bin)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">install (FILES "${PROJECT_BINARY_DIR}/TutorialConfig.h"<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>DESTINATION include)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># does the application run</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_test (TutorialRuns Tutorial 25)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># does the usage message work?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_test (TutorialUsage Tutorial)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">set_tests_properties (TutorialUsage</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>PROPERTIES </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>PASS_REGULAR_EXPRESSION "Usage:.*number"</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#define a macro to simplify adding tests</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">macro (do_test arg result)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>add_test (TutorialComp${arg} Tutorial ${arg})</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>set_tests_properties (TutorialComp${arg}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>PROPERTIES PASS_REGULAR_EXPRESSION ${result}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">endmacro (do_test)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># do a bunch of result based tests</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (4 "4 is 2")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (9 "9 is 3")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (5 "5 is 2.236")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (7 "7 is 2.645")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (25 "25 is 5")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (-25 "-25 is 0")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">do_test (0.0001 "0.0001 is 0.01")</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">TutorialConfig.h looks like:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">// the configured options and settings for Tutorial</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#define Tutorial_VERSION_MAJOR @Tutorial_VERSION_MAJOR@</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#define Tutorial_VERSION_MINOR @Tutorial_VERSION_MINOR@</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#cmakedefine USE_MYMATH</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">// does the platform provide exp and log functions?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#cmakedefine HAVE_LOG</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">#cmakedefine HAVE_EXP</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">And the CMakeLists file for MathFunctions looks like:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># first we add the executable that generates the table</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_executable(MakeTable MakeTable.cxx)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the command to generate the source code</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_custom_command (</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/Table.h</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>DEPENDS MakeTable</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>COMMAND MakeTable ${CMAKE_CURRENT_BINARY_DIR}/Table.h</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the binary tree directory to the search path </SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># for include files</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">include_directories( ${CMAKE_CURRENT_BINARY_DIR} )</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"># add the main library</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">add_library(MathFunctions mysqrt.cxx ${CMAKE_CURRENT_BINARY_DIR}/Table.h)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">install (TARGETS MathFunctions DESTINATION bin)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt">install (FILES MathFunctions.h DESTINATION include)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><BR style="mso-special-character: line-break"><BR style="mso-special-character: line-break"><A name=s6></A></SPAN>