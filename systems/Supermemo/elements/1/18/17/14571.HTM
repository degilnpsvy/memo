<H2 style="MARGIN: 13pt 0cm"><SPAN lang=EN-US style="FONT-SIZE: 24pt; LINE-HEIGHT: 173%; mso-bidi-font-size: 16.0pt; mso-font-kerning: 0pt"><FONT face=Arial>41.6 Shared Library Versions and Naming Conventions</FONT></SPAN></H2>
<p><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">Let&#8217;s consider what is entailed by shared library versioning. Typically, successive versions of a shared library are compatible with one another, meaning that the functions in each module present the same calling interface and are semantically equivalent (i.e., they achieve identical results). Such differing but compatible versions are referred to as </SPAN><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">minor versions </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">of a shared library. Occasionally, however, it is necessary to create a new </SPAN><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">major version </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">of a library&#8212;one that is incompatible with a previous version. (In Section 41.8, we&#8217;ll see more precisely what may cause such incompatibilities.) At the same time, it must still be possible to continue running programs that require the older version of the library.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">To deal with these versioning requirements, a standard naming convention is employed for shared library real names and sonames.</SPAN>