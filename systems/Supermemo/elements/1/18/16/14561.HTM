<H3 style="MARGIN: 13pt 0cm"><SPAN lang=EN-US style="FONT-SIZE: 24pt; LINE-HEIGHT: 173%; mso-bidi-font-size: 16.0pt; mso-font-kerning: 0pt">41.4.3 Using a Shared Library</SPAN></H3>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">In order to use a shared library, two steps must occur that are not required for programs that use static libraries:</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">Since the executable file no longer contains copies of the object files that it requires, it must have some mechanism for identifying the shared library that it needs at run time. This is done by embedding the name of the shared library inside the executable during the link phase. (In ELF parlance, the library dependency is recorded in a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">DT_NEEDED </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">tag in the executable.) The list of all of a program&#8217;s shared library dependencies is referred to as its </SPAN><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">dynamic dependency list</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">At run time, there must be some mechanism for resolving the embedded library name&#8212;that is, for finding the shared library file corresponding to the name specified in the executable file&#8212;and then loading the library into memory, if it is not already present.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">Embedding the name of the library inside the executable happens automatically when we link our program with a shared library:</SPAN></P>
<P><SPAN lang=DA style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'; mso-ansi-language: DA">$ gcc -g -Wall -o prog prog.c libfoo.so</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">If we now attempt to run our program, we receive the following error message:</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">1</SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">$ ./prog</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">2</SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">./prog: error<SPAN style="COLOR: #40ffff"> in</SPAN> loading shared libraries: libfoo.so: cannot</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">3</SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">open shared object file: No such file or directory</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">This brings us to the second required step: </SPAN><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">dynamic linking</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">, which is the task of resolving the embedded library name at run time. This task is performed by the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">dynamic linker </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">(also called the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">dynamic linking loader </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">or the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">run-time linker</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">). The dynamic linker is itself a shared library, named </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">/lib/ld-linux.so.2</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">, which is employed by every ELF executable that uses shared libraries.</SPAN></FONT></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><EM><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">The pathname </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">/lib/ld-linux.so.2 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">is normally a symbolic link pointing to the dynamic linker executable file. This file has the name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">ld-</SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">version</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">.so</SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">, where </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">version </SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">is the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: NewBaskervilleEF-RomanIta; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">glibc </SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">version installed on the system&#8212;for example, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">ld-2.11.so</SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">. The pathname of the dynamic linker differs on some architectures. For example, on IA-64, the dynamic linker symbolic link is named </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">/lib/ld-linux-ia64.so.2</SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">.</SPAN></FONT></EM></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">The dynamic linker examines the list of shared libraries required by a program and uses a set of predefined rules in order to find the library files in the file system. Some of these rules specify a set of standard directories in which shared libraries normally reside. For example, many shared libraries reside in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">/lib </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">/usr/lib</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">. The error message above occurs because our library resides in the current working directory, which is not part of the standard list searched by the dynamic linker.</SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><EM><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">Some architectures (e.g., zSeries, PowerPC64, and x86-64) support execution of both 32-bit and 64-bit programs. On such systems, the 32-bit libraries reside in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">*/lib </SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">subdirectories, and the 64-bit libraries reside in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-hansi-font-family: Futura-CondensedBold">*/lib64 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">subdirectories.</SPAN></EM>