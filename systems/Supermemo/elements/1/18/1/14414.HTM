<H3 class=section>5.7 Recursive Use of <CODE>make</CODE></H3>
<P><A name=index-recursion-385></A><A name=index-subdirectories_002c-recursion-for-386></A>Recursive use of <CODE>make</CODE> means using <CODE>make</CODE> as a command in a makefile. This technique is useful when you want separate makefiles for various subsystems that compose a larger system. For example, suppose you have a sub-directory <SAMP><SPAN class=file>subdir</SPAN></SAMP> which has its own makefile, and you would like the containing directory's makefile <FONT class=extract>to run <CODE>make</CODE> on the sub-directory. You can do it by writing this: </FONT><PRE class=example><FONT class=extract>     subsystem:
             cd subdir &amp;&amp; $(MAKE)
</FONT></PRE>
<P class=noindent><FONT class=extract>or, equivalently, this (see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Options-Summary"><FONT class=extract>Summary of Options</FONT></A><FONT class=extract>): </FONT><PRE class=example><FONT class=extract>     subsystem:
             $(MAKE) -C subdir
</FONT></PRE>
<P><A name=index-g_t_0040code_007b_002dC_007d-387></A><A name=index-g_t_0040code_007b_002d_002ddirectory_007d-388></A>You can write recursive <CODE>make</CODE> commands just by copying this example, but there are many things to know about how they work and why, and about how the sub-<CODE>make</CODE> relates to the top-level <CODE>make</CODE>. You may also find it useful to declare targets that invoke recursive <CODE>make</CODE> commands as &#8216;<SAMP><SPAN class=samp>.PHONY</SPAN></SAMP>&#8217; (for more discussion on when this is useful, see <A href="https://www.gnu.org/software/make/manual/make.html#Phony-Targets">Phony Targets</A>). 
<P><A name=index-g_t_0040code_007bCURDIR_007d-389></A><FONT class=extract>For your convenience, when GNU <CODE>make</CODE> starts (after it has processed any <CODE>-C</CODE> options) it sets the variable <CODE>CURDIR</CODE> to the pathname of the current working directory. This value is never touched by <CODE>make</CODE> again: in particular note that if you include files from other directories the value of <CODE>CURDIR</CODE> does not change. The value has the same precedence it would have if it were set in the makefile (by default, an environment variable <CODE>CURDIR</CODE> will not override this value). Note that setting this variable has no impact on the operation of <CODE>make</CODE> (it does not cause <CODE>make</CODE> to change its working directory, for example). </FONT>
<UL class=menu>
<LI><A accessKey=1 href="https://www.gnu.org/software/make/manual/make.html#MAKE-Variable">MAKE Variable</A>: The special effects of using &#8216;<SAMP><SPAN class=samp>$(MAKE)</SPAN></SAMP>&#8217;. 
<LI><A accessKey=2 href="https://www.gnu.org/software/make/manual/make.html#Variables_002fRecursion">Variables/Recursion</A>: How to communicate variables to a sub-<CODE>make</CODE>. 
<LI><A accessKey=3 href="https://www.gnu.org/software/make/manual/make.html#Options_002fRecursion">Options/Recursion</A>: How to communicate options to a sub-<CODE>make</CODE>. 
<LI><A accessKey=4 href="https://www.gnu.org/software/make/manual/make.html#g_t_002dw-Option">-w Option</A>: How the &#8216;<SAMP><SPAN class=samp>-w</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>--print-directory</SPAN></SAMP>&#8217; option helps debug use of recursive <CODE>make</CODE> commands. </LI></UL>