<H3 class=section>4.4 Using Wildcard Characters in File Names</H3>
<P><A name=index-wildcard-150></A><A name=index-file-name-with-wildcards-151></A><A name=index-globbing-_0028wildcards_0029-152></A><A name=index-g_t_0040code_007b_002a_007d-_0028wildcard-character_0029-153></A><A name=index-g_t_0040code_007b_003f_007d-_0028wildcard-character_0029-154></A><A name=index-g_t_0040code_007b_005b_0040dots_007b_007d_005d_007d-_0028wildcard-characters_0029-155></A><FONT class=extract>A single file name can specify many files using <DFN>wildcard characters</DFN>. The wildcard characters in <CODE>make</CODE> are &#8216;<SAMP><SPAN class=samp>*</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>?</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>[...]</SPAN></SAMP>&#8217;, the same as in the Bourne shell.</FONT> For example, <SAMP><SPAN class=file>*.c</SPAN></SAMP> specifies a list of all the files (in the working directory) whose names end in &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217;. 
<P><A name=index-g_t_0040code_007b_007e_007d-_0028tilde_0029-156></A><A name=index-tilde-_0028_0040code_007b_007e_007d_0029-157></A><A name=index-home-directory-158></A>The character &#8216;<SAMP><SPAN class=samp>~</SPAN></SAMP>&#8217; at the beginning of a file name also has special significance. If alone, or followed by a slash, it represents your home directory. For example <SAMP><SPAN class=file>~/bin</SPAN></SAMP> expands to <SAMP><SPAN class=file>/home/you/bin</SPAN></SAMP>. <FONT class=extract>If the &#8216;<SAMP><SPAN class=samp>~</SPAN></SAMP>&#8217; is followed by a word, the string represents the home directory of the user named by that word. For example <SAMP><SPAN class=file>~john/bin</SPAN></SAMP> expands to <SAMP><SPAN class=file>/home/john/bin</SPAN></SAMP>.</FONT> <FONT class=extract>On systems which don't have a home directory for each user (such as MS-DOS or MS-Windows), this functionality can be simulated by setting the environment variable <VAR>HOME</VAR>.</FONT> 
<P><FONT class=extract>Wildcard expansion is performed by <CODE>make</CODE> automatically in targets and in prerequisites. In recipes, the shell is responsible for wildcard expansion. In other contexts, wildcard expansion happens only if you request it explicitly with the <CODE>wildcard</CODE> function.</FONT> 
<P>The special significance of a wildcard character can be turned off by preceding it with a backslash. Thus, <SAMP><SPAN class=file>foo\*bar</SPAN></SAMP> would refer to a specific file whose name consists of &#8216;<SAMP><SPAN class=samp>foo</SPAN></SAMP>&#8217;, an asterisk, and &#8216;<SAMP><SPAN class=samp>bar</SPAN></SAMP>&#8217;. 
<UL class=menu>
<LI><A accessKey=1 href="https://www.gnu.org/software/make/manual/make.html#Wildcard-Examples">Wildcard Examples</A>: Several examples. 
<LI><A accessKey=2 href="https://www.gnu.org/software/make/manual/make.html#Wildcard-Pitfall">Wildcard Pitfall</A>: Problems to avoid. 
<LI><A accessKey=3 href="https://www.gnu.org/software/make/manual/make.html#Wildcard-Function">Wildcard Function</A>: How to cause wildcard expansion where it does not normally take place. </LI></UL>