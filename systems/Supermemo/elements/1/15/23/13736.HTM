<H4 class=subsection>4.4.1 Wildcard Examples</H4>
<P>Wildcards can be used in the recipe of a rule, where they are expanded by the shell. For example, here is a rule to delete all the object files: <PRE class=example>     clean:
             rm -f *.o
</PRE>
<P><A name=index-g_t_0040code_007brm_007d-_0028shell-command_0029-159></A><FONT class=extract>Wildcards are also useful in the prerequisites of a rule. With the following rule in the makefile, &#8216;<SAMP><SPAN class=samp>make print</SPAN></SAMP>&#8217; will print all the &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217; files that have changed since the last time you printed them: </FONT><PRE class=example><FONT class=extract>     print: *.c
             lpr -p $?
             touch print
</FONT></PRE>
<P><A name=index-g_t_0040code_007bprint_007d-target-160></A><A name=index-g_t_0040code_007blpr_007d-_0028shell-command_0029-161></A><A name=index-g_t_0040code_007btouch_007d-_0028shell-command_0029-162></A><FONT class=extract>This rule uses <SAMP><SPAN class=file>print</SPAN></SAMP> as an empty target file; see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Empty-Targets"><FONT class=extract>Empty Target Files to Record Events</FONT></A><FONT class=extract>. (The automatic variable &#8216;<SAMP><SPAN class=samp>$?</SPAN></SAMP>&#8217; is used to print only those files that have changed; see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Automatic-Variables"><FONT class=extract>Automatic Variables</FONT></A><FONT class=extract>.)</FONT> 
<P><FONT class=extract>Wildcard expansion does not happen when you define a variable. Thus, if you write this: </FONT><PRE class=example><FONT class=extract>     objects = *.o
</FONT></PRE>
<P class=noindent><FONT class=extract>then the value of the variable <CODE>objects</CODE> is the actual string &#8216;<SAMP><SPAN class=samp>*.o</SPAN></SAMP>&#8217;. However, if you use the value of <CODE>objects</CODE> in a target or prerequisite, wildcard expansion will take place there. If you use the value of <CODE>objects</CODE> in a recipe, the shell may perform wildcard expansion when the recipe runs. To set <CODE>objects</CODE> to the expansion, instead use: </FONT><PRE class=example><FONT class=extract>     objects := $(wildcard *.o)
</FONT></PRE>