<H4 class=subsection>4.5.5 Directory Search and Implicit Rules</H4>
<P><A name=index-g_t_0040code_007bVPATH_007d_002c-and-implicit-rules-190></A><A name=index-directory-search-_0028_0040code_007bVPATH_007d_0029_002c-and-implicit-rules-191></A><A name=index-search-path-for-prerequisites-_0028_0040code_007bVPATH_007d_0029_002c-and-implicit-rules-192></A><A name=index-implicit-rule_002c-and-directory-search-193></A><A name=index-implicit-rule_002c-and-_0040code_007bVPATH_007d-194></A><A name=index-rule_002c-implicit_002c-and-directory-search-195></A><A name=index-rule_002c-implicit_002c-and-_0040code_007bVPATH_007d-196></A><FONT class=extract>The search through the directories specified in <CODE>VPATH</CODE> or with <CODE>vpath</CODE> also happens during consideration of implicit rules</FONT> (see <A href="https://www.gnu.org/software/make/manual/make.html#Implicit-Rules">Using Implicit Rules</A>). 
<P>For example, when a file <SAMP><SPAN class=file>foo.o</SPAN></SAMP> has no explicit rule, <CODE>make</CODE> considers implicit rules, such as the built-in rule to compile <SAMP><SPAN class=file>foo.c</SPAN></SAMP> if that file exists. If such a file is lacking in the current directory, the appropriate directories are searched for it. If <SAMP><SPAN class=file>foo.c</SPAN></SAMP> exists (or is mentioned in the makefile) in any of the directories, the implicit rule for C compilation is applied. 
<P>The recipes of implicit rules normally use automatic variables as a matter of necessity; consequently they will use the file names found by directory search with no extra effort.