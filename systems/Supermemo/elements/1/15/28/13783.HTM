<H4 class=subsection>4.5.2 The <CODE>vpath</CODE> Directive</H4>
<P><A name=index-vpath-177></A>Similar to the <CODE>VPATH</CODE> variable, but more selective, is the <CODE>vpath</CODE> directive (note lower case), which allows you to specify a search path for a particular class of file names: those that match a particular pattern. Thus you can supply certain search directories for one class of file names and other directories (or none) for other file names. 
<P><FONT class=extract>There are three forms of the <CODE>vpath</CODE> directive: </FONT>
<DL>
<DT><FONT class=extract><CODE>vpath </CODE><VAR>pattern</VAR> <VAR>directories</VAR> </FONT>
<DD><FONT class=extract>Specify the search path <VAR>directories</VAR> for file names that match <VAR>pattern</VAR>. </FONT>
<P><FONT class=extract>The search path, <VAR>directories</VAR>, is a list of directories to be searched, separated by colons (semi-colons on MS-DOS and MS-Windows) or blanks, just like the search path used in the <CODE>VPATH</CODE> variable. <BR></FONT></P>
<DT><FONT class=extract><CODE>vpath </CODE><VAR>pattern</VAR> </FONT>
<DD><FONT class=extract>Clear out the search path associated with <VAR>pattern</VAR>. <!-- Extra blank line makes sure this gets two lines. --><BR></FONT>
<DT><FONT class=extract><CODE>vpath</CODE> </FONT>
<DD><FONT class=extract>Clear all search paths previously specified with <CODE>vpath</CODE> directives.</FONT> </DD></DL>
<P><FONT class=extract>A <CODE>vpath</CODE> pattern is a string containing a &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; character. The string must match the file name of a prerequisite that is being searched for, the &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; character matching any sequence of zero or more characters (as in pattern rules; see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Pattern-Rules"><FONT class=extract>Defining and Redefining Pattern Rules</FONT></A><FONT class=extract>). For example, <CODE>%.h</CODE> matches files that end in <CODE>.h</CODE>. (If there is no &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217;, the pattern must match the prerequisite exactly, which is not useful very often.) </FONT>
<P><A name=index-g_t_0040code_007b_0025_007d_002c-quoting-in-_0040code_007bvpath_007d-178></A><A name=index-g_t_0040code_007b_0025_007d_002c-quoting-with-_0040code_007b_005c_007d-_0028backslash_0029-179></A><A name=index-g_t_0040code_007b_005c_007d-_0028backslash_0029_002c-to-quote-_0040code_007b_0025_007d-180></A><A name=index-backslash-_0028_0040code_007b_005c_007d_0029_002c-to-quote-_0040code_007b_0025_007d-181></A><A name=index-quoting-_0040code_007b_0025_007d_002c-in-_0040code_007bvpath_007d-182></A><FONT class=extract>&#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; characters in a <CODE>vpath</CODE> directive's pattern can be quoted with preceding backslashes (&#8216;<SAMP><SPAN class=samp>\</SPAN></SAMP>&#8217;). Backslashes that would otherwise quote &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; characters can be quoted with more backslashes. Backslashes that quote &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; characters or other backslashes are removed from the pattern before it is compared to file names. Backslashes that are not in danger of quoting &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; characters go unmolested. </FONT>
<P><FONT class=extract>When a prerequisite fails to exist in the current directory, if the <VAR>pattern</VAR> in a <CODE>vpath</CODE> directive matches the name of the prerequisite file, then the <VAR>directories</VAR> in that directive are searched just like (and before) the directories in the <CODE>VPATH</CODE> variable.</FONT> 
<P><FONT class=extract>For example, </FONT><PRE class=example><FONT class=extract>     vpath %.h ../headers
</FONT></PRE>
<P class=noindent><FONT class=extract>tells <CODE>make</CODE> to look for any prerequisite whose name ends in <SAMP><SPAN class=file>.h</SPAN></SAMP> in the directory <SAMP><SPAN class=file>../headers</SPAN></SAMP> if the file is not found in the current directory. </FONT>
<P><FONT class=extract>If several <CODE>vpath</CODE> patterns match the prerequisite file's name, then <CODE>make</CODE> processes each matching <CODE>vpath</CODE> directive one by one, searching all the directories mentioned in each directive. <CODE>make</CODE> handles multiple <CODE>vpath</CODE> directives in the order in which they appear in the makefile; multiple directives with the same pattern are independent of each other. </FONT>
<P><FONT class=extract>Thus, </FONT><PRE class=example><FONT class=extract>     vpath %.c foo
     vpath %   blish
     vpath %.c bar
</FONT></PRE>
<P class=noindent><FONT class=extract>will look for a file ending in &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217; in <SAMP><SPAN class=file>foo</SPAN></SAMP>, then <SAMP><SPAN class=file>blish</SPAN></SAMP>, then <SAMP><SPAN class=file>bar</SPAN></SAMP>, while </FONT><PRE class=example><FONT class=extract>     vpath %.c foo:bar
     vpath %   blish
</FONT></PRE>
<P class=noindent><FONT class=extract>will look for a file ending in &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217; in <SAMP><SPAN class=file>foo</SPAN></SAMP>, then <SAMP><SPAN class=file>bar</SPAN></SAMP>, then <SAMP><SPAN class=file>blish</SPAN></SAMP>.</FONT>