<B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt">Did I say &#8220;user-mode driver&#8221;? I meant &#8220;user-mode drivers&#8221;.</SPAN></B> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt">As said, the UMD is just a DLL. Okay, one that happens to have the blessing of D3D and a direct pipe to the KMD, but it&#8217;s still a regular DLL, and in runs in the address space of its calling process.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt">But we&#8217;re using multi-tasking OSes nowadays. In fact, we have been for some time.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt">This &#8220;GPU&#8221; thing I keep talking about? That&#8217;s a shared resource. There&#8217;s only one that drives your main display (even if you use SLI/Crossfire). Yet we have multiple apps that try to access it (and pretend they&#8217;re the only ones doing it). This doesn&#8217;t just work automatically; back in The Olden Days, the solution was to only give 3D to one app at a time, and while that app was active, all others wouldn&#8217;t have access. But that doesn&#8217;t really cut it if you&#8217;re trying to have your windowing system use the GPU for rendering. Which is why you need some component that arbitrates access to the GPU and allocates time-slices and such.</SPAN>