<H3 style="MARGIN: 12pt 0cm 6pt"><SPAN lang=EN-US style="FONT-SIZE: 19pt; mso-bidi-font-size: 14.0pt">Copying</SPAN></H3>
<P class=MsoBodyText style="MARGIN: 0cm 0cm 6pt"><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt">Normally, the GNU version of <A href="http://en.wikipedia.org/wiki/Cp_(Unix)"><FONT color=#000080>cp</FONT></A> is good at detecting whether a file is sparse, so</SPAN></P>
<P class=PreformattedText style="MARGIN: 0cm 0cm 14.15pt"><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt"><FONT face=&#23435;&#20307;>cp sparse-file new-file</FONT></SPAN></P>
<P class=MsoBodyText style="MARGIN: 0cm 0cm 6pt"><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt">creates new-file, which will be sparse. However, GNU cp does have a </SPAN><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 22pt; mso-bidi-font-size: 12.0pt">--sparse=WHEN</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt"> option.<A name=cite_ref-2></A><A href="http://en.wikipedia.org/wiki/Sparse_file#cite_note-2"><FONT color=#000080>[2]</FONT></A> This is especially useful if a file containing long zero blocks is saved in a non-sparse way (i.e. the zero blocks have been written out to disk in full). Disk space can be saved by doing:</SPAN></P>
<P class=PreformattedText style="MARGIN: 0cm 0cm 14.15pt"><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt"><FONT face=&#23435;&#20307;>cp --sparse=always file1 file1_sparsed</FONT></SPAN></P>
<P class=MsoBodyText style="MARGIN: 0cm 0cm 6pt"><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt">Some cp implementations, like <A href="http://en.wikipedia.org/wiki/FreeBSD"><FONT color=#000080>FreeBSD</FONT></A>'s cp, do not support the </SPAN><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 22pt; mso-bidi-font-size: 12.0pt">--sparse</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt"> option and will always expand sparse files. A partially viable alternative on those systems is to use <A href="http://en.wikipedia.org/wiki/Rsync"><FONT color=#000080>rsync</FONT></A> with its own </SPAN><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 22pt; mso-bidi-font-size: 12.0pt">--sparse</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt"> option<A name=cite_ref-3></A><A href="http://en.wikipedia.org/wiki/Sparse_file#cite_note-3"><FONT color=#000080>[3]</FONT></A> instead of cp. Unfortunately </SPAN><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 22pt; mso-bidi-font-size: 12.0pt">--sparse</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt"> cannot be combined with </SPAN><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 22pt; mso-bidi-font-size: 12.0pt">--inplace</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 17pt; mso-bidi-font-size: 12.0pt">, so rsyncing huge files across the network will always be wasteful of either network bandwidth or disk bandwidth.[<A href="http://en.wikipedia.org/wiki/Wikipedia:Citation_needed"><FONT color=#000080>citation needed</FONT></A>]</SPAN>