<H1 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC51">Cygnus Configure</A></H1>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=IDX67></A></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The Cygnus configure script predates autoconf. All of its interesting features have been incorporated into autoconf. No new programs should be written to use the Cygnus configure script.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">However, the Cygnus configure script is still used in a few places: at the top of the Cygnus tree and in a few target libraries in the Cygnus tree. Until those uses have been replaced with autoconf, some brief notes are appropriate here. This is not complete documentation, but it should be possible to use this as a guide while examining the scripts themselves.</P>
<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC52" name=SEC52>Cygnus Configure Basics</A></H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Cygnus configure does not use any generated files; there is no program corresponding to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`autoconf'</SAMP>. Instead, there is a single shell script named<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`configure'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>which may be found at the top of the Cygnus tree. This shell script was written by hand; it was not generated by autoconf, and it is incorrect, and indeed harmful, to run<SAMP>`autoconf'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the top level of a Cygnus tree.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Cygnus configure works in a particular directory by examining the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>in that directory. That file is broken into four separate shell scripts.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The first is the contents of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>up to a line that starts with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`# per-host:'</SAMP>. This is the common part.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The second is the rest of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>up to a line that starts with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`# per-target:'</SAMP>. This is the per host part.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The third is the rest of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>up to a line that starts with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`# post-target:'</SAMP>. This is the per target part.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The fourth is the remainder of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT>. This is the post target part.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If any of these comment lines are missing, the corresponding shell script is empty.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Cygnus configure will first execute the common part. This must set the shell variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`srctrigger'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the name of a source file, to confirm that Cygnus configure is looking at the right directory. This may set the shell variables<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`package_makefile_frag'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`package_makefile_rules_frag'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Cygnus configure will next set the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`build'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`host'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>shell variables, and execute the per host part. This may set the shell variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`host_makefile_frag'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Cygnus configure will next set the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`target'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable, and execute the per target part. This may set the shell variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`target_makefile_frag'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Any of these scripts may set the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`subdirs'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>shell variable. This variable is a list of subdirectories where a<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file may be found. Cygnus configure will automatically look for a<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file in the current directory. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`subdirs'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>shell variable is not normally used, and I believe that the only directory which uses it at present is<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`newlib'</TT>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">For each<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile.in'</TT>, Cygnus configure will automatically create a<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>by adding definitions for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`make'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>variables such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`host'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`target'</SAMP>, and automatically editing the values of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`make'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>variables such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`prefix'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>if they are present.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Also, if any of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`makefile_frag'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>shell variables are set, Cygnus configure will interpret them as file names relative to either the working directory or the source directory, and will read the contents of the file into the generated<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT>. The file contents will be read in after the first line in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>which starts with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`####'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">These<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>fragments are used to customize behaviour for a particular host or target. They serve to select particular files to compile, and to define particular preprocessor macros by providing values for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`make'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>variables which are then used during compilation. Cygnus configure, unlike autoconf, normally does not do feature tests, and normally requires support to be added manually for each new host.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>fragment support is similar to the autoconf<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`AC_SUBST_FILE'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">After creating each<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT>, the post target script will be run (i.e., it may be run several times). This script may further customize the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT>. When it is run, the shell variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`Makefile'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>will hold the name of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT>, including the appropriate directory component.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Like an autoconf generated<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>script, Cygnus configure will create a file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.status'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>which, when run, will automatically recreate the configuration. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.status'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file will simply execute the Cygnus configure script again with the appropriate arguments.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Any of the parts of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>may set the shell variables<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`files'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`links'</SAMP>. Cygnus configure will set up symlinks from the names in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`links'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the files named in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`files'</SAMP>. This is similar to the autoconf<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`AC_LINK_FILES'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Finally, any of the parts of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>may set the shell variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`configdirs'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to a set of subdirectories. If it is set, Cygnus configure will recursively run the configure process in each subdirectory. If the subdirectory uses Cygnus configure, it will contain a<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file but no<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file, in which case Cygnus configure will invoke itself recursively. If the subdirectory has a<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file, Cygnus configure assumes that it is an autoconf generated<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>script, and simply invokes it directly.</P>
<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC53" name=SEC53>Cygnus Configure in C++ Libraries</A></H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=IDX68></A><A name=IDX69></A><A name=IDX70></A></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The C++ library configure system, written by Per Bothner, deserves special mention. It uses Cygnus configure, but it does feature testing like that done by autoconf generated<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>scripts. This approach is used in the libraries<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`libio'</TT>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`libstdc++'</TT>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`libg++'</TT>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Most of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>information is written out by the shell script<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`libio/config.shared'</TT>. Each<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file sets certain shell variables, and then invokes<TT>`config.shared'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to create two package<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>fragments. These fragments are then incorporated into the resulting<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>by the Cygnus configure script.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The file<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`_G_config.h'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is created in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`libio'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>object directory by running the shell script<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`libio/gen-params'</TT>. This shell script uses feature tests to define macros and typedefs in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`_G_config.h'</TT>.