<H1 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC54">Multilibs</A></H1>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=IDX71></A></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">For some targets gcc may have different processor requirements depending upon command line options. An obvious example is the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`-msoft-float'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option supported on several processors. This option means that the floating point registers are not available, which means that floating point operations must be done by calling an emulation subroutine rather than by using machine instructions.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">For such options, gcc is often configured to compile target libraries twice: once with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`-msoft-float'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and once without. When gcc compiles target libraries more than once, the resulting libraries are called<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>multilibs</EM>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Multilibs are not really part of the GNU configure and build system, but we discuss them here since they require support in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>scripts and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT>s used for target libraries.</P>
<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC55" name=SEC55>Multilibs in gcc</A></H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">In gcc, multilibs are defined by setting the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTILIB_OPTIONS'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the target<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>fragment. Several other<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTILIB'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>variables may also be defined there. See section `The Target Makefile Fragment' in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CITE>Using and Porting GNU CC</CITE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If you have built gcc, you can see what multilibs it uses by running it with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`-print-multi-lib'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option. The output<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`.;'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>means that no multilibs are used. In general, the output is a sequence of lines, one per multilib. The first part of each line, up to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`;'</SAMP>, is the name of the multilib directory. The second part is a list of compiler options separated by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`@'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>characters.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Multilibs are built in a tree of directories. The top of the tree, represented by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`.'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the list of multilib directories, is the default library to use when no special compiler options are used. The subdirectories of the tree hold versions of the library to use when particular compiler options are used.</P>
<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC56" name=SEC56>Multilibs in Target Libraries</A></H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The target libraries in the Cygnus tree are automatically built with multilibs. That means that each library is built multiple times.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">This default is set in the top level<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>file, by adding<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`--enable-multilib'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the list of arguments passed to configure when it is run for the target libraries (see section<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.airs.com/ian/configure/configure_5.html#SEC35">Host and Target Libraries</A>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Each target library uses the shell script<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT>, written by Doug Evans, to prepare to build target libraries. This shell script is invoked after the<TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>has been created by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>script. If multilibs are not enabled, it does nothing, otherwise it modifies the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to support multilibs.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>script makes one copy of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>for each multilib in the appropriate subdirectory. When configuring in the source directory (which is not recommended), it will build a symlink tree of the sources in each subdirectory.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>script sets several variables in the various<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT>s. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>must have definitions for these variables already;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>simply changes the existing values. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>should use default values for these variables which will do the right thing in the subdirectories.</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px" compact>
<DT><SAMP>`MULTISRCTOP'</SAMP></DT>
<DD><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will set this to a sequence of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`../'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>strings, where the number of strings is the number of multilib levels in the source tree. The default value should be the empty string.</DD>
<DT><SAMP>`MULTIBUILDTOP'</SAMP></DT>
<DD><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will set this to a sequence of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`../'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>strings, where the number of strings is number of multilib levels in the object directory. The default value should be the empty string. This will differ from<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTISRCTOP'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>when configuring in the source tree (which is not recommended).</DD>
<DT><SAMP>`MULTIDIRS'</SAMP></DT>
<DD>In the top level<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>only,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will set this to the list of multilib subdirectories. The default value should be the empty string.</DD>
<DT><SAMP>`MULTISUBDIR'</SAMP></DT>
<DD><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will set this to the installed subdirectory name to use for this subdirectory, with a leading<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`/'</SAMP>. The default value shold be the empty string.</DD>
<DT><SAMP>`MULTIDO'</SAMP></DT>
<DD></DD>
<DT><SAMP>`MULTICLEAN'</SAMP></DT>
<DD>In the top level<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>only,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will set these variables to commands to use when doing a recursive make. These variables should both default to the string<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`true'</SAMP>, so that by default nothing happens.</DD></DL>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">All references to the parent of the source directory should use the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTISRCTOP'</SAMP>. Instead of writing<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`$(srcdir)/..'</SAMP>, you must write<SAMP>`$(srcdir)/$(MULTISRCTOP)..'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Similarly, references to the parent of the object directory should use the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTIBUILDTOP'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">In the installation target, the libraries should be installed in the subdirectory<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTISUBDIR'</SAMP>. Instead of installing<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`$(libdir)/libfoo.a'</SAMP>, install<SAMP>`$(libdir)$(MULTISUBDIR)/libfoo.a'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config-ml.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>script also modifies the top level<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to add<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`multi-do'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`multi-clean'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>targets which are used when building multilibs.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The default target of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>should include the following command:</P><PRE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">@$(MULTIDO) $(FLAGS_TO_PASS) DO=all multi-do
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">This assumes that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`$(FLAGS_TO_PASS)'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is defined as a set of variables to pass to a recursive invocation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`make'</SAMP>. This will build all the multilibs. Note that the default value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`MULTIDO'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`true'</SAMP>, so by default this command will do nothing. It will only do something in the top level<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>if multilibs were enabled.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`install'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>target of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`Makefile'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>should include the following command:</P><PRE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">@$(MULTIDO) $(FLAGS_TO_PASS) DO=install multi-do
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">In general, any operation, other than clean, which should be performed on all the multilibs should use a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`$(MULTIDO)'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>line, setting the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`DO'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the target of each recursive call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`make'</SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`clean'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>targets (<SAMP>`clean'</SAMP>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`mostlyclean'</SAMP>, etc.) should use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`$(MULTICLEAN)'</SAMP>. For example, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`clean'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>target should do this:</P><PRE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">@$(MULTICLEAN) DO=clean multi-clean</PRE>