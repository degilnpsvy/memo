<H1 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC25">Configuration Names</A></H1>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=IDX35></A><A name=IDX36></A><A name=IDX37></A><A name=IDX38></A><A name=IDX39></A><A name=IDX40></A><A name=IDX41></A><A name=IDX42></A></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The GNU configure system names all systems using a<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>configuration name</EM>. All such names used to be triplets (they may now contain four parts in certain cases), and the term<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>configuration triplet</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>is still seen.</P>
<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC26" name=SEC26>Configuration Name Definition</A></H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">This is a string of the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>cpu</VAR>-<VAR>manufacturer</VAR>-<VAR>operating_system</VAR>. In some cases, this is extended to a four part form:<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>cpu</VAR>-<VAR>manufacturer</VAR>-<VAR>kernel</VAR>-<VAR>operating_system</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">When using a configuration name in a configure option, it is normally not necessary to specify an entire name. In particular, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>manufacturer</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>field is often omitted, leading to strings such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`i386-linux'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`sparc-sunos'</SAMP>. The shell script<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.sub'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will translate these shortened strings into the canonical form. autoconf will arrange for<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.sub'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to be run automatically when it is needed.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The fields of a configuration name are as follows:</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px" compact>
<DT><VAR>cpu</VAR></DT>
<DD>The type of processor. This is typically something like<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`i386'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`sparc'</SAMP>. More specific variants are used as well, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`mipsel'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to indicate a little endian MIPS processor.</DD>
<DT><VAR>manufacturer</VAR></DT>
<DD>A somewhat freeform field which indicates the manufacturer of the system. This is often simply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`unknown'</SAMP>. Other common strings are<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`pc'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>for an IBM PC compatible system, or the name of a workstation vendor, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`sun'</SAMP>.</DD>
<DT><VAR>operating_system</VAR></DT>
<DD>The name of the operating system which is run on the system. This will be something like<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`solaris2.5'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`irix6.3'</SAMP>. There is no particular restriction on the version number, and strings like<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`aix4.1.4.0'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>are seen. For an embedded system, which has no operating system, this field normally indicates the type of object file format, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`elf'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`coff'</SAMP>.</DD>
<DT><VAR>kernel</VAR></DT>
<DD>This is used mainly for GNU/Linux. A typical GNU/Linux configuration name is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`i586-pc-linux-gnulibc1'</SAMP>. In this case the kernel,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`linux'</SAMP>, is separated from the operating system,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`gnulibc1'</SAMP>.</DD></DL>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The shell script<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.guess'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will normally print the correct configuration name for the system on which it is run. It does by running<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`uname'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and by examining other characteristics of the system.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Because<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.guess'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>can normally determine the configuration name for a machine, it is normally only necessary to specify a configuration name when building a cross-compiler or when building using a cross-compiler.</P>
<H2 style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A href="http://www.airs.com/ian/configure/configure_toc.html#TOC27" name=SEC27>Using Configuration Names</A></H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">A configure script will sometimes have to make a decision based on a configuration name. You will need to do this if you have to compile code differently based on something which can not be tested using a standard autoconf feature test.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">It is normally better to test for particular features, rather than to test for a particular system. This is because as Unix evolves, different systems copy features from one another. Even if you need to determine whether the feature is supported based on a configuration name, you should define a macro which describes the feature, rather than defining a macro which describes the particular system you are on.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Testing for a particular system is normally done using a case statement in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT>. The case statement might look something like the following, assuming that<SAMP>`host'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a shell variable holding a canonical configuration name (which will be the case if<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`configure.in'</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>uses the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`AC_CANONICAL_HOST'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`AC_CANONICAL_SYSTEM'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro).</P><PRE style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">case "${host}" in
i[3456]86-*-linux-gnu*) do something ;;
sparc*-sun-solaris2.[56789]*) do something ;;
sparc*-sun-solaris*) do something ;;
mips*-*-elf*) do something ;;
esac
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">It is particularly important to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`*'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>after the operating system field, in order to match the version number which will be generated by<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT>`config.guess'</TT>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">In most cases you must be careful to match a range of processor types. For most processor families, a trailing<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`*'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>suffices, as in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`mips*'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>above. For the i386 family, something along the lines of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`i[3456]86'</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>suffices at present. For the m68k family, you will need something like<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`m68*'</SAMP>. Of course, if you do not need to match on the processor, it is simpler to just replace the entire field by a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`*'</SAMP>, as in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>`*-*-irix*'</SAMP>.</P><BR class=Apple-interchange-newline>