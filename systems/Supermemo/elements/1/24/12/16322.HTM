<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>7.20 Implementation notes</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The profiler works by setting the unix profiling signal<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ITIMER_PROF</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to go off after the interval you define in the call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>statprof-reset</CODE>. When the signal fires, a sampling routine is run which looks at the current procedure that&#8217;s executing, and then crawls up the stack, and for each procedure encountered, increments that procedure&#8217;s sample count. Note that if a procedure is encountered multiple times on a given stack, it is only counted once. After the sampling is complete, the profiler resets profiling timer to fire again after the appropriate interval.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Meanwhile, the profiler keeps track, via<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>get-internal-run-time</CODE>, how much CPU time (system and user &#8211; which is also what<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ITIMER_PROF</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>tracks), has elapsed while code has been executing within a statprof-start/stop block.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The profiler also tries to avoid counting or timing its own code as much as possible.