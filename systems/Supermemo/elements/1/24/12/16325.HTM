<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>7.23 Texinfo Processing</H3>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=1 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo">texinfo</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Parse texinfo files or fragments into<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE>, a scheme representation</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=2 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-docbook">texinfo docbook</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Transform a subset of docbook into<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE></TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=3 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-html">texinfo html</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Transform<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>into HTML</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=4 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-indexing">texinfo indexing</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Extract an index from a piece of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE></TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=5 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-string_002dutils">texinfo string-utils</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>String utility functions used by the texinfo processor</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=6 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-plain_002dtext">texinfo plain-text</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Render<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as plain text</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=7 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-serialize">texinfo serialize</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Render<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as texinfo</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=8 href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection">texinfo reflection</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Enable texinfo across Guile&#8217;s help system</TD></TR></TBODY></TABLE>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-docbook" rel=next>texinfo docbook</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.1 (texinfo)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-5></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.1.1 Overview</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Texinfo-processing-in-scheme></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subheading>Texinfo processing in scheme</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This module parses texinfo into SXML. TeX will always be the processor of choice for print output, of course. However, although<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>makeinfo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>works well for info, its output in other formats is not very customizable, and the program is not extensible as a whole. This module aims to provide an extensible framework for texinfo processing that integrates texinfo into the constellation of SXML processing tools.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Notes-on-the-SXML-vocabulary></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subheading>Notes on the SXML vocabulary</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Consider the following texinfo fragment:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example> @deffn Primitive set-car! pair value
 This function...
 @end deffn
</PRE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Logically, the category (Primitive), name (set-car!), and arguments (pair value) are &#8220;attributes&#8221; of the deffn, with the description as the content. However, texinfo allows for @-commands within the arguments to an environment, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@deffn</CODE>, which means that texinfo &#8220;attributes&#8221; are PCDATA. XML attributes, on the other hand, are CDATA. For this reason, &#8220;attributes&#8221; of texinfo @-commands are called &#8220;arguments&#8221;, and are grouped under the special element, &#8216;%&#8217;.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Because &#8216;%&#8217; is not a valid NCName, stexinfo is a superset of SXML. In the interests of interoperability, this module provides a conversion function to replace the &#8216;%&#8217; with &#8216;texinfo-arguments&#8217;.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-7></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.1.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-call_002dwith_002dfile_002dand_002ddir></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-call_002dwith_002dfile_002dand_002ddir></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>call-with-file-and-dir</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>filename proc</EM></DT>
<DD>
<P>Call the one-argument procedure<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>with an input port that reads from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>. During the dynamic extent of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR>&#8217;s execution, the current directory will be<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(dirname<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>)</CODE>. This is useful for parsing documents that can include files by relative path name.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-texi_002dcommand_002dspecs></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-texi_002dcommand_002dspecs></A>Variable:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>texi-command-specs</STRONG></DT></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-texi_002dcommand_002ddepth></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-texi_002dcommand_002ddepth></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>texi-command-depth</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>command max-depth</EM></DT>
<DD>
<P>Given the texinfo command<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>command</VAR>, return its nesting level, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if it nests too deep for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>max-depth</VAR>.</P>
<P>Examples:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example> (texi-command-depth 'chapter 4)        &#8658; 1
 (texi-command-depth 'top 4)            &#8658; 0
 (texi-command-depth 'subsection 4)     &#8658; 3
 (texi-command-depth 'appendixsubsec 4) &#8658; 3
 (texi-command-depth 'subsection 2)     &#8658; #f
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-texi_002dfragment_002d_003estexi></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-texi_002dfragment_002d_003estexi></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>texi-fragment-&gt;stexi</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>string-or-port</EM></DT>
<DD>
<P>Parse the texinfo commands in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>string-or-port</VAR>, and return the resultant stexi tree. The head of the tree will be the special command,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*fragment*</CODE>.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-texi_002d_003estexi></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-texi_002d_003estexi></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>texi-&gt;stexi</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>port</EM></DT>
<DD>
<P>Read a full texinfo document from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>port</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and return the parsed stexi tree. The parsing will start at the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@settitle</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and end at<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@bye</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or EOF.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-stexi_002d_003esxml></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-stexi_002d_003esxml></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>stexi-&gt;sxml</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>tree</EM></DT>
<DD>
<P>Transform the stexi tree<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>tree</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>into sxml. This involves replacing the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>%</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>element that keeps the texinfo arguments with an element for each argument.</P>
<P>FIXME: right now it just changes % to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>texinfo-arguments</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8211; that doesn&#8217;t hang with the idea of making a dtd at some point</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-docbook></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-html" rel=next>texinfo html</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo" rel=prev>texinfo</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-docbook_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.2 (texinfo docbook)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-6></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.2.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This module exports procedures for transforming a limited subset of the SXML representation of docbook into stexi. It is not complete by any means. The intention is to gather a number of routines and stylesheets so that external modules can parse specific subsets of docbook, for example that set generated by certain tools.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-8></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.2.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-docbook-_002asdocbook_002d_003estexi_002drules_002a></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_002asdocbook_002d_003estexi_002drules_002a></A>Variable:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>*sdocbook-&gt;stexi-rules*</STRONG></DT></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-docbook-_002asdocbook_002dblock_002dcommands_002a></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_002asdocbook_002dblock_002dcommands_002a></A>Variable:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>*sdocbook-block-commands*</STRONG></DT></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-docbook-sdocbook_002dflatten></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-sdocbook_002dflatten></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>sdocbook-flatten</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>sdocbook</EM></DT>
<DD>
<P>"Flatten" a fragment of sdocbook so that block elements do not nest inside each other.</P>
<P>Docbook is a nested format, where e.g. a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>refsect2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>normally appears inside a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>refsect1</CODE>. Logical divisions in the document are represented via the tree topology; a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>refsect2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>element<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>contains</EM>all of the elements in its section.</P>
<P>On the contrary, texinfo is a flat format, in which sections are marked off by standalone section headers like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@subsection</CODE>, and block elements do not nest inside each other.</P>
<P>This function takes a nested sdocbook fragment<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sdocbook</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and flattens all of the sections, such that e.g.</P>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example> (refsect1 (refsect2 (para "Hello")))
</PRE></DIV>
<P>becomes</P>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example> ((refsect1) (refsect2) (para "Hello"))
</PRE></DIV>
<P>Oftentimes (always?) sectioning elements have<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;title&gt;</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as their first element child; users interested in processing the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>refsect*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>elements into proper sectioning elements like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>chapter</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>might be interested in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>replace-titles</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>filter-empty-elements</CODE>. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-docbook-replace_002dtitles">replace-titles</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-docbook-filter_002dempty_002delements">filter-empty-elements</A>.</P>
<P>Returns a nodeset; that is to say, an untagged list of stexi elements. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#SXPath">SXPath</A>, for the definition of a nodeset.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-docbook-filter_002dempty_002delements></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-filter_002dempty_002delements></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>filter-empty-elements</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>sdocbook</EM></DT>
<DD>
<P>Filters out empty elements in an sdocbook nodeset. Mostly useful after running<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sdocbook-flatten</CODE>.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-docbook-replace_002dtitles></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-replace_002dtitles></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>replace-titles</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>sdocbook-fragment</EM></DT>
<DD>
<P>Iterate over the sdocbook nodeset<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sdocbook-fragment</VAR>, transforming contiguous<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>refsect</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>title</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>elements into the appropriate texinfo sectioning command. Most useful after having run<CODE>sdocbook-flatten</CODE>.</P>
<P>For example:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example> (replace-titles '((refsect1) (title "Foo") (para "Bar.")))
    &#8658; '((chapter "Foo") (para "Bar."))
</PRE></DIV></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-html></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-indexing" rel=next>texinfo indexing</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-docbook" rel=prev>texinfo docbook</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-html_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.3 (texinfo html)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-7></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.3.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This module implements transformation from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to HTML. Note that the output of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi-&gt;shtml</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is actually SXML with the HTML vocabulary. This means that the output can be further processed, and that it must eventually be serialized by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sxml-&gt;xml</CODE>. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Reading-and-Writing-XML">Reading and Writing XML</A>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">References (i.e., the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@ref</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>family of commands) are resolved by a<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>ref-resolver</EM>. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-html-add_002dref_002dresolver_0021">add-ref-resolver!</A>.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-9></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.3.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-html-add_002dref_002dresolver_0021></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-add_002dref_002dresolver_0021></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>add-ref-resolver!</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>proc</EM></DT>
<DD>
<P>Add<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the head of the list of ref-resolvers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be expected to take the name of a node and the name of a manual and return the URL of the referent, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to pass control to the next ref-resolver in the list.</P>
<P>The default ref-resolver will return the concatenation of the manual name,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#</CODE>, and the node name.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-html-stexi_002d_003eshtml></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-stexi_002d_003eshtml></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>stexi-&gt;shtml</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>tree</EM></DT>
<DD>
<P>Transform the stexi<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>tree</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>into shtml, resolving references via ref-resolvers. See the module commentary for more details.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-html-urlify></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-urlify></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>urlify</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str</EM></DT></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-indexing></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-string_002dutils" rel=next>texinfo string-utils</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-html" rel=prev>texinfo html</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-indexing_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.4 (texinfo indexing)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-8></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.4.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Given a piece of stexi, return an index of a specified variety.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Note that currently,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi-extract-index</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>doesn&#8217;t differentiate between different kinds of index entries. That&#8217;s a bug ;)</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-10></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.4.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-indexing-stexi_002dextract_002dindex></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-stexi_002dextract_002dindex></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>stexi-extract-index</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>tree manual-name kind</EM></DT>
<DD>
<P>Given an stexi tree<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>tree</VAR>, index all of the entries of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>kind</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>kind</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be one of the predefined texinfo indices (<CODE>concept</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>variable</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>function</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>key</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>program</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>type</CODE>) or one of the special symbols<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>auto</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>all</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>auto</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will scan the stext for a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(printindex)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>statement, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>all</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will generate an index from all entries, regardless of type.</P>
<P>The returned index is a list of pairs, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL>CAR</SMALL><SPAN class=Apple-converted-space>&nbsp;</SPAN>of which is the entry (a string) and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL>CDR</SMALL><SPAN class=Apple-converted-space>&nbsp;</SPAN>of which is a node name (a string).</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-plain_002dtext" rel=next>texinfo plain-text</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-indexing" rel=prev>texinfo indexing</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-string_002dutils_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.5 (texinfo string-utils)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-9></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.5.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Module &#8216;<SAMP>(texinfo string-utils)</SAMP>&#8217; provides various string-related functions useful to Guile&#8217;s texinfo support.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-11></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.5.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-escape_002dspecial_002dchars></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-escape_002dspecial_002dchars></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>escape-special-chars</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str special-chars escape-char</EM></DT>
<DD>
<P>Returns a copy of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>with all given special characters preceded by the given<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>escape-char</VAR>.</P>
<P><VAR>special-chars</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can either be a single character, or a string consisting of all the special characters.</P>
<DIV style="MARGIN-LEFT: 3.2em" class=lisp><PRE class=lisp>;; make a string regexp-safe...
 (escape-special-chars "***(Example String)***"  
                      "[]()/*." 
                      #\\)
=&gt; "\\*\\*\\*\\(Example String\\)\\*\\*\\*"

;; also can escape a singe char...
 (escape-special-chars "richardt@vzavenue.net"
                      #\@
                      #\@)
=&gt; "richardt@@vzavenue.net"
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-transform_002dstring></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-transform_002dstring></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>transform-string</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str match? replace [start] [end]</EM></DT>
<DD>
<P>Uses<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>match?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>against each character in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR>, and performs a replacement on each character for which matches are found.</P>
<P><VAR>match?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>may either be a function, a character, a string, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE>. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>match?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a function, then it takes a single character as input, and should return &#8216;<SAMP>#t</SAMP>&#8217; for matches.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>match?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a character, it is compared to each string character using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>char=?</CODE>. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>match?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a string, then any character in that string will be considered a match.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will cause every character to be a match.</P>
<P>If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>replace</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a function, it is called with the matched character as an argument, and the returned value is sent to the output string via &#8216;<SAMP>display</SAMP>&#8217;. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>replace</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is anything else, it is sent through the output string via &#8216;<SAMP>display</SAMP>&#8217;.</P>
<P>Note that te replacement for the matched characters does not need to be a single character. That is what differentiates this function from &#8216;<SAMP>string-map</SAMP>&#8217;, and what makes it useful for applications such as converting &#8216;<SAMP>#\&amp;</SAMP>&#8217; to &#8216;<SAMP>"&amp;amp;"</SAMP>&#8217; in web page text. Some other functions in this module are just wrappers around common uses of &#8216;<SAMP>transform-string</SAMP>&#8217;. Transformations not possible with this function should probably be done with regular expressions.</P>
<P>If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>start</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>end</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are given, they control which portion of the string undergoes transformation. The entire input string is still output, though. So, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>start</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is &#8216;<SAMP>5</SAMP>&#8217;, then the first five characters of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will still appear in the returned string.</P>
<DIV style="MARGIN-LEFT: 3.2em" class=lisp><PRE class=lisp>; these two are equivalent...
 (transform-string str #\space #\-) ; change all spaces to -'s
 (transform-string str (lambda (c) (char=? #\space c)) #\-)
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-expand_002dtabs></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-expand_002dtabs></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>expand-tabs</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str [tab-size]</EM></DT>
<DD>
<P>Returns a copy of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>with all tabs expanded to spaces.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>tab-size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>defaults to 8.</P>
<P>Assuming tab size of 8, this is equivalent to:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=lisp><PRE class=lisp> (transform-string str #\tab "        ")
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-center_002dstring></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-center_002dstring></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>center-string</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str [width] [chr] [rchr]</EM></DT>
<DD>
<P>Returns a copy of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>centered in a field of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>characters. Any needed padding is done by character<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR>, which defaults to &#8216;<SAMP>#\space</SAMP>&#8217;. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>rchr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is provided, then the padding to the right will use it instead. See the examples below. left and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>rchr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>on the right. The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 80. The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>rchr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is &#8216;<SAMP>#\space</SAMP>&#8217;. The string is never truncated.</P>
<DIV style="MARGIN-LEFT: 3.2em" class=lisp><PRE class=lisp> (center-string "Richard Todd" 24)
=&gt; "      Richard Todd      "

 (center-string " Richard Todd " 24 #\=)
=&gt; "===== Richard Todd ====="

 (center-string " Richard Todd " 24 #\&lt; #\&gt;)
=&gt; "&lt;&lt;&lt;&lt;&lt; Richard Todd &gt;&gt;&gt;&gt;&gt;"
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-left_002djustify_002dstring></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-left_002djustify_002dstring></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>left-justify-string</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str [width] [chr]</EM></DT>
<DD>
<P><CODE>left-justify-string str [width chr]</CODE>. Returns a copy of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>padded with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>such that it is left justified in a field of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>characters. The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 80. Unlike &#8216;<SAMP>string-pad</SAMP>&#8217; from srfi-13, the string is never truncated.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-right_002djustify_002dstring></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-right_002djustify_002dstring></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>right-justify-string</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str [width] [chr]</EM></DT>
<DD>
<P>Returns a copy of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>padded with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>such that it is right justified in a field of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>characters. The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 80. The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is &#8216;<SAMP>#\space</SAMP>&#8217;. Unlike &#8216;<SAMP>string-pad</SAMP>&#8217; from srfi-13, the string is never truncated.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-collapse_002drepeated_002dchars></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-collapse_002drepeated_002dchars></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>collapse-repeated-chars</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str [chr] [num]</EM></DT>
<DD>
<P>Returns a copy of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>with all repeated instances of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>collapsed down to at most<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>num</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>instances. The default value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is &#8216;<SAMP>#\space</SAMP>&#8217;, and the default value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>num</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 1.</P>
<DIV style="MARGIN-LEFT: 3.2em" class=lisp><PRE class=lisp> (collapse-repeated-chars "H  e  l  l  o")
=&gt; "H e l l o"
 (collapse-repeated-chars "H--e--l--l--o" #\-)
=&gt; "H-e-l-l-o"
 (collapse-repeated-chars "H-e--l---l----o" #\- 2)
=&gt; "H-e--l--l--o"
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-make_002dtext_002dwrapper></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-make_002dtext_002dwrapper></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>make-text-wrapper</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>[#:line-width] [#:expand-tabs?] [#:tab-width] [#:collapse-whitespace?] [#:subsequent-indent] [#:initial-indent] [#:break-long-words?]</EM></DT>
<DD>
<P>Returns a procedure that will split a string into lines according to the given parameters.</P>
<DL compact>
<DT><CODE>#:line-width</CODE></DT>
<DD>
<P>This is the target length used when deciding where to wrap lines. Default is 80.</P></DD>
<DT><CODE>#:expand-tabs?</CODE></DT>
<DD>
<P>Boolean describing whether tabs in the input should be expanded. Default is #t.</P></DD>
<DT><CODE>#:tab-width</CODE></DT>
<DD>
<P>If tabs are expanded, this will be the number of spaces to which they expand. Default is 8.</P></DD>
<DT><CODE>#:collapse-whitespace?</CODE></DT>
<DD>
<P>Boolean describing whether the whitespace inside the existing text should be removed or not. Default is #t.</P>
<P>If text is already well-formatted, and is just being wrapped to fit in a different width, then set this to &#8216;<SAMP>#f</SAMP>&#8217;. This way, many common text conventions (such as two spaces between sentences) can be preserved if in the original text. If the input text spacing cannot be trusted, then leave this setting at the default, and all repeated whitespace will be collapsed down to a single space.</P></DD>
<DT><CODE>#:initial-indent</CODE></DT>
<DD>
<P>Defines a string that will be put in front of the first line of wrapped text. Default is the empty string, &#8220;&#8221;.</P></DD>
<DT><CODE>#:subsequent-indent</CODE></DT>
<DD>
<P>Defines a string that will be put in front of all lines of wrapped text, except the first one. Default is the empty string, &#8220;&#8221;.</P></DD>
<DT><CODE>#:break-long-words?</CODE></DT>
<DD>
<P>If a single word is too big to fit on a line, this setting tells the wrapper what to do. Defaults to #t, which will break up long words. When set to #f, the line will be allowed, even though it is longer than the defined<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#:line-width</CODE>.</P></DD></DL>
<P>The return value is a procedure of one argument, the input string, which returns a list of strings, where each element of the list is one line.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-fill_002dstring></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-fill_002dstring></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>fill-string</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str . kwargs</EM></DT>
<DD>
<P>Wraps the text given in string<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>according to the parameters provided in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>kwargs</VAR>, or the default setting if they are not given. Returns a single string with the wrapped text. Valid keyword arguments are discussed in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>make-text-wrapper</CODE>.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-string_002dutils-string_002d_003ewrapped_002dlines></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-string_002d_003ewrapped_002dlines></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>string-&gt;wrapped-lines</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>str . kwargs</EM></DT>
<DD>
<P><CODE>string-&gt;wrapped-lines str keywds ...</CODE>. Wraps the text given in string<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>according to the parameters provided in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>keywds</VAR>, or the default setting if they are not given. Returns a list of strings representing the formatted lines. Valid keyword arguments are discussed in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>make-text-wrapper</CODE>.</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-plain_002dtext></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-serialize" rel=next>texinfo serialize</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-string_002dutils" rel=prev>texinfo string-utils</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-plain_002dtext_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.6 (texinfo plain-text)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-10></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.6.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Transformation from stexi to plain-text. Strives to re-create the output from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>info</CODE>; comes pretty damn close.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-12></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.6.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-plain_002dtext-stexi_002d_003eplain_002dtext></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-stexi_002d_003eplain_002dtext></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>stexi-&gt;plain-text</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>tree</EM></DT>
<DD>
<P>Transform<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>tree</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>into plain text. Returns a string.</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-serialize></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection" rel=next>texinfo reflection</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-plain_002dtext" rel=prev>texinfo plain-text</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-serialize_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.7 (texinfo serialize)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-11></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.7.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Serialization of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to plain texinfo.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-13></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.7.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-serialize-stexi_002d_003etexi></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-stexi_002d_003etexi></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>stexi-&gt;texi</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>tree</EM></DT>
<DD>
<P>Serialize the stexi<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>tree</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>into plain texinfo.</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-serialize" rel=prev>texinfo serialize</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Texinfo-Processing" rel=up>Texinfo Processing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=g_t_0028texinfo-reflection_0029></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>7.23.8 (texinfo reflection)</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Overview-12></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.8.1 Overview</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Routines to generare<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>documentation for objects and modules.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Note that in this context, an<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>object</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>is just a value associated with a location. It has nothing to do with GOOPS.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Usage-14></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>7.23.8.2 Usage</H4><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-module_002dstexi_002ddocumentation></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-module_002dstexi_002ddocumentation></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>module-stexi-documentation</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>sym-name [%docs-resolver] [#:docs-resolver]</EM></DT>
<DD>
<P>Return documentation for the module named<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sym-name</VAR>. The documentation will be formatted as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo">texinfo</A>).</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-script_002dstexi_002ddocumentation></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-script_002dstexi_002ddocumentation></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>script-stexi-documentation</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>scriptpath</EM></DT>
<DD>
<P>Return documentation for given script. The documentation will be taken from the script&#8217;s commentary, and will be returned in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stexi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo">texinfo</A>).</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-object_002dstexi_002ddocumentation></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-object_002dstexi_002ddocumentation></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>object-stexi-documentation</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>_ [_] [#:force]</EM></DT></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002dstandard_002dcopying></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002dstandard_002dcopying></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-standard-copying</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name version updated years copyright-holder permissions</EM></DT>
<DD>
<P>Create a standard texinfo<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>copying</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section.</P>
<P><VAR>years</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a list of years (as integers) in which the modules being documented were released. All other arguments are strings.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002dstandard_002dtitlepage></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002dstandard_002dtitlepage></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-standard-titlepage</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name version updated authors</EM></DT>
<DD>
<P>Create a standard GNU title page.</P>
<P><VAR>authors</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a list of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>email</VAR>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pairs. All other arguments are strings.</P>
<P>Here is an example of the usage of this procedure:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=smallexample><PRE style="FONT-SIZE: smaller" class=smallexample> (package-stexi-standard-titlepage
  "Foolib"
  "3.2"
  "26 September 2006"
  '(("Alyssa P Hacker" . "alyssa@example.com"))
  '(2004 2005 2006)
  "Free Software Foundation, Inc."
  "Standard GPL permissions blurb goes here")
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002dgeneric_002dmenu></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002dgeneric_002dmenu></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-generic-menu</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name entries</EM></DT>
<DD>
<P>Create a menu from a generic alist of entries, the car of which should be the node name, and the cdr the description. As an exception, an entry of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will produce a separator.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002dstandard_002dmenu></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002dstandard_002dmenu></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-standard-menu</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name modules module-descriptions extra-entries</EM></DT>
<DD>
<P>Create a standard top node and menu, suitable for processing by makeinfo.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002dextended_002dmenu></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002dextended_002dmenu></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-extended-menu</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name module-pairs script-pairs extra-entries</EM></DT>
<DD>
<P>Create an "extended" menu, like the standard menu but with a section for scripts.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002dstandard_002dprologue></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002dstandard_002dprologue></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-standard-prologue</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name filename category description copying titlepage menu</EM></DT>
<DD>
<P>Create a standard prologue, suitable for later serialization to texinfo and .info creation with makeinfo.</P>
<P>Returns a list of stexinfo forms suitable for passing to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>package-stexi-documentation</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as the prologue. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection-package_002dstexi_002ddocumentation">texinfo reflection package-stexi-documentation</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection-package_002dstexi_002dstandard_002dtitlepage">package-stexi-standard-titlepage</A>,<A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection-package_002dstexi_002dstandard_002dcopying">package-stexi-standard-copying</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection-package_002dstexi_002dstandard_002dmenu">package-stexi-standard-menu</A>.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002ddocumentation></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002ddocumentation></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-documentation</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>modules name filename prologue epilogue [#:module-stexi-documentation-args] [#:scripts]</EM></DT>
<DD>
<P>Create stexi documentation for a<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>package</EM>, where a package is a set of modules that is released together.</P>
<P><VAR>modules</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is expected to be a list of module names, where a module name is a list of symbols. The stexi that is returned will be titled<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and a texinfo filename of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.</P>
<P><VAR>prologue</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>epilogue</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are lists of stexi forms that will be spliced into the output document before and after the generated modules documentation, respectively. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#texinfo-reflection-package_002dstexi_002dstandard_002dprologue">texinfo reflection package-stexi-standard-prologue</A>, to create a conventional GNU texinfo prologue.</P>
<P><VAR>module-stexi-documentation-args</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an optional argument that, if given, will be added to the argument list when<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>module-texi-documentation</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is called. For example, it might be useful to define a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#:docs-resolver</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=texinfo-reflection-package_002dstexi_002ddocumentation_002dfor_002dinclude></A>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-package_002dstexi_002ddocumentation_002dfor_002dinclude></A>Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>package-stexi-documentation-for-include</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>modules module-descriptions [#:module-stexi-documentation-args]</EM></DT>
<DD>
<P>Create stexi documentation for a<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>package</EM>, where a package is a set of modules that is released together.</P>
<P><VAR>modules</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is expected to be a list of module names, where a module name is a list of symbols. Returns an stexinfo fragment.</P>
<P>Unlike<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>package-stexi-documentation</CODE>, this function simply produces a menu and the module documentations instead of producing a full texinfo document. This can be useful if you write part of your manual by hand, and just use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@include</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to pull in the automatically generated parts.</P>
<P><VAR>module-stexi-documentation-args</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an optional argument that, if given, will be added to the argument list when<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>module-texi-documentation</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is called. For example, it might be useful to define a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#:docs-resolver</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument.</P></DD></DL>