<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>8.13 Changing the Class of an Instance</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">When a class is redefined, any existing instance of the redefined class will be modified for the new class definition before the next time that any of the instance&#8217;s slots is referenced or set. GOOPS modifies each instance by calling the generic function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>change-class</CODE>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">More generally, you can change the class of an existing instance at any time by invoking the generic function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>change-class</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>with two arguments: the instance and the new class.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The default method for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>change-class</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>decides how to implement the change of class by looking at the slot definitions for the instance&#8217;s existing class and for the new class. If the new class has slots with the same name as slots in the existing class, the values for those slots are preserved. Slots that are present only in the existing class are discarded. Slots that are present only in the new class are initialized using the corresponding slot definition&#8217;s init function (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Classes">slot-init-function</A>).</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-change_002dclass></A>generic:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>change-class</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>instance new-class</EM></DT></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-change_002dclass-1></A>method:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>change-class</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>(obj &lt;object&gt;) (new &lt;class&gt;)</EM></DT>
<DD>
<P>Modify instance<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>obj</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to make it an instance of class<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new</VAR>.</P>
<P>The value of each of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>obj</VAR>&#8217;s slots is preserved only if a similarly named slot exists in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new</VAR>; any other slot values are discarded.</P>
<P>The slots in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>that do not correspond to any of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>obj</VAR>&#8217;s pre-existing slots are initialized according to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new</VAR>&#8217;s slot definitions&#8217; init functions.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>change-class</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method also invokes another generic function,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>update-instance-for-different-class</CODE>, as the last thing that it does before returning. The applied<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>update-instance-for-different-class</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method can make any further adjustments to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new-instance</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>that are required to complete or modify the change of class. The return value from the applied method is ignored.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-update_002dinstance_002dfor_002ddifferent_002dclass></A>generic:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>update-instance-for-different-class</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>old-instance new-instance</EM></DT>
<DD>
<P>A generic function that can be customized to put finishing touches to an instance whose class has just been changed. The default<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>update-instance-for-different-class</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method does nothing.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Customized change of class behaviour can be implemented by defining<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>change-class</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>methods that are specialized either by the class of the instances to be modified or by the metaclass of the new class.