A static pattern rule has much in common with an implicit rule defined as a pattern rule (see <A href="https://www.gnu.org/software/make/manual/make.html#Pattern-Rules">Defining and Redefining Pattern Rules</A>). Both have a pattern for the target and patterns for constructing the names of prerequisites. The difference is in how <CODE>make</CODE> decides <EM>when</EM> the rule applies. 
<P><FONT class=extract>An implicit rule <EM>can</EM> apply to any target that matches its pattern, but it <EM>does</EM> apply only when the target has no recipe otherwise specified, and only when the prerequisites can be found. If more than one implicit rule appears applicable, only one applies; the choice depends on the order of rules.</FONT> 
<P>By contrast, a static pattern rule applies to the precise list of targets that you specify in the rule. It cannot apply to any other target and it invariably does apply to each of the targets specified. If two conflicting rules apply, and both have recipes, that's an error.