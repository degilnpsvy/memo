<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>7.11 File Tree Walk</H3><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-file-tree-walk></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-file-system-traversal></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-directory-traversal></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The functions in this section traverse a tree of files and directories. They come in two flavors: the first one is a high-level functional interface, and the second one is similar to the C<CODE>ftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>routines (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/libc/manual/html_mono/libc.html#Working-with-Directory-Trees">Working with Directory Trees</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CITE>GNU C Library Reference Manual</CITE>).</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>(use-modules (ice-9 ftw))
</PRE></DIV><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-file_002dsystem_002dtree></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>file-system-tree</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>file-name [enter? [stat]]</EM></DT>
<DD>
<P>Return a tree of the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>file-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>children</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>...)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>where<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the result of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file-name</VAR>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>children</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are similar structures for each file contained in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>when it designates a directory.</P>
<P>The optional<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>enter?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>predicate is invoked as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>enter?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and should return true to allow recursion into directory<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR>; the default value is a procedure that always returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE>. When a directory does not match<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>enter?</VAR>, it nonetheless appears in the resulting tree, only with zero children.</P>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument is optional and defaults to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lstat</CODE>, as for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>file-system-fold</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see below.)</P>
<P>The example below shows how to obtain a hierarchical listing of the files under the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>module/language</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>directory in the Guile source tree, discarding their<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>info:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example>(use-modules (ice-9 match))

(define remove-stat
  ;; Remove the `stat' object the `file-system-tree' provides
  ;; for each file in the tree.
  (match-lambda
    ((name stat)              ; flat file
     name)
    ((name stat children ...) ; directory
     (list name (map remove-stat children)))))

(let ((dir (string-append (assq-ref %guile-build-info 'top_srcdir)
                          "/module/language")))
  (remove-stat (file-system-tree dir)))

&#8658;
("language"
 (("value" ("spec.go" "spec.scm"))
  ("scheme"
   ("spec.go"
    "spec.scm"
    "compile-tree-il.scm"
    "decompile-tree-il.scm"
    "decompile-tree-il.go"
    "compile-tree-il.go"))
  ("tree-il"
   ("spec.go"
    "fix-letrec.go"
    "inline.go"
    "fix-letrec.scm"
    "compile-glil.go"
    "spec.scm"
    "optimize.scm"
    "primitives.scm"
    &#8230;))
  &#8230;))
</PRE></DIV></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-file-system-combinator></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">It is often desirable to process directories entries directly, rather than building up a tree of entries in memory, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>file-system-tree</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>does. The following procedure, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>combinator</EM>, is designed to allow directory entries to be processed directly as a directory tree is traversed; in fact,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>file-system-tree</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is implemented in terms of it.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-file_002dsystem_002dfold></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>file-system-fold</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>enter? leaf down up skip error init file-name [stat]</EM></DT>
<DD>
<P>Traverse the directory at<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file-name</VAR>, recursively, and return the result of the successive applications of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>leaf</VAR>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>down</VAR>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>up</VAR>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>skip</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>procedures as described below.</P>
<P>Enter sub-directories only when<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>enter?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>result</VAR>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns true. When a sub-directory is entered, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>down</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>result</VAR>)</CODE>, where<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the path of the sub-directory and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR>the result of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(false-if-exception (<VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR>))</CODE>; when it is left, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>up</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>result</VAR>)</CODE>.</P>
<P>For each file in a directory, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>leaf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>result</VAR>)</CODE>.</P>
<P>When<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>enter?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE>, or when an unreadable directory is encountered, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>skip</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>result</VAR>)</CODE>.</P>
<P>When<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>names a flat file,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>leaf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>init</VAR>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is returned.</P>
<P>When an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>opendir</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>call fails, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>error</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>errno</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>result</VAR>)</CODE>, with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>errno</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>being the operating system error number that was raised&#8212;e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>EACCES</CODE>&#8212;and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>either<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or the result of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>call for that entry, when available.</P>
<P>The special<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>.</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>..</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>entries are not passed to these procedures. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument to the procedures is a full file name&#8212;e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"../foo/bar/gnu"</CODE>; if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an absolute file name, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is also an absolute file name. Files and directories, as identified by their device/inode number pair, are traversed only once.</P>
<P>The optional<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>stat</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument defaults to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lstat</CODE>, which means that symbolic links are not followed; the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>procedure can be used instead when symbolic links are to be followed (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#File-System">stat</A>).</P>
<P>The example below illustrates the use of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>file-system-fold</CODE>:</P>
<DIV style="MARGIN-LEFT: 3.2em" class=example><PRE class=example>(define (total-file-size file-name)
  "Return the size in bytes of the files under FILE-NAME (similar
to `du --apparent-size' with GNU Coreutils.)"

  (define (enter? name stat result)
    ;; Skip version control directories.
    (not (member (basename name) '(".git" ".svn" "CVS"))))
  (define (leaf name stat result)
    ;; Return RESULT plus the size of the file at NAME.
    (+ result (stat:size stat)))

  ;; Count zero bytes for directories.
  (define (down name stat result) result)
  (define (up name stat result) result)

  ;; Likewise for skipped directories.
  (define (skip name stat result) result)

  ;; Ignore unreadable files/directories but warn the user.
  (define (error name stat errno result)
    (format (current-error-port) "warning: ~a: ~a~%"
            name (strerror errno))
    result)

  (file-system-fold enter? leaf down up skip error
                           0  ; initial counter is zero bytes
                           file-name))

(total-file-size ".")
&#8658; 8217554

(total-file-size "/dev/null")
&#8658; 0
</PRE></DIV></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The alternative C-like functions are described below.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-scandir></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scandir</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>name [select? [entry&lt;?]]</EM></DT>
<DD>
<P>Return the list of the names of files contained in directory<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>that match predicate<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>select?</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(by default, all files). The returned list of file names is sorted according to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>entry&lt;?</VAR>, which defaults to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>string-locale&lt;?</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>such that file names are sorted in the locale&#8217;s alphabetical order (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Text-Collation">Text Collation</A>). Return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>when<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is unreadable or is not a directory.</P>
<P>This procedure is modeled after the C library function of the same name (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/libc/manual/html_mono/libc.html#Scanning-Directory-Content">Scanning Directory Content</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CITE>GNU C Library Reference Manual</CITE>).</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-ftw></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>ftw</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>startname proc ['hash-size n]</EM></DT>
<DD>
<P>Walk the file system tree descending from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR>, calling<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>for each file and directory.</P>
<P>Hard links and symbolic links are followed. A file or directory is reported to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>only once, and skipped if seen again in another place. One consequence of this is that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is safe against circularly linked directory structures.</P>
<P>Each<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>call is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>filename statinfo flag)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and it should return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to continue, or any other value to stop.</P>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the item visited, being<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>plus a further path and the name of the item.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>statinfo</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the return from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#File-System">File System</A>) on<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>flag</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is one of the following symbols,</P>
<DL compact>
<DT><CODE>regular</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a file, this includes special files like devices, named pipes, etc.</P></DD>
<DT><CODE>directory</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a directory.</P></DD>
<DT><CODE>invalid-stat</CODE></DT>
<DD>
<P>An error occurred when calling<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat</CODE>, so nothing is known.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>statinfo</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in this case.</P></DD>
<DT><CODE>directory-not-readable</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a directory, but one which cannot be read and hence won&#8217;t be recursed into.</P></DD>
<DT><CODE>symlink</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a dangling symbolic link. Symbolic links are normally followed and their target reported, the link itself is reported if the target does not exist.</P></DD></DL>
<P>The return value from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if it ran to completion, or otherwise the non-<CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>value from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>which caused the stop.</P>
<P>Optional argument symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>hash-size</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and an integer can be given to set the size of the hash table used to track items already visited. (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Hash-Table-Reference">Hash Table Reference</A>)</P>
<P>In the current implementation, returning non-<CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the only valid way to terminate<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftw</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>must not use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>throw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or similar to escape.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-nftw></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>nftw</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>startname proc ['chdir] ['depth] ['hash-size n] ['mount] ['physical]</EM></DT>
<DD>
<P>Walk the file system tree starting at<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR>, calling<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>for each file and directory.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has extra features over the basic<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>described above.</P>
<P>Like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftw</CODE>, hard links and symbolic links are followed. A file or directory is reported to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>only once, and skipped if seen again in another place. One consequence of this is that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nftw</CODE>is safe against circular linked directory structures.</P>
<P>Each<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>call is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(<VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>filename statinfo flag base level)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and it should return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to continue, or any other value to stop.</P>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the item visited, being<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>plus a further path and the name of the item.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>statinfo</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the return from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>on<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#File-System">File System</A>).<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>base</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an integer offset into<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>which is where the basename for this item begins.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>level</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an integer giving the directory nesting level, starting from 0 for the contents of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or that item itself if it&#8217;s a file).<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>flag</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is one of the following symbols,</P>
<DL compact>
<DT><CODE>regular</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a file, including special files like devices, named pipes, etc.</P></DD>
<DT><CODE>directory</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a directory.</P></DD>
<DT><CODE>directory-processed</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a directory, and its contents have all been visited. This flag is given instead of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>directory</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>when the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>depth</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>option below is used.</P></DD>
<DT><CODE>invalid-stat</CODE></DT>
<DD>
<P>An error occurred when applying<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>, so nothing is known about it.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>statinfo</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in this case.</P></DD>
<DT><CODE>directory-not-readable</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a directory, but one which cannot be read and hence won&#8217;t be recursed into.</P></DD>
<DT><CODE>stale-symlink</CODE></DT>
<DD>
<P><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a dangling symbolic link. Links are normally followed and their target reported, the link itself is reported if its target does not exist.</P></DD>
<DT><CODE>symlink</CODE></DT>
<DD>
<P>When the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>physical</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>option described below is used, this indicates<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a symbolic link whose target exists (and is not being followed).</P></DD></DL>
<P>The following optional arguments can be given to modify the way<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>works. Each is passed as a symbol (and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>hash-size</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>takes a following integer value).</P>
<DL compact>
<DT><CODE>chdir</CODE></DT>
<DD>
<P>Change to the directory containing the item before calling<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR>. When<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the original current directory is restored.</P>
<P>Under this option, generally the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>base</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>parameter to each<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>call should be used to pick out the base part of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is still a path but with a changed directory it won&#8217;t be valid (unless the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>directory was absolute).</P></DD>
<DT><CODE>depth</CODE></DT>
<DD>
<P>Visit files &#8220;depth first&#8221;, meaning<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is called for the contents of each directory before it&#8217;s called for the directory itself. Normally a directory is reported first, then its contents.</P>
<P>Under this option, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>flag</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>for a directory is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>directory-processed</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instead of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>directory</CODE>.</P></DD>
<DT><CODE>hash-size<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR></CODE></DT>
<DD>
<P>Set the size of the hash table used to track items already visited. (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Hash-Table-Reference">Hash Table Reference</A>)</P></DD>
<DT><CODE>mount</CODE></DT>
<DD>
<P>Don&#8217;t cross a mount point, meaning only visit items on the same file system as<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>startname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(ie. the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stat:dev</CODE>).</P></DD>
<DT><CODE>physical</CODE></DT>
<DD>
<P>Don&#8217;t follow symbolic links, instead report them to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>symlink</CODE>. Dangling links (those whose target doesn&#8217;t exist) are still reported as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stale-symlink</CODE>.</P></DD></DL>
<P>The return value from<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nftw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if it ran to completion, or otherwise the non-<CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>value from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>which caused the stop.</P>
<P>In the current implementation, returning non-<CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the only valid way to terminate<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftw</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>must not use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>throw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or similar to escape.</P></DD></DL>