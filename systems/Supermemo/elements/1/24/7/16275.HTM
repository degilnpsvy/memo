<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=chapter>6 API Reference</H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Guile provides an application programming interface (<EM>API</EM>) to developers in two core languages: Scheme and C. This part of the manual contains reference documentation for all of the functionality that is available through both Scheme and C interfaces.</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=1 href="https://www.gnu.org/software/guile/manual/guile.html#API-Overview">API Overview</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Overview of the Guile API.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=2 href="https://www.gnu.org/software/guile/manual/guile.html#Deprecation">Deprecation</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Obsolete back-compatible APIs.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=3 href="https://www.gnu.org/software/guile/manual/guile.html#The-SCM-Type">The SCM Type</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>The fundamental data type for C code.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=4 href="https://www.gnu.org/software/guile/manual/guile.html#Initialization">Initialization</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Initializing Guile.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=5 href="https://www.gnu.org/software/guile/manual/guile.html#Snarfing-Macros">Snarfing Macros</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Macros for snarfing initialization actions.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=6 href="https://www.gnu.org/software/guile/manual/guile.html#Simple-Data-Types">Simple Data Types</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Numbers, strings, booleans and so on.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=7 href="https://www.gnu.org/software/guile/manual/guile.html#Compound-Data-Types">Compound Data Types</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Data types for holding other data.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=8 href="https://www.gnu.org/software/guile/manual/guile.html#Smobs">Smobs</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Defining new data types in C.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=9 href="https://www.gnu.org/software/guile/manual/guile.html#Procedures">Procedures</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Procedures.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Macros">Macros</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Extending the syntax of Scheme.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Utility-Functions">Utility Functions</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>General utility functions.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Binding-Constructs">Binding Constructs</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Definitions and variable bindings.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Control-Mechanisms">Control Mechanisms</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Controlling the flow of program execution.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Input-and-Output">Input and Output</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Ports, reading and writing.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Regular-Expressions">Regular Expressions</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Pattern matching and substitution.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#LALR_00281_0029-Parsing">LALR(1) Parsing</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Generating LALR(1) parsers.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Read_002fLoad_002fEval_002fCompile">Read/Load/Eval/Compile</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Reading and evaluating Scheme code.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Memory-Management">Memory Management</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Memory management and garbage collection.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Modules">Modules</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Designing reusable code libraries.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Foreign-Function-Interface">Foreign Function Interface</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Interacting with C procedures and data.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Scheduling">Scheduling</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Threads, mutexes, asyncs and dynamic roots.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Options-and-Config">Options and Config</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Configuration, features and runtime options.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Other-Languages">Other Languages</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Emacs Lisp, ECMAScript, and more.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Internationalization">Internationalization</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Support for gettext, etc.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Debugging">Debugging</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Debugging infrastructure and Scheme interface.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Code-Coverage">Code Coverage</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Gathering code coverage data.</TD></TR></TBODY></TABLE>