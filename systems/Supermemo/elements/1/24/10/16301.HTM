<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>6.26 Code Coverage Reports</H3><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-code-coverage></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-coverage></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">When writing a test suite for a program or library, it is desirable to know what part of the code is<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>covered</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>by the test suite. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(system vm coverage)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module provides tools to gather code coverage data and to present them, as detailed below.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-with_002dcode_002dcoverage></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>with-code-coverage</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>vm thunk</EM></DT>
<DD>
<P>Run<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>thunk</VAR>, a zero-argument procedure, using<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>vm</VAR>; instrument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>vm</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to collect code coverage data. Return code coverage data and the values returned by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>thunk</VAR>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-coverage_002ddata_003f></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>coverage-data?</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>obj</EM></DT>
<DD>
<P>Return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>obj</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>coverage data</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>object as returned by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>with-code-coverage</CODE>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-coverage_002ddata_002d_003elcov></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>coverage-data-&gt;lcov</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>data port #:key modules</EM></DT>
<DD>
<P>Traverse code coverage information<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>data</VAR>, as obtained with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>with-code-coverage</CODE>, and write coverage information to port in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.info</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format used by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://ltp.sourceforge.net/coverage/lcov.php">LCOV</A>. The report will include all of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>modules</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or, by default, all the currently loaded modules) even if their code was not executed.</P>
<P>The generated data can be fed to LCOV&#8217;s<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>genhtml</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>command to produce an HTML report, which aids coverage data visualization.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Here&#8217;s an example use:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example><PRE class=example>(use-modules (system vm coverage)
             (system vm vm))

(call-with-values (lambda ()
                    (with-code-coverage (the-vm)
                      (lambda ()
                        (do-something-tricky))))
  (lambda (data result)
    (let ((port (open-output-file "lcov.info")))
      (coverage-data-&gt;lcov data port)
      (close file))))
</PRE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In addition, the module provides low-level procedures that would make it possible to write other user interfaces to the coverage data.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-instrumented_002dsource_002dfiles></A>Scheme Procedures:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>instrumented-source-files</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>data</EM></DT>
<DD>
<P>Return the list of &#8220;instrumented&#8221; source files, i.e., source files whose code was loaded at the time<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>data</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>was collected.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-line_002dexecution_002dcounts></A>Scheme Procedures:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>line-execution-counts</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>data file</EM></DT>
<DD>
<P>Return a list of line number/execution count pairs for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file</VAR>, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not among the files covered by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>data</VAR>. This includes lines with zero count.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-instrumented_002fexecuted_002dlines></A>Scheme Procedures:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>instrumented/executed-lines</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>data file</EM></DT>
<DD>
<P>Return the number of instrumented and the number of executed source lines in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>file</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>according to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>data</VAR>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-procedure_002dexecution_002dcount></A>Scheme Procedures:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>procedure-execution-count</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>data proc</EM></DT>
<DD>
<P>Return the number of times<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR>&#8217;s code was executed, according to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>data</VAR>, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>was not executed. When<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>proc</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a closure, the number of times its code was executed is returned, not the number of times this code associated with this particular closure was executed.</P></DD></DL>