<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>6.22 Configuration, Features and Runtime Options</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Why is my Guile different from your Guile? There are three kinds of possible variation:</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>build differences &#8212; different versions of the Guile source code, installation directories, configuration flags that control pieces of functionality being included or left out, etc.</LI>
<LI>differences in dynamically loaded code &#8212; behaviour and features provided by modules that can be dynamically loaded into a running Guile</LI>
<LI>different runtime options &#8212; some of the options that are provided for controlling Guile&#8217;s behaviour may be set differently.</LI></UL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Guile provides &#8220;introspective&#8221; variables and procedures to query all of these possible variations at runtime. For runtime options, it also provides procedures to change the settings of options and to obtain documentation on what the options mean.</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=1 href="https://www.gnu.org/software/guile/manual/guile.html#Build-Config">Build Config</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Build and installation configuration.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=2 href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Tracking">Feature Tracking</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Available features in the Guile process.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=3 href="https://www.gnu.org/software/guile/manual/guile.html#Runtime-Options">Runtime Options</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Controlling Guile&#8217;s runtime behaviour.</TD></TR></TBODY></TABLE>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Build-Config></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Tracking" rel=next>Feature Tracking</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Options-and-Config" rel=up>Options and Config</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Configuration_002c-Build-and-Installation></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.22.1 Configuration, Build and Installation</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The following procedures and variables provide information about how Guile was configured, built and installed on your system.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-version></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>version</STRONG></DT>
<DT><A name=index-effective_002dversion></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>effective-version</STRONG></DT>
<DT><A name=index-major_002dversion></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>major-version</STRONG></DT>
<DT><A name=index-minor_002dversion></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>minor-version</STRONG></DT>
<DT><A name=index-micro_002dversion></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>micro-version</STRONG></DT>
<DT><A name=index-scm_005fversion></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_version</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DT><A name=index-scm_005feffective_005fversion></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_effective_version</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DT><A name=index-scm_005fmajor_005fversion></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_major_version</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DT><A name=index-scm_005fminor_005fversion></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_minor_version</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DT><A name=index-scm_005fmicro_005fversion></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_micro_version</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DD>
<P>Return a string describing Guile&#8217;s full version number, effective version number, major, minor or micro version number, respectively. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>effective-version</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function returns the version name that should remain unchanged during a stable series. Currently that means that it omits the micro version. The effective version should be used for items like the versioned share directory name i.e.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/share/guile/2.0/</SAMP></P>
<DIV style="MARGIN-LEFT: 3.2em" class=lisp><PRE class=lisp>(version) &#8658; "2.0.4"
(effective-version) &#8658; "2.0"
(major-version) &#8658; "2"
(minor-version) &#8658; "0"
(micro-version) &#8658; "4"
</PRE></DIV></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_0025package_002ddata_002ddir></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>%package-data-dir</STRONG></DT>
<DT><A name=index-scm_005fsys_005fpackage_005fdata_005fdir></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_sys_package_data_dir</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DD>
<P>Return the name of the directory under which Guile Scheme files in general are stored. On Unix-like systems, this is usually<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/local/share/guile</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/share/guile</SAMP>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_0025library_002ddir></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>%library-dir</STRONG></DT>
<DT><A name=index-scm_005fsys_005flibrary_005fdir></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_sys_library_dir</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DD>
<P>Return the name of the directory where the Guile Scheme files that belong to the core Guile installation (as opposed to files from a 3rd party package) are installed. On Unix-like systems this is usually<SAMP>/usr/local/share/guile/<VAR>GUILE_EFFECTIVE_VERSION</VAR></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/share/guile/<VAR>GUILE_EFFECTIVE_VERSION</VAR></SAMP>;</P>
<P>for example<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/local/share/guile/2.0</SAMP>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_0025site_002ddir-1></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>%site-dir</STRONG></DT>
<DT><A name=index-scm_005fsys_005fsite_005fdir></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_sys_site_dir</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DD>
<P>Return the name of the directory where Guile Scheme files specific to your site should be installed. On Unix-like systems, this is usually<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/local/share/guile/site</SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/share/guile/site</SAMP>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_0025site_002dccache_002ddir-1></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>%site-ccache-dir</STRONG></DT>
<DT><A name=index-scm_005fsys_005fsite_005fccache_005fdir></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_sys_site_ccache_dir</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>()</EM></DT>
<DD>
<P>Return the directory where users should install compiled<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.go</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>files for use with this version of Guile. Might look something like<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP>/usr/lib/guile/2.0/site-ccache</SAMP>.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_0025guile_002dbuild_002dinfo></A>Variable:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>%guile-build-info</STRONG></DT>
<DD>
<P>Alist of information collected during the building of a particular Guile. Entries can be grouped into one of several categories: directories, env vars, and versioning info.</P>
<P>Briefly, here are the keys in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>%guile-build-info</CODE>, by group:</P><A name=index-srcdir></A><A name=index-top_005fsrcdir></A><A name=index-prefix></A><A name=index-exec_005fprefix></A><A name=index-bindir></A><A name=index-sbindir></A><A name=index-libexecdir></A><A name=index-datadir></A><A name=index-sysconfdir></A><A name=index-sharedstatedir></A><A name=index-localstatedir></A><A name=index-libdir></A><A name=index-infodir></A><A name=index-mandir></A><A name=index-includedir></A><A name=index-pkgdatadir></A><A name=index-pkglibdir></A><A name=index-pkgincludedir></A>
<DL compact>
<DT>directories</DT>
<DD>
<P>srcdir, top_srcdir, prefix, exec_prefix, bindir, sbindir, libexecdir, datadir, sysconfdir, sharedstatedir, localstatedir, libdir, infodir, mandir, includedir, pkgdatadir, pkglibdir, pkgincludedir<A name=index-LIBS></A></P></DD>
<DT>env vars</DT>
<DD>
<P>LIBS<A name=index-guileversion></A><A name=index-libguileinterface></A><A name=index-buildstamp></A></P></DD>
<DT>versioning info</DT>
<DD>
<P>guileversion, libguileinterface, buildstamp</P></DD></DL>
<P>Values are all strings. The value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>LIBS</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is typically found also as a part of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pkg-config --libs guile-2.0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>output. The value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>guileversion</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has form X.Y.Z, and should be the same as returned by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(version)</CODE>. The value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>libguileinterface</CODE>is libtool compatible and has form CURRENT:REVISION:AGE (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/libtool/manual/libtool.html#Versioning">Library interface versions</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CITE>GNU Libtool</CITE>). The value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>buildstamp</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the output of the command &#8216;<SAMP>date -u +'%Y-%m-%d %T'</SAMP>&#8217; (UTC).</P>
<P>In the source,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>%guile-build-info</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is initialized from libguile/libpath.h, which is completely generated, so deleting this file before a build guarantees up-to-date values for that build.</P></DD></DL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-GNU-triplet></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=index-canonical-host-type></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_0025host_002dtype></A>Variable:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>%host-type</STRONG></DT>
<DD>
<P>The canonical host type (GNU triplet) of the host Guile was configured for, e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"x86_64-unknown-linux-gnu"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gnu.org/software/autoconf/manual/autoconf.html#Canonicalizing">Canonicalizing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CITE>The GNU Autoconf Manual</CITE>).</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Feature-Tracking></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#Runtime-Options" rel=next>Runtime Options</A>, Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#Build-Config" rel=prev>Build Config</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Options-and-Config" rel=up>Options and Config</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Feature-Tracking-1></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.22.2 Feature Tracking</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Guile has a Scheme level variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*features*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that keeps track to some extent of the features that are available in a running Guile.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*features*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a list of symbols, for example<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>threads</CODE>, each of which describes a feature of the running Guile process.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-_002afeatures_002a></A>Variable:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>*features*</STRONG></DT>
<DD>
<P>A list of symbols describing available features of the Guile process.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">You shouldn&#8217;t modify the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*features*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable directly using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>set!</CODE>. Instead, see the procedures that are provided for this purpose in the following subsection.</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=1 href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Manipulation">Feature Manipulation</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Checking for and advertising features.</TD></TR>
<TR>
<TD vAlign=top align=left>&#8226;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=2 href="https://www.gnu.org/software/guile/manual/guile.html#Common-Feature-Symbols">Common Feature Symbols</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Commonly available features.</TD></TR></TBODY></TABLE>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Feature-Manipulation></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Next:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=n href="https://www.gnu.org/software/guile/manual/guile.html#Common-Feature-Symbols" rel=next>Common Feature Symbols</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Tracking" rel=up>Feature Tracking</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Feature-Manipulation-1></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>6.22.2.1 Feature Manipulation</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To check whether a particular feature is available, use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>provided?</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>procedure:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-provided_003f></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>provided?</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>feature</EM></DT>
<DT><A name=index-feature_003f></A>Deprecated Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>feature?</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>feature</EM></DT>
<DD>
<P>Return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if the specified<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>feature</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is available, otherwise<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#f</CODE>.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To advertise a feature from your own Scheme code, you can use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>provide</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>procedure:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-provide></A>Scheme Procedure:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>provide</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>feature</EM></DT>
<DD>
<P>Add<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>feature</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the list of available features in this Guile process.</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">For C code, the equivalent function takes its feature name as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>char *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument for convenience:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><A name=index-scm_005fadd_005ffeature></A>C Function:<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>void</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>scm_add_feature</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>(const char *str)</EM></DT>
<DD>
<P>Add a symbol with name<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>str</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the list of available features in this Guile process.</P></DD></DL>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Common-Feature-Symbols></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Manipulation" rel=prev>Feature Manipulation</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Tracking" rel=up>Feature Tracking</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Common-Feature-Symbols-1></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>6.22.2.2 Common Feature Symbols</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In general, a particular feature may be available for one of two reasons. Either because the Guile library was configured and compiled with that feature enabled &#8212; i.e. the feature is built into the library on your system. Or because some C or Scheme code that was dynamically loaded by Guile has added that feature to the list.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In the first category, here are the features that the current version of Guile may define (depending on how it is built), and what they mean.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>array</CODE></DT>
<DD>
<P>Indicates support for arrays (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Arrays">Arrays</A>).</P></DD>
<DT><CODE>array-for-each</CODE></DT>
<DD>
<P>Indicates availability of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>array-for-each</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and other array mapping procedures (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Arrays">Arrays</A>).</P></DD>
<DT><CODE>char-ready?</CODE></DT>
<DD>
<P>Indicates that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>char-ready?</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is available (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Reading">Reading</A>).</P></DD>
<DT><CODE>complex</CODE></DT>
<DD>
<P>Indicates support for complex numbers.</P></DD>
<DT><CODE>current-time</CODE></DT>
<DD>
<P>Indicates availability of time-related functions:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>times</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>get-internal-run-time</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and so on (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Time">Time</A>).</P></DD>
<DT><CODE>debug-extensions</CODE></DT>
<DD>
<P>Indicates that the debugging evaluator is available, together with the options for controlling it.</P></DD>
<DT><CODE>delay</CODE></DT>
<DD>
<P>Indicates support for promises (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Delayed-Evaluation">Delayed Evaluation</A>).</P></DD>
<DT><CODE>EIDs</CODE></DT>
<DD>
<P>Indicates that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>geteuid</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>getegid</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>really return effective user and group IDs (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Processes">Processes</A>).</P></DD>
<DT><CODE>inexact</CODE></DT>
<DD>
<P>Indicates support for inexact numbers.</P></DD>
<DT><CODE>i/o-extensions</CODE></DT>
<DD>
<P>Indicates availability of the following extended I/O procedures:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftell</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>redirect-port</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>dup-&gt;fdes</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>dup2</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fileno</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty?</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fdopen</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>primitive-move-&gt;fdes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fdes-&gt;ports</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Ports-and-File-Descriptors">Ports and File Descriptors</A>).</P></DD>
<DT><CODE>net-db</CODE></DT>
<DD>
<P>Indicates availability of network database functions:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_gethost</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_getnet</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_getproto</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_getserv</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_sethost</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_setnet</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_setproto</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>scm_setserv</CODE>, and their &#8216;byXXX&#8217; variants (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Network-Databases">Network Databases</A>).</P></DD>
<DT><CODE>posix</CODE></DT>
<DD>
<P>Indicates support for POSIX functions:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>pipe</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>getgroups</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>kill</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>execl</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and so on (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#POSIX">POSIX</A>).</P></DD>
<DT><CODE>fork</CODE></DT>
<DD>
<P>Indicates support for the POSIX<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fork</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Processes"><CODE>primitive-fork</CODE></A>). This is a prerequisite for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(ice-9 popen)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Pipes">Pipes</A>).</P></DD>
<DT><CODE>random</CODE></DT>
<DD>
<P>Indicates availability of random number generation functions:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>random</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>copy-random-state</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>random-uniform</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and so on (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Random">Random</A>).</P></DD>
<DT><CODE>reckless</CODE></DT>
<DD>
<P>Indicates that Guile was built with important checks omitted &#8212; you should never see this!</P></DD>
<DT><CODE>regex</CODE></DT>
<DD>
<P>Indicates support for POSIX regular expressions using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>make-regexp</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>regexp-exec</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and friends (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Regexp-Functions">Regexp Functions</A>).</P></DD>
<DT><CODE>socket</CODE></DT>
<DD>
<P>Indicates availability of socket-related functions:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>socket</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bind</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>connect</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and so on (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Network-Sockets-and-Communication">Network Sockets and Communication</A>).</P></DD>
<DT><CODE>sort</CODE></DT>
<DD>
<P>Indicates availability of sorting and merging functions (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Sorting">Sorting</A>).</P></DD>
<DT><CODE>system</CODE></DT>
<DD>
<P>Indicates that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>system</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is available (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Processes">Processes</A>).</P></DD>
<DT><CODE>threads</CODE></DT>
<DD>
<P>Indicates support for multithreading (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Threads">Threads</A>).</P></DD>
<DT><CODE>values</CODE></DT>
<DD>
<P>Indicates support for multiple return values using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>values</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>call-with-values</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Multiple-Values">Multiple Values</A>).</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Available features in the second category depend, by definition, on what additional code your Guile process has loaded in. The following table lists features that you might encounter for this reason.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" compact>
<DT><CODE>defmacro</CODE></DT>
<DD>
<P>Indicates that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>defmacro</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro is available (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Macros">Macros</A>).</P></DD>
<DT><CODE>describe</CODE></DT>
<DD>
<P>Indicates that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(oop goops describe)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module has been loaded, which provides a procedure for describing the contents of GOOPS instances.</P></DD>
<DT><CODE>readline</CODE></DT>
<DD>
<P>Indicates that Guile has loaded in Readline support, for command line editing (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Readline-Support">Readline Support</A>).</P></DD>
<DT><CODE>record</CODE></DT>
<DD>
<P>Indicates support for record definition using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>make-record-type</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and friends (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Records">Records</A>).</P></DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Although these tables may seem exhaustive, it is probably unwise in practice to rely on them, as the correspondences between feature symbols and available procedures/behaviour are not strictly defined. If you are writing code that needs to check for the existence of some procedure, it is probably safer to do so directly using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>defined?</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>procedure than to test for the corresponding feature using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>provided?</CODE>.</P>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Runtime-Options></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=header>
<P>Previous:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=p href="https://www.gnu.org/software/guile/manual/guile.html#Feature-Tracking" rel=prev>Feature Tracking</A>, Up:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A accessKey=u href="https://www.gnu.org/software/guile/manual/guile.html#Options-and-Config" rel=up>Options and Config</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp; [<A title="Table of contents" href="https://www.gnu.org/software/guile/manual/guile.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="https://www.gnu.org/software/guile/manual/guile.html#Concept-Index" rel=index>Index</A>]</P></DIV><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Runtime-Options-1></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.22.3 Runtime Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">There are a number of runtime options available for paramaterizing built-in procedures, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>, and built-in behavior, like what happens on an uncaught error.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">For more information on reader options, See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Scheme-Read">Scheme Read</A>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">For more information on print options, See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Scheme-Write">Scheme Write</A>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Finally, for more information on debugger options, See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://www.gnu.org/software/guile/manual/guile.html#Debug-Options">Debug Options</A>.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Examples-of-option-use></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>6.22.3.1 Examples of option use</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Here is an example of a session in which some read and debug option handling procedures are used. In this example, the user</P>
<OL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>Notices that the symbols<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>abc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>aBc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are not the same</LI>
<LI>Examines the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read-options</CODE>, and sees that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>case-insensitive</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set to &#8220;no&#8221;.</LI>
<LI>Enables<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>case-insensitive</CODE></LI>
<LI>Quits the recursive prompt</LI>
<LI>Verifies that now<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>aBc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>abc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are the same</LI></OL>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); MARGIN-LEFT: 3.2em; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smalllisp><PRE style="FONT-SIZE: smaller" class=smalllisp>scheme@(guile-user)&gt; (define abc "hello")
scheme@(guile-user)&gt; abc
$1 = "hello"
scheme@(guile-user)&gt; aBc
&lt;unknown-location&gt;: warning: possibly unbound variable `aBc'
ERROR: In procedure module-lookup:
ERROR: Unbound variable: aBc
Entering a new prompt.  Type `,bt' for a backtrace or `,q' to continue.
scheme@(guile-user) [1]&gt; (read-options 'help)
copy              no    Copy source code expressions.
positions         yes   Record positions of source code expressions.
case-insensitive  no    Convert symbols to lower case.
keywords          #f    Style of keyword recognition: #f, 'prefix or 'postfix.
r6rs-hex-escapes  no    Use R6RS variable-length character and string hex escapes.
square-brackets   yes   Treat `[' and `]' as parentheses, for R6RS compatibility.
hungry-eol-escapes no   In strings, consume leading whitespace after an
                        escaped end-of-line.
curly-infix       no    Support SRFI-105 curly infix expressions.
scheme@(guile-user) [1]&gt; (read-enable 'case-insensitive)
$2 = (square-brackets keywords #f case-insensitive positions)
scheme@(guile-user) [1]&gt; ,q
scheme@(guile-user)&gt; aBc
$3 = "hello"</PRE></DIV>