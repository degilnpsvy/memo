<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: white; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-pagination: widow-orphan; mso-outline-level: 2" class=MsoNormal align=left><B><SPAN style="FONT-FAMILY: 'Arial','sans-serif'; COLOR: #354278; FONT-SIZE: 32pt; mso-bidi-font-size: 24.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Preface</SPAN></B></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: white; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-pagination: widow-orphan" class=MsoNormal align=left><I><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>The gap between the best software engineering practice and the average practice is very wide&#8212;perhaps wider than in any other engineering discipline. A tool that disseminates good practice would be important.</SPAN></I><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: white; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-pagination: widow-orphan" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>&#8212;Fred Brooks</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: white; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-pagination: widow-orphan" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>My primary concern in writing this book has been to narrow the gap between the knowledge of industry gurus and professors on the one hand and common commercial practice on the other. Many powerful programming techniques hide in journals and academic papers for years before trickling down to the programming public.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: white; mso-margin-top-alt: auto; mso-margin-bottom-alt: auto; mso-pagination: widow-orphan" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;; mso-font-kerning: 0pt" lang=EN-US>Although leading-edge software-development practice has advanced rapidly in recent years, common practice hasn't. Many programs are still buggy, late, and over budget, and many fail to satisfy the needs of their users. Researchers in both the software industry and academic settings have discovered effective practices that eliminate most of the programming problems that have been prevalent since the 1970s. Because these practices aren't often reported outside the pages of highly specialized technical journals, however, most programming organizations aren't yet using them today. Studies have found that it typically takes 5 to 15 years or more for a research development to make its way into commercial practice (Raghavan and Chand 1989, Rogers 1995, Parnas 1999). This handbook shortcuts the process, making key discoveries available to the average programmer now.</SPAN>