<H3 style="MARGIN: 13pt 0cm; BACKGROUND: white"><SPAN style="LINE-HEIGHT: 173%; FONT-FAMILY: 'Arial','sans-serif'; COLOR: #354278; FONT-SIZE: 26pt; mso-bidi-font-size: 18.0pt" lang=EN-US>Why This Handbook Was Written</SPAN></H3>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>The need for development handbooks that capture knowledge about effective development practices is well recognized in the software-engineering community. A report of the Computer Science and Technology Board stated that the biggest gains in software-development quality and productivity will come from codifying, unifying, and distributing existing knowledge about effective software-development practices (CSTB 1990, McConnell 1997a). The board concluded that the strategy for spreading that knowledge should be built on the concept of software-engineering handbooks.</SPAN></P>
<H4 style="MARGIN: 14pt 0cm 14.5pt; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=pref01lev2sec5></A><SPAN style="LINE-HEIGHT: 156%; FONT-FAMILY: 'Arial','sans-serif'; COLOR: #354278; FONT-SIZE: 21.5pt; mso-bidi-font-size: 13.5pt" lang=EN-US></SPAN><SPAN style="FLOAT: none; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT size=5><FONT face=Cambria>The Topic of Construction Has Been Neglected</FONT></FONT></SPAN></H4>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>At one time, software development and coding were thought to be one and the same. But as distinct activities in the software-development life cycle have been identified, some of the best minds in the field have spent their time analyzing and debating methods of project management, requirements, design, and testing. The rush to study these newly identified areas has left code construction as the ignorant cousin of software development.</SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>Discussions about construction have also been hobbled by the suggestion that treating construction as a distinct software development<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis><I>activity</I></SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>implies that construction must also be treated as a distinct<SPAN class=docemphasis><I>phase</I></SPAN>. In reality, software activities and phases don't have to be set up in any particular relationship to each other, and it's useful to discuss the activity of construction regardless of whether other software activities are performed in phases, in iterations, or in some other way.</SPAN></P>
<H4 style="MARGIN: 14pt 0cm 14.5pt; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=pref01lev2sec6></A><SPAN style="LINE-HEIGHT: 156%; FONT-FAMILY: 'Arial','sans-serif'; COLOR: #354278; FONT-SIZE: 21.5pt; mso-bidi-font-size: 13.5pt" lang=EN-US></SPAN><SPAN style="FLOAT: none; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT size=5><FONT face=Cambria>Construction Is Important</FONT></FONT></SPAN></H4>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>Another reason construction has been neglected by researchers and writers is the mistaken idea that, compared to other software-development activities, construction is a relatively mechanical process that presents little opportunity for improvement. Nothing could be further from the truth.</SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>Code construction typically makes up about 65 percent of the effort on small projects and 50 percent on medium projects. Construction accounts for about 75 percent of the errors on small projects and 50 to 75 percent on medium and large projects. Any activity that accounts for 50 to 75 percent of the errors presents a clear opportunity for improvement. (<A href="file:///D:/sync/Books/Programming/Microsoft.Press.Code.Complete.Second.Edition/0735619670/ch27.html#ch27"><SPAN style="COLOR: #3366cc">Chapter 27</SPAN></A><SPAN class=apple-converted-space>&nbsp;</SPAN>contains more details on these statistics.)</SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>Some commentators have pointed out that although construction errors account for a high percentage of total errors, construction errors tend to be less expensive to fix than those caused by requirements and architecture, the suggestion being that they are therefore less important. The claim that construction errors cost less to fix is true but misleading because the cost of not fixing them can be incredibly high. Researchers have found that small-scale coding errors account for some of the most expensive software errors of all time, with costs running into hundreds of millions of dollars (Weinberg 1983, SEN 1990). An inexpensive cost to fix obviously does not imply that fixing them should be a low priority.</SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>The irony of the shift in focus away from construction is that construction is the only activity that's guaranteed to be done. Requirements can be assumed rather than developed; architecture can be shortchanged rather than designed; and testing can be abbreviated or skipped rather than fully planned and executed. But if there's going to be a program, there has to be construction, and that makes construction a uniquely fruitful area in which to improve development practices.</SPAN></P>
<H4 style="MARGIN: 14pt 0cm 14.5pt; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=pref01lev2sec7></A><SPAN style="LINE-HEIGHT: 156%; FONT-FAMILY: 'Arial','sans-serif'; COLOR: #354278; FONT-SIZE: 21.5pt; mso-bidi-font-size: 13.5pt" lang=EN-US></SPAN><SPAN style="FLOAT: none; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT size=5><FONT face=Cambria>No Comparable Book Is Available</FONT></FONT></SPAN></H4>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>In light of construction's obvious importance, I was sure when I conceived this book that someone else would already have written a book on effective construction practices. The need for a book about how to program effectively seemed obvious. But I found that only a few books had been written about construction and then only on parts of the topic. Some had been written 15 years or more earlier and employed relatively esoteric languages such as ALGOL, PL/I, Ratfor, and Smalltalk. Some were written by professors who were not working on production code. The professors wrote about techniques that worked for student projects, but they often had little idea of how the techniques would play out in full-scale development environments. <FONT class=extract>Still other books trumpeted the authors' newest favorite methodologies but ignored the huge repository of mature practices that have proven their effectiveness over time.</FONT></SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US>In short, I couldn't find any book that had even attempted to capture the body of practical techniques available from professional experience, industry research, and academic work. The discussion needed to be brought up to date for current programming languages, object-oriented programming, and leading-edge development practices. It seemed clear that a book about programming needed to be written by someone who was knowledgeable about the theoretical state of the art but who was also building enough production code to appreciate the state of the practice. I conceived this book as a full discussion of code construction&#8212;from one programmer to another.</SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US><FONT class=extract>When art critics get together they talk about Form and Structure and Meaning. When artists get together they talk about where you can buy cheap turpentine.</FONT></SPAN></P>
<P style="MARGIN: auto 0cm; BACKGROUND: white" class=doctext><SPAN style="FONT-FAMILY: 'Times New Roman','serif'; COLOR: black; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt" lang=EN-US><FONT class=extract>&#8212;Pablo Picasso</FONT></SPAN>