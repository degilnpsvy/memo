<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_waitevent</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Section: Svgalib User Manual (3)<BR>Updated: 27 July 1997<BR></FONT><A href="http://www.fifi.org/cgi-bin/man2html/usr/share/man/man3/vga_waitevent.3vga.gz#index"><FONT color=#0000ff face=Calibri>Index</FONT></A><FONT face=Calibri>&nbsp;<BR></FONT><A href="http://www.fifi.org/cgi-bin/man2html"><FONT color=#0000ff face=Calibri>Return to Main Contents</FONT></A></SPAN></P>
<DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt" class=MsoNormal align=center><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT color=#0000ff face=Calibri>
<HR style="COLOR: black" align=center SIZE=2 width="100%" noShade>
</FONT></SPAN></DIV>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAB><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>NAME</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_waitevent - wait for various I/O events&nbsp;</FONT><A name=lbAC><FONT face=Calibri>&nbsp;</FONT></A></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>SYNOPSIS</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>#include &lt;</FONT><A href="file://usr/include/sys/time.h"><FONT color=#0000ff face=Calibri>sys/time.h</FONT></A><FONT face=Calibri>&gt;</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>#include &lt;<A href="file://usr/include/sys/types.h"><FONT color=#0000ff>sys/types.h</FONT></A>&gt;</B>&nbsp;<BR><B>#include &lt;<A href="file://usr/include/unistd.h"><FONT color=#0000ff>unistd.h</FONT></A>&gt;</B>&nbsp;<BR><B>#include &lt;<A href="file://usr/include/vga.h"><FONT color=#0000ff>vga.h</FONT></A>&gt;</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>int vga_waitevent(int&nbsp;</SPAN></B><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>which</SPAN></I><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>, fd_set *</SPAN></B><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>input</SPAN></I><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>, fd_set *</SPAN></B><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>output</SPAN></I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>&nbsp;<B>, fd_set *</B><I>except</I><B>, struct timeval *</B><I>timeout)</I></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAD><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>DESCRIPTION</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>This is the only function allowing you to wait for keyboard AND mouse events. It is based on the&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?select+2"><FONT color=#0000ff>select</FONT></A></B>(2) library function, so for deep understanding of&nbsp;<B>vga_waitevent()</B>&nbsp;look at&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?select+2"><FONT color=#0000ff>select</FONT></A></B>(2) as well.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>which</SPAN></I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>&nbsp;can be 0 or logical ored together from&nbsp;<B>VGA_MOUSEEVENT</B>&nbsp;and&nbsp;<B>VGA_KEYEVENT</B>. If you are interested in waiting for file descriptors having input available or being ready for new write data or being in an exceptional condition (urgent data arrived on a TCP stream) set the corresponding bits in the&nbsp;<B>fd_set</B>&nbsp;structures passed (see&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?select+3"><FONT color=#0000ff>select</FONT></A></B>(3)). If you want&nbsp;<B>vga_waitevent()</B>&nbsp;to return after a timeout value pass a&nbsp;<B>struct timeval</B>&nbsp;with the desired value. If you are not interested in the corresponding events you may pass&nbsp;<B>NULL</B>&nbsp;for any of the pointers.</SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>If&nbsp;<B>NULL</B>&nbsp;is passed for&nbsp;<I>timeout&nbsp;</I><B>vga_waitevent()</B>&nbsp;will not time out but block until any of the other events occurs. If the integer returned is &lt; 0 an error occurred. Check the global variable&nbsp;<B>errno</B>&nbsp;for details. If a value &gt;= 0 is returned it is a bitmask constructed using&nbsp;<B>VGA_MOUSEEVENT</B>&nbsp;and&nbsp;<B>VGA_KEYEVENT</B>&nbsp;to show which of these events occured.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>If any of these two occured the appropriate update functions are already called by&nbsp;<B>vga_waitevent()</B>.<B>vga_waitevent()</B>&nbsp;operates in raw as well as non-raw keyboard mode. In the latter case use&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getch+3"><FONT color=#0000ff>vga_getch</FONT></A></B>(3) not&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getkey+3"><FONT color=#0000ff>vga_getkey</FONT></A></B>(3) to read the newly arrived keys.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Any of the file related conditions being met will be signalled by setting exactly the bits for files that met the conditions in the corresponding&nbsp;<B>fd_set</B>&nbsp;structures. If a non-<B>NULL</B>&nbsp;<I>timeout</I>&nbsp;is passed the remaining time is written into it on return. If it is 0 a timeout occured. (again: cf.&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?select+2"><FONT color=#0000ff>select</FONT></A></B>(2)) Therefore, depending on context,&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_waitkey+3"><FONT color=#0000ff>vga_waitkey</FONT></A></B>(3) may return 0 if only special, non svgalib, events occured.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAE><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>EXAMPLES</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>If you want to wait blocking for a keypress OR a mouse event use:&nbsp;<B>vga_waitevent(VGA_MOUSEEVENT | VGA_KEYEVENT, NULL, NULL, NULL, NULL);</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>If you want to wait for a keypress OR a mouse event but non-blocking use:</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>#include &lt;</FONT><A href="file://usr/include/sys/time.h"><FONT color=#0000ff face=Calibri>sys/time.h</FONT></A><FONT face=Calibri>&gt;</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>#include &lt;<A href="file://usr/include/sys/types.h"><FONT color=#0000ff>sys/types.h</FONT></A>&gt;</B>&nbsp;<BR><B>#include &lt;<A href="file://usr/include/unistd.h"><FONT color=#0000ff>unistd.h</FONT></A>&gt;</B>&nbsp;<BR><B>#include &lt;<A href="file://usr/include/vga.h"><FONT color=#0000ff>vga.h</FONT></A>&gt;</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>struct timeval timeout;</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>timeout.tv_sec = 0;</B>&nbsp;<BR><B>timeout.tv_usec = 0;</B>&nbsp;<BR><B>vga_waitevent(VGA_MOUSEEVENT | VGA_KEYEVENT, NULL, NULL, NULL, &amp;timeout);</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>You could do a similar thing by just calling</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>mouse_update();</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>keyboard_update();</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>though. There is no such counterpart for the first example.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Finally, there is a very nice&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?eventtest+6"><FONT color=#0000ff>eventtest</FONT></A></B>(6) demo showing most capabilities of&nbsp;<B>vga_waitevent()</B>.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAF><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>BUGS</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>This function was introduced in 1.2.10. Unfortunately there was a typo in the first implementation which broke the case where&nbsp;<I>input</I>&nbsp;was<B>NULL</B>. Though fixed in 1.2.11 for optimal portability pass an empty&nbsp;<B>fd_set</B>&nbsp;instead of&nbsp;<B>NULL</B>&nbsp;as first argument.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>When not running in background mode, that is, the svgalib applcation is suspended while the VC is switched away, it seems&nbsp;<B>vga_waitevent</B>gets stuck and does no longer timeout. It is not clear if this is an svgalib bug, kernel bug or general problem.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAG><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>SEE ALSO</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><A href="http://www.fifi.org/cgi-bin/man2html?svgalib+7"><FONT color=#0000ff face=Calibri>svgalib</FONT></A></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>(7),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vgagl+7"><FONT color=#0000ff>vgagl</FONT></A></B>(7),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?libvga.config+5"><FONT color=#0000ff>libvga.config</FONT></A></B>(5),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?eventtest+6"><FONT color=#0000ff>eventtest</FONT></A></B>(6),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?mouse_getposition_6d+3"><FONT color=#0000ff>mouse_getposition_6d</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?mouse_getx+3"><FONT color=#0000ff>mouse_getx</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?mouse_update+3"><FONT color=#0000ff>mouse_update</FONT></A></B>(3),<B><A href="http://www.fifi.org/cgi-bin/man2html?mouse_waitforupdate+3"><FONT color=#0000ff>mouse_waitforupdate</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getkey+3"><FONT color=#0000ff>vga_getkey</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getch+3"><FONT color=#0000ff>vga_getch</FONT></A></B>(3)</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN>