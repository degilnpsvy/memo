<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_init</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Section: Svgalib User Manual (3)<BR>Updated: 27 July 1997<BR></FONT><A href="http://www.fifi.org/cgi-bin/man2html/usr/share/man/man3/vga_init.3vga.gz#index"><FONT color=#0000ff face=Calibri>Index</FONT></A><FONT face=Calibri>&nbsp;<BR></FONT><A href="http://www.fifi.org/cgi-bin/man2html"><FONT color=#0000ff face=Calibri>Return to Main Contents</FONT></A></SPAN></P>
<DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt" class=MsoNormal align=center><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT color=#0000ff face=Calibri>
<HR style="COLOR: black" align=center SIZE=2 width="100%" noShade>
</FONT></SPAN></DIV>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAB><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>NAME</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_init - initialize svgalib library&nbsp;</FONT><A name=lbAC><FONT face=Calibri>&nbsp;</FONT></A></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>SYNOPSIS</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>#include &lt;</FONT><A href="file://usr/include/vga.h"><FONT color=#0000ff face=Calibri>vga.h</FONT></A><FONT face=Calibri>&gt;</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>int vga_init(void);</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAD><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>DESCRIPTION</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>It detects the chipset and gives up supervisor rights. This is the recommended first line of any program that uses svgalib.<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setchipset+3"><FONT color=#0000ff>vga_setchipset</FONT></A></B>(3) can be called before it to avoid detection.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Svgalib catches a bunch of signals that usually kill your program to restore textmode. If you catch signal's before calling&nbsp;<B>vga_init()</B>svgalib will restore textmode and prepare for shutdown and then call your handler routine. If you don't want this, catch the signal<B>after</B>&nbsp;calling vga_init and do not daisychain to svgalib's original handler.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>WARNING!</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>&nbsp;svgalib needs two signals for it's own purposes (that is managing console switches). To avoid problems it uses the otherwise unused signals&nbsp;<B>SIGUSR1</B>&nbsp;and&nbsp;<B>SIGUSR2</B>. However, this means that you cannot use them in your program by any means. They are setup by<B>vga_init()</B>&nbsp;as everything else is.</SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Since version 1.2.11&nbsp;<B>vga_init()</B>&nbsp;includes code to hunt for a free virtual console on its own in case you are not starting the program from one (but instead over a network or modem login, from within 'screen' or an 'xterm'). Provided there is a free console, this succeeds if you are root or if the svgalib calling user own the current console. This is to avoid people not using the console being able to fiddle with it. On graceful exit the program returns to the console from which it was started. Otherwise it remains in text mode at the VC which svgalib allocated to allow you to see any error messages. In any case, any I/O the svgalib makes in text mode (after calling vga_init) will also take place at this new console.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Alas, some games misuse their suid root priviledge and run as full root process. svgalib cannot detect this and allows Joe Blow User to open a new VC on the console. If this annoys you&nbsp;<B>ROOT_VC_SHORTCUT</B>&nbsp;in&nbsp;<I>Makefile.cfg</I>&nbsp;allows you to disable allocating a new VC for root (except when he owns the current console) when compiling svgalib. This is the default (disabling the allocation for root).</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>vga_init()</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>&nbsp;returns a non-zero value in case of errors. As of this writing it will return -1 if it is unable to allocate a graphical console. Otherwise, 0 is returned.</SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAE><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>BUGS</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Svgalib versions prior to 1.2.11 had a security hole where it would be possible to regain root priviledges even after a&nbsp;<B>vga_init()</B>call. This is not necessarily a problem, but if your program is vulnerable to buffer overflows and other attacks, an attacker may exploit this.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>However, prior to your call, your program will need to run setuid root, so you should be very careful. The ioperm library by Olaf Titz will allow svgalib programs to run not setuid root. However, it gives all programs unlimited access to the hardware. Again, a malicious person can exploit this (albeit a bit more difficult) too. Thus, in general, make your svgalib programs as secure as any setuid root program.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Some programs may (accidently) rely on the old behaviour (which was probably due to the author not knowing about saved uids (which might actually even not have existed in Linux at that time)). A line:</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>security compat</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>in the configuration file&nbsp;<I>/etc/vga/libvga.conf</I>&nbsp;will reinstate the old behaviour whereas</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>security revoke-all-privs</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>enables the (currently default) action.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAF><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>SEE ALSO</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><A href="http://www.fifi.org/cgi-bin/man2html?svgalib+7"><FONT color=#0000ff face=Calibri>svgalib</FONT></A></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>(7),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setmode+3"><FONT color=#0000ff>vga_setmode</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?mouse_init+3"><FONT color=#0000ff>mouse_init</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_claimvideomemory+3"><FONT color=#0000ff>vga_claimvideomemory</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_ext_set+3"><FONT color=#0000ff>vga_ext_set</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_fillblt+3"><FONT color=#0000ff>vga_fillblt</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getcurrentchipset+3"><FONT color=#0000ff>vga_getcurrentchipset</FONT></A></B>(3),<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getdefaultmode+3"><FONT color=#0000ff>vga_getdefaultmode</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getgraphmem+3"><FONT color=#0000ff>vga_getgraphmem</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_runinbackground+3"><FONT color=#0000ff>vga_runinbackground</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_runinbackground_version+3"><FONT color=#0000ff>vga_runinbackground_version</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_safety_fork+3"><FONT color=#0000ff>vga_safety_fork</FONT></A></B>(3),<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setchipset+3"><FONT color=#0000ff>vga_setchipset</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setchipsetandfeatures+3"><FONT color=#0000ff>vga_setchipsetandfeatures</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vgagl+7"><FONT color=#0000ff>vgagl</FONT></A></B>(7),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?libvga.config+5"><FONT color=#0000ff>libvga.config</FONT></A></B>(5),</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAG><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN>