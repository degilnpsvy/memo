<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_runinbackground</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Section: Svgalib User Manual (3)<BR>Updated: 27 July 1997<BR></FONT><A href="http://www.fifi.org/cgi-bin/man2html/usr/share/man/man3/vga_runinbackground.3vga.gz#index"><FONT color=#0000ff face=Calibri>Index</FONT></A><FONT face=Calibri>&nbsp;<BR></FONT><A href="http://www.fifi.org/cgi-bin/man2html"><FONT color=#0000ff face=Calibri>Return to Main Contents</FONT></A></SPAN></P>
<DIV style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt" class=MsoNormal align=center><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT color=#0000ff face=Calibri>
<HR style="COLOR: black" align=center SIZE=2 width="100%" noShade>
</FONT></SPAN></DIV>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>NAME</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_runinbackground - enable running of the program while there is no VGA access&nbsp;&nbsp;</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>SYNOPSIS</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>#include &lt;</FONT><A href="file://usr/include/vga.h"><FONT color=#0000ff face=Calibri>vga.h</FONT></A><FONT face=Calibri>&gt;</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>void vga_runinbackground(int&nbsp;</SPAN></B><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>stat</SPAN></I><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>);</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>DESCRIPTION</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Enable/disable background running of a graphics program.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>stat</SPAN></I><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>&nbsp;= 1</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>enables</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT face=Calibri><I><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>stat</SPAN></I><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US>&nbsp;= 0</SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></FONT></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>disables</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Normally, the program is suspended while not in the current virtual console. A program can only safely run in the background if it doesn't do any video access during this time.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>As of version 1.2.11 this was changed by Pekka T. Alaruikka &lt;</FONT><A href="mailto:alaruik@cc.hut.fi"><FONT color=#0000ff face=Calibri>alaruik@cc.hut.fi</FONT></A><FONT face=Calibri>&gt; &amp; Michael Friman &lt;no email&gt; The support for this must be enabled in&nbsp;<I>Makefile.cfg</I>&nbsp;of svgalib (which it is by default). Several ways to support this may exist internally. As of now, only one using proc-fs works. Using&nbsp;<B>vga_runinbackground(VGA_GOTOBACK, void (*</B><I>goto</I><B>)())</B>&nbsp;and&nbsp;<B>vga_runinbackground(VGA_COMEFROMBACK, void (*</B><I>comefrom</I><B>)())</B>&nbsp;with function pointers to functions&nbsp;<B>void&nbsp;</B><I>goto</I><B>(void)</B>&nbsp;and&nbsp;<B>void&nbsp;</B><I>comefrom</I><B>(void)</B>&nbsp;you can setup function to be called when your program goes to background mode and when it comes back to foreground. These can be changed at any time, and passing&nbsp;<B>NULL</B>&nbsp;as function disables the feature.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Both these new features require a&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_runinbackground_version+3"><FONT color=#0000ff>vga_runinbackground_version</FONT></A></B>(3) of 1 or higher. You should check and not call it when the svgalib in use returns 0. Also, when writing applications, check with</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>#ifdef VGA_GOTOBACK</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR>/* code using&nbsp;<B>vga_runinbackground(VGA_GOTOBACK,</B>&nbsp;<I>goto</I><B>)</B>&nbsp;*/&nbsp;<BR><B>#else</B>&nbsp;<BR>/* code using no goto or comefrom function */&nbsp;<BR><B>#endif</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>if you are compiling with an svgalib that supports this feature, and try to rearrange your source to work without it when an svgalib version prior to 1.2.11 is used.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>The function should be called right after&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_init+3"><FONT color=#0000ff>vga_init</FONT></A></B>(3). The&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?bg_test+6"><FONT color=#0000ff>bg_test</FONT></A></B>(6) demos shows the principle operation.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Please note that background capabilities are in&nbsp;<B>VERY</B>&nbsp;early stages. Please do not expect that&nbsp;<B>EVERYTHING</B>&nbsp;works flawlessly when background abilities are enabled in your program.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>EXAMPLE</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_init();</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>vga_setmode(G320x200x256);</B>&nbsp;<BR><B>if (vga_runinbackground_version() == 1)</B>&nbsp;<BR><B><A href="http://www.fifi.org/cgi-bin/man2html?vga_runinbackground+1"><FONT color=#0000ff>vga_runinbackground</FONT></A>(1);</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>NOTES</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Before a program is left background capable, it should be tested well. Most programs will work just well.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>When the program is in background, it can read IO-devices (except keyboard). This can cause harm, if the programmer does not take this int account. I.e. in games using a joystick or/and mouse device the game continues reading joystick or/and mouse as it would be on foreground.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>The mouse can be made working correctly also in background, but this means that svgalib must be configured to use gpm mouse driver.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>More information about gpm-linux can be founded from latest gpm packet (by Alessandro Rubini).</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>The goto and comefrom routines provide a way to overcome this restriction.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>There are so far two different methods for background running. The first method use mmap function with FIXED option, which is not recommended by mmap's man page. It has some probability to fail. But it allows programs to think that graphics memory is always present.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>The second method is just let the functions to write directly graphics memory's save-buffer. This means that the memory area where graphics information is changes for the program. The program must always know where to write. This type of action needs much more work and leaves probably always room for race conditions.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Hopefully the first method proves to be good enough and second method can be left away.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Neither method allows the use of the graphics card's registers in background. When registers are used, vc switching is disabled, but the request are queued. Vc switching is done as soon as possible.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Generally, accelerated functions will probably cause problems, except when they are implemented carefully to check for availability of the cards registers.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>User programs should generally not use the graphics registers directly. But if program needs to use the registers, it has to check if it is in background or not. In the background state it can not use the registers. For testing the&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_oktowrite+3"><FONT color=#0000ff>vga_oktowrite</FONT></A></B>(3) function can be used. During register access the virtual console must be locked. A possible code fragment might look like:</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>vga_lockvc();</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>if (vga_oktowrite()) {</B>&nbsp;<BR>/* Register operations. */&nbsp;<BR><B>} else {</B>&nbsp;<BR>/* Registers can not be used. Alternative action. */&nbsp;<BR><B>}</B>&nbsp;<BR><B>vga_unlockvc();</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAG><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>ADVANCED NOTES</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAH><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Installation</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Background capability is enabled in svgalib by setting&nbsp;<B>BACKGROUND=y</B>&nbsp;and disabled by commenting&nbsp;<B>#BACKGROUND=y in</B>&nbsp;<I>Makefile.cfg</I>&nbsp;before compiling svgalib. Background capable svgalib is more stable with all programs. Programs do not have to use background abilities even when they are available. As of this writing, all precompiled svgalib binaries are background capable by default.&nbsp;<B>NOTICE: proc-fs must be mounted for background capability.</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAI><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Status of the background feature</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Background capability in svgalib is in an early stagei of development. There has been done lot of work for it, but probably not everything will work perfectly. This applies only to programs which actually enabled background running with&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_runinbackground+3"><FONT color=#0000ff>vga_runinbackground</FONT></A></B>(3).</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>The&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_drawline+3"><FONT color=#0000ff>vga_drawline</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_drawpixel+3"><FONT color=#0000ff>vga_drawpixel</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getclolors+3"><FONT color=#0000ff>vga_getclolors</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getpixel+3"><FONT color=#0000ff>vga_getpixel</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_screenoff+3"><FONT color=#0000ff>vga_screenoff</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_screenon+3"><FONT color=#0000ff>vga_screenon</FONT></A></B>(3),<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setegacolor+3"><FONT color=#0000ff>vga_setegacolor</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setrgbcolor+3"><FONT color=#0000ff>vga_setrgbcolor</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setcolor+3"><FONT color=#0000ff>vga_setcolor</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setpage+3"><FONT color=#0000ff>vga_setpage</FONT></A></B>(3) and&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_clear+3"><FONT color=#0000ff>vga_clear</FONT></A></B>(3) functions appear to work and calling<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setmode+3"><FONT color=#0000ff>vga_setmode</FONT></A></B>(3) is safe too but cannot change modes while in background. The remaining svgalib and vgagl function should work too but are not well tested.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Calling accelerated functions will most probably cause harm though this is worked on.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Please report problems to Pekka (see&nbsp;<B>AUTHOR</B>&nbsp;section).</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAJ><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Programming within svgalib</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>When coding within svgalib, there are same restrictions as in user programs. SVGA registers can not be used while in background. The svgalibrary has internal functions for locking and unlocking virtual console switching&nbsp;<B>__svgalib_dont_switch_vt_yet()</B>&nbsp;and<B>__svgalib_is_vt_switching_needed()</B>. These functions are not meant to be called from user program.&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_unlockvc+3"><FONT color=#0000ff>vga_unlockvc</FONT></A></B>(3) can not release vc switching if internal svgalib locking is used. This is for safety. The procedure for registers are similar to the procedure for user programs:</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>void vga_super_new_function(void) {</FONT></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;<BR><B>__svgalib_dont_switch_vt_yet();</B>&nbsp;<BR><B>if (vga_oktowrite()) {</B>&nbsp;<BR>/* Register operations. */&nbsp;<BR><B>} else {</B>&nbsp;<BR>/* Registers can not be used. Alternative action. */&nbsp;<BR><B>}</B>&nbsp;<BR><B>__svgalib_is_vt_switching_needed();</B>&nbsp;<BR><B>}</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><A name=lbAK><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></A><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>SEE ALSO</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><A href="http://www.fifi.org/cgi-bin/man2html?svgalib+7"><FONT color=#0000ff face=Calibri>svgalib</FONT></A></SPAN></B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>(7),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vgagl+7"><FONT color=#0000ff>vgagl</FONT></A></B>(7),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?libvga.config+5"><FONT color=#0000ff>libvga.config</FONT></A></B>(5),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?bg_test+6"><FONT color=#0000ff>bg_test</FONT></A></B>(6),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_accel+3"><FONT color=#0000ff>vga_accel</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_bitblt+3"><FONT color=#0000ff>vga_bitblt</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_blitwait+3"><FONT color=#0000ff>vga_blitwait</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_fillblt+3"><FONT color=#0000ff>vga_fillblt</FONT></A></B>(3),<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_hlinelistblt+3"><FONT color=#0000ff>vga_hlinelistblt</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_imageblt+3"><FONT color=#0000ff>vga_imageblt</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_init+3"><FONT color=#0000ff>vga_init</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_lockvc+3"><FONT color=#0000ff>vga_lockvc</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_oktowrite+3"><FONT color=#0000ff>vga_oktowrite</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_runinbackground_version+3"><FONT color=#0000ff>vga_runinbackground_version</FONT></A></B>(3),<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_safety_fork+3"><FONT color=#0000ff>vga_safety_fork</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setchipset+3"><FONT color=#0000ff>vga_setchipset</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setpage+3"><FONT color=#0000ff>vga_setpage</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setreadpage+3"><FONT color=#0000ff>vga_setreadpage</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setwritepage+3"><FONT color=#0000ff>vga_setwritepage</FONT></A></B>(3),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_unlockvc+3"><FONT color=#0000ff>vga_unlockvc</FONT></A></B>(3)</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN>