<H2 style="MARGIN: 13pt 0cm"><SPAN lang=EN-US style="FONT-SIZE: 21pt; LINE-HEIGHT: 173%; mso-bidi-font-size: 16.0pt"><FONT face=Cambria>What is the absolute lowest level of &#8220;drawing&#8221; abstraction in GNU/Linux?</FONT></SPAN></H2>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Motivation - Write a program in C (and Assembly, if required) to color a rectangular area in the screen red.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>STRICT requirements - GNU/Linux running with the bare minimum utilities and interfaces in</FONT></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: 'Arial','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt">&nbsp;</SPAN></SPAN><STRONG><SPAN lang=EN-US style="FONT-SIZE: 15pt; BORDER-TOP: windowtext 1pt; FONT-FAMILY: 'Arial','sans-serif'; BORDER-RIGHT: windowtext 1pt; BORDER-BOTTOM: windowtext 1pt; COLOR: black; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 0cm; BORDER-LEFT: windowtext 1pt; PADDING-RIGHT: 0cm; mso-bidi-font-size: 10.0pt; mso-border-alt: none windowtext 0cm">text/console</SPAN></STRONG><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: 'Arial','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>mode. So no X (or equivalent like Wayland/Mir), no non-default (outside POSIX, LSB, etc. provided by the kernel) library or interface and no extra assumptions except the presence of the device driver for the monitor.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Effectively, what I am looking for is information on how to write a program which will eventually send a signal through the VGA port and cable to the monitor to color a particular portion of the screen red.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Apologies if this sounds rude, but no "Why do you want to do this?" or "Why don't you use ABC library?" answer. I am trying to understand how to write an implementation of the X server or a kernel framebuffer (/dev/fb0) library for example. It is ok to provide a link to the source of a C library.</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<H4 style="MARGIN: 14pt 0cm 14.5pt"><SPAN lang=EN-US style="FONT-SIZE: 19pt; LINE-HEIGHT: 156%; mso-bidi-font-size: 14.0pt"><FONT face=Cambria>Ans</FONT></SPAN><SPAN style="FONT-SIZE: 19pt; FONT-FAMILY: &#23435;&#20307;; LINE-HEIGHT: 156%; mso-bidi-font-size: 14.0pt; mso-ascii-font-family: Cambria; mso-ascii-theme-font: major-latin; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: major-fareast; mso-hansi-font-family: Cambria; mso-hansi-theme-font: major-latin">&#65306;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 19pt; LINE-HEIGHT: 156%; mso-bidi-font-size: 14.0pt"></SPAN></H4>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT class=extract face=Calibri>no extra assumptions except the presence of the device driver for the monitor.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT class=extract face=Calibri>That means you can use X or Wayland, because those are the graphics driver infrastructure on Linux.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT class=extract face=Calibri>Linux (the Kernel) by itself doesn't contain any graphics primitives. It provides some interfaces to talk to the GPU, allocate memory on it and configure the on-screen framebuffer. But except raw framebuffer memory access the Linux kernel does have no way to perform drawing operations. For that you need some infrastructure in userspace.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT class=extract face=Calibri>Wayland builds on top of DRI2, which in turn talks to the DRM Kernel-API. Then you require GPU dependent state tracker. Mesa has state trackers for a number of GPUs and provides OpenGL and OpenVG frontends.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT class=extract face=Calibri>The NVidia and ATI propiatary, closed source graphics drivers are designed to work with X only. So with those to make use of the GPU you must use X. That's the way it is.</FONT></SPAN></P>
<P class=MsoNormal style="WORD-SPACING: 0px; MARGIN: 0cm 0cm 0pt; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>Outside of that you can manipulate the on-screen framebuffer memory through</FONT></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: 'Arial','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt">&nbsp;</SPAN></SPAN><CODE style="WHITE-SPACE: pre-wrap"><SPAN lang=EN-US style="FONT-SIZE: 15pt; BORDER-TOP: windowtext 1pt; FONT-FAMILY: Consolas; BORDER-RIGHT: windowtext 1pt; BACKGROUND: #eeeeee; BORDER-BOTTOM: windowtext 1pt; COLOR: black; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 0cm; BORDER-LEFT: windowtext 1pt; PADDING-RIGHT: 0cm; mso-bidi-font-size: 10.0pt; mso-border-alt: none windowtext 0cm">/dev/fbdev</SPAN></CODE><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>, but that's mere pixel pushing, without any GPU acceleration.</FONT></SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<H4 style="MARGIN: 14pt 0cm 14.5pt"><SPAN lang=EN-US style="FONT-SIZE: 19pt; LINE-HEIGHT: 156%; mso-bidi-font-size: 14.0pt"><FONT face=Cambria>Talk</FONT></SPAN><SPAN style="FONT-SIZE: 19pt; FONT-FAMILY: &#23435;&#20307;; LINE-HEIGHT: 156%; mso-bidi-font-size: 14.0pt; mso-ascii-font-family: Cambria; mso-ascii-theme-font: major-latin; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: major-fareast; mso-hansi-font-family: Cambria; mso-hansi-theme-font: major-latin">&#65306;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 19pt; LINE-HEIGHT: 156%; mso-bidi-font-size: 14.0pt"></SPAN></H4>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>So if I process the comments on the question and this answer, this is what I conclude. <FONT class=extract>Theoretically, I can use " some interfaces to talk to the GPU, allocate memory on it and configure the on-screen framebuffer" to create my own display infrastructure or my own OpenGL-like library in a GPU dependent way. I can also use /dev/fbdev without benefits of GPU acceleration. Practically, I would use the graphics driver, but the driver of the major vendors are dependent on X.</FONT> A quick last question - how does ncurses creates GUI-like interfaces in console mode? &#8211;<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Mozan Sykol Aug 28 '13 at 17:21</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"><FONT face=Calibri>@MozanSykol: Yes, this is essentially how it works. <FONT class=extract>Well, ncurses uses the ordinary text mode. The console is a N&#215;M grid of characters and attributes (color, background, blink). Good old VGA directly supports this, i.e. by writing the right values at the right place of memory a VGA compliant graphics card will draw the text according to this. Where VGA is not available, the Linux kernel can emulate this through the raw framebuffer memory device (/dev/fbdev). But text mode can't do any kind of fancy graphics.</FONT> &#8211;<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>datenwolf Aug 28 '13 at 17:25</FONT></SPAN>