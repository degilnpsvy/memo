<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><B><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>0. INTRODUCTION</FONT></SPAN></B></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>This is a low level graphics library for Linux, originally based on VGAlib 1.2 by Tommy Frandsen. VGAlib supported a number of standard VGA graphics modes, as well as Tseng ET4000 high resolution 256-color modes. As of now, support for many more chipsets has been added. See section&nbsp;<B>4 Overview of supported SVGA chipsets and modes</B></FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>It supports transparent virtual console switching, that is, you can switch consoles to and from text and graphics mode consoles using alt-[function key]. Also, svgalib corrects most of VGAlib's textmode corruption behaviour by catching&nbsp;<B>SIGSEGV</B>,&nbsp;<B>SIGFPE</B>,&nbsp;<B>SIGILL</B>, and other fatal signals and ensuring that a program is running in the currently visible virtual console before setting a graphics mode.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Note right here that&nbsp;<B>SIGUSR1</B>&nbsp;and&nbsp;<B>SIGUSR2</B>&nbsp;are used to manage console switching internally in&nbsp;<B>svgalib</B>. You can not use them in your programs. If your program needs to use one of those signals, svgalib can be compiled to use other signals, by editing libvga.h</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>This version includes code to hunt for a free virtual console on its own in case you are not starting the program from one (but instead over a network or modem login, from within&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?screen+1"><FONT color=#0000ff>screen</FONT></A></B>(1) or an&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?xterm+1"><FONT color=#0000ff>xterm</FONT></A></B>(1)). Provided there is a free console, this succeeds if you are root or if the svgalib calling user own the current console. This is to avoid people not using the console being able to fiddle with it. On graceful exit the program returns to the console from which it was started. Otherwise it remains in text mode at the VC which svgalib allocated to allow you to see any error messages. In any case, any I/O the svgalib makes in text mode (after calling&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_init+3"><FONT color=#0000ff>vga_init</FONT></A></B>(3)) will also take place at this new console.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>Alas, some games misuse their suid root priviledge and run as full root process. svgalib cannot detect this and allows Joe Blow User to open a new VC on the console. If this annoys you,&nbsp;<B>ROOT_VC_SHORTCUT</B>&nbsp;in&nbsp;<I>Makefile.cfg</I>&nbsp;allows you to disable allocating a new VC for root (except when he owns the current console) when you compile svgalib. This is the default.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>When the library is used by a program at run-time, first the chipset is detected and the appropriate driver is used. This means that a graphics program will work on any card that is supported by svgalib, if the mode it uses is supported by the chipset driver for that card. The library is upwardly compatible with VGAlib.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>The set of drawing functions provided by svgalib itself is limited (unchanged from VGAlib) and unoptimized; you can however use<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_setpage+3"><FONT color=#0000ff>vga_setpage</FONT></A></B>(3) and&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vga_getgraphmem+3"><FONT color=#0000ff>vga_getgraphmem</FONT></A></B>(3) (which points to the 64K VGA framebuffer) in a program or graphics library. A fast external framebuffer graphics library for linear and banked 1, 2, 3 and 4 bytes per pixel modes is included (it also indirectly supports planar VGA modes). It is documented in&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?vgagl+7"><FONT color=#0000ff>vgagl</FONT></A></B>(7).</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>One obvious application of the library is a picture viewer. Several are available, along with animation viewers. See the&nbsp;<B>7. References</B>at the end of this document.</FONT></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-SIZE: 17.5pt; mso-bidi-font-size: 11.0pt" lang=EN-US><FONT face=Calibri>I have added a simple VGA textmode font restoration utility (<B><A href="http://www.fifi.org/cgi-bin/man2html?restorefont+1"><FONT color=#0000ff>restorefont</FONT></A></B>(1)) which may help if you suffer from XFree86 textmode font corruption. It can also be used to change the textmode font. It comes with some other textmode utilities:&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?restoretextmode+1"><FONT color=#0000ff>restoretextmode</FONT></A></B>(1) (which saves/restores textmode registers),&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?restorepalette+1"><FONT color=#0000ff>restorepalette</FONT></A></B>(1), and the script&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?textmode+1"><FONT color=#0000ff>textmode</FONT></A></B>(1). If you run the&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?savetextmode+1"><FONT color=#0000ff>savetextmode</FONT></A></B>(1) script to save textmode information to&nbsp;<I>/tmp</I>, you'll be able to restore textmode by running the&nbsp;<B><A href="http://www.fifi.org/cgi-bin/man2html?textmode+1"><FONT color=#0000ff>textmode</FONT></A></B>(1) script.</FONT></SPAN>