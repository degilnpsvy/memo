<DIV class=sect2 title="Open and Close">
<DIV class=titlepage>
<DIV>
<DIV>
<H3 class=title><A name=idp11403984></A>Open and Close</H3></DIV></DIV></DIV><PRE class=synopsis>int (*firstopen) (struct drm_device *);
void (*lastclose) (struct drm_device *);
int (*open) (struct drm_device *, struct drm_file *);
void (*preclose) (struct drm_device *, struct drm_file *);
void (*postclose) (struct drm_device *, struct drm_file *);</PRE>
<DIV class=abstract title=Abstract>
<P class=title><B>Abstract</B></P>Open and close handlers. None of those methods are mandatory.</DIV>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>firstopen</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method is called by the DRM core for legacy UMS (User Mode Setting) drivers only when an application opens a device that has no other opened file handle. UMS drivers can implement it to acquire device resources. KMS drivers can't use the method and must acquire resources in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>load</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method instead.</P>
<P>Similarly the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>lastclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method is called when the last application holding a file handle opened on the device closes it, for both UMS and KMS drivers. Additionally, the method is also called at module unload time or, for hot-pluggable devices, when the device is unplugged. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>firstopen</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>lastclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>calls can thus be unbalanced.</P>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>open</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method is called every time the device is opened by an application. Drivers can allocate per-file private data in this method and store them in the struct<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=structname>drm_file</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM class=structfield><CODE>driver_priv</CODE></EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>field. Note that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>open</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method is called before<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>firstopen</CODE>.</P>
<P>The close operation is split into<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>preclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>postclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>methods. Drivers must stop and cleanup all per-file operations in the<CODE class=methodname>preclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method. For instance pending vertical blanking and page flip events must be cancelled. No per-file operation is allowed on the file handle after returning from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>preclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method.</P>
<P>Finally the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>postclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method is called as the last step of the close operation, right before calling the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>lastclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method if no other open file handle exists for the device. Drivers that have allocated per-file private data in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>open</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method should free it here.</P>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=methodname>lastclose</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method should restore CRTC and plane properties to default value, so that a subsequent open of the device will not inherit state from the previous user. It can also be used to execute delayed power switching state changes, e.g. in conjunction with the vga-switcheroo infrastructure. Beyond that KMS drivers should not do any further cleanup. Only legacy UMS drivers might need to clean up device state so that the vga console or an independent fbdev driver could take over.</P></DIV>