drm_mode_parse_command_line_for_connector<BR>Prev &nbsp;Display Modes Function Reference&nbsp; Next<BR>Name</P>
<P>drm_mode_parse_command_line_for_connector &#8212; parse command line modeline for connector<BR>Synopsis<BR>bool drm_mode_parse_command_line_for_connector (&nbsp;const char * mode_option,<BR>&nbsp;&nbsp;struct drm_connector * connector,<BR>&nbsp;&nbsp;struct drm_cmdline_mode * mode);<BR>&nbsp;<BR>Arguments</P>
<P>mode_option</P>
<P>&nbsp;&nbsp;&nbsp; optional per connector mode option <BR>connector</P>
<P>&nbsp;&nbsp;&nbsp; connector to parse modeline for <BR>mode</P>
<P>&nbsp;&nbsp;&nbsp; preallocated drm_cmdline_mode structure to fill out </P>
<P>Description</P>
<P>This parses mode_option command line modeline for modes and options to configure the connector. If mode_option is NULL the default command line modeline in fb_mode_option will be parsed instead.</P>
<P>This uses the same parameters as the fb modedb.c, except for an extra force-enable, force-enable-digital and force-disable bit at the end:</P>
<P>&lt;xres&gt;x&lt;yres&gt;[M][R][-&lt;bpp&gt;][@&lt;refresh&gt;][i][m][eDd]</P>
<P>The intermediate drm_cmdline_mode structure is required to store additional options from the command line modline like the force-enabel/disable flag.<BR>Returns</P>
<P>True if a valid modeline has been parsed, false otherwise.<BR>Prev &nbsp;Up&nbsp; Next<BR>drm_mode_connector_list_update &nbsp;Home&nbsp; drm_mode_create_from_cmdline_mode