Helper Functions
<P>&nbsp;&nbsp;&nbsp; int drm_crtc_helper_set_config(struct drm_mode_set *set);</P>
<P>&nbsp;&nbsp;&nbsp; The drm_crtc_helper_set_config helper function is a CRTC set_config implementation. It first tries to locate the best encoder for each connector by calling the connector best_encoder helper operation.</P>
<P>&nbsp;&nbsp;&nbsp; After locating the appropriate encoders, the helper function will call the mode_fixup encoder and CRTC helper operations to adjust the requested mode, or reject it completely in which case an error will be returned to the application. If the new configuration after mode adjustment is identical to the current configuration the helper function will return without performing any other operation.</P>
<P>&nbsp;&nbsp;&nbsp; If the adjusted mode is identical to the current mode but changes to the frame buffer need to be applied, the drm_crtc_helper_set_config function will call the CRTC mode_set_base helper operation. If the adjusted mode differs from the current mode, or if the mode_set_base helper operation is not provided, the helper function performs a full mode set sequence by calling the prepare, mode_set and commit CRTC and encoder helper operations, in that order.</P>
<P>&nbsp;&nbsp;&nbsp; void drm_helper_connector_dpms(struct drm_connector *connector, int mode);</P>
<P>&nbsp;&nbsp;&nbsp; The drm_helper_connector_dpms helper function is a connector dpms implementation that tracks power state of connectors. To use the function, drivers must provide dpms helper operations for CRTCs and encoders to apply the DPMS state to the device.</P>
<P>&nbsp;&nbsp;&nbsp; The mid-layer doesn't track the power state of CRTCs and encoders. The dpms helper operations can thus be called with a mode identical to the currently active mode.</P>
<P>&nbsp;&nbsp;&nbsp; int drm_helper_probe_single_connector_modes(struct drm_connector *connector,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uint32_t maxX, uint32_t maxY);</P>
<P>&nbsp;&nbsp;&nbsp; The drm_helper_probe_single_connector_modes helper function is a connector fill_modes implementation that updates the connection status for the connector and then retrieves a list of modes by calling the connector get_modes helper operation.</P>
<P>&nbsp;&nbsp;&nbsp; The function filters out modes larger than max_width and max_height if specified. It then calls the optional connector mode_valid helper operation for each mode in the probed list to check whether the mode is valid for the connector.