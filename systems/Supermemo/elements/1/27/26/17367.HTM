drm_plane_helper_check_update<BR>Prev &nbsp;Plane Helper Reference&nbsp; Next<BR>Name</P>
<P>drm_plane_helper_check_update &#8212; Check plane update for validity<BR>Synopsis<BR>int drm_plane_helper_check_update (&nbsp;struct drm_plane * plane,<BR>&nbsp;&nbsp;struct drm_crtc * crtc,<BR>&nbsp;&nbsp;struct drm_framebuffer * fb,<BR>&nbsp;&nbsp;struct drm_rect * src,<BR>&nbsp;&nbsp;struct drm_rect * dest,<BR>&nbsp;&nbsp;const struct drm_rect * clip,<BR>&nbsp;&nbsp;int min_scale,<BR>&nbsp;&nbsp;int max_scale,<BR>&nbsp;&nbsp;bool can_position,<BR>&nbsp;&nbsp;bool can_update_disabled,<BR>&nbsp;&nbsp;bool * visible);<BR>&nbsp;<BR>Arguments</P>
<P>plane</P>
<P>&nbsp;&nbsp;&nbsp; plane object to update <BR>crtc</P>
<P>&nbsp;&nbsp;&nbsp; owning CRTC of owning plane <BR>fb</P>
<P>&nbsp;&nbsp;&nbsp; framebuffer to flip onto plane <BR>src</P>
<P>&nbsp;&nbsp;&nbsp; source coordinates in 16.16 fixed point <BR>dest</P>
<P>&nbsp;&nbsp;&nbsp; integer destination coordinates <BR>clip</P>
<P>&nbsp;&nbsp;&nbsp; integer clipping coordinates <BR>min_scale</P>
<P>&nbsp;&nbsp;&nbsp; minimum src:dest scaling factor in 16.16 fixed point <BR>max_scale</P>
<P>&nbsp;&nbsp;&nbsp; maximum src:dest scaling factor in 16.16 fixed point <BR>can_position</P>
<P>&nbsp;&nbsp;&nbsp; is it legal to position the plane such that it doesn't cover the entire crtc? This will generally only be false for primary planes. <BR>can_update_disabled</P>
<P>&nbsp;&nbsp;&nbsp; can the plane be updated while the crtc is disabled? <BR>visible</P>
<P>&nbsp;&nbsp;&nbsp; output parameter indicating whether plane is still visible after clipping </P>
<P>Description</P>
<P>Checks that a desired plane update is valid. Drivers that provide their own plane handling rather than helper-provided implementations may still wish to call this function to avoid duplication of error checking code.<BR>RETURNS</P>
<P>Zero if update appears valid, error code on failure<BR>Prev &nbsp;Up&nbsp; Next<BR>hdmi_infoframe_pack &nbsp;Home&nbsp; drm_primary_helper_update