struct drm_dp_mst_topology_mgr<BR>Prev &nbsp;Display Port MST Helper Functions Reference&nbsp; Next<BR>Name</P>
<P>struct drm_dp_mst_topology_mgr &#8212; DisplayPort MST manager<BR>Synopsis</P>
<P>struct drm_dp_mst_topology_mgr {<BR>&nbsp; struct device * dev;<BR>&nbsp; struct drm_dp_mst_topology_cbs * cbs;<BR>&nbsp; struct drm_dp_aux * aux;<BR>&nbsp; int max_payloads;<BR>&nbsp; int conn_base_id;<BR>&nbsp; struct drm_dp_sideband_msg_rx down_rep_recv;<BR>&nbsp; struct drm_dp_sideband_msg_rx up_req_recv;<BR>&nbsp; struct mutex lock;<BR>&nbsp; bool mst_state;<BR>&nbsp; struct drm_dp_mst_branch * mst_primary;<BR>&nbsp; bool guid_valid;<BR>&nbsp; u8 guid[16];<BR>&nbsp; u8 dpcd[DP_RECEIVER_CAP_SIZE];<BR>&nbsp; int pbn_div;<BR>};&nbsp; </P>
<P>Members</P>
<P>dev</P>
<P>&nbsp;&nbsp;&nbsp; device pointer for adding i2c devices etc. <BR>cbs</P>
<P>&nbsp;&nbsp;&nbsp; callbacks for connector addition and destruction. max_dpcd_transaction_bytes - maximum number of bytes to read/write in one go. <BR>aux</P>
<P>&nbsp;&nbsp;&nbsp; aux channel for the DP connector. <BR>max_payloads</P>
<P>&nbsp;&nbsp;&nbsp; maximum number of payloads the GPU can generate. <BR>conn_base_id</P>
<P>&nbsp;&nbsp;&nbsp; DRM connector ID this mgr is connected to. <BR>down_rep_recv</P>
<P>&nbsp;&nbsp;&nbsp; msg receiver state for down replies. <BR>up_req_recv</P>
<P>&nbsp;&nbsp;&nbsp; msg receiver state for up requests. <BR>lock</P>
<P>&nbsp;&nbsp;&nbsp; protects mst state, primary, guid, dpcd. <BR>mst_state</P>
<P>&nbsp;&nbsp;&nbsp; if this manager is enabled for an MST capable port. <BR>mst_primary</P>
<P>&nbsp;&nbsp;&nbsp; pointer to the primary branch device. <BR>guid_valid</P>
<P>&nbsp;&nbsp;&nbsp; GUID valid for the primary branch device. <BR>guid[16]</P>
<P>&nbsp;&nbsp;&nbsp; GUID for primary port. <BR>dpcd[DP_RECEIVER_CAP_SIZE]</P>
<P>&nbsp;&nbsp;&nbsp; cache of DPCD for primary port. <BR>pbn_div</P>
<P>&nbsp;&nbsp;&nbsp; PBN to slots divisor. </P>
<P>Description</P>
<P>This struct represents the toplevel displayport MST topology manager. There should be one instance of this for every MST capable DP connector on the GPU.<BR>Prev &nbsp;Up&nbsp; Next<BR>struct drm_dp_mst_branch &nbsp;Home&nbsp; drm_dp_update_payload_part1