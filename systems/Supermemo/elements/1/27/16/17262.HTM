drm_helper_hpd_irq_event<BR>Prev &nbsp;Output Probing Helper Functions Reference&nbsp; Next<BR>Name</P>
<P>drm_helper_hpd_irq_event &#8212; hotplug processing<BR>Synopsis<BR>bool drm_helper_hpd_irq_event (&nbsp;struct drm_device * dev);<BR>&nbsp;<BR>Arguments</P>
<P>dev</P>
<P>&nbsp;&nbsp;&nbsp; drm_device </P>
<P>Description</P>
<P>Drivers can use this helper function to run a detect cycle on all connectors which have the DRM_CONNECTOR_POLL_HPD flag set in their polled member. All other connectors are ignored, which is useful to avoid reprobing fixed panels.</P>
<P>This helper function is useful for drivers which can't or don't track hotplug interrupts for each connector.</P>
<P>Drivers which support hotplug interrupts for each connector individually and which have a more fine-grained detect logic should bypass this code and directly call drm_kms_helper_hotplug_event in case the connector state changed.</P>
<P>This function must be called from process context with no mode setting locks held.</P>
<P>Note that a connector can be both polled and probed from the hotplug handler, in case the hotplug interrupt is known to be unreliable.<BR>Prev &nbsp;Up&nbsp; Next<BR>drm_kms_helper_poll_fini &nbsp;Home&nbsp; drm_fb_helper_single_add_all_connectors