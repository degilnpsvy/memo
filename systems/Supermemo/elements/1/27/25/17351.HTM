drm_rect_rotate_inv<BR>Prev &nbsp;Rectangle Utilities Reference&nbsp; Next<BR>Name</P>
<P>drm_rect_rotate_inv &#8212; Inverse rotate the rectangle<BR>Synopsis<BR>void drm_rect_rotate_inv (&nbsp;struct drm_rect * r,<BR>&nbsp;&nbsp;int width,<BR>&nbsp;&nbsp;int height,<BR>&nbsp;&nbsp;unsigned int rotation);<BR>&nbsp;<BR>Arguments</P>
<P>r</P>
<P>&nbsp;&nbsp;&nbsp; rectangle to be rotated <BR>width</P>
<P>&nbsp;&nbsp;&nbsp; Width of the coordinate space <BR>height</P>
<P>&nbsp;&nbsp;&nbsp; Height of the coordinate space <BR>rotation</P>
<P>&nbsp;&nbsp;&nbsp; Transformation whose inverse is to be applied </P>
<P>Description</P>
<P>Apply the inverse of rotation to the coordinates of rectangle r.</P>
<P>width and height combined with rotation define the location of the new origin.</P>
<P>width correcsponds to the horizontal and height to the vertical axis of the original untransformed coordinate space, so that you never have to flip them when doing a rotatation and its inverse. That is, if you do:</P>
<P>drm_rotate(r, width, height, rotation); drm_rotate_inv(r, width, height, rotation);</P>
<P>you will always get back the original rectangle.<BR>Prev &nbsp;Up&nbsp; Next<BR>drm_rect_rotate &nbsp;Home&nbsp; struct drm_flip_work