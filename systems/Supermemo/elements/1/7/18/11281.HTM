<H2 style="MARGIN: 12pt 0cm 6pt 28.8pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><EM><FONT face=&#23435;&#20307;>13.1 # A Review of SystemC Channels and Interfaces </FONT></EM></SPAN></H2>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In this section, we will review two of the four most important aspects of SystemC, channels and interfaces. The other two, modules and ports, have already been discussed in detail. Remember, SystemC channels implement communication between modules. SystemC interfaces provide an API and a means to allow independence of modules from the mechanisms of communication channels. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The basic structure of a channel is a class that inherits from one or more interfaces and a SystemC base class. The interface makes a channel usable with ports. Channels come in two flavors: primitive and hierarchical. Channels must inherit either from sc_prim_channel or sc_channel, which defines them as either primitive or hierarchical, respectively. This distinction in these latter two SystemC base classes is one of distinct capabilities and features. In other words, sc_prim_channel has capabilities not present in sc_channel and vice versa. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Primitive channels are intended to provide very simple and fast communications. They contain no hierarchy and no ports; primitive channels do not contain simulation processes. Primitive channels have the ability to use the evaluate-update paradigm as they inherit some specialized methods. These channels are discussed in the following section. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>By contrast, hierarchical channels can have their own ports and processes, and they can contain hierarchy as the name suggests. In fact, hierarchical channels are really just modules that implement one or more interfaces. Hierarchical channels are intended to model complex communications buses such as PCI, HyperTransportTM, AMBATM, or AXITM. Custom hierarchical channels are discussed later in this chapter.</FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Channels are important in SystemC because they enable several concepts: </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Appropriate channels enable safe communication among concurrent simulation processes. </FONT></SPAN></P>
<p><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Channels in conjunction with ports clarify and delineate the relationships of communication (producer vs. consumer, master vs. slave, initiator vs. target). </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"></SPAN></FONT></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Interfaces are important in SystemC because they enable the separation of communication from processing and allow independent refinement of the communication and functionality of a system. </FONT></SPAN>