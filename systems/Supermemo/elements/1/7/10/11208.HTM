<H2 style="MARGIN: 12pt 0cm 6pt 28.8pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><EM><FONT face=&#23435;&#20307;>7.1 # Introduction </FONT></EM></SPAN></H2>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Thus far, all the process types discussed have been static. In other words, once the elaboration phase completes, all SC_THREAD and SC_METHOD processes have been established. SystemC 2.1 introduced the concept of dynamically spawned processes. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Dynamic processes are important for several reasons. At the top of the list is the ability to perform temporal checks such as those supported by PSL Sugar, Vera, and other verification languages. For instance, consider a bus protocol with split transactions and timing requirements. Once a request is issued, it is important to track the completion of that transaction for verification of that transaction. Since transactions may be split, each transaction will require a separate thread to monitor. Without dynamic process support, it would be necessary to pre-allocate a number of statically defined processes to accommodate the maximum number of possible outstanding requests. </FONT></SPAN>