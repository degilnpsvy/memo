<HEAD></HEAD>
<BODY>
<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>3.6.1 # SystemC String Literals Representations </FONT></SPAN></H3>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The SystemC string literals may be used to assign values to any of the SystemC data types. SystemC string literals consist of a prefix, a magnitude and an optional sign character &#8220;+&#8221; or &#8220;-&#8221;. The optional sign may precede the prefix for decimal and sign and magnitude forms, but is not allowed with unsigned, binary, octal, and hexadecimal. Negative values for binary, octal, and hexadecimal may be expressed using a two&#8217;s complement representation. The supported prefixes are listed in Table 3.4. </FONT></SPAN></P>
<P><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">Instances of the SystemC data types may be converted to a standard C++ string using the data type&#8217;s to_string method. The format of the resulting string is specified using sc_numrep enumeration shown in the left-hand column of Table 3.4. Examples of this formatting are shown in the right-most column of the above</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"> </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">table; the values used are 13 and -13. The to_string method has two arguments: a numbers representation from column one of the table; and bool to add a representation prefix to the resulting string.</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><?xml:namespace prefix = "v" /><v:shapetype id=_x0000_t75 stroked="f" filled="f" path="m@4@5l@4@11@9@11@9@5xe" o:preferrelative="t" o:spt="75" coordsize="21600,21600"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:connecttype="rect" gradientshapeok="t" o:extrusionok="f"></v:path><?xml:namespace prefix = "o" /><o:lock aspectratio="t" v:ext="edit"></o:lock></v:shapetype><v:shape id=_x0000_i1025 style="HEIGHT: 399.75pt; WIDTH: 498pt; mso-wrap-distance-left: 0; mso-wrap-distance-right: 0; mso-position-horizontal: left; mso-position-vertical: top; mso-position-vertical-relative: line" filled="t" o:allowoverlap="f" type="#_x0000_t75"><FONT face=&#23435;&#20307;><v:fill color2="black"></v:fill><v:imagedata o:title="" src="file:///C:\DOCUME~1\DONPOP~1\LOCALS~1\Temp\msohtml1\01\clip_image001.png"></v:imagedata></FONT></v:shape></SPAN></P>
<P><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">Table 3.4<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Unified string representation for SystemC</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"></SPAN></FONT></P>
<P><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN></SPAN></P>
<P><FONT face=&#23435;&#20307;><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">string to_string(sc_numrep rep, bool wprefix); </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"></SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Fig. 3.13<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Syntax of to_string</FONT></SPAN></P></BODY>