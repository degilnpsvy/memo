<H2 style="MARGIN: 12pt 0cm 6pt 28.8pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><EM><FONT face=&#23435;&#20307;>3.4 # SystemC Integer Types </FONT></EM></SPAN></H2>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>SystemC provides signed and unsigned two&#8217;s complement versions of two basic integer data types. The two data types are a limited precision integer type, which has a maximum length of 64-bits, and a finite precision integer type, which can be much longer. These integer data types provide functionality not available in the native C++ integer types. The native C++ data types have widths that are host processor and compiler dependent. The native data types are optimized for the host processor instruction set and are very efficient. These data types are typically 8, 16, 32, or 64 bits in length. The SystemC integer data types are templated and may have data widths from 1 to hundreds of bits. In addition to configurable widths, the SystemC integer data types allow bit selections, bit range selections, and concatenation operations. </FONT></SPAN>