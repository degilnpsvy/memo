<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>3.4.1 # sc_int&lt;W&gt; and sc_uint&lt;W&gt; </FONT></SPAN></H3>
<P><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract>Most hardware needs to specify actual storage width at some level of refinement. When dealing with arithmetic, the built-in sc_int&lt;W&gt; and sc_uint&lt;W&gt; (unsigned) numeric data types (Fig. 3.6) provide an efficient way to model data with specific widths from 1- to 64-bits wide.</FONT> When modeling numbers where data width is not an integral multiple of the simulating processor&#8217;s data paths, some bit masking and shifting must be performed to fit internal computation results into the declared data format.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"></SPAN></FONT></P>
<P><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN></SPAN></P>
<P><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>sc_int&lt;LENGTH&gt; NAME...; </FONT></SPAN></SPAN></P>
<P><FONT face=&#23435;&#20307;><FONT class=extract><SPAN class=SourceText><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">sc_uint&lt;LENGTH&gt; NAME...;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"></SPAN></FONT></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>Fig. 3.6<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>Syntax of arithmetic data types </FONT></SPAN>