<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>17.2.3 # Conventions and Coding Style </FONT></SPAN></H3>
<P><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">Coding styles are a well-known issue, and lots of C++ rules and guidelines exist. Since SystemC is C++, this is a good starting point for SystemC coding guidelines. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"></SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Hardware designers have special issues to consider. Probably one of the best books written on this subject for hardware design is the Reuse Methodology Manual for System-on-a-Chip Designs by Michael Keating and Pierre Bricaud. Most of the concepts presented there have direct application to SystemC. Let&#8217;s just touch on a few. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>A name is a name, right? Wrong! Names of classes, variables, functions, and other matters are a critical part of making your code readable and understandable. If you have been observant, you will notice we&#8217;ve inserted various naming conventions specific to SystemC in the examples. For instance, processes always have a suffix of _thread, _method or _cthread. This convention is used because wait() results in a run-time error when used with SC_METHOD, and visa versa for next_trigger().</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Similarly, we adopted a convention when addressing ports and probably you should do likewise for using anything sc_signal&lt;T&gt; or otherwise supporting the evaluate-update paradigm. </FONT></SPAN>