<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>2.3.4 # SystemC Data Types </FONT></SPAN></H3>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Several hardware data types are provided in SystemC. Since the SystemC language is built on C++, all of the C++ data types are available. Also, SystemC lets you define new data types for new hardware technology (i.e., multi-valued logic) or for applications other than electronic system design. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>These data types are implemented using templated classes and generous operator overloading, so that they can be manipulated and used almost as easily as native C++ data types. Hardware data types for mathematical calculations like sc_fixed&lt;T&gt; and sc_int&lt;T&gt; allow modeling of complex calculations like DSP functions. These data types evaluate the performance of an algorithm when implemented in custom hardware or in processors without full floating-point capability. SystemC provides all the necessary methods for using hardware data types, including conversion between the hardware data types and conversion from hardware to software data types. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Non-binary hardware types are supported with four-state logic (0,1,X,Z) data types (e.g., sc_logic). Familiar data types like sc_logic and sc_lv&lt;T&gt; are provided for RTL hardware designers who need a data type to represent basic logic values or vectors of logic values. </FONT></SPAN>