<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>2.3.3 # Events, Sensitivity, and Notification </FONT></SPAN></H3>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Events, sensitivity, and notification are very important concepts for understanding the implementation of concurrency by the SystemC simulator. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;><FONT class=extract>Events are implemented with the SystemC sc_event and sc_event_queue classes. Events are caused or fired through the event class member function, notify. The notification can occur within a simulation process or as a result of activity in a channel. The simulation kernel invokes SC_METHOD and SC_THREAD when they are sensitive to an event and the event occurs.</FONT> </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>SystemC has two types of sensitivity: static and dynamic. Static sensitivity is implemented by applying the SystemC sensitive command to an SC_METHOD or SC_THREAD at elaboration time (within the constructor). Dynamic sensitivity lets a simulation process change its sensitivity on the fly. The SC_METHOD implements dynamic sensitivity with a next_trigger(arg) command. The SC_THREAD implements dynamic sensitivity with a wait(arg) command. Both SC_METHOD and SC_THREAD can switch between dynamic and static sensitivity during simulation.</FONT></SPAN>