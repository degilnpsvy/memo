<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>2.2.1 # Time Model </FONT></SPAN></H3>
<P><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract>SystemC tracks time with 64 bits of resolution using a class known as sc_time.</FONT> Global time is advanced within the kernel. SystemC provides mechanisms to obtain the current time and implement specific time delays. To support ease of</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"> </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">use, an enumerated type defines several natural time units from seconds down to femtoseconds. </SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;><FONT class=extract>For those models that require a clock, a class called sc_clock is provided.</FONT> Since many applications in SystemC do not require a clock (but do require a notion of time), the clock discussion is deferred to later chapters of the book. Additionally, clocks do not add to the fundamental understanding of the language. By the later chapters, you should be able to implement the clock class yourself with the fundamentals learned throughout the book. </FONT></SPAN>