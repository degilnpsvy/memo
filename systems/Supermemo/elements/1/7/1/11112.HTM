<H3 style="MARGIN: 12pt 0cm 6pt 36pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><FONT face=&#23435;&#20307;>1.4.5 # Productivity Tool Support </FONT></SPAN></H3>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Since SystemC is based on C++, there are a wealth of productivity tools and application-specific libraries that are available. In addition, SystemC is supported by a large and growing ecosystem of commercial suppliers. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Many of the popular C++ tools are freely available under various open source licenses. Some of these tools include integrated development environments (IDEs), performance analysis tools, and lint tools to illustrate just a few. There are many more tools available from leading software tool vendors for a small fee. These tools come with varying degrees of support. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Many of the groups using SystemC are large organizations that require ESL-specific productivity tools and technology as well as significant support. The three largest electronic design automation (EDA) vendors and an extensive list of smaller EDA companies now support SystemC. The last time we counted, the list was over 40 companies and growing. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The tools range from co-simulation with their HDL simulators to behavioral synthesis tools. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;><FONT class=extract>Possibly the biggest productivity boost is the availability of application libraries on the web in C or C++. The availability of graphic algorithms, DSP algorithms, and a plethora of other application libraries make the writing of initial models very easy. An extreme example is the use of an H.264 algorithm freely available on the web that is matched with about 20 lines of SystemC code to produce a graphics model in a matter of hours for an initial system model.</FONT> </FONT></SPAN>