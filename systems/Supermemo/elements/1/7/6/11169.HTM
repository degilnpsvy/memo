<H1 style="PAGE-BREAK-BEFORE: always; MARGIN: 12pt 0cm 6pt 21.6pt"><SPAN lang=EN-US style="FONT-SIZE: 22pt; mso-bidi-font-size: 16.0pt"><FONT face=&#23435;&#20307;>Chapter 5 A Notion of Time</FONT></SPAN></H1>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;><FONT class=extract>As a SystemC simulation runs, there are three unique time measurements: wall-clock time, processor time, and simulated time</FONT>: </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN><FONT class=extract>The simulation&#8217;s wall-clock time is the time from the start of execution to completion, including time waiting on other system activities and applications.</FONT> </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN><FONT class=extract>The simulation&#8217;s processor time is the actual time spent executing the simulation, which will always be less than the simulation&#8217;s wall-clock time.</FONT> </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN><FONT class=extract>The simulated time is the time being modeled by the simulation, and it may be less than or greater than the simulation&#8217;s wall-clock time. For example, it might take 2 seconds by your watch (wall-clock time) to simulate 15 ms (simulated time) of your design, but it may only take 1 second (processor time) of the CPU because another program was hogging the processor.</FONT> </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>SystemC simulation performance is a combination of many factors: the host system, system load, the C++ compiler, the SystemC simulator, and the model being simulated. Of these factors, the model development team has direct control over the model being simulated in various ways including using efficient coding styles and selecting the correct level of abstraction. This and other chapters identify coding styles and techniques that help create high performance SystemC models. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The remainder of this chapter focuses on the representation and control of simulated time. The SystemC simulator kernel tracks simulated time using a 64-bit unsigned integer. This integer is set to zero as the simulation starts and is increased during simulation in response to the model&#8217;s behavior. </FONT></SPAN>