<H2 style="MARGIN: 12pt 0cm 6pt 28.8pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><EM><FONT face=&#23435;&#20307;>16.1 # Introduction </FONT></EM></SPAN></H2>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The OSCI TLM 1.0 specification was created in response to a need to standardize a TLM definition. The core component of the specification offers a set of TLM interfaces that define the APIs required for unidirectional blocking interface, unidirectional non-blocking interface, and bidirectional blocking interface. The specification also defines a set of channels that implement the above interfaces. While it is possible to define your own channels, the supplied example channels should be sufficient for the user to connect most system components. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In addition to a set of APIs, the OSCI TLM standard offers other benefits including abstraction, speed, and reuse. Using the TLM components, you can design a very high-level abstract model, refine portions of the design, or mix a variety of models at different abstraction levels. Of course, there are speed trade-offs to consider as you develop your model. Earlier in this book, we discussed the different abstraction levels including un-timed, approximate-timed, and cycle-timed. At the most abstract level, the un-timed models give the best performance in terms of speed. In many cases, this model can be refined further to an approximate-timed model to achieve better accuracy, though with some simulation performancedegradation. Lastly, we need to mention the benefit of reuse in developing TLM models. As with any standardized API, one of the benefits is being able to reuse the components in different projects. In cases where there is a mixture of model abstractions, you can develop specific transactors or adaptors and still model the components together. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In the remainder of the chapter, we talk about the architecture of the TLM 1.0 standard, including the interface and channels, as well as offer an example of a TLM-based design. </FONT></SPAN>