<H2 style="MARGIN: 12pt 0cm 6pt 28.8pt"><SPAN lang=EN-US style="FONT-SIZE: 20pt; mso-bidi-font-size: 14.0pt"><EM><FONT face=&#23435;&#20307;>15.4 # Randomization </FONT></EM></SPAN></H2>
<p><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">Traditionally, hardware designs have been verified using directed testing</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"> </SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">methodology. </SPAN></FONT></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In recent years, there has been more focus on using random testing methodology to achieve wider test coverage. In many situations, verification engineers implement a combination of directed and random tests to achieve their testing goals. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In directed testing, one creates certain scenarios to test each feature of the design. If you want to vary sequences of reads/writes, packet size, address, block sizes, or data values, you must do so manually. When one creates tests using randomization, the stimulus is created using constrained randomization. The expected results can be calculated with a reference model, possibly your system model. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In a unit test environment, it may be desirable to use directed testing and make sure your design block is behaving correctly as you walk through all the scenarios. Some others advocate doing directed unit testing by way of a fully constrained (constrained to one value) random testbench. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>In system-level verification, this approach becomes tedious and time consuming. It becomes difficult for the human to consider all possible combinations of test vectors that are required to test all features in normal and boundary conditions. Using random testing methodology, you can easily create many different scenarios for the test stimulus. </FONT></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>SCV provides the infrastructure for you to create basic randomization, constrained randomization, and weighted randomization tests. We will cover the basics of these random concepts and provide some demonstration of how to use the SCV library using the standard API. We will also cover two important sc_interface_if templates used for randomization: scv_smart_ptr, and scv_bag. </FONT></SPAN>