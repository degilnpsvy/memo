<H4><A name=SECTION03111020000000000000>Nonconvex polygons</A> </H4>
<P><A name=7315></A>
<P>The assumption that <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> is convex is too limited for most applications. Now suppose that <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> is a nonconvex, polygonal subset of <SPAN class=MATH><IMG height=18 alt="$ {\cal W}$" src="http://planning.cs.uiuc.edu/img22.gif" width=25 align=bottom border=0></SPAN>. In this case <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> can be expressed as 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:convex-parts></A><!-- MATH
 \begin{equation}
{\cal O}= {\cal O}_1 \cup {\cal O}_2 \cup \cdots \cup {\cal O}_n ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=34 alt="$\displaystyle {\cal O}= {\cal O}_1 \cup {\cal O}_2 \cup \cdots \cup {\cal O}_n ,$" src="http://planning.cs.uiuc.edu/img665.gif" width=206 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>4</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>in which each <!-- MATH
 ${\cal O}_i$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal O}_i$" src="http://planning.cs.uiuc.edu/img666.gif" width=25 align=middle border=0></SPAN> is a convex, polygonal set that is expressed in terms of half-planes using (<A href="http://planning.cs.uiuc.edu/node79.html#eqn:polygon">3.3</A>). Note that <!-- MATH
 ${\cal O}_i$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal O}_i$" src="http://planning.cs.uiuc.edu/img666.gif" width=25 align=middle border=0></SPAN> and <!-- MATH
 ${\cal O}_j$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal O}_j$" src="http://planning.cs.uiuc.edu/img667.gif" width=27 align=middle border=0></SPAN> for <!-- MATH
 $i \not = j$
 --><SPAN class=MATH><IMG height=34 alt="$ i \not = j$" src="http://planning.cs.uiuc.edu/img668.gif" width=45 align=middle border=0></SPAN> need not be disjoint. Using this representation, very complicated obstacle regions in <SPAN class=MATH><IMG height=18 alt="$ {\cal W}$" src="http://planning.cs.uiuc.edu/img22.gif" width=25 align=bottom border=0></SPAN> can be defined. Although these regions may contain multiple components and holes, if <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> is bounded (i.e., <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> will fit inside of a big enough rectangular box), its boundary will consist of linear segments. 
<P>In general, more complicated representations of <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> can be defined in terms of any finite combination of unions, intersections, and set differences of primitives; however, it is always possible to simplify the representation into the form given by (<A href="http://planning.cs.uiuc.edu/node79.html#eqn:polygon">3.3</A>) and (<A href="http://planning.cs.uiuc.edu/node80.html#eqn:convex-parts">3.4</A>). A set difference can be avoided by redefining the primitive. Suppose the model requires removing a set defined by a primitive <SPAN class=MATH><IMG height=34 alt="$ H_i$" src="http://planning.cs.uiuc.edu/img642.gif" width=26 align=middle border=0></SPAN> that contains<A href="http://planning.cs.uiuc.edu/footnode.html#foot7322" name=tex2html52><SUP><SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN></SUP></A> <!-- MATH
 $f_i(x,y) < 0$
 --><SPAN class=MATH><IMG height=37 alt="$ f_i(x,y) < 0$" src="http://planning.cs.uiuc.edu/img671.gif" width=97 align=middle border=0></SPAN>. This is equivalent to keeping all points such that <!-- MATH
 $f_i(x,y) \geq 0$
 --><SPAN class=MATH><IMG height=37 alt="$ f_i(x,y) \geq 0$" src="http://planning.cs.uiuc.edu/img672.gif" width=98 align=middle border=0></SPAN>, which is equivalent to <!-- MATH
 $-f_i(x,y)
\leq 0$
 --><SPAN class=MATH><IMG height=37 alt="$ -f_i(x,y)&#10;\leq 0$" src="http://planning.cs.uiuc.edu/img673.gif" width=112 align=middle border=0></SPAN>. This can be used to define a new primitive <!-- MATH
 $H^\prime_i$
 --><SPAN class=MATH><IMG height=36 alt="$ H^\prime_i$" src="http://planning.cs.uiuc.edu/img674.gif" width=26 align=middle border=0></SPAN>, which when taken in union with other sets, is equivalent to the removal of <SPAN class=MATH><IMG height=34 alt="$ H_i$" src="http://planning.cs.uiuc.edu/img642.gif" width=26 align=middle border=0></SPAN>. Given a complicated combination of primitives, once set differences are removed, the expression can be simplified into a finite union of finite intersections by applying Boolean algebra laws. 
<P>Note that the representation of a nonconvex polygon is not unique. There are many ways to decompose <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> into convex components. The decomposition should be carefully selected to optimize computational performance in whatever algorithms that model will be used. In most cases, the components may even be allowed to overlap. Ideally, it seems that it would be nice to represent <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> with the minimum number of primitives, but automating such a decomposition may lead to an NP-hard problem (see Section <A href="http://planning.cs.uiuc.edu/node300.html#sec:lbmp">6.5.1</A> for a brief overview of NP-hardness). One efficient, practical way to decompose <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> is to apply the vertical cell decomposition algorithm, which will be presented in Section <A href="http://planning.cs.uiuc.edu/node262.html#sec:vcell">6.2.2</A>