<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN> Geometric Modeling 
<P><A name=7265></A>
<P>A wide variety of approaches and techniques for geometric modeling exist, and the particular choice usually depends on the application and the difficulty of the problem. In most cases, there are generally two alternatives: 1) a <EM>boundary representation</EM><A name=8566></A>, and 2) a <EM>solid representation</EM><A name=8568></A>. Suppose we would like to define a model of a planet. Using a boundary representation, we might write the equation of a sphere that roughly coincides with the planet's surface. Using a solid representation, we would describe the set of all points that are contained in the sphere. Both alternatives will be considered in this section. 
<P>The first step is to define the <EM>world</EM><A name=8570></A> <SPAN class=MATH><IMG height=18 alt="$ {\cal W}$" src="http://planning.cs.uiuc.edu/img22.gif" width=25 align=bottom border=0></SPAN> for which there are two possible choices: 1) a 2D world, in which <!-- MATH
 ${\cal W}= {\mathbb{R}}^2$
 --><SPAN class=MATH><IMG height=20 alt="$ {\cal W}= {\mathbb{R}}^2$" src="http://planning.cs.uiuc.edu/img217.gif" width=72 align=bottom border=0></SPAN>, and 2) a 3D world, in which <!-- MATH
 ${\cal W}= {\mathbb{R}}^3$
 --><SPAN class=MATH><IMG height=20 alt="$ {\cal W}= {\mathbb{R}}^3$" src="http://planning.cs.uiuc.edu/img640.gif" width=72 align=bottom border=0></SPAN>. These choices should be sufficient for most problems; however, one might also want to allow more complicated worlds, such as the surface of a sphere or even a higher dimensional space. Such generalities are avoided in this book because their current applications are limited. Unless otherwise stated, the world generally contains two kinds of entities: 
<OL>
<LI><B>Obstacles:</B><A name=7271></A> Portions of the world that are ``permanently'' occupied, for example, as in the walls of a building. 
<LI><B>Robots:</B> Bodies that are modeled geometrically and are controllable via a motion plan. </LI></OL>Based on the terminology, one obvious application is to model a robot that moves around in a building; however, many other possibilities exist. For example, the robot could be a flexible molecule, and the obstacles could be a folded protein. As another example, the robot could be a virtual human in a graphical simulation that involves obstacles (imagine the family of Doom-like video games). 
<P><A name=7274></A>
<P>This section presents a method for systematically constructing representations of obstacles and robots using a collection of primitives. Both obstacles and robots will be considered as (closed) subsets of <SPAN class=MATH><IMG height=18 alt="$ {\cal W}$" src="http://planning.cs.uiuc.edu/img22.gif" width=25 align=bottom border=0></SPAN>. Let the <EM>obstacle region</EM><A name=7276></A> <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> denote the set of all points in <SPAN class=MATH><IMG height=18 alt="$ {\cal W}$" src="http://planning.cs.uiuc.edu/img22.gif" width=25 align=bottom border=0></SPAN> that lie in one or more obstacles; hence, <!-- MATH
 ${\cal O}\subseteq {\cal W}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal O}\subseteq {\cal W}$" src="http://planning.cs.uiuc.edu/img641.gif" width=66 align=middle border=0></SPAN>. The next step is to define a systematic way of representing <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> that has great expressive power while being computationally efficient. Robots will be defined in a similar way; however, this will be deferred until Section <A href="http://planning.cs.uiuc.edu/node91.html#sec:rigid">3.2</A>, where transformations of geometric bodies are defined. 
<P><BR>
<HR>
<!--Table of Child-Links--><A name=CHILD_LINKS><STRONG>Subsections</STRONG></A> 
<UL class=ChildLinks>
<LI><A href="http://planning.cs.uiuc.edu/node78.html" name=tex2html2621><SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN>.<SPAN class=arabic>1</SPAN> Polygonal and Polyhedral Models</A> 
<UL>
<LI><A href="http://planning.cs.uiuc.edu/node79.html" name=tex2html2622>Convex polygons</A> 
<LI><A href="http://planning.cs.uiuc.edu/node80.html" name=tex2html2623>Nonconvex polygons</A> 
<LI><A href="http://planning.cs.uiuc.edu/node81.html" name=tex2html2624>Defining a logical predicate</A> 
<LI><A href="http://planning.cs.uiuc.edu/node82.html" name=tex2html2625>Polyhedral models</A> </LI></UL><BR>
<LI><A href="http://planning.cs.uiuc.edu/node83.html" name=tex2html2626><SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN>.<SPAN class=arabic>2</SPAN> Semi-Algebraic Models</A> 
<LI><A href="http://planning.cs.uiuc.edu/node84.html" name=tex2html2627><SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN>.<SPAN class=arabic>3</SPAN> Other Models</A> 
<UL>
<LI><A href="http://planning.cs.uiuc.edu/node85.html" name=tex2html2628>Nonconvex polygons and polyhedra</A> 
<LI><A href="http://planning.cs.uiuc.edu/node86.html" name=tex2html2629>3D triangles</A> 
<LI><A href="http://planning.cs.uiuc.edu/node87.html" name=tex2html2630>Nonuniform rational B-splines (NURBS)</A> 
<LI><A href="http://planning.cs.uiuc.edu/node88.html" name=tex2html2631>Bitmaps</A> 
<LI><A href="http://planning.cs.uiuc.edu/node89.html" name=tex2html2632>Superquadrics</A> 
<LI><A href="http://planning.cs.uiuc.edu/node90.html" name=tex2html2633>Generalized cylinders</A> </LI></UL></LI></UL>