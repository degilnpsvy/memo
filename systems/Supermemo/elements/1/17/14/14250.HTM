<H4><A name=SECTION03232010000000000000>A polygonal C-space obstacle</A> </H4>
<P><A name=12569></A><A name=12570></A>
<P>A simple algorithm for computing <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN> exists in the case of a 2D world that contains a convex polygonal obstacle <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> and a convex polygonal robot <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> [<A href="http://planning.cs.uiuc.edu/node858.html#Loz83">657</A>]. This is often called the <EM>star algorithm</EM>. For this problem, <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN> is also a convex polygon. Recall that nonconvex obstacles and robots can be modeled as the union of convex parts. The concepts discussed below can also be applied in the nonconvex case by considering <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN> as the union of convex components, each of which corresponds to a convex component of <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> colliding with a convex component of <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>. 
<P>The method is based on sorting normals to the edges of the polygons on the basis of angles. The key observation is that every edge of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN> is a translated edge from either <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> or <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>. In fact, every edge from <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN> and <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> is used exactly once in the construction of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>. The only problem is to determine the ordering of these edges of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>. Let <SPAN class=MATH><IMG height=33 alt="$ \alpha_1$" src="http://planning.cs.uiuc.edu/img1399.gif" width=24 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ \alpha_2$" src="http://planning.cs.uiuc.edu/img1400.gif" width=24 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ \alpha_n$" src="http://planning.cs.uiuc.edu/img1401.gif" width=26 align=middle border=0></SPAN> denote the angles of the inward edge normals in counterclockwise order around <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN>. Let <SPAN class=MATH><IMG height=34 alt="$ \beta_1$" src="http://planning.cs.uiuc.edu/img1402.gif" width=23 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ \beta_2$" src="http://planning.cs.uiuc.edu/img1403.gif" width=23 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ \beta_n$" src="http://planning.cs.uiuc.edu/img1404.gif" width=24 align=middle border=0></SPAN> denote the outward edge normals to <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>. After sorting both sets of angles in circular order around <!-- MATH
 ${\mathbb{S}}^1$
 --><SPAN class=MATH><IMG height=19 alt="$ {\mathbb{S}}^1$" src="http://planning.cs.uiuc.edu/img56.gif" width=23 align=bottom border=0></SPAN>, <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN> can be constructed incrementally by using the edges that correspond to the sorted normals, in the order in which they are encountered. 
<P>
<DIV align=center><A name=fig:2dobst></A><A name=13202></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 4.13:</STRONG> A triangular robot and a rectangular obstacle.</CAPTION>
<TBODY>
<TR>
<TD><IMG height=99 alt=\begin{figure}\centerline{\psfig{file=figs/2dobst.eps,width=3.0in}}\end{figure} src="http://planning.cs.uiuc.edu/img1405.gif" width=344 border=0></TD></TR></TBODY></TABLE></DIV>
<P>
<DIV align=center><A name=fig:2dobst2></A><A name=13203></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 4.14:</STRONG> (a) Slide the robot around the obstacle while keeping them both in contact. (b) The edges traced out by the origin of <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> form <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>.</CAPTION>
<TBODY>
<TR>
<TD><IMG height=192 alt="\begin{figure}\begin{center}&#10;\begin{tabular}{ccc}&#10;\psfig{file=figs/2dobst2.eps,w...&#10;...bst3.eps,width=2.5in} \\&#10;(a) &amp; &amp; (b) \\&#10;\end{tabular}&#10;\end{center}\end{figure}" src="http://planning.cs.uiuc.edu/img1406.gif" width=573 border=0></TD></TR></TBODY></TABLE></DIV>
<P>
<DIV align=center><A name=fig:2dobst4></A><A name=13204></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 4.15:</STRONG> (a) Take the inward edge normals of <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> and the outward edge normals of <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>. (b) Sort the edge normals around <!-- MATH
 ${\mathbb{S}}^1$
 --><SPAN class=MATH><IMG height=19 alt="$ {\mathbb{S}}^1$" src="http://planning.cs.uiuc.edu/img56.gif" width=23 align=bottom border=0></SPAN>. This gives the order of edges in <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>.</CAPTION>
<TBODY>
<TR>
<TD><IMG height=211 alt="\begin{figure}\begin{center}&#10;\begin{tabular}{ccc}&#10;\psfig{file=figs/2dobst4.eps,w...&#10;...obst5.eps,width=1.4in}  (a) &amp; &amp; (b) \\&#10;\end{tabular}&#10;\end{center}\end{figure}" src="http://planning.cs.uiuc.edu/img1407.gif" width=607 border=0></TD></TR></TBODY></TABLE></DIV>
<P>
<P>
<DIV><A name=exa:trirect><B>Example <SPAN class=arabic>4</SPAN>..<SPAN class=arabic>14</SPAN></B></A> (A Triangular Robot and Rectangular Obstacle) &nbsp; To gain an understanding of the method, consider the case of a triangular robot and a rectangular obstacle, as shown in Figure <A href="http://planning.cs.uiuc.edu/node162.html#fig:2dobst">4.13</A>. The black dot on <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> denotes the origin of its body frame. Consider sliding the robot around the obstacle in such a way that they are always in contact, as shown in Figure <A href="http://planning.cs.uiuc.edu/node162.html#fig:2dobst2">4.14</A>a. This corresponds to the traversal of all of the configurations in <!-- MATH
 $\partial {\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ \partial {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img1408.gif" width=45 align=middle border=0></SPAN> (the boundary of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>). The origin of <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> traces out the edges of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>, as shown in Figure <A href="http://planning.cs.uiuc.edu/node162.html#fig:2dobst2">4.14</A>b. There are seven edges, and each edge corresponds to either an edge of <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> or an edge of <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>. The directions of the normals are defined as shown in Figure <A href="http://planning.cs.uiuc.edu/node162.html#fig:2dobst4">4.15</A>a. When sorted as shown in Figure <A href="http://planning.cs.uiuc.edu/node162.html#fig:2dobst4">4.15</A>b, the edges of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN> can be incrementally constructed. <!-- MATH
 $\blacksquare$
 --><SPAN class=MATH><IMG height=16 alt="$ \blacksquare$" src="http://planning.cs.uiuc.edu/img282.gif" width=20 align=bottom border=0></SPAN> <BR></DIV>
<P></P>
<P>The running time of the algorithm is <SPAN class=MATH><IMG height=37 alt="$ O(n + m)$" src="http://planning.cs.uiuc.edu/img1409.gif" width=85 align=middle border=0></SPAN>, in which <SPAN class=MATH><IMG height=17 alt="$ n$" src="http://planning.cs.uiuc.edu/img57.gif" width=16 align=bottom border=0></SPAN> is the number of edges defining <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN>, and <SPAN class=MATH><IMG height=17 alt="$ m$" src="http://planning.cs.uiuc.edu/img112.gif" width=21 align=bottom border=0></SPAN> is the number of edges defining <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>. Note that the angles can be sorted in linear time because they already appear in counterclockwise order around <SPAN class=MATH><IMG height=18 alt="$ {\cal A}$" src="http://planning.cs.uiuc.edu/img54.gif" width=20 align=bottom border=0></SPAN> and <SPAN class=MATH><IMG height=17 alt="$ {\cal O}$" src="http://planning.cs.uiuc.edu/img55.gif" width=21 align=bottom border=0></SPAN>; they only need to be merged. If two edges are collinear, then they can be placed end-to-end as a single edge of <!-- MATH
 ${\cal C}_{obs}$
 --><SPAN class=MATH><IMG height=34 alt="$ {\cal C}_{obs}$" src="http://planning.cs.uiuc.edu/img53.gif" width=34 align=middle border=0></SPAN>.