<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN> Logic-Based Planning Methods 
<P>A huge body of research has been developed over the last few decades for planning using logic-based representations [<A href="http://planning.cs.uiuc.edu/node858.html#GhaNauTra04">382</A>,<A href="http://planning.cs.uiuc.edu/node858.html#RusNor03">839</A>]. These methods usually exploit some structure that is particular to the representation. Furthermore, numerous heuristics for accelerating performance have been developed from implementation studies. The main ideas behind some of the most influential approaches are described in this section, but without presenting particular heuristics. 
<P>Rather than survey all logic-based planning methods, this section focuses on some of the main approaches that exploit logic-based representations. Keep in mind that the searching methods of Section <A href="http://planning.cs.uiuc.edu/node39.html#sec:search">2.2</A> also apply. Once a problem is given using Formulation <A href="http://planning.cs.uiuc.edu/node59.html#for:strips">2.4</A>, the state transition graph is incrementally revealed during the search. In practice, the search graph may be huge relative to the size of the problem description. One early attempt to reduce the size of this graph was the STRIPS<A name=4115></A> planning algorithm [<A href="http://planning.cs.uiuc.edu/node858.html#FikNil71">337</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Nil80">743</A>]; it dramatically reduced the branching factor but unfortunately was not complete. The methods presented in this section represent other attempts to reduce search complexity in practice while maintaining completeness. For each method, there are some applications in which the method may be more efficient, and others for which performance may be worse. Thus, there is no clear choice of method that is independent of its particular use. 
<P><BR>
<HR>
<!--Table of Child-Links--><A name=CHILD_LINKS><STRONG>Subsections</STRONG></A> 
<UL class=ChildLinks>
<LI><A href="http://planning.cs.uiuc.edu/node62.html" name=tex2html2199><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN>.<SPAN class=arabic>1</SPAN> Searching in a Space of Partial Plans</A> 
<LI><A href="http://planning.cs.uiuc.edu/node63.html" name=tex2html2200><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN>.<SPAN class=arabic>2</SPAN> Building a Planning Graph</A> 
<UL>
<LI><A href="http://planning.cs.uiuc.edu/node64.html" name=tex2html2201>Planning graph definition</A> 
<LI><A href="http://planning.cs.uiuc.edu/node65.html" name=tex2html2202>Layer-by-layer construction</A> 
<LI><A href="http://planning.cs.uiuc.edu/node66.html" name=tex2html2203>Mutex conditions</A> 
<LI><A href="http://planning.cs.uiuc.edu/node67.html" name=tex2html2204>Plan extraction</A> </LI></UL><BR>
<LI><A href="http://planning.cs.uiuc.edu/node68.html" name=tex2html2205><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN>.<SPAN class=arabic>3</SPAN> Planning as Satisfiability</A> 
<LI><A href="http://planning.cs.uiuc.edu/node69.html" name=tex2html2206>Further Reading</A> 
<LI><A href="http://planning.cs.uiuc.edu/node70.html" name=tex2html2207>Exercises</A> </LI></UL><!--End of Table of Child-Links-->