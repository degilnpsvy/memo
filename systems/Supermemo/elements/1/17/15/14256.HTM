<H4><A name=SECTION03233020000000000000>Chains and trees of bodies</A> </H4>
<P>For chains and trees of bodies, the ideas are conceptually the same, but the algebra becomes more cumbersome. Recall that the transformation for each link is obtained by a product of homogeneous transformation matrices<A name=12750></A>, as given in (<A href="http://planning.cs.uiuc.edu/node108.html#eqn:chainmats">3.53</A>) and (<A href="http://planning.cs.uiuc.edu/node111.html#eqn:chainmats3d">3.57</A>) for the 2D and 3D cases, respectively. If the rotation part is parameterized using complex numbers for <SPAN class=MATH><IMG height=37 alt="$ SO(2)$" src="http://planning.cs.uiuc.edu/img1234.gif" width=56 align=middle border=0></SPAN> or quaternions for <SPAN class=MATH><IMG height=37 alt="$ SO(3)$" src="http://planning.cs.uiuc.edu/img71.gif" width=56 align=middle border=0></SPAN>, then each matrix consists of polynomial entries. After the matrix product is formed, polynomial expressions in terms of the configuration variables are obtained. Therefore, a semi-algebraic model can be constructed. For each link, all of the contact types need to be considered. Extrapolating from Examples <A href="http://planning.cs.uiuc.edu/node163.html#exa:cobs">4.15</A> and <A href="http://planning.cs.uiuc.edu/node165.html#exa:cobs2">4.16</A>, you can imagine that no human would ever want to do all of that by hand, but it can at least be automated. The ability to construct this representation automatically is also very important for the existence of theoretical algorithms that solve the motion planning problem combinatorially; see Section <A href="http://planning.cs.uiuc.edu/node286.html#sec:algmet">6.4</A>. 
<P>If the kinematic chains were formulated for <!-- MATH
 ${\cal W}= {\mathbb{R}}^3$
 --><SPAN class=MATH><IMG height=20 alt="$ {\cal W}= {\mathbb{R}}^3$" src="http://planning.cs.uiuc.edu/img640.gif" width=72 align=bottom border=0></SPAN> using the DH parameterization<A name=12756></A>, it may be inconvenient to convert to the quaternion representation. One way to avoid this is to use complex numbers to represent each of the <SPAN class=MATH><IMG height=34 alt="$ \theta _i$" src="http://planning.cs.uiuc.edu/img25.gif" width=19 align=middle border=0></SPAN> and <SPAN class=MATH><IMG height=33 alt="$ \alpha_i$" src="http://planning.cs.uiuc.edu/img911.gif" width=22 align=middle border=0></SPAN> variables that appear as configuration variables. This can be accomplished because only <SPAN class=MATH><IMG height=17 alt="$ \cos$" src="http://planning.cs.uiuc.edu/img1483.gif" width=30 align=bottom border=0></SPAN> and <SPAN class=MATH><IMG height=16 alt="$ \sin$" src="http://planning.cs.uiuc.edu/img1484.gif" width=28 align=bottom border=0></SPAN> functions appear in the transformation matrices. They can be replaced by the real and imaginary parts, respectively, of a complex number. The dimension will be increased, but this will be appropriately reduced after imposing the constraints that all complex numbers must have unit magnitude.