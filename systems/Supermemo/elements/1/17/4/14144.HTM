<H2><A name=SECTION02254000000000000000>Further Reading</A> </H2>
<P>Most of the ideas and methods in this chapter have been known for decades. Most of the search algorithms of Section <A href="http://planning.cs.uiuc.edu/node39.html#sec:search">2.2</A> are covered in algorithms literature as graph search [<A href="http://planning.cs.uiuc.edu/node858.html#CorLeiRivSte01">243</A>,<A href="http://planning.cs.uiuc.edu/node858.html#GooTam02">404</A>,<A href="http://planning.cs.uiuc.edu/node858.html#MegHakGarJohPap88">692</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Sed02">857</A>] and in AI literature as planning or search methods [<A href="http://planning.cs.uiuc.edu/node858.html#Kor99">551</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Nil80">743</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Nil98">744</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Pea84">777</A>,<A href="http://planning.cs.uiuc.edu/node858.html#RusNor03">839</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Win92">975</A>]. Many historical references to search in AI appear in [<A href="http://planning.cs.uiuc.edu/node858.html#RusNor03">839</A>]. Bidirectional search<A name=3250></A> was introduced in [<A href="http://planning.cs.uiuc.edu/node858.html#Poh69">797</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Poh71">798</A>] and is closely related to <EM>means-end analysis</EM><A name=4145></A> [<A href="http://planning.cs.uiuc.edu/node858.html#NewSim63">735</A>]; more discussion of bidirectional search appears in [<A href="http://planning.cs.uiuc.edu/node858.html#ChaSin77">185</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Cha83">184</A>,<A href="http://planning.cs.uiuc.edu/node858.html#KaiKai97">497</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Kwa89">569</A>,<A href="http://planning.cs.uiuc.edu/node858.html#RusNor03">839</A>]. The development of good search heuristics is critical to many applications of discrete planning. For substantial material on this topic, see [<A href="http://planning.cs.uiuc.edu/node858.html#GhaNauTra04">382</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Kor88">550</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Pea84">777</A>]. For the relationship between planning and scheduling, see [<A href="http://planning.cs.uiuc.edu/node858.html#DeaKam97">266</A>,<A href="http://planning.cs.uiuc.edu/node858.html#GhaNauTra04">382</A>,<A href="http://planning.cs.uiuc.edu/node858.html#SmiFraJon00">896</A>]. 
<P>The dynamic programming principle forms the basis of optimal control theory and many algorithms in computer science. The main ideas follow from Bellman's principle of optimality [<A href="http://planning.cs.uiuc.edu/node858.html#Bel57">84</A>,<A href="http://planning.cs.uiuc.edu/node858.html#BelDre62">85</A>]. These classic works led directly to the value-iteration methods of Section <A href="http://planning.cs.uiuc.edu/node52.html#sec:disopt">2.3</A>. For more recent material on this topic, see [<A href="http://planning.cs.uiuc.edu/node858.html#Ber01">95</A>], which includes Dijkstra's algorithm and its generalization to label-correcting algorithms. An important special version of Dijkstra's algorithm is Dial's algorithm [<A href="http://planning.cs.uiuc.edu/node858.html#Dia69">272</A>] (see [<A href="http://planning.cs.uiuc.edu/node858.html#Tsi95">946</A>] and Section <A href="http://planning.cs.uiuc.edu/node371.html#sec:gridbmp">8.2.3</A>). Throughout this book, there are close connections between planning methods and control theory. One step in this direction was taken earlier in [<A href="http://planning.cs.uiuc.edu/node858.html#DeaWel91">267</A>]. 
<P>The foundations of logic-based planning emerged from early work of Nilsson<A name=4147></A> [<A href="http://planning.cs.uiuc.edu/node858.html#FikNil71">337</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Nil80">743</A>], which contains most of the concepts introduced in Section <A href="http://planning.cs.uiuc.edu/node58.html#sec:logic">2.4</A>. Over the last few decades, an enormous body of literature has been developed. Section <A href="http://planning.cs.uiuc.edu/node61.html#sec:logplan">2.5</A> briefly surveyed some of the highlights; however, several more chapters would be needed to do this subject justice. For a comprehensive, recent treatment of logic-based planning, see [<A href="http://planning.cs.uiuc.edu/node858.html#GhaNauTra04">382</A>]; topics beyond those covered here include constraint-satisfaction planning, scheduling, and temporal logic. Other sources for logic-based planning include [<A href="http://planning.cs.uiuc.edu/node858.html#GenNil87">378</A>,<A href="http://planning.cs.uiuc.edu/node858.html#RusNor03">839</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Wel99">963</A>,<A href="http://planning.cs.uiuc.edu/node858.html#Yan97">984</A>]. A critique of benchmarks used for comparisons of logic-based planning algorithms appears in [<A href="http://planning.cs.uiuc.edu/node858.html#HowDah02">464</A>]. 
<P>Too add uncertainty or multiple decision makers to the problems covered in this chapter, jump ahead to Chapter <A href="http://planning.cs.uiuc.edu/node478.html#cha:seqper">10</A> (this may require some background from Chapter <A href="http://planning.cs.uiuc.edu/node426.html#cha:decision">9</A>). To move from searching in discrete to continuous spaces, try Chapters <A href="http://planning.cs.uiuc.edu/node181.html#cha:sampling">5</A> and <A href="http://planning.cs.uiuc.edu/node254.html#cha:comb">6</A> (some background from Chapters <A href="http://planning.cs.uiuc.edu/node76.html#cha:geom">3</A> and <A href="http://planning.cs.uiuc.edu/node123.html#cha:cspace">4</A> is required).