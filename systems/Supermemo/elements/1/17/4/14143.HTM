<H2><A name=SECTION02253000000000000000><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN>.<SPAN class=arabic>3</SPAN> Planning as Satisfiability</A> </H2>
<P><A name=3187></A>
<P>Another interesting approach is to convert the planning problem into an enormous Boolean satisfiability problem. This means that the planning problem of Formulation <A href="http://planning.cs.uiuc.edu/node59.html#for:strips">2.4</A> can be solved by determining whether some assignment of variables is possible for a Boolean expression that leads to a <SMALL><FONT size=2>TRUE </FONT></SMALL>value. Generic methods for determining satisfiability can be directly applied to the Boolean expression that encodes the planning problem. The <EM>Davis-Putnam procedure</EM><A name=4139></A> is one of the most widely known algorithms for satisfiability. It performs a depth-first search by iteratively trying assignments for variables and backtracking when assignments fail. During the search, large parts of the expression can be eliminated due to the current assignments. The algorithm is complete and reasonably efficient. Its use in solving planning problems is surveyed in [<A href="http://planning.cs.uiuc.edu/node858.html#GhaNauTra04">382</A>]. In practice, stochastic local search methods provide a reasonable alternative to the Davis-Putnam procedure [<A href="http://planning.cs.uiuc.edu/node858.html#HooStu04">459</A>]. 
<P>Suppose a planning problem has been given in terms of Formulation <A href="http://planning.cs.uiuc.edu/node59.html#for:strips">2.4</A>. All literals and operators will be tagged with a stage index. For example, a literal that appears in two different stages will be considered distinct. This kind of tagging is similar to <EM>situation calculus</EM><A name=4141></A> [<A href="http://planning.cs.uiuc.edu/node858.html#GenNil87">378</A>]; however, in that case, variables are allowed for the tags. To obtain a finite, Boolean expression the total number of stages must be declared. Let <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN> denote the number of stages at which operators can be applied. As usual, the fist stage is <SPAN class=MATH><IMG height=17 alt="$ k=1$" src="http://planning.cs.uiuc.edu/img449.gif" width=50 align=bottom border=0></SPAN> and the final stage is <!-- MATH
 $k = F = K+1$
 --><SPAN class=MATH><IMG height=34 alt="$ k = F = K+1$" src="http://planning.cs.uiuc.edu/img588.gif" width=130 align=middle border=0></SPAN>. Setting a stage limit is a significant drawback of the approach because this is usually not known before the problem is solved. A planning algorithm can assume a small value for <SPAN class=MATH><IMG height=17 alt="$ F$" src="http://planning.cs.uiuc.edu/img188.gif" width=19 align=bottom border=0></SPAN> and then gradually increase it each time the resulting Boolean expression is not satisfied. If the problem is not solvable, however, this approach iterates forever. 
<P>Let <SPAN class=MATH><IMG height=17 alt="$ \vee$" src="http://planning.cs.uiuc.edu/img589.gif" width=18 align=bottom border=0></SPAN> denote logical OR, and let <SPAN class=MATH><IMG height=17 alt="$ \wedge$" src="http://planning.cs.uiuc.edu/img590.gif" width=18 align=bottom border=0></SPAN> denote logical AND. The Boolean expression is written as a conjunction<A href="http://planning.cs.uiuc.edu/footnode.html#foot3195" name=tex2html48><SUP><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN></SUP></A> of many terms, which arise from five different sources: 
<OL>
<LI><B>Initial state:</B> A conjunction of all literals in <SPAN class=MATH><IMG height=17 alt="$ S$" src="http://planning.cs.uiuc.edu/img78.gif" width=17 align=bottom border=0></SPAN> is formed, along with the negation of all positive literals not in <SPAN class=MATH><IMG height=17 alt="$ S$" src="http://planning.cs.uiuc.edu/img78.gif" width=17 align=bottom border=0></SPAN>. These are all tagged with <SPAN class=MATH><IMG height=17 alt="$ 1$" src="http://planning.cs.uiuc.edu/img43.gif" width=14 align=bottom border=0></SPAN>, the initial stage index. 
<LI><B>Goal state:</B> A conjunction of all literals in <SPAN class=MATH><IMG height=17 alt="$ G$" src="http://planning.cs.uiuc.edu/img509.gif" width=20 align=bottom border=0></SPAN>, tagged with the final stage index, <SPAN class=MATH><IMG height=34 alt="$ F = K+1$" src="http://planning.cs.uiuc.edu/img363.gif" width=94 align=middle border=0></SPAN>. 
<LI><B>Operator encodings:</B> Each operator must be copied over the stages. For each <SPAN class=MATH><IMG height=34 alt="$ o \in O$" src="http://planning.cs.uiuc.edu/img591.gif" width=52 align=middle border=0></SPAN>, let <SPAN class=MATH><IMG height=33 alt="$ o_k$" src="http://planning.cs.uiuc.edu/img592.gif" width=22 align=middle border=0></SPAN> denote the operator applied at stage <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN>. A conjunction is formed over all operators at all stages. For each <SPAN class=MATH><IMG height=33 alt="$ o_k$" src="http://planning.cs.uiuc.edu/img592.gif" width=22 align=middle border=0></SPAN>, the expression is 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
\neg o_k \vee \left( p_1 \wedge p_2 \wedge \cdots \wedge p_m \wedge
e_1 \wedge e_2 \wedge \cdots \wedge e_n \right) ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=37 alt="$\displaystyle \neg o_k \vee \left( p_1 \wedge p_2 \wedge \cdots \wedge p_m \wedge e_1 \wedge e_2 \wedge \cdots \wedge e_n \right) ,$" src="http://planning.cs.uiuc.edu/img593.gif" width=378 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>33</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>in which <SPAN class=MATH><IMG height=33 alt="$ p_1$" src="http://planning.cs.uiuc.edu/img594.gif" width=22 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ p_m$" src="http://planning.cs.uiuc.edu/img595.gif" width=27 align=middle border=0></SPAN> are the preconditions of <SPAN class=MATH><IMG height=33 alt="$ o_k$" src="http://planning.cs.uiuc.edu/img592.gif" width=22 align=middle border=0></SPAN>, and <SPAN class=MATH><IMG height=33 alt="$ e_1$" src="http://planning.cs.uiuc.edu/img596.gif" width=21 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ e_n$" src="http://planning.cs.uiuc.edu/img597.gif" width=22 align=middle border=0></SPAN> are the effects of <SPAN class=MATH><IMG height=33 alt="$ o_k$" src="http://planning.cs.uiuc.edu/img592.gif" width=22 align=middle border=0></SPAN>. 
<LI><B>Frame axioms:</B> <A name=3203></A>The next part is to encode the implicit assumption that every literal that is not an effect of the applied operator remains unchanged in the next stage. This can alternatively be stated as follows: If a literal <SPAN class=MATH><IMG height=17 alt="$ l$" src="http://planning.cs.uiuc.edu/img549.gif" width=11 align=bottom border=0></SPAN> becomes negated to <SPAN class=MATH><IMG height=17 alt="$ \neg l$" src="http://planning.cs.uiuc.edu/img598.gif" width=23 align=bottom border=0></SPAN>, then an operator that includes <SPAN class=MATH><IMG height=17 alt="$ \neg l$" src="http://planning.cs.uiuc.edu/img598.gif" width=23 align=bottom border=0></SPAN> as an effect must have been executed. (If <SPAN class=MATH><IMG height=17 alt="$ l$" src="http://planning.cs.uiuc.edu/img549.gif" width=11 align=bottom border=0></SPAN> was already a negative literal, then <SPAN class=MATH><IMG height=17 alt="$ \neg l$" src="http://planning.cs.uiuc.edu/img598.gif" width=23 align=bottom border=0></SPAN> is a positive literal.) For each stage and literal, an expression is needed. Suppose that <SPAN class=MATH><IMG height=34 alt="$ l_k$" src="http://planning.cs.uiuc.edu/img599.gif" width=18 align=middle border=0></SPAN> and <SPAN class=MATH><IMG height=34 alt="$ l_{k+1}$" src="http://planning.cs.uiuc.edu/img600.gif" width=36 align=middle border=0></SPAN> are the same literal but are tagged for different stages. The expression is 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
(l_k \vee \neg l_{k+1}) \vee (o_{k,1} \vee o_{k,2} \vee \cdots \vee o_{k,j}) ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=37 alt="$\displaystyle (l_k \vee \neg l_{k+1}) \vee (o_{k,1} \vee o_{k,2} \vee \cdots \vee o_{k,j}) ,$" src="http://planning.cs.uiuc.edu/img601.gif" width=307 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>34</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>in which <SPAN class=MATH><IMG height=33 alt="$ o_{k,1}$" src="http://planning.cs.uiuc.edu/img602.gif" width=32 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ o_{k,j}$" src="http://planning.cs.uiuc.edu/img603.gif" width=32 align=middle border=0></SPAN> are the operators, tagged for stage <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN>, that contain <SPAN class=MATH><IMG height=34 alt="$ l_{k+1}$" src="http://planning.cs.uiuc.edu/img600.gif" width=36 align=middle border=0></SPAN> as an effect. This ensures that if <SPAN class=MATH><IMG height=34 alt="$ \neg l_k$" src="http://planning.cs.uiuc.edu/img604.gif" width=31 align=middle border=0></SPAN> appears, followed by <SPAN class=MATH><IMG height=34 alt="$ l_{k+1}$" src="http://planning.cs.uiuc.edu/img600.gif" width=36 align=middle border=0></SPAN>, then some operator must have caused the change. 
<LI><B>Complete exclusion axiom:</B> <A name=3216></A>This indicates that only one operator applies at every stage. For every stage <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN>, and any pair of stage-tagged operators <SPAN class=MATH><IMG height=33 alt="$ o_k$" src="http://planning.cs.uiuc.edu/img592.gif" width=22 align=middle border=0></SPAN> and <SPAN class=MATH><IMG height=36 alt="$ o'_k$" src="http://planning.cs.uiuc.edu/img605.gif" width=22 align=middle border=0></SPAN>, the expression is 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
\neg o_k \vee \neg o'_k ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=38 alt="$\displaystyle \neg o_k \vee \neg o'_k ,$" src="http://planning.cs.uiuc.edu/img606.gif" width=91 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>35</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>which is logically equivalent to <!-- MATH
 $\neg(o_k \wedge o'_k)$
 --><SPAN class=MATH><IMG height=37 alt="$ \neg(o_k \wedge o'_k)$" src="http://planning.cs.uiuc.edu/img607.gif" width=88 align=middle border=0></SPAN> (meaning, ``not both at the same stage''). </LI></OL>It is shown in [<A href="http://planning.cs.uiuc.edu/node858.html#KauMcaSel96">512</A>] that a solution plan exists if and only if the resulting Boolean expression is satisfiable. 
<P>The following example illustrates the construction. 
<P>
<P>
<DIV><A name=exa:flashbool><B>Example <SPAN class=arabic>2</SPAN>..<SPAN class=arabic>9</SPAN></B></A> (The Flashlight Problem as a Boolean Expression) &nbsp; <A name=3223></A>A Boolean expression will be constructed for Example <A href="http://planning.cs.uiuc.edu/node59.html#exa:flashlight">2.6</A>. Each of the expressions given below is joined into one large expression by connecting them with <SPAN class=MATH><IMG height=17 alt="$ \wedge$" src="http://planning.cs.uiuc.edu/img590.gif" width=18 align=bottom border=0></SPAN>'s. 
<P>The expression for the initial state is 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
O(C,F,1) \wedge \neg I(B1,F,1) \wedge \neg I(B2,F,1) ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=37 alt="$\displaystyle O(C,F,1) \wedge \neg I(B1,F,1) \wedge \neg I(B2,F,1) ,$" src="http://planning.cs.uiuc.edu/img608.gif" width=335 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>36</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>which uses the abbreviated names, and the stage tag has been added as an argument to the predicates. The expression for the goal state is 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
O(C,F,5) \wedge I(B1,F,5) \wedge I(B2,F,5) ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=37 alt="$\displaystyle O(C,F,5) \wedge I(B1,F,5) \wedge I(B2,F,5) ,$" src="http://planning.cs.uiuc.edu/img609.gif" width=309 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>37</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>which indicates that the goal must be achieved at stage <SPAN class=MATH><IMG height=17 alt="$ k=5$" src="http://planning.cs.uiuc.edu/img428.gif" width=50 align=bottom border=0></SPAN>. This value was determined because we already know the solution plan from (<A href="http://planning.cs.uiuc.edu/node59.html#eqn:flashplan">2.24</A>). The method will also work correctly for a larger value of <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN>. The expressions for the operators are 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
\begin{split}
\neg PC_k & \vee (\neg O(C,F,k) \wedge O(C,F,k+1)) \\
\neg RC_k & \vee (O(C,F,k) \wedge \neg O(C,F,k+1)) \\
\neg I1_k & \vee (\neg O(C,F,k) \wedge \neg I(B1,F,k) \wedge I(B1,F,k+1)) \\
\neg I2_k & \vee (\neg O(C,F,k) \wedge \neg I(B2,F,k) \wedge I(B2,F,k+1))
\end{split}
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=114 alt="\begin{displaymath}\begin{split}\neg PC_k &amp; \vee (\neg O(C,F,k) \wedge O(C,F,k+1...&#10;... O(C,F,k) \wedge \neg I(B2,F,k) \wedge I(B2,F,k+1)) \end{split}\end{displaymath}" src="http://planning.cs.uiuc.edu/img610.gif" width=443 border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>38</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>for each <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN> from <SPAN class=MATH><IMG height=17 alt="$ 1$" src="http://planning.cs.uiuc.edu/img43.gif" width=14 align=bottom border=0></SPAN> to <SPAN class=MATH><IMG height=17 alt="$ 4$" src="http://planning.cs.uiuc.edu/img6.gif" width=14 align=bottom border=0></SPAN>. 
<P>The frame axioms yield the expressions 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
\begin{split}
(O(C,F,k) \vee \neg O(C,F,k+1)) & \vee (PC_k) \\
(\neg O(C,F,k) \vee O(C,F,k+1)) & \vee (RC_k) \\
(I(B1,F,k) \vee \neg I(B1,F,k+1)) & \vee (I1_k) \\
(\neg I(B1,F,k) \vee I(B1,F,k+1)) & \\
(I(B2,F,k) \vee \neg I(B2,F,k+1)) & \vee (I2_k) \\
(\neg I(B2,F,k) \vee I(B2,F,k+1)) & ,
\end{split}
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=169 alt="\begin{displaymath}\begin{split}(O(C,F,k) \vee \neg O(C,F,k+1)) &amp; \vee (PC_k) \\...&#10;...vee (I2_k)  (\neg I(B2,F,k) \vee I(B2,F,k+1)) &amp; , \end{split}\end{displaymath}" src="http://planning.cs.uiuc.edu/img611.gif" width=326 border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>39</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>for each <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN> from <SPAN class=MATH><IMG height=17 alt="$ 1$" src="http://planning.cs.uiuc.edu/img43.gif" width=14 align=bottom border=0></SPAN> to <SPAN class=MATH><IMG height=17 alt="$ 4$" src="http://planning.cs.uiuc.edu/img6.gif" width=14 align=bottom border=0></SPAN>. No operators remove batteries from the flashlight. Hence, two of the expressions list no operators. 
<P>Finally, the complete exclusion axiom yields the expressions 
<P></P>
<DIV class=mathdisplay align=center>
<TABLE cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=right><SPAN class=MATH><IMG height=34 alt="$\displaystyle \neg RC_k$" src="http://planning.cs.uiuc.edu/img612.gif" width=54 align=middle border=0></SPAN></TD>
<TD noWrap align=left><SPAN class=MATH><IMG height=34 alt="$\displaystyle \vee \neg PC_k$" src="http://planning.cs.uiuc.edu/img613.gif" width=66 align=middle border=0></SPAN></TD>
<TD noWrap align=right><SPAN class=MATH><IMG height=34 alt="$\displaystyle \qquad \neg RC_k$" src="http://planning.cs.uiuc.edu/img614.gif" width=91 align=middle border=0></SPAN></TD>
<TD noWrap align=left><SPAN class=MATH><IMG height=34 alt="$\displaystyle \vee \neg O1_k$" src="http://planning.cs.uiuc.edu/img615.gif" width=63 align=middle border=0></SPAN></TD>
<TD noWrap align=right><SPAN class=MATH><IMG height=34 alt="$\displaystyle \qquad \neg RC_k$" src="http://planning.cs.uiuc.edu/img614.gif" width=91 align=middle border=0></SPAN></TD>
<TD noWrap align=left><SPAN class=MATH><IMG height=34 alt="$\displaystyle \vee \neg O2_k$" src="http://planning.cs.uiuc.edu/img616.gif" width=63 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>40</SPAN>)</TD></TR>
<TR vAlign=center>
<TD noWrap align=right><SPAN class=MATH><IMG height=34 alt="$\displaystyle \neg PC_k$" src="http://planning.cs.uiuc.edu/img617.gif" width=54 align=middle border=0></SPAN></TD>
<TD noWrap align=left><SPAN class=MATH><IMG height=34 alt="$\displaystyle \vee \neg O1_k$" src="http://planning.cs.uiuc.edu/img615.gif" width=63 align=middle border=0></SPAN></TD>
<TD noWrap align=right><SPAN class=MATH><IMG height=34 alt="$\displaystyle \qquad \neg PC_k$" src="http://planning.cs.uiuc.edu/img618.gif" width=91 align=middle border=0></SPAN></TD>
<TD noWrap align=left><SPAN class=MATH><IMG height=34 alt="$\displaystyle \vee \neg O2_k$" src="http://planning.cs.uiuc.edu/img616.gif" width=63 align=middle border=0></SPAN></TD>
<TD noWrap align=right><SPAN class=MATH><IMG height=34 alt="$\displaystyle \qquad \neg O1_k$" src="http://planning.cs.uiuc.edu/img619.gif" width=87 align=middle border=0></SPAN></TD>
<TD noWrap align=left><SPAN class=MATH><IMG height=34 alt="$\displaystyle \vee \neg O2_k ,$" src="http://planning.cs.uiuc.edu/img620.gif" width=68 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>&nbsp;&nbsp;&nbsp;</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>for each <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN> from <SPAN class=MATH><IMG height=17 alt="$ 1$" src="http://planning.cs.uiuc.edu/img43.gif" width=14 align=bottom border=0></SPAN> to <SPAN class=MATH><IMG height=17 alt="$ 4$" src="http://planning.cs.uiuc.edu/img6.gif" width=14 align=bottom border=0></SPAN>. The full problem is encoded by combining all of the given expressions into an enormous conjunction. The expression is satisfied by assigning <SMALL><FONT size=2>TRUE </FONT></SMALL>values to <SPAN class=MATH><IMG height=34 alt="$ RC_1$" src="http://planning.cs.uiuc.edu/img621.gif" width=40 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ IB1_2$" src="http://planning.cs.uiuc.edu/img622.gif" width=47 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ IB2_3$" src="http://planning.cs.uiuc.edu/img623.gif" width=47 align=middle border=0></SPAN>, and <SPAN class=MATH><IMG height=34 alt="$ PC_4$" src="http://planning.cs.uiuc.edu/img624.gif" width=40 align=middle border=0></SPAN>. An alternative solution is <SPAN class=MATH><IMG height=34 alt="$ RC_1$" src="http://planning.cs.uiuc.edu/img621.gif" width=40 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ IB2_2$" src="http://planning.cs.uiuc.edu/img625.gif" width=47 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ IB1_3$" src="http://planning.cs.uiuc.edu/img626.gif" width=47 align=middle border=0></SPAN>, and <SPAN class=MATH><IMG height=34 alt="$ PC_4$" src="http://planning.cs.uiuc.edu/img624.gif" width=40 align=middle border=0></SPAN>. The stage index tags indicate the order that the actions are applied in the recovered plan. <!-- MATH
 $\blacksquare$
 --><SPAN class=MATH><IMG height=16 alt="$ \blacksquare$" src="http://planning.cs.uiuc.edu/img282.gif" width=20 align=bottom border=0></SPAN> <BR></DIV>