<DT><FONT class=clozed><CODE>$(error </CODE><VAR>text</VAR><CODE>...)</CODE></FONT> 
<DD><A name=index-error-667></A><A name=index-error_002c-stopping-on-668></A><A name=index-stopping-make-669></A>Generates a fatal error where the message is <VAR>text</VAR>. Note that the error is generated whenever this function is evaluated. So, if you put it inside a recipe or on the right side of a recursive variable assignment, it won't be evaluated until later. The <VAR>text</VAR> will be expanded before the error is generated. 
<P>For example, <PRE class=example>          ifdef ERROR1
          $(error error is $(ERROR1))
          endif
</PRE>
<P class=noindent>will generate a fatal error during the read of the makefile if the <CODE>make</CODE> variable <CODE>ERROR1</CODE> is defined. Or, <PRE class=example><FONT class=extract>          ERR = $(error found an error!)
          
          .PHONY: err
          err: ; $(ERR)
</FONT></PRE>
<P class=noindent><FONT class=extract>will generate a fatal error while <CODE>make</CODE> is running, if the <CODE>err</CODE> target is invoked. <BR></FONT></P></DD>