<DT>Lex for Ratfor programs 
<DD><SAMP><VAR>n</VAR><SPAN class=file>.r</SPAN></SAMP> is made automatically from <SAMP><VAR>n</VAR><SPAN class=file>.l</SPAN></SAMP> by running Lex. The actual recipe is &#8216;<SAMP><SPAN class=samp>$(LEX) $(LFLAGS)</SPAN></SAMP>&#8217;. 
<P>The convention of using the same suffix &#8216;<SAMP><SPAN class=samp>.l</SPAN></SAMP>&#8217; for all Lex files regardless of whether they produce C code or Ratfor code makes it impossible for <CODE>make</CODE> to determine automatically which of the two languages you are using in any particular case. If <CODE>make</CODE> is called upon to remake an object file from a &#8216;<SAMP><SPAN class=samp>.l</SPAN></SAMP>&#8217; file, it must guess which compiler to use. It will guess the C compiler, because that is more common. If you are using Ratfor, make sure <CODE>make</CODE> knows this by mentioning <SAMP><VAR>n</VAR><SPAN class=file>.r</SPAN></SAMP> in the makefile. Or, if you are using Ratfor exclusively, with no C files, remove &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217; from the list of implicit rule suffixes with: <PRE class=example>          .SUFFIXES:
          .SUFFIXES: .o .r .f .l ...</PRE></DD>