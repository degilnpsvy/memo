For example, the <CODE>file</CODE> function can be useful if your build system has a limited command line size and your recipe runs a command that can accept arguments from a file as well. 
<P></P>
<P>&nbsp;</P>
<P><FONT class=clozed>Many commands use the convention that an argument prefixed with an <CODE>@</CODE> specifies a file containing more arguments. Then you might write your recipe in this way: </FONT></P><PRE class=example><FONT class=clozed>     program: $(OBJECTS)
             $(file &gt;$@.in,$^)
             $(CMD) $(CMDFLAGS) @$@.in
             @rm $@.in
</FONT></PRE>
<P><FONT class=clozed>If the command required each argument to be on a separate line of the input file, you might write your recipe like this: </FONT><PRE class=example><FONT class=clozed>     program: $(OBJECTS)
             $(file &gt;$@.in,) $(foreach O,$^,$(file &gt;&gt;$@.in,$O))
             $(CMD) $(CMDFLAGS) @$@.in
             @rm $@.i</FONT>n</PRE>