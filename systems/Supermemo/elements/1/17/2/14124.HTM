Backward search 
<P>Backward versions of any of the forward search algorithms of Section <A href="http://planning.cs.uiuc.edu/node41.html#sec:partsearch">2.2.2</A> can be made. For example, a backward version of Dijkstra's algorithm can be made by starting from <SPAN class=MATH><IMG height=33 alt="$ {x_{G}}$" src="http://planning.cs.uiuc.edu/img215.gif" width=27 align=middle border=0></SPAN>. To create backward search algorithms, suppose that there is a single goal state, <SPAN class=MATH><IMG height=33 alt="$ {x_{G}}$" src="http://planning.cs.uiuc.edu/img215.gif" width=27 align=middle border=0></SPAN>. For many planning problems, it might be the case that the branching factor is large when starting from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>. In this case, it might be more efficient to start the search at a goal state and work backward until the initial state is encountered. A general template for this approach is given in Figure <A href="http://planning.cs.uiuc.edu/node49.html#fig:backwardsearch">2.6</A>. For forward search, recall that an action <!-- MATH
 $u \in U(x)$
 --><SPAN class=MATH><IMG height=37 alt="$ u \in U(x)$" src="http://planning.cs.uiuc.edu/img156.gif" width=79 align=middle border=0></SPAN> is applied from <SPAN class=MATH><IMG height=34 alt="$ x \in X$" src="http://planning.cs.uiuc.edu/img228.gif" width=56 align=middle border=0></SPAN> to obtain a new state, <!-- MATH
 $x' =
f(x,u)$
 --><SPAN class=MATH><IMG height=37 alt="$ x' = f(x,u)$" src="http://planning.cs.uiuc.edu/img264.gif" width=100 align=middle border=0></SPAN>. For backward search, a frequent computation will be to determine for some <SPAN class=MATH><IMG height=18 alt="$ x'$" src="http://planning.cs.uiuc.edu/img254.gif" width=20 align=bottom border=0></SPAN>, the preceding state <SPAN class=MATH><IMG height=34 alt="$ x \in X$" src="http://planning.cs.uiuc.edu/img228.gif" width=56 align=middle border=0></SPAN>, and action <!-- MATH
 $u \in U(x)$
 --><SPAN class=MATH><IMG height=37 alt="$ u \in U(x)$" src="http://planning.cs.uiuc.edu/img156.gif" width=79 align=middle border=0></SPAN> such that <!-- MATH
 $x' = f(x,u)$
 --><SPAN class=MATH><IMG height=37 alt="$ x' = f(x,u)$" src="http://planning.cs.uiuc.edu/img264.gif" width=100 align=middle border=0></SPAN>. The template in Figure <A href="http://planning.cs.uiuc.edu/node49.html#fig:backwardsearch">2.6</A> can be extended to handle a goal region, <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN>, by inserting all <!-- MATH
 ${x_{G}}\in {X_{G}}$
 --><SPAN class=MATH><IMG height=34 alt="$ {x_{G}}\in {X_{G}}$" src="http://planning.cs.uiuc.edu/img326.gif" width=77 align=middle border=0></SPAN> into <SPAN class=MATH><IMG height=34 alt="$ Q$" src="http://planning.cs.uiuc.edu/img187.gif" width=20 align=middle border=0></SPAN> in line 1 and marking them as visited. 
<P>For most problems, it may be preferable to precompute a representation of the state transition function, <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN>, that is ``backward'' to be consistent with the search algorithm. Some convenient notation will now be constructed for the backward version of <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN>. Let <!-- MATH
 ${U^{-1}}=
\{(x,u) \in X \times U \;|\; x \in X, u \in U(x)\}$
 --><SPAN class=MATH><IMG height=38 alt="$ {U^{-1}}=&#10;\{(x,u) \in X \times U \;\vert\; x \in X, u \in U(x)\}$" src="http://planning.cs.uiuc.edu/img327.gif" width=352 align=middle border=0></SPAN>, which represents the set of all state-action pairs and can also be considered as the domain of <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN>. Imagine from a given state <SPAN class=MATH><IMG height=36 alt="$ x' \in X$" src="http://planning.cs.uiuc.edu/img266.gif" width=60 align=middle border=0></SPAN>, the set of all <!-- MATH
 $(x,u) \in {U^{-1}}$
 --><SPAN class=MATH><IMG height=38 alt="$ (x,u) \in {U^{-1}}$" src="http://planning.cs.uiuc.edu/img328.gif" width=105 align=middle border=0></SPAN> that map to <SPAN class=MATH><IMG height=18 alt="$ x'$" src="http://planning.cs.uiuc.edu/img254.gif" width=20 align=bottom border=0></SPAN> using <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN>. This can be considered as a <EM>backward action space</EM><A name=3594></A>, defined formally for any <SPAN class=MATH><IMG height=36 alt="$ x' \in X$" src="http://planning.cs.uiuc.edu/img266.gif" width=60 align=middle border=0></SPAN> as 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
{U^{-1}}(x') = \{ (x,u) \in {U^{-1}}\;|\; x' = f(x,u) \} .
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=40 alt="$\displaystyle {U^{-1}}(x') = \{ (x,u) \in {U^{-1}}\;\vert\; x' = f(x,u) \} .$" src="http://planning.cs.uiuc.edu/img329.gif" width=329 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>For convenience, let <SPAN class=MATH><IMG height=19 alt="$ u^{-1}$" src="http://planning.cs.uiuc.edu/img330.gif" width=33 align=bottom border=0></SPAN> denote a state-action pair <SPAN class=MATH><IMG height=37 alt="$ (x,u)$" src="http://planning.cs.uiuc.edu/img331.gif" width=49 align=middle border=0></SPAN> that belongs to some <!-- MATH
 ${U^{-1}}(x')$
 --><SPAN class=MATH><IMG height=38 alt="$ {U^{-1}}(x')$" src="http://planning.cs.uiuc.edu/img332.gif" width=67 align=middle border=0></SPAN>. From any <!-- MATH
 $u^{-1}\in {U^{-1}}(x')$
 --><SPAN class=MATH><IMG height=38 alt="$ u^{-1}\in {U^{-1}}(x')$" src="http://planning.cs.uiuc.edu/img333.gif" width=119 align=middle border=0></SPAN>, there is a unique <SPAN class=MATH><IMG height=34 alt="$ x \in X$" src="http://planning.cs.uiuc.edu/img228.gif" width=56 align=middle border=0></SPAN>. Thus, let <SPAN class=MATH><IMG height=38 alt="$ {f^{-1}}$" src="http://planning.cs.uiuc.edu/img334.gif" width=34 align=middle border=0></SPAN> denote a <EM>backward state transition function</EM> that yields <SPAN class=MATH><IMG height=17 alt="$ x$" src="http://planning.cs.uiuc.edu/img86.gif" width=15 align=bottom border=0></SPAN> from <SPAN class=MATH><IMG height=18 alt="$ x'$" src="http://planning.cs.uiuc.edu/img254.gif" width=20 align=bottom border=0></SPAN> and <!-- MATH
 $u^{-1}\in
{U^{-1}}(x')$
 --><SPAN class=MATH><IMG height=38 alt="$ u^{-1}\in {U^{-1}}(x')$" src="http://planning.cs.uiuc.edu/img333.gif" width=119 align=middle border=0></SPAN>. This defines a <EM>backward state transition equation</EM><A name=3611></A>, <!-- MATH
 $x = {f^{-1}}(x',u^{-1})$
 --><SPAN class=MATH><IMG height=38 alt="$ x = {f^{-1}}(x',u^{-1})$" src="http://planning.cs.uiuc.edu/img335.gif" width=137 align=middle border=0></SPAN>, which looks very similar to the forward version, <!-- MATH
 $x' = f(x,u)$
 --><SPAN class=MATH><IMG height=37 alt="$ x' = f(x,u)$" src="http://planning.cs.uiuc.edu/img264.gif" width=100 align=middle border=0></SPAN>. 
<P>The interpretation of <SPAN class=MATH><IMG height=38 alt="$ {f^{-1}}$" src="http://planning.cs.uiuc.edu/img334.gif" width=34 align=middle border=0></SPAN> is easy to capture in terms of the state transition graph: reverse the direction of every edge. This makes finding a plan in the reversed graph using backward search equivalent to finding one in the original graph using forward search. The backward state transition function is the variant of <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN> that is obtained after reversing all of the edges. Each <SPAN class=MATH><IMG height=19 alt="$ u^{-1}$" src="http://planning.cs.uiuc.edu/img330.gif" width=33 align=bottom border=0></SPAN> is a reversed edge. Since there is a perfect symmetry with respect to the forward search of Section <A href="http://planning.cs.uiuc.edu/node40.html#sec:gfs">2.2.1</A>, any of the search algorithm variants from Section <A href="http://planning.cs.uiuc.edu/node41.html#sec:partsearch">2.2.2</A> can be adapted to the template in Figure <A href="http://planning.cs.uiuc.edu/node49.html#fig:backwardsearch">2.6</A>, provided that <SPAN class=MATH><IMG height=38 alt="$ {f^{-1}}$" src="http://planning.cs.uiuc.edu/img334.gif" width=34 align=middle border=0></SPAN> has been defined. <A name=2564></A>
<P>
<DIV align=center><A name=fig:backwardsearch></A><A name=3339></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 2.6:</STRONG> A general template for backward search. </CAPTION>
<TBODY>
<TR>
<TD><IMG height=330 alt="\begin{figure}\noindent \rule{\columnwidth}{0.25mm}&#10;BACKWARD\_SEARCH \\&#10;\begin{...&#10;... return} FAILURE \\&#10;\end{tabular} \\&#10;\rule{\columnwidth}{0.25mm}\end{figure}" src="http://planning.cs.uiuc.edu/img336.gif" width=556 border=0></TD></TR></TBODY></TABLE></DIV>