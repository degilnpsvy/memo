Iterative deepening 
<P>The <EM>iterative deepening</EM><A name=3564></A> approach is usually preferable if the search tree has a large branching factor (i.e., there are many more vertices in the next level than in the current level). This could occur if there are many actions per state and only a few states are revisited. The idea is to use depth-first search and find all states that are distance <SPAN class=MATH><IMG height=16 alt="$ i$" src="http://planning.cs.uiuc.edu/img70.gif" width=11 align=bottom border=0></SPAN> or less from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>. If the goal is not found, then the previous work is discarded, and depth first is applied to find all states of distance <SPAN class=MATH><IMG height=33 alt="$ i+1$" src="http://planning.cs.uiuc.edu/img321.gif" width=44 align=middle border=0></SPAN> or less from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>. This generally iterates from <SPAN class=MATH><IMG height=16 alt="$ i=1$" src="http://planning.cs.uiuc.edu/img322.gif" width=46 align=bottom border=0></SPAN> and proceeds indefinitely until the goal is found. Iterative deepening can be viewed as a way of converting depth-first search into a systematic search method. The motivation for discarding the work of previous iterations is that the number of states reached for <SPAN class=MATH><IMG height=33 alt="$ i+1$" src="http://planning.cs.uiuc.edu/img321.gif" width=44 align=middle border=0></SPAN> is expected to far exceed (e.g., by a factor of <SPAN class=MATH><IMG height=17 alt="$ 10$" src="http://planning.cs.uiuc.edu/img323.gif" width=23 align=bottom border=0></SPAN>) the number reached for <SPAN class=MATH><IMG height=16 alt="$ i$" src="http://planning.cs.uiuc.edu/img70.gif" width=11 align=bottom border=0></SPAN>. Therefore, once the commitment has been made to reach level <SPAN class=MATH><IMG height=33 alt="$ i+1$" src="http://planning.cs.uiuc.edu/img321.gif" width=44 align=middle border=0></SPAN>, the cost of all previous iterations is negligible. 
<P>The iterative deepening method has better worst-case performance than breadth-first search for many problems. Furthermore, the space requirements are reduced because the queue in breadth-first search is usually much larger than for depth-first search. If the nearest goal state is <SPAN class=MATH><IMG height=16 alt="$ i$" src="http://planning.cs.uiuc.edu/img70.gif" width=11 align=bottom border=0></SPAN> steps from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>, breadth-first search in the worst case might reach nearly all states of distance <SPAN class=MATH><IMG height=33 alt="$ i+1$" src="http://planning.cs.uiuc.edu/img321.gif" width=44 align=middle border=0></SPAN> before terminating successfully. This occurs each time a state <!-- MATH
 $x \not \in
{X_{G}}$
 --><SPAN class=MATH><IMG height=34 alt="$ x \not \in&#10;{X_{G}}$" src="http://planning.cs.uiuc.edu/img324.gif" width=66 align=middle border=0></SPAN> of distance <SPAN class=MATH><IMG height=16 alt="$ i$" src="http://planning.cs.uiuc.edu/img70.gif" width=11 align=bottom border=0></SPAN> from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN> is reached because all new states that can be reached in one step are placed onto <SPAN class=MATH><IMG height=34 alt="$ {Q}$" src="http://planning.cs.uiuc.edu/img7.gif" width=20 align=middle border=0></SPAN>. The <SPAN class=MATH><IMG height=17 alt="$ A^*$" src="http://planning.cs.uiuc.edu/img288.gif" width=26 align=bottom border=0></SPAN> idea can be combined with iterative deepening to yield <SPAN class=MATH><IMG height=17 alt="$ IDA^*$" src="http://planning.cs.uiuc.edu/img325.gif" width=52 align=bottom border=0></SPAN>, in which <SPAN class=MATH><IMG height=16 alt="$ i$" src="http://planning.cs.uiuc.edu/img70.gif" width=11 align=bottom border=0></SPAN> is replaced by <!-- MATH
 $C^*(x') + \hat{G}^*(x')$
 --><SPAN class=MATH><IMG height=44 alt="$ C^*(x') + \hat{G}^*(x')$" src="http://planning.cs.uiuc.edu/img317.gif" width=132 align=middle border=0></SPAN>. In each iteration of <SPAN class=MATH><IMG height=17 alt="$ IDA^*$" src="http://planning.cs.uiuc.edu/img325.gif" width=52 align=bottom border=0></SPAN>, the allowed total cost gradually increases [<A href="http://planning.cs.uiuc.edu/node858.html#Pea84">777</A>]. <A name=2545></A><A name=2546></A><A name=2547></A>