Bidirectional search 
<P>Now that forward and backward search have been covered, the next reasonable idea is to conduct a bidirectional search. The general search template given in Figure <A href="http://planning.cs.uiuc.edu/node50.html#fig:bidirectional">2.7</A> can be considered as a combination of the two in Figures <A href="http://planning.cs.uiuc.edu/node40.html#fig:gfs">2.4</A> and <A href="http://planning.cs.uiuc.edu/node49.html#fig:backwardsearch">2.6</A>. One tree is grown from the initial state, and the other is grown from the goal state (assume again that <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN> is a singleton, <!-- MATH
 $\{{x_{G}}\}$
 --><SPAN class=MATH><IMG height=37 alt="$ \{{x_{G}}\}$" src="http://planning.cs.uiuc.edu/img337.gif" width=46 align=middle border=0></SPAN>). The search terminates with success when the two trees meet. Failure occurs if either priority queue has been exhausted. For many problems, bidirectional search can dramatically reduce the amount of required exploration. There are Dijkstra and <SPAN class=MATH><IMG height=17 alt="$ A^*$" src="http://planning.cs.uiuc.edu/img288.gif" width=26 align=bottom border=0></SPAN> variants of bidirectional search, which lead to optimal solutions. For best-first and other variants, it may be challenging to ensure that the two trees meet quickly. They might come very close to each other and then fail to connect. Additional heuristics may help in some settings to guide the trees into each other. One can even extend this framework to allow any number of search trees. This may be desirable in some applications, but connecting the trees becomes even more complicated and expensive. 
<P>
<DIV align=center><A name=fig:bidirectional></A><A name=3340></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 2.7:</STRONG> A general template for bidirectional search.</CAPTION>
<TBODY>
<TR>
<TD><IMG height=629 alt="\begin{figure}\noindent \rule{\columnwidth}{0.25mm}&#10;BIDIRECTIONAL\_SEARCH \\&#10;\b...&#10;... return} FAILURE \\&#10;\end{tabular} \\&#10;\rule{\columnwidth}{0.25mm}\end{figure}" src="http://planning.cs.uiuc.edu/img338.gif" width=556 border=0></TD></TR></TBODY></TABLE></DIV>