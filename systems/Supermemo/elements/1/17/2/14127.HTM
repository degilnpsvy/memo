<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN> Discrete Optimal Planning 
<P><A name=2644></A>
<P>This section extends Formulation <A href="http://planning.cs.uiuc.edu/node37.html#for:dfp">2.1</A> to allow optimal planning problems to be defined. Rather than being satisfied with any sequence of actions that leads to the goal set, suppose we would like a solution that optimizes some criterion, such as time, distance, or energy consumed. Three important extensions will be made: 1) A stage index will be used to conveniently indicate the current plan step; 2) a cost functional will be introduced, which behaves like a taxi meter by indicating how much cost accumulates during the plan execution; and 3) a termination action will be introduced, which intuitively indicates when it is time to stop the plan and fix the total cost. 
<P>The presentation involves three phases. First, the problem of finding optimal paths of a fixed length is covered in Section <A href="http://planning.cs.uiuc.edu/node53.html#sec:oflp">2.3.1</A>. The approach, called <EM>value iteration</EM>, involves iteratively computing optimal cost-to-go functions over the state space. Although this case is not very useful by itself, it is much easier to understand than the general case of variable-length plans. Once the concepts from this section are understood, their extension to variable-length plans will be much clearer and is covered in Section <A href="http://planning.cs.uiuc.edu/node56.html#sec:dopgc">2.3.2</A>. Finally, Section <A href="http://planning.cs.uiuc.edu/node57.html#sec:dijrev">2.3.3</A> explains the close relationship between value iteration and Dijkstra's algorithm, which was covered in Section <A href="http://planning.cs.uiuc.edu/node40.html#sec:gfs">2.2.1</A>. 
<P>With nearly all optimization problems, there is the arbitrary, symmetric choice of whether to define a criterion to <EM>minimize</EM> or <EM>maximize</EM>. If the cost is a kind of energy or expense, then minimization seems sensible, as is typical in robotics and control theory. If the cost is a kind of reward, as in investment planning or in most AI books, then maximization is preferred. Although this issue remains throughout the book, we will choose to minimize everything. If maximization is instead preferred, then multiplying the costs by <SPAN class=MATH><IMG height=33 alt="$ -1$" src="http://planning.cs.uiuc.edu/img351.gif" width=29 align=middle border=0></SPAN> and swapping minimizations with maximizations should suffice. 
<P>The fixed-length optimal planning formulation will be given shortly, but first we introduce some new notation. Let <SPAN class=MATH><IMG height=33 alt="$ \pi _K$" src="http://planning.cs.uiuc.edu/img352.gif" width=28 align=middle border=0></SPAN> denote a <EM><SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN>-step plan</EM>, which is a sequence <SPAN class=MATH><IMG height=37 alt="$ (u_1$" src="http://planning.cs.uiuc.edu/img353.gif" width=30 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ u_2$" src="http://planning.cs.uiuc.edu/img175.gif" width=23 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=37 alt="$ u_K)$" src="http://planning.cs.uiuc.edu/img354.gif" width=36 align=middle border=0></SPAN> of <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN> actions. If <SPAN class=MATH><IMG height=33 alt="$ \pi _K$" src="http://planning.cs.uiuc.edu/img352.gif" width=28 align=middle border=0></SPAN> and <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN> are given, then a sequence of states, <SPAN class=MATH><IMG height=37 alt="$ (x_1$" src="http://planning.cs.uiuc.edu/img355.gif" width=30 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ x_2$" src="http://planning.cs.uiuc.edu/img40.gif" width=23 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=37 alt="$ x_{K+1})$" src="http://planning.cs.uiuc.edu/img356.gif" width=53 align=middle border=0></SPAN>, can be derived using the state transition function, <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN>. Initially, <!-- MATH
 $x_1 = {x_{I}}$
 --><SPAN class=MATH><IMG height=33 alt="$ x_1 = {x_{I}}$" src="http://planning.cs.uiuc.edu/img357.gif" width=66 align=middle border=0></SPAN>, and each subsequent state is obtained by <!-- MATH
 $x_{k+1} = f(x_k,u_k)$
 --><SPAN class=MATH><IMG height=37 alt="$ x_{k+1} = f(x_k,u_k)$" src="http://planning.cs.uiuc.edu/img135.gif" width=138 align=middle border=0></SPAN>. 
<P>The model is now given; the most important addition with respect to Formulation <A href="http://planning.cs.uiuc.edu/node37.html#for:dfp">2.1</A> is <SPAN class=MATH><IMG height=17 alt="$ L$" src="http://planning.cs.uiuc.edu/img83.gif" width=18 align=bottom border=0></SPAN>, the cost functional. 
<P>
<DIV><B>Formulation <SPAN class=arabic>2</SPAN>..<SPAN class=arabic>2</SPAN></B> (Discrete Fixed-Length Optimal Planning) &nbsp; <A name=for:dflop></A>
<OL>
<LI>All of the components from Formulation <A href="http://planning.cs.uiuc.edu/node37.html#for:dfp">2.1</A> are inherited directly: <SPAN class=MATH><IMG height=17 alt="$ X$" src="http://planning.cs.uiuc.edu/img8.gif" width=22 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=37 alt="$ U(x)$" src="http://planning.cs.uiuc.edu/img256.gif" width=45 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ f$" src="http://planning.cs.uiuc.edu/img14.gif" width=16 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>, and <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN>, except here it is assumed that <SPAN class=MATH><IMG height=17 alt="$ X$" src="http://planning.cs.uiuc.edu/img8.gif" width=22 align=bottom border=0></SPAN> is finite (some algorithms may easily extend to the case in which <SPAN class=MATH><IMG height=17 alt="$ X$" src="http://planning.cs.uiuc.edu/img8.gif" width=22 align=bottom border=0></SPAN> is countably infinite, but this will not be considered here). 
<LI>A number, <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN>, of <I>stages</I>, which is the exact length of a plan (measured as the number of actions, <SPAN class=MATH><IMG height=33 alt="$ u_1$" src="http://planning.cs.uiuc.edu/img358.gif" width=23 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ u_2$" src="http://planning.cs.uiuc.edu/img175.gif" width=23 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=17 alt="$ \ldots $" src="http://planning.cs.uiuc.edu/img94.gif" width=27 align=bottom border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ u_K$" src="http://planning.cs.uiuc.edu/img359.gif" width=28 align=middle border=0></SPAN>). States may also obtain a stage index. For example, <SPAN class=MATH><IMG height=33 alt="$ x_{k+1}$" src="http://planning.cs.uiuc.edu/img133.gif" width=41 align=middle border=0></SPAN> denotes the state obtained after <SPAN class=MATH><IMG height=33 alt="$ u_k$" src="http://planning.cs.uiuc.edu/img360.gif" width=24 align=middle border=0></SPAN> is applied. 
<LI>Let <SPAN class=MATH><IMG height=17 alt="$ L$" src="http://planning.cs.uiuc.edu/img83.gif" width=18 align=bottom border=0></SPAN> denote a stage-additive cost (or loss) functional, which is applied to a <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN>-step plan, <SPAN class=MATH><IMG height=33 alt="$ \pi _K$" src="http://planning.cs.uiuc.edu/img352.gif" width=28 align=middle border=0></SPAN>. This means that the sequence <!-- MATH
 $(u_1,\ldots,u_K)$
 --><SPAN class=MATH><IMG height=37 alt="$ (u_1,\ldots,u_K)$" src="http://planning.cs.uiuc.edu/img361.gif" width=103 align=middle border=0></SPAN> of actions and the sequence <!-- MATH
 $(x_1,\ldots,x_{K+1})$
 --><SPAN class=MATH><IMG height=37 alt="$ (x_1,\ldots,x_{K+1})$" src="http://planning.cs.uiuc.edu/img362.gif" width=120 align=middle border=0></SPAN> of states may appear in an expression of <SPAN class=MATH><IMG height=17 alt="$ L$" src="http://planning.cs.uiuc.edu/img83.gif" width=18 align=bottom border=0></SPAN>. For convenience, let <SPAN class=MATH><IMG height=17 alt="$ F$" src="http://planning.cs.uiuc.edu/img188.gif" width=19 align=bottom border=0></SPAN> denote the <EM>final stage</EM>, <SPAN class=MATH><IMG height=34 alt="$ F = K+1$" src="http://planning.cs.uiuc.edu/img363.gif" width=94 align=middle border=0></SPAN> (the application of <SPAN class=MATH><IMG height=33 alt="$ u_K$" src="http://planning.cs.uiuc.edu/img359.gif" width=28 align=middle border=0></SPAN> advances the stage to <SPAN class=MATH><IMG height=34 alt="$ K+1$" src="http://planning.cs.uiuc.edu/img364.gif" width=54 align=middle border=0></SPAN>). The <EM>cost functional</EM><A name=3859></A> is 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:discf></A><!-- MATH
 \begin{equation}
L(\pi _K) = \sum_{k=1}^K l(x_k,u_k) + l_F(x_F) .
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=77 alt="$\displaystyle L(\pi _K) = \sum_{k=1}^K l(x_k,u_k) + l_F(x_F) .$" src="http://planning.cs.uiuc.edu/img365.gif" width=260 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>4</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>The <EM>cost term</EM> <!-- MATH
 $l(x_k,u_k)$
 --><SPAN class=MATH><IMG height=37 alt="$ l(x_k,u_k)$" src="http://planning.cs.uiuc.edu/img3.gif" width=71 align=middle border=0></SPAN> yields a real value for every <SPAN class=MATH><IMG height=34 alt="$ x_k&#10;\in X$" src="http://planning.cs.uiuc.edu/img366.gif" width=64 align=middle border=0></SPAN> and <!-- MATH
 $u_k \in U(x_k)$
 --><SPAN class=MATH><IMG height=37 alt="$ u_k \in U(x_k)$" src="http://planning.cs.uiuc.edu/img134.gif" width=95 align=middle border=0></SPAN>. The <EM>final term</EM> <SPAN class=MATH><IMG height=37 alt="$ l_F(x_F)$" src="http://planning.cs.uiuc.edu/img367.gif" width=58 align=middle border=0></SPAN> is outside of the sum and is defined as <!-- MATH
 $l_F(x_F) = 0$
 --><SPAN class=MATH><IMG height=37 alt="$ l_F(x_F) = 0$" src="http://planning.cs.uiuc.edu/img368.gif" width=92 align=middle border=0></SPAN> if <!-- MATH
 $x_F \in
{X_{G}}$
 --><SPAN class=MATH><IMG height=34 alt="$ x_F \in&#10;{X_{G}}$" src="http://planning.cs.uiuc.edu/img369.gif" width=77 align=middle border=0></SPAN>, and <!-- MATH
 $l_F(x_F) = \infty$
 --><SPAN class=MATH><IMG height=37 alt="$ l_F(x_F) = \infty$" src="http://planning.cs.uiuc.edu/img370.gif" width=102 align=middle border=0></SPAN> otherwise. </LI></OL></DIV>
<P></P>
<P>An important comment must be made regarding <SPAN class=MATH><IMG height=34 alt="$ l_F$" src="http://planning.cs.uiuc.edu/img371.gif" width=22 align=middle border=0></SPAN>. Including <SPAN class=MATH><IMG height=34 alt="$ l_F$" src="http://planning.cs.uiuc.edu/img371.gif" width=22 align=middle border=0></SPAN> in (<A href="http://planning.cs.uiuc.edu/node52.html#eqn:discf">2.4</A>) is actually unnecessary if it is agreed in advance that <SPAN class=MATH><IMG height=17 alt="$ L$" src="http://planning.cs.uiuc.edu/img83.gif" width=18 align=bottom border=0></SPAN> will only be applied to evaluate plans that reach <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN>. It would then be undefined for all other plans. The algorithms to be presented shortly will also function nicely under this assumption; however, the notation and explanation can become more cumbersome because the action space must always be restricted to ensure that successful plans are produced. Instead of this, the domain of <SPAN class=MATH><IMG height=17 alt="$ L$" src="http://planning.cs.uiuc.edu/img83.gif" width=18 align=bottom border=0></SPAN> is extended to include all plans, and those that do not reach <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN> are penalized with infinite cost so that they are eliminated automatically in any optimization steps. At some point, the role of <SPAN class=MATH><IMG height=34 alt="$ l_F$" src="http://planning.cs.uiuc.edu/img371.gif" width=22 align=middle border=0></SPAN> may become confusing, and it is helpful to remember that it is just a trick to convert feasibility constraints into a straightforward optimization (<!-- MATH
 $L(\pi _K) = \infty$
 --> <SPAN class=MATH><IMG height=37 alt="$ L(\pi _K) = \infty$" src="http://planning.cs.uiuc.edu/img372.gif" width=100 align=middle border=0></SPAN> means <EM>not feasible</EM> and <!-- MATH
 $L(\pi _K) < \infty$
 --><SPAN class=MATH><IMG height=37 alt="$ L(\pi _K) < \infty$" src="http://planning.cs.uiuc.edu/img373.gif" width=100 align=middle border=0></SPAN> means <EM>feasible with cost <SPAN class=MATH><IMG height=37 alt="$ L(\pi _K)$" src="http://planning.cs.uiuc.edu/img374.gif" width=56 align=middle border=0></SPAN></EM>). 
<P>Now the task is to find a plan that minimizes <SPAN class=MATH><IMG height=17 alt="$ L$" src="http://planning.cs.uiuc.edu/img83.gif" width=18 align=bottom border=0></SPAN>. To obtain a feasible planning problem like Formulation <A href="http://planning.cs.uiuc.edu/node37.html#for:dfp">2.1</A> but restricted to <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN>-step plans, let <!-- MATH
 $l(x,u) \equiv 0$
 --><SPAN class=MATH><IMG height=37 alt="$ l(x,u) \equiv 0$" src="http://planning.cs.uiuc.edu/img375.gif" width=90 align=middle border=0></SPAN>. To obtain a planning problem that requires minimizing the number of stages, let <!-- MATH
 $l(x,u) \equiv 1$
 --><SPAN class=MATH><IMG height=37 alt="$ l(x,u) \equiv 1$" src="http://planning.cs.uiuc.edu/img376.gif" width=90 align=middle border=0></SPAN>. The possibility also exists of having goals that are less ``crisp'' by letting <SPAN class=MATH><IMG height=37 alt="$ l_F(x)$" src="http://planning.cs.uiuc.edu/img377.gif" width=47 align=middle border=0></SPAN> vary for different <!-- MATH
 $x \in
{X_{G}}$
 --><SPAN class=MATH><IMG height=34 alt="$ x \in {X_{G}}$" src="http://planning.cs.uiuc.edu/img287.gif" width=66 align=middle border=0></SPAN>, as opposed to <!-- MATH
 $l_F(x) = 0$
 --><SPAN class=MATH><IMG height=37 alt="$ l_F(x) = 0$" src="http://planning.cs.uiuc.edu/img378.gif" width=81 align=middle border=0></SPAN>. This is much more general than what was allowed with feasible planning because now states may take on any value, as opposed to being classified as inside or outside of <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN>. 
<P><BR>
<HR>
<!--Table of Child-Links--><A name=CHILD_LINKS><STRONG>Subsections</STRONG></A> 
<UL class=ChildLinks>
<LI><A href="http://planning.cs.uiuc.edu/node53.html" name=tex2html2072><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN> Optimal Fixed-Length Plans</A> 
<UL>
<LI><A href="http://planning.cs.uiuc.edu/node54.html" name=tex2html2073><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN>.<SPAN class=arabic>1</SPAN> Backward value iteration</A> 
<LI><A href="http://planning.cs.uiuc.edu/node55.html" name=tex2html2074><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN>.<SPAN class=arabic>2</SPAN> Forward value iteration</A> </LI></UL><BR>
<LI><A href="http://planning.cs.uiuc.edu/node56.html" name=tex2html2075><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>2</SPAN> Optimal Plans of Unspecified Lengths</A> 
<LI><A href="http://planning.cs.uiuc.edu/node57.html" name=tex2html2076><SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>3</SPAN> Dijkstra Revisited</A> </LI></UL><!--End of Table of Child-Links-->