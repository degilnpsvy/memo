<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>3</SPAN>.<SPAN class=arabic>1</SPAN>.<SPAN class=arabic>1</SPAN> Backward value iteration 
<P>As for the search methods, there are both forward and backward versions of the approach. The backward case will be covered first. Even though it may appear superficially to be easier to progress from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>, it turns out that progressing backward from <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN> is notationally simpler. The forward case will then be covered once some additional notation is introduced. 
<P>The key to deriving long optimal plans from shorter ones lies in the construction of optimal cost-to-go functions over <SPAN class=MATH><IMG height=17 alt="$ X$" src="http://planning.cs.uiuc.edu/img8.gif" width=22 align=bottom border=0></SPAN>. For <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN> from <SPAN class=MATH><IMG height=17 alt="$ 1$" src="http://planning.cs.uiuc.edu/img43.gif" width=14 align=bottom border=0></SPAN> to <SPAN class=MATH><IMG height=17 alt="$ F$" src="http://planning.cs.uiuc.edu/img188.gif" width=19 align=bottom border=0></SPAN>, let <SPAN class=MATH><IMG height=34 alt="$ G^*_k$" src="http://planning.cs.uiuc.edu/img380.gif" width=28 align=middle border=0></SPAN> denote the cost that accumulates from stage <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN> to <SPAN class=MATH><IMG height=17 alt="$ F$" src="http://planning.cs.uiuc.edu/img188.gif" width=19 align=bottom border=0></SPAN> under the execution of the optimal plan: 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgk></A><!-- MATH
 \begin{equation}
G^*_k(x_k) = \min_{u_k,\ldots,u_K}
\left\{ \sum_{i=k}^{K} l(x_i,u_i) + l_F(x_F) \right\} .
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=77 alt="$\displaystyle G^*_k(x_k) = \min_{u_k,\ldots,u_K} \left\{ \sum_{i=k}^{K} l(x_i,u_i) + l_F(x_F) \right\} .$" src="http://planning.cs.uiuc.edu/img381.gif" width=349 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>5</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>Inside of the <SPAN class=MATH><IMG height=16 alt="$ \min$" src="http://planning.cs.uiuc.edu/img382.gif" width=36 align=bottom border=0></SPAN> of (<A href="http://planning.cs.uiuc.edu/node54.html#eqn:ctgk">2.5</A>) are the last <SPAN class=MATH><IMG height=34 alt="$ F-k$" src="http://planning.cs.uiuc.edu/img383.gif" width=53 align=middle border=0></SPAN> terms of the cost functional, (<A href="http://planning.cs.uiuc.edu/node52.html#eqn:discf">2.4</A>). The optimal cost-to-go for the boundary condition of <SPAN class=MATH><IMG height=17 alt="$ k = F$" src="http://planning.cs.uiuc.edu/img384.gif" width=55 align=bottom border=0></SPAN> reduces to 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgf></A><!-- MATH
 \begin{equation}
G^*_F(x_F) = l_F(x_F) .
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=37 alt="$\displaystyle G^*_F(x_F) = l_F(x_F) .$" src="http://planning.cs.uiuc.edu/img385.gif" width=151 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>6</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>This makes intuitive sense: Since there are no stages in which an action can be applied, the final stage cost is immediately received. 
<P>Now consider an algorithm that makes <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN> passes over <SPAN class=MATH><IMG height=17 alt="$ X$" src="http://planning.cs.uiuc.edu/img8.gif" width=22 align=bottom border=0></SPAN>, each time computing <SPAN class=MATH><IMG height=34 alt="$ G^*_k$" src="http://planning.cs.uiuc.edu/img380.gif" width=28 align=middle border=0></SPAN> from <SPAN class=MATH><IMG height=34 alt="$ G^*_{k+1}$" src="http://planning.cs.uiuc.edu/img386.gif" width=45 align=middle border=0></SPAN>, as <SPAN class=MATH><IMG height=17 alt="$ k$" src="http://planning.cs.uiuc.edu/img91.gif" width=15 align=bottom border=0></SPAN> ranges from <SPAN class=MATH><IMG height=17 alt="$ F$" src="http://planning.cs.uiuc.edu/img188.gif" width=19 align=bottom border=0></SPAN> down to <SPAN class=MATH><IMG height=17 alt="$ 1$" src="http://planning.cs.uiuc.edu/img43.gif" width=14 align=bottom border=0></SPAN>. In the first iteration, <SPAN class=MATH><IMG height=34 alt="$ G^*_F$" src="http://planning.cs.uiuc.edu/img387.gif" width=31 align=middle border=0></SPAN> is copied from <SPAN class=MATH><IMG height=34 alt="$ l_F$" src="http://planning.cs.uiuc.edu/img371.gif" width=22 align=middle border=0></SPAN> without significant effort. In the second iteration, <SPAN class=MATH><IMG height=34 alt="$ G^*_K$" src="http://planning.cs.uiuc.edu/img388.gif" width=33 align=middle border=0></SPAN> is computed for each <SPAN class=MATH><IMG height=34 alt="$ x_K \in X$" src="http://planning.cs.uiuc.edu/img389.gif" width=69 align=middle border=0></SPAN> as 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgK></A><!-- MATH
 \begin{equation}
G^*_K(x_K) = \min_{u_K} 
\Big\{ l(x_K,u_K) + l_F(x_F) \Big\} .
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=52 alt="$\displaystyle G^*_K(x_K) = \min_{u_K} \Big\{ l(x_K,u_K) + l_F(x_F) \Big\} .$" src="http://planning.cs.uiuc.edu/img390.gif" width=314 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>7</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>Since <!-- MATH
 $l_F = G^*_F$
 --><SPAN class=MATH><IMG height=34 alt="$ l_F = G^*_F$" src="http://planning.cs.uiuc.edu/img391.gif" width=73 align=middle border=0></SPAN> and <!-- MATH
 $x_F = f(x_K,u_K)$
 --><SPAN class=MATH><IMG height=37 alt="$ x_F = f(x_K,u_K)$" src="http://planning.cs.uiuc.edu/img392.gif" width=133 align=middle border=0></SPAN>, substitutions can be made into (<A href="http://planning.cs.uiuc.edu/node54.html#eqn:ctgK">2.7</A>) to obtain 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgK2></A><!-- MATH
 \begin{equation}
G^*_K(x_K) = \min_{u_K} 
\Big\{ l(x_K,u_K) + G^*_F(f(x_K,u_K)) \Big\},
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=52 alt="$\displaystyle G^*_K(x_K) = \min_{u_K} \Big\{ l(x_K,u_K) + G^*_F(f(x_K,u_K)) \Big\},$" src="http://planning.cs.uiuc.edu/img393.gif" width=383 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>8</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>which is straightforward to compute for each <SPAN class=MATH><IMG height=34 alt="$ x_K \in X$" src="http://planning.cs.uiuc.edu/img389.gif" width=69 align=middle border=0></SPAN>. This computes the costs of all optimal one-step plans from stage <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN> to stage <SPAN class=MATH><IMG height=34 alt="$ F = K+1$" src="http://planning.cs.uiuc.edu/img363.gif" width=94 align=middle border=0></SPAN>. 
<P>It will be shown next that <SPAN class=MATH><IMG height=34 alt="$ G^*_k$" src="http://planning.cs.uiuc.edu/img380.gif" width=28 align=middle border=0></SPAN> can be computed similarly once <SPAN class=MATH><IMG height=34 alt="$ G^*_{k+1}$" src="http://planning.cs.uiuc.edu/img386.gif" width=45 align=middle border=0></SPAN> is given. Carefully study (<A href="http://planning.cs.uiuc.edu/node54.html#eqn:ctgk">2.5</A>) and note that it can be written as 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgK2pre></A><!-- MATH
 \begin{equation}
G^*_k(x_k) = 
\min_{{u_k}} \left\{ 
\min_{\ukp1, \ldots, {u_K}}
\left\{ l({x_k},{u_k}) + \sum_{i=k+1}^K l({x_i},{u_i}) + 
l_F(\xKp1) \right\} \right\}
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=77 alt="$\displaystyle G^*_k(x_k) = \min_{{u_k}} \left\{ \min_{\ukp1, \ldots, {u_K}} \left\{ l({x_k},{u_k}) + \sum_{i=k+1}^K l({x_i},{u_i}) + l_F(\xKp1) \right\} \right\}$" src="http://planning.cs.uiuc.edu/img394.gif" width=487 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>9</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>by pulling the first term out of the sum and by separating the minimization over <SPAN class=MATH><IMG height=33 alt="$ {u_k}$" src="http://planning.cs.uiuc.edu/img395.gif" width=24 align=middle border=0></SPAN> from the rest, which range from <SPAN class=MATH><IMG height=33 alt="$ u_{k+1}$" src="http://planning.cs.uiuc.edu/img396.gif" width=41 align=middle border=0></SPAN> to <SPAN class=MATH><IMG height=33 alt="$ u_K$" src="http://planning.cs.uiuc.edu/img359.gif" width=28 align=middle border=0></SPAN>. The second <SPAN class=MATH><IMG height=16 alt="$ \min$" src="http://planning.cs.uiuc.edu/img382.gif" width=36 align=bottom border=0></SPAN> does not affect the <!-- MATH
 $l({x_k},{u_k})$
 --><SPAN class=MATH><IMG height=37 alt="$ l({x_k},{u_k})$" src="http://planning.cs.uiuc.edu/img397.gif" width=71 align=middle border=0></SPAN> term; thus, <!-- MATH
 $l({x_k},{u_k})$
 --><SPAN class=MATH><IMG height=37 alt="$ l({x_k},{u_k})$" src="http://planning.cs.uiuc.edu/img397.gif" width=71 align=middle border=0></SPAN> can be pulled outside to obtain 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgK2pre2></A><!-- MATH
 \begin{equation}
G^*_k({x_k}) = 
\min_{{u_k}} \left\{ l({x_k},{u_k}) +
\min_{\ukp1, \ldots, {u_K}} 
\left\{ \sum_{i=k+1}^K l({x_i},{u_i}) + 
l_F(\xKp1) \right\} \right\} .
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=77 alt="$\displaystyle G^*_k({x_k}) = \min_{{u_k}} \left\{ l({x_k},{u_k}) + \min_{\ukp1,...&#10;..., {u_K}} \left\{ \sum_{i=k+1}^K l({x_i},{u_i}) + l_F(\xKp1) \right\} \right\} .$" src="http://planning.cs.uiuc.edu/img398.gif" width=496 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>10</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>The inner <SPAN class=MATH><IMG height=16 alt="$ \min$" src="http://planning.cs.uiuc.edu/img382.gif" width=36 align=bottom border=0></SPAN> is exactly the definition of the optimal cost-to-go function <SPAN class=MATH><IMG height=34 alt="$ G^*_{k+1}$" src="http://planning.cs.uiuc.edu/img386.gif" width=45 align=middle border=0></SPAN>. Upon substitution, this yields the recurrence 
<P></P>
<DIV class=mathdisplay align=center><A name=eqn:ctgk2></A><!-- MATH
 \begin{equation}
G^*_k({x_k}) = 
\min_{{u_k}} \Big\{ l({x_k},{u_k}) +
G^*_{k+1}(\xkp1) \Big\} ,
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=52 alt="$\displaystyle G^*_k({x_k}) = \min_{{u_k}} \Big\{ l({x_k},{u_k}) + G^*_{k+1}(\xkp1) \Big\} ,$" src="http://planning.cs.uiuc.edu/img399.gif" width=305 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>11</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>in which <!-- MATH
 $x_{k+1} = f({x_k},{u_k})$
 --><SPAN class=MATH><IMG height=37 alt="$ x_{k+1} = f({x_k},{u_k})$" src="http://planning.cs.uiuc.edu/img400.gif" width=138 align=middle border=0></SPAN>. Now that the right side of (<A href="http://planning.cs.uiuc.edu/node54.html#eqn:ctgk2">2.11</A>) depends only on <SPAN class=MATH><IMG height=33 alt="$ {x_k}$" src="http://planning.cs.uiuc.edu/img401.gif" width=24 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=33 alt="$ {u_k}$" src="http://planning.cs.uiuc.edu/img395.gif" width=24 align=middle border=0></SPAN>, and <SPAN class=MATH><IMG height=34 alt="$ G^*_{k+1}$" src="http://planning.cs.uiuc.edu/img386.gif" width=45 align=middle border=0></SPAN>, the computation of <SPAN class=MATH><IMG height=34 alt="$ G^*_k$" src="http://planning.cs.uiuc.edu/img380.gif" width=28 align=middle border=0></SPAN> easily proceeds in <!-- MATH
 $O(|X| |U|)$
 --><SPAN class=MATH><IMG height=37 alt="$ O(\vert X\vert \vert U\vert)$" src="http://planning.cs.uiuc.edu/img402.gif" width=87 align=middle border=0></SPAN> time.<A name=2737></A> This computation is called a <EM>value iteration</EM>. Note that in each value iteration, some states receive an infinite value only because they are not reachable; a <SPAN class=MATH><IMG height=37 alt="$ (K-k)$" src="http://planning.cs.uiuc.edu/img403.gif" width=70 align=middle border=0></SPAN>-step plan from <SPAN class=MATH><IMG height=33 alt="$ x_k$" src="http://planning.cs.uiuc.edu/img4.gif" width=24 align=middle border=0></SPAN> to <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN> does not exist. This means that there are no actions, <!-- MATH
 $u_k \in U(x_k)$
 --><SPAN class=MATH><IMG height=37 alt="$ u_k \in U(x_k)$" src="http://planning.cs.uiuc.edu/img134.gif" width=95 align=middle border=0></SPAN>, that bring <SPAN class=MATH><IMG height=33 alt="$ x_k$" src="http://planning.cs.uiuc.edu/img4.gif" width=24 align=middle border=0></SPAN> to a state <!-- MATH
 $x_{k+1} \in X$
 --><SPAN class=MATH><IMG height=34 alt="$ x_{k+1} \in X$" src="http://planning.cs.uiuc.edu/img404.gif" width=81 align=middle border=0></SPAN> from which a <SPAN class=MATH><IMG height=37 alt="$ (K-k-1)$" src="http://planning.cs.uiuc.edu/img405.gif" width=103 align=middle border=0></SPAN>-step plan exists that terminates in <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN>. 
<P>Summarizing, the value iterations proceed as follows: 
<P></P>
<DIV class=mathdisplay align=center><!-- MATH
 \begin{equation}
G^*_F \;\;\rightarrow \;\; G^*_K \;\;\rightarrow\;\; G^*_{K-1} \;\; \cdots
\;\; G^*_k \;\;\rightarrow\;\; G^*_{k-1} \;\; \cdots
\;\; G^*_2 \;\;\rightarrow\;\; G^*_1
\end{equation}
 -->
<TABLE class=equation cellPadding=0 width="100%" align=center>
<TBODY>
<TR vAlign=center>
<TD noWrap align=middle><SPAN class=MATH><IMG height=36 alt="$\displaystyle G^*_F \;\;\rightarrow \;\; G^*_K \;\;\rightarrow\;\; G^*_{K-1} \;...&#10;... \;\;\rightarrow\;\; G^*_{k-1} \;\; \cdots \;\; G^*_2 \;\;\rightarrow\;\; G^*_1$" src="http://planning.cs.uiuc.edu/img406.gif" width=515 align=middle border=0></SPAN></TD>
<TD class=eqno noWrap align=right width=10>(<SPAN class=arabic>2</SPAN>.<SPAN class=arabic>12</SPAN>)</TD></TR></TBODY></TABLE></DIV><BR clear=all>
<P></P>until finally <SPAN class=MATH><IMG height=34 alt="$ G^*_1$" src="http://planning.cs.uiuc.edu/img407.gif" width=27 align=middle border=0></SPAN> is determined after <!-- MATH
 $O(K |X| |U|)$
 --><SPAN class=MATH><IMG height=37 alt="$ O(K \vert X\vert \vert U\vert)$" src="http://planning.cs.uiuc.edu/img408.gif" width=104 align=middle border=0></SPAN> time. The resulting <SPAN class=MATH><IMG height=34 alt="$ G^*_1$" src="http://planning.cs.uiuc.edu/img407.gif" width=27 align=middle border=0></SPAN> may be applied to yield <!-- MATH
 $G^*_1({x_{I}})$
 --><SPAN class=MATH><IMG height=37 alt="$ G^*_1({x_{I}})$" src="http://planning.cs.uiuc.edu/img409.gif" width=60 align=middle border=0></SPAN>, the optimal cost to go to the goal from <SPAN class=MATH><IMG height=33 alt="$ {x_{I}}$" src="http://planning.cs.uiuc.edu/img261.gif" width=23 align=middle border=0></SPAN>. It also conveniently gives the optimal cost-to-go from any other initial state. This cost is infinity for states from which <SPAN class=MATH><IMG height=34 alt="$ {X_{G}}$" src="http://planning.cs.uiuc.edu/img140.gif" width=32 align=middle border=0></SPAN> cannot be reached in <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN> stages. <A name=2744></A>
<P>It seems convenient that the cost of the optimal plan can be computed so easily, but how is the actual plan extracted? One possibility is to store the action that satisfied the <SPAN class=MATH><IMG height=16 alt="$ \min$" src="http://planning.cs.uiuc.edu/img382.gif" width=36 align=bottom border=0></SPAN> in (<A href="http://planning.cs.uiuc.edu/node54.html#eqn:ctgk2">2.11</A>) from every state, and at every stage. Unfortunately, this requires <SPAN class=MATH><IMG height=37 alt="$ O(K \vert X\vert)$" src="http://planning.cs.uiuc.edu/img410.gif" width=79 align=middle border=0></SPAN> storage, but it can be reduced to <SPAN class=MATH><IMG height=37 alt="$ O(\vert X\vert)$" src="http://planning.cs.uiuc.edu/img411.gif" width=62 align=middle border=0></SPAN> using the tricks to come in Section <A href="http://planning.cs.uiuc.edu/node56.html#sec:dopgc">2.3.2</A> for the more general case of variable-length plans. 
<P>
<P>
<DIV><A name=exa:fivestate><B>Example <SPAN class=arabic>2</SPAN>..<SPAN class=arabic>3</SPAN></B></A> (A Five-State Optimal Planning Problem) &nbsp; Figure <A href="http://planning.cs.uiuc.edu/node54.html#fig:fivestate">2.8</A> shows a graph representation of a planning problem in which <!-- MATH
 $X = \{a,c,b,d,e\}$
 --><SPAN class=MATH><IMG height=37 alt="$ X = \{a,c,b,d,e\}$" src="http://planning.cs.uiuc.edu/img412.gif" width=144 align=middle border=0></SPAN>. Suppose that <SPAN class=MATH><IMG height=17 alt="$ K=4$" src="http://planning.cs.uiuc.edu/img413.gif" width=57 align=bottom border=0></SPAN>, <!-- MATH
 ${x_{I}}= a$
 --><SPAN class=MATH><IMG height=33 alt="$ {x_{I}}= a$" src="http://planning.cs.uiuc.edu/img414.gif" width=58 align=middle border=0></SPAN>, and <!-- MATH
 ${X_{G}}= \{d\}$
 --><SPAN class=MATH><IMG height=37 alt="$ {X_{G}}= \{d\}$" src="http://planning.cs.uiuc.edu/img415.gif" width=86 align=middle border=0></SPAN>. There will hence be four value iterations, which construct <SPAN class=MATH><IMG height=34 alt="$ G^*_4$" src="http://planning.cs.uiuc.edu/img416.gif" width=27 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ G^*_3$" src="http://planning.cs.uiuc.edu/img417.gif" width=27 align=middle border=0></SPAN>, <SPAN class=MATH><IMG height=34 alt="$ G^*_2$" src="http://planning.cs.uiuc.edu/img418.gif" width=27 align=middle border=0></SPAN>, and <SPAN class=MATH><IMG height=34 alt="$ G^*_1$" src="http://planning.cs.uiuc.edu/img407.gif" width=27 align=middle border=0></SPAN>, once the final-stage cost-to-go, <SPAN class=MATH><IMG height=34 alt="$ G^*_5$" src="http://planning.cs.uiuc.edu/img419.gif" width=27 align=middle border=0></SPAN>, is given. 
<P>
<DIV align=center><A name=fig:fivestate></A><A name=3343></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 2.8:</STRONG> A five-state example. Each vertex represents a state, and each edge represents an input that can be applied to the state transition equation to change the state. The weights on the edges represent <!-- MATH
 $l(x_k,u_k)$
 --><SPAN class=MATH><IMG height=37 alt="$ l(x_k,u_k)$" src="http://planning.cs.uiuc.edu/img3.gif" width=71 align=middle border=0></SPAN> (<SPAN class=MATH><IMG height=33 alt="$ x_k$" src="http://planning.cs.uiuc.edu/img4.gif" width=24 align=middle border=0></SPAN> is the originating vertex of the edge). </CAPTION>
<TBODY>
<TR>
<TD><IMG height=97 alt="\begin{figure}\centerline{\psfig{figure=figs/fivestate.eps,width=5.0in} }\end{figure}" src="http://planning.cs.uiuc.edu/img420.gif" width=576 border=0></TD></TR></TBODY></TABLE></DIV>
<P>
<DIV align=center><A name=fig:fivestate1></A><A name=3344></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 2.9:</STRONG> The optimal cost-to-go functions computed by backward value iteration.</CAPTION>
<TBODY>
<TR>
<TD><IMG height=146 alt="\begin{figure}\begin{center}&#10;\begin{tabular}{\vert c\vert c\vert c\vert c\vert c...&#10;...1$ &amp; 6 &amp; 4 &amp; 5 &amp; 4 &amp; $\infty$  \hline&#10;\end{tabular}\end{center}&#10;\end{figure}" src="http://planning.cs.uiuc.edu/img421.gif" width=234 border=0></TD></TR></TBODY></TABLE></DIV>
<P>
<DIV align=center><A name=fig:fivestate2></A><A name=3346></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 2.10:</STRONG> The possibilities for advancing forward one stage. This is obtained by making two copies of the states from Figure <A href="http://planning.cs.uiuc.edu/node54.html#fig:fivestate">2.8</A>, one copy for the current state and one for the potential next state. </CAPTION>
<TBODY>
<TR>
<TD><IMG height=147 alt="\begin{figure}\centerline{\psfig{figure=figs/fivestate2r.eps,width=4.5in} }\end{figure}" src="http://planning.cs.uiuc.edu/img422.gif" width=517 border=0></TD></TR></TBODY></TABLE></DIV>
<P>
<DIV align=center><A name=fig:fivestate3></A><A name=3348></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 2.11:</STRONG> By turning Figure <A href="http://planning.cs.uiuc.edu/node54.html#fig:fivestate2">2.10</A> sideways and copying it <SPAN class=MATH><IMG height=17 alt="$ K$" src="http://planning.cs.uiuc.edu/img5.gif" width=22 align=bottom border=0></SPAN> times, a graph can be drawn that easily shows all of the ways to arrive at a final state from an initial state by flowing from left to right. The computations automatically select the optimal route. </CAPTION>
<TBODY>
<TR>
<TD><IMG height=464 alt="\begin{figure}\centerline{\psfig{figure=figs/fivestate3.eps,width=4.0in} }\end{figure}" src="http://planning.cs.uiuc.edu/img423.gif" width=460 border=0></TD></TR></TBODY></TABLE></DIV>
<P>The cost-to-go functions are shown in Figure <A href="http://planning.cs.uiuc.edu/node54.html#fig:fivestate1">2.9</A>. Figures <A href="http://planning.cs.uiuc.edu/node54.html#fig:fivestate2">2.10</A> and <A href="http://planning.cs.uiuc.edu/node54.html#fig:fivestate3">2.11</A> illustrate the computations. For computing <SPAN class=MATH><IMG height=34 alt="$ G^*_4$" src="http://planning.cs.uiuc.edu/img416.gif" width=27 align=middle border=0></SPAN>, only <SPAN class=MATH><IMG height=17 alt="$ b$" src="http://planning.cs.uiuc.edu/img424.gif" width=13 align=bottom border=0></SPAN> and <SPAN class=MATH><IMG height=17 alt="$ c$" src="http://planning.cs.uiuc.edu/img154.gif" width=13 align=bottom border=0></SPAN> receive finite values because only they can reach <SPAN class=MATH><IMG height=17 alt="$ d$" src="http://planning.cs.uiuc.edu/img425.gif" width=14 align=bottom border=0></SPAN> in one stage. For computing <SPAN class=MATH><IMG height=34 alt="$ G^*_3$" src="http://planning.cs.uiuc.edu/img417.gif" width=27 align=middle border=0></SPAN>, only the values <!-- MATH
 $G^*_4(b) = 4$
 --><SPAN class=MATH><IMG height=37 alt="$ G^*_4(b) = 4$" src="http://planning.cs.uiuc.edu/img426.gif" width=84 align=middle border=0></SPAN> and <!-- MATH
 $G^*_4(c)
= 1$
 --><SPAN class=MATH><IMG height=37 alt="$ G^*_4(c)&#10;= 1$" src="http://planning.cs.uiuc.edu/img427.gif" width=84 align=middle border=0></SPAN> are important. Only paths that reach <SPAN class=MATH><IMG height=17 alt="$ b$" src="http://planning.cs.uiuc.edu/img424.gif" width=13 align=bottom border=0></SPAN> or <SPAN class=MATH><IMG height=17 alt="$ c$" src="http://planning.cs.uiuc.edu/img154.gif" width=13 align=bottom border=0></SPAN> can possibly lead to <SPAN class=MATH><IMG height=17 alt="$ d$" src="http://planning.cs.uiuc.edu/img425.gif" width=14 align=bottom border=0></SPAN> in stage <SPAN class=MATH><IMG height=17 alt="$ k=5$" src="http://planning.cs.uiuc.edu/img428.gif" width=50 align=bottom border=0></SPAN>. Note that the minimization in <!-- MATH
 $(\ref{eqn:ctgk2})$
 --><SPAN class=MATH><IMG height=39 alt="% latex2html id marker 121077&#10;$ (\ref{eqn:ctgk2})$" src="http://planning.cs.uiuc.edu/img429.gif" width=53 align=middle border=0></SPAN> always chooses the action that produces the lowest total cost when arriving at a vertex in the next stage. <!-- MATH
 $\blacksquare$
 --><SPAN class=MATH><IMG height=16 alt="$ \blacksquare$" src="http://planning.cs.uiuc.edu/img282.gif" width=20 align=bottom border=0></SPAN> <BR></P></DIV>