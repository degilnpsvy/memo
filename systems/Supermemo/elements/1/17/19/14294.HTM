<H4 class=subsection>10.5.1 Introduction to Pattern Rules</H4>
<P><A name=index-pattern-rule-951></A><A name=index-rule_002c-pattern-952></A>A pattern rule contains the character &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; (exactly one of them) in the target; otherwise, it looks exactly like an ordinary rule. The target is a pattern for matching file names; the &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; matches any nonempty substring, while other characters match only themselves. <A name=index-target-pattern_002c-implicit-953></A><A name=index-g_t_0040code_007b_0025_007d_002c-in-pattern-rules-954></A>For example, &#8216;<SAMP><SPAN class=samp>%.c</SPAN></SAMP>&#8217; as a pattern matches any file name that ends in &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217;. &#8216;<SAMP><SPAN class=samp>s.%.c</SPAN></SAMP>&#8217; as a pattern matches any file name that starts with &#8216;<SAMP><SPAN class=samp>s.</SPAN></SAMP>&#8217;, ends in &#8216;<SAMP><SPAN class=samp>.c</SPAN></SAMP>&#8217; and is at least five characters long. (<FONT class=extract>There must be at least one character to match the &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217;</FONT>.) <FONT class=extract>The substring that the &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; matches is called the <DFN>stem</DFN>.</FONT> 
<P>&#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; in a prerequisite of a pattern rule stands for the same stem that was matched by the &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217; in the target. In order for the pattern rule to apply, its target pattern must match the file name under consideration and all of its prerequisites (after pattern substitution) must name files that exist or can be made. These files become prerequisites of the target. <A name=index-prerequisite-pattern_002c-implicit-955></A><FONT class=extract>Thus, a rule of the form </FONT><PRE class=example><FONT class=extract>     %.o : %.c ; <VAR>recipe</VAR>...
</FONT></PRE>
<P class=noindent><FONT class=extract>specifies how to make a file <SAMP><VAR>n</VAR><SPAN class=file>.o</SPAN></SAMP>, with another file <SAMP><VAR>n</VAR><SPAN class=file>.c</SPAN></SAMP> as its prerequisite, provided that <SAMP><VAR>n</VAR><SPAN class=file>.c</SPAN></SAMP> exists or can be made. </FONT>
<P><FONT class=extract>There may also be prerequisites that do not use &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217;; such a prerequisite attaches to every file made by this pattern rule. These unvarying prerequisites are useful occasionally.</FONT> 
<P><FONT class=extract>A pattern rule need not have any prerequisites that contain &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217;, or in fact any prerequisites at all. Such a rule is effectively a general wildcard. It provides a way to make any file that matches the target pattern. See </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Last-Resort"><FONT class=extract>Last Resort</FONT></A><FONT class=extract>.</FONT> 
<P><FONT class=extract>More than one pattern rule may match a target. In this case <CODE>make</CODE> will choose the &#8220;best fit&#8221; rule. See </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Pattern-Match"><FONT class=extract>How Patterns Match</FONT></A><FONT class=extract>.</FONT> <!-- !!! The end of of this paragraph should be rewritten.  -bob -->
<P><FONT class=extract>Pattern rules may have more than one target. Unlike normal rules, this does not act as many different rules with the same prerequisites and recipe. If a pattern rule has multiple targets, <CODE>make</CODE> knows that the rule's recipe is responsible for making all of the targets. The recipe is executed only once to make all the targets. When searching for a pattern rule to match a target, the target patterns of a rule other than the one that matches the target in need of a rule are incidental: <CODE>make</CODE> worries only about giving a recipe and prerequisites to the file presently in question. However, when this file's recipe is run, the other targets are marked as having been updated themselves.</FONT> <A name=index-multiple-targets_002c-in-pattern-rule-956></A><A name=index-target_002c-multiple-in-pattern-rule-957></A>