<HEAD></HEAD>
<BODY>
<H2 style="MARGIN: 13pt 0cm"><SPAN lang=EN-US style="FONT-SIZE: 21pt; LINE-HEIGHT: 173%; mso-bidi-font-size: 16.0pt; mso-font-kerning: 0pt"><FONT face=Arial>30.1 Protecting Accesses to Shared Variables: Mutexes</FONT></SPAN></H2>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">One of the principal advantages of threads is that they can share information via global variables. However, this easy sharing comes at a cost: we must take care that multiple threads do not attempt to modify the same variable at the same time, or that one thread doesn&#8217;t try to read the value of a variable while another thread is modifying it. The term critical section is used to refer to a section of code that accesses a shared resource and whose execution should be atomic; that is, its execution should not be interrupted by another thread that simultaneously accesses the same shared resource.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">Listing 30-1 provides a simple example of the kind of problems that can occur when shared resources are not accessed atomically. This program creates two threads, each of which executes the same function. The function executes a loop that repeatedly increments a global variable, glob, by copying glob into the local variable loc, incrementing loc, and copying loc back to glob. (Since loc is an automatic variable allocated on the per-thread stack, each thread has its own copy of this variable.) The number of iterations of the loop is determined by the command-line argument supplied to the program, or by a default value, if no argument is supplied.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Futura-Heavy','sans-serif'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Futura-Heavy">Listing 30-1: </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Futura-Book','sans-serif'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Futura-Book">Incorrectly incrementing a global variable from two threads</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskerville-Roman','serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskerville-Roman">&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211; </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-hansi-font-family: NewBaskervilleEF-RomanIta">threads/thread_incr.c</SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; TEXT-INDENT: 7pt; mso-layout-grid-align: none; mso-char-indent-count: .5" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">1</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #6060ff; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">#include</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #00bf00">&lt;pthread.h&gt;</SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>2</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #6060ff; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">#include</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #00bf00">"tlpi_hdr.h"</SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>3</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #40ffff; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">static</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #00bf00">int</SPAN> <SPAN style="COLOR: #bfbf00">glob</SPAN> = 0;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>4</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #40ffff; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">static</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"> <SPAN style="COLOR: #00bf00">void</SPAN> * <SPAN style="COLOR: #bf0000">/* Loop 'arg' times incrementing 'glob' */</SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>5</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #6060ff; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">threadFunc</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">(<SPAN style="COLOR: #00bf00">void</SPAN> *<SPAN style="COLOR: #bfbf00">arg</SPAN>)</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>6</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>7</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #00bf00">int</SPAN> <SPAN style="COLOR: #bfbf00">loops</SPAN> = *((<SPAN style="COLOR: #00bf00">int</SPAN> *) arg);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>8</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #00bf00">int</SPAN> <SPAN style="COLOR: #bfbf00">loc</SPAN>, <SPAN style="COLOR: #bfbf00">j</SPAN>;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>9</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">for</SPAN> (j = 0; j &lt; loops; j++) {</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">10</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>loc = glob;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">11</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>loc++;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">12</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>glob = loc;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">13</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>}</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">14</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">return</SPAN> <SPAN style="COLOR: #bf00bf">NULL</SPAN>;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">15</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">}</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">16int</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">17</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #6060ff; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">main</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">(<SPAN style="COLOR: #00bf00">int</SPAN> <SPAN style="COLOR: #bfbf00">argc</SPAN>, <SPAN style="COLOR: #00bf00">char</SPAN> *<SPAN style="COLOR: #bfbf00">argv</SPAN>[])</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">18</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">{</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">19</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #00bf00">pthread_t</SPAN> <SPAN style="COLOR: #bfbf00">t1</SPAN>, <SPAN style="COLOR: #bfbf00">t2</SPAN>;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">20</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #00bf00">int</SPAN> <SPAN style="COLOR: #bfbf00">loops</SPAN>, <SPAN style="COLOR: #bfbf00">s</SPAN>;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">21</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>loops = (argc &gt; 1) ? getInt(argv[1], GN_GT_0, <SPAN style="COLOR: #00bf00">"num-loops"</SPAN>) : 10000000;</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">22</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>s = pthread_create(&amp;t1, <SPAN style="COLOR: #bf00bf">NULL</SPAN>, threadFunc, &amp;loops);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">23</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">if</SPAN> (s != 0)</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">24</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>errExitEN(s, <SPAN style="COLOR: #00bf00">"pthread_create"</SPAN>);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">25</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>s = pthread_create(&amp;t2, <SPAN style="COLOR: #bf00bf">NULL</SPAN>, threadFunc, &amp;loops);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">26</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">if</SPAN> (s != 0)</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">27</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>errExitEN(s, <SPAN style="COLOR: #00bf00">"pthread_create"</SPAN>);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">28</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>s = pthread_join(t1, <SPAN style="COLOR: #bf00bf">NULL</SPAN>);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">29</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">if</SPAN> (s != 0)</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">30</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>errExitEN(s, <SPAN style="COLOR: #00bf00">"pthread_join"</SPAN>);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">31</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>s = pthread_join(t2, <SPAN style="COLOR: #bf00bf">NULL</SPAN>);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">32</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="COLOR: #40ffff">if</SPAN> (s != 0)</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">33</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>errExitEN(s, <SPAN style="COLOR: #00bf00">"pthread_join"</SPAN>);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">34</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>printf(<SPAN style="COLOR: #00bf00">"glob = %d\n"</SPAN>, glob);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">35</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>exit(EXIT_SUCCESS);</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">36</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Lucida Console'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'">}</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskerville-Roman','serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskerville-Roman">&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211; </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-hansi-font-family: NewBaskervilleEF-RomanIta">threads/thread_incr.c</SPAN></B></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><?xml:namespace prefix = "v" /><v:shapetype id=_x0000_t75 stroked="f" filled="f" path="m@4@5l@4@11@9@11@9@5xe" o:preferrelative="t" o:spt="75" coordsize="21600,21600"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:connecttype="rect" gradientshapeok="t" o:extrusionok="f"></v:path><?xml:namespace prefix = "o" /><o:lock aspectratio="t" v:ext="edit"></o:lock></v:shapetype><v:shape id=_x0000_i1025 style="HEIGHT: 654pt; WIDTH: 716.25pt" type="#_x0000_t75"><v:imagedata o:title="" src="file:///C:\Users\DONPOP~1\AppData\Local\Temp\msohtmlclip1\01\clip_image001.emz"></v:imagedata></v:shape></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Futura-Heavy','sans-serif'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Futura-Heavy">Figure 30-1: </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Futura-Book','sans-serif'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Futura-Book">Two threads incrementing a global variable without synchronization</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">When we run the program in Listing 30-1 specifying that each thread should increment the variable 1000 times, all seems well:</SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>$ ./thread_incr 1000</EM></SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>glob = 2000</EM></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">However, what has probably happened here is that the first thread completed all of its work and terminated before the second thread even started. When we ask both threads to do a lot more work, we see a rather different result:</SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>$ ./thread_incr 10000000</EM></SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>glob = 16517656</EM></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">At the end of this sequence, the value of glob should have been 20 million. The problem here results from execution sequences such as the following (see also Figure 30-1, above):</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">1. Thread 1 fetches the current value of glob into its local variable loc. Let&#8217;s assume that the current value of glob is 2000.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">2. The scheduler time slice for thread 1 expires, and thread 2 commences execution.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">3. Thread 2 performs multiple loops in which it fetches the current value of glob into its local variable loc, increments loc, and assigns the result to glob. In the first of these loops, the value fetched from glob will be 2000. Let&#8217;s suppose that by the time the time slice for thread 2 has expired, glob has been increased to 3000.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">4. Thread 1 receives another time slice and resumes execution where it left off. Having previously (step 1) copied the value of glob (2000) into its loc, it now increments loc and assigns the result (2001) to glob. At this point, the effect of the increment operations performed by thread 2 is lost.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">If we run the program in Listing 30-1 multiple times with the same command-line argument, we see that the printed value of glob fluctuates wildly:</SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>$ ./thread_incr 10000000</EM></SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>glob = 10880429</EM></SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>$ ./thread_incr 10000000</EM></SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>glob = 13493953</EM></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">This nondeterministic behavior is a consequence of the vagaries of the kernel&#8217;s CPU scheduling decisions. In complex programs, this nondeterministic behavior means that such errors may occur only rarely, be hard to reproduce, and therefore be difficult to find.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">It might seem that we could eliminate the problem by replacing the three statements inside the for loop in the threadFunc() function in Listing 30-1 with a single statement:</SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt"><EM>glob++; /* or: ++glob; */</EM></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">However, on many hardware architectures (e.g., RISC architectures), the compiler would still need to convert this single statement into machine code whose steps are equivalent to the three statements inside the loop in threadFunc(). In other words, despite its simple appearance, even a C increment operator may not be atomic, and it might demonstrate the behavior that we described above.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">To avoid the problems that can occur when threads try to update a shared variable, we must use a mutex (short for mutual exclusion) to ensure that only one thread at a time can access the variable. More generally, mutexes can be used to ensure atomic access to any shared resource, but protecting shared variables is the most common use.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">A mutex has two states: locked and unlocked. At any moment, at most one thread may hold the lock on a mutex. Attempting to lock a mutex that is already locked either blocks or fails with an error, depending on the method used to place </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">the lock. </SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt"><FONT class=extract>When a thread locks a mutex, it becomes the owner of that mutex. Only the mutex owner can unlock the mutex.</FONT> This property improves the structure of code that uses mutexes and also allows for some optimizations in the implementation of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">mutexes. <FONT class=extract>Because of this ownership property, the terms acquire and release are sometimes used synonymously for lock and unlock.</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">In general, we employ a different mutex for each shared resource (which may consist of multiple related variables), and each thread employs the following protocol for accessing a resource:</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">lock the mutex for the shared resource;</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">access the shared resource; and</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">unlock the mutex.</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">If multiple threads try to execute this block of code (a critical section), the fact that only one thread can hold the mutex (the others remain blocked) means that only one thread at a time can enter the block, as illustrated in Figure 30-2.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt"><v:shape id=_x0000_i1026 style="HEIGHT: 461.25pt; WIDTH: 545.25pt" type="#_x0000_t75"><v:imagedata o:title="" src="file:///C:\Users\DONPOP~1\AppData\Local\Temp\msohtmlclip1\01\clip_image003.emz"></v:imagedata></v:shape></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Futura-Heavy','sans-serif'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Futura-Heavy">Figure 30-2: </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Futura-Book','sans-serif'; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Futura-Book">Using a mutex to protect a critical section</SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">Finally, note that mutex locking is advisory, rather than mandatory. By this, we mean that a thread is free to ignore the use of a mutex and simply access the corresponding shared variable(s). In order to safely handle shared variables, all threads must cooperate in their use of a mutex, abiding by the locking rules it enforces.</SPAN></P></BODY>