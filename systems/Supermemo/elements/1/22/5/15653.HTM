<A name=index-g_t_0040code_007b_002do_007d-722></A><A name=index-g_t_0040code_007b_002d_002dold_002dfile_007d-723></A><A name=index-g_t_0040code_007b_002d_002dassume_002dold_007d-724></A><A name=index-files_002c-assuming-old-725></A><A name=index-files_002c-avoiding-recompilation-of-726></A><A name=index-recompilation_002c-avoiding-727></A>Sometimes you may have changed a source file but you do not want to recompile all the files that depend on it. For example, suppose you add a macro or a declaration to a header file that many other files depend on. Being conservative, <CODE>make</CODE> assumes that any change in the header file requires recompilation of all dependent files, but you know that they do not need to be recompiled and you would rather not waste the time waiting for them to compile. 
<P>If you have already changed the header file at a time when some files do need recompilation, it is too late to do this. Instead, you can use the &#8216;<SAMP><SPAN class=samp>-o&nbsp;</SPAN><VAR>file</VAR></SAMP>&#8217;<!-- /@w --> flag, which marks a specified file as &#8220;old&#8221; (see <A href="https://www.gnu.org/software/make/manual/make.html#Options-Summary">Summary of Options</A>). This means that the file itself will not be remade, and nothing else will be remade on its account. Follow this procedure: 
<P><SPAN class=cloze>[...]</SPAN>