<A name=index-g_t_0040code_007b_002do_007d-722></A><A name=index-g_t_0040code_007b_002d_002dold_002dfile_007d-723></A><A name=index-g_t_0040code_007b_002d_002dassume_002dold_007d-724></A><A name=index-files_002c-assuming-old-725></A><A name=index-files_002c-avoiding-recompilation-of-726></A><A name=index-recompilation_002c-avoiding-727></A>Sometimes you may have changed a source file but you do not want to recompile all the files that depend on it. For example, suppose you add a macro or a declaration to a header file that many other files depend on. Being conservative, <CODE>make</CODE> assumes that any change in the header file requires recompilation of all dependent files, but you know that they do not need to be recompiled and you would rather not waste the time waiting for them to compile. 
<P>If you anticipate the problem before changing the header file, you can use the &#8216;<SAMP><SPAN class=samp>-t</SPAN></SAMP>&#8217; flag. This flag tells <CODE>make</CODE> not to run the recipes in the rules, but rather to mark the target up to date by changing its last-modification date. You would follow this procedure: 
<P><SPAN class=cloze>[...]</SPAN>