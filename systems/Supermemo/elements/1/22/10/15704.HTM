<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">19.2 How to Report Bugs</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-bug-reports-171></A><A name=index-bugs_002c-reporting-172></A>A number of companies and individuals offer support for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">gnu</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>products. If you obtained the binary utilities from a support organization, we recommend you contact that organization first.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">You can find contact information for many support companies and individuals in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>etc/SERVICE</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">gnu</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>Emacs distribution.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">In any event, we also recommend that you send bug reports for the binary utilities to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.sourceware.org/bugzilla/">http://www.sourceware.org/bugzilla/</A>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The fundamental principle of reporting bugs usefully is this:<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>report all the facts</STRONG>. If you are not sure whether to state a fact or leave it out, state it!</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Often people omit facts because they think they know what causes the problem and assume that some details do not matter. Thus, you might assume that the name of a file you use in an example does not matter. Well, probably it does not, but one cannot be sure. Perhaps the bug is a stray memory reference which happens to fetch from the location where that pathname is stored in memory; perhaps, if the pathname were different, the contents of that location would fool the utility into doing the right thing despite the bug. Play it safe and give a specific, complete example. That is the easiest thing for you to do, and the most helpful.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Keep in mind that the purpose of a bug report is to enable us to fix the bug if it is new to us. Therefore, always write your bug reports on the assumption that the bug has not been reported previously.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Sometimes people give a few sketchy facts and ask, &#8220;Does this ring a bell?&#8221; This cannot help us fix a bug, so it is basically useless. We respond by asking for enough details to enable us to investigate. You might as well expedite matters by sending them to begin with.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">To enable us to fix the bug, you should include all these things:</P>
<UL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI>The version of the utility. Each utility announces it if you start it with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--version</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument.
<P>Without this, we will not know whether there is any point in looking for the bug in the current version of the binary utilities.</P></LI>
<LI>Any patches you may have applied to the source, including any patches made to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>BFD</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>library.</LI>
<LI>The type of machine you are using, and the operating system name and version number.</LI>
<LI>What compiler (and its version) was used to compile the utilities&#8212;e.g. &#8220;<CODE>gcc-2.7</CODE>&#8221;.</LI>
<LI>The command arguments you gave the utility to observe the bug. To guarantee you will not omit something important, list them all. A copy of the Makefile (or the output from make) is sufficient.
<P>If we were to try to guess the arguments, we would probably guess wrong and then we might not encounter the bug.</P></LI>
<LI>A complete input file, or set of input files, that will reproduce the bug. If the utility is reading an object file or files, then it is generally most helpful to send the actual object files.
<P>If the source files were produced exclusively using<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">gnu</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>programs (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>gcc</SPAN></SAMP>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>gas</SPAN></SAMP>, and/or the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">gnu</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP>), then it may be OK to send the source files rather than the object files. In this case, be sure to say exactly what version of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>gcc</SPAN></SAMP>, or whatever, was used to produce the object files. Also say how<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>gcc</SPAN></SAMP>, or whatever, was configured.</P></LI>
<LI>A description of what behavior you observe that you believe is incorrect. For example, &#8220;It gets a fatal signal.&#8221;
<P>Of course, if the bug is that the utility gets a fatal signal, then we will certainly notice it. But if the bug is incorrect output, we might not notice unless it is glaringly wrong. You might as well not give us a chance to make a mistake.</P>
<P>Even if the problem you experience is a fatal signal, you should still say so explicitly. Suppose something strange is going on, such as your copy of the utility is out of sync, or you have encountered a bug in the C library on your system. (This has happened!) Your copy might crash and ours would not. If you told us to expect a crash, then when ours fails to crash, we would know that the bug was not happening for us. If you had not told us to expect a crash, then we would not be able to draw any conclusion from our observations.</P></LI>
<LI>If you wish to suggest changes to the source, send us context diffs, as generated by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>diff</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-u</SPAN></SAMP>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-c</SPAN></SAMP>, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-p</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option. Always send diffs from the old file to the new file. If you wish to discuss something in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>source, refer to it by context, not by line number.
<P>The line numbers in our development sources will not match those in your sources. Your line numbers would convey no useful information to us.</P></LI></UL>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Here are some things that are not necessary:</P>
<UL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI>A description of the envelope of the bug.
<P>Often people who encounter a bug spend a lot of time investigating which changes to the input file will make the bug go away and which changes will not affect it.</P>
<P>This is often time consuming and not very useful, because the way we will find the bug is by running a single example under the debugger with breakpoints, not by pure deduction from a series of examples. We recommend that you save your time for something else.</P>
<P>Of course, if you can find a simpler example to report<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>instead</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>of the original one, that is a convenience for us. Errors in the output will be easier to spot, running under the debugger will take less time, and so on.</P>
<P>However, simplification is not vital; if you do not want to do this, report the bug anyway and send us the entire test case you used.</P></LI>
<LI>A patch for the bug.
<P>A patch for the bug does help us if it is a good one. But do not omit the necessary information, such as the test case, on the assumption that a patch is all we need. We might see problems with your patch and decide to fix the problem another way, or we might not understand it at all.</P>
<P>Sometimes with programs as complicated as the binary utilities it is very hard to construct an example that will make the program follow a certain path through the code. If you do not send us the example, we will not be able to construct one, so we will not be able to verify that the bug is fixed.</P>
<P>And if we cannot understand what bug you are trying to fix, or why your patch should be an improvement, we will not install it. A test case will help us to understand.</P></LI>
<LI>A guess about what the bug is or what it depends on.
<P>Such guesses are usually wrong. Even we cannot guess right about such things without first using the debugger to find the facts.</P></LI></UL>