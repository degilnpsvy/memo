<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">14.1 The format of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>dlltool</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>.def</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>file</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>.def</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>file contains any number of the following commands:</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DT><CODE>NAME</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[ ,</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>base</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>]</CODE></DT>
<DD>The result is going to be named<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><CODE>.exe</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>LIBRARY</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[ ,</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>base</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>]</CODE></DT>
<DD>The result is going to be named<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><CODE>.dll</CODE>. Note: If you want to use LIBRARY as name then you need to quote. Otherwise this will fail due a necessary hack for libtool (see PR binutils/13710 for more details).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>EXPORTS ( ( (</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name1</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[ =<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>name2</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>] ) | (<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>name1</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>=</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>module-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>external-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>) ) [ ==<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>its_name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>]</CODE><BR></DT>
<DT><CODE>[</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>integer</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>] [ NONAME ] [ CONSTANT ] [ DATA ] [ PRIVATE ] ) *</CODE></DT>
<DD>Declares<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name1</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as an exported symbol from the DLL, with optional ordinal number<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>integer</VAR>, or declares<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name1</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as an alias (forward) of the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>external-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the DLL. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>its_name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is specified, this name is used as string in export table.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>module-name</VAR>. Note: The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>EXPORTS</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has to be the last command in .def file, as keywords are treated - beside<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>LIBRARY</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>- as simple name-identifiers. If you want to use LIBRARY as name then you need to quote it.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>IMPORTS ( (</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>internal-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>=</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>module-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>integer</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>) | [</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>internal-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>= ]</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>module-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>external-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>) [ == )<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>its_name</VAR><CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>] *</CODE></DT>
<DD>Declares that<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>external-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>or the exported function whose ordinal number is<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>integer</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is to be imported from the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>module-name</VAR>. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>internal-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is specified then this is the name that the imported function will be referred to in the body of the DLL. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>its_name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is specified, this name is used as string in import table. Note: The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>IMPORTS</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has to be the last command in .def file, as keywords are treated - beside<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>LIBRARY</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>- as simple name-identifiers. If you want to use LIBRARY as name then you need to quote it.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>DESCRIPTION</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>string</VAR></DT>
<DD>Puts<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>string</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>into the output<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>.exp</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>file in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.rdata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>STACKSIZE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>number-reserve</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>number-commit</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>]</CODE><BR></DT>
<DT><CODE>HEAPSIZE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>number-reserve</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>number-commit</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>]</CODE></DT>
<DD>Generates<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>--stack</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>--heap</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>number-reserve</VAR>,<VAR>number-commit</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the output<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.drectve</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section. The linker will see this and act upon it.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>CODE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>attr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+</CODE><BR></DT>
<DT><CODE>DATA</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>attr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+</CODE><BR></DT>
<DT><CODE>SECTIONS (</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>section-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>attr</VAR><CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>+ ) *</CODE></DT>
<DD>Generates<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>--attr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>section-name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>attr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the output<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.drectve</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section, where<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>attr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is one of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>READ</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>WRITE</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>EXECUTE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>SHARED</CODE>. The linker will see this and act upon it.</DD></DL>