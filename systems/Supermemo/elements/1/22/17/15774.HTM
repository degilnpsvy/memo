<H2 id=forall style="MARGIN-BOTTOM: 0px" jQuery1720177795137126255="26">forall</H2>
<HR>
<PRE class=prettyprint><CODE><SPAN class=pln>repo forall </SPAN><SPAN class=pun>[</SPAN><SPAN class=pln>PROJECT_LIST</SPAN><SPAN class=pun>]</SPAN><SPAN class=pln> </SPAN><SPAN class=pun>-</SPAN><SPAN class=pln>c COMMAND&nbsp;<BR></SPAN></CODE></PRE>
<P>Executes the given shell command in each project. The following additional environment variables are made available by <CODE>repo forall</CODE>:</P>
<UL>
<LI>
<P><CODE>REPO_PROJECT</CODE> is set to the unique name of the project.</P>
<LI>
<P><CODE>REPO_PATH</CODE> is the path relative to the root of the client.</P>
<LI>
<P><CODE>REPO_REMOTE</CODE> is the name of the remote sstem from the manifest.</P>
<LI>
<P><CODE>REPO_LREV</CODE> is the name of the revision from the manifest, translated to a local tracking branch. Used if you need to pass the manifest revision to a locally executed git command.</P>
<LI>
<P><CODE>REPO_RREV</CODE> is the name of the revision from the manifest, exactly as written in the manifest.</P></LI></UL>
<P>Options:</P>
<UL>
<LI>
<P><CODE>-c</CODE>: command and arguments to execute. The command is evaluated through <CODE>/bin/sh</CODE> and any arguments after it are passed through as shell positional parameters.</P>
<LI>
<P><CODE>-p</CODE>: show project headers before output of the specified command. This is achieved by binding pipes to the command's stdin, stdout, and sterr streams, and piping all output into a continuous stream that is displayed in a single pager session.</P>
<LI>
<P><CODE>-v</CODE>: show messages the command writes to stderr. </P></LI></UL>