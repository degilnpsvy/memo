<H2 class=chapter style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">3 objcopy</H2><PRE class=smallexample style="FONT-WEIGHT: normal; FONT-SIZE: smaller; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     
     objcopy [<SAMP><SPAN class=option>-F</SPAN></SAMP> <VAR>bfdname</VAR>|<SAMP><SPAN class=option>--target=</SPAN></SAMP><VAR>bfdname</VAR>]
             [<SAMP><SPAN class=option>-I</SPAN></SAMP> <VAR>bfdname</VAR>|<SAMP><SPAN class=option>--input-target=</SPAN></SAMP><VAR>bfdname</VAR>]
             [<SAMP><SPAN class=option>-O</SPAN></SAMP> <VAR>bfdname</VAR>|<SAMP><SPAN class=option>--output-target=</SPAN></SAMP><VAR>bfdname</VAR>]
             [<SAMP><SPAN class=option>-B</SPAN></SAMP> <VAR>bfdarch</VAR>|<SAMP><SPAN class=option>--binary-architecture=</SPAN></SAMP><VAR>bfdarch</VAR>]
             [<SAMP><SPAN class=option>-S</SPAN></SAMP>|<SAMP><SPAN class=option>--strip-all</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-g</SPAN></SAMP>|<SAMP><SPAN class=option>--strip-debug</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-K</SPAN></SAMP> <VAR>symbolname</VAR>|<SAMP><SPAN class=option>--keep-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>-N</SPAN></SAMP> <VAR>symbolname</VAR>|<SAMP><SPAN class=option>--strip-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>--strip-unneeded-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>-G</SPAN></SAMP> <VAR>symbolname</VAR>|<SAMP><SPAN class=option>--keep-global-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>--localize-hidden</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-L</SPAN></SAMP> <VAR>symbolname</VAR>|<SAMP><SPAN class=option>--localize-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>--globalize-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>-W</SPAN></SAMP> <VAR>symbolname</VAR>|<SAMP><SPAN class=option>--weaken-symbol=</SPAN></SAMP><VAR>symbolname</VAR>]
             [<SAMP><SPAN class=option>-w</SPAN></SAMP>|<SAMP><SPAN class=option>--wildcard</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-x</SPAN></SAMP>|<SAMP><SPAN class=option>--discard-all</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-X</SPAN></SAMP>|<SAMP><SPAN class=option>--discard-locals</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-b</SPAN></SAMP> <VAR>byte</VAR>|<SAMP><SPAN class=option>--byte=</SPAN></SAMP><VAR>byte</VAR>]
             [<SAMP><SPAN class=option>-i</SPAN></SAMP> [<VAR>breadth</VAR>]|<SAMP><SPAN class=option>--interleave</SPAN></SAMP>[=<VAR>breadth</VAR>]]
             [<SAMP><SPAN class=option>--interleave-width=</SPAN></SAMP><VAR>width</VAR>]
             [<SAMP><SPAN class=option>-j</SPAN></SAMP> <VAR>sectionpattern</VAR>|<SAMP><SPAN class=option>--only-section=</SPAN></SAMP><VAR>sectionpattern</VAR>]
             [<SAMP><SPAN class=option>-R</SPAN></SAMP> <VAR>sectionpattern</VAR>|<SAMP><SPAN class=option>--remove-section=</SPAN></SAMP><VAR>sectionpattern</VAR>]
             [<SAMP><SPAN class=option>-p</SPAN></SAMP>|<SAMP><SPAN class=option>--preserve-dates</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-D</SPAN></SAMP>|<SAMP><SPAN class=option>--enable-deterministic-archives</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-U</SPAN></SAMP>|<SAMP><SPAN class=option>--disable-deterministic-archives</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--debugging</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--gap-fill=</SPAN></SAMP><VAR>val</VAR>]
             [<SAMP><SPAN class=option>--pad-to=</SPAN></SAMP><VAR>address</VAR>]
             [<SAMP><SPAN class=option>--set-start=</SPAN></SAMP><VAR>val</VAR>]
             [<SAMP><SPAN class=option>--adjust-start=</SPAN></SAMP><VAR>incr</VAR>]
             [<SAMP><SPAN class=option>--change-addresses=</SPAN></SAMP><VAR>incr</VAR>]
             [<SAMP><SPAN class=option>--change-section-address</SPAN></SAMP> <VAR>sectionpattern</VAR>{=,+,-}<VAR>val</VAR>]
             [<SAMP><SPAN class=option>--change-section-lma</SPAN></SAMP> <VAR>sectionpattern</VAR>{=,+,-}<VAR>val</VAR>]
             [<SAMP><SPAN class=option>--change-section-vma</SPAN></SAMP> <VAR>sectionpattern</VAR>{=,+,-}<VAR>val</VAR>]
             [<SAMP><SPAN class=option>--change-warnings</SPAN></SAMP>] [<SAMP><SPAN class=option>--no-change-warnings</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--set-section-flags</SPAN></SAMP> <VAR>sectionpattern</VAR>=<VAR>flags</VAR>]
             [<SAMP><SPAN class=option>--add-section</SPAN></SAMP> <VAR>sectionname</VAR>=<VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--rename-section</SPAN></SAMP> <VAR>oldname</VAR>=<VAR>newname</VAR>[,<VAR>flags</VAR>]]
             [<SAMP><SPAN class=option>--long-section-names</SPAN></SAMP> {enable,disable,keep}]
             [<SAMP><SPAN class=option>--change-leading-char</SPAN></SAMP>] [<SAMP><SPAN class=option>--remove-leading-char</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--reverse-bytes=</SPAN></SAMP><VAR>num</VAR>]
             [<SAMP><SPAN class=option>--srec-len=</SPAN></SAMP><VAR>ival</VAR>] [<SAMP><SPAN class=option>--srec-forceS3</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--redefine-sym</SPAN></SAMP> <VAR>old</VAR>=<VAR>new</VAR>]
             [<SAMP><SPAN class=option>--redefine-syms=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--weaken</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--keep-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--strip-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--strip-unneeded-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--keep-global-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--localize-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--globalize-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--weaken-symbols=</SPAN></SAMP><VAR>filename</VAR>]
             [<SAMP><SPAN class=option>--alt-machine-code=</SPAN></SAMP><VAR>index</VAR>]
             [<SAMP><SPAN class=option>--prefix-symbols=</SPAN></SAMP><VAR>string</VAR>]
             [<SAMP><SPAN class=option>--prefix-sections=</SPAN></SAMP><VAR>string</VAR>]
             [<SAMP><SPAN class=option>--prefix-alloc-sections=</SPAN></SAMP><VAR>string</VAR>]
             [<SAMP><SPAN class=option>--add-gnu-debuglink=</SPAN></SAMP><VAR>path-to-file</VAR>]
             [<SAMP><SPAN class=option>--keep-file-symbols</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--only-keep-debug</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--strip-dwo</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--extract-dwo</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--extract-symbol</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--writable-text</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--readonly-text</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--pure</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--impure</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--file-alignment=</SPAN></SAMP><VAR>num</VAR>]
             [<SAMP><SPAN class=option>--heap=</SPAN></SAMP><VAR>size</VAR>]
             [<SAMP><SPAN class=option>--image-base=</SPAN></SAMP><VAR>address</VAR>]
             [<SAMP><SPAN class=option>--section-alignment=</SPAN></SAMP><VAR>num</VAR>]
             [<SAMP><SPAN class=option>--stack=</SPAN></SAMP><VAR>size</VAR>]
             [<SAMP><SPAN class=option>--subsystem=</SPAN></SAMP><VAR>which</VAR>:<VAR>major</VAR>.<VAR>minor</VAR>]
             [<SAMP><SPAN class=option>--compress-debug-sections</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--decompress-debug-sections</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--dwarf-depth=</SPAN><VAR>n</VAR></SAMP>]
             [<SAMP><SPAN class=option>--dwarf-start=</SPAN><VAR>n</VAR></SAMP>]
             [<SAMP><SPAN class=option>-v</SPAN></SAMP>|<SAMP><SPAN class=option>--verbose</SPAN></SAMP>]
             [<SAMP><SPAN class=option>-V</SPAN></SAMP>|<SAMP><SPAN class=option>--version</SPAN></SAMP>]
             [<SAMP><SPAN class=option>--help</SPAN></SAMP>] [<SAMP><SPAN class=option>--info</SPAN></SAMP>]
             <VAR>infile</VAR> [<VAR>outfile</VAR>]
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">gnu</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>utility copies the contents of an object file to another.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>uses the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">gnu</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">bfd</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>Library to read and write the object files. It can write the destination object file in a format different from that of the source object file. The exact behavior of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is controlled by command-line options. Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>should be able to copy a fully linked file between any two formats. However, copying a relocatable object file between any two formats may not work as expected.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>creates temporary files to do its translations and deletes them afterward.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>uses<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">bfd</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>to do all its translation work; it has access to all the formats described in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">bfd</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and thus is able to recognize most formats without being told explicitly. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs/ld/BFD.html#BFD">BFD</A>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be used to generate S-records by using an output target of `<SAMP><SPAN class=samp>srec</SPAN></SAMP>' (e.g., use `<SAMP><SPAN class=samp>-O srec</SPAN></SAMP>').</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be used to generate a raw binary file by using an output target of `<SAMP><SPAN class=samp>binary</SPAN></SAMP>' (e.g., use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-O binary</SPAN></SAMP>). When<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>generates a raw binary file, it will essentially produce a memory dump of the contents of the input object file. All symbols and relocation information will be discarded. The memory dump will start at the load address of the lowest section copied into the output file.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">When generating an S-record or a raw binary file, it may be helpful to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-S</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to remove sections containing debugging information. In some cases<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-R</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be useful to remove sections which contain information that is not needed by the binary file.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Note&#8212;<SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not able to change the endianness of its input files. If the input format has an endianness (some formats do not),<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>can only copy the inputs into file formats that have the same endianness or which have no endianness (e.g., `<SAMP><SPAN class=samp>srec</SPAN></SAMP>'). (However, see the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--reverse-bytes</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.)</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DT><SAMP><VAR>infile</VAR></SAMP></DT>
<DT><SAMP><VAR>outfile</VAR></SAMP></DT>
<DD>The input and output files, respectively. If you do not specify<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>outfile</VAR>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>creates a temporary file and destructively renames the result with the name of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>infile</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-I<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>bfdname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--input-target=</SPAN><VAR>bfdname</VAR></SAMP></DT>
<DD>Consider the source file's object format to be<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>bfdname</VAR>, rather than attempting to deduce it. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs/binutils/Target-Selection.html#Target-Selection">Target Selection</A>, for more information.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-O<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>bfdname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--output-target=</SPAN><VAR>bfdname</VAR></SAMP></DT>
<DD>Write the output file using the object format<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>bfdname</VAR>. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs/binutils/Target-Selection.html#Target-Selection">Target Selection</A>, for more information.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-F<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>bfdname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--target=</SPAN><VAR>bfdname</VAR></SAMP></DT>
<DD>Use<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>bfdname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as the object format for both the input and the output file; i.e., simply transfer data from source to destination with no translation. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs/binutils/Target-Selection.html#Target-Selection">Target Selection</A>, for more information.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-B<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>bfdarch</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--binary-architecture=</SPAN><VAR>bfdarch</VAR></SAMP></DT>
<DD>Useful when transforming a architecture-less input file into an object file. In this case the output architecture can be set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>bfdarch</VAR>. This option will be ignored if the input file has a known<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>bfdarch</VAR>. You can access this binary data inside a program by referencing the special symbols that are created by the conversion process. These symbols are called _binary_<VAR>objfile</VAR>_start, _binary_<VAR>objfile</VAR>_end and _binary_<VAR>objfile</VAR>_size. e.g. you can transform a picture file into an object file and then access it in your code using these symbols.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-j<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--only-section=</SPAN><VAR>sectionpattern</VAR></SAMP></DT>
<DD>Copy only the indicated sections from the input file to the output file. This option may be given more than once. Note that using this option inappropriately may make the output file unusable. Wildcard characters are accepted in<VAR>sectionpattern</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-R<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--remove-section=</SPAN><VAR>sectionpattern</VAR></SAMP></DT>
<DD>Remove any section matching<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>from the output file. This option may be given more than once. Note that using this option inappropriately may make the output file unusable. Wildcard characters are accepted in<VAR>sectionpattern</VAR>. Using both the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-j</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-R</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>options together results in undefined behaviour.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-S</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--strip-all</SPAN></SAMP></DT>
<DD>Do not copy relocation and symbol information from the source file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-g</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--strip-debug</SPAN></SAMP></DT>
<DD>Do not copy debugging symbols or sections from the source file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--strip-unneeded</SPAN></SAMP></DT>
<DD>Strip all symbols that are not needed for relocation processing.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-K<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>symbolname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--keep-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>When stripping symbols, keep symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>even if it would normally be stripped. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-N<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>symbolname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--strip-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>Do not copy symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>from the source file. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--strip-unneeded-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>Do not copy symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>from the source file unless it is needed by a relocation. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-G<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>symbolname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--keep-global-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>Keep only symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>global. Make all other symbols local to the file, so that they are not visible externally. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--localize-hidden</SPAN></SAMP></DT>
<DD>In an ELF object, mark all symbols that have hidden or internal visibility as local. This option applies on top of symbol-specific localization options such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-L</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-L<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>symbolname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--localize-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>Make symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>local to the file, so that it is not visible externally. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-W<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>symbolname</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--weaken-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>Make symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>weak. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--globalize-symbol=</SPAN><VAR>symbolname</VAR></SAMP></DT>
<DD>Give symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>global scoping so that it is visible outside of the file in which it is defined. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-w</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--wildcard</SPAN></SAMP></DT>
<DD>Permit regular expressions in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>symbolname</VAR>s used in other command line options. The question mark (?), asterisk (*), backslash (\) and square brackets ([]) operators can be used anywhere in the symbol name. If the first character of the symbol name is the exclamation point (!) then the sense of the switch is reversed for that symbol. For example:<PRE class=smallexample style="FONT-SIZE: smaller">            -w -W !foo -W fo*
     </PRE>
<P>would cause objcopy to weaken all symbols that start with &#8220;fo&#8221; except for the symbol &#8220;foo&#8221;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>-x</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--discard-all</SPAN></SAMP></DT>
<DD>Do not copy non-global symbols from the source file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-X</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--discard-locals</SPAN></SAMP></DT>
<DD>Do not copy compiler-generated local symbols. (These usually start with `<SAMP><SPAN class=samp>L</SPAN></SAMP>' or `<SAMP><SPAN class=samp>.</SPAN></SAMP>'.)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-b<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>byte</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--byte=</SPAN><VAR>byte</VAR></SAMP></DT>
<DD>If interleaving has been enabled via the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--interleave</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option then start the range of bytes to keep at the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>byte</VAR>th byte.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>byte</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be in the range from 0 to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>breadth</VAR>-1, where<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>breadth</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the value given by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--interleave</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-i [</SPAN><VAR>breadth</VAR><SPAN class=env>]</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--interleave[=</SPAN><VAR>breadth</VAR><SPAN class=env>]</SPAN></SAMP></DT>
<DD>Only copy a range out of every<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>breadth</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes. (Header data is not affected). Select which byte in the range begins the copy with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--byte</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option. Select the width of the range with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--interleave-width</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.
<P>This option is useful for creating files to program<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=sc style="FONT-VARIANT: small-caps">rom</SPAN>. It is typically used with an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>srec</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>output target. Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>will complain if you do not specify the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--byte</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option as well.</P>
<P>The default interleave breadth is 4, so with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--byte</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>set to 0,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>would copy the first byte out of every four bytes from the input to the output.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>--interleave-width=</SPAN><VAR>width</VAR></SAMP></DT>
<DD>When used with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--interleave</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option, copy<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes at a time. The start of the range of bytes to be copied is set by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--byte</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option, and the extent of the range is set with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--interleave</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.
<P>The default value for this option is 1. The value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>width</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>plus the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>byte</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>value set by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--byte</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option must not exceed the interleave breadth set by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--interleave</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.</P>
<P>This option can be used to create images for two 16-bit flashes interleaved in a 32-bit bus by passing<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-b 0 -i 4 --interleave-width=2</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-b 2 -i 4 --interleave-width=2</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to two<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>commands. If the input was '12345678' then the outputs would be '1256' and '3478' respectively.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>-p</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--preserve-dates</SPAN></SAMP></DT>
<DD>Set the access and modification dates of the output file to be the same as those of the input file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-D</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--enable-deterministic-archives</SPAN></SAMP></DT>
<DD><A name=index-deterministic-archives-58></A><A name=index-g_t_002d_002denable_002ddeterministic_002darchives-59></A>Operate in<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>deterministic</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>mode. When copying archive members and writing the archive index, use zero for UIDs, GIDs, timestamps, and use consistent file modes for all files.
<P>If<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>binutils</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>was configured with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--enable-deterministic-archives</SPAN></SAMP>, then this mode is on by default. It can be disabled with the `<SAMP><SPAN class=samp>-U</SPAN></SAMP>' option, below.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>-U</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--disable-deterministic-archives</SPAN></SAMP></DT>
<DD><A name=index-deterministic-archives-60></A><A name=index-g_t_002d_002denable_002ddeterministic_002darchives-61></A>Do<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>not</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>operate in<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>deterministic</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>mode. This is the inverse of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-D</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option, above: when copying archive members and writing the archive index, use their actual UID, GID, timestamp, and file mode values.
<P>This is the default unless<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>binutils</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>was configured with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--enable-deterministic-archives</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>--debugging</SPAN></SAMP></DT>
<DD>Convert debugging information, if possible. This is not the default because only certain debugging formats are supported, and the conversion process can be time consuming.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--gap-fill<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>val</VAR></SAMP></DT>
<DD>Fill gaps between sections with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>. This operation applies to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>load address</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>(LMA) of the sections. It is done by increasing the size of the section with the lower address, and filling in the extra space created with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--pad-to<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>address</VAR></SAMP></DT>
<DD>Pad the output file up to the load address<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>address</VAR>. This is done by increasing the size of the last section. The extra space is filled in with the value specified by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--gap-fill</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(default zero).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--set-start<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>val</VAR></SAMP></DT>
<DD>Set the start address of the new file to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>. Not all object file formats support setting the start address.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-start<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>incr</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--adjust-start<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>incr</VAR></SAMP></DT>
<DD><A name=index-changing-start-address-62></A>Change the start address by adding<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>incr</VAR>. Not all object file formats support setting the start address.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-addresses<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>incr</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--adjust-vma<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>incr</VAR></SAMP></DT>
<DD><A name=index-changing-object-addresses-63></A>Change the VMA and LMA addresses of all sections, as well as the start address, by adding<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>incr</VAR>. Some object file formats do not permit section addresses to be changed arbitrarily. Note that this does not relocate the sections; if the program expects sections to be loaded at a certain address, and this option is used to change the sections such that they are loaded at a different address, the program may fail.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-section-address<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR><SPAN class=env>{=,+,-}</SPAN><VAR>val</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--adjust-section-vma<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR><SPAN class=env>{=,+,-}</SPAN><VAR>val</VAR></SAMP></DT>
<DD><A name=index-changing-section-address-64></A>Set or change both the VMA address and the LMA address of any section matching<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR>. If `<SAMP><SPAN class=samp>=</SPAN></SAMP>' is used, the section address is set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>. Otherwise,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is added to or subtracted from the section address. See the comments under<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-addresses</SPAN></SAMP>, above. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not match any sections in the input file, a warning will be issued, unless<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--no-change-warnings</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-section-lma<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR><SPAN class=env>{=,+,-}</SPAN><VAR>val</VAR></SAMP></DT>
<DD><A name=index-changing-section-LMA-65></A>Set or change the LMA address of any sections matching<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR>. The LMA address is the address where the section will be loaded into memory at program load time. Normally this is the same as the VMA address, which is the address of the section at program run time, but on some systems, especially those where a program is held in ROM, the two can be different. If `<SAMP><SPAN class=samp>=</SPAN></SAMP>' is used, the section address is set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>. Otherwise,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is added to or subtracted from the section address. See the comments under<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-addresses</SPAN></SAMP>, above. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not match any sections in the input file, a warning will be issued, unless<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--no-change-warnings</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-section-vma<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR><SPAN class=env>{=,+,-}</SPAN><VAR>val</VAR></SAMP></DT>
<DD><A name=index-changing-section-VMA-66></A>Set or change the VMA address of any section matching<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR>. The VMA address is the address where the section will be located once the program has started executing. Normally this is the same as the LMA address, which is the address where the section will be loaded into memory, but on some systems, especially those where a program is held in ROM, the two can be different. If `<SAMP><SPAN class=samp>=</SPAN></SAMP>' is used, the section address is set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>. Otherwise,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is added to or subtracted from the section address. See the comments under<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-addresses</SPAN></SAMP>, above. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not match any sections in the input file, a warning will be issued, unless<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--no-change-warnings</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-warnings</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--adjust-warnings</SPAN></SAMP></DT>
<DD>If<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-section-address</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-section-lma</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-section-vma</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used, and the section pattern does not match any sections, issue a warning. This is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--no-change-warnings</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--no-adjust-warnings</SPAN></SAMP></DT>
<DD>Do not issue a warning if<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-section-address</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--adjust-section-lma</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--adjust-section-vma</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used, even if the section pattern does not match any sections.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--set-section-flags<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionpattern</VAR><SPAN class=env>=</SPAN><VAR>flags</VAR></SAMP></DT>
<DD>Set the flags for any sections matching<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionpattern</VAR>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>flags</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument is a comma separated string of flag names. The recognized names are `<SAMP><SPAN class=samp>alloc</SPAN></SAMP>', `<SAMP><SPAN class=samp>contents</SPAN></SAMP>', `<SAMP><SPAN class=samp>load</SPAN></SAMP>', `<SAMP><SPAN class=samp>noload</SPAN></SAMP>', `<SAMP><SPAN class=samp>readonly</SPAN></SAMP>', `<SAMP><SPAN class=samp>code</SPAN></SAMP>', `<SAMP><SPAN class=samp>data</SPAN></SAMP>', `<SAMP><SPAN class=samp>rom</SPAN></SAMP>', `<SAMP><SPAN class=samp>share</SPAN></SAMP>', and `<SAMP><SPAN class=samp>debug</SPAN></SAMP>'. You can set the `<SAMP><SPAN class=samp>contents</SPAN></SAMP>' flag for a section which does not have contents, but it is not meaningful to clear the `<SAMP><SPAN class=samp>contents</SPAN></SAMP>' flag of a section which does have contents&#8211;just remove the section instead. Not all flags are meaningful for all object file formats.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--add-section<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>sectionname</VAR><SPAN class=env>=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Add a new section named<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sectionname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>while copying the file. The contents of the new section are taken from the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>. The size of the section will be the size of the file. This option only works on file formats which can support sections with arbitrary names.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--rename-section<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>oldname</VAR><SPAN class=env>=</SPAN><VAR>newname</VAR><SPAN class=env>[,</SPAN><VAR>flags</VAR><SPAN class=env>]</SPAN></SAMP></DT>
<DD>Rename a section from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>oldname</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>newname</VAR>, optionally changing the section's flags to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>flags</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the process. This has the advantage over usng a linker script to perform the rename in that the output stays as an object file and does not become a linked executable.
<P>This option is particularly helpful when the input format is binary, since this will always create a section called .data. If for example, you wanted instead to create a section called .rodata containing binary data you could use the following command line to achieve it:</P><PRE class=smallexample style="FONT-SIZE: smaller">            objcopy -I binary -O &lt;output_format&gt; -B &lt;architecture&gt; \
             --rename-section .data=.rodata,alloc,load,readonly,data,contents \
             &lt;input_binary_file&gt; &lt;output_object_file&gt;
     </PRE><BR></DD>
<DT><SAMP><SPAN class=env>--long-section-names {enable,disable,keep}</SPAN></SAMP></DT>
<DD>Controls the handling of long section names when processing<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>COFF</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>PE-COFF</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object formats. The default behaviour, `<SAMP><SPAN class=samp>keep</SPAN></SAMP>', is to preserve long section names if any are present in the input file. The `<SAMP><SPAN class=samp>enable</SPAN></SAMP>' and `<SAMP><SPAN class=samp>disable</SPAN></SAMP>' options forcibly enable or disable the use of long section names in the output object; when `<SAMP><SPAN class=samp>disable</SPAN></SAMP>' is in effect, any long section names in the input object will be truncated. The `<SAMP><SPAN class=samp>enable</SPAN></SAMP>' option will only emit long section names if any are present in the inputs; this is mostly the same as `<SAMP><SPAN class=samp>keep</SPAN></SAMP>', but it is left undefined whether the `<SAMP><SPAN class=samp>enable</SPAN></SAMP>' option might force the creation of an empty string table in the output file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--change-leading-char</SPAN></SAMP></DT>
<DD>Some object file formats use special characters at the start of symbols. The most common such character is underscore, which compilers often add before every symbol. This option tells<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to change the leading character of every symbol when it converts between object file formats. If the object file formats use the same leading character, this option has no effect. Otherwise, it will add a character, or remove a character, or change a character, as appropriate.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--remove-leading-char</SPAN></SAMP></DT>
<DD>If the first character of a global symbol is a special symbol leading character used by the object file format, remove the character. The most common symbol leading character is underscore. This option will remove a leading underscore from all global symbols. This can be useful if you want to link together objects of different file formats with different conventions for symbol names. This is different from<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--change-leading-char</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>because it always changes the symbol name when appropriate, regardless of the object file format of the output file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--reverse-bytes=</SPAN><VAR>num</VAR></SAMP></DT>
<DD>Reverse the bytes in a section with output contents. A section length must be evenly divisible by the value given in order for the swap to be able to take place. Reversing takes place before the interleaving is performed.
<P>This option is used typically in generating ROM images for problematic target systems. For example, on some target boards, the 32-bit words fetched from 8-bit ROMs are re-assembled in little-endian byte order regardless of the CPU byte order. Depending on the programming model, the endianness of the ROM may need to be modified.</P>
<P>Consider a simple file with a section containing the following eight bytes:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>12345678</CODE>.</P>
<P>Using `<SAMP><SPAN class=samp>--reverse-bytes=2</SPAN></SAMP>' for the above example, the bytes in the output file would be ordered<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>21436587</CODE>.</P>
<P>Using `<SAMP><SPAN class=samp>--reverse-bytes=4</SPAN></SAMP>' for the above example, the bytes in the output file would be ordered<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>43218765</CODE>.</P>
<P>By using `<SAMP><SPAN class=samp>--reverse-bytes=2</SPAN></SAMP>' for the above example, followed by `<SAMP><SPAN class=samp>--reverse-bytes=4</SPAN></SAMP>' on the output file, the bytes in the second output file would be ordered<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>34127856</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>--srec-len=</SPAN><VAR>ival</VAR></SAMP></DT>
<DD>Meaningful only for srec output. Set the maximum length of the Srecords being produced to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>ival</VAR>. This length covers both address, data and crc fields.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--srec-forceS3</SPAN></SAMP></DT>
<DD>Meaningful only for srec output. Avoid generation of S1/S2 records, creating S3-only record format.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--redefine-sym<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>old</VAR><SPAN class=env>=</SPAN><VAR>new</VAR></SAMP></DT>
<DD>Change the name of a symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>old</VAR>, to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new</VAR>. This can be useful when one is trying link two things together for which you have no source, and there are name collisions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--redefine-syms=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--redefine-sym</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to each symbol pair "<VAR>old</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>new</VAR>" listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol pair per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--weaken</SPAN></SAMP></DT>
<DD>Change all global symbols in the file to be weak. This can be useful when building an object which will be linked against other objects using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-R</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to the linker. This option is only effective when using an object file format which supports weak symbols.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--keep-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--keep-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--strip-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--strip-unneeded-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-unneeded-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--keep-global-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--keep-global-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--localize-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--localize-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<BR></DD>
<DT><SAMP><SPAN class=env>--globalize-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--globalize-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--weaken-symbols=</SPAN><VAR>filename</VAR></SAMP></DT>
<DD>Apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--weaken-symbol</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to each symbol listed in the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>filename</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply a flat file, with one symbol name per line. Line comments may be introduced by the hash character. This option may be given more than once.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--alt-machine-code=</SPAN><VAR>index</VAR></SAMP></DT>
<DD>If the output architecture has alternate machine codes, use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>index</VAR>th code instead of the default one. This is useful in case a machine is assigned an official code and the tool-chain adopts the new code, but other applications still depend on the original code being used. For ELF based architectures if the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>index</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>alternative does not exist then the value is treated as an absolute number to be stored in the e_machine field of the ELF header.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--writable-text</SPAN></SAMP></DT>
<DD>Mark the output text as writable. This option isn't meaningful for all object file formats.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--readonly-text</SPAN></SAMP></DT>
<DD>Make the output text write protected. This option isn't meaningful for all object file formats.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--pure</SPAN></SAMP></DT>
<DD>Mark the output file as demand paged. This option isn't meaningful for all object file formats.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--impure</SPAN></SAMP></DT>
<DD>Mark the output file as impure. This option isn't meaningful for all object file formats.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--prefix-symbols=</SPAN><VAR>string</VAR></SAMP></DT>
<DD>Prefix all symbols in the output file with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>string</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--prefix-sections=</SPAN><VAR>string</VAR></SAMP></DT>
<DD>Prefix all section names in the output file with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>string</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--prefix-alloc-sections=</SPAN><VAR>string</VAR></SAMP></DT>
<DD>Prefix all the names of all allocated sections in the output file with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>string</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--add-gnu-debuglink=</SPAN><VAR>path-to-file</VAR></SAMP></DT>
<DD>Creates a .gnu_debuglink section which contains a reference to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>path-to-file</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and adds it to the output file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--keep-file-symbols</SPAN></SAMP></DT>
<DD>When stripping a file, perhaps with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-debug</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-unneeded</SPAN></SAMP>, retain any symbols specifying source file names, which would otherwise get stripped.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--only-keep-debug</SPAN></SAMP></DT>
<DD>Strip a file, removing contents of any sections that would not be stripped by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-debug</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and leaving the debugging sections intact. In ELF files, this preserves all note sections in the output.
<P>The intention is that this option will be used in conjunction with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--add-gnu-debuglink</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to create a two part executable. One a stripped binary which will occupy less space in RAM and in a distribution and the second a debugging information file which is only needed if debugging abilities are required. The suggested procedure to create these files is as follows:</P>
<OL type=1>
<LI>Link the executable as normal. Assuming that is is called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>foo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>then...</LI>
<LI>Run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objcopy --only-keep-debug foo foo.dbg</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to create a file containing the debugging info.</LI>
<LI>Run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objcopy --strip-debug foo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to create a stripped executable.</LI>
<LI>Run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objcopy --add-gnu-debuglink=foo.dbg foo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to add a link to the debugging info into the stripped executable.</LI></OL>
<P>Note&#8212;the choice of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.dbg</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as an extension for the debug info file is arbitrary. Also the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>--only-keep-debug</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>step is optional. You could instead do this:</P>
<OL type=1>
<LI>Link the executable as normal.</LI>
<LI>Copy<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>foo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>foo.full</CODE></LI>
<LI>Run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objcopy --strip-debug foo</CODE></LI>
<LI>Run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objcopy --add-gnu-debuglink=foo.full foo</CODE></LI></OL>
<P>i.e., the file pointed to by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--add-gnu-debuglink</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be the full executable. It does not have to be a file created by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--only-keep-debug</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>switch.</P>
<P>Note&#8212;this switch is only intended for use on fully linked files. It does not make sense to use it on object files where the debugging information may be incomplete. Besides the gnu_debuglink feature currently only supports the presence of one filename containing debugging information, not multiple filenames on a one-per-object-file basis.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>--strip-dwo</SPAN></SAMP></DT>
<DD>Remove the contents of all DWARF .dwo sections, leaving the remaining debugging sections and all symbols intact. This option is intended for use by the compiler as part of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-gsplit-dwarf</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option, which splits debug information between the .o file and a separate .dwo file. The compiler generates all debug information in the same file, then uses the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--extract-dwo</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to copy the .dwo sections to the .dwo file, then the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-dwo</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option to remove those sections from the original .o file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--extract-dwo</SPAN></SAMP></DT>
<DD>Extract the contents of all DWARF .dwo sections. See the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--strip-dwo</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option for more information.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--file-alignment<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>num</VAR></SAMP></DT>
<DD>Specify the file alignment. Sections in the file will always begin at file offsets which are multiples of this number. This defaults to 512. [This option is specific to PE targets.]<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--heap<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>reserve</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--heap<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>reserve</VAR><SPAN class=env>,</SPAN><VAR>commit</VAR></SAMP></DT>
<DD>Specify the number of bytes of memory to reserve (and optionally commit) to be used as heap for this program. [This option is specific to PE targets.]<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--image-base<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>value</VAR></SAMP></DT>
<DD>Use<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>value</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as the base address of your program or dll. This is the lowest memory location that will be used when your program or dll is loaded. To reduce the need to relocate and improve performance of your dlls, each should have a unique base address and not overlap any other dlls. The default is 0x400000 for executables, and 0x10000000 for dlls. [This option is specific to PE targets.]<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--section-alignment<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>num</VAR></SAMP></DT>
<DD>Sets the section alignment. Sections in memory will always begin at addresses which are a multiple of this number. Defaults to 0x1000. [This option is specific to PE targets.]<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--stack<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>reserve</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--stack<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>reserve</VAR><SPAN class=env>,</SPAN><VAR>commit</VAR></SAMP></DT>
<DD>Specify the number of bytes of memory to reserve (and optionally commit) to be used as stack for this program. [This option is specific to PE targets.]<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--subsystem<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>which</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--subsystem<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>which</VAR><SPAN class=env>:</SPAN><VAR>major</VAR></SAMP></DT>
<DT><SAMP><SPAN class=env>--subsystem<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>which</VAR><SPAN class=env>:</SPAN><VAR>major</VAR><SPAN class=env>.</SPAN><VAR>minor</VAR></SAMP></DT>
<DD>Specifies the subsystem under which your program will execute. The legal values for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>which</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>native</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>windows</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>console</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>posix</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>efi-app</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>efi-bsd</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>efi-rtd</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sal-rtd</CODE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>xbox</CODE>. You may optionally set the subsystem version also. Numeric values are also accepted for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>which</VAR>. [This option is specific to PE targets.]<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--extract-symbol</SPAN></SAMP></DT>
<DD>Keep the file's section flags and symbols but remove all section data. Specifically, the option:
<UL>
<LI>removes the contents of all sections;</LI>
<LI>sets the size of every section to zero; and</LI>
<LI>sets the file's start address to zero.</LI></UL>
<P>This option is used to build a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>.sym</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>file for a VxWorks kernel. It can also be a useful way of reducing the size of a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--just-symbols</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>linker input file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><SAMP><SPAN class=env>--compress-debug-sections</SPAN></SAMP></DT>
<DD>Compress DWARF debug sections using zlib.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--decompress-debug-sections</SPAN></SAMP></DT>
<DD>Decompress DWARF debug sections using zlib.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-V</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--version</SPAN></SAMP></DT>
<DD>Show the version number of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>-v</SPAN></SAMP></DT>
<DT><SAMP><SPAN class=env>--verbose</SPAN></SAMP></DT>
<DD>Verbose output: list all object files modified. In the case of archives, `<SAMP><SPAN class=samp>objcopy -V</SPAN></SAMP>' lists all members of the archive.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--help</SPAN></SAMP></DT>
<DD>Show a summary of the options to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>objcopy</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><SAMP><SPAN class=env>--info</SPAN></SAMP></DT>
<DD>Display a list showing all architectures and object formats available.</DD></DL>