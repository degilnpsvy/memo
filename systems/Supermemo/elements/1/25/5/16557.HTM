<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H1 style="BACKGROUND-IMAGE: url(http://d4bb7yl96lyl1.cloudfront.net/assets/debut_dark.png); BOX-SIZING: border-box; BORDER-BOTTOM: rgb(51,51,51) 1px solid; PADDING-BOTTOM: 30px; LINE-HEIGHT: 46px; BACKGROUND-COLOR: rgb(89,89,89); MARGIN: 0px -296px 40px; PADDING-LEFT: 296px; PADDING-RIGHT: 296px; FONT-FAMILY: heading, Helvetica, sans-serif; BACKGROUND-POSITION: 50% 0%; LETTER-SPACING: -1px; COLOR: rgb(255,255,255); FONT-SIZE: 36px; BORDER-TOP: rgb(0,0,0) 1px dashed; PADDING-TOP: 100px" class=title>Chapter&nbsp;15.&nbsp;C Extensions</H1></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px/22px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 20px; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=c_extension_pro_id2><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming class=indexterm></A>This chapter looks at the problem of accessing C code from Python. Many of Python&#8217;s built-in libraries are written in C, and accessing C is an important part of making Python talk to existing libraries. It&#8217;s also an area that might require the most study if you&#8217;re faced with the problem of porting extension code from Python 2 to 3.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px/22px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 20px; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=although_python_id2>Although Python provides an extensive C programming API, there are actually many different approaches for dealing with C. Rather than trying to give an exhaustive reference for every possible tool or technique, the approach is to focus on a small fragment of C code along with some representative examples of how to work with the code. The goal is to provide a series of programming templates that experienced programmers can expand upon for their own use.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px/22px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 20px; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=here_is_the_c_c>Here is the C code we will work with in most of the recipes:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(51,51,51); TEXT-INDENT: 0px; PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT: 0.9em Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; LETTER-SPACING: normal; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; MARGIN-RIGHT: -15px; WORD-SPACING: 0px; PADDING-TOP: 16px; -webkit-text-stroke-width: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplec__ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* sample.c */</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_method</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include &lt;math.h&gt;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Compute the greatest common divisor */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>g</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>g</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>g</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>g</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Test if (x0,y0) is in the Mandelbrot set or not */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>xtemp</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>xtemp</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>xtemp</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Divide two numbers */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>/</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Average values in an array */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>total</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>0.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>total</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>];</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>total</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>/</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* A C data structure */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Function involving a C data structure */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>hypot</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px/22px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 20px; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=this_code_conta>This code contains a number of different C programming features. First, there are a few simple functions such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>gcd()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>is_mandel()</CODE>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>divide()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is an example of a C function returning multiple values, one through a pointer argument. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function performs a data reduction across a C array. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>distance()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function involve C structures.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px/22px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 20px; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=for_all_of_the_>For all of the recipes that follow, assume that the preceding code is found in a file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.c</EM></SPAN>, that definitions are found in a file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.h</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and that it has been compiled into a library<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>libsample</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can be linked to other C code. The exact details of compilation and linking vary from system to system, but that is not the primary focus. It is assumed that if you&#8217;re working with C code, you&#8217;ve already figured that out.</P>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_accessing_c_code_using_ctypes class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Accessing C Code Using ctypes</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_240 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id3><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_ctypes_module_and class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_ctypes_module class=indexterm></A>You have a small number of C functions that have been compiled into a shared library or DLL. You would like to call these functions purely from Python without having to write additional C code or using a third-party extension tool.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_240 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_small_probl>For small problems involving C code, it is often easy enough to use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module that is part of Python&#8217;s standard library. In order to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE>, you must first make sure the C code you want to access has been compiled into a shared library that is compatible with the Python interpreter (e.g., same architecture, word size, compiler, etc.). For the purposes of this recipe, assume that a shared library,<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>libsample.so</CODE>, has been created and that it contains nothing more than the code shown in the chapter introduction. Further assume that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">libsample.so</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file has been placed in the same directory as the<SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file shown next.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_access_the_r>To access the resulting library, you make a Python module that wraps around it, such as the following:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplepy_imp class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># sample.py</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>ctypes</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>os</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Try to locate the .so file in the same directory as this file</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_file</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'libsample.so'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_path</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>os</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>path</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>join</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>os</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>path</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>split</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>__file__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)[:</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_file</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,)))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdll</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>LoadLibrary</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_path</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># int gcd(int, int)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># int in_mandel(double, double, int)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># int divide(int, int, int *)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># void avg(double *, int n)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Define a special type for the 'double *' argument</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>class</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nc>DoubleArrayType</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>from_param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typename</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>type</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>__name__</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>hasattr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'from_'</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>getattr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'from_'</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>elif</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>isinstance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Can't convert </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(218,239,163); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=si>%s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Cast from array.array objects</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>from_array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typecode</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'must be an array of doubles'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buffer_info</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cast</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Cast from lists/tuples</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>from_list</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>val</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>val</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>from_tuple</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>from_list</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Cast from a numpy array</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>from_ndarray</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>param</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data_as</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>DoubleArray</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>DoubleArrayType</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_avg</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>DoubleArray</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>values</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>values</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>values</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># struct Point { }</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>class</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nc>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Structure</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_fields_</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'x'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>),</CODE>
                <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'y'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)]</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># double distance(Point *, Point *)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>),</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_all_goes_wel>If all goes well, you should be able to load the module and use the resulting C functions. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id1 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>35</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>7</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>500</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>1.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>500</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>8</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>(5, 2)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>4.242640687119285</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_240 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=there_are_sever_id3>There are several aspects of this recipe that warrant some discussion. The first issue concerns the overall packaging of C and Python code together. If you are using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to access C code that you have compiled yourself, you will need to make sure that the shared library gets placed in a location where the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sample.py</CODE>module can find it. One possibility is to put the resulting<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.so</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file in the same directory as the supporting Python code. This is what&#8217;s shown at the first part of this recipe&#8212;<SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>looks at the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>__file__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable to see where it has been installed, and then constructs a path that points to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">libsample.so</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file in the same directory.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_the_c_librar>If the C library is going to be installed elsewhere, then you&#8217;ll have to adjust the path accordingly. If the C library is installed as a standard library on your machine, you might be able to use the<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id933669 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id933676 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes.util.find_library()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=from_ctypes class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>ctypes.util</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>find_library</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>find_library</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'m'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'/usr/lib/libm.dylib'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>find_library</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'pthread'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'/usr/lib/libpthread.dylib'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>find_library</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'/usr/local/lib/libsample.so'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=again_ctypes_w>Again,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>won&#8217;t work at all if it can&#8217;t locate the library with the C code. Thus, you&#8217;ll need to spend a few minutes thinking about how you want to install things.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_you_know_w>Once you know where the C library is located, you use<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id933820 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes.cdll.LoadLibrary()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to load it. The following statement in the solution does this where<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>_path</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the full pathname to the shared library:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=mod__ctypesc class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdll</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>LoadLibrary</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_path</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_a_library_>Once a library has been loaded, you need to write statements that extract specific symbols and put type signatures on them. This is what&#8217;s happening in code fragments such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=int_in_mandel class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># int in_mandel(double, double, int)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_this_code_t_id9>In this code, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>.argtypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute is a tuple containing the input arguments to a function, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>.restype</CODE>is the return type.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>defines a variety of type objects (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>c_double</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>c_int</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>c_short</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>c_float</CODE>, etc.) that represent common C data types. Attaching the type signatures is critical if you want to make Python pass the right kinds of arguments and convert data correctly (if you don&#8217;t do this, not only will the code not work, but you might cause the entire interpreter process to crash).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=a_somewhat_tric>A somewhat tricky part of using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is that the original C code may use idioms that don&#8217;t map cleanly to Python. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>divide()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is a good example because it returns a value through one of its arguments. Although that&#8217;s a common C technique, it&#8217;s often not clear how it&#8217;s supposed to work in Python. For example, you can&#8217;t do anything straightforward like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=divide___m class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>ctypes.ArgumentError: argument 3: &lt;class 'TypeError'&gt;</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>expected LP_c_int</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>instance instead of int</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=even_if_this_di>Even if this did work, it would violate Python&#8217;s immutability of integers and probably cause the entire interpreter to be sucked into a black hole. For arguments involving pointers, you usually have to construct a compatible<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object and pass it in like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=x__ctypes class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>3</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_an_instanc>Here an instance of a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes.c_int</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is created and passed in as the pointer object. Unlike a normal Python integer, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>c_int</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object can be mutated. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>.value</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute can be used to either retrieve or change the value as desired.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_cases_where>For cases where the C calling convention is "un-Pythonic," it is common to write a small wrapper function. In the solution, this code makes the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>divide()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function return the two results using a tuple instead:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=int_dividein class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># int divide(int, int, int *)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>restype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=arraysin_c_exte><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id934810 class=indexterm></A>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function presents a new kind of challenge. The underlying C code expects to receive a pointer and a length representing an array. However, from the Python side, we must consider the following questions: What is an array? Is it a list? A tuple? An array from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>array</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module? A<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array? Is it all of these? In practice, a Python "array" could take many different forms, and maybe you would like to support multiple possibilities.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_doublearray>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>DoubleArrayType</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>class shows how to handle this situation. In this class, a single method<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>from_param()</CODE>is defined. The role of this method is to take a single parameter and narrow it down to a compatible<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE>object (a pointer to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes.c_double</CODE>, in the example). Within<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>from_param()</CODE>, you are free to do anything that you wish. In the solution, the typename of the parameter is extracted and used to dispatch to a more specialized method. For example, if a list is passed, the typename is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>list</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and a method<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>from_list()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is invoked.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_lists_and_t>For lists and tuples, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>from_list()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method performs a conversion to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array object. This looks a little weird, but here is an interactive example of converting a list to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=nums____id2 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>nums</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>nums</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>nums</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;__main__.c_double_Array_3 object at 0x10069cd40&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>1.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>3.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_array_objec>For<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>array</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>from_array()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method extracts the underlying memory pointer and casts it to a<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pointer object. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_arra_id2 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>array('d', [1.0, 2.0, 3.0])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr_</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buffer_info</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>4298687200</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cast</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>POINTER</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;__main__.LP_c_double object at 0x10069cd40&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_from_ndarra>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>from_ndarray()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>shows comparable conversion code for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>arrays.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=by_defining_the>By defining the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>DoubleArrayType</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>class and using it in the type signature of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE>, as shown, the function can accept a variety of different array-like inputs:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id2 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>numpy</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>numpy</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>1.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>3.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_last_part_o_id3>The last part of this recipe shows how to work with a simple C structure. For structures, you simply define a class that contains the appropriate fields and types like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=class_pointcty class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>class</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nc>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Structure</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_fields_</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'x'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>),</CODE>
                <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'y'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)]</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_defined_y>Once defined, you can use the class in type signatures as well as in code that needs to instantiate and work with the structures. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=p__sample_id1 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>1.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>4.242640687119285</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=ctypes_moduleal><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id936083 class=indexterm></A>A few final comments:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a useful library to know about if all you&#8217;re doing is accessing a few C functions from Python. However, if you&#8217;re trying to access a large library, you might want to look at alternative approaches, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id936102 class=indexterm></A>Swig (described in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Wrapping C Code with Swig" href="about:ch15.html#swig">&#8220;Wrapping C Code with Swig&#8221;</A>) or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id936115 class=indexterm></A>Cython (described in<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Wrapping Existing C Code with Cython" href="about:ch15.html#cython_existing">&#8220;Wrapping Existing C Code with Cython&#8221;</A>).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_main_proble>The main problem with a large library is that since<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>isn&#8217;t entirely automatic, you&#8217;ll have to spend a fair bit of time writing out all of the type signatures, as shown in the example. Depending on the complexity of the library, you might also have to write a large number of small wrapper functions and supporting classes. Also, unless you fully understand all of the low-level details of the C interface, including memory management and error handling, it is often quite easy to make Python catastrophically crash with a segmentation fault, access violation, or some similar error.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_an_alternati_id6>As an alternative to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE>, you might also look at<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id936157 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://cffi.readthedocs.org/en/latest" target=_top>CFFI</A>. CFFI provides much of the same functionality, but uses C syntax and supports more advanced kinds of C code. As of this writing, CFFI is still a relatively new project, but its use has been growing rapidly. There has even been some discussion of including it in the Python standard library in some future release. Thus, it&#8217;s definitely something to keep an eye on.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id936175 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id936186 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=simpleextension class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Writing a Simple C Extension Module</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_241 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id4><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_writing_modules class=indexterm></A>You want to write a simple C extension module directly using Python&#8217;s extension API and no other tools.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_241 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_simple_c_co>For simple C code, it is straightforward to make a handcrafted extension module. As a preliminary step, you probably want to make sure your C code has a proper header file. For example,</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=sampleh___id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* sample.h */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include &lt;math.h&gt;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=typically_this>Typically, this header would correspond to a library that has been compiled separately. With that assumption, here is a sample extension module that illustrates the basics of writing extension functions:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=include_pytho_id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "Python.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "sample.h"</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* int gcd(int, int) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"ii"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"i"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* int in_mandel(double, double, int) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"ddi"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"i"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* int divide(int, int, int *) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quotient</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"ii"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quotient</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"(ii)"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quotient</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Module method table */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMethodDef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>SampleMethods</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"gcd"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>METH_VARARGS</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Greatest common divisor"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>},</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"in_mandel"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>METH_VARARGS</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Mandelbrot test"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>},</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"divide"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>METH_VARARGS</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Integer division"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>},</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Module structure */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModuleDef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>samplemodule</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModuleDef_HEAD_INIT</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"sample"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>           <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* name of module */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"A sample module"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Doc string (may be NULL) */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>                 <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Size of per-interpreter state or -1 */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>SampleMethods</CODE>       <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Method table */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Module initialization function */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMODINIT_FUNC</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>PyInit_sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModule_Create</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>samplemodule</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_building_th>For building the extension module, create a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">setup.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file that looks like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=setuppy_from_id2 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># setup.py</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.core</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'pysample.c'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>include_dirs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'/some/dir'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>define_macros</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'FOO'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'1'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>undef_macros</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'BAR'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>library_dirs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'/usr/local/lib'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>libraries</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id5><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id938208 class=indexterm></A>Now, to build the resulting library, simply use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>python3 buildlib.py build_ext --inplace</CODE>. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=bash__python__id13 class=programlisting data-language="bash">bash % python3 setup.py build_ext --inplace
running build_ext
building <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(143,157,106); FONT-SIZE: 1em" class=s1>'sample'</CODE> extension
gcc -fno-strict-aliasing -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes
 -I/usr/local/include/python3.3m -c pysample.c
 -o build/temp.macosx-10.6-x86_64-3.3/pysample.o
gcc -bundle -undefined dynamic_lookup
build/temp.macosx-10.6-x86_64-3.3/pysample.o <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\</CODE>
 -L/usr/local/lib -lsample -o sample.so
bash %</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_shown_this__id2>As shown, this creates a shared library called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sample.so</CODE>. When compiled, you should be able to start importing it as a module:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id3 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>35</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>7</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>500</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>1.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>500</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>8</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>(5, 2)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=microsoft_visua><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id938494 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id938499 class=indexterm></A>If you are attempting these steps on Windows, you may need to spend some time fiddling with your environment and the build environment to get extension modules to build correctly. Binary distributions of Python are typically built using Microsoft Visual<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>Studio</SPAN>. To get extensions to work, you may have to compile them using the same or compatible tools. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/extending/windows.html" target=_top>the Python documentation</A>.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_241 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=before_attempti>Before attempting any kind of handwritten extension, it is absolutely critical that you consult Python&#8217;s documentation on<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/extending/index.html" target=_top>"Extending and Embedding the Python Interpreter"</A>. Python&#8217;s C extension API is large, and repeating all of it here is simply not practical. However, the most important parts can be easily discussed.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=first_in_exten>First, in extension modules, functions that you write are all typically written with a common prototype such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=objectsrepresen><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id938644 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the C data type that represents any Python object. At a very high level, an extension function is a C function that receives a tuple of Python objects (in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject *args</CODE>) and returns a new Python object as a result. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>self</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument to the function is unused for simple extension functions, but comes into play should you want to define new classes or object types in C (e.g., if the extension function were a method of a class, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>self</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>would hold the instance).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_pyarg_parse>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is used to convert values from Python to a C representation. As input, it takes a format string that indicates the required values, such as "i" for integer and "d" for double, as well as the addresses of C variables in which to place the converted results.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>performs a variety of checks on the number and type of arguments. If there is any mismatch with the format string, an exception is raised and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is returned. By checking for this and simply returning NULL, an appropriate exception will have been raised in the calling code.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_py_buildval>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_BuildValue()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is used to create Python objects from C data types. It also accepts a format code to indicate the desired type. In the extension functions, it is used to return results back to Python. One feature of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_BuildValue()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is that it can build more complicated kinds of objects, such as tuples and dictionaries. In the code for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>py_divide()</CODE>, an example showing the return of a tuple is shown. However, here are a few more examples:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=return_py_build class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"i"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>34</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>//</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>an</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>integer</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"d"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>3.4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>     <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>//</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"s"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Hello"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>//</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Null</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>terminated</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>UTF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>8</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>string</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"(ii)"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>//</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Tuple</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=near_the_bottom>Near the bottom of any extension module, you will find a function table such as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>SampleMethods</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>table shown in this recipe. This table lists C functions, the names to use in Python, as well as doc strings. All modules are required to specify such a table, as it gets used in the initialization of the module.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_final_funct>The final function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyInit_sample()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the module initialization function that executes when the module is first imported. The primary job of this function is to register the module object with the interpreter.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_a_final_note_id2>As a final note, it must be stressed that there is considerably more to extending Python with C functions than what is shown here (in fact, the C API contains well over 500 functions in it). You should view this recipe simply as a stepping stone for getting started. To do more, start with the documentation on the<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id939034 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id939040 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_BuildValue()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions, and expand from there.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id939058 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=carray class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Writing an Extension Function That Operates on Arrays</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_242 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=arraysoperating><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_arrays_operating_on_with_extension_functions class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_operating_on_arrays_with class=indexterm></A>You want to write a C extension function that operates on contiguous arrays of data, as might be created by the array module or libraries like NumPy. However, you would like your function to be general purpose and not specific to any one array library.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_242 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_receive_and_>To receive and process arrays in a portable manner, you should write code that uses the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id939141 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/c-api/buffer.html" target=_top>Buffer Protocol</A>. Here is an example of a handwritten C extension function that receives array data and calls the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg(double *buf, int len)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function from this chapter&#8217;s introduction:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=call_double_ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Call double avg(double *, int) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bufobj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_buffer</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Get the passed Python object */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"O"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bufobj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Attempt to extract buffer information from it */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_GetBuffer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bufobj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBUF_ANY_CONTIGUOUS</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>|</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBUF_FORMAT</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ndim</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_SetString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyExc_TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Expected a 1-dimensional array"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBuffer_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Check the type of items in the array */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>strcmp</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>format</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"d"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_SetString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyExc_TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Expected an array of doubles"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBuffer_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Pass the raw buffer and size to the C function */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]);</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Indicate we're done working with the buffer */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBuffer_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"d"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_an_exam_id31>Here is an example that shows how this extension function works:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_arra_id3 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>numpy</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>numpy</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>1.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>3.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>'list' does not support the buffer interface</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Expected an array of doubles</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>numpy</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>1.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>3.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>4.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>5.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>6.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>ValueError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ndarray is not contiguous</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Expected a 1-dimensional array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_242 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=passing_array_o>Passing array objects to C functions might be one of the most common things you would want to do with a extension function. A large number of Python applications, ranging from image processing to scientific computing, are based on high-performance array processing. By writing code that can accept and operate on arrays, you can write customized code that plays nicely with those applications as opposed to having some sort of custom solution that only works with your own code.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_key_to_this_id4>The key to this code is the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyBuffer_GetBuffer()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function. Given an arbitrary Python object, it tries to obtain information about the underlying memory representation. If it&#8217;s not possible, as is the case with most normal Python objects, it simply raises an exception and returns -1. The special flags passed to<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id940483 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyBuffer_GetBuffer()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>give<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>additional</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>hints about the kind of memory buffer that is requested. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyBUF_ANY_CONTIGUOUS</CODE></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifies that a contiguous region of memory is required.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_arrays_byt>For arrays, byte strings, and other similar objects, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_buffer</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure is filled with information about the underlying memory. This includes a pointer to the memory, size, itemsize, format, and other details. Here is the definition of this structure:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=typedef_struct__id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bufferinfo</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>              <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Pointer to buffer memory */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>          <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Python object that is the owner */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>         <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Total size in bytes */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>itemsize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Size in bytes of a single item */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>readonly</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>           <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Read-only access flag */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ndim</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>               <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Number of dimensions */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>format</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>           <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* struct code of a single item */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>      <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Array containing dimensions */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>strides</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Array containing strides */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>suboffsets</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Array containing suboffsets */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_buffer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_this_recipe_id7>In this recipe, we are simply concerned with receiving a contiguous array of doubles. To check if items are a double, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>format</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute is checked to see if the string is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>"d"</CODE>. This is the same code that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>struct</CODE>module uses when encoding binary values. As a general rule,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>format</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>could be any format string that&#8217;s compatible with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>struct</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module and might include multiple items in the case of arrays containing C structures.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_we_have_ve>Once we have verified the underlying buffer information, we simply pass it to the C function, which treats it as a normal C array. For all practical purposes, it is not concerned with what kind of array it is or what library created it. This is how the function is able to work with arrays created by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>array</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module or by<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy</CODE>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=before_returnin>Before returning a final result, the underlying buffer view must be released using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id940864 class=indexterm></A><SPAN style="BOX-SIZING: border-box" class=keep-together><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyBuffer_Release()</CODE></SPAN>. This step is required to properly manage reference counts of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>objects</SPAN>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=again_this_rec>Again, this recipe only shows a tiny fragment of code that receives an array. If working with arrays, you might run into issues with multidimensional data, strided data, different data types, and more that will require study. Make sure you consult the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/c-api/buffer.html" target=_top>official documentation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to get more details.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_need_to__id14>If you need to write many extensions involving array handling, you may find it easier to implement the code in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id940907 class=indexterm></A>Cython. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Using Cython to Write High-Performance Array Operations" href="about:ch15.html#cythonarray">&#8220;Using Cython to Write High-Performance Array Operations&#8221;</A>.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id940923 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id940934 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=capsules class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Managing Opaque Pointers in C Extension Modules</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_243 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_apisc_extensi><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_APIs class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_APIs_defining_exporting class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_capsule_objects_in class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_opaque_pointers_in class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_capsule_objects class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_capsule_objects_C_APIs_defining_exporting_with class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_opaque_pointers class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_structures_in_C_handling class=indexterm></A>You have an extension module that needs to handle a pointer to a C data structure, but you don&#8217;t want to expose any internal details of the structure to Python.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_243 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=opaque_data_str>Opaque data structures are easily handled by wrapping them inside capsule objects. Consider this fragment of C code from our sample code:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=typedef_struct__id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_an_exam_id32>Here is an example of extension code that wraps the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>distance()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function using capsules:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=destructor_f_id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Destructor function for points */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>del_Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>));</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Utility functions */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>PyPoint_FromPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must_free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_New</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must_free</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>?</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>del_Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Create a new Point object */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"dd"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>malloc</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>sizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>));</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_FromPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"OO"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"d"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=using_these_fun>Using these functions from Python looks like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id4 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;capsule object "Point" at 0x1004ea330&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;capsule object "Point" at 0x1005d1db0&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.8284271247461903</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_243 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=capsules_are_si>Capsules are similar to a typed C pointer. Internally, they hold a generic pointer along with an identifying name and can be easily created using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942614 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_New()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function. In addition, an optional destructor function can be attached to a capsule to release the underlying memory when the capsule object is garbage collected.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_extract_the_>To extract the pointer contained inside a capsule, use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942633 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_GetPointer()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function and specify the name. If the supplied name doesn&#8217;t match that of the capsule or some other error occurs, an exception is raised and NULL is returned.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_this_recipe_id8>In this recipe, a pair of utility functions&#8212;<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyPoint_FromPoint()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyPoint_AsPoint()</CODE>&#8212;have been written to deal with the mechanics of creating and unwinding<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instances from capsule objects. In any extension functions, we&#8217;ll use these functions instead of working with capsules directly. This design choice makes it easier to deal with possible changes to the wrapping of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects in the future. For example, if you decided to use something other than a capsule later, you would only have to change these two functions.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=one_tricky_part_id2>One tricky part about capsules concerns garbage collection and memory management. The<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyPoint_FromPoint()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function accepts a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>must_free</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument that indicates whether the underlying<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure is to be collected when the capsule is destroyed. When working with certain kinds of C code, ownership issues can be difficult to handle (e.g., perhaps a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure is embedded within a larger data structure that is managed separately). Rather than making a unilateral decision to garbage collect, this extra argument gives control back to the programmer. It should be noted that the destructor associated with an existing capsule can also be changed using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942717 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_SetDestructor()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=capsules_are_a_>Capsules are a sensible solution to interfacing with certain kinds of C code involving structures. For instance, sometimes you just don&#8217;t care about exposing the internals of a structure or turning it into a full-fledged extension type. With a capsule, you can put a lightweight wrapper around it and easily pass it around to other extension functions.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942741 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942751 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942762 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942772 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942783 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942792 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942803 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id942812 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_defining_and_exporting_c_apis_from_extension_modules class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Defining and Exporting C APIs from Extension Modules</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_244 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=you_have_a_c_ex>You have a C extension module that internally defines a variety of useful functions that you would like to export as a public C API for use elsewhere. You would like to use these functions inside other extension modules, but don&#8217;t know how to link them together, and doing it with the C compiler/linker seems excessively complicated (or impossible).</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_244 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_recipe_foc>This recipe focuses on the code written to handle<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects, which were presented in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Managing Opaque Pointers in C Extension Modules" href="about:ch15.html#capsules">&#8220;Managing Opaque Pointers in C Extension Modules&#8221;</A>. If you recall, that C code included some utility functions like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=destructor_f_id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Destructor function for points */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>del_Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>));</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Utility functions */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>PyPoint_FromPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must_free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_New</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must_free</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>?</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>del_Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_problem_now>The problem now addressed is how to export the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyPoint_AsPoint()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyPoint_FromPoint()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions as an API that other extension modules could use and link to (e.g., if you have other extensions that also want to use the wrapped<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_solve_this_p>To solve this problem, start by introducing a new header file for the "sample" extension called<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">pysample.h</EM></SPAN>. Put the following code in it:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pysampleh_ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* pysample.h */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "Python.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "sample.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#ifdef __cplusplus</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"C"</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#endif</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Public API Table */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>aspoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>frompoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_PointAPIMethods</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#ifndef PYSAMPLE_MODULE</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Method table in external module */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_PointAPIMethods</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_point_api</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Import the API table from sample */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>import_sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_point_api</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_PointAPIMethods</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_Import</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"sample._point_api"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_point_api</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>?</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Macros to implement the programming interface */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#define PyPoint_AsPoint(obj) (_point_api-&gt;aspoint)(obj)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#define PyPoint_FromPoint(obj) (_point_api-&gt;frompoint)(obj)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#endif</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#ifdef __cplusplus</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#endif</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_most_import_id3>The most important feature here is the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>_PointAPIMethods</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>table of function pointers. It will be initialized in the exporting module and found by importing modules.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=change_the_orig>Change the original extension module to populate the table and export it as follows:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pysamplec_ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* pysample.c */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "Python.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#define PYSAMPLE_MODULE</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "pysample.h"</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Destructor function for points */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>del_Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Deleting point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>));</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Utility functions */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_FromPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_New</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>?</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>del_Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_PointAPIMethods</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_point_api</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_FromPoint</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Module initialization function */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMODINIT_FUNC</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyInit_sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_point_api</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModule_Create</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>samplemodule</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Add the Point C API functions */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_point_api</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_New</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_point_api</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"sample._point_api"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_point_api</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModule_AddObject</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"_point_api"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_point_api</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=finally_here_i>Finally, here is an example of a new extension module that loads and uses these API functions:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=ptexamplec_ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* ptexample.c */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Include the header associated with the other module */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "pysample.h"</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* An extension function that uses the exported API */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>print_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"O"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Note: This is defined in a different module */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyPoint_AsPoint</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%f %f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>""</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMethodDef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PtExampleMethods</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"print_point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>METH_VARARGS</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"output a point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>},</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModuleDef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptexamplemodule</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModuleDef_HEAD_INIT</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"ptexample"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>           <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* name of module */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"A module that imports an API"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Doc string (may be NULL) */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>                 <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Size of per-interpreter state or -1 */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PtExampleMethods</CODE>       <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Method table */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Module initialization function */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMODINIT_FUNC</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>PyInit_ptexample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyModule_Create</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptexamplemodule</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Import sample, loading its API functions */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>import_sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>())</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>m</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=when_compiling_>When compiling this new module, you don&#8217;t even need to bother to link against any of the libraries or code from the other module. For example, you can just make a simple<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">setup.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=setuppy_from_id3 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># setup.py</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.core</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'ptexample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'ptexample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'ptexample.c'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>include_dirs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[],</CODE>  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># May need pysample.h directory</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_it_all_works>If it all works, you&#8217;ll find that your new extension function works perfectly with the C API functions defined in the other module:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id5 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;capsule object "Point *" at 0x1004ea330&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>ptexample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptexample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.000000 3.000000</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_244 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_recipe_rel_id3>This recipe relies on the fact that capsule objects can hold a pointer to anything you wish. In this case, the defining module populates a structure of function pointers, creates a capsule that points to it, and saves the capsule in a module-level attribute (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sample._point_api</CODE>).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=other_modules_c>Other modules can be programmed to pick up this attribute when imported and extract the underlying pointer. In fact, Python provides the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id945631 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_Import()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>utility function, which takes care of all the steps for you. You simply give it the name of the attribute (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sample._point_api</CODE>), and it will find the capsule and extract the pointer all in one step.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=there_are_some__id3>There are some C programming tricks involved in making exported functions look normal in other modules. In the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">pysample.h</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file, a pointer<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>_point_api</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used to point to the method table that was initialized in the exporting module. A related function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>import_sample()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used to perform the required capsule import and initialize this pointer. This function must be called before any functions are used. Normally, it would be called in during module initialization. Finally, a set of C preprocessor macros have been defined to transparently dispatch the API functions through the method table. The user just uses the original function names, but doesn&#8217;t know about the extra indirection through these macros.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=finally_there__id2>Finally, there is another important reason why you might use this technique to link modules together&#8212;it&#8217;s actually easier and it keeps modules more cleanly decoupled. If you didn&#8217;t want to use this recipe as shown, you might be able to cross-link modules using advanced features of shared libraries and the dynamic loader. For example, putting common API functions into a shared library and making sure that all extension modules link against that shared library. Yes, this works, but it can be tremendously messy in large systems. Essentially, this recipe cuts out all of that magic and allows modules to link to one another through Python&#8217;s normal import mechanism and just a tiny number of capsule calls. For compilation of modules, you only need to worry about header files, not the hairy details of shared libraries.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=further_informa_id2>Further information about providing C APIs for extension modules can be found<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/extending/extending.html" target=_top>in the Python documentation</A>.</P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_calling_python_from_c class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Calling Python from C</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_245 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id6><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_Python_callables_in class=indexterm></A>You want to safely execute a Python callable from C and return a result back to C. For example, perhaps you are writing C code that wants to use a Python function as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>callback</SPAN>.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_245 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=calling_python_>Calling Python from C is mostly straightforward, but involves a number of tricky parts. The following C code shows an example of how to do it safely:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=include_pytho_id3 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include &lt;Python.h&gt;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Execute func(x,y) in the Python interpreter.  The</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>   arguments and return result of the function must</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>   be Python floats */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>retval</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Make sure we own the GIL */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_STATE</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Ensure</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Verify that func is a proper callable */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCallable_Check</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fprintf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>stderr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"call_func: expected a callable</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Build arguments */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"(dd)"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Call the function */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_Call</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_XDECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Check for Python exceptions (if any) */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_Occurred</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>())</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_Print</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Verify the result is a float object */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyFloat_Check</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fprintf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>stderr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"call_func: callable didn't return a float</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Create the return value */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>retval</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyFloat_AsDouble</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Restore previous GIL state and return */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>retval</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=nl>fail:</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_XDECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>abort</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c1>// Change to something more appropriate</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_use_this_fun_id3>To use this function, you need to have obtained a reference to an existing Python callable to pass in. There are many ways that you can go about doing that, such as having a callable object passed into an extension module or simply writing C code to extract a symbol from an existing module.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_a_simpl_id6>Here is a simple example that shows calling a function from an embedded Python<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>interpreter</SPAN>:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=include_pytho_id4 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include &lt;Python.h&gt;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Definition of call_func() same as above */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Load a symbol from a module */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>import_name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>const</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>modname</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>const</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>symbol</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>u_name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>u_name</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_FromString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>modname</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyImport_Import</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>u_name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>u_name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_GetAttrString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>symbol</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Simple embedding example */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>main</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pow_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_Initialize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Get a reference to the math.pow function */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pow_func</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>import_name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"math"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"pow"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Call it using our call_func() code */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>0.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>10.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>0.1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%0.2f %0.2f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pow_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>));</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Done */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pow_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_Finalize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_build_this_l>To build this last example, you&#8217;ll need to compile the C and link against the Python interpreter. Here is a Makefile that shows how you might do it (this is something that might require some amount of fiddling with on your machine):</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=all_cc_g_emb class=programlisting data-language="makefile"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>all</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>::</CODE>
        cc -g embed.c -I/usr/local/include/python3.3m <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\</CODE>
          -L/usr/local/lib/python3.3/config-3.3m -lpython3.3m</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=compiling_and_r>Compiling and running the resulting executable should produce output similar to this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 15px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 15px; PADDING-RIGHT: 15px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(255,255,255); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 15px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=__ class=literallayout>0.00 0.00
0.10 0.01
0.20 0.04
0.30 0.09
0.40 0.16
...</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_a_sligh_id2>Here is a slightly different example that shows an extension function that receives a callable and some arguments and passes them to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>call_func()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for the purposes of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>testing</SPAN>:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=extension_fu class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Extension function for testing the C-Python callback */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Odd"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"d"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=using_this_exte>Using this extension function, you could test it as follows:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id6 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>add</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>... </CODE>    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>+</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>...</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>add</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>7.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_245 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_are_call>If you are calling Python from C, the most important thing to keep in mind is that C is generally going to be in charge. That is, C has the responsibility of creating the arguments, calling the Python function, checking for exceptions, checking types, extracting return values, and more.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_a_first_step>As a first step, it is critical that you have a Python object representing the callable that you&#8217;re going to invoke. This could be a function, class, method, built-in method, or anything that implements the<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>__call__()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>operation. To verify that it&#8217;s callable, use<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id947729 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id947735 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCallable_Check()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as shown in this code fragment:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=double_call_fun_id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Verify that func is a proper callable */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCallable_Check</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fprintf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>stderr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"call_func: expected a callable</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_an_aside_ha>As an aside, handling errors in the C code is something that you will need to carefully study. As a general rule, you can&#8217;t just raise a Python exception. Instead, errors will have to be handled in some other manner that makes sense to your C code. In the solution, we&#8217;re using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>goto</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to transfer control to an error handling block that calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>abort()</CODE>. This causes the whole program to die, but in real code you would probably want to do something more graceful (e.g., return a status code). Keep in mind that C is in charge here, so there isn&#8217;t anything comparable to just raising an exception. Error handling is something you&#8217;ll have to engineer into the program somehow.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=calling_a_funct>Calling a function is relatively straightforward&#8212;simply use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject_Call()</CODE>, supplying it with the callable object, a tuple of arguments, and an optional dictionary of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>keyword</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>arguments. To build the argument tuple or dictionary, you can use<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id947979 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_BuildValue()</CODE>, as shown.</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=double_call_fun_id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Build arguments */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"(dd)"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Call the function */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_Call</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_XDECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kwargs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_there_are_no>If there are no keyword arguments, you can pass NULL, as shown. After making the function call, you need to make sure that you clean up the arguments using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948285 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948293 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948299 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_DECREF()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_XDECREF()</CODE>. The latter function safely allows the NULL pointer to be passed (which is ignored), which is why we&#8217;re using it for cleaning up the optional keyword arguments.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=after_calling_t>After calling the Python function, you must check for the presence of exceptions. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948327 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyErr_Occurred()</CODE>function can be used to do this. Knowing what to do in response to an exception is tricky. Since you&#8217;re working from C, you really don&#8217;t have the exception machinery that Python has. Thus, you would have to set an error status code, log the error, or do some kind of sensible processing. In the solution,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>abort()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is called for lack of a simpler alternative (besides, hardened C programmers will appreciate the abrupt crash):</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=_check_fo class=programlisting data-language="c">  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Check for Python exceptions (if any) */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_Occurred</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>())</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_Print</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=nl>fail:</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>abort</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=extracting_info>Extracting information from the return value of calling a Python function is typically going to involve some kind of type checking and value extraction. To do this, you may have to use functions in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/c-api/concrete.html" target=_top>Python concrete objects layer</A>. In the solution, the code checks for and extracts the value of a Python float using<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948478 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948483 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyFloat_Check()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyFloat_AsDouble()</CODE>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id7><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948506 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948514 class=indexterm></A>A final tricky part of calling into Python from C concerns the management of Python&#8217;s global interpreter lock (GIL). Whenever Python is accessed from C, you need to make sure that the GIL is properly acquired and released. Otherwise, you run the risk of having the interpreter corrupt data or crash. The calls to<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948528 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948534 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Ensure()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Release()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>make sure that it&#8217;s done correctly:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=double_call_fun_id3 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>call_func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>retval</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Make sure we own the GIL */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_STATE</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Ensure</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Code that uses Python C API functions */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Restore previous GIL state and return */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>retval</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=nl>fail:</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>abort</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=upon_return_py>Upon return,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Ensure()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>always guarantees that the calling thread has exclusive access to the Python interpreter. This is true even if the calling C code is running a different thread that is unknown to the interpreter. At this point, the C code is free to use any Python C-API functions that it wants. Upon successful completion,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Release()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used to restore the interpreter back to its original state.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=it_is_critical_>It is critical to note that every<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Ensure()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>call must be followed by a matching<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Release()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>call&#8212;even in cases where errors have occurred. In the solution, the use of a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>goto</CODE>statement might look like a horrible design, but we&#8217;re actually using it to transfer control to a common exit block that performs this required step. Think of the code after the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>fail:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>lable as serving the same purpose as code in a Python<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>finally:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>block.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_write_yo>If you write your C code using all of these conventions including management of the GIL, checking for exceptions, and thorough error checking, you&#8217;ll find that you can reliably call into the Python interpreter from C&#8212;even in very complicated programs that utilize advanced programming techniques such as multithreading.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948847 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=releasegil class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Releasing the GIL in C Extensions</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_246 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id8><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948884 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948891 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948900 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id948906 class=indexterm></A>You have C extension code in that you want to execute concurrently with other threads in the Python interpreter. To do this, you need to release and reacquire the global interpreter lock (GIL).</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_246 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_c_extension_>In C extension code, the GIL can be released and reacquired by inserting the following macros in the code:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=include_pytho_id5 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "Python.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pyfunc</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BEGIN_ALLOW_THREADS</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c1>// Threaded C code.  Must not use Python API functions</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_END_ALLOW_THREADS</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_246 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_gil_can_onl>The GIL can only safely be released if you can guarantee that no Python C API functions will be executed in the C code. Typical examples where the GIL might be released are in computationally intensive code that performs calculations on C arrays (e.g., in extensions such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy</CODE>) or in code where blocking I/O operations are going to be performed (e.g., reading or writing on a file descriptor).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=while_the_gil_i>While the GIL is released, other Python threads are allowed to execute in the interpreter. The<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_END_ALLOW_THREADS</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro blocks execution until the calling threads reacquires the GIL in the interpreter.</P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_mixing_threads_from_c_and_python class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Mixing Threads from C and Python</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_247 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id9><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_Python_C_threads_mixing class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Global_Interpreter_Lock_GIL_C_Python_threads_mixing class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_threads_C_Python_mixing class=indexterm></A>You have a program that involves a mix of C, Python, and threads, but some of the threads are created from C outside the control of the Python interpreter. Moreover, certain threads utilize functions in the Python C API.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_247 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_youre_going_id4>If you&#8217;re going to mix C, Python, and threads together, you need to make sure you properly initialize and manage Python&#8217;s global interpreter lock (GIL). To do this, include the following code somewhere in your C code and make sure it&#8217;s called prior to creation of any threads:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=include_pytho_id6 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include &lt;Python.h&gt;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyEval_ThreadsInitialized</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>())</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyEval_InitThreads</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_any_c_code_>For any C code that involves Python objects or the Python C API, make sure you properly acquire and release the GIL first. This is done using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id949261 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id949267 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Ensure()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Release()</CODE>, as shown in the following:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=_make_sur class=programlisting data-language="c">  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Make sure we own the GIL */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_STATE</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Ensure</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>();</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Use functions in the interpreter */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Restore previous GIL state and return */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyGILState_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>state</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=every_call_to_p>Every call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Ensure()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>must have a matching call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Release()</CODE>.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_247 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_advanced_app>In advanced applications involving C and Python, it is not uncommon to have many things going on at once&#8212;possibly involving a mix of a C code, Python code, C threads, and Python threads. As long as you diligently make sure the interpreter is properly initialized and that C code involving the interpreter has the proper GIL management calls, it all should work.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=be_aware_that_t_id4>Be aware that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyGILState_Ensure()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>call does not immediately preempt or interrupt the interpreter. If other code is currently executing, this function will block until that code decides to release the GIL. Internally, the interpreter performs periodic thread switching, so even if another thread is executing, the caller will eventually get to run (although it may have to wait for a while first).<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id949421 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id949432 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id949443 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=swig class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Wrapping C Code with Swig</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_248 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id10><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_Swig_wrapping_with class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Swig class=indexterm></A>You have existing C code that you would like to access as a C extension module. You would like to do this using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.swig.org/" target=_top>Swig wrapper generator</A>.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_248 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=swig_operates_b>Swig operates by parsing C header files and automatically creating extension code. To use it, you first need to have a C header file. For example, this header file for our sample code:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=sampleh___id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* sample.h */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include &lt;math.h&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_you_have_t_id1>Once you have the header files, the next step is to write a Swig<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id949890 class=indexterm></A>"interface" file. By convention, these files have a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.i</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>suffix and might look similar to the following:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplei__s class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c1>// sample.i - Swig interface</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "sample.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Customizations */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>extend</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Constructor for Point objects */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>malloc</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>sizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>));</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Map int *remainder as an output argument */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>include</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typemaps</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>apply</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>OUTPUT</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>};</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Map the argument pattern (double *a, int n) to arrays */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typemap</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_buffer</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_GetBuffer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>$</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>input</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBUF_ANY_CONTIGUOUS</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>|</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBUF_FORMAT</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>SWIG_fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>strcmp</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>format</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"d"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_SetString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyExc_TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Expected an array of doubles"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>SWIG_fail</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>$</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>$</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>/</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>sizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>typemap</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>freearg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>$</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argnum</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBuffer_Release</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>view</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>$</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argnum</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* C declarations to be included in the extension module */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_you_have_w>Once you have written the interface file, Swig is invoked as a command-line tool:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=bash__swig_py class=programlisting data-language="bash">bash % swig -python -py3 sample.i
bash %</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_output_of_s>The output of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>swig</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is two files,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample_wrap.c</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.py</EM></SPAN>. The latter file is what users import. The<SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample_wrap.c</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file is C code that needs to be compiled into a supporting module called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>_sample</CODE>. This is done using the same techniques as for normal extension modules. For example, you create a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">setup.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=setuppy_from_id4 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># setup.py</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.core</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>name</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>py_modules</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample.py'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'_sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample_wrap.c'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>include_dirs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>define_macros</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>undef_macros</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>library_dirs</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[],</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>libraries</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
                  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_compile_and__id1>To compile and test, run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>python3</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>on the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">setup.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=bash__python__id14 class=programlisting data-language="bash">bash % python3 setup.py build_ext --inplace
running build_ext
building <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(143,157,106); FONT-SIZE: 1em" class=s1>'_sample'</CODE> extension
gcc -fno-strict-aliasing -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes
-I/usr/local/include/python3.3m -c sample_wrap.c
 -o build/temp.macosx-10.6-x86_64-3.3/sample_wrap.o
sample_wrap.c: In <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>function</CODE> &#8216;SWIG_InitializeModule&#8217;:
sample_wrap.c:3589: warning: statement with no effect
gcc -bundle -undefined dynamic_lookup build/temp.macosx-10.6-x86_64-3.3/sample.o
 build/temp.macosx-10.6-x86_64-3.3/sample_wrap.o -o _sample.so -lsample
bash %</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_all_of_this_>If all of this works, you&#8217;ll find that you can use the resulting C extension module in a straightforward way. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id7 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>8</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>8</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>[5, 2]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.8284271247461903</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>3.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_248 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=swig_is_one_of_>Swig is one of the oldest tools for building extension modules, dating back to Python 1.4. However, recent versions currently support Python 3. The primary users of Swig tend to have large existing bases of C that they are trying to access using Python as a high-level control language. For instance, a user might have C code containing thousands of functions and various data structures that they would like to access from Python. Swig can automate much of the wrapper generation process.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=swigheaders_and><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id951971 class=indexterm></A>All Swig interfaces tend to start with a short preamble like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=module_sample__id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "sample.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_merely_dec>This merely declares the name of the extension module and specifies C header files that must be included to make everything compile (the code enclosed in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>%{</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>%}</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is pasted directly into the output code so this is where you put all included files and other definitions needed for compilation).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_bottom_part>The bottom part of a Swig interface is a listing of C declarations that you want to be included in the extension. This is often just copied from the header files. In our example, we just pasted in the header file directly like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=module_sample__id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#include "sample.h"</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>%</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>remainder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>typedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=it_is_important>It is important to stress that these declarations are telling Swig what you want to include in the Python module. It is quite common to edit the list of declarations or to make modifications as appropriate. For example, if you didn&#8217;t want certain declarations to be included, you would remove them from the declaration list.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_most_compli>The most complicated part of using Swig is the various customizations that it can apply to the C code. This is a huge topic that can&#8217;t be covered in great detail here, but a number of such customizations are shown in this recipe.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_first_custo>The first customization involving the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id952474 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>%extend</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>directive allows methods to be attached to existing structure and class definitions. In the example, this is used to add a constructor method to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure. This customization makes it possible to use the structure like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=p__sample_id2 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_omitted_the>If omitted, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects would have to be created in a much more clumsy manner like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=_usage_if_ class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Usage if %extend Point is omitted</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_second_cust>The second customization involving the inclusion of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>typemaps.i</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>library and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id952690 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>%apply</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>directive is instructing Swig that the argument signature<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>int *remainder</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is to be treated as an output value. This is actually a pattern matching rule. In all declarations that follow, any time<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>int *remainder</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is encountered, it is handled as output. This customization is what makes the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>divide()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function return two values:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=sampledivi class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>8</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>[5, 2]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_last_custom>The last customization involving the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id952788 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>%typemap</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>directive is probably the most advanced feature shown here. A typemap is a rule that gets applied to specific argument patterns in the input. In this recipe, a typemap has been written to match the argument pattern<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>(double *a, int n)</CODE>. Inside the typemap is a fragment of C code that tells Swig how to convert a Python object into the associated C arguments. The code in this recipe has been written using Python&#8217;s buffer protocol in an attempt to match any input argument that looks like an array of doubles (e.g., NumPy arrays, arrays created by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>array</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module, etc.). See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Writing an Extension Function That Operates on Arrays" href="about:ch15.html#carray">&#8220;Writing an Extension Function That Operates on Arrays&#8221;</A>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=within_the_type>Within the typemap code, substitutions such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>$1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>$2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>refer to variables that hold the converted values of the C arguments in the typemap pattern (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>$1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>maps to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>double *a</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>$2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>maps to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>int n</CODE>).<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>$input</CODE>refers to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument that was supplied as an input argument.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>$argnum</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the argument number.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=writing_and_und>Writing and understanding typemaps is often the bane of programmers using Swig. Not only is the code rather cryptic, but you need to understand the intricate details of both the Python C API and the way in which Swig interacts with it. The Swig documentation has many more examples and detailed information.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=nevertheless_i>Nevertheless, if you have a lot of a C code to expose as an extension module, Swig can be a very powerful tool for doing it. The key thing to keep in mind is that Swig is basically a compiler that processes C declarations, but with a powerful pattern matching and customization component that lets you change the way in which specific declarations and types get processed. More information can be found at<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.swig.org/" target=_top>Swig&#8217;s website</A>, including<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.swig.org/Doc2.0/Python.html" target=_top>Python-specific documentation</A>.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id952918 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id952929 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=cython_existing class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Wrapping Existing C Code with Cython</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_249 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id11><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_Cython_wrapping_code_in class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Cython_wrapping_existing_code_in class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_functions_wrapping_with_Cython class=indexterm></A>You want to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://cython.org/" target=_top>Cython</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to make a Python extension module that wraps around an existing C library.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_249 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=making_an_exten>Making an extension module with Cython looks somewhat similar to writing a handwritten extension, in that you will be creating a collection of wrapper functions. However, unlike previous recipes, you won&#8217;t be doing this in C&#8212;the code will look a lot more like Python.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_preliminarie>As preliminaries, assume that the sample code shown in the introduction to this chapter has been compiled into a C library called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>libsample</CODE>. Start by creating a file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">csample.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>that looks like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=csamplepxd_ class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># csample.pxd</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c>#</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Declarations of "external" C functions and structures</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>extern</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample.h</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>":</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bint</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>nogil</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypedef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>struct</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
         <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
         <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_file_serve>This file serves the same purpose in Cython as a C header file. The initial declaration<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cdef extern from "sample.h"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declares the required C header file. Declarations<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>that follow</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>are taken from that header. The name of this file is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">csample.pxd</EM></SPAN>, not<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.pxd</EM></SPAN>&#8212;this is important.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=next_create_a_>Next, create a file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.pyx</EM></SPAN>. This file will define wrappers that bridge the Python interpreter to the underlying C code declared in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">csample.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplepyx__ class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># sample.pyx</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Import the low-level C declarations</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Import some functionality from Python and the C stdlib</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cpython.pycapsule</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cimport</CODE> <CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>*</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>libc.stdlib</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>malloc</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>free</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Wrappers</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sz</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sz</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>size</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>with</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>nogil</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sz</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Destructor for cleaning up Point objects</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>del_Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>object</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pt</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pt</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Create a Point object and return as a capsule</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>malloc</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>MemoryError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"No memory to make a Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_New</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_Destructor</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>del_Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pt1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pt2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyCapsule_GetPointer</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Point"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pt1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>pt2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=various_details>Various details of this file will be covered further in the discussion section. Finally, to build the extension module, create a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id954646 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id954654 class=indexterm></A><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">setup.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file that looks like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=from_distutils_id1 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.core</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.extension</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>Cython.Distutils</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>build_ext</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
              <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample.pyx'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
              <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>libraries</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE>
              <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>library_dirs</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'.'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])]</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>name</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Sample extension module'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cmdclass</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'build_ext'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>build_ext</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>},</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_build_the_re>To build the resulting module for experimentation, type this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=bash__python__id15 class=programlisting data-language="bash">bash % python3 setup.py build_ext --inplace
running build_ext
cythoning sample.pyx to sample.c
building <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(143,157,106); FONT-SIZE: 1em" class=s1>'sample'</CODE> extension
gcc -fno-strict-aliasing -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes
 -I/usr/local/include/python3.3m -c sample.c
 -o build/temp.macosx-10.6-x86_64-3.3/sample.o
gcc -bundle -undefined dynamic_lookup build/temp.macosx-10.6-x86_64-3.3/sample.o
  -L. -lsample -o sample.so
bash %</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_it_works_yo>If it works, you should have an extension module<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sample.so</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can be used as shown in the following example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id8 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>400</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>False</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>in_mandel</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>400</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>True</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>42</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>(4, 2)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;capsule object "Point" at 0x1005d1e70&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;capsule object "Point" at 0x1005d1ea0&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.8284271247461903</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_249 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_recipe_inc>This recipe incorporates a number of advanced features discussed in prior recipes, including manipulation of arrays, wrapping opaque pointers, and releasing the GIL. Each of these parts will be discussed in turn, but it may help to review earlier recipes first.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=at_a_high_level>At a high level, using Cython is modeled after C. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>files merely contain C definitions (similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.h</EM></SPAN>files) and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.pyx</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>files contain implementation (similar to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.c</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file). The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cimport</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>statement is used by Cython to import definitions from a<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file. This is different than using a normal Python<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>import</CODE>statement, which would load a regular Python module.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=although_pxd_f>Although<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>files contain definitions, they are not used for the purpose of automatically creating extension code. Thus, you still have to write simple wrapper functions. For example, even though the<SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">csample.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file declares<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>int gcd(int, int)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a function, you still have to write a small wrapper for it in<SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">sample.pyx</EM></SPAN>. For instance:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=cimport_csample class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_simple_func>For simple functions, you don&#8217;t have to do too much. Cython will generate wrapper code that properly converts the arguments and return value. The C data types attached to the arguments are optional. However, if you include them, you get additional error checking for free. For example, if someone calls this function with negative values, an exception is generated:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplegcd class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"sample.pyx"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>7</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample.gcd (sample.c:1284)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>OverflowError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>can't convert negative value to unsigned int</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_want_to__id31>If you want to add additional checking to the wrapper, just use additional wrapper code. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=def_gcdunsigne class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"x must be &gt; 0"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"y must be &gt; 0"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>gcd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_declaration>The declaration of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>in_mandel()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">csample.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file has an interesting, but subtle definition. In that file, the function is declared as returning a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>bint</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instead of an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>int</CODE>. This causes the function to create a proper Boolean value from the result instead of a simple integer. So, a return value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>gets mapped to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>False</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>True</CODE>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=within_the_cyth>Within the Cython wrappers, you have the option of declaring C data types in addition to using all of the usual Python objects. The wrapper for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>divide()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>shows an example of this as well as how to handle a pointer argument.</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=def_dividexy class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>divide</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>quot</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>rem</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_the_rem_v>Here, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>rem</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable is explicitly declared as a C<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>int</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable. When passed to the underlying<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>divide()</CODE>function,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>&amp;rem</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>makes a pointer to it just as in C.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_code_for_th_id2>The code for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function illustrates some more advanced features of Cython. First the declaration<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>def avg(double[:] a)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declares<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as taking a one-dimensional memoryview of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>values. The amazing part about this is that the resulting function will accept any compatible array object, including those created by libraries such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy</CODE>. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_arra_id4 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>numpy</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>numpy</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>([</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>1.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>2.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mf>3.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>avg</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_the_wrapper>In the wrapper,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>a.size</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>&amp;a[0]</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>refer to the number of array items and underlying pointer, respectively. The syntax<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>&lt;double *&gt; &amp;a[0]</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is how you type cast pointers to a different type if necessary. This is needed to make sure the C<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>receives a pointer of the correct type. Refer to the next recipe for some more advanced usage of Cython memoryviews.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_addition_to__id3>In addition to working with general arrays, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>example also shows how to work with the global interpreter lock. The statement<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id956606 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id956614 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id956623 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>with nogil:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declares a block of code as executing without the GIL. Inside this block, it is illegal to work with any kind of normal Python object&#8212;only objects and functions declared as<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cdef</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be used. In addition to that, external functions must explicitly declare that they can execute without the GIL. Thus, in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">csample.pxd</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>avg()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is declared as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>double avg(double *, int) nogil</CODE>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_handling_of_id2>The handling of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structure presents a special challenge. As shown, this recipe treats<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects as opaque pointers using capsule objects, as described in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Managing Opaque Pointers in C Extension Modules" href="about:ch15.html#capsules">&#8220;Managing Opaque Pointers in C Extension Modules&#8221;</A>. However, to do this, the underlying Cython code is a bit more complicated. First, the following imports are being used to bring in definitions of functions from the C library and Python C API:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=from_cpythonpy class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cpython.pycapsule</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cimport</CODE> <CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>*</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>libc.stdlib</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>malloc</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>free</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_function_de>The function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>del_Point()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>use this functionality to create a capsule object that wraps around a<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pointer. The declaration<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cdef del_Point()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declares<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>del_Point()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a function that is only accessible from Cython and not Python. Thus, this function will not be visible to the outside&#8212;instead, it&#8217;s used as a callback function to clean up memory allocated by the capsule. Calls to functions such as<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_New()</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_GetPointer()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are directly from the Python C API and are used in the same way.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_distance_>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>distance()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function has been written to extract pointers from the capsule objects created by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point()</CODE>. One notable thing here is that you simply don&#8217;t have to worry about exception handling. If a bad object is passed,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyCapsule_GetPointer()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>raises an exception, but Cython already knows to look for it and propagate it out of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>distance()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function if it occurs.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=a_downside_to_t>A downside to the handling of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>structures is that they will be completely opaque in this implementation. You won&#8217;t be able to peek inside or access any of their attributes. There is an alternative approach to wrapping, which is to define an extension type, as shown in this code:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplepyx_ci class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># sample.pyx</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>libc.stdlib</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>malloc</CODE><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(178,37,24); BORDER-LEFT: rgb(178,37,24); FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; BORDER-TOP: rgb(178,37,24); BORDER-RIGHT: rgb(178,37,24)" class=err>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>free</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>...</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>class</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nc>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>__cinit__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>malloc</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>__dealloc__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>property</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>__get__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>__set__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>property</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>__get__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>__set__</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>def</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>csample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>_c_point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_the_cdef_>Here, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cdef class Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is declaring<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as an extension type. The class variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cdef csample.Point *_c_point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is declaring an instance variable that holds a pointer to an underlying<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE>structure in C. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>__cinit__()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>__dealloc__()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>methods create and destroy the underlying C structure using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>malloc()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>free()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>calls. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>property x</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>property y</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declarations give code that gets and sets the underlying structure attributes. The wrapper for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>distance()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has also been suitably modified to accept instances of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>extension type as arguments, but pass the underlying pointer to the C function.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=making_this_cha>Making this change, you will find that the code for manipulating<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects is more natural:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_samp_id9 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Point</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;sample.Point object at 0x100447288&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;sample.Point object at 0x1004472a0&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>3.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>distance</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>p2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>2.8284271247461903</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_recipe_has_id2>This recipe has illustrated many of Cython&#8217;s core features that you might be able to extrapolate to more complicated kinds of wrapping. However, you will definitely want to read more of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.cython.org/" target=_top>official documentation</A>to do more.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_next_few_re>The next few recipes also illustrate a few additional Cython features.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id957935 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id957946 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id957956 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=cythonarray class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Using Cython to Write High-Performance Array Operations</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_250 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=arrayshighperf><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_arrays_high-performance_with_Cython class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Cython_high-performance_arrays_with class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_performance_Cython_and class=indexterm></A>You would like to write some high-performance array processing functions to operate on arrays from libraries such as NumPy. You&#8217;ve heard that tools such as Cython can make this easier, but aren&#8217;t sure how to do it.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_250 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_an_example__id2>As an example, consider the following code which shows a Cython function for clipping the values in a simple one-dimensional array of doubles:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=samplepyx_c class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># sample.pyx (Cython)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cimport</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cython</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.boundscheck</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.wraparound</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cpdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>clip</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(143,157,106); FONT-SIZE: 1em" class=sd>'''</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(143,157,106); FONT-SIZE: 1em" class=sd>    Clip the values in a to be between min and max. Result in out</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(143,157,106); FONT-SIZE: 1em" class=sd>    '''</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"min must be &lt;= max"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"input and output arrays must be the same size"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>range</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>elif</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_compile_and__id2>To compile and build the extension, you&#8217;ll need a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id958588 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id958595 class=indexterm></A><SPAN style="BOX-SIZING: border-box" class=emphasis><EM style="BOX-SIZING: border-box">setup.py</EM></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>file such as the following (use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>python3 setup.py build_ext --inplace</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to build it):</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=from_distutils_id2 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.core</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>distutils.extension</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>Cython.Distutils</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>build_ext</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Extension</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
              <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample.pyx'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>setup</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>name</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Sample app'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cmdclass</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'build_ext'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>build_ext</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>},</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ext_modules</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=you_will_find_t_id2>You will find that the resulting function clips arrays, and that it works with many different kinds of array objects. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=_array_mod class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># array module example</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>array</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>array</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'d'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>7</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>array('d', [1.0, -3.0, 4.0, 7.0, 2.0, 0.0])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>clip</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>array('d', [1.0, 1.0, 4.0, 4.0, 2.0, 1.0])</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># numpy example</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>numpy</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>numpy</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>random</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>uniform</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>size</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1000000</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>array([-9.55546017,  7.45599334,  0.69248932, ...,  0.69583148,</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>       -3.86290931,  2.37266888])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>numpy</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>zeros_like</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>array([ 0.,  0.,  0., ...,  0.,  0.,  0.])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>clip</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>array([-5.        ,  5.        ,  0.69248932, ...,  0.69583148,</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>       -3.86290931,  2.37266888])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>-5.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>5.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=you_will_also_f>You will also find that the resulting code is fast. The following session puts our implementation in a head-to-head battle with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>clip()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function already present in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy</CODE>:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=timeitnum class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>timeit</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'numpy.clip(b,-5,5,c)'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'from __main__ import b,c,numpy'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>number</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1000</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>8.093049556000551</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>timeit</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'sample.clip(b,-5,5,c)'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'from __main__ import b,c,sample'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>... </CODE>        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>number</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1000</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>3.760528204000366</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_you_can_see_id12>As you can see, it&#8217;s quite a bit faster&#8212;an interesting result considering the core of the NumPy version is written in C.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_250 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=cythonmemoryvie><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id959550 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id959558 class=indexterm></A>This recipe utilizes Cython typed memoryviews, which greatly simplify code that operates on arrays. The declaration<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>cpdef clip()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declares<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>clip()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as both a C-level and Python-level function. In Cython, this is useful, because it means that the function call is more efficently called by other Cython functions (e.g., if you want to invoke<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>clip()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>from a different Cython function).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_typed_param>The typed parameters<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>double[:] a</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>double[:] out</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>declare those parameters as one-dimensional arrays of doubles. As input, they will access any array object that properly implements the memoryview interface, as described in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.python.org/dev/peps/pep-3118" target=_top>PEP 3118</A>. This includes arrays from<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id959613 class=indexterm></A>NumPy and from the built-in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>array</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>library.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=when_writing_co_id2>When writing code that produces a result that is also an array, you should follow the convention shown of having an output parameter as shown. This places the responsibility of creating the output array on the caller and frees the code from having to know too much about the specific details of what kinds of arrays are being manipulated (it just assumes the arrays are already in-place and only needs to perform a few basic sanity checks such as making sure their sizes are compatible). In libraries such as NumPy, it is relatively easy to create output arrays using functions such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy.zeros()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy.zeros_like()</CODE>. Alternatively, to create uninitialized arrays, you can use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy.empty()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>numpy.empty_like()</CODE>. This will be slightly faster if you&#8217;re about to overwrite the array contents with a result.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_the_implemen>In the implementation of your function, you simply write straightforward looking array processing code using indexing and array lookups (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>a[i]</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>out[i]</CODE>, and so forth). Cython will take steps to make sure these produce efficient code.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_two_decorat>The two decorators that precede the definition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>clip()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are a few optional performance optimizations.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id959694 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id959700 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>@cython.boundscheck(False)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>eliminates all array bounds checking and can be used if you know the indexing won&#8217;t go out of range.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>@cython.wraparound(False)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>eliminates the handling of negative array indices as wrapping around to the end of the array (like with Python lists). The inclusion of these decorators can make the code run substantially faster (almost 2.5 times faster on this example when tested).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=whenever_workin>Whenever working with arrays, careful study and experimentation with the underlying algorithm can also yield large speedups. For example, consider this variant of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>clip()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function that uses conditional expressions:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=cythonboundsc_id1 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.boundscheck</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.wraparound</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cpdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>clip</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"min must be &lt;= max"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"input and output arrays must be the same size"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>range</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=when_tested_th_id2>When tested, this version of the code runs over 50% faster (2.44s versus 3.76s on the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>timeit()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>test shown earlier).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=at_this_point__id5>At this point, you might be wondering how this code would stack up against a handwritten C version. For example, perhaps you write the following C function and craft a handwritten extension to using techniques shown in earlier recipes:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=void_clipdoubl class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>clip</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>--</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>max</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>?</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>max</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>?</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_extension_c>The extension code for this isn&#8217;t shown, but after experimenting, we found that a handcrafted C extension ran more than 10% slower than the version created by Cython. The bottom line is that the code runs a lot faster than you might think.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=there_are_sever_id4>There are several extensions that can be made to the solution code. For certain kinds of array operations, it might make sense to release the GIL so that multiple threads can run in parallel. To do that, modify the code to include the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>with nogil:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>statement:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=cythonboundsc_id2 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.boundscheck</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.wraparound</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cpdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>clip</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"min must be &lt;= max"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"input and output arrays must be the same size"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>with</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>nogil</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>range</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_want_to__id32>If you want to write a version of the code that operates on two-dimensional arrays, here is what it might look like:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=cythonboundsc_id3 class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.boundscheck</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(117,135,166); FONT-SIZE: 1em" class=nd>@cython.wraparound</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>False</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cpdef</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>clip2d</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:,:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[:,:]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>ValueError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"min must be &lt;= max"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>range</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ndim</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]:</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>raise</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=ne>TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"a and out have different shapes"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>range</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]):</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>range</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>shape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]):</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
                <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>min</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>elif</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
                <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>max</CODE>
            <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>else</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
                <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>out</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>a</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>i</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>j</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=hopefully_its_>Hopefully it&#8217;s not lost on the reader that all of the code in this recipe is not tied to any specific array library (e.g., NumPy). That gives the code a great deal of flexibility. However, it&#8217;s also worth noting that dealing with arrays can be significantly more complicated once multiple dimensions, strides, offsets, and other factors are introduced. Those topics are beyond the scope of this recipe, but more information can be found in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.python.org/dev/peps/pep-3118" target=_top>PEP 3118</A>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.cython.org/src/userguide/memoryviews.html" target=_top>Cython documentation on "typed memoryviews"</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is also essential reading.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id961685 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id961695 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id961706 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_turning_a_function_pointer_into_a_callable class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Turning a Function Pointer into a Callable</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_251 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id12><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programmingfunctionpointers_converting_to_callables class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_ctypes_module_memory_addresses_wrapping class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_functions_pointers_converting_to_callables class=indexterm></A>You have (somehow) obtained the memory address of a compiled function, but want to turn it into a Python callable that you can use as an extension function.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_251 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_ctypes_modu>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module can be used to create Python callables that wrap around arbitrary memory addresses. The following example shows how to obtain the raw, low-level address of a C function and how to turn it back into a callable object:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_ctyp_id1 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>ctypes</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>lib</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdll</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>LoadLibrary</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(0,170,170); FONT-SIZE: 1em" class=bp>None</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Get the address of sin() from the C math library</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>addr</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cast</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>lib</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sin</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_void_p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>value</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>addr</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>140735505915760</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Turn the address into a callable function</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>functype</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>CFUNCTYPE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>functype</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>addr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;CFunctionType object at 0x1006816d0&gt;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Call the resulting function</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>0.9092974268256817</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>func</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>0.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_251 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=cfunctype_insta><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id962196 class=indexterm></A>To make a callable, you must first create a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>CFUNCTYPE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instance. The first argument to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>CFUNCTYPE()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the return type. Subsequent arguments are the types of the arguments. Once you have defined the function type, you wrap it around an integer memory address to create a callable object. The resulting object is used like any normal function accessed through<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_recipe_mig>This recipe might look rather cryptic and low level. However, it is becoming increasingly common for programs and libraries to utilize advanced code generation techniques like just in-time compilation, as found in libraries such as LLVM.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_example_he>For example, here is a simple example that uses the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id962238 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.llvmpy.org/" target=_top><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>llvmpy</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>extension</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to make a small assembly function, obtain a function pointer to it, and turn it into a Python callable:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=from_llvmc class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>llvm.core</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Module</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Function</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Type</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Builder</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>mod</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Module</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>new</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'example'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Function</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>new</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Type</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>function</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Type</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(),</CODE> \
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>                     [Type.double(), Type.double()], False), 'foo')</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>block</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>append_basic_block</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'entry'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>builder</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Builder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>new</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>block</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>builder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fmul</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y2</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>builder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fmul</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>],</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>])</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>r</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>builder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fadd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>x2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>y2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>builder</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ret</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>r</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&lt;llvm.core.Instruction object at 0x10078e990&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>from</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>llvm.ee</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ExecutionEngine</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>engine</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ExecutionEngine</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>new</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>mod</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>engine</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>get_pointer_to_function</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>4325863440</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>foo</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>CFUNCTYPE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_double</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ptr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Call the resulting function</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>foo</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>3</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>13.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>foo</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>4</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>5</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>41.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>foo</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>2</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>5.0</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=it_goes_without_id1>It goes without saying that doing anything wrong at this level will probably cause the Python interpreter to die a horrible death. Keep in mind that you&#8217;re directly working with machine-level memory addresses and native machine code&#8212;not Python<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>functions</SPAN>.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id963132 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id963144 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id963154 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_passing_null_terminated_strings_to_c_libraries class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Passing NULL-Terminated Strings to C Libraries</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_252 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id13><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_null-terminated_strings_passing class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_null-terminated_strings_passing_to_C class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_strings_null-terminated_passing_to_C class=indexterm></A>You are writing an extension module that needs to pass a NULL-terminated string to a C library. However, you&#8217;re not entirely sure how to do it with Python&#8217;s Unicode string implementation.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_252 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=many_c_librarie>Many C libraries include functions that operate on NULL-terminated strings declared as type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>char *</CODE>. Consider the following C function that we will use for the purposes of illustration and testing:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=void_print_char_id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%2x "</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_function_s>This function simply prints out the hex representation of individual characters so that the passed strings can be easily debugged. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=print_charshe class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Hello"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c1>// Outputs: 48 65 6c 6c 6f</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_calling_suc>For calling such a C function from Python, you have a few choices. First, you could restrict it to only operate on bytes using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>"y"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>conversion code to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"y"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_resulting_f_id1>The resulting function operates as follows. Carefully observe how bytes with embedded NULL bytes and Unicode strings are rejected:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=print_chars_id1 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>48 65 6c 6c 6f 20 57 6f 72 6c 64</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\x00</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must be bytes without null bytes, not bytes</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>'str' does not support the buffer interface</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_want_to__id33>If you want to pass Unicode strings instead, use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>"s"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format code to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id3 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"s"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=when_used_this>When used, this will automatically convert all strings to a NULL-terminated UTF-8 encoding. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=print_chars_id2 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>48 65 6c 6c 6f 20 57 6f 72 6c 64</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\u00f1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Note: UTF-8 encoding</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 c3 b1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\x00</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must be str without null characters, not str</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>TypeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>must be str, not bytes</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_for_some_rea>If for some reason, you are working directly with a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and can&#8217;t use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE>, the following code samples show how you can check and extract a suitable<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>char *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>reference, from both a bytes and string object:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=some_python_ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Some Python Object (obtained somehow) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Conversion from bytes */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>o</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* TypeError already raised */</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Conversion to UTF-8 bytes from a string */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_Check</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
       <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_SetString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyExc_TypeError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Expected string"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
       <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_AsUTF8String</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=both_of_the_pre>Both of the preceding conversions guarantee NULL-terminated data, but they do not check for embedded NULL bytes elsewhere inside the string. Thus, that&#8217;s something that you would need to check yourself if it&#8217;s important.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_252 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_it_all_possi>If it all possible, you should try to avoid writing code that relies on NULL-terminated strings since Python has no such requirement. It is almost always better to handle strings using the combination of a pointer and a size if possible. Nevertheless, sometimes you have to work with legacy C code that presents no other option.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=although_it_is_>Although it is easy to use, there is a hidden memory overhead associated with using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>"s"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format code to<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that is easy to overlook. When you write code that uses this conversion, a UTF-8 string is created and permanently attached to the original string object. If the original string contains non-ASCII characters, this makes the size of the string increase until it is garbage collected. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_sys__id6 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sys</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\u00f1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>87</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>     <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Passing string</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 c3 b1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=c># Notice increased size</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>103</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_this_growth_>If this growth in memory use is a concern, you should rewrite your C extension code to use the<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_AsUTF8String()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function like this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id4 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>o</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"U"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>o</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_AsUTF8String</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>o</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=with_this_modif_id2>With this modification, a UTF-8 encoded string is created if needed, but then discarded after use. Here is the modified behavior:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_sys__id7 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sys</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\u00f1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>87</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 c3 b1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>87</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_are_tryi_id2>If you are trying to pass NULL-terminated strings to functions wrapped via<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE>, be aware that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ctypes</CODE>only allows bytes to be passed and that it does not check for embedded NULL bytes. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_ctyp_id2 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>ctypes</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>lib</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>cdll</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>LoadLibrary</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"./libsample.so"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>lib</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>argtypes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ctypes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>c_char_p</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>48 65 6c 6c 6f 20 57 6f 72 6c 64</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\x00</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>48 65 6c 6c 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>ctypes.ArgumentError: argument 1: &lt;class 'TypeError'&gt;</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>wrong type</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_want_to__id34>If you want to pass a string instead of bytes, you need to perform a manual UTF-8 encoding first. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=print_chars_id3 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello World'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>encode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'utf-8'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>48 65 6c 6c 6f 20 57 6f 72 6c 64</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_other_exten>For other extension tools (e.g., Swig, Cython), careful study is probably in order should you decide to use them to pass strings to C code.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id965822 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id965833 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id965844 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_passing_unicode_strings_to_c_libraries class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Passing Unicode Strings to C Libraries</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_253 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id14><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_Unicode_strings_passing class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_encoding_text_data_passing_to_C_libraries class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_strings_Unicode_passing_to_C_libraries class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Unicode_strings_passing_to_C_libraries class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_wchar_t_asterisk_declarations_C class=indexterm></A>You are writing an extension module that needs to pass a Python string to a C library function that may or may not know how to properly handle Unicode.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_253 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=there_are_many__id3>There are many issues to be concerned with here, but the main one is that existing C libraries won&#8217;t understand Python&#8217;s native representation of Unicode. Therefore, your challenge is to convert the Python string into a form that can be more easily understood by C libraries.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_the_purpose_id2>For the purposes of illustration, here are two C functions that operate on string data and output it for the purposes of debugging and experimentation. One uses bytes provided in the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>char *, int</CODE>, whereas the other uses wide characters in the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t *, int</CODE>:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=void_print_char_id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%2x "</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>wchar_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%x "</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_the_byteor>For the byte-oriented function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>print_chars()</CODE>, you need to convert Python strings into a suitable byte encoding such as UTF-8. Here is a sample extension function that does this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id5 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE>  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"s#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_library_fun>For library functions that work with the machine native<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>type, you can write extension code such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id6 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>wchar_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE>  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"u#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_an_inte_id8>Here is an interactive session that illustrates how these functions work:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=s__spicy__id3 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\u00f1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 c3 b1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 f1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=carefully_obser_id5>Carefully observe how the byte-oriented function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>print_chars()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is receiving UTF-8 encoded data, whereas<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>print_wchars()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is receiving the Unicode code point values.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_253 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=before_consider>Before considering this recipe, you should first study the nature of the C library that you&#8217;re accessing. For many C libraries, it might make more sense to pass bytes instead of a string. To do that, use this conversion code instead:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id7 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE>  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* accepts bytes, bytearray, or other byte-like object */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"y#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_decide_t>If you decide that you still want to pass strings, you need to know that Python 3 uses an adaptable string representation that is not entirely straightforward to map directly to C libraries using the standard types<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>char *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.python.org/dev/peps/pep-0393" target=_top>PEP 393</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for details. Thus, to present string data to C, some kind of conversion is almost always necessary. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>s#</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>u#</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format codes to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id967358 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>safely perform such conversions.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=one_potential_d_id3>One potential downside is that such conversions cause the size of the original string object to permanently increase. Whenever a conversion is made, a copy of the converted data is kept and attached to the original string object so that it can be reused later. You can observe this effect:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_sys__id8 class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sys</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\u00f1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>87</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 c3 b1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>103</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 f1 6f</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sys</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>getsizeof</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>163</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_small_amoun>For small amounts of string data, this might not matter, but if you&#8217;re doing large amounts of text processing in extensions, you may want to avoid the overhead. Here is an<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>alternative</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>implementation of the first extension function that avoids these memory<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>inefficiencies</SPAN>:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id8 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE>   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"U"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_AsUTF8String</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsStringAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=memorywchar_t_s><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id967984 class=indexterm></A>Avoiding memory overhead for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>handling is much more tricky. Internally, Python stores strings using the most efficient representation possible. For example, strings containing nothing but ASCII are stored as arrays of bytes, whereas strings containing characters in the range U+0000 to U+FFFF use a two-byte representation. Since there isn&#8217;t a single representation of the data, you can&#8217;t just cast the internal array to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and hope that it works. Instead, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>array has to be created and text copied into it. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>"u#"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format code to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyArg_ParseTuple()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>does this for you at the cost of efficiency (it attaches the resulting copy to the string object).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_want_to__id35>If you want to avoid this long-term memory overhead, your only real choice is to copy the Unicode data into a temporary array, pass it to the C library function, and then deallocate the array. Here is one possible implementation:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id9 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>wchar_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"U"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_AsWideCharString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMem_Free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_this_impleme>In this implementation,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_AsWideCharString()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>creates a temporary buffer of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>characters and copies data into it. That buffer is passed to C and then released afterward. As of this writing, there seems to be a possible bug related to this behavior, as described at<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://bugs.python.org/issue16254" target=_top>the Python issues page</A>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_for_some_re_id3>If, for some reason you know that the C library takes the data in a different byte encoding than UTF-8, you can force Python to perform an appropriate conversion using extension code such as the following:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id10 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE>   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"es#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"encoding-name"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyMem_Free</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=last_but_not_l_id26>Last, but not least, if you want to work directly with the characters in a Unicode string, here is an example that illustrates low-level access:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id11 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_wchars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kind</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"U"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_READY</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_GET_LENGTH</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kind</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_KIND</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_DATA</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>for</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_UCS4</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ch</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_READ</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>kind</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%x "</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>ch</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_this_code_t_id10>In this code, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_KIND()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_DATA()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>macros are related to the variable-width storage of Unicode, as described in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.python.org/dev/peps/pep-0393" target=_top>PEP 393</A>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>kind</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable encodes information about the underlying storage (8-bit, 16-bit, or 32-bit) and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>data</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>points the buffer. In reality, you don&#8217;t need to do anything with these values as long as you pass them to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_READ()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro when extracting characters.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=a_few_final_wor>A few final words: when passing Unicode strings from Python to C, you should probably try to make it as simple as possible. If given the choice between an encoding such as UTF-8 or wide characters, choose UTF-8. Support for UTF-8 seems to be much more common, less trouble-prone, and better supported by the interpreter. Finally, make sure your review the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://docs.python.org/3/c-api/unicode.html" target=_top>documentation on Unicode handling</A>.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id969361 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id969372 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id969382 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id969392 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id969403 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_converting_c_strings_to_python class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Converting C Strings to Python</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_254 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id15><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_strings_converting_to_Python_objects class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Py_BuildValue_function_C_extensions_C_strings_converting_to_Python_objects class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_PyUnicode_FromWideChar_function_C_extensions_C_strings_converting_to_Python_objects class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_strings_C_converting_to_Python_objects class=indexterm></A>You want to convert strings from C to Python bytes or a string object.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_254 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=wchar_t__decla><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id969514 class=indexterm></A>For C strings represented as a pair<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>char *, int</CODE>, you must decide whether or not you want the string presented as a raw byte string or as a Unicode string. Byte objects can be built using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_BuildValue()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as follows:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=char_s__poi class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>     <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Pointer to C string data */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE>   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Length of data */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Make a bytes object */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"y#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_want_to__id36>If you want to create a Unicode string and you know that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>s</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>points to data encoded as UTF-8, you can use the following:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pyobject_obj__id1 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"s#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_s_is_encoded>If<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>s</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is encoded in some other known encoding, you can make a string using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_Decode()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as follows:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pyobject_obj__id2 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_Decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"encoding"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"errors"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>/*</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Examples</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>/*</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_Decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"latin-1"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"strict"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_Decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"ascii"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"ignore"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_happen_t>If you happen to have a wide string represented as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>wchar_t *, len</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pair, there are a few options. First, you could use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_BuildValue()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as follows:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=wchar_t_w__ class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>wchar_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>w</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Wide character string */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>       <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Length */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"u#"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>w</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=alternatively__id9>Alternatively, you can use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyUnicode_FromWideChar()</CODE>:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pyobject_obj__id3 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_FromWideChar</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>w</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_wide_charac>For wide character strings, no interpretation is made of the character data&#8212;it is assumed to be raw Unicode code points which are directly converted to Python.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_254 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=conversion_of_s>Conversion of strings from C to Python follow the same principles as I/O. Namely, the data from C must be explicitly decoded into a string according to some codec. Common encodings include ASCII, Latin-1, and UTF-8. If you&#8217;re not entirely sure of the encoding or the data is binary, you&#8217;re probably best off encoding the string as bytes instead.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=when_making_an_>When making an object, Python always copies the string data you provide. If necessary, it&#8217;s up to you to release the C string afterward (if required). Also, for better reliability, you should try to create strings using both a pointer and a size rather than relying on NULL-terminated data.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id970185 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id970196 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id970207 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id970218 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_working_with_c_strings_of_dubious_encoding class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Working with C Strings of Dubious Encoding</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_255 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id16><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_unknown_string_type_and class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_strings_bad_encoding_in_C_Python_extensions class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_surrogate_encoding class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_Unicode_bad_encoding_in_C_Python_extensions class=indexterm></A>You are converting strings back and forth between C and Python, but the C encoding is of a dubious or unknown nature. For example, perhaps the C data is supposed to be UTF-8, but it&#8217;s not being strictly enforced. You would like to write code that can handle malformed data in a graceful way that doesn&#8217;t crash Python or destroy the string data in the process.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_255 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_some_c_>Here is some C data and a function that illustrates the nature of this problem:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=some_dubious class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Some dubious string data (malformed UTF-8) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>const</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sdata</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\xc3\xb1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\xae</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>slen</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>16</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Output character data */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>void</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"%2x "</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>unsigned</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>[</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>]);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>++</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>printf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_this_code_t_id11>In this code, the string<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sdata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>contains a mix of UTF-8 and malformed data. Nevertheless, if a user calls<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>print_chars(sdata, slen)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in C, it works fine.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=now_suppose_you_id5>Now suppose you want to convert the contents of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>sdata</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>into a Python string. Further suppose you want to later pass that string to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>print_chars()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function through an extension. Here&#8217;s how to do it in a way that exactly preserves the original data even though there are encoding problems:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=return_the_c class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Return the C string back to Python */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_retstr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>""</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_Decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sdata</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>slen</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"utf-8"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"surrogateescape"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Wrapper for the print_chars() function */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE>   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"U"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_AsEncodedString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"utf-8"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"surrogateescape"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE>
        <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsStringAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_try_thes>If you try these functions from Python, here&#8217;s what happens:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=s__retstr class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>retstr</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'Spicy Jalape&#241;o\udcae'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>print_chars</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>53 70 69 63 79 20 4a 61 6c 61 70 65 c3 b1 6f ae</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=careful_observa>Careful observation will reveal that the malformed string got encoded into a Python string without errors, and that when passed back into C, it turned back into a byte string that exactly encoded the same bytes as the original C string.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_255 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=this_recipe_add_id2>This recipe addresses a subtle, but potentially annoying problem with string handling in extension modules. Namely, the fact that C strings in extensions might not follow the strict Unicode encoding/decoding rules that Python normally expects. Thus, it&#8217;s possible that some malformed C data would pass to Python. A good example might be C strings associated with low-level system calls such as filenames. For instance, what happens if a system call returns a broken string back to the interpreter that can&#8217;t be properly<SPAN style="BOX-SIZING: border-box" class=keep-together>decoded</SPAN>.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=normally_unico>Normally, Unicode errors are often handled by specifying some sort of error policy, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>strict</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>ignore</CODE>,<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>replace</CODE>, or something similar. However, a downside of these policies is that they irreparably destroy the original string content. For example, if the malformed data in the example was decoded using one of these polices, you would get results such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=raw__bspi class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>raw</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>b</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Spicy Jalape</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\xc3\xb1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>o</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\xae</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>raw</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'utf-8'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'ignore'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'Spicy Jalape&#241;o'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>raw</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'utf-8'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'replace'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'Spicy Jalape&#241;o?'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_surrogatees>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>surrogateescape</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>error handling policies takes all nondecodable bytes and turns them into the low-half of a surrogate pair (<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>\udcXX</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>where<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>XX</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the raw byte value). For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=rawdecode class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>raw</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'utf-8'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'surrogateescape'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'Spicy Jalape&#241;o\udcae'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=isolated_low_su>Isolated low surrogate characters such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>\udcae</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>never appear in valid Unicode. Thus, this string is technically an illegal representation. In fact, if you ever try to pass it to functions that perform output, you&#8217;ll get encoding errors:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=s__rawdec class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>raw</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>decode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'utf-8'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'surrogateescape'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>print</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=gt>Traceback (most recent call last):</CODE>
  File <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>"&lt;stdin&gt;"</CODE>, line <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=m>1</CODE>, in <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>&lt;module&gt;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; BACKGROUND: rgb(178,37,24); FONT-SIZE: 1em" class=gr>UnicodeEncodeError</CODE>: <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>'utf-8' codec can't encode character '\udcae'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>in position 14: surrogates not allowed</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=however_the_ma>However, the main point of allowing the surrogate escapes is to allow malformed strings to pass from C to Python and back into C without any data loss. When the string is encoded using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>surrogateescape</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>again, the surrogate characters are turned back into their original bytes. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=s_spicy_ja class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>'Spicy Jalape&#241;o\udcae'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>s</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>encode</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'utf-8'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'surrogateescape'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>b'Spicy Jalape\xc3\xb1o\xae'</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_a_general_ru_id5>As a general rule, it&#8217;s probably best to avoid surrogate encoding whenever possible&#8212;your code will be much more reliable if it uses proper encodings. However, sometimes there are situations where you simply don&#8217;t have control over the data encoding and you aren&#8217;t free to ignore or replace the bad data because other functions may need to use it. This recipe shows how to do it.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=as_a_final_note_id3>As a final note, many of Python&#8217;s system-oriented functions, especially those related to filenames, environment variables, and command-line options, use surrogate encoding. For example, if you use a function such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>os.listdir()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>on a directory containing a undecodable filename, it will be returned as a string with surrogate escapes. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=xref title="Printing Bad Filenames" href="about:ch05.html#bad_filenames">&#8220;Printing Bad Filenames&#8221;</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for a related recipe.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=pep__has_mor><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" class=ulink href="http://www.python.org/dev/peps/pep-0383" target=_top>PEP 383</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>has more information about the problem addressed by this recipe and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>surrogateescape</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>error handling.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id971981 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id971992 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id972002 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id972012 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_passing_filenames_to_c_extensions class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Passing Filenames to C Extensions</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_256 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id17><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_filenames_passing_to class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_files_names_passing_to_C_extensions class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_PyObject_data_type_C_extension_filenames_passing_with class=indexterm></A>You need to pass filenames to C library functions, but need to make sure the filename has been encoded according to the system&#8217;s expected filename encoding.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_256 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_write_an_ext>To write an extension function that receives a filename, use code such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id12 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_get_filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"O&amp;"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_FSConverter</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsStringAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Use filename */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Cleanup and return */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_RETURN_NONE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_already_>If you already have a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that you want to convert as a filename, use code such as the following:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pyobject_obj__id4 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Object with the filename */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_EncodeFSDefault</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsStringAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Use filename */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Cleanup */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bytes</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_need_to__id15>If you need to return a filename back to Python, use the following code:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=turn_a_filen class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Turn a filename into a Python object */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>       <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Already set */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE>   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename_len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>   <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Already set */</CODE>

<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_DecodeFSDefaultAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>filename_len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_256 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=dealing_with_fi>Dealing with filenames in a portable way is a tricky problem that is best left to Python. If you use this recipe in your extension code, filenames will be handled in a manner that is consistent with filename handling in the rest of Python. This includes encoding/decoding of bytes, dealing with bad characters, surrogate escapes, and other complications.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id972760 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id972770 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id972780 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_passing_open_files_to_c_extensions class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Passing Open Files to C Extensions</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_257 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id18><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_open_files_passing_to class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_files_open_passing_to_C_extensions class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_PyFile_FromFd_function_C_extensions class=indexterm></A>You have an open file object in Python, but need to pass it to C extension code that will use the file.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_257 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_convert_a_fi>To convert a file to an integer file descriptor, use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyFile_FromFd()</CODE>, as shown:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=pyobject_fobj class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fobj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>     <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* File object (already obtained somehow) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fd</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_AsFileDescriptor</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fobj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fd</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
   <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_resulting_f_id2>The resulting file descriptor is obtained by calling the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>fileno()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method on<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>fobj</CODE>. Thus, any object that exposes a descriptor in this manner should work (e.g., file, socket, etc.).</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=once_you_have_t_id2>Once you have the descriptor, it can be passed to various low-level C functions that expect to work with files.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_need_to__id16>If you need to convert an integer file descriptor back into a Python object, use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyFile_FromFd()</CODE></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>as follows:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=int_fd__exis class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>int</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>     <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Existing file descriptor (already open) */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fobj</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyFile_FromFd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fd</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"filename"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"r"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>-</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_arguments_t_id2>The arguments to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyFile_FromFd()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>mirror those of the built-in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>open()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>values simply indicate that the default settings for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>encoding</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>errors</CODE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>newline</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>arguments are being used.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_257 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=iopassing_open><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id973227 class=indexterm></A>If you are passing file objects from Python to C, there are a few tricky issues to be concerned about. First, Python performs its own I/O buffering through the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>io</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module. Prior to passing any kind of file descriptor to C, you should first flush the I/O buffers on the associated file objects. Otherwise, you could get data appearing out of order on the file stream.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=second_you_nee>Second, you need to pay careful attention to file ownership and the responsibility of closing the file in particular. If a file descriptor is passed to C, but still used in Python, you need to make sure C doesn&#8217;t accidentally close the file. Likewise, if a file descriptor is being turned into a Python file object, you need to be clear about who is responsible for closing it. The last argument to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyFile_FromFd()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to indicate that Python should close the file.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=if_you_need_to__id17>If you need to make a different kind of file object such as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>FILE *</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object from the C standard I/O library using a function such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>fdopen()</CODE>, you&#8217;ll need to be especially careful. Doing so would introduce two completely different I/O buffering layers into the I/O stack (one from Python&#8217;s<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>io</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module and one from C<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>stdio</CODE>). Operations such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>fclose()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in C could also inadvertently close the file for further use in Python. If given a choice, you should probably make extension code work with the low-level integer file descriptors as opposed to using a higher-level abstraction such as that provided by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>&lt;stdio.h&gt;</CODE>.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id973315 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id973326 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id973336 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_reading_file_like_objects_from_c class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Reading File-Like Objects from C</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_258 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id19><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_file-like_objects_reading class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_file-like_objects_reading_from_C class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_read_functionfile-like_C_objects_and class=indexterm></A>You want to write C extension code that consumes data from any Python file-like object (e.g., normal files,<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>StringIO</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects, etc.).</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_258 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_consume_data>To consume data on a file-like object, you need to repeatedly invoke its<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>read()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method and take steps to properly decode the resulting data.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_a_sampl_id1>Here is a sample C extension function that merely consumes all of the data on a file-like object and dumps it to standard output so you can see it:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=define_chunk_s class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cp>#define CHUNK_SIZE 8192</CODE>

<CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Consume a "file-like" object and write bytes to stdout */</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_consume_file</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_meth</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"O"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Get the read method of the passed object */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_meth</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_GetAttrString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"read"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Build the argument list to read() */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_args</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"(i)"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>CHUNK_SIZE</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>enc_data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kt>char</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_ssize_t</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Call read() */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_Call</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_meth</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>final</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Check for EOF */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PySequence_Length</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>break</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Encode Unicode as Bytes for C */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>enc_data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyUnicode_AsEncodedString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"utf-8"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"strict"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>final</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Extract underlying buffer data */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsStringAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>enc_data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Write to stdout (replace with something more useful) */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>write</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>1</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Cleanup */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>enc_data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>""</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>

 <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=nl>final:</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Cleanup */</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_meth</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>result</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=to_test_the_cod>To test the code, try making a file-like object such as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>StringIO</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instance and pass it in:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_io_ class=programlisting data-language="pycon"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>io</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>io</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>StringIO</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'Hello</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>World</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(249,238,152); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=se>\n</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>'</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>sample</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em; FONT-WEIGHT: bold" class=gp>&gt;&gt;&gt; </CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>sample</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>consume_file</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>f</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>Hello</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>World</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=go>&gt;&gt;&gt;</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_258 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=unlike_a_normal>Unlike a normal system file, a file-like object is not necessarily built around a low-level file descriptor. Thus, you can&#8217;t use normal C library functions to access it. Instead, you need to use Python&#8217;s C API to manipulate the file-like object much like you would in Python.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=in_the_solution_id3>In the solution, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>read()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method is extracted from the passed object. An argument list is built and then repeatedly passed to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id974663 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject_Call()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to invoke the method. To detect end-of-file (EOF),<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id974678 class=indexterm></A><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PySequence_Length()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used to see if the returned result has zero length.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=for_all_io_ope>For all I/O operations, you&#8217;ll need to concern yourself with the underlying encoding and distinction between bytes and Unicode. This recipe shows how to read a file in text mode and decode the resulting text into a bytes encoding that can be used by C. If you want to read the file in binary mode, only minor changes will be made. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=_call_rea class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Call read() */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_Call</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_meth</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>read_args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>final</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Check for EOF */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PySequence_Length</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>break</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_Check</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyErr_SetString</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyExc_IOError</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"File must be in binary mode"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>goto</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>final</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Extract underlying buffer data */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyBytes_AsStringAndSize</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>data</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>buf</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>len</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_trickiest_p_id2>The trickiest part of this recipe concerns proper memory management. When working with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject *</CODE>variables, careful attention needs to be given to managing reference counts and cleaning up values when no longer needed. The various<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_DECREF()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>calls are doing this.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_recipe_is_w>The recipe is written in a general-purpose manner so that it can be adapted to other file operations, such as writing. For example, to write data, merely obtain the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>write()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method of the file-like object, convert data into an appropriate Python object (bytes or Unicode), and invoke the method to have it written to the file.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=finally_althou>Finally, although file-like objects often provide other methods (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>readline()</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>read_into()</CODE>), it is probably best to just stick with the basic<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>read()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>write()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>methods for maximal portability. Keeping things as simple as possible is often a good policy for C extensions.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975128 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975139 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975149 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_consuming_an_iterable_from_c class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Consuming an Iterable from C</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_259 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id20><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_iterables_from_C_consuming class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_iterables_from_C_consuming class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_PyIter_Next_function_C_extensions class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_PyObject_GetIter_function_C_extensions class=indexterm></A>You want to write C extension code that consumes items from any iterable object such as a list, tuple, file, or generator.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_259 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=here_is_a_sampl_id2>Here is a sample C extension function that shows how to consume the items on an iterable:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=static_pyobject_id13 class=programlisting data-language="c"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>static</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,112,63); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nf>py_consume_iterable</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>self</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>iter</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>*</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>item</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>

  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyArg_ParseTuple</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>args</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"O"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&amp;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>if</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>iter</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyObject_GetIter</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>obj</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>==</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>;</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>while</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>((</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>item</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>PyIter_Next</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>iter</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>))</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>!=</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=nb>NULL</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>)</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>{</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-STYLE: italic; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(95,90,96); FONT-SIZE: 1em" class=cm>/* Use item */</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>...</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>item</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_DECREF</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>iter</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
  <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(205,168,105); FONT-SIZE: 1em" class=k>return</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Py_BuildValue</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>(</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>""</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>);</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>}</CODE></PRE></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_259 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_code_in_thi>The code in this recipe mirrors similar code in Python. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyObject_GetIter()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>call is the same as calling<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>iter()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to get an iterator. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PyIter_Next()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function invokes the next method on the iterator returning the next item or NULL if there are no more items. Make sure you&#8217;re careful with memory management&#8212;<CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>Py_DECREF()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>needs to be called on both the produced items and the iterator object itself to avoid leaking memory.<A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975726 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975737 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975747 class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=id975757 class=indexterm></A></P></DIV></DIV>
<DIV style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 16px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(25,25,25); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=_diagnosing_segmentation_faults class=sect1 data-original-filename="chapter_15_cext.asciidoc">
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H2 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; LETTER-SPACING: -1px; FONT-SIZE: 24px" class=title>Diagnosing Segmentation Faults</H2></DIV></DIV></DIV>
<DIV style="BOX-SIZING: border-box" id=_problem_260 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Problem</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=c_extension_pro_id21><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_C_extension_programming_segmentation_faults_and class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_faulthandler_module class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_gdb_debugger class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_pdb_debugger class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_segmentation_faults class=indexterm></A><A style="BOX-SIZING: border-box; COLOR: rgb(31,60,153); TEXT-DECORATION: none" id=ix_traceback_segmentation_faults_and class=indexterm></A>The interpreter violently crashes with a segmentation fault, bus error, access violation, or other fatal error. You would like to get a Python traceback that shows you where your program was running at the point of failure.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_solution_260 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Solution</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_faulthandle_id1>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>faulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>module can be used to help you solve this problem. Include the following code in your program:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=import_faulthan class=programlisting data-language="python"><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=kn>import</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(155,133,157); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=nn>faulthandler</CODE>
<CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>faulthandler</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>.</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>enable</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>()</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=alternatively__id10>Alternatively, run Python with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>-Xfaulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>option such as this:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=bash__python__id16 class=programlisting data-language="bash">bash % python3 -Xfaulthandler program.py</PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=last_but_not_l_id27>Last, but not least, you can set the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>PYTHONFAULTHANDLER</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>environment variable.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=with_faulthandl>With<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>faulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>enabled, fatal errors in C extensions will result in a Python traceback being printed on failures. For example:</P><PRE style="BOX-SIZING: border-box; PADDING-BOTTOM: 16px; OVERFLOW-X: auto; BACKGROUND-COLOR: rgb(51,51,51); PADDING-LEFT: 16px; PADDING-RIGHT: 16px; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; MARGIN-BOTTOM: 20px; COLOR: rgb(248,248,248); MARGIN-LEFT: -15px; FONT-SIZE: 0.9em; MARGIN-RIGHT: -15px; PADDING-TOP: 16px; border-top-left-radius: 5px; border-top-right-radius: 5px" id=fatal_python_er class=programlisting data-language="python">    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Fatal</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Python</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>error</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Segmentation</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fault</CODE>

    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Current</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>thread</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mh>0x00007fff71106cc0</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>:</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>File</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"example.py"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>line</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>6</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>foo</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>File</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"example.py"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>line</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>10</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>bar</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>File</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"example.py"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>line</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>14</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>spam</CODE>
      <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>File</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=s>"example.py"</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=p>,</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>line</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(207,106,76); FONT-SIZE: 1em" class=mi>19</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; COLOR: rgb(170,34,255); FONT-SIZE: 1em; FONT-WEIGHT: bold" class=ow>in</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&lt;</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>module</CODE><CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=o>&gt;</CODE>
    <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>Segmentation</CODE> <CODE style="BOX-SIZING: border-box; FONT-FAMILY: Consolas, Monaco, 'Lucida Console', Courier, monospace; FONT-SIZE: 1em" class=n>fault</CODE></PRE>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=although_this_w_id4>Although this won&#8217;t tell you where in the C code things went awry, at least it can tell you how it got there from Python.</P></DIV>
<DIV style="BOX-SIZING: border-box" id=_discussion_260 class=sect2>
<DIV style="BOX-SIZING: border-box" class=titlepage>
<DIV style="BOX-SIZING: border-box">
<DIV style="BOX-SIZING: border-box">
<H3 style="BOX-SIZING: border-box; MARGIN-TOP: 30px; FONT-FAMILY: heading, sans-serif; MARGIN-BOTTOM: 10px; FONT-SIZE: 18px" class=title>Discussion</H3></DIV></DIV></DIV>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=the_faulthandle_id2>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>faulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will show you the stack traceback of the Python code executing at the time of failure. At the very least, this will show you the top-level extension function that was invoked. With the aid of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>pdb</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or other Python debugger, you can investigate the flow of the Python code leading to the error.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=faulthandler_wi><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>faulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will not tell you anything about the failure from C. For that, you will<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BOX-SIZING: border-box" class=keep-together>need to use</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>a traditional C debugger, such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>gdb</CODE>. However, the information from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>faulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>traceback may give you a better idea of where to direct your attention.</P>
<P style="BOX-SIZING: border-box; LINE-HEIGHT: 22px; MARGIN-BOTTOM: 20px" id=it_should_be_no_id11>It should be noted that certain kinds of errors in C may not be easily recoverable. For example, if a C extension trashes the stack or program heap, it may render<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-STYLE: normal; FONT-FAMILY: Consolas, Monaco, 'Liberation Mono', Courier, monospace; FONT-SIZE: 0.9em" class=literal>faulthandler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>inoperable and you&#8217;ll simply get no output at all (other than a crash). Obviously, your mileage may vary.</P></DIV></DIV>