<H4 style="MARGIN: 12pt 0cm 6pt 43.2pt"><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><EM><FONT face=&#23435;&#20307;>1.3.3.1 # Algorithmic Modeling </FONT></EM></SPAN></H4>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>Algorithmic modeling is about the definition of application-specific algorithms such as those for cell phone receivers, encryption, video, and many forms of digital signal processing. Refining in a software environment provides a much friendlier environment for debug compared to RTL debug. In addition, <FONT class=extract>a software model within the context of an ESL methodology provides the architect a platform for asking and answering a series of questions such as: </FONT></FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>How do we want to specify this for the hardware or software implementers? </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>How sloppy can we get with our arithmetic and have the algorithm still work? </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Can I get away with a software-only solution? </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT class=extract face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Can I use a lower clock rate for my processor (with the resulting power savings)<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>if I implement this algorithm with a hardware co-processor? </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>After completing the design of the actual algorithm (getting it to work), the algorithm architect usually refines the algorithm from a floating-point implementation to a fixed-point (supported by SystemC) implementation (for hardware implementation). This architect also partitions the algorithm between hardware and software. <FONT class=extract>An architect with broad experience will understand the different tradeoffs between software and hardware and will shape the algorithm implementation to be very implementable in the chosen space (for instance minimizing memory use for hardware implementation).</FONT></FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>This activity is usually performed in SystemC, C/C++ or in MATLAB, or other commercial tools. This work is usually augmented with libraries for a particular application space such as a fixed-point library, a digital signal processing library, and others. </FONT></SPAN>