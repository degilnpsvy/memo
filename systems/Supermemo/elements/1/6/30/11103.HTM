<H4 style="MARGIN: 12pt 0cm 6pt 43.2pt"><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><EM><FONT face=&#23435;&#20307;>1.3.3.3 # Virtual Software Development Platform </FONT></EM></SPAN></H4>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The Virtual software development platform allows very early development of system software. During this activity, the following questions are sometimes asked and answered: </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Does the hardware have the advertised features? </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Are the control and status registers supplied to the software sufficient? Does the software have the necessary control and observably to meet the customer requirements? </FONT></SPAN></P>
<P><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt">&#8226;<SPAN style="mso-tab-count: 1"> </SPAN>Can the software meet the software timing budget with the current architecture?</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: &#23435;&#20307;"></SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>SystemC is the language of choice for this set of activities. SystemC provides the necessary simulation features (simulation concurrency), ability to easily integrate with C and C++, and simulation performance. </FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 12.0pt"><FONT face=&#23435;&#20307;>The ability to easily integrate with C and C++ lets engineers wrap the <FONT class=extract>instruction set simulators (ISS)</FONT> within the model. In addition, early in the development process, C or C++ code can be wrapped and executed on the host modeling processor (versus the ISS). We call this technique direct execution. Even as the software is refined and OS calls are required, additional techniques can be used to enable direct execution. </FONT></SPAN>