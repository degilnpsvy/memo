<H3 class=section>8.4 Functions for Conditionals</H3>
<P><A name=index-if-641></A><A name=index-conditional-expansion-642></A>There are three functions that provide conditional expansion. A key aspect of these functions is that not all of the arguments are expanded initially. Only those arguments which need to be expanded, will be expanded. 
<DL>
<DT><FONT class=extract><CODE>$(if </CODE><VAR>condition</VAR><CODE>,</CODE><VAR>then-part</VAR><CODE>[,</CODE><VAR>else-part</VAR><CODE>])</CODE> </FONT>
<DD><A name=index-if-643></A><FONT class=extract>The <CODE>if</CODE> function provides support for conditional expansion in a functional context (as opposed to the GNU <CODE>make</CODE> makefile conditionals such as <CODE>ifeq</CODE> (see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Conditional-Syntax"><FONT class=extract>Syntax of Conditionals</FONT></A><FONT class=extract>). </FONT>
<P><FONT class=extract>The first argument, <VAR>condition</VAR>, first has all preceding and trailing whitespace stripped, then is expanded. If it expands to any non-empty string, then the condition is considered to be true. If it expands to an empty string, the condition is considered to be false. </FONT>
<P><FONT class=extract>If the condition is true then the second argument, <VAR>then-part</VAR>, is evaluated and this is used as the result of the evaluation of the entire <CODE>if</CODE> function. </FONT>
<P><FONT class=extract>If the condition is false then the third argument, <VAR>else-part</VAR>, is evaluated and this is the result of the <CODE>if</CODE> function. If there is no third argument, the <CODE>if</CODE> function evaluates to nothing (the empty string). </FONT>
<P><FONT class=extract>Note that only one of the <VAR>then-part</VAR> or the <VAR>else-part</VAR> will be evaluated, never both. Thus, either can contain side-effects (such as <CODE>shell</CODE> function calls, etc.) <BR></FONT></P>
<DT><FONT class=extract><CODE>$(or </CODE><VAR>condition1</VAR><CODE>[,</CODE><VAR>condition2</VAR><CODE>[,</CODE><VAR>condition3</VAR><CODE>...]])</CODE> </FONT>
<DD><A name=index-or-644></A><FONT class=extract>The <CODE>or</CODE> function provides a &#8220;short-circuiting&#8221; OR operation. Each argument is expanded, in order. If an argument expands to a non-empty string the processing stops and the result of the expansion is that string. If, after all arguments are expanded, all of them are false (empty), then the result of the expansion is the empty string. <BR></FONT>
<DT><FONT class=extract><CODE>$(and </CODE><VAR>condition1</VAR><CODE>[,</CODE><VAR>condition2</VAR><CODE>[,</CODE><VAR>condition3</VAR><CODE>...]])</CODE> </FONT>
<DD><A name=index-and-645></A><FONT class=extract>The <CODE>and</CODE> function provides a &#8220;short-circuiting&#8221; AND operation. Each argument is expanded, in order. If an argument expands to an empty string the processing stops and the result of the expansion is the empty string. If all arguments expand to a non-empty string then the result of the expansion is the expansion of the last argument. </FONT></DD></DL>