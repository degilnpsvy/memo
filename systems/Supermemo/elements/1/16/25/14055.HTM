<FONT class=extract>Substitution references (see </FONT><A href="https://www.gnu.org/software/make/manual/make.html#Substitution-Refs"><FONT class=extract>Substitution References</FONT></A><FONT class=extract>) are a simpler way to get the effect of the <CODE>patsubst</CODE> function: </FONT><PRE class=example><FONT class=extract>          $(<VAR>var</VAR>:<VAR>pattern</VAR>=<VAR>replacement</VAR>)
</FONT></PRE>
<P class=noindent><FONT class=extract>is equivalent to </FONT><PRE class=example><FONT class=extract>          $(patsubst <VAR>pattern</VAR>,<VAR>replacement</VAR>,$(<VAR>var</VAR>))</FONT>
</PRE>
<P><FONT class=extract>The second shorthand simplifies one of the most common uses of <CODE>patsubst</CODE>: replacing the suffix at the end of file names. </FONT><PRE class=example><FONT class=extract>          $(<VAR>var</VAR>:<VAR>suffix</VAR>=<VAR>replacement</VAR>)
</FONT></PRE>
<P class=noindent><FONT class=extract>is equivalent to </FONT><PRE class=example><FONT class=extract>          $(patsubst %<VAR>suffix</VAR>,%<VAR>replacement</VAR>,$(<VAR>var</VAR>))</FONT>
</PRE>
<P class=noindent>For example, you might have a list of object files: <PRE class=example>          objects = foo.o bar.o baz.o
</PRE>
<P class=noindent>To get the list of corresponding source files, you could simply write: <PRE class=example>          $(objects:.o=.c)
</PRE>
<P class=noindent>instead of using the general form: <PRE class=example>          $(patsubst %.o,%.c,$(objects))
</PRE>