<H4><A name=SECTION02143010000000000000>Execution</A> </H4>
<P>
<DIV align=center><A name=fig:phil3></A><A name=1671></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 1.18:</STRONG> (a) A planner produces a plan that may be executed by the machine. The planner may either be a machine itself or even a human. (b) Alternatively, the planner may design the entire machine.</CAPTION>
<TBODY>
<TR>
<TD><IMG height=227 alt="\begin{figure}\begin{center}&#10;\begin{tabular}{ccc}&#10;\psfig{file=figs/machenv3.eps,...&#10;...achenv5.eps,width=2.3in} \\&#10;(a) &amp; &amp; (b)&#10;\end{tabular}&#10;\end{center}\end{figure}" src="http://planning.cs.uiuc.edu/img246.gif" width=596 border=0></TD></TR></TBODY></TABLE></DIV>
<P>A plan is usually executed by a machine. A human could alternatively execute it; however, the case of machine execution is the primary focus of this book. There are two general types of machine execution. The first is depicted in Figure <A href="http://planning.cs.uiuc.edu/node31.html#fig:phil3">1.18</A>a, in which the planner produces a <EM>plan</EM>, which is encoded in some way and given as input to the machine. In this case, the machine is considered <EM>programmable</EM> and can accept possible plans from a planner before execution. It will generally be assumed that once the plan is given, the machine becomes autonomous and can no longer interact with the planner. Of course, this model could be extended to allow machines to be improved over time by receiving better plans; however, we want a strict notion of autonomy for the discussion of planning in this book. This approach does not prohibit the updating of plans in practice; however, this is not preferred because plans should already be designed to take into account new information during execution. 
<P>The second type of machine execution of a plan is depicted in Figure <A href="http://planning.cs.uiuc.edu/node31.html#fig:phil3">1.18</A>b. In this case, the plan produced by the planner encodes an entire machine. The plan <EM>is</EM> a special-purpose machine that is designed to solve the specific tasks given originally to the planner. Under this interpretation, one may be a <EM>minimalist</EM> and design the simplest machine possible that sufficiently solves the desired tasks. If the plan is encoded as a finite state machine, then it can sometimes be considered as an algorithm in the Turing sense (depending on whether connecting the machine to a tape preserves its operation).