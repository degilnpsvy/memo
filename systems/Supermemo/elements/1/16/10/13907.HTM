If there are C compiler options that <EM>must</EM> be used for proper compilation of certain files, do not include them in <CODE>CFLAGS</CODE>. Users expect to be able to specify <CODE>CFLAGS</CODE> freely themselves. Instead, arrange to pass the necessary options to the C compiler independently of <CODE>CFLAGS</CODE>, by writing them explicitly in the compilation commands or by defining an implicit rule, like this: <PRE class=smallexample><FONT class=clozed>     CFLAGS = -g
     ALL_CFLAGS = -I. $(CFLAGS)
     .c.o:
             $(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $&lt;
</FONT></PRE>
<P>Do include the &#8216;<SAMP><SPAN class=samp>-g</SPAN></SAMP>&#8217; option in <CODE>CFLAGS</CODE>, because that is not <EM>required</EM> for proper compilation. You can consider it a default that is only recommended. If the package is set up so that it is compiled with GCC by default, then you might as well include &#8216;<SAMP><SPAN class=samp>-O</SPAN></SAMP>&#8217; in the default value of <CODE>CFLAGS</CODE> as well.