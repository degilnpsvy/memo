<DT><FONT class=extract><CODE>$(filter </CODE><VAR>pattern</VAR><CODE>...,</CODE><VAR>text</VAR><CODE>)</CODE> </FONT>
<DD><FONT class=extract>Returns all whitespace-separated words in <VAR>text</VAR> that <EM>do</EM> match any of the <VAR>pattern</VAR> words, removing any words that <EM>do not</EM> match. The patterns are written using &#8216;<SAMP><SPAN class=samp>%</SPAN></SAMP>&#8217;, just like the patterns used in the <CODE>patsubst</CODE> function above. </FONT>
<P><FONT class=extract>The <CODE>filter</CODE> function can be used to separate out different types of strings (such as file names) in a variable. For example: </FONT><PRE class=example><FONT class=extract>          sources := foo.c bar.c baz.s ugh.h
          foo: $(sources)
                  cc $(filter %.c %.s,$(sources)) -o foo
</FONT></PRE>
<P class=noindent>says that <SAMP><SPAN class=file>foo</SPAN></SAMP> depends of <SAMP><SPAN class=file>foo.c</SPAN></SAMP>, <SAMP><SPAN class=file>bar.c</SPAN></SAMP>, <SAMP><SPAN class=file>baz.s</SPAN></SAMP> and <SAMP><SPAN class=file>ugh.h</SPAN></SAMP> but only <SAMP><SPAN class=file>foo.c</SPAN></SAMP>, <SAMP><SPAN class=file>bar.c</SPAN></SAMP> and <SAMP><SPAN class=file>baz.s</SPAN></SAMP> should be specified in the command to the compiler. <BR></P></DD>