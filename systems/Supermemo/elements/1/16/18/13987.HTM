<H4 class=subheading>Variable Assignment</H4>
<P><A name=index-g_t_002b_003d_002c-expansion-103></A><A name=index-g_t_003d_002c-expansion-104></A><A name=index-g_t_003f_003d_002c-expansion-105></A><A name=index-g_t_002b_003d_002c-expansion-106></A><A name=index-g_t_0021_003d_002c-expansion-107></A><A name=index-define_002c-expansion-108></A>Variable definitions are parsed as follows: <PRE class=example>     <VAR>immediate</VAR> = <VAR>deferred</VAR>
     <VAR>immediate</VAR> ?= <VAR>deferred</VAR>
     <VAR>immediate</VAR> := <VAR>immediate</VAR>
     <VAR>immediate</VAR> ::= <VAR>immediate</VAR>
     <VAR>immediate</VAR> += <VAR>deferred</VAR> or <VAR>immediate</VAR>
     <VAR>immediate</VAR> != <VAR>immediate</VAR>
     
     define <VAR>immediate</VAR>
       <VAR>deferred</VAR>
     endef
     
     define <VAR>immediate</VAR> =
       <VAR>deferred</VAR>
     endef
     
     define <VAR>immediate</VAR> ?=
       <VAR>deferred</VAR>
     endef
     
     define <VAR>immediate</VAR> :=
       <VAR>immediate</VAR>
     endef
     
     define <VAR>immediate</VAR> ::=
       <VAR>immediate</VAR>
     endef
     
     define <VAR>immediate</VAR> +=
       <VAR>deferred</VAR> or <VAR>immediate</VAR>
     endef
     
     define <VAR>immediate</VAR> !=
       <VAR>immediate</VAR>
     endef
</PRE>
<P>For the append operator, &#8216;<SAMP><SPAN class=samp>+=</SPAN></SAMP>&#8217;, the right-hand side is considered immediate if the variable was previously set as a simple variable (&#8216;<SAMP><SPAN class=samp>:=</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>::=</SPAN></SAMP>&#8217;), and deferred otherwise. 
<P>For the shell assignment operator, &#8216;<SAMP><SPAN class=samp>!=</SPAN></SAMP>&#8217;, the right-hand side is evaluated immediately and handed to the shell. The result is stored in the variable named on the left, and that variable becomes a simple variable (and will thus be re-evaluated on each reference).