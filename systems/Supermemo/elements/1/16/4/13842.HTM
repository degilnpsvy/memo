The algorithm <CODE>make</CODE> uses to decide whether to keep or abandon a path found via directory search is as follows: 
<OL type=1>
<LI><FONT class=clozed>If a target file does not exist at the path specified in the makefile, directory search is performed. </FONT>
<LI><FONT class=clozed>If the directory search is successful, that path is kept and this file is tentatively stored as the target. </FONT>
<LI><FONT class=clozed>All prerequisites of this target are examined using this same method. </FONT>
<LI><FONT class=clozed>After processing the prerequisites, the target may or may not need to be rebuilt: </FONT>
<OL type=a>
<LI><FONT class=clozed>If the target does <EM>not</EM> need to be rebuilt, the path to the file found during directory search is used for any prerequisite lists which contain this target. In short, if <CODE>make</CODE> doesn't need to rebuild the target then you use the path found via directory search. </FONT>
<LI><FONT class=clozed>If the target <EM>does</EM> need to be rebuilt (is out-of-date), the pathname found during directory search is <EM>thrown away</EM>, and the target is rebuilt using the file name specified in the makefile. In short, if <CODE>make</CODE> must rebuild, then the target is rebuilt locally, not in the directory found via directory search.</FONT></LI></OL></LI></OL>