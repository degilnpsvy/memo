<H4 style="FONT-SIZE: medium; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=SECTION02120020000000000000>A motion planning puzzle</A></H4>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The puzzles in Figure<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://planning.cs.uiuc.edu/node6.html#fig:rubik">1.1</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be easily discretized because of the regularity and symmetries involved in moving the parts. Figure<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://planning.cs.uiuc.edu/node7.html#fig:alpha">1.2</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>shows a problem that lacks these properties and requires planning in a continuous space. Such problems are solved by using the motion planning techniques of Part<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://planning.cs.uiuc.edu/node71.html#par:mp">II</A>. This puzzle was designed to frustrate both humans and motion planning algorithms. It can be solved in a few minutes on a standard personal computer (PC) using the techniques in Section<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://planning.cs.uiuc.edu/node230.html#sec:rrt">5.5</A>. Many other puzzles have been developed as benchmarks for evaluating planning algorithms.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"></P>
<DIV style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px" align=center><A name=fig:alpha></A><A name=1647></A>
<TABLE>
<CAPTION align=bottom><STRONG>Figure 1.2:</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN>Remember puzzles like this? Imagine trying to solve one with an algorithm. The goal is to pull the two bars apart. This example is called the Alpha 1.0 Puzzle<A name=1236></A>. It was created by Boris Yamrom and posted as a research benchmark by Nancy Amato<A name=1706></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>at Texas A&amp;M University. This solution and animation were made by James Kuffner<A name=1708></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see [<A href="http://planning.cs.uiuc.edu/node858.html#Kuf01">558</A>] for the full movie).</CAPTION>
<TBODY>
<TR>
<TD><IMG height=337 alt="\begin{figure}\begin{center}&#10;\psfig{file=figs/alpha.eps,width=4.0in}&#10;\end{center}&#10;\end{figure}" src="http://planning.cs.uiuc.edu/img230.gif" width=452 border=0></TD></TR></TBODY></TABLE></DIV>