<DT><FONT class=clozed><CODE>$(if </CODE><VAR>condition</VAR><CODE>,</CODE><VAR>then-part</VAR><CODE>[,</CODE><VAR>else-part</VAR><CODE>])</CODE></FONT> 
<DD><A name=index-if-643></A>The <CODE>if</CODE> function provides support for conditional expansion in a functional context (as opposed to the GNU <CODE>make</CODE> makefile conditionals such as <CODE>ifeq</CODE> (see <A href="https://www.gnu.org/software/make/manual/make.html#Conditional-Syntax">Syntax of Conditionals</A>). 
<P><FONT class=extract>The first argument, <VAR>condition</VAR>, first has all preceding and trailing whitespace stripped, then is expanded. If it expands to any non-empty string, then the condition is considered to be true. If it expands to an empty string, the condition is considered to be false.</FONT> 
<P>If the condition is true then the second argument, <VAR>then-part</VAR>, is evaluated and this is used as the result of the evaluation of the entire <CODE>if</CODE> function. 
<P>If the condition is false then the third argument, <VAR>else-part</VAR>, is evaluated and this is the result of the <CODE>if</CODE> function. If there is no third argument, the <CODE>if</CODE> function evaluates to nothing (the empty string). 
<P>Note that only one of the <VAR>then-part</VAR> or the <VAR>else-part</VAR> will be evaluated, never both. Thus, either can contain side-effects (such as <CODE>shell</CODE> function calls, etc.) <BR></P></DD>