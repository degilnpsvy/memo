<H4 class=subsection>1.1.4 Executable <CODE>awk</CODE> Programs</H4><A name=index-awk-programs-1></A><A name=index-_0023-_0028number-sign_0029_002c-_0023_0021-_0028executable-scripts_0029></A><A name=index-Unix_002c-awk-scripts-and></A><A name=index-number-sign-_0028_0023_0029_002c-_0023_0021-_0028executable-scripts_0029></A>
<P>Once you have learned <CODE>awk</CODE>, you may want to write self-contained <CODE>awk</CODE> scripts, using the &#8216;<SAMP>#!</SAMP>&#8217; script mechanism. You can do this on many systems.<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT9" name=DOCF9><SUP>9</SUP></A> For example, you could update the file <SAMP>advice</SAMP> to look like this: </P>
<DIV class=example><PRE class=example>#! /bin/awk -f

BEGIN { print "Don't Panic!" }
</PRE></DIV>
<P>After making this file executable (with the <CODE>chmod</CODE> utility), simply type &#8216;<SAMP>advice</SAMP>&#8217; at the shell and the system arranges to run <CODE>awk</CODE><A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT10" name=DOCF10><SUP>10</SUP></A> as if you had typed &#8216;<SAMP>awk -f advice</SAMP>&#8217;: </P>
<DIV class=example><PRE class=example>$ <KBD><EM>chmod +x advice</EM></KBD>
$ <KBD><EM>advice</EM></KBD>
-| Don't Panic!
</PRE></DIV>
<P>(We assume you have the current directory in your shell&#8217;s search path variable [typically <CODE>$PATH</CODE>]. If not, you may need to type &#8216;<SAMP>./advice</SAMP>&#8217; at the shell.) </P>
<P>Self-contained <CODE>awk</CODE> scripts are useful when you want to write a program that users can invoke without their having to know that the program is written in <CODE>awk</CODE>. </P><A name=index-sidebar_002c-Portability-Issues-with-_0023_0021></A>
<TABLE class=cartouche border=1>
<TBODY>
<TR>
<TD>
<DIV align=center><B>Portability Issues with &#8216;<SAMP>#!</SAMP>&#8217;</B> </DIV><A name=index-portability_002c-_0023_0021-_0028executable-scripts_0029></A>
<P>Some systems limit the length of the interpreter name to 32 characters. Often, this can be dealt with by using a symbolic link. </P>
<P>You should not put more than one argument on the &#8216;<SAMP>#!</SAMP>&#8217; line after the path to <CODE>awk</CODE>. It does not work. The operating system treats the rest of the line as a single argument and passes it to <CODE>awk</CODE>. Doing this leads to confusing behavior&#8212;most likely a usage diagnostic of some sort from <CODE>awk</CODE>. </P><A name=index-ARGC_002fARGV-variables_002c-portability-and></A><A name=index-portability_002c-ARGV-variable></A>
<P>Finally, the value of <CODE>ARGV[0]</CODE> (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Built_002din-Variables">Built-in Variables</A>) varies depending upon your operating system. Some systems put &#8216;<SAMP>awk</SAMP>&#8217; there, some put the full pathname of <CODE>awk</CODE> (such as <SAMP>/bin/awk</SAMP>), and some put the name of your script (&#8216;<SAMP>advice</SAMP>&#8217;). (d.c.) Don&#8217;t rely on the value of <CODE>ARGV[0]</CODE> to provide your script name. </P></TD></TR></TBODY></TABLE>