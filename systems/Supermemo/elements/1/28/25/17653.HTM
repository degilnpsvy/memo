<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Pointer-Arrays.top_of_page></A>Pointer Arrays</SPAN></H2>
<P>Pointer Arrays &#8212; arrays of pointers to any type of data, which grow automatically as new elements are added</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Pointer-Arrays.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-new">g_ptr_array_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_sized_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-sized-new">g_ptr_array_sized_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_new_with_free_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-new-with-free-func">g_ptr_array_new_with_free_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-new-full">g_ptr_array_new_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_set_free_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-set-free-func">g_ptr_array_set_free_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-ref">g_ptr_array_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-unref">g_ptr_array_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-add">g_ptr_array_add</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-insert">g_ptr_array_insert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_ptr_array_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove">g_ptr_array_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_ptr_array_remove_index&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-index">g_ptr_array_remove_index</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_ptr_array_remove_fast&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-fast">g_ptr_array_remove_fast</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_ptr_array_remove_index_fast&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-index-fast">g_ptr_array_remove_index_fast</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_remove_range&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-range">g_ptr_array_remove_range</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-sort">g_ptr_array_sort</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_sort_with_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-sort-with-data">g_ptr_array_sort_with_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_set_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-set-size">g_ptr_array_set_size</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_ptr_array_index() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-index">g_ptr_array_index</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_ptr_array_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free">g_ptr_array_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_ptr_array_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-foreach">g_ptr_array_foreach</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Pointer-Arrays.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray">GPtrArray</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Pointer-Arrays.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Pointer-Arrays.description></A>
<H2>Description</H2>
<P>Pointer Arrays are similar to Arrays but are used only for storing pointers.</P>
<P>If you remove elements from the array, elements at the end of the array are moved into the space previously occupied by the removed element. This means that you should not rely on the index of particular elements remaining the same. You should also be careful when deleting elements while iterating over the array.</P>
<P>To create a pointer array, use <A class=link title=g_ptr_array_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-new"><CODE class=function>g_ptr_array_new()</CODE></A>.</P>
<P>To add elements to a pointer array, use <A class=link title=g_ptr_array_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-add"><CODE class=function>g_ptr_array_add()</CODE></A>.</P>
<P>To remove elements from a pointer array, use <A class=link title=g_ptr_array_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove"><CODE class=function>g_ptr_array_remove()</CODE></A>, <A class=link title=g_ptr_array_remove_index&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-index"><CODE class=function>g_ptr_array_remove_index()</CODE></A> or <A class=link title=g_ptr_array_remove_index_fast&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-index-fast"><CODE class=function>g_ptr_array_remove_index_fast()</CODE></A>.</P>
<P>To access an element of a pointer array, use <A class=link title=g_ptr_array_index() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-index"><CODE class=function>g_ptr_array_index()</CODE></A>.</P>
<P>To set the size of a pointer array, use <A class=link title=g_ptr_array_set_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-set-size"><CODE class=function>g_ptr_array_set_size()</CODE></A>.</P>
<P>To free a pointer array, use <A class=link title=g_ptr_array_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free"><CODE class=function>g_ptr_array_free()</CODE></A>.</P>
<P>An example using a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A>:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GPtrArray <SPAN class="gtkdoc opt">*</SPAN>array<SPAN class="gtkdoc opt">;</SPAN>
gchar <SPAN class="gtkdoc opt">*</SPAN>string1 <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=string>"one"</SPAN><SPAN class="gtkdoc opt">;</SPAN>
gchar <SPAN class="gtkdoc opt">*</SPAN>string2 <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=string>"two"</SPAN><SPAN class="gtkdoc opt">;</SPAN>
gchar <SPAN class="gtkdoc opt">*</SPAN>string3 <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=string>"three"</SPAN><SPAN class="gtkdoc opt">;</SPAN>

array <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-new">g_ptr_array_new</A></SPAN> <SPAN class="gtkdoc opt">();</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-add">g_ptr_array_add</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">, (</SPAN>gpointer<SPAN class="gtkdoc opt">)</SPAN> string1<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-add">g_ptr_array_add</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">, (</SPAN>gpointer<SPAN class="gtkdoc opt">)</SPAN> string2<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-add">g_ptr_array_add</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">, (</SPAN>gpointer<SPAN class="gtkdoc opt">)</SPAN> string3<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-index">g_ptr_array_index</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">) != (</SPAN>gpointer<SPAN class="gtkdoc opt">)</SPAN> string1<SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-print">g_print</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"ERROR: got %p instead of %p</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
           <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-index">g_ptr_array_index</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">),</SPAN> string1<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free">g_ptr_array_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>array<SPAN class="gtkdoc opt">,</SPAN> TRUE<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<DIV class=refsect1><A name=glib-Pointer-Arrays.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-ptr-array-new></A>
<H3>g_ptr_array_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;*
g_ptr_array_new (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Creates a new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> with a reference count of 1.</P>
<DIV class=refsect3><A name=id-1.6.11.7.2.5></A>
<H4>Returns</H4>
<P>the new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-sized-new></A>
<H3>g_ptr_array_sized_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;*
g_ptr_array_sized_new (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> reserved_size</CODE></EM>);</PRE>
<P>Creates a new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> with <EM class=parameter><CODE>reserved_size</CODE></EM> pointers preallocated and a reference count of 1. This avoids frequent reallocation, if you are going to add many pointers to the array. Note however that the size of the array is still 0.</P>
<DIV class=refsect3><A name=id-1.6.11.7.3.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>reserved_size</P></TD>
<TD class=parameter_description>
<P>number of pointers preallocated</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.3.6></A>
<H4>Returns</H4>
<P>the new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-new-with-free-func></A>
<H3>g_ptr_array_new_with_free_func&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;*
g_ptr_array_new_with_free_func (<EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> element_free_func</CODE></EM>);</PRE>
<P>Creates a new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> with a reference count of 1 and use <EM class=parameter><CODE>element_free_func</CODE></EM> for freeing each element when the array is destroyed either via <A class=link title=g_ptr_array_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-unref"><CODE class=function>g_ptr_array_unref()</CODE></A>, when <A class=link title=g_ptr_array_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free"><CODE class=function>g_ptr_array_free()</CODE></A> is called with <EM class=parameter><CODE>free_segment</CODE></EM> set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> or when removing elements.</P>
<DIV class=refsect3><A name=id-1.6.11.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>element_free_func</P></TD>
<TD class=parameter_description>
<P>A function to free elements with destroy <EM class=parameter><CODE>array</CODE></EM> or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.4.6></A>
<H4>Returns</H4>
<P>A new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-new-full></A>
<H3>g_ptr_array_new_full&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;*
g_ptr_array_new_full (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> reserved_size</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> element_free_func</CODE></EM>);</PRE>
<P>Creates a new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> with <EM class=parameter><CODE>reserved_size</CODE></EM> pointers preallocated and a reference count of 1. This avoids frequent reallocation, if you are going to add many pointers to the array. Note however that the size of the array is still 0. It also set <EM class=parameter><CODE>element_free_func</CODE></EM> for freeing each element when the array is destroyed either via <A class=link title=g_ptr_array_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-unref"><CODE class=function>g_ptr_array_unref()</CODE></A>, when <A class=link title=g_ptr_array_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free"><CODE class=function>g_ptr_array_free()</CODE></A> is called with <EM class=parameter><CODE>free_segment</CODE></EM> set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> or when removing elements.</P>
<DIV class=refsect3><A name=id-1.6.11.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>reserved_size</P></TD>
<TD class=parameter_description>
<P>number of pointers preallocated</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>element_free_func</P></TD>
<TD class=parameter_description>
<P>A function to free elements with destroy <EM class=parameter><CODE>array</CODE></EM> or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.5.6></A>
<H4>Returns</H4>
<P>A new <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-set-free-func></A>
<H3>g_ptr_array_set_free_func&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_set_free_func (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> element_free_func</CODE></EM>);</PRE>
<P>Sets a function for freeing each element when <EM class=parameter><CODE>array</CODE></EM> is destroyed either via <A class=link title=g_ptr_array_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-unref"><CODE class=function>g_ptr_array_unref()</CODE></A>, when <A class=link title=g_ptr_array_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free"><CODE class=function>g_ptr_array_free()</CODE></A> is called with <EM class=parameter><CODE>free_segment</CODE></EM> set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> or when removing elements.</P>
<DIV class=refsect3><A name=id-1.6.11.7.6.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>A <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>element_free_func</P></TD>
<TD class=parameter_description>
<P>A function to free elements with destroy <EM class=parameter><CODE>array</CODE></EM> or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-ref></A>
<H3>g_ptr_array_ref&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;*
g_ptr_array_ref (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>);</PRE>
<P>Atomically increments the reference count of <EM class=parameter><CODE>array</CODE></EM> by one. This function is thread-safe and may be called from any thread.</P>
<DIV class=refsect3><A name=id-1.6.11.7.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.7.6></A>
<H4>Returns</H4>
<P>The passed in <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-unref></A>
<H3>g_ptr_array_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_unref (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>);</PRE>
<P>Atomically decrements the reference count of <EM class=parameter><CODE>array</CODE></EM> by one. If the reference count drops to 0, the effect is the same as calling <A class=link title=g_ptr_array_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-free"><CODE class=function>g_ptr_array_free()</CODE></A> with <EM class=parameter><CODE>free_segment</CODE></EM> set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. This function is MT-safe and may be called from any thread.</P>
<DIV class=refsect3><A name=id-1.6.11.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>A <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-add></A>
<H3>g_ptr_array_add&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_add (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Adds a pointer to the end of the pointer array. The array will grow in size automatically if necessary.</P>
<DIV class=refsect3><A name=id-1.6.11.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the pointer to add</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-insert></A>
<H3>g_ptr_array_insert&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_insert (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> index_</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Inserts an element into the pointer array at the given index. The array will grow in size automatically if necessary.</P>
<DIV class=refsect3><A name=id-1.6.11.7.10.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index to place the new element at, or -1 to append</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the pointer to add.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-remove></A>
<H3>g_ptr_array_remove&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_ptr_array_remove (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes the first occurrence of the given pointer from the pointer array. The following elements are moved down one place. If <EM class=parameter><CODE>array</CODE></EM> has a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function it is called for the removed element.</P>
<P>It returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the pointer was removed, or <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the pointer was not found.</P>
<DIV class=refsect3><A name=id-1.6.11.7.11.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the pointer to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.11.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the pointer is removed, <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the pointer is not found in the array</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-remove-index></A>
<H3>g_ptr_array_remove_index&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_ptr_array_remove_index (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> index_</CODE></EM>);</PRE>
<P>Removes the pointer at the given index from the pointer array. The following elements are moved down one place. If <EM class=parameter><CODE>array</CODE></EM> has a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function it is called for the removed element.</P>
<DIV class=refsect3><A name=id-1.6.11.7.12.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index of the pointer to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.12.6></A>
<H4>Returns</H4>
<P>the pointer which was removed</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-remove-fast></A>
<H3>g_ptr_array_remove_fast&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_ptr_array_remove_fast (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes the first occurrence of the given pointer from the pointer array. The last element in the array is used to fill in the space, so this function does not preserve the order of the array. But it is faster than <A class=link title=g_ptr_array_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove"><CODE class=function>g_ptr_array_remove()</CODE></A>. If <EM class=parameter><CODE>array</CODE></EM> has a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function it is called for the removed element.</P>
<P>It returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the pointer was removed, or <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the pointer was not found.</P>
<DIV class=refsect3><A name=id-1.6.11.7.13.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the pointer to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.13.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the pointer was found in the array</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-remove-index-fast></A>
<H3>g_ptr_array_remove_index_fast&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_ptr_array_remove_index_fast (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                               <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> index_</CODE></EM>);</PRE>
<P>Removes the pointer at the given index from the pointer array. The last element in the array is used to fill in the space, so this function does not preserve the order of the array. But it is faster than <A class=link title=g_ptr_array_remove_index&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-remove-index"><CODE class=function>g_ptr_array_remove_index()</CODE></A>. If <EM class=parameter><CODE>array</CODE></EM> has a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function it is called for the removed element.</P>
<DIV class=refsect3><A name=id-1.6.11.7.14.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index of the pointer to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.14.6></A>
<H4>Returns</H4>
<P>the pointer which was removed</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-remove-range></A>
<H3>g_ptr_array_remove_range&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=returnvalue>GPtrArray</SPAN></A>&nbsp;*
g_ptr_array_remove_range (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> index_</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> length</CODE></EM>);</PRE>
<P>Removes the given number of pointers starting at the given index from a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A>. The following elements are moved to close the gap. If <EM class=parameter><CODE>array</CODE></EM> has a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function it is called for the removed elements.</P>
<DIV class=refsect3><A name=id-1.6.11.7.15.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <EM class=parameter><CODE>GPtrArray</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index of the first pointer to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the number of pointers to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.15.6></A>
<H4>Returns</H4>
<P>the <EM class=parameter><CODE>array</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-sort></A>
<H3>g_ptr_array_sort&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_sort (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=GCompareFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareFunc"><SPAN class=type>GCompareFunc</SPAN></A> compare_func</CODE></EM>);</PRE>
<P>Sorts the array, using <EM class=parameter><CODE>compare_func</CODE></EM> which should be a <CODE class=function>qsort()</CODE>-style comparison function (returns less than zero for first arg is less than second arg, zero for equal, greater than zero if irst arg is greater than second arg).</P>
<P>Note that the comparison function for <A class=link title=g_ptr_array_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-sort"><CODE class=function>g_ptr_array_sort()</CODE></A> doesn't take the pointers from the array as arguments, it takes pointers to the pointers in the array.</P>
<P>This is guaranteed to be a stable sort since version 2.32.</P>
<DIV class=refsect3><A name=id-1.6.11.7.16.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>comparison function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-sort-with-data></A>
<H3>g_ptr_array_sort_with_data&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_sort_with_data (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> compare_func</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Like <A class=link title=g_ptr_array_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-sort"><CODE class=function>g_ptr_array_sort()</CODE></A>, but the comparison function has an extra user data argument.</P>
<P>Note that the comparison function for <A class=link title=g_ptr_array_sort_with_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#g-ptr-array-sort-with-data"><CODE class=function>g_ptr_array_sort_with_data()</CODE></A> doesn't take the pointers from the array as arguments, it takes pointers to the pointers in the array.</P>
<P>This is guaranteed to be a stable sort since version 2.32.</P>
<DIV class=refsect3><A name=id-1.6.11.7.17.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>comparison function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>compare_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-set-size></A>
<H3>g_ptr_array_set_size&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_set_size (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> length</CODE></EM>);</PRE>
<P>Sets the size of the array. When making the array larger, newly-added elements will be set to <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. When making it smaller, if <EM class=parameter><CODE>array</CODE></EM> has a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function then it will be called for the removed elements.</P>
<DIV class=refsect3><A name=id-1.6.11.7.18.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the new length of the pointer array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-index></A>
<H3>g_ptr_array_index()</H3><PRE class=programlisting>#define             g_ptr_array_index(array,index_)</PRE>
<P>Returns the pointer at the given index of the pointer array.</P>
<P>This does not perform bounds checking on the given <EM class=parameter><CODE>index_</CODE></EM> , so you are responsible for checking it against the array length.</P>
<DIV class=refsect3><A name=id-1.6.11.7.19.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index of the pointer to return</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.19.7></A>
<H4>Returns</H4>
<P>the pointer at the given index</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-free></A>
<H3>g_ptr_array_free&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>&nbsp;*
g_ptr_array_free (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> free_seg</CODE></EM>);</PRE>
<P>Frees the memory allocated for the <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A>. If <EM class=parameter><CODE>free_seg</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> it frees the memory block holding the elements as well. Pass <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if you want to free the <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> wrapper but preserve the underlying array for use elsewhere. If the reference count of <EM class=parameter><CODE>array</CODE></EM> is greater than one, the <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> wrapper is preserved but the size of <EM class=parameter><CODE>array</CODE></EM> will be set to zero.</P>
<P>If array contents point to dynamically-allocated memory, they should be freed separately if <EM class=parameter><CODE>free_seg</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> and no <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> function has been set for <EM class=parameter><CODE>array</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.11.7.20.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>free_seg</P></TD>
<TD class=parameter_description>
<P>if <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> the actual pointer array is freed as well</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.11.7.20.7></A>
<H4>Returns</H4>
<P>the pointer array if <EM class=parameter><CODE>free_seg</CODE></EM> is <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, otherwise <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. The pointer array should be freed using <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-ptr-array-foreach></A>
<H3>g_ptr_array_foreach&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_ptr_array_foreach (<EM class=parameter><CODE><A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A> *array</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=GFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GFunc"><SPAN class=type>GFunc</SPAN></A> func</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Calls a function for each element of a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.11.7.21.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>array</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call for each array element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.4</P></DIV></DIV>
<DIV class=refsect1><A name=glib-Pointer-Arrays.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GPtrArray></A>
<H3>struct GPtrArray</H3><PRE class=programlisting>struct GPtrArray {
  gpointer *pdata;
  guint	    len;
};
</PRE>
<P>Contains the public fields of a pointer array.</P>
<DIV class=refsect3><A name=id-1.6.11.8.2.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GPtrArray.pdata></A>pdata</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>points to the array of pointers, which may be moved when the array grows</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GPtrArray.len></A>len</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>number of pointers in the array</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>