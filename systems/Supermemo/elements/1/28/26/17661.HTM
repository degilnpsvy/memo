<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-GVariant.top_of_page></A>GVariant</SPAN></H2>
<P>GVariant &#8212; strongly typed value datatype</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-GVariant.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref">g_variant_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref">g_variant_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink">g_variant_ref_sink</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_is_floating&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-floating">g_variant_is_floating</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_take_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-take-ref">g_variant_take_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=returnvalue>GVariantType</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_type&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-type">g_variant_get_type</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_type_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-type-string">g_variant_get_type_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_is_of_type&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-of-type">g_variant_is_of_type</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_is_container&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-container">g_variant_is_container</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_compare&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-compare">g_variant_compare</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="enum GVariantClass" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantClass"><SPAN class=returnvalue>GVariantClass</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_classify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-classify">g_variant_classify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_check_format_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-check-format-string">g_variant_check_format_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get">g_variant_get</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_get_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-va">g_variant_get_va</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new">g_variant_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-va">g_variant_new_va</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_boolean&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-boolean">g_variant_new_boolean</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_byte&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-byte">g_variant_new_byte</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_int16&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-int16">g_variant_new_int16</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_uint16&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-uint16">g_variant_new_uint16</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_int32&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-int32">g_variant_new_int32</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_uint32&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-uint32">g_variant_new_uint32</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_int64&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-int64">g_variant_new_int64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_uint64&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-uint64">g_variant_new_uint64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_handle&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-handle">g_variant_new_handle</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_double&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-double">g_variant_new_double</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-string">g_variant_new_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_take_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-take-string">g_variant_new_take_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_printf&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-printf">g_variant_new_printf</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_object_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-object-path">g_variant_new_object_path</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_is_object_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-object-path">g_variant_is_object_path</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_signature&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-signature">g_variant_new_signature</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_is_signature&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-signature">g_variant_is_signature</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_variant&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-variant">g_variant_new_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_strv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-strv">g_variant_new_strv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_objv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-objv">g_variant_new_objv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_bytestring&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-bytestring">g_variant_new_bytestring</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_bytestring_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-bytestring-array">g_variant_new_bytestring_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_boolean&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-boolean">g_variant_get_boolean</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guchar"><SPAN class=returnvalue>guchar</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_byte&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-byte">g_variant_get_byte</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint16"><SPAN class=returnvalue>gint16</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_int16&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-int16">g_variant_get_int16</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint16"><SPAN class=returnvalue>guint16</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_uint16&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-uint16">g_variant_get_uint16</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=returnvalue>gint32</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_int32&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-int32">g_variant_get_int32</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32"><SPAN class=returnvalue>guint32</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_uint32&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-uint32">g_variant_get_uint32</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_int64&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-int64">g_variant_get_int64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=returnvalue>guint64</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_uint64&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-uint64">g_variant_get_uint64</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=returnvalue>gint32</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_handle&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-handle">g_variant_get_handle</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=returnvalue>gdouble</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_double&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-double">g_variant_get_double</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-string">g_variant_get_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_dup_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dup-string">g_variant_dup_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_variant&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-variant">g_variant_get_variant</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_variant_get_strv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-strv">g_variant_get_strv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_variant_dup_strv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dup-strv">g_variant_dup_strv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_variant_get_objv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-objv">g_variant_get_objv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_variant_dup_objv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dup-objv">g_variant_dup_objv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_bytestring&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-bytestring">g_variant_get_bytestring</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_dup_bytestring&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dup-bytestring">g_variant_dup_bytestring</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_variant_get_bytestring_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-bytestring-array">g_variant_get_bytestring_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_variant_dup_bytestring_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dup-bytestring-array">g_variant_dup_bytestring_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_maybe&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-maybe">g_variant_new_maybe</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-array">g_variant_new_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_tuple&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-tuple">g_variant_new_tuple</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_dict_entry&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-dict-entry">g_variant_new_dict_entry</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_fixed_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-fixed-array">g_variant_new_fixed_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_maybe&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-maybe">g_variant_get_maybe</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_n_children&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-n-children">g_variant_n_children</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_child_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-child-value">g_variant_get_child_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_get_child&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-child">g_variant_get_child</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_lookup_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-lookup-value">g_variant_lookup_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-lookup">g_variant_lookup</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=returnvalue>gconstpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_fixed_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-fixed-array">g_variant_get_fixed_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-size">g_variant_get_size</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=returnvalue>gconstpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_get_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-data">g_variant_get_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GBytes href="https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes"><SPAN class=returnvalue>GBytes</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_data_as_bytes&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-data-as-bytes">g_variant_get_data_as_bytes</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_store&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-store">g_variant_store</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_from_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-from-data">g_variant_new_from_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_from_bytes&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-from-bytes">g_variant_new_from_bytes</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_byteswap&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-byteswap">g_variant_byteswap</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_get_normal_form&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-normal-form">g_variant_get_normal_form</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_is_normal_form&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-normal-form">g_variant_is_normal_form</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-hash">g_variant_hash</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-equal">g_variant_equal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_print&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-print">g_variant_print</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=returnvalue>GString</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_print_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-print-string">g_variant_print_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=returnvalue>GVariantIter</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_iter_copy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-copy">g_variant_iter_copy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_iter_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-free">g_variant_iter_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_iter_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-init">g_variant_iter_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_iter_n_children&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-n-children">g_variant_iter_n_children</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=returnvalue>GVariantIter</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_iter_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-new">g_variant_iter_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_iter_next_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next-value">g_variant_iter_next_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next">g_variant_iter_next</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_iter_loop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-loop">g_variant_iter_loop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-unref">g_variant_builder_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=returnvalue>GVariantBuilder</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_builder_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-ref">g_variant_builder_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=returnvalue>GVariantBuilder</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_builder_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-new">g_variant_builder_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-init">g_variant_builder_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_clear&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-clear">g_variant_builder_clear</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_add_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-value">g_variant_builder_add_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add">g_variant_builder_add</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_add_parsed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-parsed">g_variant_builder_add_parsed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_builder_end&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-end">g_variant_builder_end</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-open">g_variant_builder_open</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_builder_close&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-close">g_variant_builder_close</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_dict_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref">g_variant_dict_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=returnvalue>GVariantDict</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_dict_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-ref">g_variant_dict_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=returnvalue>GVariantDict</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_dict_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-new">g_variant_dict_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_dict_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-init">g_variant_dict_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_dict_clear&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-clear">g_variant_dict_clear</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_dict_contains&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-contains">g_variant_dict_contains</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_dict_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-lookup">g_variant_dict_lookup</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_dict_lookup_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-lookup-value">g_variant_dict_lookup_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_dict_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-insert">g_variant_dict_insert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_variant_dict_insert_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-insert-value">g_variant_dict_insert_value</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_variant_dict_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-remove">g_variant_dict_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_dict_end&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-end">g_variant_dict_end</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_VARIANT_PARSE_ERROR href="https://developer.gnome.org/glib/stable/glib-GVariant.html#G-VARIANT-PARSE-ERROR:CAPS">G_VARIANT_PARSE_ERROR</A></TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-parse">g_variant_parse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_parsed_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-parsed-va">g_variant_new_parsed_va</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_new_parsed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-parsed">g_variant_new_parsed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_variant_parse_error_print_context&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-parse-error-print-context">g_variant_parse_error_print_context</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-GVariant.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant">GVariant</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GVariantClass" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantClass">GVariantClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter">GVariantIter</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder">GVariantBuilder</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict">GVariantDict</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GVariantParseError" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantParseError">GVariantParseError</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-GVariant.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-GVariant.description></A>
<H2>Description</H2>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a variant datatype; it stores a value along with information about the type of that value. The range of possible values is determined by the type. The type system used by <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>.</P>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances always have a type and a value (which are given at construction time). The type and value of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance can never change other than by the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> itself being destroyed. A <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> cannot contain a pointer.</P>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is reference counted using <A class=link title=g_variant_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref"><CODE class=function>g_variant_ref()</CODE></A> and <A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A>. <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> also has floating reference counts -- see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>.</P>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is completely threadsafe. A <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance can be concurrently accessed in any way from any number of threads without problems.</P>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is heavily optimised for dealing with data in serialised form. It works particularly well with data located in memory-mapped files. It can perform nearly all deserialisation operations in a small constant time, usually touching only a single memory page. Serialised <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> data can also be sent over the network.</P>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is largely compatible with D-Bus. Almost all types of <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances can be sent over D-Bus. See <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> for exceptions. (However, <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>'s serialisation format is not the same as the serialisation format of a D-Bus message body: use <A href="https://developer.gnome.org/gio/stable/GDBusMessage.html"><SPAN class=type>GDBusMessage</SPAN></A>, in the gio library, for those.)</P>
<P>For space-efficiency, the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> serialisation format does not automatically include the variant's length, type or endianness, which must either be implied from context (such as knowledge that a particular file format always contains a little-endian <A class=link title=G_VARIANT_TYPE_VARIANT href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-VARIANT:CAPS"><CODE class=literal>G_VARIANT_TYPE_VARIANT</CODE></A> which occupies the whole length of the file) or supplied out-of-band (for instance, a length, type and/or endianness indicator could be placed at the beginning of a file, network message or network stream).</P>
<P>A <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>'s size is limited mainly by any lower level operating system constraints, such as the number of bits in <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A>. For example, it is reasonable to have a 2GB file mapped into memory with <A class=link title=GMappedFile href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#GMappedFile"><SPAN class=type>GMappedFile</SPAN></A>, and call <A class=link title=g_variant_new_from_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-from-data"><CODE class=function>g_variant_new_from_data()</CODE></A> on it.</P>
<P>For convenience to C programmers, <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> features powerful varargs-based value construction and destruction. This feature is designed to be embedded in other libraries.</P>
<P>There is a Python-inspired text language for describing <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> values. <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> includes a printer for this language and a parser with type inferencing.</P>
<DIV class=refsect3><A name=id-1.6.19.6.12></A>
<H4>Memory Use</H4>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> tries to be quite efficient with respect to memory use. This section gives a rough idea of how much memory is used by the current implementation. The information here is subject to change in the future.</P>
<P>The memory allocated by <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> can be grouped into 4 broad purposes: memory for serialised data, memory for the type information cache, buffer management memory and memory for the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> structure itself.</P></DIV>
<DIV class=refsect3><A name=id-1.6.19.6.13></A>
<H4>Serialised Data Memory</H4>
<P>This is the memory that is used for storing GVariant data in serialised form. This is what would be sent over the network or what would end up on disk, not counting any indicator of the endianness, or of the length or type of the top-level variant.</P>
<P>The amount of memory required to store a boolean is 1 byte. 16, 32 and 64 bit integers and double precision floating point numbers use their "natural" size. Strings (including object path and signature strings) are stored with a nul terminator, and as such use the length of the string plus 1 byte.</P>
<P>Maybe types use no space at all to represent the null value and use the same amount of space (sometimes plus one byte) as the equivalent non-maybe-typed value to represent the non-null case.</P>
<P>Arrays use the amount of space required to store each of their members, concatenated. Additionally, if the items stored in an array are not of a fixed-size (ie: strings, other arrays, etc) then an additional framing offset is stored for each item. The size of this offset is either 1, 2 or 4 bytes depending on the overall size of the container. Additionally, extra padding bytes are added as required for alignment of child values.</P>
<P>Tuples (including dictionary entries) use the amount of space required to store each of their members, concatenated, plus one framing offset (as per arrays) for each non-fixed-sized item in the tuple, except for the last one. Additionally, extra padding bytes are added as required for alignment of child values.</P>
<P>Variants use the same amount of space as the item inside of the variant, plus 1 byte, plus the length of the type string for the item inside the variant.</P>
<P>As an example, consider a dictionary mapping strings to variants. In the case that the dictionary is empty, 0 bytes are required for the serialisation.</P>
<P>If we add an item "width" that maps to the int32 value of 500 then we will use 4 byte to store the int32 (so 6 for the variant containing it) and 6 bytes for the string. The variant must be aligned to 8 after the 6 bytes of the string, so that's 2 extra bytes. 6 (string) + 2 (padding) + 6 (variant) is 14 bytes used for the dictionary entry. An additional 1 byte is added to the array as a framing offset making a total of 15 bytes.</P>
<P>If we add another entry, "title" that maps to a nullable string that happens to have a value of null, then we use 0 bytes for the null value (and 3 bytes for the variant to contain it along with its type string) plus 6 bytes for the string. Again, we need 2 padding bytes. That makes a total of 6 + 2 + 3 = 11 bytes.</P>
<P>We now require extra padding between the two items in the array. After the 14 bytes of the first item, that's 2 bytes required. We now require 2 framing offsets for an extra two bytes. 14 + 2 + 11 + 2 = 29 bytes to encode the entire two-item dictionary.</P></DIV>
<DIV class=refsect3><A name=id-1.6.19.6.14></A>
<H4>Type Information Cache</H4>
<P>For each GVariant type that currently exists in the program a type information structure is kept in the type information cache. The type information structure is required for rapid deserialisation.</P>
<P>Continuing with the above example, if a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> exists with the type "a{sv}" then a type information struct will exist for "a{sv}", "{sv}", "s", and "v". Multiple uses of the same type will share the same type information. Additionally, all single-digit types are stored in read-only static memory and do not contribute to the writable memory footprint of a program using <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>Aside from the type information structures stored in read-only memory, there are two forms of type information. One is used for container types where there is a single element type: arrays and maybe types. The other is used for container types where there are multiple element types: tuples and dictionary entries.</P>
<P>Array type info structures are 6 * sizeof (void *), plus the memory required to store the type string itself. This means that on 32-bit systems, the cache entry for "a{sv}" would require 30 bytes of memory (plus malloc overhead).</P>
<P>Tuple type info structures are 6 * sizeof (void *), plus 4 * sizeof (void *) for each item in the tuple, plus the memory required to store the type string itself. A 2-item tuple, for example, would have a type information structure that consumed writable memory in the size of 14 * sizeof (void *) (plus type string) This means that on 32-bit systems, the cache entry for "{sv}" would require 61 bytes of memory (plus malloc overhead).</P>
<P>This means that in total, for our "a{sv}" example, 91 bytes of type information would be allocated.</P>
<P>The type information cache, additionally, uses a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> to store and lookup the cached items and stores a pointer to this hash table in static storage. The hash table is freed when there are zero items in the type cache.</P>
<P>Although these sizes may seem large it is important to remember that a program will probably only have a very small number of different types of values in it and that only one type information structure is required for many different values of the same type.</P></DIV>
<DIV class=refsect3><A name=id-1.6.19.6.15></A>
<H4>Buffer Management Memory</H4>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> uses an internal buffer management structure to deal with the various different possible sources of serialised data that it uses. The buffer is responsible for ensuring that the correct call is made when the data is no longer in use by <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This may involve a <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> or a <A class=link title=g_slice_free() href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html#g-slice-free"><CODE class=function>g_slice_free()</CODE></A> or even <A class=link title=g_mapped_file_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-mapped-file-unref"><CODE class=function>g_mapped_file_unref()</CODE></A>.</P>
<P>One buffer management structure is used for each chunk of serialised data. The size of the buffer management structure is 4 * (void *). On 32-bit systems, that's 16 bytes.</P></DIV>
<DIV class=refsect3><A name=id-1.6.19.6.16></A>
<H4>GVariant structure</H4>
<P>The size of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> structure is 6 * (void *). On 32-bit systems, that's 24 bytes.</P>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> structures only exist if they are explicitly created with API calls. For example, if a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is constructed out of serialised data for the example given above (with the dictionary) then although there are 9 individual values that comprise the entire dictionary (two keys, two values, two variants containing the values, two dictionary entries, plus the dictionary itself), only 1 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance exists -- the one referring to the dictionary.</P>
<P>If calls are made to start accessing the other values then <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances will exist for those values only for as long as they are in use (ie: until you call <A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A>). The type information is shared. The serialised data and the buffer management structure for that serialised data is shared by the child.</P></DIV>
<DIV class=refsect3><A name=id-1.6.19.6.17></A>
<H4>Summary</H4>
<P>To put the entire example together, for our dictionary mapping strings to variants (with two entries, as given above), we are using 91 bytes of memory for type information, 29 byes of memory for the serialised data, 16 bytes for buffer management and 24 bytes for the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance, or a total of 160 bytes, plus malloc overhead. If we were to use <A class=link title=g_variant_get_child_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-child-value"><CODE class=function>g_variant_get_child_value()</CODE></A> to access the two dictionary entries, we would use an additional 48 bytes. If we were to have other dictionaries of the same type, we would use more memory for the serialised data and buffer management for those dictionaries, but the type information would be shared.</P></DIV></DIV>
<DIV class=refsect1><A name=glib-GVariant.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-variant-unref></A>
<H3>g_variant_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_unref (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Decreases the reference count of <EM class=parameter><CODE>value</CODE></EM> . When its reference count drops to 0, the memory used by the variant is freed.</P>
<DIV class=refsect3><A name=id-1.6.19.7.2.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-ref></A>
<H3>g_variant_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_ref (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Increases the reference count of <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.3.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.3.6></A>
<H4>Returns</H4>
<P>the same <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-ref-sink></A>
<H3>g_variant_ref_sink&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_ref_sink (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> uses a floating reference count system. All functions with names starting with <CODE class=literal>g_variant_new_</CODE> return floating references.</P>
<P>Calling <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> on a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with a floating reference will convert the floating reference into a full reference. Calling <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> on a non-floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> results in an additional normal reference being added.</P>
<P>In other words, if the <EM class=parameter><CODE>value</CODE></EM> is floating, then this call "assumes ownership" of the floating reference, converting it to a normal reference. If the <EM class=parameter><CODE>value</CODE></EM> is not floating, then this call adds a new normal reference increasing the reference count by one.</P>
<P>All calls that result in a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance being inserted into a container will call <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> on the instance. This means that if the value was just created (and has only its floating reference) then the container will assume sole ownership of the value at that point and the caller will not need to unreference it. This makes certain common styles of programming much easier while still maintaining normal refcounting semantics in situations where values are not floating.</P>
<DIV class=refsect3><A name=id-1.6.19.7.4.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.4.9></A>
<H4>Returns</H4>
<P>the same <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-is-floating></A>
<H3>g_variant_is_floating&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_is_floating (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Checks whether <EM class=parameter><CODE>value</CODE></EM> has a floating reference count.</P>
<P>This function should only ever be used to assert that a given variant is or is not floating, or for debug purposes. To acquire a reference to a variant that might be floating, always use <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> or <A class=link title=g_variant_take_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-take-ref"><CODE class=function>g_variant_take_ref()</CODE></A>.</P>
<P>See <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> for more information about floating reference counts.</P>
<DIV class=refsect3><A name=id-1.6.19.7.5.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.5.8></A>
<H4>Returns</H4>
<P>whether <EM class=parameter><CODE>value</CODE></EM> is floating</P>
<P></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-take-ref></A>
<H3>g_variant_take_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_take_ref (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>If <EM class=parameter><CODE>value</CODE></EM> is floating, sink it. Otherwise, do nothing.</P>
<P>Typically you want to use <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> in order to automatically do the correct thing with respect to floating or non-floating references, but there is one specific scenario where this function is helpful.</P>
<P>The situation where this function is helpful is when creating an API that allows the user to provide a callback function that returns a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. We certainly want to allow the user the flexibility to return a non-floating reference from this callback (for the case where the value that is being returned already exists).</P>
<P>At the same time, the style of the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> API makes it likely that for newly-created <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances, the user can be saved some typing if they are allowed to return a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with a floating reference.</P>
<P>Using this function on the return value of the user's callback allows the user to do whichever is more convenient for them. The caller will alway receives exactly one full reference to the value: either the one that was returned in the first place, or a floating reference that has been converted to a full reference.</P>
<P>This function has an odd interaction when combined with <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> running at the same time in another thread on the same <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. If <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> runs first then the result will be that the floating reference is converted to a hard reference. If <A class=link title=g_variant_take_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-take-ref"><CODE class=function>g_variant_take_ref()</CODE></A> runs first then the result will be that the floating reference is converted to a hard reference and an additional reference on top of that one is added. It is best to avoid this situation.</P>
<DIV class=refsect3><A name=id-1.6.19.7.6.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.6.11></A>
<H4>Returns</H4>
<P>the same <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-type></A>
<H3>g_variant_get_type&nbsp;()</H3><PRE class=programlisting>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=returnvalue>GVariantType</SPAN></A>&nbsp;*
g_variant_get_type (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Determines the type of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>The return value is valid for the lifetime of <EM class=parameter><CODE>value</CODE></EM> and must not be freed.</P>
<DIV class=refsect3><A name=id-1.6.19.7.7.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.7.7></A>
<H4>Returns</H4>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-type-string></A>
<H3>g_variant_get_type_string&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_get_type_string (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the type string of <EM class=parameter><CODE>value</CODE></EM> . Unlike the result of calling <A class=link title=g_variant_type_peek_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#g-variant-type-peek-string"><CODE class=function>g_variant_type_peek_string()</CODE></A>, this string is nul-terminated. This string belongs to <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> and must not be freed.</P>
<DIV class=refsect3><A name=id-1.6.19.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.8.6></A>
<H4>Returns</H4>
<P>the type string for the type of <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-is-of-type></A>
<H3>g_variant_is_of_type&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_is_of_type (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                      <EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>);</PRE>
<P>Checks if a value has a type matching the provided type.</P>
<DIV class=refsect3><A name=id-1.6.19.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.9.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the type of <EM class=parameter><CODE>value</CODE></EM> matches <EM class=parameter><CODE>type</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-is-container></A>
<H3>g_variant_is_container&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_is_container (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Checks if <EM class=parameter><CODE>value</CODE></EM> is a container.</P>
<DIV class=refsect3><A name=id-1.6.19.7.10.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.10.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>value</CODE></EM> is a container</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-compare></A>
<H3>g_variant_compare&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_variant_compare (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> one</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> two</CODE></EM>);</PRE>
<P>Compares <EM class=parameter><CODE>one</CODE></EM> and <EM class=parameter><CODE>two</CODE></EM> .</P>
<P>The types of <EM class=parameter><CODE>one</CODE></EM> and <EM class=parameter><CODE>two</CODE></EM> are <A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> only to allow use of this function with <A class=link title=GTree href="https://developer.gnome.org/glib/stable/glib-Balanced-Binary-Trees.html#GTree"><SPAN class=type>GTree</SPAN></A>, <A class=link title="struct GPtrArray" href="https://developer.gnome.org/glib/stable/glib-Pointer-Arrays.html#GPtrArray"><SPAN class=type>GPtrArray</SPAN></A>, etc. They must each be a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>Comparison is only defined for basic types (ie: booleans, numbers, strings). For booleans, <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> is less than <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. Numbers are ordered in the usual way. Strings are in ASCII lexographical order.</P>
<P>It is a programmer error to attempt to compare container values or two values that have types that are not exactly equal. For example, you cannot compare a 32-bit signed integer with a 32-bit unsigned integer. Also note that this function is not particularly well-behaved when it comes to comparison of doubles; in particular, the handling of incomparable values (ie: NaN) is undefined.</P>
<P>If you only require an equality comparison, <A class=link title=g_variant_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-equal"><CODE class=function>g_variant_equal()</CODE></A> is more general.</P>
<DIV class=refsect3><A name=id-1.6.19.7.11.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>one</P></TD>
<TD class=parameter_description>
<P>a basic-typed <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GVariant]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>two</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance of the same type. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GVariant]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.11.10></A>
<H4>Returns</H4>
<P>negative value if a &lt; b; zero if a = b; positive value if a &gt; b.</P>
<P></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-classify></A>
<H3>g_variant_classify&nbsp;()</H3><PRE class=programlisting><A class=link title="enum GVariantClass" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantClass"><SPAN class=returnvalue>GVariantClass</SPAN></A>
g_variant_classify (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Classifies <EM class=parameter><CODE>value</CODE></EM> according to its top-level type.</P>
<DIV class=refsect3><A name=id-1.6.19.7.12.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.12.6></A>
<H4>Returns</H4>
<P>the <A class=link title="enum GVariantClass" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantClass"><SPAN class=type>GVariantClass</SPAN></A> of <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-check-format-string></A>
<H3>g_variant_check_format_string&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_check_format_string (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                               <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                               <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> copy_only</CODE></EM>);</PRE>
<P>Checks if calling <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A> with <EM class=parameter><CODE>format_string</CODE></EM> on <EM class=parameter><CODE>value</CODE></EM> would be valid from a type-compatibility standpoint. <EM class=parameter><CODE>format_string</CODE></EM> is assumed to be a valid format string (from a syntactic standpoint).</P>
<P>If <EM class=parameter><CODE>copy_only</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> then this function additionally checks that it would be safe to call <A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A> on <EM class=parameter><CODE>value</CODE></EM> immediately after the call to <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A> without invalidating the result. This is only possible if deep copies are made (ie: there are no pointers to the data inside of the soon-to-be-freed <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance). If this check fails then a <A class=link title=g_critical() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-critical"><CODE class=function>g_critical()</CODE></A> is printed and <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> is returned.</P>
<P>This function is meant to be used by functions that wish to provide varargs accessors to <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> values of uncertain values (eg: <A class=link title=g_variant_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-lookup"><CODE class=function>g_variant_lookup()</CODE></A> or <A href="https://developer.gnome.org/gio/stable/GMenuModel.html#g-menu-model-get-item-attribute"><CODE class=function>g_menu_model_get_item_attribute()</CODE></A>).</P>
<DIV class=refsect3><A name=id-1.6.19.7.13.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a valid <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>copy_only</P></TD>
<TD class=parameter_description>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> to ensure the format string makes deep copies</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.13.8></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>format_string</CODE></EM> is safe to use</P>
<P></P></DIV>
<P class=since>Since 2.34</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get></A>
<H3>g_variant_get&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_get (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
               <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
               <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Deconstructs a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<P>Think of this function as an analogue to <CODE class=function>scanf()</CODE>.</P>
<P>The arguments that are expected by this function are entirely determined by <EM class=parameter><CODE>format_string</CODE></EM> . <EM class=parameter><CODE>format_string</CODE></EM> also restricts the permissible types of <EM class=parameter><CODE>value</CODE></EM> . It is an error to give a value with an incompatible type. See the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html">GVariant format strings</A>. Please note that the syntax of the format string is very likely to be extended in the future.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed, see the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.14.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments, as per <EM class=parameter><CODE>format_string</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-va></A>
<H3>g_variant_get_va&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_get_va (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **endptr</CODE></EM>,
                  <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> *app</CODE></EM>);</PRE>
<P>This function is intended to be used by libraries based on <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> that want to provide <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A>-like functionality to their users.</P>
<P>The API is more general than <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A> to allow a wider range of possible uses.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> must still point to a valid format string, but it only need to be nul-terminated if <EM class=parameter><CODE>endptr</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If <EM class=parameter><CODE>endptr</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then it is updated to point to the first character past the end of the format string.</P>
<P><EM class=parameter><CODE>app</CODE></EM> is a pointer to a <SPAN class=type>va_list</SPAN>. The arguments, according to <EM class=parameter><CODE>format_string</CODE></EM> , are collected from this <SPAN class=type>va_list</SPAN> and the list is left pointing to the argument following the last.</P>
<P>These two generalisations allow mixing of multiple calls to <A class=link title=g_variant_new_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-va"><CODE class=function>g_variant_new_va()</CODE></A> and <A class=link title=g_variant_get_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-va"><CODE class=function>g_variant_get_va()</CODE></A> within a single actual varargs call by the user.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed, see the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.15.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a string that is prefixed with a format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>endptr</P></TD>
<TD class=parameter_description>
<P>location to store the end pointer, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Default parameter value (for in case the shadows-to function has less parameters)."><SPAN class=acronym>default</SPAN></ACRONYM> NULL]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>app</P></TD>
<TD class=parameter_description>
<P>a pointer to a <SPAN class=type>va_list</SPAN></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new></A>
<H3>g_variant_new&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
               <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<P>Think of this function as an analogue to <A class=link title=g_strdup_printf&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strdup-printf"><CODE class=function>g_strdup_printf()</CODE></A>.</P>
<P>The type of the created instance and the arguments that are expected by this function are determined by <EM class=parameter><CODE>format_string</CODE></EM> . See the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html">GVariant format strings</A>. Please note that the syntax of the format string is very likely to be extended in the future.</P>
<P>The first character of the format string must not be '*' '?' '@' or 'r'; in essence, a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> must always be constructed by this function (and not merely passed through it unmodified).</P>
<P>Note that the arguments must be of the correct width for their types specified in <EM class=parameter><CODE>format_string</CODE></EM> . This can be achieved by casting them. See the <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-varargs">GVariant varargs documentation</A>.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8</PRE></TD>
<TD class=listing_code><PRE class=programlisting>MyFlags some_flags <SPAN class="gtkdoc opt">=</SPAN> FLAG_ONE <SPAN class="gtkdoc opt">|</SPAN> FLAG_TWO<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">const</SPAN> gchar <SPAN class="gtkdoc opt">*</SPAN>some_strings<SPAN class="gtkdoc opt">[] = {</SPAN> <SPAN class=string>"a"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"b"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"c"</SPAN><SPAN class="gtkdoc opt">,</SPAN> NULL <SPAN class="gtkdoc opt">};</SPAN>
GVariant <SPAN class="gtkdoc opt">*</SPAN>new_variant<SPAN class="gtkdoc opt">;</SPAN>

new_variant <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new">g_variant_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"(t^as)"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                             <SPAN class="gtkdoc opt">/&lt;!-- --&gt;*</SPAN> This cast is required<SPAN class="gtkdoc opt">. *&lt;!-- --&gt;/</SPAN>
                             <SPAN class="gtkdoc opt">(</SPAN>guint64<SPAN class="gtkdoc opt">)</SPAN> some_flags<SPAN class="gtkdoc opt">,</SPAN>
                             some_strings<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.19.7.16.11></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments, as per <EM class=parameter><CODE>format_string</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.16.12></A>
<H4>Returns</H4>
<P>a new floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-va></A>
<H3>g_variant_new_va&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_va (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **endptr</CODE></EM>,
                  <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> *app</CODE></EM>);</PRE>
<P>This function is intended to be used by libraries based on <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> that want to provide <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A>-like functionality to their users.</P>
<P>The API is more general than <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A> to allow a wider range of possible uses.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> must still point to a valid format string, but it only needs to be nul-terminated if <EM class=parameter><CODE>endptr</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If <EM class=parameter><CODE>endptr</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then it is updated to point to the first character past the end of the format string.</P>
<P><EM class=parameter><CODE>app</CODE></EM> is a pointer to a <SPAN class=type>va_list</SPAN>. The arguments, according to <EM class=parameter><CODE>format_string</CODE></EM> , are collected from this <SPAN class=type>va_list</SPAN> and the list is left pointing to the argument following the last.</P>
<P>Note that the arguments in <EM class=parameter><CODE>app</CODE></EM> must be of the correct width for their types specified in <EM class=parameter><CODE>format_string</CODE></EM> when collected into the <SPAN class=type>va_list</SPAN>. See the [GVariant varargs documentation][gvariant-varargs.</P>
<P>These two generalisations allow mixing of multiple calls to <A class=link title=g_variant_new_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-va"><CODE class=function>g_variant_new_va()</CODE></A> and <A class=link title=g_variant_get_va&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-va"><CODE class=function>g_variant_get_va()</CODE></A> within a single actual varargs call by the user.</P>
<P>The return value will be floating if it was a newly created GVariant instance (for example, if the format string was "(ii)"). In the case that the format_string was '*', '?', 'r', or a format starting with '@' then the collected <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> pointer will be returned unmodified, without adding any additional references.</P>
<P>In order to behave correctly in all cases it is necessary for the calling function to <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> the return result before returning control to the user that originally provided the pointer. At this point, the caller will have their own full reference to the result. This can also be done by adding the result to a container, or by passing it to another <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A> call.</P>
<DIV class=refsect3><A name=id-1.6.19.7.17.12></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a string that is prefixed with a format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>endptr</P></TD>
<TD class=parameter_description>
<P>location to store the end pointer, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Default parameter value (for in case the shadows-to function has less parameters)."><SPAN class=acronym>default</SPAN></ACRONYM> NULL]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>app</P></TD>
<TD class=parameter_description>
<P>a pointer to a <SPAN class=type>va_list</SPAN></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.17.13></A>
<H4>Returns</H4>
<P>a new, usually floating, <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-boolean></A>
<H3>g_variant_new_boolean&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_boolean (<EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new boolean <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance -- either <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> or <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.18.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.18.6></A>
<H4>Returns</H4>
<P>a floating reference to a new boolean <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-byte></A>
<H3>g_variant_new_byte&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_byte (<EM class=parameter><CODE><A class=link title=guchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guchar"><SPAN class=type>guchar</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new byte <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.19.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=guint8 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint8"><SPAN class=type>guint8</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.19.6></A>
<H4>Returns</H4>
<P>a floating reference to a new byte <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-int16></A>
<H3>g_variant_new_int16&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_int16 (<EM class=parameter><CODE><A class=link title=gint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint16"><SPAN class=type>gint16</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new int16 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.20.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint16"><SPAN class=type>gint16</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.20.6></A>
<H4>Returns</H4>
<P>a floating reference to a new int16 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-uint16></A>
<H3>g_variant_new_uint16&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_uint16 (<EM class=parameter><CODE><A class=link title=guint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new uint16 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.21.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=guint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.21.6></A>
<H4>Returns</H4>
<P>a floating reference to a new uint16 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-int32></A>
<H3>g_variant_new_int32&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_int32 (<EM class=parameter><CODE><A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=type>gint32</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new int32 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.22.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=type>gint32</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.22.6></A>
<H4>Returns</H4>
<P>a floating reference to a new int32 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-uint32></A>
<H3>g_variant_new_uint32&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_uint32 (<EM class=parameter><CODE><A class=link title=guint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32"><SPAN class=type>guint32</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new uint32 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.23.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=guint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32"><SPAN class=type>guint32</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.23.6></A>
<H4>Returns</H4>
<P>a floating reference to a new uint32 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-int64></A>
<H3>g_variant_new_int64&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_int64 (<EM class=parameter><CODE><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new int64 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.24.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.24.6></A>
<H4>Returns</H4>
<P>a floating reference to a new int64 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-uint64></A>
<H3>g_variant_new_uint64&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_uint64 (<EM class=parameter><CODE><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new uint64 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.25.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.25.6></A>
<H4>Returns</H4>
<P>a floating reference to a new uint64 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-handle></A>
<H3>g_variant_new_handle&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_handle (<EM class=parameter><CODE><A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=type>gint32</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new handle <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<P>By convention, handles are indexes into an array of file descriptors that are sent alongside a D-Bus message. If you're not interacting with D-Bus, you probably don't need them.</P>
<DIV class=refsect3><A name=id-1.6.19.7.26.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=type>gint32</SPAN></A> value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.26.7></A>
<H4>Returns</H4>
<P>a floating reference to a new handle <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-double></A>
<H3>g_variant_new_double&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_double (<EM class=parameter><CODE><A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> value</CODE></EM>);</PRE>
<P>Creates a new double <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<DIV class=refsect3><A name=id-1.6.19.7.27.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> floating point value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.27.6></A>
<H4>Returns</H4>
<P>a floating reference to a new double <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-string></A>
<H3>g_variant_new_string&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_string (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *string</CODE></EM>);</PRE>
<P>Creates a string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with the contents of <EM class=parameter><CODE>string</CODE></EM> .</P>
<P><EM class=parameter><CODE>string</CODE></EM> must be valid utf8.</P>
<DIV class=refsect3><A name=id-1.6.19.7.28.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a normal utf8 nul-terminated string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.28.7></A>
<H4>Returns</H4>
<P>a floating reference to a new string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-take-string></A>
<H3>g_variant_new_take_string&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_take_string (<EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *string</CODE></EM>);</PRE>
<P>Creates a string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with the contents of <EM class=parameter><CODE>string</CODE></EM> .</P>
<P><EM class=parameter><CODE>string</CODE></EM> must be valid utf8.</P>
<P>This function consumes <EM class=parameter><CODE>string</CODE></EM> . <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> will be called on <EM class=parameter><CODE>string</CODE></EM> when it is no longer required.</P>
<P>You must not modify or access <EM class=parameter><CODE>string</CODE></EM> in any other way after passing it to this function. It is even possible that <EM class=parameter><CODE>string</CODE></EM> is immediately freed.</P>
<DIV class=refsect3><A name=id-1.6.19.7.29.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a normal utf8 nul-terminated string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.29.9></A>
<H4>Returns</H4>
<P>a floating reference to a new string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.38</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-printf></A>
<H3>g_variant_new_printf&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_printf (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                      <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a string-type GVariant using printf formatting.</P>
<P>This is similar to calling <A class=link title=g_strdup_printf&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strdup-printf"><CODE class=function>g_strdup_printf()</CODE></A> and then <A class=link title=g_variant_new_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-string"><CODE class=function>g_variant_new_string()</CODE></A> but it saves a temporary variable and an unnecessary copy.</P>
<DIV class=refsect3><A name=id-1.6.19.7.30.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a printf-style format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments for <EM class=parameter><CODE>format_string</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.30.7></A>
<H4>Returns</H4>
<P>a floating reference to a new string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.38</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-object-path></A>
<H3>g_variant_new_object_path&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_object_path (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *object_path</CODE></EM>);</PRE>
<P>Creates a D-Bus object path <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with the contents of <EM class=parameter><CODE>string</CODE></EM> . <EM class=parameter><CODE>string</CODE></EM> must be a valid D-Bus object path. Use <A class=link title=g_variant_is_object_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-object-path"><CODE class=function>g_variant_is_object_path()</CODE></A> if you're not sure.</P>
<DIV class=refsect3><A name=id-1.6.19.7.31.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_path</P></TD>
<TD class=parameter_description>
<P>a normal C nul-terminated string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.31.6></A>
<H4>Returns</H4>
<P>a floating reference to a new object path <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-is-object-path></A>
<H3>g_variant_is_object_path&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_is_object_path (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *string</CODE></EM>);</PRE>
<P>Determines if a given string is a valid D-Bus object path. You should ensure that a string is a valid D-Bus object path before passing it to <A class=link title=g_variant_new_object_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-object-path"><CODE class=function>g_variant_new_object_path()</CODE></A>.</P>
<P>A valid object path starts with '/' followed by zero or more sequences of characters separated by '/' characters. Each sequence must contain only the characters "A-Z[0-9]_". No sequence (including the one following the final '/' character) may be empty.</P>
<DIV class=refsect3><A name=id-1.6.19.7.32.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a normal C nul-terminated string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.32.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>string</CODE></EM> is a D-Bus object path</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-signature></A>
<H3>g_variant_new_signature&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_signature (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signature</CODE></EM>);</PRE>
<P>Creates a D-Bus type signature <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with the contents of <EM class=parameter><CODE>string</CODE></EM> . <EM class=parameter><CODE>string</CODE></EM> must be a valid D-Bus type signature. Use <A class=link title=g_variant_is_signature&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-signature"><CODE class=function>g_variant_is_signature()</CODE></A> if you're not sure.</P>
<DIV class=refsect3><A name=id-1.6.19.7.33.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>signature</P></TD>
<TD class=parameter_description>
<P>a normal C nul-terminated string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.33.6></A>
<H4>Returns</H4>
<P>a floating reference to a new signature <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-is-signature></A>
<H3>g_variant_is_signature&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_is_signature (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *string</CODE></EM>);</PRE>
<P>Determines if a given string is a valid D-Bus type signature. You should ensure that a string is a valid D-Bus type signature before passing it to <A class=link title=g_variant_new_signature&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-signature"><CODE class=function>g_variant_new_signature()</CODE></A>.</P>
<P>D-Bus type signatures consist of zero or more definite <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> strings in sequence.</P>
<DIV class=refsect3><A name=id-1.6.19.7.34.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a normal C nul-terminated string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.34.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>string</CODE></EM> is a D-Bus type signature</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-variant></A>
<H3>g_variant_new_variant&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_variant (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Boxes <EM class=parameter><CODE>value</CODE></EM> . The result is a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance representing a variant containing the original value.</P>
<P>If <EM class=parameter><CODE>child</CODE></EM> is a floating reference (see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>), the new instance takes ownership of <EM class=parameter><CODE>child</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.35.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.35.7></A>
<H4>Returns</H4>
<P>a floating reference to a new variant <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-strv></A>
<H3>g_variant_new_strv&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_strv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> * const *strv</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> length</CODE></EM>);</PRE>
<P>Constructs an array of strings <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> from the given array of strings.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is -1 then <EM class=parameter><CODE>strv</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<DIV class=refsect3><A name=id-1.6.19.7.36.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>strv</P></TD>
<TD class=parameter_description>
<P>an array of strings. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> utf8]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of <EM class=parameter><CODE>strv</CODE></EM> , or -1</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.36.7></A>
<H4>Returns</H4>
<P>a new floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-objv></A>
<H3>g_variant_new_objv&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_objv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> * const *strv</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> length</CODE></EM>);</PRE>
<P>Constructs an array of object paths <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> from the given array of strings.</P>
<P>Each string must be a valid <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> object path; see <A class=link title=g_variant_is_object_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-object-path"><CODE class=function>g_variant_is_object_path()</CODE></A>.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is -1 then <EM class=parameter><CODE>strv</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<DIV class=refsect3><A name=id-1.6.19.7.37.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>strv</P></TD>
<TD class=parameter_description>
<P>an array of strings. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> utf8]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of <EM class=parameter><CODE>strv</CODE></EM> , or -1</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.37.8></A>
<H4>Returns</H4>
<P>a new floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-bytestring></A>
<H3>g_variant_new_bytestring&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_bytestring (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *string</CODE></EM>);</PRE>
<P>Creates an array-of-bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with the contents of <EM class=parameter><CODE>string</CODE></EM> . This function is just like <A class=link title=g_variant_new_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-string"><CODE class=function>g_variant_new_string()</CODE></A> except that the string need not be valid utf8.</P>
<P>The nul terminator character at the end of the string is stored in the array.</P>
<DIV class=refsect3><A name=id-1.6.19.7.38.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a normal nul-terminated string in no particular encoding. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> guint8]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.38.7></A>
<H4>Returns</H4>
<P>a floating reference to a new bytestring <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-bytestring-array></A>
<H3>g_variant_new_bytestring_array&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_bytestring_array (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> * const *strv</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> length</CODE></EM>);</PRE>
<P>Constructs an array of bytestring <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> from the given array of strings.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is -1 then <EM class=parameter><CODE>strv</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<DIV class=refsect3><A name=id-1.6.19.7.39.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>strv</P></TD>
<TD class=parameter_description>
<P>an array of strings. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of <EM class=parameter><CODE>strv</CODE></EM> , or -1</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.39.7></A>
<H4>Returns</H4>
<P>a new floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-boolean></A>
<H3>g_variant_get_boolean&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_get_boolean (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the boolean value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_BOOLEAN href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_VARIANT_TYPE_BOOLEAN</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.40.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a boolean <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.40.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> or <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-byte></A>
<H3>g_variant_get_byte&nbsp;()</H3><PRE class=programlisting><A class=link title=guchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guchar"><SPAN class=returnvalue>guchar</SPAN></A>
g_variant_get_byte (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the byte value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_BYTE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-BYTE:CAPS"><CODE class=literal>G_VARIANT_TYPE_BYTE</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.41.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a byte <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.41.7></A>
<H4>Returns</H4>
<P>a <A class=link title=guchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guchar"><SPAN class=type>guchar</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-int16></A>
<H3>g_variant_get_int16&nbsp;()</H3><PRE class=programlisting><A class=link title=gint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint16"><SPAN class=returnvalue>gint16</SPAN></A>
g_variant_get_int16 (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 16-bit signed integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_INT16 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-INT16:CAPS"><CODE class=literal>G_VARIANT_TYPE_INT16</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.42.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a int16 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.42.7></A>
<H4>Returns</H4>
<P>a <A class=link title=gint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint16"><SPAN class=type>gint16</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-uint16></A>
<H3>g_variant_get_uint16&nbsp;()</H3><PRE class=programlisting><A class=link title=guint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint16"><SPAN class=returnvalue>guint16</SPAN></A>
g_variant_get_uint16 (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 16-bit unsigned integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_UINT16 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-UINT16:CAPS"><CODE class=literal>G_VARIANT_TYPE_UINT16</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.43.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a uint16 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.43.7></A>
<H4>Returns</H4>
<P>a <A class=link title=guint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint16"><SPAN class=type>guint16</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-int32></A>
<H3>g_variant_get_int32&nbsp;()</H3><PRE class=programlisting><A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=returnvalue>gint32</SPAN></A>
g_variant_get_int32 (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 32-bit signed integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_INT32 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-INT32:CAPS"><CODE class=literal>G_VARIANT_TYPE_INT32</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.44.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a int32 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.44.7></A>
<H4>Returns</H4>
<P>a <A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=type>gint32</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-uint32></A>
<H3>g_variant_get_uint32&nbsp;()</H3><PRE class=programlisting><A class=link title=guint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32"><SPAN class=returnvalue>guint32</SPAN></A>
g_variant_get_uint32 (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 32-bit unsigned integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_UINT32 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-UINT32:CAPS"><CODE class=literal>G_VARIANT_TYPE_UINT32</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.45.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a uint32 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.45.7></A>
<H4>Returns</H4>
<P>a <A class=link title=guint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32"><SPAN class=type>guint32</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-int64></A>
<H3>g_variant_get_int64&nbsp;()</H3><PRE class=programlisting><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A>
g_variant_get_int64 (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 64-bit signed integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_INT64 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-INT64:CAPS"><CODE class=literal>G_VARIANT_TYPE_INT64</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.46.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a int64 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.46.7></A>
<H4>Returns</H4>
<P>a <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-uint64></A>
<H3>g_variant_get_uint64&nbsp;()</H3><PRE class=programlisting><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=returnvalue>guint64</SPAN></A>
g_variant_get_uint64 (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 64-bit unsigned integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_UINT64 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-UINT64:CAPS"><CODE class=literal>G_VARIANT_TYPE_UINT64</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.47.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a uint64 <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.47.7></A>
<H4>Returns</H4>
<P>a <A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-handle></A>
<H3>g_variant_get_handle&nbsp;()</H3><PRE class=programlisting><A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=returnvalue>gint32</SPAN></A>
g_variant_get_handle (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the 32-bit signed integer value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_HANDLE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-HANDLE:CAPS"><CODE class=literal>G_VARIANT_TYPE_HANDLE</CODE></A>.</P>
<P>By convention, handles are indexes into an array of file descriptors that are sent alongside a D-Bus message. If you're not interacting with D-Bus, you probably don't need them.</P>
<DIV class=refsect3><A name=id-1.6.19.7.48.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a handle <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.48.8></A>
<H4>Returns</H4>
<P>a <A class=link title=gint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint32"><SPAN class=type>gint32</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-double></A>
<H3>g_variant_get_double&nbsp;()</H3><PRE class=programlisting><A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=returnvalue>gdouble</SPAN></A>
g_variant_get_double (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the double precision floating point value of <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than <A class=link title=G_VARIANT_TYPE_DOUBLE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-DOUBLE:CAPS"><CODE class=literal>G_VARIANT_TYPE_DOUBLE</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.49.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a double <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.49.7></A>
<H4>Returns</H4>
<P>a <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-string></A>
<H3>g_variant_get_string&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_get_string (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Returns the string value of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance with a string type. This includes the types <A class=link title=G_VARIANT_TYPE_STRING href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-STRING:CAPS"><CODE class=literal>G_VARIANT_TYPE_STRING</CODE></A>, <A class=link title=G_VARIANT_TYPE_OBJECT_PATH href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-OBJECT-PATH:CAPS"><CODE class=literal>G_VARIANT_TYPE_OBJECT_PATH</CODE></A> and <A class=link title=G_VARIANT_TYPE_SIGNATURE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-SIGNATURE:CAPS"><CODE class=literal>G_VARIANT_TYPE_SIGNATURE</CODE></A>.</P>
<P>The string will always be utf8 encoded.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the length of the string (in bytes) is returned there. For trusted values, this information is already known. For untrusted values, a <CODE class=function>strlen()</CODE> will be performed.</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> of any type other than those three.</P>
<P>The return value remains valid as long as <EM class=parameter><CODE>value</CODE></EM> exists.</P>
<DIV class=refsect3><A name=id-1.6.19.7.50.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A>, to store the length. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Default parameter value (for in case the shadows-to function has less parameters)."><SPAN class=acronym>default</SPAN></ACRONYM> 0][<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.50.10></A>
<H4>Returns</H4>
<P>the constant string, utf8 encoded. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dup-string></A>
<H3>g_variant_dup_string&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_dup_string (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Similar to <A class=link title=g_variant_get_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-string"><CODE class=function>g_variant_get_string()</CODE></A> except that instead of returning a constant string, the string is duplicated.</P>
<P>The string will always be utf8 encoded.</P>
<P>The return value must be freed using <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.51.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a string <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A>, to store the length. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.51.8></A>
<H4>Returns</H4>
<P>a newly allocated string, utf8 encoded. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-variant></A>
<H3>g_variant_get_variant&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_get_variant (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Unboxes <EM class=parameter><CODE>value</CODE></EM> . The result is the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance that was contained in <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.52.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a variant <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.52.6></A>
<H4>Returns</H4>
<P>the item contained in the variant. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-strv></A>
<H3>g_variant_get_strv&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_variant_get_strv (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Gets the contents of an array of strings <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This call makes a shallow copy; the return result should be released with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>, but the individual strings must not be modified.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the number of elements in the result is stored there. In any case, the resulting array will be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<P>For an empty array, <EM class=parameter><CODE>length</CODE></EM> will be set to 0 and a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer will be returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.53.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array of strings <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the result, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.53.8></A>
<H4>Returns</H4>
<P>an array of constant strings. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length zero-terminated=1][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dup-strv></A>
<H3>g_variant_dup_strv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_variant_dup_strv (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Gets the contents of an array of strings <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This call makes a deep copy; the return result should be released with <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A>.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the number of elements in the result is stored there. In any case, the resulting array will be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<P>For an empty array, <EM class=parameter><CODE>length</CODE></EM> will be set to 0 and a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer will be returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.54.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array of strings <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the result, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.54.8></A>
<H4>Returns</H4>
<P>an array of strings. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-objv></A>
<H3>g_variant_get_objv&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_variant_get_objv (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Gets the contents of an array of object paths <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This call makes a shallow copy; the return result should be released with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>, but the individual strings must not be modified.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the number of elements in the result is stored there. In any case, the resulting array will be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<P>For an empty array, <EM class=parameter><CODE>length</CODE></EM> will be set to 0 and a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer will be returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.55.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array of object paths <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the result, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.55.8></A>
<H4>Returns</H4>
<P>an array of constant strings. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length zero-terminated=1][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dup-objv></A>
<H3>g_variant_dup_objv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_variant_dup_objv (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Gets the contents of an array of object paths <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This call makes a deep copy; the return result should be released with <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A>.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the number of elements in the result is stored there. In any case, the resulting array will be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<P>For an empty array, <EM class=parameter><CODE>length</CODE></EM> will be set to 0 and a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer will be returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.56.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array of object paths <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the result, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.56.8></A>
<H4>Returns</H4>
<P>an array of strings. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-bytestring></A>
<H3>g_variant_get_bytestring&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_get_bytestring (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns the string value of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance with an array-of-bytes type. The string has no particular encoding.</P>
<P>If the array does not end with a nul terminator character, the empty string is returned. For this reason, you can always trust that a non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> nul-terminated string will be returned by this function.</P>
<P>If the array contains a nul terminator character somewhere other than the last byte then the returned string is the string, up to the first such nul character.</P>
<P>It is an error to call this function with a <EM class=parameter><CODE>value</CODE></EM> that is not an array of bytes.</P>
<P>The return value remains valid as long as <EM class=parameter><CODE>value</CODE></EM> exists.</P>
<DIV class=refsect3><A name=id-1.6.19.7.57.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array-of-bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.57.10></A>
<H4>Returns</H4>
<P>the constant string. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> guint8]</SPAN></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dup-bytestring></A>
<H3>g_variant_dup_bytestring&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_dup_bytestring (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Similar to <A class=link title=g_variant_get_bytestring&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-bytestring"><CODE class=function>g_variant_get_bytestring()</CODE></A> except that instead of returning a constant string, the string is duplicated.</P>
<P>The return value must be freed using <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.58.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array-of-bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A>, to store the length (not including the nul terminator). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Default parameter value (for in case the shadows-to function has less parameters)."><SPAN class=acronym>default</SPAN></ACRONYM> NULL]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.58.7></A>
<H4>Returns</H4>
<P>a newly allocated string. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1 length=length][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> guint8]</SPAN></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-bytestring-array></A>
<H3>g_variant_get_bytestring_array&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_variant_get_bytestring_array (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Gets the contents of an array of array of bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This call makes a shallow copy; the return result should be released with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>, but the individual strings must not be modified.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the number of elements in the result is stored there. In any case, the resulting array will be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<P>For an empty array, <EM class=parameter><CODE>length</CODE></EM> will be set to 0 and a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer will be returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.59.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array of array of bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> ('aay')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the result, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.59.8></A>
<H4>Returns</H4>
<P>an array of constant strings. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dup-bytestring-array></A>
<H3>g_variant_dup_bytestring_array&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_variant_dup_bytestring_array (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *length</CODE></EM>);</PRE>
<P>Gets the contents of an array of array of bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. This call makes a deep copy; the return result should be released with <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A>.</P>
<P>If <EM class=parameter><CODE>length</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the number of elements in the result is stored there. In any case, the resulting array will be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P>
<P>For an empty array, <EM class=parameter><CODE>length</CODE></EM> will be set to 0 and a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer will be returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.60.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>an array of array of bytes <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> ('aay')</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the result, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.60.8></A>
<H4>Returns</H4>
<P>an array of strings. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-maybe></A>
<H3>g_variant_new_maybe&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_maybe (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *child_type</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *child</CODE></EM>);</PRE>
<P>Depending on if <EM class=parameter><CODE>child</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, either wraps <EM class=parameter><CODE>child</CODE></EM> inside of a maybe container or creates a Nothing instance for the given <EM class=parameter><CODE>type</CODE></EM> .</P>
<P>At least one of <EM class=parameter><CODE>child_type</CODE></EM> and <EM class=parameter><CODE>child</CODE></EM> must be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If <EM class=parameter><CODE>child_type</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then it must be a definite type. If they are both non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then <EM class=parameter><CODE>child_type</CODE></EM> must be the type of <EM class=parameter><CODE>child</CODE></EM> .</P>
<P>If <EM class=parameter><CODE>child</CODE></EM> is a floating reference (see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>), the new instance takes ownership of <EM class=parameter><CODE>child</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.61.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>child_type</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> of the child, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>child</P></TD>
<TD class=parameter_description>
<P>the child value, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.61.8></A>
<H4>Returns</H4>
<P>a floating reference to a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> maybe instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-array></A>
<H3>g_variant_new_array&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_array (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *child_type</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> * const *children</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> n_children</CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> array from <EM class=parameter><CODE>children</CODE></EM> .</P>
<P><EM class=parameter><CODE>child_type</CODE></EM> must be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if <EM class=parameter><CODE>n_children</CODE></EM> is zero. Otherwise, the child type is determined by inspecting the first element of the <EM class=parameter><CODE>children</CODE></EM> array. If <EM class=parameter><CODE>child_type</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then it must be a definite type.</P>
<P>The items of the array are taken from the <EM class=parameter><CODE>children</CODE></EM> array. No entry in the <EM class=parameter><CODE>children</CODE></EM> array may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>All items in the array must have the same type, which must be the same as <EM class=parameter><CODE>child_type</CODE></EM> , if given.</P>
<P>If the <EM class=parameter><CODE>children</CODE></EM> are floating references (see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>), the new instance takes ownership of them as if via <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.62.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>child_type</P></TD>
<TD class=parameter_description>
<P>the element type of the new array. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>children</P></TD>
<TD class=parameter_description>
<P>an array of <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> pointers, the children. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_children]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_children</P></TD>
<TD class=parameter_description>
<P>the length of <EM class=parameter><CODE>children</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.62.10></A>
<H4>Returns</H4>
<P>a floating reference to a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> array. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-tuple></A>
<H3>g_variant_new_tuple&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_tuple (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> * const *children</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> n_children</CODE></EM>);</PRE>
<P>Creates a new tuple <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> out of the items in <EM class=parameter><CODE>children</CODE></EM> . The type is determined from the types of <EM class=parameter><CODE>children</CODE></EM> . No entry in the <EM class=parameter><CODE>children</CODE></EM> array may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>If <EM class=parameter><CODE>n_children</CODE></EM> is 0 then the unit tuple is constructed.</P>
<P>If the <EM class=parameter><CODE>children</CODE></EM> are floating references (see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>), the new instance takes ownership of them as if via <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.63.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>children</P></TD>
<TD class=parameter_description>
<P>the items to make the tuple out of. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_children]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_children</P></TD>
<TD class=parameter_description>
<P>the length of <EM class=parameter><CODE>children</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.63.8></A>
<H4>Returns</H4>
<P>a floating reference to a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> tuple. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-dict-entry></A>
<H3>g_variant_new_dict_entry&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_dict_entry (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *key</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Creates a new dictionary entry <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. <EM class=parameter><CODE>key</CODE></EM> and <EM class=parameter><CODE>value</CODE></EM> must be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. <EM class=parameter><CODE>key</CODE></EM> must be a value of a basic type (ie: not a container).</P>
<P>If the <EM class=parameter><CODE>key</CODE></EM> or <EM class=parameter><CODE>value</CODE></EM> are floating references (see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>), the new instance takes ownership of them as if via <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.64.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a basic <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, the value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.64.7></A>
<H4>Returns</H4>
<P>a floating reference to a new dictionary entry <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-fixed-array></A>
<H3>g_variant_new_fixed_array&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_fixed_array (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *element_type</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> elements</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> n_elements</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> element_size</CODE></EM>);</PRE>
<P>Provides access to the serialised data for an array of fixed-sized items.</P>
<P><EM class=parameter><CODE>value</CODE></EM> must be an array with fixed-sized elements. Numeric types are fixed-size as are tuples containing only other fixed-sized types.</P>
<P><EM class=parameter><CODE>element_size</CODE></EM> must be the size of a single element in the array. For example, if calling this function for an array of 32-bit integers, you might say sizeof(gint32). This value isn't used except for the purpose of a double-check that the form of the serialised data matches the caller's expectation.</P>
<P><EM class=parameter><CODE>n_elements</CODE></EM> , which must be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is set equal to the number of items in the array.</P>
<DIV class=refsect3><A name=id-1.6.19.7.65.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>element_type</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> of each element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>elements</P></TD>
<TD class=parameter_description>
<P>a pointer to the fixed array of contiguous elements</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_elements</P></TD>
<TD class=parameter_description>
<P>the number of elements</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>element_size</P></TD>
<TD class=parameter_description>
<P>the size of each element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.65.9></A>
<H4>Returns</H4>
<P>a floating reference to a new array <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-maybe></A>
<H3>g_variant_get_maybe&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_get_maybe (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Given a maybe-typed <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance, extract its value. If the value is Nothing, then this function returns <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.66.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a maybe-typed value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.66.6></A>
<H4>Returns</H4>
<P>the contents of <EM class=parameter><CODE>value</CODE></EM> , or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-n-children></A>
<H3>g_variant_n_children&nbsp;()</H3><PRE class=programlisting><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A>
g_variant_n_children (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Determines the number of children in a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. This includes variants, maybes, arrays, tuples and dictionary entries. It is an error to call this function on any other type of <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>For variants, the return value is always 1. For values with maybe types, it is always zero or one. For arrays, it is the length of the array. For tuples it is the number of tuple items (which depends only on the type). For dictionary entries, it is always 2</P>
<P>This function is O(1).</P>
<DIV class=refsect3><A name=id-1.6.19.7.67.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.67.8></A>
<H4>Returns</H4>
<P>the number of children in the container</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-child-value></A>
<H3>g_variant_get_child_value&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_get_child_value (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> index_</CODE></EM>);</PRE>
<P>Reads a child item out of a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. This includes variants, maybes, arrays, tuples and dictionary entries. It is an error to call this function on any other type of <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>It is an error if <EM class=parameter><CODE>index_</CODE></EM> is greater than the number of child items in the container. See <A class=link title=g_variant_n_children&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-n-children"><CODE class=function>g_variant_n_children()</CODE></A>.</P>
<P>The returned value is never floating. You should free it with <A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A> when you're done with it.</P>
<P>This function is O(1).</P>
<DIV class=refsect3><A name=id-1.6.19.7.68.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index of the child to fetch</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.68.9></A>
<H4>Returns</H4>
<P>the child at the specified index. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-child></A>
<H3>g_variant_get_child&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_get_child (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> index_</CODE></EM>,
                     <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                     <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Reads a child item out of a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance and deconstructs it according to <EM class=parameter><CODE>format_string</CODE></EM> . This call is essentially a combination of <A class=link title=g_variant_get_child_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-child-value"><CODE class=function>g_variant_get_child_value()</CODE></A> and <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A>.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed, see the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.69.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>index_</P></TD>
<TD class=parameter_description>
<P>the index of the child to deconstruct</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments, as per <EM class=parameter><CODE>format_string</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-lookup-value></A>
<H3>g_variant_lookup_value&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_lookup_value (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *dictionary</CODE></EM>,
                        <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                        <EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *expected_type</CODE></EM>);</PRE>
<P>Looks up a value in a dictionary <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>This function works with dictionaries of the type a{s*} (and equally well with type a{o*}, but we only further discuss the string case for sake of clarity).</P>
<P>In the event that <EM class=parameter><CODE>dictionary</CODE></EM> has the type a{sv}, the <EM class=parameter><CODE>expected_type</CODE></EM> string specifies what type of value is expected to be inside of the variant. If the value inside the variant has a different type then <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned. In the event that <EM class=parameter><CODE>dictionary</CODE></EM> has a value type other than v then <EM class=parameter><CODE>expected_type</CODE></EM> must directly match the key type and it is used to unpack the value directly or an error occurs.</P>
<P>In either case, if <EM class=parameter><CODE>key</CODE></EM> is not found in <EM class=parameter><CODE>dictionary</CODE></EM> , <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>If the key is found and the value has the correct type, it is returned. If <EM class=parameter><CODE>expected_type</CODE></EM> was specified then any non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> return value will have this type.</P>
<P>This function is currently implemented with a linear scan. If you plan to do many lookups then <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> may be more efficient.</P>
<DIV class=refsect3><A name=id-1.6.19.7.70.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dictionary</P></TD>
<TD class=parameter_description>
<P>a dictionary <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to lookup in the dictionary</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>expected_type</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.70.11></A>
<H4>Returns</H4>
<P>the value of the dictionary key, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-lookup></A>
<H3>g_variant_lookup&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_lookup (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *dictionary</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                  <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Looks up a value in a dictionary <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<P>This function is a wrapper around <A class=link title=g_variant_lookup_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-lookup-value"><CODE class=function>g_variant_lookup_value()</CODE></A> and <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A>. In the case that <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> would have been returned, this function returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>. Otherwise, it unpacks the returned value and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed, see the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<P>This function is currently implemented with a linear scan. If you plan to do many lookups then <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> may be more efficient.</P>
<DIV class=refsect3><A name=id-1.6.19.7.71.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dictionary</P></TD>
<TD class=parameter_description>
<P>a dictionary <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to lookup in the dictionary</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a GVariant format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the arguments to unpack the value into</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.71.9></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a value was unpacked</P>
<P></P></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-fixed-array></A>
<H3>g_variant_get_fixed_array&nbsp;()</H3><PRE class=programlisting><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=returnvalue>gconstpointer</SPAN></A>
g_variant_get_fixed_array (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *n_elements</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> element_size</CODE></EM>);</PRE>
<P>Provides access to the serialised data for an array of fixed-sized items.</P>
<P><EM class=parameter><CODE>value</CODE></EM> must be an array with fixed-sized elements. Numeric types are fixed-size, as are tuples containing only other fixed-sized types.</P>
<P><EM class=parameter><CODE>element_size</CODE></EM> must be the size of a single element in the array, as given by the section on serialized data memory.</P>
<P>In particular, arrays of these fixed-sized types can be interpreted as an array of the given C type, with <EM class=parameter><CODE>element_size</CODE></EM> set to the size the appropriate type:</P>
<DIV class=itemizedlist>
<UL style="LIST-STYLE-TYPE: disc" class=itemizedlist>
<LI class=listitem>
<P><A class=link title=G_VARIANT_TYPE_INT16 href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-INT16:CAPS"><CODE class=literal>G_VARIANT_TYPE_INT16</CODE></A> (etc.): <A class=link title=gint16 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint16"><SPAN class=type>gint16</SPAN></A> (etc.)</P></LI>
<LI class=listitem>
<P><A class=link title=G_VARIANT_TYPE_BOOLEAN href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-BOOLEAN:CAPS"><CODE class=literal>G_VARIANT_TYPE_BOOLEAN</CODE></A>: <A class=link title=guchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guchar"><SPAN class=type>guchar</SPAN></A> (not <A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A>!)</P></LI>
<LI class=listitem>
<P><A class=link title=G_VARIANT_TYPE_BYTE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-BYTE:CAPS"><CODE class=literal>G_VARIANT_TYPE_BYTE</CODE></A>: <A class=link title=guchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guchar"><SPAN class=type>guchar</SPAN></A></P></LI>
<LI class=listitem>
<P><A class=link title=G_VARIANT_TYPE_HANDLE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-HANDLE:CAPS"><CODE class=literal>G_VARIANT_TYPE_HANDLE</CODE></A>: <A class=link title=guint32 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint32"><SPAN class=type>guint32</SPAN></A></P></LI>
<LI class=listitem>
<P><A class=link title=G_VARIANT_TYPE_DOUBLE href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-DOUBLE:CAPS"><CODE class=literal>G_VARIANT_TYPE_DOUBLE</CODE></A>: <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A></P></LI></UL></DIV>
<P>For example, if calling this function for an array of 32-bit integers, you might say sizeof(gint32). This value isn't used except for the purpose of a double-check that the form of the serialised data matches the caller's expectation.</P>
<P><EM class=parameter><CODE>n_elements</CODE></EM> , which must be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is set equal to the number of items in the array.</P>
<DIV class=refsect3><A name=id-1.6.19.7.72.11></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> array with fixed-sized elements</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_elements</P></TD>
<TD class=parameter_description>
<P>a pointer to the location to store the number of items. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>element_size</P></TD>
<TD class=parameter_description>
<P>the size of each element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.72.12></A>
<H4>Returns</H4>
<P>a pointer to the fixed array. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_elements][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-size></A>
<H3>g_variant_get_size&nbsp;()</H3><PRE class=programlisting><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A>
g_variant_get_size (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Determines the number of bytes that would be required to store <EM class=parameter><CODE>value</CODE></EM> with <A class=link title=g_variant_store&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-store"><CODE class=function>g_variant_store()</CODE></A>.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> has a fixed-sized type then this function always returned that fixed size.</P>
<P>In the case that <EM class=parameter><CODE>value</CODE></EM> is already in serialised form or the size has already been calculated (ie: this function has been called before) then this function is O(1). Otherwise, the size is calculated, an operation which is approximately O(n) in the number of values involved.</P>
<DIV class=refsect3><A name=id-1.6.19.7.73.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.73.8></A>
<H4>Returns</H4>
<P>the serialised size of <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-data></A>
<H3>g_variant_get_data&nbsp;()</H3><PRE class=programlisting><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=returnvalue>gconstpointer</SPAN></A>
g_variant_get_data (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns a pointer to the serialised form of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. The returned data may not be in fully-normalised form if read from an untrusted source. The returned data must not be freed; it remains valid for as long as <EM class=parameter><CODE>value</CODE></EM> exists.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> is a fixed-sized value that was deserialised from a corrupted serialised container then <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> may be returned. In this case, the proper thing to do is typically to use the appropriate number of nul bytes in place of <EM class=parameter><CODE>value</CODE></EM> . If <EM class=parameter><CODE>value</CODE></EM> is not fixed-sized then <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is never returned.</P>
<P>In the case that <EM class=parameter><CODE>value</CODE></EM> is already in serialised form, this function is O(1). If the value is not already in serialised form, serialisation occurs implicitly and is approximately O(n) in the size of the result.</P>
<P>To deserialise the data returned by this function, in addition to the serialised data, you must know the type of the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, and (if the machine might be different) the endianness of the machine that stored it. As a result, file formats or network messages that incorporate serialised <A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariants</SPAN></A> must include this information either implicitly (for instance "the file always contains a <A class=link title=G_VARIANT_TYPE_VARIANT href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-VARIANT:CAPS"><CODE class=literal>G_VARIANT_TYPE_VARIANT</CODE></A> and it is always in little-endian order") or explicitly (by storing the type and/or endianness in addition to the serialised data).</P>
<DIV class=refsect3><A name=id-1.6.19.7.74.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.74.9></A>
<H4>Returns</H4>
<P>the serialised form of <EM class=parameter><CODE>value</CODE></EM> , or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-data-as-bytes></A>
<H3>g_variant_get_data_as_bytes&nbsp;()</H3><PRE class=programlisting><A class=link title=GBytes href="https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes"><SPAN class=returnvalue>GBytes</SPAN></A>&nbsp;*
g_variant_get_data_as_bytes (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Returns a pointer to the serialised form of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. The semantics of this function are exactly the same as <A class=link title=g_variant_get_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-data"><CODE class=function>g_variant_get_data()</CODE></A>, except that the returned <A class=link title=GBytes href="https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes"><SPAN class=type>GBytes</SPAN></A> holds a reference to the variant data.</P>
<DIV class=refsect3><A name=id-1.6.19.7.75.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.75.6></A>
<H4>Returns</H4>
<P>A new <A class=link title=GBytes href="https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes"><SPAN class=type>GBytes</SPAN></A> representing the variant data. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-store></A>
<H3>g_variant_store&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_store (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Stores the serialised form of <EM class=parameter><CODE>value</CODE></EM> at <EM class=parameter><CODE>data</CODE></EM> . <EM class=parameter><CODE>data</CODE></EM> should be large enough. See <A class=link title=g_variant_get_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-size"><CODE class=function>g_variant_get_size()</CODE></A>.</P>
<P>The stored data is in machine native byte order but may not be in fully-normalised form if read from an untrusted source. See <A class=link title=g_variant_get_normal_form&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-normal-form"><CODE class=function>g_variant_get_normal_form()</CODE></A> for a solution.</P>
<P>As with <A class=link title=g_variant_get_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-data"><CODE class=function>g_variant_get_data()</CODE></A>, to be able to deserialise the serialised variant successfully, its type and (if the destination machine might be different) its endianness must also be available.</P>
<P>This function is approximately O(n) in the size of <EM class=parameter><CODE>data</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.76.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> to store</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the location to store the serialised data at</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-from-data></A>
<H3>g_variant_new_from_data&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_from_data (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> data</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> size</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> trusted</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance from serialised data.</P>
<P><EM class=parameter><CODE>type</CODE></EM> is the type of <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance that will be constructed. The interpretation of <EM class=parameter><CODE>data</CODE></EM> depends on knowing the type.</P>
<P><EM class=parameter><CODE>data</CODE></EM> is not modified by this function and must remain valid with an unchanging value until such a time as <EM class=parameter><CODE>notify</CODE></EM> is called with <EM class=parameter><CODE>user_data</CODE></EM> . If the contents of <EM class=parameter><CODE>data</CODE></EM> change before that time then the result is undefined.</P>
<P>If <EM class=parameter><CODE>data</CODE></EM> is trusted to be serialised data in normal form then <EM class=parameter><CODE>trusted</CODE></EM> should be <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. This applies to serialised data created within this process or read from a trusted location on the disk (such as a file installed in /usr/lib alongside your application). You should set trusted to <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if <EM class=parameter><CODE>data</CODE></EM> is read from the network, a file in the user's home directory, etc.</P>
<P>If <EM class=parameter><CODE>data</CODE></EM> was not stored in this machine's native endianness, any multi-byte numeric values in the returned variant will also be in non-native endianness. <A class=link title=g_variant_byteswap&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-byteswap"><CODE class=function>g_variant_byteswap()</CODE></A> can be used to recover the original values.</P>
<P><EM class=parameter><CODE>notify</CODE></EM> will be called with <EM class=parameter><CODE>user_data</CODE></EM> when <EM class=parameter><CODE>data</CODE></EM> is no longer needed. The exact time of this call is unspecified and might even be before this function returns.</P>
<DIV class=refsect3><A name=id-1.6.19.7.77.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a definite <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the serialised data. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=size][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> guint8]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>size</P></TD>
<TD class=parameter_description>
<P>the size of <EM class=parameter><CODE>data</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>trusted</P></TD>
<TD class=parameter_description>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>data</CODE></EM> is definitely in normal form</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>function to call when <EM class=parameter><CODE>data</CODE></EM> is no longer needed. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="The callback is valid until first called."><SPAN class=acronym>scope async</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data for <EM class=parameter><CODE>notify</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.77.11></A>
<H4>Returns</H4>
<P>a new floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> of type <EM class=parameter><CODE>type</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-from-bytes></A>
<H3>g_variant_new_from_bytes&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_from_bytes (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=GBytes href="https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes"><SPAN class=type>GBytes</SPAN></A> *bytes</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> trusted</CODE></EM>);</PRE>
<P>Constructs a new serialised-mode <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. This is the inner interface for creation of new serialised values that gets called from various functions in gvariant.c.</P>
<P>A reference is taken on <EM class=parameter><CODE>bytes</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.78.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GBytes href="https://developer.gnome.org/glib/stable/glib-Byte-Arrays.html#GBytes"><SPAN class=type>GBytes</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>trusted</P></TD>
<TD class=parameter_description>
<P>if the contents of <EM class=parameter><CODE>bytes</CODE></EM> are trusted</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.78.7></A>
<H4>Returns</H4>
<P>a new <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with a floating reference. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-byteswap></A>
<H3>g_variant_byteswap&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_byteswap (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Performs a byteswapping operation on the contents of <EM class=parameter><CODE>value</CODE></EM> . The result is that all multi-byte numeric data contained in <EM class=parameter><CODE>value</CODE></EM> is byteswapped. That includes 16, 32, and 64bit signed and unsigned integers as well as file handles and double precision floating point values.</P>
<P>This function is an identity mapping on any value that does not contain multi-byte numeric data. That include strings, booleans, bytes and containers containing only these things (recursively).</P>
<P>The returned value is always in normal form and is marked as trusted.</P>
<DIV class=refsect3><A name=id-1.6.19.7.79.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.79.8></A>
<H4>Returns</H4>
<P>the byteswapped form of <EM class=parameter><CODE>value</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-get-normal-form></A>
<H3>g_variant_get_normal_form&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_get_normal_form (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Gets a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance that has the same value as <EM class=parameter><CODE>value</CODE></EM> and is trusted to be in normal form.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> is already trusted to be in normal form then a new reference to <EM class=parameter><CODE>value</CODE></EM> is returned.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> is not already trusted, then it is scanned to check if it is in normal form. If it is found to be in normal form then it is marked as trusted and a new reference to it is returned.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> is found not to be in normal form then a new trusted <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is created with the same value as <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>It makes sense to call this function if you've received <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> data from untrusted sources and you want to ensure your serialised output is definitely in normal form.</P>
<DIV class=refsect3><A name=id-1.6.19.7.80.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.80.10></A>
<H4>Returns</H4>
<P>a trusted <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-is-normal-form></A>
<H3>g_variant_is_normal_form&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_is_normal_form (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Checks if <EM class=parameter><CODE>value</CODE></EM> is in normal form.</P>
<P>The main reason to do this is to detect if a given chunk of serialised data is in normal form: load the data into a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> using <A class=link title=g_variant_new_from_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-from-data"><CODE class=function>g_variant_new_from_data()</CODE></A> and then use this function to check.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> is found to be in normal form then it will be marked as being trusted. If the value was already marked as being trusted then this function will immediately return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.81.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.81.8></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>value</CODE></EM> is in normal form</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-hash></A>
<H3>g_variant_hash&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_variant_hash (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> value</CODE></EM>);</PRE>
<P>Generates a hash value for a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance.</P>
<P>The output of this function is guaranteed to be the same for a given value only per-process. It may change between different processor architectures or even different versions of GLib. Do not use this function as a basis for building protocols or file formats.</P>
<P>The type of <EM class=parameter><CODE>value</CODE></EM> is <A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> only to allow use of this function with <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. <EM class=parameter><CODE>value</CODE></EM> must be a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.82.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a basic <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> value as a <A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GVariant]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.82.8></A>
<H4>Returns</H4>
<P>a hash value corresponding to <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-equal></A>
<H3>g_variant_equal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_equal (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> one</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> two</CODE></EM>);</PRE>
<P>Checks if <EM class=parameter><CODE>one</CODE></EM> and <EM class=parameter><CODE>two</CODE></EM> have the same type and value.</P>
<P>The types of <EM class=parameter><CODE>one</CODE></EM> and <EM class=parameter><CODE>two</CODE></EM> are <A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> only to allow use of this function with <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. They must each be a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.83.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>one</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GVariant]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>two</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GVariant]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.83.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>one</CODE></EM> and <EM class=parameter><CODE>two</CODE></EM> are equal</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-print></A>
<H3>g_variant_print&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_print (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> type_annotate</CODE></EM>);</PRE>
<P>Pretty-prints <EM class=parameter><CODE>value</CODE></EM> in the format understood by <A class=link title=g_variant_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-parse"><CODE class=function>g_variant_parse()</CODE></A>.</P>
<P>The format is described <A href="https://developer.gnome.org/glib/stable/gvariant-text.html">here</A>.</P>
<P>If <EM class=parameter><CODE>type_annotate</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, then type information is included in the output.</P>
<DIV class=refsect3><A name=id-1.6.19.7.84.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type_annotate</P></TD>
<TD class=parameter_description>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if type information should be included in the output</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.84.8></A>
<H4>Returns</H4>
<P>a newly-allocated string holding the result. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-print-string></A>
<H3>g_variant_print_string&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=returnvalue>GString</SPAN></A>&nbsp;*
g_variant_print_string (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=type>GString</SPAN></A> *string</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> type_annotate</CODE></EM>);</PRE>
<P>Behaves as <A class=link title=g_variant_print&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-print"><CODE class=function>g_variant_print()</CODE></A>, but operates on a <A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=type>GString</SPAN></A>.</P>
<P>If <EM class=parameter><CODE>string</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then it is appended to and returned. Else, a new empty <A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=type>GString</SPAN></A> is allocated and it is returned.</P>
<DIV class=refsect3><A name=id-1.6.19.7.85.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=type>GString</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Default parameter value (for in case the shadows-to function has less parameters)."><SPAN class=acronym>default</SPAN></ACRONYM> NULL]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>type_annotate</P></TD>
<TD class=parameter_description>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if type information should be included in the output</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.85.7></A>
<H4>Returns</H4>
<P>a <A class=link title="struct GString" href="https://developer.gnome.org/glib/stable/glib-Strings.html#GString"><SPAN class=type>GString</SPAN></A> containing the string</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-copy></A>
<H3>g_variant_iter_copy&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=returnvalue>GVariantIter</SPAN></A>&nbsp;*
g_variant_iter_copy (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Creates a new heap-allocated <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> to iterate over the container that was being iterated over by <EM class=parameter><CODE>iter</CODE></EM> . Iteration begins on the new iterator from the current position of the old iterator but the two copies are independent past that point.</P>
<P>Use <A class=link title=g_variant_iter_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-free"><CODE class=function>g_variant_iter_free()</CODE></A> to free the return value when you no longer need it.</P>
<P>A reference is taken to the container that <EM class=parameter><CODE>iter</CODE></EM> is iterating over and will be releated only when <A class=link title=g_variant_iter_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-free"><CODE class=function>g_variant_iter_free()</CODE></A> is called.</P>
<DIV class=refsect3><A name=id-1.6.19.7.86.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.86.8></A>
<H4>Returns</H4>
<P>a new heap-allocated <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-free></A>
<H3>g_variant_iter_free&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_iter_free (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Frees a heap-allocated <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A>. Only call this function on iterators that were returned by <A class=link title=g_variant_iter_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-new"><CODE class=function>g_variant_iter_new()</CODE></A> or <A class=link title=g_variant_iter_copy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-copy"><CODE class=function>g_variant_iter_copy()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.87.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a heap-allocated <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-init></A>
<H3>g_variant_iter_init&nbsp;()</H3><PRE class=programlisting><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A>
g_variant_iter_init (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Initialises (without allocating) a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A>. <EM class=parameter><CODE>iter</CODE></EM> may be completely uninitialised prior to this call; its old value is ignored.</P>
<P>The iterator remains valid for as long as <EM class=parameter><CODE>value</CODE></EM> exists, and need not be freed in any way.</P>
<DIV class=refsect3><A name=id-1.6.19.7.88.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.88.7></A>
<H4>Returns</H4>
<P>the number of items in <EM class=parameter><CODE>value</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-n-children></A>
<H3>g_variant_iter_n_children&nbsp;()</H3><PRE class=programlisting><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A>
g_variant_iter_n_children (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Queries the number of child items in the container that we are iterating over. This is the total number of items -- not the number of items remaining.</P>
<P>This function might be useful for preallocation of arrays.</P>
<DIV class=refsect3><A name=id-1.6.19.7.89.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.89.7></A>
<H4>Returns</H4>
<P>the number of children in the container</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-new></A>
<H3>g_variant_iter_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=returnvalue>GVariantIter</SPAN></A>&nbsp;*
g_variant_iter_new (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Creates a heap-allocated <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> for iterating over the items in <EM class=parameter><CODE>value</CODE></EM> .</P>
<P>Use <A class=link title=g_variant_iter_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-free"><CODE class=function>g_variant_iter_free()</CODE></A> to free the return value when you no longer need it.</P>
<P>A reference is taken to <EM class=parameter><CODE>value</CODE></EM> and will be released only when <A class=link title=g_variant_iter_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-free"><CODE class=function>g_variant_iter_free()</CODE></A> is called.</P>
<DIV class=refsect3><A name=id-1.6.19.7.90.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a container <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.90.8></A>
<H4>Returns</H4>
<P>a new heap-allocated <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-next-value></A>
<H3>g_variant_iter_next_value&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_iter_next_value (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Gets the next item in the container. If no more items remain then <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>Use <A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A> to drop your reference on the return value when you no longer need it.</P>
<P>Here is an example for iterating with <A class=link title=g_variant_iter_next_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next-value"><CODE class=function>g_variant_iter_next_value()</CODE></A>:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// recursively iterate a container</SPAN>
<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>iterate_container_recursive</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GVariant <SPAN class="gtkdoc opt">*</SPAN>container<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantIter iter<SPAN class="gtkdoc opt">;</SPAN>
  GVariant <SPAN class="gtkdoc opt">*</SPAN>child<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-init">g_variant_iter_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">,</SPAN> container<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">((</SPAN>child <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next-value">g_variant_iter_next_value</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">)))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-print">g_print</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"type '%s'</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-type-string">g_variant_get_type_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>child<SPAN class="gtkdoc opt">));</SPAN>

      <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-is-container">g_variant_is_container</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>child<SPAN class="gtkdoc opt">))</SPAN>
        <SPAN class=function>iterate_container_recursive</SPAN> <SPAN class="gtkdoc opt">(</SPAN>child<SPAN class="gtkdoc opt">);</SPAN>

      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref">g_variant_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>child<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.19.7.91.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.91.10></A>
<H4>Returns</H4>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-next></A>
<H3>g_variant_iter_next&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_iter_next (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>,
                     <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                     <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Gets the next item in the container and unpacks it into the variable argument list according to <EM class=parameter><CODE>format_string</CODE></EM> , returning <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>.</P>
<P>If no more items remain then <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> is returned.</P>
<P>All of the pointers given on the variable arguments list of this function are assumed to point at uninitialised memory. It is the responsibility of the caller to free all of the values returned by the unpacking process.</P>
<P>Here is an example for memory management with <A class=link title=g_variant_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next"><CODE class=function>g_variant_iter_next()</CODE></A>:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// Iterates a dictionary of type 'a{sv}'</SPAN>
<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>iterate_dictionary</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GVariant <SPAN class="gtkdoc opt">*</SPAN>dictionary<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantIter iter<SPAN class="gtkdoc opt">;</SPAN>
  GVariant <SPAN class="gtkdoc opt">*</SPAN>value<SPAN class="gtkdoc opt">;</SPAN>
  gchar <SPAN class="gtkdoc opt">*</SPAN>key<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-init">g_variant_iter_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">,</SPAN> dictionary<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next">g_variant_iter_next</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"{sv}"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>key<SPAN class="gtkdoc opt">, &amp;</SPAN>value<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-print">g_print</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Item '%s' has type '%s'</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> key<SPAN class="gtkdoc opt">,</SPAN>
               <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-type-string">g_variant_get_type_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>value<SPAN class="gtkdoc opt">));</SPAN>

      <SPAN class="gtkdoc slc">// must free data for ourselves</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref">g_variant_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>value<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>key<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>For a solution that is likely to be more convenient to C programmers when dealing with loops, see <A class=link title=g_variant_iter_loop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-loop"><CODE class=function>g_variant_iter_loop()</CODE></A>.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed.</P>
<P>See the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.92.13></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a GVariant format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the arguments to unpack the value into</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.92.14></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a value was unpacked, or <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if there as no value</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-iter-loop></A>
<H3>g_variant_iter_loop&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_iter_loop (<EM class=parameter><CODE><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> *iter</CODE></EM>,
                     <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                     <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Gets the next item in the container and unpacks it into the variable argument list according to <EM class=parameter><CODE>format_string</CODE></EM> , returning <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>.</P>
<P>If no more items remain then <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> is returned.</P>
<P>On the first call to this function, the pointers appearing on the variable argument list are assumed to point at uninitialised memory. On the second and later calls, it is assumed that the same pointers will be given and that they will point to the memory as set by the previous call to this function. This allows the previous values to be freed, as appropriate.</P>
<P>This function is intended to be used with a while loop as demonstrated in the following example. This function can only be used when iterating over an array. It is only valid to call this function with a string constant for the format string and the same string constant must be used each time. Mixing calls to this function and <A class=link title=g_variant_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next"><CODE class=function>g_variant_iter_next()</CODE></A> or <A class=link title=g_variant_iter_next_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next-value"><CODE class=function>g_variant_iter_next_value()</CODE></A> on the same iterator causes undefined behavior.</P>
<P>If you break out of a such a while loop using <A class=link title=g_variant_iter_loop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-loop"><CODE class=function>g_variant_iter_loop()</CODE></A> then you must free or unreference all the unpacked values as you would with <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A>. Failure to do so will cause a memory leak.</P>
<P>Here is an example for memory management with <A class=link title=g_variant_iter_loop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-loop"><CODE class=function>g_variant_iter_loop()</CODE></A>:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// Iterates a dictionary of type 'a{sv}'</SPAN>
<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>iterate_dictionary</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GVariant <SPAN class="gtkdoc opt">*</SPAN>dictionary<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantIter iter<SPAN class="gtkdoc opt">;</SPAN>
  GVariant <SPAN class="gtkdoc opt">*</SPAN>value<SPAN class="gtkdoc opt">;</SPAN>
  gchar <SPAN class="gtkdoc opt">*</SPAN>key<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-init">g_variant_iter_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">,</SPAN> dictionary<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-loop">g_variant_iter_loop</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"{sv}"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>key<SPAN class="gtkdoc opt">, &amp;</SPAN>value<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-print">g_print</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Item '%s' has type '%s'</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> key<SPAN class="gtkdoc opt">,</SPAN>
               <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get-type-string">g_variant_get_type_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>value<SPAN class="gtkdoc opt">));</SPAN>

      <SPAN class="gtkdoc slc">// no need to free 'key' and 'value' here</SPAN>
      <SPAN class="gtkdoc slc">// unless breaking out of this loop</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>For most cases you should use <A class=link title=g_variant_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next"><CODE class=function>g_variant_iter_next()</CODE></A>.</P>
<P>This function is really only useful when unpacking into <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> or <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> in order to allow you to skip the call to <A class=link title=g_variant_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-unref"><CODE class=function>g_variant_unref()</CODE></A> or <A class=link title=g_variant_iter_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-free"><CODE class=function>g_variant_iter_free()</CODE></A>.</P>
<P>For example, if you are only looping over simple integer and string types, <A class=link title=g_variant_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-iter-next"><CODE class=function>g_variant_iter_next()</CODE></A> is definitely preferred. For string types, use the '&amp;' prefix to avoid allocating any memory at all (and thereby avoiding the need to free anything as well).</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed.</P>
<P>See the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.93.17></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a GVariant format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the arguments to unpack the value into</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.93.18></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a value was unpacked, or <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if there was no value</P>
<P></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-unref></A>
<H3>g_variant_builder_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_unref (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>);</PRE>
<P>Decreases the reference count on <EM class=parameter><CODE>builder</CODE></EM> .</P>
<P>In the event that there are no more references, releases all memory associated with the <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>.</P>
<P>Don't call this on stack-allocated <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> instances or bad things will happen.</P>
<DIV class=refsect3><A name=id-1.6.19.7.94.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> allocated by <A class=link title=g_variant_builder_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-new"><CODE class=function>g_variant_builder_new()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-ref></A>
<H3>g_variant_builder_ref&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=returnvalue>GVariantBuilder</SPAN></A>&nbsp;*
g_variant_builder_ref (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>);</PRE>
<P>Increases the reference count on <EM class=parameter><CODE>builder</CODE></EM> .</P>
<P>Don't call this on stack-allocated <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> instances or bad things will happen.</P>
<DIV class=refsect3><A name=id-1.6.19.7.95.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> allocated by <A class=link title=g_variant_builder_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-new"><CODE class=function>g_variant_builder_new()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.95.7></A>
<H4>Returns</H4>
<P>a new reference to <EM class=parameter><CODE>builder</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-new></A>
<H3>g_variant_builder_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=returnvalue>GVariantBuilder</SPAN></A>&nbsp;*
g_variant_builder_new (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>);</PRE>
<P>Allocates and initialises a new <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>.</P>
<P>You should call <A class=link title=g_variant_builder_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-unref"><CODE class=function>g_variant_builder_unref()</CODE></A> on the return value when it is no longer needed. The memory will not be automatically freed by any other call.</P>
<P>In most cases it is easier to place a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> directly on the stack of the calling function and initialise it with <A class=link title=g_variant_builder_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-init"><CODE class=function>g_variant_builder_init()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.96.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a container type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.96.8></A>
<H4>Returns</H4>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-init></A>
<H3>g_variant_builder_init&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_init (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>,
                        <EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>);</PRE>
<P>Initialises a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> structure.</P>
<P><EM class=parameter><CODE>type</CODE></EM> must be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. It specifies the type of container to construct. It can be an indefinite type such as <A class=link title=G_VARIANT_TYPE_ARRAY href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-ARRAY:CAPS"><CODE class=literal>G_VARIANT_TYPE_ARRAY</CODE></A> or a definite type such as "as" or "(ii)". Maybe, array, tuple, dictionary entry and variant-typed values may be constructed.</P>
<P>After the builder is initialised, values are added using <A class=link title=g_variant_builder_add_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-value"><CODE class=function>g_variant_builder_add_value()</CODE></A> or <A class=link title=g_variant_builder_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add"><CODE class=function>g_variant_builder_add()</CODE></A>.</P>
<P>After all the child values are added, <A class=link title=g_variant_builder_end&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-end"><CODE class=function>g_variant_builder_end()</CODE></A> frees the memory associated with the builder and returns the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> that was created.</P>
<P>This function completely ignores the previous contents of <EM class=parameter><CODE>builder</CODE></EM> . On one hand this means that it is valid to pass in completely uninitialised memory. On the other hand, this means that if you are initialising over top of an existing <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> you need to first call <A class=link title=g_variant_builder_clear&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-clear"><CODE class=function>g_variant_builder_clear()</CODE></A> in order to avoid leaking memory.</P>
<P>You must not call <A class=link title=g_variant_builder_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-ref"><CODE class=function>g_variant_builder_ref()</CODE></A> or <A class=link title=g_variant_builder_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-unref"><CODE class=function>g_variant_builder_unref()</CODE></A> on a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> that was initialised with this function. If you ever pass a reference to a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> outside of the control of your own code then you should assume that the person receiving that reference may try to use reference counting; you should use <A class=link title=g_variant_builder_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-new"><CODE class=function>g_variant_builder_new()</CODE></A> instead of this function.</P>
<DIV class=refsect3><A name=id-1.6.19.7.97.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a container type</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-clear></A>
<H3>g_variant_builder_clear&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_clear (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>);</PRE>
<P>Releases all memory associated with a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> without freeing the <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> structure itself.</P>
<P>It typically only makes sense to do this on a stack-allocated <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> if you want to abort building the value part-way through. This function need not be called if you call <A class=link title=g_variant_builder_end&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-end"><CODE class=function>g_variant_builder_end()</CODE></A> and it also doesn't need to be called on builders allocated with g_variant_builder_new (see <A class=link title=g_variant_builder_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-unref"><CODE class=function>g_variant_builder_unref()</CODE></A> for that).</P>
<P>This function leaves the <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> structure set to all-zeros. It is valid to call this function on either an initialised <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> or one that is set to all-zeros but it is not valid to call this function on uninitialised memory.</P>
<DIV class=refsect3><A name=id-1.6.19.7.98.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-add-value></A>
<H3>g_variant_builder_add_value&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_add_value (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Adds <EM class=parameter><CODE>value</CODE></EM> to <EM class=parameter><CODE>builder</CODE></EM> .</P>
<P>It is an error to call this function in any way that would create an inconsistent value to be constructed. Some examples of this are putting different types of items into an array, putting the wrong types or number of items in a tuple, putting more than one value into a variant, etc.</P>
<P>If <EM class=parameter><CODE>value</CODE></EM> is a floating reference (see <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A>), the <EM class=parameter><CODE>builder</CODE></EM> instance takes ownership of <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.99.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-add></A>
<H3>g_variant_builder_add&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_add (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                       <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Adds to a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>.</P>
<P>This call is a convenience wrapper that is exactly equivalent to calling <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A> followed by <A class=link title=g_variant_builder_add_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-value"><CODE class=function>g_variant_builder_add_value()</CODE></A>.</P>
<P>Note that the arguments must be of the correct width for their types specified in <EM class=parameter><CODE>format_string</CODE></EM> . This can be achieved by casting them. See the <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-varargs">GVariant varargs documentation</A>.</P>
<P>This function might be used as follows:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GVariant <SPAN class="gtkdoc opt">*</SPAN>
<SPAN class=function>make_pointless_dictionary</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantBuilder builder<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class="gtkdoc kwb">int</SPAN> i<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-init">g_variant_builder_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">,</SPAN> G_VARIANT_TYPE_ARRAY<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>for</SPAN> <SPAN class="gtkdoc opt">(</SPAN>i <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">;</SPAN> i <SPAN class="gtkdoc opt">&lt;</SPAN> <SPAN class=number>16</SPAN><SPAN class="gtkdoc opt">;</SPAN> i<SPAN class="gtkdoc opt">++)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      gchar buf<SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>3</SPAN><SPAN class="gtkdoc opt">];</SPAN>

      <SPAN class=function>sprintf</SPAN> <SPAN class="gtkdoc opt">(</SPAN>buf<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"%d"</SPAN><SPAN class="gtkdoc opt">,</SPAN> i<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add">g_variant_builder_add</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"{is}"</SPAN><SPAN class="gtkdoc opt">,</SPAN> i<SPAN class="gtkdoc opt">,</SPAN> buf<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>

  <SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-end">g_variant_builder_end</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.19.7.100.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> varargs format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments, as per <EM class=parameter><CODE>format_string</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-add-parsed></A>
<H3>g_variant_builder_add_parsed&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_add_parsed (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>,
                              <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Adds to a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>.</P>
<P>This call is a convenience wrapper that is exactly equivalent to calling <A class=link title=g_variant_new_parsed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-parsed"><CODE class=function>g_variant_new_parsed()</CODE></A> followed by <A class=link title=g_variant_builder_add_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-value"><CODE class=function>g_variant_builder_add_value()</CODE></A>.</P>
<P>Note that the arguments must be of the correct width for their types specified in <EM class=parameter><CODE>format_string</CODE></EM> . This can be achieved by casting them. See the <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-varargs">GVariant varargs documentation</A>.</P>
<P>This function might be used as follows:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GVariant <SPAN class="gtkdoc opt">*</SPAN>
<SPAN class=function>make_pointless_dictionary</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantBuilder builder<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class="gtkdoc kwb">int</SPAN> i<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-init">g_variant_builder_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">,</SPAN> G_VARIANT_TYPE_ARRAY<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-parsed">g_variant_builder_add_parsed</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"{'width', &lt;%i&gt;}"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>600</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-parsed">g_variant_builder_add_parsed</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"{'title', &lt;%s&gt;}"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"foo"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-add-parsed">g_variant_builder_add_parsed</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"{'transparency', &lt;0.5&gt;}"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-end">g_variant_builder_end</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>builder<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.19.7.101.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>a text format <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments as per <EM class=parameter><CODE>format</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-end></A>
<H3>g_variant_builder_end&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_builder_end (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>);</PRE>
<P>Ends the builder process and returns the constructed value.</P>
<P>It is not permissible to use <EM class=parameter><CODE>builder</CODE></EM> in any way after this call except for reference counting operations (in the case of a heap-allocated <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A>) or by reinitialising it with <A class=link title=g_variant_builder_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-init"><CODE class=function>g_variant_builder_init()</CODE></A> (in the case of stack-allocated).</P>
<P>It is an error to call this function in any way that would create an inconsistent value to be constructed (ie: insufficient number of items added to a container with a specific number of children required). It is also an error to call this function if the builder was created with an indefinite array or maybe type and no children have been added; in this case it is impossible to infer the type of the empty array.</P>
<DIV class=refsect3><A name=id-1.6.19.7.102.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.102.8></A>
<H4>Returns</H4>
<P>a new, floating, <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-open></A>
<H3>g_variant_builder_open&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_open (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>,
                        <EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>);</PRE>
<P>Opens a subcontainer inside the given <EM class=parameter><CODE>builder</CODE></EM> . When done adding items to the subcontainer, <A class=link title=g_variant_builder_close&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-close"><CODE class=function>g_variant_builder_close()</CODE></A> must be called.</P>
<P>It is an error to call this function in any way that would cause an inconsistent value to be constructed (ie: adding too many values or a value of an incorrect type).</P>
<DIV class=refsect3><A name=id-1.6.19.7.103.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-builder-close></A>
<H3>g_variant_builder_close&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_builder_close (<EM class=parameter><CODE><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> *builder</CODE></EM>);</PRE>
<P>Closes the subcontainer inside the given <EM class=parameter><CODE>builder</CODE></EM> that was opened by the most recent call to <A class=link title=g_variant_builder_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-builder-open"><CODE class=function>g_variant_builder_open()</CODE></A>.</P>
<P>It is an error to call this function in any way that would create an inconsistent value to be constructed (ie: too few values added to the subcontainer).</P>
<DIV class=refsect3><A name=id-1.6.19.7.104.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>builder</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-unref></A>
<H3>g_variant_dict_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_dict_unref (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>);</PRE>
<P>Decreases the reference count on <EM class=parameter><CODE>dict</CODE></EM> .</P>
<P>In the event that there are no more references, releases all memory associated with the <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P>Don't call this on stack-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> instances or bad things will happen.</P>
<DIV class=refsect3><A name=id-1.6.19.7.105.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a heap-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-ref></A>
<H3>g_variant_dict_ref&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=returnvalue>GVariantDict</SPAN></A>&nbsp;*
g_variant_dict_ref (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>);</PRE>
<P>Increases the reference count on <EM class=parameter><CODE>dict</CODE></EM> .</P>
<P>Don't call this on stack-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> instances or bad things will happen.</P>
<DIV class=refsect3><A name=id-1.6.19.7.106.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a heap-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.106.7></A>
<H4>Returns</H4>
<P>a new reference to <EM class=parameter><CODE>dict</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-new></A>
<H3>g_variant_dict_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=returnvalue>GVariantDict</SPAN></A>&nbsp;*
g_variant_dict_new (<EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *from_asv</CODE></EM>);</PRE>
<P>Allocates and initialises a new <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P>You should call <A class=link title=g_variant_dict_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref"><CODE class=function>g_variant_dict_unref()</CODE></A> on the return value when it is no longer needed. The memory will not be automatically freed by any other call.</P>
<P>In some cases it may be easier to place a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> directly on the stack of the calling function and initialise it with <A class=link title=g_variant_dict_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-init"><CODE class=function>g_variant_dict_init()</CODE></A>. This is particularly useful when you are using <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> to construct a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.107.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>from_asv</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with which to initialise the dictionary. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.107.8></A>
<H4>Returns</H4>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-init></A>
<H3>g_variant_dict_init&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_dict_init (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *from_asv</CODE></EM>);</PRE>
<P>Initialises a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> structure.</P>
<P>If <EM class=parameter><CODE>from_asv</CODE></EM> is given, it is used to initialise the dictionary.</P>
<P>This function completely ignores the previous contents of <EM class=parameter><CODE>dict</CODE></EM> . On one hand this means that it is valid to pass in completely uninitialised memory. On the other hand, this means that if you are initialising over top of an existing <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> you need to first call <A class=link title=g_variant_dict_clear&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-clear"><CODE class=function>g_variant_dict_clear()</CODE></A> in order to avoid leaking memory.</P>
<P>You must not call <A class=link title=g_variant_dict_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-ref"><CODE class=function>g_variant_dict_ref()</CODE></A> or <A class=link title=g_variant_dict_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref"><CODE class=function>g_variant_dict_unref()</CODE></A> on a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> that was initialised with this function. If you ever pass a reference to a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> outside of the control of your own code then you should assume that the person receiving that reference may try to use reference counting; you should use <A class=link title=g_variant_dict_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-new"><CODE class=function>g_variant_dict_new()</CODE></A> instead of this function.</P>
<DIV class=refsect3><A name=id-1.6.19.7.108.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>from_asv</P></TD>
<TD class=parameter_description>
<P>the initial value for <EM class=parameter><CODE>dict</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-clear></A>
<H3>g_variant_dict_clear&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_dict_clear (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>);</PRE>
<P>Releases all memory associated with a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> without freeing the <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> structure itself.</P>
<P>It typically only makes sense to do this on a stack-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> if you want to abort building the value part-way through. This function need not be called if you call <A class=link title=g_variant_dict_end&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-end"><CODE class=function>g_variant_dict_end()</CODE></A> and it also doesn't need to be called on dicts allocated with g_variant_dict_new (see <A class=link title=g_variant_dict_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref"><CODE class=function>g_variant_dict_unref()</CODE></A> for that).</P>
<P>It is valid to call this function on either an initialised <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> or one that was previously cleared by an earlier call to <A class=link title=g_variant_dict_clear&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-clear"><CODE class=function>g_variant_dict_clear()</CODE></A> but it is not valid to call this function on uninitialised memory.</P>
<DIV class=refsect3><A name=id-1.6.19.7.109.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-contains></A>
<H3>g_variant_dict_contains&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_dict_contains (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                         <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>);</PRE>
<P>Checks if <EM class=parameter><CODE>key</CODE></EM> exists in <EM class=parameter><CODE>dict</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.19.7.110.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to lookup in the dictionary</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.110.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>key</CODE></EM> is in <EM class=parameter><CODE>dict</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-lookup></A>
<H3>g_variant_dict_lookup&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_dict_lookup (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                       <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Looks up a value in a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P>This function is a wrapper around <A class=link title=g_variant_dict_lookup_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-lookup-value"><CODE class=function>g_variant_dict_lookup_value()</CODE></A> and <A class=link title=g_variant_get&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-get"><CODE class=function>g_variant_get()</CODE></A>. In the case that <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> would have been returned, this function returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>. Otherwise, it unpacks the returned value and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>.</P>
<P><EM class=parameter><CODE>format_string</CODE></EM> determines the C types that are used for unpacking the values and also determines if the values are copied or borrowed, see the section on <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-format-strings-pointers">GVariant format strings</A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.111.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to lookup in the dictionary</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a GVariant format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the arguments to unpack the value into</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.111.8></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a value was unpacked</P>
<P></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-lookup-value></A>
<H3>g_variant_dict_lookup_value&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_dict_lookup_value (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *expected_type</CODE></EM>);</PRE>
<P>Looks up a value in a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P>If <EM class=parameter><CODE>key</CODE></EM> is not found in <EM class=parameter><CODE>dictionary</CODE></EM> , <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>The <EM class=parameter><CODE>expected_type</CODE></EM> string specifies what type of value is expected. If the value associated with <EM class=parameter><CODE>key</CODE></EM> has a different type then <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>If the key is found and the value has the correct type, it is returned. If <EM class=parameter><CODE>expected_type</CODE></EM> was specified then any non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> return value will have this type.</P>
<DIV class=refsect3><A name=id-1.6.19.7.112.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to lookup in the dictionary</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>expected_type</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.112.9></A>
<H4>Returns</H4>
<P>the value of the dictionary key, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-insert></A>
<H3>g_variant_dict_insert&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_dict_insert (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format_string</CODE></EM>,
                       <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Inserts a value into a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P>This call is a convenience wrapper that is exactly equivalent to calling <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A> followed by <A class=link title=g_variant_dict_insert_value&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-insert-value"><CODE class=function>g_variant_dict_insert_value()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.113.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to insert a value for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format_string</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> varargs format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments, as per <EM class=parameter><CODE>format_string</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-insert-value></A>
<H3>g_variant_dict_insert_value&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_variant_dict_insert_value (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> *value</CODE></EM>);</PRE>
<P>Inserts (or replaces) a key in a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<P><EM class=parameter><CODE>value</CODE></EM> is consumed if it is floating.</P>
<DIV class=refsect3><A name=id-1.6.19.7.114.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to insert a value for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value to insert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-remove></A>
<H3>g_variant_dict_remove&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_variant_dict_remove (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>);</PRE>
<P>Removes a key and its associated value from a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.7.115.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.115.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key was found and removed</P>
<P></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-dict-end></A>
<H3>g_variant_dict_end&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_dict_end (<EM class=parameter><CODE><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> *dict</CODE></EM>);</PRE>
<P>Returns the current value of <EM class=parameter><CODE>dict</CODE></EM> as a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> of type <A class=link title=G_VARIANT_TYPE_VARDICT href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-VARDICT:CAPS"><CODE class=literal>G_VARIANT_TYPE_VARDICT</CODE></A>, clearing it in the process.</P>
<P>It is not permissible to use <EM class=parameter><CODE>dict</CODE></EM> in any way after this call except for reference counting operations (in the case of a heap-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>) or by reinitialising it with <A class=link title=g_variant_dict_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-init"><CODE class=function>g_variant_dict_init()</CODE></A> (in the case of stack-allocated).</P>
<DIV class=refsect3><A name=id-1.6.19.7.116.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>dict</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.116.7></A>
<H4>Returns</H4>
<P>a new, floating, <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-VARIANT-PARSE-ERROR:CAPS></A>
<H3>G_VARIANT_PARSE_ERROR</H3><PRE class=programlisting>#define G_VARIANT_PARSE_ERROR (g_variant_parse_error_quark ())
</PRE>
<P>Error domain for GVariant text format parsing. Specific error codes are not currently defined for this domain. See <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> for information on error domains.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-parse></A>
<H3>g_variant_parse&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_parse (<EM class=parameter><CODE>const <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> *type</CODE></EM>,
                 <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *text</CODE></EM>,
                 <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *limit</CODE></EM>,
                 <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **endptr</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Parses a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> from a text representation.</P>
<P>A single <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is parsed from the content of <EM class=parameter><CODE>text</CODE></EM> .</P>
<P>The format is described <A href="https://developer.gnome.org/glib/stable/gvariant-text.html">here</A>.</P>
<P>The memory at <EM class=parameter><CODE>limit</CODE></EM> will never be accessed and the parser behaves as if the character at <EM class=parameter><CODE>limit</CODE></EM> is the nul terminator. This has the effect of bounding <EM class=parameter><CODE>text</CODE></EM> .</P>
<P>If <EM class=parameter><CODE>endptr</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then <EM class=parameter><CODE>text</CODE></EM> is permitted to contain data following the value that this function parses and <EM class=parameter><CODE>endptr</CODE></EM> will be updated to point to the first character past the end of the text parsed by this function. If <EM class=parameter><CODE>endptr</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> and there is extra data then an error is returned.</P>
<P>If <EM class=parameter><CODE>type</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the value will be parsed to have that type. This may result in additional parse errors (in the case that the parsed value doesn't fit the type) but may also result in fewer errors (in the case that the type would have been ambiguous, such as with empty arrays).</P>
<P>In the event that the parsing is successful, the resulting <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is returned.</P>
<P>In case of any error, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> will be returned. If <EM class=parameter><CODE>error</CODE></EM> is non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then it will be set to reflect the error that occurred.</P>
<P>Officially, the language understood by the parser is "any string produced by <A class=link title=g_variant_print&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-print"><CODE class=function>g_variant_print()</CODE></A>".</P>
<DIV class=refsect3><A name=id-1.6.19.7.118.13></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>text</P></TD>
<TD class=parameter_description>
<P>a string containing a GVariant in text form</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>limit</P></TD>
<TD class=parameter_description>
<P>a pointer to the end of <EM class=parameter><CODE>text</CODE></EM> , or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>endptr</P></TD>
<TD class=parameter_description>
<P>a location to store the end pointer, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> pointer, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.118.14></A>
<H4>Returns</H4>
<P>a reference to a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-parsed-va></A>
<H3>g_variant_new_parsed_va&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_parsed_va (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                         <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> *app</CODE></EM>);</PRE>
<P>Parses <EM class=parameter><CODE>format</CODE></EM> and returns the result.</P>
<P>This is the version of <A class=link title=g_variant_new_parsed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-parsed"><CODE class=function>g_variant_new_parsed()</CODE></A> intended to be used from libraries.</P>
<P>The return value will be floating if it was a newly created GVariant instance. In the case that <EM class=parameter><CODE>format</CODE></EM> simply specified the collection of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> pointer (eg: <EM class=parameter><CODE>format</CODE></EM> was "%*") then the collected <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> pointer will be returned unmodified, without adding any additional references.</P>
<P>Note that the arguments in <EM class=parameter><CODE>app</CODE></EM> must be of the correct width for their types specified in <EM class=parameter><CODE>format</CODE></EM> when collected into the <SPAN class=type>va_list</SPAN>. See the <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-varargs">GVariant varargs documentation</A>.</P>
<P>In order to behave correctly in all cases it is necessary for the calling function to <A class=link title=g_variant_ref_sink&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-ref-sink"><CODE class=function>g_variant_ref_sink()</CODE></A> the return result before returning control to the user that originally provided the pointer. At this point, the caller will have their own full reference to the result. This can also be done by adding the result to a container, or by passing it to another <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A> call.</P>
<DIV class=refsect3><A name=id-1.6.19.7.119.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>a text format <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>app</P></TD>
<TD class=parameter_description>
<P>a pointer to a <SPAN class=type>va_list</SPAN></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.119.10></A>
<H4>Returns</H4>
<P>a new, usually floating, <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-new-parsed></A>
<H3>g_variant_new_parsed&nbsp;()</H3><PRE class=programlisting><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=returnvalue>GVariant</SPAN></A>&nbsp;*
g_variant_new_parsed (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                      <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Parses <EM class=parameter><CODE>format</CODE></EM> and returns the result.</P>
<P><EM class=parameter><CODE>format</CODE></EM> must be a text format <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> with one extension: at any point that a value may appear in the text, a '%' character followed by a GVariant format string (as per <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A>) may appear. In that case, the same arguments are collected from the argument list as <A class=link title=g_variant_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new"><CODE class=function>g_variant_new()</CODE></A> would have collected.</P>
<P>Note that the arguments must be of the correct width for their types specified in <EM class=parameter><CODE>format</CODE></EM> . This can be achieved by casting them. See the <A href="https://developer.gnome.org/glib/stable/gvariant-format-strings.html#gvariant-varargs">GVariant varargs documentation</A>.</P>
<P>Consider this simple example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-new-parsed">g_variant_new_parsed</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"[('one', 1), ('two', %i), (%s, 3)]"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>2</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"three"</SPAN><SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>In the example, the variable argument parameters are collected and filled in as if they were part of the original string to produce the result of</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc opt">[(</SPAN><SPAN class=string>'one'</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">), (</SPAN><SPAN class=string>'two'</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>2</SPAN><SPAN class="gtkdoc opt">), (</SPAN><SPAN class=string>'three'</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>3</SPAN><SPAN class="gtkdoc opt">)]</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This function is intended only to be used with <EM class=parameter><CODE>format</CODE></EM> as a string literal. Any parse error is fatal to the calling process. If you want to parse data from untrusted sources, use <A class=link title=g_variant_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-parse"><CODE class=function>g_variant_parse()</CODE></A>.</P>
<P>You may not use this function to return, unmodified, a single <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> pointer from the argument list. ie: <EM class=parameter><CODE>format</CODE></EM> may not solely be anything along the lines of "%*", "%?", "%r", or anything starting with "%@".</P>
<DIV class=refsect3><A name=id-1.6.19.7.120.15></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>a text format <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>arguments as per <EM class=parameter><CODE>format</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.120.16></A>
<H4>Returns</H4>
<P>a new floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instance</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-variant-parse-error-print-context></A>
<H3>g_variant_parse_error_print_context&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_variant_parse_error_print_context (<EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> *error</CODE></EM>,
                                     <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *source_str</CODE></EM>);</PRE>
<P>Pretty-prints a message showing the context of a <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> parse error within the string for which parsing was attempted.</P>
<P>The resulting string is suitable for output to the console or other monospace media where newlines are treated in the usual way.</P>
<P>The message will typically look something like one of the following:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3</PRE></TD>
<TD class=listing_code><PRE class=programlisting>unterminated string constant<SPAN class="gtkdoc opt">:</SPAN>
  <SPAN class="gtkdoc opt">(</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>2</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>3</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>'abc</SPAN>
<SPAN class=string>            ^^^^</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>or</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3</PRE></TD>
<TD class=listing_code><PRE class=programlisting>unable to find a common type<SPAN class="gtkdoc opt">:</SPAN>
  <SPAN class="gtkdoc opt">[</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>2</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>3</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>'str'</SPAN><SPAN class="gtkdoc opt">]</SPAN>
   <SPAN class="gtkdoc opt">^        ^^^^^</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>The format of the message may change in a future version.</P>
<P><EM class=parameter><CODE>error</CODE></EM> must have come from a failed attempt to <A class=link title=g_variant_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-parse"><CODE class=function>g_variant_parse()</CODE></A> and <EM class=parameter><CODE>source_str</CODE></EM> must be exactly the same string that caused the error. If <EM class=parameter><CODE>source_str</CODE></EM> was not nul-terminated when you passed it to <A class=link title=g_variant_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-parse"><CODE class=function>g_variant_parse()</CODE></A> then you must add nul termination before using this function.</P>
<DIV class=refsect3><A name=id-1.6.19.7.121.14></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> from the <A class=link title="enum GVariantParseError" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantParseError"><SPAN class=type>GVariantParseError</SPAN></A> domain</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>source_str</P></TD>
<TD class=parameter_description>
<P>the string that was given to the parser</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.19.7.121.15></A>
<H4>Returns</H4>
<P>the printed message. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.40</P></DIV></DIV>
<DIV class=refsect1><A name=glib-GVariant.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GVariant></A>
<H3>GVariant</H3><PRE class=programlisting>typedef struct _GVariant GVariant;</PRE>
<P><A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is an opaque data structure and can only be accessed using the following functions.</P>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GVariantClass></A>
<H3>enum GVariantClass</H3>
<P>The range of possible top-level types of <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances.</P>
<DIV class=refsect3><A name=id-1.6.19.8.3.4></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-BOOLEAN:CAPS></A>G_VARIANT_CLASS_BOOLEAN</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a boolean.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-BYTE:CAPS></A>G_VARIANT_CLASS_BYTE</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a byte.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-INT16:CAPS></A>G_VARIANT_CLASS_INT16</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a signed 16 bit integer.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-UINT16:CAPS></A>G_VARIANT_CLASS_UINT16</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is an unsigned 16 bit integer.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-INT32:CAPS></A>G_VARIANT_CLASS_INT32</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a signed 32 bit integer.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-UINT32:CAPS></A>G_VARIANT_CLASS_UINT32</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is an unsigned 32 bit integer.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-INT64:CAPS></A>G_VARIANT_CLASS_INT64</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a signed 64 bit integer.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-UINT64:CAPS></A>G_VARIANT_CLASS_UINT64</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is an unsigned 64 bit integer.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-HANDLE:CAPS></A>G_VARIANT_CLASS_HANDLE</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a file handle index.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-DOUBLE:CAPS></A>G_VARIANT_CLASS_DOUBLE</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a double precision floating point value.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-STRING:CAPS></A>G_VARIANT_CLASS_STRING</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a normal string.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-OBJECT-PATH:CAPS></A>G_VARIANT_CLASS_OBJECT_PATH</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a D-Bus object path string.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-SIGNATURE:CAPS></A>G_VARIANT_CLASS_SIGNATURE</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a D-Bus signature string.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-VARIANT:CAPS></A>G_VARIANT_CLASS_VARIANT</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a variant.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-MAYBE:CAPS></A>G_VARIANT_CLASS_MAYBE</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a maybe-typed value.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-ARRAY:CAPS></A>G_VARIANT_CLASS_ARRAY</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is an array.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-TUPLE:CAPS></A>G_VARIANT_CLASS_TUPLE</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a tuple.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-CLASS-DICT-ENTRY:CAPS></A>G_VARIANT_CLASS_DICT_ENTRY</P></TD>
<TD class=enum_member_description>
<P>The <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> is a dictionary entry.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.24</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GVariantIter></A>
<H3>struct GVariantIter</H3><PRE class=programlisting>struct GVariantIter {
};
</PRE>
<P><A class=link title="struct GVariantIter" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantIter"><SPAN class=type>GVariantIter</SPAN></A> is an opaque data structure and can only be accessed using the following functions.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GVariantBuilder></A>
<H3>struct GVariantBuilder</H3><PRE class=programlisting>struct GVariantBuilder {
};
</PRE>
<P>A utility type for constructing container-type <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> instances.</P>
<P>This is an opaque structure and may only be accessed using the following functions.</P>
<P><A class=link title="struct GVariantBuilder" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantBuilder"><SPAN class=type>GVariantBuilder</SPAN></A> is not threadsafe in any way. Do not attempt to access it from more than one thread.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GVariantDict></A>
<H3>struct GVariantDict</H3><PRE class=programlisting>struct GVariantDict {
};
</PRE>
<P><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> is a mutable interface to <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> dictionaries.</P>
<P>It can be used for doing a sequence of dictionary lookups in an efficient way on an existing <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> dictionary or it can be used to construct new dictionaries with a hashtable-like interface. It can also be used for taking existing dictionaries and modifying them in order to create new ones.</P>
<P><A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> can only be used with <A class=link title=G_VARIANT_TYPE_VARDICT href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#G-VARIANT-TYPE-VARDICT:CAPS"><CODE class=literal>G_VARIANT_TYPE_VARDICT</CODE></A> dictionaries.</P>
<P>It is possible to use <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> allocated on the stack or on the heap. When using a stack-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A>, you begin with a call to <A class=link title=g_variant_dict_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-init"><CODE class=function>g_variant_dict_init()</CODE></A> and free the resources with a call to <A class=link title=g_variant_dict_clear&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-clear"><CODE class=function>g_variant_dict_clear()</CODE></A>.</P>
<P>Heap-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> follows normal refcounting rules: you allocate it with <A class=link title=g_variant_dict_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-new"><CODE class=function>g_variant_dict_new()</CODE></A> and use <A class=link title=g_variant_dict_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-ref"><CODE class=function>g_variant_dict_ref()</CODE></A> and <A class=link title=g_variant_dict_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref"><CODE class=function>g_variant_dict_unref()</CODE></A>.</P>
<P>g_variant_dict_end() is used to convert the <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> back into a dictionary-type <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>. When used with stack-allocated instances, this also implicitly frees all associated memory, but for heap-allocated instances, you must still call <A class=link title=g_variant_dict_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref"><CODE class=function>g_variant_dict_unref()</CODE></A> afterwards.</P>
<P>You will typically want to use a heap-allocated <A class=link title="struct GVariantDict" href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariantDict"><SPAN class=type>GVariantDict</SPAN></A> when you expose it as part of an API. For most other uses, the stack-allocated form will be more convenient.</P>
<P>Consider the following two examples that do the same thing in each style: take an existing dictionary and look up the "count" uint32 key, adding 1 to it if it is found, or returning an error if the key is not found. Each returns the new dictionary as a floating <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.19.8.6.12></A>
<H4>Using a stack-allocated GVariantDict</H4>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GVariant <SPAN class="gtkdoc opt">*</SPAN>
<SPAN class=function>add_to_count</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GVariant  <SPAN class="gtkdoc opt">*</SPAN>orig<SPAN class="gtkdoc opt">,</SPAN>
              GError   <SPAN class="gtkdoc opt">**</SPAN>error<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantDict dict<SPAN class="gtkdoc opt">;</SPAN>
  guint32 count<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-init">g_variant_dict_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>dict<SPAN class="gtkdoc opt">,</SPAN> orig<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-lookup">g_variant_dict_lookup</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>dict<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"count"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"u"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>count<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error">g_set_error</A></SPAN> <SPAN class="gtkdoc opt">(...);</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-clear">g_variant_dict_clear</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>dict<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=keyword>return</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-insert">g_variant_dict_insert</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>dict<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"count"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"u"</SPAN><SPAN class="gtkdoc opt">,</SPAN> count <SPAN class="gtkdoc opt">+</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-end">g_variant_dict_end</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>dict<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<DIV class=refsect3><A name=id-1.6.19.8.6.13></A>
<H4>Using heap-allocated GVariantDict</H4>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GVariant <SPAN class="gtkdoc opt">*</SPAN>
<SPAN class=function>add_to_count</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GVariant  <SPAN class="gtkdoc opt">*</SPAN>orig<SPAN class="gtkdoc opt">,</SPAN>
              GError   <SPAN class="gtkdoc opt">**</SPAN>error<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GVariantDict <SPAN class="gtkdoc opt">*</SPAN>dict<SPAN class="gtkdoc opt">;</SPAN>
  GVariant <SPAN class="gtkdoc opt">*</SPAN>result<SPAN class="gtkdoc opt">;</SPAN>
  guint32 count<SPAN class="gtkdoc opt">;</SPAN>

  dict <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-new">g_variant_dict_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>orig<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-lookup">g_variant_dict_lookup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>dict<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"count"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"u"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>count<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-insert">g_variant_dict_insert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>dict<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"count"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"u"</SPAN><SPAN class="gtkdoc opt">,</SPAN> count <SPAN class="gtkdoc opt">+</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">);</SPAN>
      result <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-end">g_variant_dict_end</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>dict<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
  <SPAN class=keyword>else</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error">g_set_error</A></SPAN> <SPAN class="gtkdoc opt">(...);</SPAN>
      result <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-GVariant.html#g-variant-dict-unref">g_variant_dict_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>dict<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>return</SPAN> result<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GVariantParseError></A>
<H3>enum GVariantParseError</H3>
<P>Error codes returned by parsing text-format GVariants.</P>
<DIV class=refsect3><A name=id-1.6.19.8.7.4></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-FAILED:CAPS></A>G_VARIANT_PARSE_ERROR_FAILED</P></TD>
<TD class=enum_member_description>
<P>generic error (unused)</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-BASIC-TYPE-EXPECTED:CAPS></A>G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED</P></TD>
<TD class=enum_member_description>
<P>a non-basic <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> was given where a basic type was expected</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-CANNOT-INFER-TYPE:CAPS></A>G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE</P></TD>
<TD class=enum_member_description>
<P>cannot infer the <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-DEFINITE-TYPE-EXPECTED:CAPS></A>G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED</P></TD>
<TD class=enum_member_description>
<P>an indefinite <A class=link title=GVariantType href="https://developer.gnome.org/glib/stable/glib-GVariantType.html#GVariantType"><SPAN class=type>GVariantType</SPAN></A> was given where a definite type was expected</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-INPUT-NOT-AT-END:CAPS></A>G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END</P></TD>
<TD class=enum_member_description>
<P>extra data after parsing finished</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-INVALID-CHARACTER:CAPS></A>G_VARIANT_PARSE_ERROR_INVALID_CHARACTER</P></TD>
<TD class=enum_member_description>
<P>invalid character in number or unicode escape</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-INVALID-FORMAT-STRING:CAPS></A>G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING</P></TD>
<TD class=enum_member_description>
<P>not a valid <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> format string</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-INVALID-OBJECT-PATH:CAPS></A>G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH</P></TD>
<TD class=enum_member_description>
<P>not a valid object path</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-INVALID-SIGNATURE:CAPS></A>G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE</P></TD>
<TD class=enum_member_description>
<P>not a valid type signature</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-INVALID-TYPE-STRING:CAPS></A>G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING</P></TD>
<TD class=enum_member_description>
<P>not a valid <A class=link title=GVariant href="https://developer.gnome.org/glib/stable/glib-GVariant.html#GVariant"><SPAN class=type>GVariant</SPAN></A> type string</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-NO-COMMON-TYPE:CAPS></A>G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE</P></TD>
<TD class=enum_member_description>
<P>could not find a common type for array entries</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-NUMBER-OUT-OF-RANGE:CAPS></A>G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE</P></TD>
<TD class=enum_member_description>
<P>the numerical value is out of range of the given type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-NUMBER-TOO-BIG:CAPS></A>G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG</P></TD>
<TD class=enum_member_description>
<P>the numerical value is out of range for any type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-TYPE-ERROR:CAPS></A>G_VARIANT_PARSE_ERROR_TYPE_ERROR</P></TD>
<TD class=enum_member_description>
<P>cannot parse as variant of the specified type</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-UNEXPECTED-TOKEN:CAPS></A>G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN</P></TD>
<TD class=enum_member_description>
<P>an unexpected token was encountered</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-UNKNOWN-KEYWORD:CAPS></A>G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD</P></TD>
<TD class=enum_member_description>
<P>an unknown keyword was encountered</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-UNTERMINATED-STRING-CONSTANT:CAPS></A>G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT</P></TD>
<TD class=enum_member_description>
<P>unterminated string constant</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-VARIANT-PARSE-ERROR-VALUE-EXPECTED:CAPS></A>G_VARIANT_PARSE_ERROR_VALUE_EXPECTED</P></TD>
<TD class=enum_member_description>
<P>no value given</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-GVariant.see-also></A>
<H2>See Also</H2>
<P>GVariantType</P></DIV>