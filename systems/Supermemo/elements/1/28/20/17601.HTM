<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-The-Main-Event-Loop.top_of_page></A>The Main Event Loop</SPAN></H2>
<P>The Main Event Loop &#8212; manages all available sources of events</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-The-Main-Event-Loop.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=returnvalue>GMainLoop</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_loop_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-new">g_main_loop_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=returnvalue>GMainLoop</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_loop_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-ref">g_main_loop_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_loop_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-unref">g_main_loop_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run">g_main_loop_run</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_loop_quit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-quit">g_main_loop_quit</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_loop_is_running&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-is-running">g_main_loop_is_running</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_loop_get_context&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-get-context">g_main_loop_get_context</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_new() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-new">g_main_new</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_destroy() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-destroy">g_main_destroy</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_run() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-run">g_main_run</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_quit() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-quit">g_main_quit</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_is_running() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-is-running">g_main_is_running</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-new">g_main_context_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-ref">g_main_context_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-unref">g_main_context_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-default">g_main_context_default</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration">g_main_context_iteration</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_iteration() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-iteration">g_main_iteration</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_pending&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-pending">g_main_context_pending</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_pending href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-pending">g_main_pending</A></TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_find_source_by_id&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-find-source-by-id">g_main_context_find_source_by_id</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_find_source_by_user_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-find-source-by-user-data">g_main_context_find_source_by_user_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_find_source_by_funcs_user_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-find-source-by-funcs-user-data">g_main_context_find_source_by_funcs_user_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_wakeup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-wakeup">g_main_context_wakeup</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire">g_main_context_acquire</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_release&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-release">g_main_context_release</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_is_owner&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-is-owner">g_main_context_is_owner</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_wait&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-wait">g_main_context_wait</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_prepare&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-prepare">g_main_context_prepare</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_query&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-query">g_main_context_query</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_check&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-check">g_main_context_check</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_dispatch&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-dispatch">g_main_context_dispatch</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_set_poll_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-set-poll-func">g_main_context_set_poll_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GPollFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFunc"><SPAN class=returnvalue>GPollFunc</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_context_get_poll_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-get-poll-func">g_main_context_get_poll_func</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GPollFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFunc">*GPollFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_add_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-add-poll">g_main_context_add_poll</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_remove_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-remove-poll">g_main_context_remove_poll</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_main_depth&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-depth">g_main_depth</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_current_source&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-current-source">g_main_current_source</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_main_set_poll_func() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-set-poll-func">g_main_set_poll_func</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_invoke&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-invoke">g_main_context_invoke</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_invoke_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-invoke-full">g_main_context_invoke_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_get_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-get-thread-default">g_main_context_get_thread_default</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_main_context_ref_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-ref-thread-default">g_main_context_ref_thread_default</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_push_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-push-thread-default">g_main_context_push_thread_default</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_main_context_pop_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-pop-thread-default">g_main_context_pop_thread_default</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_timeout_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-source-new">g_timeout_source_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_timeout_source_new_seconds&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-source-new-seconds">g_timeout_source_new_seconds</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add">g_timeout_add</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_timeout_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-full">g_timeout_add_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_timeout_add_seconds&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-seconds">g_timeout_add_seconds</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_timeout_add_seconds_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-seconds-full">g_timeout_add_seconds_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_idle_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-source-new">g_idle_source_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add">g_idle_add</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_idle_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add-full">g_idle_add_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_idle_remove_by_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-remove-by-data">g_idle_remove_by_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GChildWatchFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GChildWatchFunc">*GChildWatchFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_child_watch_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-source-new">g_child_watch_source_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_child_watch_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-add">g_child_watch_add</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_child_watch_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-add-full">g_child_watch_add_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-poll">g_poll</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GSourceDummyMarshal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceDummyMarshal">*GSourceDummyMarshal</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-new">g_source_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_source_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-ref">g_source_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-unref">g_source_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_funcs&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-funcs">g_source_set_funcs</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach">g_source_attach</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_destroy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-destroy">g_source_destroy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_is_destroyed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-is-destroyed">g_source_is_destroyed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_priority&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-priority">g_source_set_priority</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_get_priority&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-priority">g_source_get_priority</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_can_recurse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-can-recurse">g_source_set_can_recurse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_get_can_recurse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-can-recurse">g_source_get_can_recurse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_get_id&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-id">g_source_get_id</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <SPAN class=returnvalue>char</SPAN>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_source_get_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-name">g_source_get_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-name">g_source_set_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_name_by_id&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-name-by-id">g_source_set_name_by_id</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_source_get_context&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-context">g_source_get_context</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_callback&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-callback">g_source_set_callback</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc">*GSourceFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_callback_indirect&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-callback-indirect">g_source_set_callback_indirect</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_set_ready_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-ready-time">g_source_set_ready_time</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_get_ready_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-ready-time">g_source_get_ready_time</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd">g_source_add_unix_fd</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_remove_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-unix-fd">g_source_remove_unix_fd</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_modify_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-modify-unix-fd">g_source_modify_unix_fd</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="enum GIOCondition" href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOCondition"><SPAN class=returnvalue>GIOCondition</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_query_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-query-unix-fd">g_source_query_unix_fd</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_add_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-poll">g_source_add_poll</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_remove_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-poll">g_source_remove_poll</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_add_child_source&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-child-source">g_source_add_child_source</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_remove_child_source&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-child-source">g_source_remove_child_source</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_get_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-time">g_source_get_time</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_source_get_current_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-current-time">g_source_get_current_time</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove">g_source_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_remove_by_funcs_user_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-by-funcs-user-data">g_source_remove_by_funcs_user_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_source_remove_by_user_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-by-user-data">g_source_remove_by_user_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-The-Main-Event-Loop.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop">GMainLoop</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_PRIORITY_HIGH href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH:CAPS">G_PRIORITY_HIGH</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS">G_PRIORITY_DEFAULT</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_PRIORITY_HIGH_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH-IDLE:CAPS">G_PRIORITY_HIGH_IDLE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_PRIORITY_DEFAULT_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT-IDLE:CAPS">G_PRIORITY_DEFAULT_IDLE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_PRIORITY_LOW href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-LOW:CAPS">G_PRIORITY_LOW</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_SOURCE_CONTINUE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-SOURCE-CONTINUE:CAPS">G_SOURCE_CONTINUE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_SOURCE_REMOVE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-SOURCE-REMOVE:CAPS">G_SOURCE_REMOVE</A></TD></TR>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext">GMainContext</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid">GPid</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD">GPollFD</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_POLLFD_FORMAT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-POLLFD-FORMAT:CAPS">G_POLLFD_FORMAT</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource">GSource</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs">GSourceFuncs</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GSourceCallbackFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceCallbackFuncs">GSourceCallbackFuncs</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-The-Main-Event-Loop.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-The-Main-Event-Loop.description></A>
<H2>Description</H2>
<P>The main event loop manages all the available sources of events for GLib and GTK+ applications. These events can come from any number of different types of sources such as file descriptors (plain files, pipes or sockets) and timeouts. New types of event sources can also be added using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>.</P>
<P>To allow multiple independent sets of sources to be handled in different threads, each source is associated with a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>. A GMainContext can only be running in a single thread, but sources can be added to it and removed from it from other threads.</P>
<P>Each event source is assigned a priority. The default priority, <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A>, is 0. Values less than 0 denote higher priorities. Values greater than 0 denote lower priorities. Events from high priority sources are always processed before events from lower priority sources.</P>
<P>Idle functions can also be added, and assigned a priority. These will be run whenever no events with a higher priority are ready to be processed.</P>
<P>The <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> data type represents a main event loop. A GMainLoop is created with <A class=link title=g_main_loop_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-new"><CODE class=function>g_main_loop_new()</CODE></A>. After adding the initial event sources, <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A> is called. This continuously checks for new events from each of the event sources and dispatches them. Finally, the processing of an event from one of the sources leads to a call to <A class=link title=g_main_loop_quit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-quit"><CODE class=function>g_main_loop_quit()</CODE></A> to exit the main loop, and <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A> returns.</P>
<P>It is possible to create new instances of <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> recursively. This is often used in GTK+ applications when showing modal dialog boxes. Note that event sources are associated with a particular <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, and will be checked and dispatched for all main loops associated with that GMainContext.</P>
<P>GTK+ contains wrappers of some of these functions, e.g. <CODE class=function>gtk_main()</CODE>, <CODE class=function>gtk_main_quit()</CODE> and <CODE class=function>gtk_events_pending()</CODE>.</P>
<DIV class=refsect3><A name=id-1.4.2.6.9></A>
<H4>Creating new source types</H4>
<P>One of the unusual features of the <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> functionality is that new types of event source can be created and used in addition to the builtin type of event source. A new event source type is used for handling GDK events. A new source type is created by "deriving" from the <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> structure. The derived type of source is represented by a structure that has the <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> structure as a first element, and other elements specific to the new source type. To create an instance of the new source type, call <A class=link title=g_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-new"><CODE class=function>g_source_new()</CODE></A> passing in the size of the derived structure and a table of functions. These <A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> determine the behavior of the new source type.</P>
<P>New source types basically interact with the main context in two ways. Their prepare function in <A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> can set a timeout to determine the maximum amount of time that the main loop will sleep before checking the source again. In addition, or as well, the source can add file descriptors to the set that the main context checks using <A class=link title=g_source_add_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-poll"><CODE class=function>g_source_add_poll()</CODE></A>.</P></DIV>
<DIV class=refsect3><A name=id-1.4.2.6.10></A>
<H4>Customizing the main loop iteration</H4>
<P>Single iterations of a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> can be run with <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A>. In some cases, more detailed control of exactly how the details of the main loop work is desired, for instance, when integrating the <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> with an external main loop. In such cases, you can call the component functions of <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A> directly. These functions are <A class=link title=g_main_context_prepare&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-prepare"><CODE class=function>g_main_context_prepare()</CODE></A>, <A class=link title=g_main_context_query&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-query"><CODE class=function>g_main_context_query()</CODE></A>, <A class=link title=g_main_context_check&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-check"><CODE class=function>g_main_context_check()</CODE></A> and <A class=link title=g_main_context_dispatch&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-dispatch"><CODE class=function>g_main_context_dispatch()</CODE></A>.</P></DIV>
<DIV class=refsect3><A name=mainloop-states></A>
<H4>State of a Main Context</H4>
<P>The operation of these functions can best be seen in terms of a state diagram, as shown in this image.</P>
<P><SPAN class=inlinemediaobject><IMG src="https://developer.gnome.org/glib/stable/mainloop-states.gif"></IMG></SPAN></P>
<P>On UNIX, the GLib mainloop is incompatible with <CODE class=function>fork()</CODE>. Any program using the mainloop must either <CODE class=function>exec()</CODE> or <CODE class=function>exit()</CODE> from the child without returning to the mainloop.</P></DIV></DIV>
<DIV class=refsect1><A name=glib-The-Main-Event-Loop.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-main-loop-new></A>
<H3>g_main_loop_new&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=returnvalue>GMainLoop</SPAN></A>&nbsp;*
g_main_loop_new (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> is_running</CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> structure.</P>
<DIV class=refsect3><A name=id-1.4.2.7.2.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (if <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the default context will be used). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>is_running</P></TD>
<TD class=parameter_description>
<P>set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> to indicate that the loop is running. This is not very important since calling <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A> will set this to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> anyway.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.2.6></A>
<H4>Returns</H4>
<P>a new <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-loop-ref></A>
<H3>g_main_loop_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=returnvalue>GMainLoop</SPAN></A>&nbsp;*
g_main_loop_ref (<EM class=parameter><CODE><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> *loop</CODE></EM>);</PRE>
<P>Increases the reference count on a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> object by one.</P>
<DIV class=refsect3><A name=id-1.4.2.7.3.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.3.6></A>
<H4>Returns</H4>
<P><EM class=parameter><CODE>loop</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-loop-unref></A>
<H3>g_main_loop_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_loop_unref (<EM class=parameter><CODE><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> *loop</CODE></EM>);</PRE>
<P>Decreases the reference count on a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> object by one. If the result is zero, free the loop and free all associated memory.</P>
<DIV class=refsect3><A name=id-1.4.2.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-loop-run></A>
<H3>g_main_loop_run&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_loop_run (<EM class=parameter><CODE><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> *loop</CODE></EM>);</PRE>
<P>Runs a main loop until <A class=link title=g_main_loop_quit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-quit"><CODE class=function>g_main_loop_quit()</CODE></A> is called on the loop. If this is called for the thread of the loop's <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, it will process events from the loop, otherwise it will simply wait.</P>
<DIV class=refsect3><A name=id-1.4.2.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-loop-quit></A>
<H3>g_main_loop_quit&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_loop_quit (<EM class=parameter><CODE><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> *loop</CODE></EM>);</PRE>
<P>Stops a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> from running. Any calls to <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A> for the loop will return. </P>
<P>Note that sources that have already been dispatched when <A class=link title=g_main_loop_quit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-quit"><CODE class=function>g_main_loop_quit()</CODE></A> is called will still be executed.</P>
<DIV class=refsect3><A name=id-1.4.2.7.6.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-loop-is-running></A>
<H3>g_main_loop_is_running&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_loop_is_running (<EM class=parameter><CODE><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> *loop</CODE></EM>);</PRE>
<P>Checks to see if the main loop is currently being run via <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.7.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the mainloop is currently being run.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-loop-get-context></A>
<H3>g_main_loop_get_context&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_main_loop_get_context (<EM class=parameter><CODE><A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> *loop</CODE></EM>);</PRE>
<P>Returns the <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> of <EM class=parameter><CODE>loop</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.4.2.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.8.6></A>
<H4>Returns</H4>
<P>the <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> of <EM class=parameter><CODE>loop</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-new></A>
<H3>g_main_new()</H3><PRE class=programlisting>#define             g_main_new(is_running)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_new</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_loop_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-new"><CODE class=function>g_main_loop_new()</CODE></A> instead</P></DIV>
<P>Creates a new <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> for th default main context.</P>
<DIV class=refsect3><A name=id-1.4.2.7.9.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>is_running</P></TD>
<TD class=parameter_description>
<P>set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> to indicate that the loop is running. This is not very important since calling <A class=link title=g_main_run() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-run"><CODE class=function>g_main_run()</CODE></A> will set this to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> anyway.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.9.7></A>
<H4>Returns</H4>
<P>a new <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-destroy></A>
<H3>g_main_destroy()</H3><PRE class=programlisting>#define             g_main_destroy(loop)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_destroy</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_loop_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-unref"><CODE class=function>g_main_loop_unref()</CODE></A> instead</P></DIV>
<P>Frees the memory allocated for the <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.10.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-run></A>
<H3>g_main_run()</H3><PRE class=programlisting>#define             g_main_run(loop)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_run</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A> instead</P></DIV>
<P>Runs a main loop until it stops running.</P>
<DIV class=refsect3><A name=id-1.4.2.7.11.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-quit></A>
<H3>g_main_quit()</H3><PRE class=programlisting>#define             g_main_quit(loop)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_quit</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_loop_quit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-quit"><CODE class=function>g_main_loop_quit()</CODE></A> instead</P></DIV>
<P>Stops the <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>. If <A class=link title=g_main_run() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-run"><CODE class=function>g_main_run()</CODE></A> was called to run the <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>, it will now return.</P>
<DIV class=refsect3><A name=id-1.4.2.7.12.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-is-running></A>
<H3>g_main_is_running()</H3><PRE class=programlisting>#define             g_main_is_running(loop)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_is_running</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_loop_is_running&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-is-running"><CODE class=function>g_main_loop_is_running()</CODE></A> instead</P></DIV>
<P>Checks if the main loop is running.</P>
<DIV class=refsect3><A name=id-1.4.2.7.13.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>loop</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.13.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the main loop is running</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-new></A>
<H3>g_main_context_new&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_main_context_new (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> structure.</P>
<DIV class=refsect3><A name=id-1.4.2.7.14.5></A>
<H4>Returns</H4>
<P>the new <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-ref></A>
<H3>g_main_context_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_main_context_ref (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Increases the reference count on a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> object by one.</P>
<DIV class=refsect3><A name=id-1.4.2.7.15.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.15.6></A>
<H4>Returns</H4>
<P>the <EM class=parameter><CODE>context</CODE></EM> that was passed in (since 2.6)</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-unref></A>
<H3>g_main_context_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_unref (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Decreases the reference count on a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> object by one. If the result is zero, free the context and free all associated memory.</P>
<DIV class=refsect3><A name=id-1.4.2.7.16.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-default></A>
<H3>g_main_context_default&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_main_context_default (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns the global default main context. This is the main context used for main loop functions when a main loop is not explicitly specified, and corresponds to the "main" main loop. See also <A class=link title=g_main_context_get_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-get-thread-default"><CODE class=function>g_main_context_get_thread_default()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.17.5></A>
<H4>Returns</H4>
<P>the global default main context. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-iteration></A>
<H3>g_main_context_iteration&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_context_iteration (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> may_block</CODE></EM>);</PRE>
<P>Runs a single iteration for the given main loop. This involves checking to see if any event sources are ready to be processed, then if no events sources are ready and <EM class=parameter><CODE>may_block</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, waiting for a source to become ready, then dispatching the highest priority events sources that are ready. Otherwise, if <EM class=parameter><CODE>may_block</CODE></EM> is <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> sources are not waited to become ready, only those highest priority events sources will be dispatched (if any), that are ready at this given moment without further waiting.</P>
<P>Note that even when <EM class=parameter><CODE>may_block</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, it is still possible for <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A> to return <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, since the wait may be interrupted for other reasons than an event source becoming ready.</P>
<DIV class=refsect3><A name=id-1.4.2.7.18.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (if <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the default context will be used). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>may_block</P></TD>
<TD class=parameter_description>
<P>whether the call may block.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.18.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if events were dispatched.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-iteration></A>
<H3>g_main_iteration()</H3><PRE class=programlisting>#define             g_main_iteration(may_block)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_iteration</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A> instead.</P></DIV>
<P>Runs a single iteration for the default <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.19.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>may_block</P></TD>
<TD class=parameter_description>
<P>set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if it should block (i.e. wait) until an event source becomes ready. It will return after an event source has been processed. If set to <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> it will return immediately if no event source is ready to be processed.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.19.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if more events are pending.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-pending></A>
<H3>g_main_context_pending&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_context_pending (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Checks if any sources have pending events for the given context.</P>
<DIV class=refsect3><A name=id-1.4.2.7.20.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (if <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the default context will be used). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.20.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if events are pending.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-pending></A>
<H3>g_main_pending</H3><PRE class=programlisting>#define             g_main_pending()</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_pending</CODE> is deprecated and should not be used in newly-written code.</P></DIV>
<P>Checks if any events are pending for the default <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (i.e. ready to be processed).</P>
<DIV class=refsect3><A name=id-1.4.2.7.21.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if any events are pending.</P>
<P>Deprected: 2.2: Use <A class=link title=g_main_context_pending&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-pending"><CODE class=function>g_main_context_pending()</CODE></A> instead.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-find-source-by-id></A>
<H3>g_main_context_find_source_by_id&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_main_context_find_source_by_id (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                                  <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> source_id</CODE></EM>);</PRE>
<P>Finds a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> given a pair of context and ID.</P>
<P>It is a programmer error to attempt to lookup a non-existent source.</P>
<P>More specifically: source IDs can be reissued after a source has been destroyed and therefore it is never valid to use this function with a source ID which may have already been removed. An example is when scheduling an idle to run in another thread with <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>: the idle may already have run and been removed by the time this function is called on its (now invalid) source ID. This source ID may have been reissued, leading to the operation being performed against the wrong source.</P>
<DIV class=refsect3><A name=id-1.4.2.7.22.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (if <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the default context will be used). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>source_id</P></TD>
<TD class=parameter_description>
<P>the source ID, as returned by <A class=link title=g_source_get_id&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-id"><CODE class=function>g_source_get_id()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.22.8></A>
<H4>Returns</H4>
<P>the <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-find-source-by-user-data></A>
<H3>g_main_context_find_source_by_user_data&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_main_context_find_source_by_user_data
                               (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Finds a source with the given user data for the callback. If multiple sources exist with the same user data, the first one found will be returned.</P>
<DIV class=refsect3><A name=id-1.4.2.7.23.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>the user_data for the callback.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.23.6></A>
<H4>Returns</H4>
<P>the source, if one was found, otherwise <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-find-source-by-funcs-user-data></A>
<H3>g_main_context_find_source_by_funcs_user_data&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_main_context_find_source_by_funcs_user_data
                               (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> *funcs</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Finds a source with the given source functions and user data. If multiple sources exist with the same source function and user data, the first one found will be returned.</P>
<DIV class=refsect3><A name=id-1.4.2.7.24.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (if <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the default context will be used). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>funcs</P></TD>
<TD class=parameter_description>
<P>the <EM class=parameter><CODE>source_funcs</CODE></EM> passed to <A class=link title=g_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-new"><CODE class=function>g_source_new()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>the user data from the callback.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.24.6></A>
<H4>Returns</H4>
<P>the source, if one was found, otherwise <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-wakeup></A>
<H3>g_main_context_wakeup&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_wakeup (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>If <EM class=parameter><CODE>context</CODE></EM> is currently blocking in <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A> waiting for a source to become ready, cause it to stop blocking and return. Otherwise, cause the next invocation of <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A> to return without blocking.</P>
<P>This API is useful for low-level control over <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>; for example, integrating it with main loop implementations such as <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A>.</P>
<P>Another related use for this function is when implementing a main loop with a termination condition, computed from multiple threads:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc ppc">#define NUM_TASKS 10</SPAN>
<SPAN class="gtkdoc kwb">static</SPAN> <SPAN class="gtkdoc kwc">volatile</SPAN> gint tasks_remaining <SPAN class="gtkdoc opt">=</SPAN> NUM_TASKS<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">...</SPAN>
 
<SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Atomic-Operations.html#g-atomic-int-get">g_atomic_int_get</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>tasks_remaining<SPAN class="gtkdoc opt">) !=</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration">g_main_context_iteration</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">,</SPAN> TRUE<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Then in a thread:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=function>perform_work</SPAN><SPAN class="gtkdoc opt">();</SPAN>

<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Atomic-Operations.html#g-atomic-int-dec-and-test">g_atomic_int_dec_and_test</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>tasks_remaining<SPAN class="gtkdoc opt">))</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-wakeup">g_main_context_wakeup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.4.2.7.25.12></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-acquire></A>
<H3>g_main_context_acquire&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_context_acquire (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Tries to become the owner of the specified context. If some other thread is the owner of the context, returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> immediately. Ownership is properly recursive: the owner can require ownership again and will release ownership when <A class=link title=g_main_context_release&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-release"><CODE class=function>g_main_context_release()</CODE></A> is called as many times as <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A>.</P>
<P>You must be the owner of a context before you can call <A class=link title=g_main_context_prepare&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-prepare"><CODE class=function>g_main_context_prepare()</CODE></A>, <A class=link title=g_main_context_query&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-query"><CODE class=function>g_main_context_query()</CODE></A>, <A class=link title=g_main_context_check&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-check"><CODE class=function>g_main_context_check()</CODE></A>, <A class=link title=g_main_context_dispatch&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-dispatch"><CODE class=function>g_main_context_dispatch()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.26.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.26.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the operation succeeded, and this thread is now the owner of <EM class=parameter><CODE>context</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-release></A>
<H3>g_main_context_release&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_release (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Releases ownership of a context previously acquired by this thread with <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A>. If the context was acquired multiple times, the ownership will be released only when <A class=link title=g_main_context_release&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-release"><CODE class=function>g_main_context_release()</CODE></A> is called as many times as it was acquired.</P>
<DIV class=refsect3><A name=id-1.4.2.7.27.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-is-owner></A>
<H3>g_main_context_is_owner&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_context_is_owner (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Determines whether this thread holds the (recursive) ownership of this <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>. This is useful to know before waiting on another thread that may be blocking to get ownership of <EM class=parameter><CODE>context</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.4.2.7.28.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.28.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if current thread is owner of <EM class=parameter><CODE>context</CODE></EM> .</P>
<P></P></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-wait></A>
<H3>g_main_context_wait&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_context_wait (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title="struct GCond" href="https://developer.gnome.org/glib/stable/glib-Threads.html#GCond"><SPAN class=type>GCond</SPAN></A> *cond</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title="union GMutex" href="https://developer.gnome.org/glib/stable/glib-Threads.html#GMutex"><SPAN class=type>GMutex</SPAN></A> *mutex</CODE></EM>);</PRE>
<P>Tries to become the owner of the specified context, as with <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A>. But if another thread is the owner, atomically drop <EM class=parameter><CODE>mutex</CODE></EM> and wait on <EM class=parameter><CODE>cond</CODE></EM> until that owner releases ownership or until <EM class=parameter><CODE>cond</CODE></EM> is signaled, then try again (once) to become the owner.</P>
<DIV class=refsect3><A name=id-1.4.2.7.29.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>cond</P></TD>
<TD class=parameter_description>
<P>a condition variable</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>mutex</P></TD>
<TD class=parameter_description>
<P>a mutex, currently held</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.29.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the operation succeeded, and this thread is now the owner of <EM class=parameter><CODE>context</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-prepare></A>
<H3>g_main_context_prepare&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_main_context_prepare (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> *priority</CODE></EM>);</PRE>
<P>Prepares to poll sources within a main loop. The resulting information for polling is determined by calling <A class=link title=g_main_context_query&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-query"><CODE class=function>g_main_context_query()</CODE></A>.</P>
<P>You must have successfully acquired the context with <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A> before you may call this function.</P>
<DIV class=refsect3><A name=id-1.4.2.7.30.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>location to store priority of highest priority source already ready.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.30.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if some source is ready to be dispatched prior to polling.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-query></A>
<H3>g_main_context_query&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_main_context_query (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> max_priority</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> *timeout_</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fds</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> n_fds</CODE></EM>);</PRE>
<P>Determines information necessary to poll this main loop.</P>
<P>You must have successfully acquired the context with <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A> before you may call this function.</P>
<DIV class=refsect3><A name=id-1.4.2.7.31.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>max_priority</P></TD>
<TD class=parameter_description>
<P>maximum priority source to check</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>timeout_</P></TD>
<TD class=parameter_description>
<P>location to store timeout to be used in polling. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>fds</P></TD>
<TD class=parameter_description>
<P>location to store <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> records that need to be polled. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Out parameter, where caller must allocate storage."><SPAN class=acronym>out caller-allocates</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_fds]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_fds</P></TD>
<TD class=parameter_description>
<P>length of <EM class=parameter><CODE>fds</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.31.7></A>
<H4>Returns</H4>
<P>the number of records actually stored in <EM class=parameter><CODE>fds</CODE></EM> , or, if more than <EM class=parameter><CODE>n_fds</CODE></EM> records need to be stored, the number of records that need to be stored.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-check></A>
<H3>g_main_context_check&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_main_context_check (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> max_priority</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fds</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> n_fds</CODE></EM>);</PRE>
<P>Passes the results of polling back to the main loop.</P>
<P>You must have successfully acquired the context with <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A> before you may call this function.</P>
<DIV class=refsect3><A name=id-1.4.2.7.32.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>max_priority</P></TD>
<TD class=parameter_description>
<P>the maximum numerical priority of sources to check</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fds</P></TD>
<TD class=parameter_description>
<P>array of <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A>'s that was passed to the last call to <A class=link title=g_main_context_query&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-query"><CODE class=function>g_main_context_query()</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_fds]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_fds</P></TD>
<TD class=parameter_description>
<P>return value of <A class=link title=g_main_context_query&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-query"><CODE class=function>g_main_context_query()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.32.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if some sources are ready to be dispatched.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-dispatch></A>
<H3>g_main_context_dispatch&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_dispatch (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Dispatches all pending sources.</P>
<P>You must have successfully acquired the context with <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A> before you may call this function.</P>
<DIV class=refsect3><A name=id-1.4.2.7.33.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-set-poll-func></A>
<H3>g_main_context_set_poll_func&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_set_poll_func (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title=GPollFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFunc"><SPAN class=type>GPollFunc</SPAN></A> func</CODE></EM>);</PRE>
<P>Sets the function to use to handle polling of file descriptors. It will be used instead of the <CODE class=function>poll()</CODE> system call (or GLib's replacement function, which is used where <CODE class=function>poll()</CODE> isn't available).</P>
<P>This function could possibly be used to integrate the GLib event loop with an external event loop.</P>
<DIV class=refsect3><A name=id-1.4.2.7.34.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call to poll all file descriptors</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-get-poll-func></A>
<H3>g_main_context_get_poll_func&nbsp;()</H3><PRE class=programlisting><A class=link title=GPollFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFunc"><SPAN class=returnvalue>GPollFunc</SPAN></A>
g_main_context_get_poll_func (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Gets the poll function set by <A class=link title=g_main_context_set_poll_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-set-poll-func"><CODE class=function>g_main_context_set_poll_func()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.35.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.35.6></A>
<H4>Returns</H4>
<P>the poll function</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPollFunc></A>
<H3>GPollFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GPollFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *ufds</CODE></EM>,
              <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> nfsd</CODE></EM>,
              <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> timeout_</CODE></EM>);</PRE>
<P>Specifies the type of function passed to <A class=link title=g_main_context_set_poll_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-set-poll-func"><CODE class=function>g_main_context_set_poll_func()</CODE></A>. The semantics of the function should match those of the <CODE class=function>poll()</CODE> system call.</P>
<DIV class=refsect3><A name=id-1.4.2.7.36.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>ufds</P></TD>
<TD class=parameter_description>
<P>an array of <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> elements</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nfsd</P></TD>
<TD class=parameter_description>
<P>the number of elements in <EM class=parameter><CODE>ufds</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>timeout_</P></TD>
<TD class=parameter_description>
<P>the maximum time to wait for an event of the file descriptors. A negative value indicates an infinite timeout.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.36.6></A>
<H4>Returns</H4>
<P>the number of <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> elements which have events or errors reported, or -1 if an error occurred.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-add-poll></A>
<H3>g_main_context_add_poll&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_add_poll (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fd</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>);</PRE>
<P>Adds a file descriptor to the set of file descriptors polled for this context. This will very seldom be used directly. Instead a typical event source will use <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A> instead.</P>
<DIV class=refsect3><A name=id-1.4.2.7.37.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for the default context). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> structure holding information about a file descriptor to watch.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the priority for this file descriptor which should be the same as the priority used for <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A> to ensure that the file descriptor is polled whenever the results may be needed.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-remove-poll></A>
<H3>g_main_context_remove_poll&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_remove_poll (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fd</CODE></EM>);</PRE>
<P>Removes file descriptor from the set of file descriptors to be polled for a particular context.</P>
<DIV class=refsect3><A name=id-1.4.2.7.38.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> descriptor previously added with <A class=link title=g_main_context_add_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-add-poll"><CODE class=function>g_main_context_add_poll()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-depth></A>
<H3>g_main_depth&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_main_depth (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns the depth of the stack of calls to <A class=link title=g_main_context_dispatch&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-dispatch"><CODE class=function>g_main_context_dispatch()</CODE></A> on any <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> in the current thread. That is, when called from the toplevel, it gives 0. When called from within a callback from <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A> (or <A class=link title=g_main_loop_run&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-loop-run"><CODE class=function>g_main_loop_run()</CODE></A>, etc.) it returns 1. When called from within a callback to a recursive call to <A class=link title=g_main_context_iteration&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration"><CODE class=function>g_main_context_iteration()</CODE></A>, it returns 2. And so forth.</P>
<P>This function is useful in a situation like the following: Imagine an extremely simple "garbage collected" system.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static</SPAN> GList <SPAN class="gtkdoc opt">*</SPAN>free_list<SPAN class="gtkdoc opt">;</SPAN>

gpointer
<SPAN class=function>allocate_memory</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gsize size<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN> 
  gpointer result <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-malloc">g_malloc</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>size<SPAN class="gtkdoc opt">);</SPAN>
  free_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>free_list<SPAN class="gtkdoc opt">,</SPAN> result<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>return</SPAN> result<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>free_allocated_memory</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GList <SPAN class="gtkdoc opt">*</SPAN>l<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=keyword>for</SPAN> <SPAN class="gtkdoc opt">(</SPAN>l <SPAN class="gtkdoc opt">=</SPAN> free_list<SPAN class="gtkdoc opt">;</SPAN> l<SPAN class="gtkdoc opt">;</SPAN> l <SPAN class="gtkdoc opt">=</SPAN> l<SPAN class="gtkdoc opt">-&gt;</SPAN>next<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>l<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free">g_list_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>free_list<SPAN class="gtkdoc opt">);</SPAN>
  free_list <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
 <SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc opt">[...]</SPAN>

<SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN>TRUE<SPAN class="gtkdoc opt">);</SPAN> 
 <SPAN class="gtkdoc opt">{</SPAN>
   <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-iteration">g_main_context_iteration</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">,</SPAN> TRUE<SPAN class="gtkdoc opt">);</SPAN>
   <SPAN class=function>free_allocated_memory</SPAN><SPAN class="gtkdoc opt">();</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This works from an application, however, if you want to do the same thing from a library, it gets more difficult, since you no longer control the main loop. You might think you can simply use an idle function to make the call to <CODE class=function>free_allocated_memory()</CODE>, but that doesn't work, since the idle function could be called from a recursive callback. This can be fixed by using <A class=link title=g_main_depth&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-depth"><CODE class=function>g_main_depth()</CODE></A></P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30</PRE></TD>
<TD class=listing_code><PRE class=programlisting>gpointer
<SPAN class=function>allocate_memory</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gsize size<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN> 
  FreeListBlock <SPAN class="gtkdoc opt">*</SPAN>block <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-new">g_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>FreeListBlock<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  block<SPAN class="gtkdoc opt">-&gt;</SPAN>mem <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-malloc">g_malloc</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>size<SPAN class="gtkdoc opt">);</SPAN>
  block<SPAN class="gtkdoc opt">-&gt;</SPAN>depth <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-depth">g_main_depth</A></SPAN> <SPAN class="gtkdoc opt">();</SPAN>   
  free_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>free_list<SPAN class="gtkdoc opt">,</SPAN> block<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=keyword>return</SPAN> block<SPAN class="gtkdoc opt">-&gt;</SPAN>mem<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>free_allocated_memory</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GList <SPAN class="gtkdoc opt">*</SPAN>l<SPAN class="gtkdoc opt">;</SPAN>
  
  <SPAN class="gtkdoc kwb">int</SPAN> depth <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-depth">g_main_depth</A></SPAN> <SPAN class="gtkdoc opt">();</SPAN>
  <SPAN class=keyword>for</SPAN> <SPAN class="gtkdoc opt">(</SPAN>l <SPAN class="gtkdoc opt">=</SPAN> free_list<SPAN class="gtkdoc opt">;</SPAN> l<SPAN class="gtkdoc opt">; );</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      GList <SPAN class="gtkdoc opt">*</SPAN>next <SPAN class="gtkdoc opt">=</SPAN> l<SPAN class="gtkdoc opt">-&gt;</SPAN>next<SPAN class="gtkdoc opt">;</SPAN>
      FreeListBlock <SPAN class="gtkdoc opt">*</SPAN>block <SPAN class="gtkdoc opt">=</SPAN> l<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">;</SPAN>
      <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>block<SPAN class="gtkdoc opt">-&gt;</SPAN>depth <SPAN class="gtkdoc opt">&gt;</SPAN> depth<SPAN class="gtkdoc opt">)</SPAN>
        <SPAN class="gtkdoc opt">{</SPAN>
          <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>block<SPAN class="gtkdoc opt">-&gt;</SPAN>mem<SPAN class="gtkdoc opt">);</SPAN>
          <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>block<SPAN class="gtkdoc opt">);</SPAN>
          free_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-delete-link">g_list_delete_link</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>free_list<SPAN class="gtkdoc opt">,</SPAN> l<SPAN class="gtkdoc opt">);</SPAN>
        <SPAN class="gtkdoc opt">}</SPAN>
              
      l <SPAN class="gtkdoc opt">=</SPAN> next<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>There is a temptation to use <A class=link title=g_main_depth&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-depth"><CODE class=function>g_main_depth()</CODE></A> to solve problems with reentrancy. For instance, while waiting for data to be received from the network in response to a menu item, the menu item might be selected again. It might seem that one could make the menu item's callback return immediately and do nothing if <A class=link title=g_main_depth&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-depth"><CODE class=function>g_main_depth()</CODE></A> returns a value greater than 1. However, this should be avoided since the user then sees selecting the menu item do nothing. Furthermore, you'll find yourself adding these checks all over your code, since there are doubtless many, many things that the user could do. Instead, you can use the following techniques:</P>
<DIV class=orderedlist>
<OL class=orderedlist type=1>
<LI class=listitem>
<P>Use <CODE class=function>gtk_widget_set_sensitive()</CODE> or modal dialogs to prevent the user from interacting with elements while the main loop is recursing.</P></LI>
<LI class=listitem>
<P>Avoid main loop recursion in situations where you can't handle arbitrary callbacks. Instead, structure your code so that you simply return to the main loop and then get called again when there is more work to do.</P></LI></OL></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.39.13></A>
<H4>Returns</H4>
<P>The main loop recursion level in the current thread</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-current-source></A>
<H3>g_main_current_source&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_main_current_source (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns the currently firing source for this thread.</P>
<DIV class=refsect3><A name=id-1.4.2.7.40.5></A>
<H4>Returns</H4>
<P>The currently firing source or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.12</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-set-poll-func></A>
<H3>g_main_set_poll_func()</H3><PRE class=programlisting>#define             g_main_set_poll_func(func)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_main_set_poll_func</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_main_context_set_poll_func&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-set-poll-func"><CODE class=function>g_main_context_set_poll_func()</CODE></A> again</P></DIV>
<P>Sets the function to use for the handle polling of file descriptors for the default main context.</P>
<DIV class=refsect3><A name=id-1.4.2.7.41.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call to poll all file descriptors</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-invoke></A>
<H3>g_main_context_invoke&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_invoke (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Invokes a function in such a way that <EM class=parameter><CODE>context</CODE></EM> is owned during the invocation of <EM class=parameter><CODE>function</CODE></EM> .</P>
<P>If <EM class=parameter><CODE>context</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then the global default main context &#8212; as returned by <A class=link title=g_main_context_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-default"><CODE class=function>g_main_context_default()</CODE></A> &#8212; is used.</P>
<P>If <EM class=parameter><CODE>context</CODE></EM> is owned by the current thread, <EM class=parameter><CODE>function</CODE></EM> is called directly. Otherwise, if <EM class=parameter><CODE>context</CODE></EM> is the thread-default main context of the current thread and <A class=link title=g_main_context_acquire&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-acquire"><CODE class=function>g_main_context_acquire()</CODE></A> succeeds, then <EM class=parameter><CODE>function</CODE></EM> is called and <A class=link title=g_main_context_release&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-release"><CODE class=function>g_main_context_release()</CODE></A> is called afterwards.</P>
<P>In any other case, an idle source is created to call <EM class=parameter><CODE>function</CODE></EM> and that source is attached to <EM class=parameter><CODE>context</CODE></EM> (presumably to be run in another thread). The idle source is attached with <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A> priority. If you want a different priority, use <A class=link title=g_main_context_invoke_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-invoke-full"><CODE class=function>g_main_context_invoke_full()</CODE></A>.</P>
<P>Note that, as with normal idle functions, <EM class=parameter><CODE>function</CODE></EM> should probably return <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>. If it returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, it will be continuously run in a loop (and may prevent this call from returning).</P>
<DIV class=refsect3><A name=id-1.4.2.7.42.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-invoke-full></A>
<H3>g_main_context_invoke_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_invoke_full (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Invokes a function in such a way that <EM class=parameter><CODE>context</CODE></EM> is owned during the invocation of <EM class=parameter><CODE>function</CODE></EM> .</P>
<P>This function is the same as <A class=link title=g_main_context_invoke&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-invoke"><CODE class=function>g_main_context_invoke()</CODE></A> except that it lets you specify the priority incase <EM class=parameter><CODE>function</CODE></EM> ends up being scheduled as an idle and also lets you give a <A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> for <EM class=parameter><CODE>data</CODE></EM> .</P>
<P><EM class=parameter><CODE>notify</CODE></EM> should not assume that it is called from any particular thread or with any particular context acquired.</P>
<DIV class=refsect3><A name=id-1.4.2.7.43.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the priority at which to run <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>a function to call when <EM class=parameter><CODE>data</CODE></EM> is no longer in use, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-get-thread-default></A>
<H3>g_main_context_get_thread_default&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_main_context_get_thread_default (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the thread-default <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> for this thread. Asynchronous operations that want to be able to be run in contexts other than the default one should call this method or <A class=link title=g_main_context_ref_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-ref-thread-default"><CODE class=function>g_main_context_ref_thread_default()</CODE></A> to get a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> to add their <A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSources</SPAN></A> to. (Note that even in single-threaded programs applications may sometimes want to temporarily push a non-default context, so it is not safe to assume that this will always return <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if you are running in the default thread.)</P>
<P>If you need to hold a reference on the context, use <A class=link title=g_main_context_ref_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-ref-thread-default"><CODE class=function>g_main_context_ref_thread_default()</CODE></A> instead.</P>
<DIV class=refsect3><A name=id-1.4.2.7.44.6></A>
<H4>Returns</H4>
<P>the thread-default <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the thread-default context is the global default context. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-ref-thread-default></A>
<H3>g_main_context_ref_thread_default&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_main_context_ref_thread_default (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the thread-default <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> for this thread, as with <A class=link title=g_main_context_get_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-get-thread-default"><CODE class=function>g_main_context_get_thread_default()</CODE></A>, but also adds a reference to it with <A class=link title=g_main_context_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-ref"><CODE class=function>g_main_context_ref()</CODE></A>. In addition, unlike <A class=link title=g_main_context_get_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-get-thread-default"><CODE class=function>g_main_context_get_thread_default()</CODE></A>, if the thread-default context is the global default context, this will return that <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (with a ref added to it) rather than returning <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.45.5></A>
<H4>Returns</H4>
<P>the thread-default <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>. Unref with <A class=link title=g_main_context_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-unref"><CODE class=function>g_main_context_unref()</CODE></A> when you are done with it. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-push-thread-default></A>
<H3>g_main_context_push_thread_default&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_push_thread_default (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Acquires <EM class=parameter><CODE>context</CODE></EM> and sets it as the thread-default context for the current thread. This will cause certain asynchronous operations (such as most gio-based I/O) which are started in this thread to run under <EM class=parameter><CODE>context</CODE></EM> and deliver their results to its main loop, rather than running under the global default context in the main thread. Note that calling this function changes the context returned by <A class=link title=g_main_context_get_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-get-thread-default"><CODE class=function>g_main_context_get_thread_default()</CODE></A>, not the one returned by <A class=link title=g_main_context_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-default"><CODE class=function>g_main_context_default()</CODE></A>, so it does not affect the context used by functions like <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>.</P>
<P>Normally you would call this function shortly after creating a new thread, passing it a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> which will be run by a <A class=link title=GMainLoop href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainLoop"><SPAN class=type>GMainLoop</SPAN></A> in that thread, to set a new default context for all async operations in that thread. (In this case, you don't need to ever call <A class=link title=g_main_context_pop_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-pop-thread-default"><CODE class=function>g_main_context_pop_thread_default()</CODE></A>.) In some cases however, you may want to schedule a single operation in a non-default context, or temporarily use a non-default context in the main thread. In that case, you can wrap the call to the asynchronous operation inside a <A class=link title=g_main_context_push_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-push-thread-default"><CODE class=function>g_main_context_push_thread_default()</CODE></A> / <A class=link title=g_main_context_pop_thread_default&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-pop-thread-default"><CODE class=function>g_main_context_pop_thread_default()</CODE></A> pair, but it is up to you to ensure that no other asynchronous operations accidentally get started while the non-default context is active.</P>
<P>Beware that libraries that predate this function may not correctly handle being used from a thread with a thread-default context. Eg, see <A href="https://developer.gnome.org/gio/stable/GFile.html#g-file-supports-thread-contexts"><CODE class=function>g_file_supports_thread_contexts()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.46.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for the global default context. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-main-context-pop-thread-default></A>
<H3>g_main_context_pop_thread_default&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_main_context_pop_thread_default (<EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Pops <EM class=parameter><CODE>context</CODE></EM> off the thread-default context stack (verifying that it was on the top of the stack).</P>
<DIV class=refsect3><A name=id-1.4.2.7.47.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> object, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-timeout-source-new></A>
<H3>g_timeout_source_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_timeout_source_new (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>);</PRE>
<P>Creates a new timeout source.</P>
<P>The source will not initially be associated with any <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> and must be added to one with <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A> before it will be executed.</P>
<P>The interval given is in terms of monotonic time, not wall clock time. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.48.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the timeout interval in milliseconds.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.48.8></A>
<H4>Returns</H4>
<P>the newly-created timeout source</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-timeout-source-new-seconds></A>
<H3>g_timeout_source_new_seconds&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_timeout_source_new_seconds (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>);</PRE>
<P>Creates a new timeout source.</P>
<P>The source will not initially be associated with any <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> and must be added to one with <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A> before it will be executed.</P>
<P>The scheduling granularity/accuracy of this timeout source will be in seconds.</P>
<P>The interval given in terms of monotonic time, not wall clock time. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.49.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the timeout interval in seconds</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.49.9></A>
<H4>Returns</H4>
<P>the newly-created timeout source</P>
<P></P></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-timeout-add></A>
<H3>g_timeout_add&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_timeout_add (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Sets a function to be called at regular intervals, with the default priority, <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A>. The function is called repeatedly until it returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, at which point the timeout is automatically destroyed and the function will not be called again. The first call to the function will be at the end of the first <EM class=parameter><CODE>interval</CODE></EM> .</P>
<P>Note that timeout functions may be delayed, due to the processing of other event sources. Thus they should not be relied on for precise timing. After each call to the timeout function, the time of the next timeout is recalculated based on the current time and the given interval (it does not try to 'catch up' time lost in delays).</P>
<P>If you want to have a timer in the "seconds" range and do not care about the exact time of the first call of the timer, use the <A class=link title=g_timeout_add_seconds&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-seconds"><CODE class=function>g_timeout_add_seconds()</CODE></A> function; this function allows for more optimizations and more efficient system power usage.</P>
<P>This internally creates a main loop source using <A class=link title=g_timeout_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-source-new"><CODE class=function>g_timeout_source_new()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<P>The interval given is in terms of monotonic time, not wall clock time. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.50.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the time between calls to the function, in milliseconds (1/1000ths of a second)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.50.10></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-timeout-add-full></A>
<H3>g_timeout_add_full&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_timeout_add_full (<EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Sets a function to be called at regular intervals, with the given priority. The function is called repeatedly until it returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, at which point the timeout is automatically destroyed and the function will not be called again. The <EM class=parameter><CODE>notify</CODE></EM> function is called when the timeout is destroyed. The first call to the function will be at the end of the first <EM class=parameter><CODE>interval</CODE></EM> .</P>
<P>Note that timeout functions may be delayed, due to the processing of other event sources. Thus they should not be relied on for precise timing. After each call to the timeout function, the time of the next timeout is recalculated based on the current time and the given interval (it does not try to 'catch up' time lost in delays).</P>
<P>This internally creates a main loop source using <A class=link title=g_timeout_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-source-new"><CODE class=function>g_timeout_source_new()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<P>The interval given in terms of monotonic time, not wall clock time. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.51.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the priority of the timeout source. Typically this will be in the range between <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A> and <A class=link title=G_PRIORITY_HIGH href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH:CAPS"><SPAN class=type>G_PRIORITY_HIGH</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the time between calls to the function, in milliseconds (1/1000ths of a second)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>function to call when the timeout is removed, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.51.9></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source. Rename to: g_timeout_add</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-timeout-add-seconds></A>
<H3>g_timeout_add_seconds&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_timeout_add_seconds (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Sets a function to be called at regular intervals with the default priority, <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A>. The function is called repeatedly until it returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, at which point the timeout is automatically destroyed and the function will not be called again.</P>
<P>This internally creates a main loop source using <A class=link title=g_timeout_source_new_seconds&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-source-new-seconds"><CODE class=function>g_timeout_source_new_seconds()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control. Also see <A class=link title=g_timeout_add_seconds_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-seconds-full"><CODE class=function>g_timeout_add_seconds_full()</CODE></A>.</P>
<P>Note that the first call of the timer may not be precise for timeouts of one second. If you need finer precision and have such a timeout, you may want to use <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A> instead.</P>
<P>The interval given is in terms of monotonic time, not wall clock time. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.52.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the time between calls to the function, in seconds</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.52.9></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source.</P>
<P></P></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-timeout-add-seconds-full></A>
<H3>g_timeout_add_seconds_full&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_timeout_add_seconds_full (<EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Sets a function to be called at regular intervals, with <EM class=parameter><CODE>priority</CODE></EM> . The function is called repeatedly until it returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, at which point the timeout is automatically destroyed and the function will not be called again.</P>
<P>Unlike <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>, this function operates at whole second granularity. The initial starting point of the timer is determined by the implementation and the implementation is expected to group multiple timers together so that they fire all at the same time. To allow this grouping, the <EM class=parameter><CODE>interval</CODE></EM> to the first timer is rounded and can deviate up to one second from the specified interval. Subsequent timer iterations will generally run at the specified interval.</P>
<P>Note that timeout functions may be delayed, due to the processing of other event sources. Thus they should not be relied on for precise timing. After each call to the timeout function, the time of the next timeout is recalculated based on the current time and the given <EM class=parameter><CODE>interval</CODE></EM> </P>
<P>If you want timing more precise than whole seconds, use <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A> instead.</P>
<P>The grouping of timers to fire at the same time results in a more power and CPU efficient behavior so if your timer is in multiples of seconds and you don't require the first timer exactly one second from now, the use of <A class=link title=g_timeout_add_seconds&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-seconds"><CODE class=function>g_timeout_add_seconds()</CODE></A> is preferred over <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>.</P>
<P>This internally creates a main loop source using <A class=link title=g_timeout_source_new_seconds&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-source-new-seconds"><CODE class=function>g_timeout_source_new_seconds()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<P>The interval given is in terms of monotonic time, not wall clock time. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.53.11></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the priority of the timeout source. Typically this will be in the range between <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A> and <A class=link title=G_PRIORITY_HIGH href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH:CAPS"><SPAN class=type>G_PRIORITY_HIGH</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the time between calls to the function, in seconds</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>function to call when the timeout is removed, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.53.12></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source.</P>
<P>Rename to: g_timeout_add_seconds</P>
<P></P></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-idle-source-new></A>
<H3>g_idle_source_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_idle_source_new (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Creates a new idle source.</P>
<P>The source will not initially be associated with any <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> and must be added to one with <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A> before it will be executed. Note that the default priority for idle sources is <A class=link title=G_PRIORITY_DEFAULT_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT-IDLE:CAPS"><CODE class=literal>G_PRIORITY_DEFAULT_IDLE</CODE></A>, as compared to other sources which have a default priority of <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><CODE class=literal>G_PRIORITY_DEFAULT</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.54.6></A>
<H4>Returns</H4>
<P>the newly-created idle source</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-idle-add></A>
<H3>g_idle_add&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_idle_add (<EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Adds a function to be called whenever there are no higher priority events pending to the default main loop. The function is given the default idle priority, <A class=link title=G_PRIORITY_DEFAULT_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT-IDLE:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT_IDLE</SPAN></A>. If the function returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> it is automatically removed from the list of event sources and will not be called again.</P>
<P>This internally creates a main loop source using <A class=link title=g_idle_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-source-new"><CODE class=function>g_idle_source_new()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<DIV class=refsect3><A name=id-1.4.2.7.55.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.55.7></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-idle-add-full></A>
<H3>g_idle_add_full&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_idle_add_full (<EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> function</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Adds a function to be called whenever there are no higher priority events pending. If the function returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> it is automatically removed from the list of event sources and will not be called again.</P>
<P>This internally creates a main loop source using <A class=link title=g_idle_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-source-new"><CODE class=function>g_idle_source_new()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<DIV class=refsect3><A name=id-1.4.2.7.56.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the priority of the idle source. Typically this will be in the range between <A class=link title=G_PRIORITY_DEFAULT_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT-IDLE:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT_IDLE</SPAN></A> and <A class=link title=G_PRIORITY_HIGH_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH-IDLE:CAPS"><SPAN class=type>G_PRIORITY_HIGH_IDLE</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>function to call when the idle is removed, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.56.7></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source. Rename to: g_idle_add</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-idle-remove-by-data></A>
<H3>g_idle_remove_by_data&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_idle_remove_by_data (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes the idle function with the given data.</P>
<DIV class=refsect3><A name=id-1.4.2.7.57.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the idle source's callback.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.57.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if an idle source was found and removed.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GChildWatchFunc></A>
<H3>GChildWatchFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GChildWatchFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> pid</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> status</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Prototype of a <SPAN class=type>GChildWatchSource</SPAN> callback, called when a child process has exited. To interpret <EM class=parameter><CODE>status</CODE></EM> , see the documentation for <A class=link title=g_spawn_check_exit_status&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-check-exit-status"><CODE class=function>g_spawn_check_exit_status()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.58.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pid</P></TD>
<TD class=parameter_description>
<P>the process id of the child process</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>status</P></TD>
<TD class=parameter_description>
<P>Status information about the child process, encoded in a platform-specific manner</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <A class=link title=g_child_watch_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-add"><CODE class=function>g_child_watch_add()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-child-watch-source-new></A>
<H3>g_child_watch_source_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_child_watch_source_new (<EM class=parameter><CODE><A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> pid</CODE></EM>);</PRE>
<P>Creates a new child_watch source.</P>
<P>The source will not initially be associated with any <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> and must be added to one with <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A> before it will be executed.</P>
<P>Note that child watch sources can only be used in conjunction with <CODE class=literal>g_spawn...</CODE> when the <A class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#G-SPAWN-DO-NOT-REAP-CHILD:CAPS"><CODE class=literal>G_SPAWN_DO_NOT_REAP_CHILD</CODE></A> flag is used.</P>
<P>Note that on platforms where <A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> must be explicitly closed (see <A class=link title=g_spawn_close_pid&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-close-pid"><CODE class=function>g_spawn_close_pid()</CODE></A>) <EM class=parameter><CODE>pid</CODE></EM> must not be closed while the source is still active. Typically, you will want to call <A class=link title=g_spawn_close_pid&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-close-pid"><CODE class=function>g_spawn_close_pid()</CODE></A> in the callback function for the source.</P>
<P>Note further that using <A class=link title=g_child_watch_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-source-new"><CODE class=function>g_child_watch_source_new()</CODE></A> is not compatible with calling <CODE class=literal>waitpid</CODE> with a nonpositive first argument in the application. Calling <CODE class=function>waitpid()</CODE> for individual pids will still work fine.</P>
<P>Similarly, on POSIX platforms, the <EM class=parameter><CODE>pid</CODE></EM> passed to this function must be greater than 0 (i.e. this function must wait for a specific child, and cannot wait for one of many children by using a nonpositive argument).</P>
<DIV class=refsect3><A name=id-1.4.2.7.59.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pid</P></TD>
<TD class=parameter_description>
<P>process to watch. On POSIX the positive pid of a child process. On Windows a handle for a process (which doesn't have to be a child).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.59.11></A>
<H4>Returns</H4>
<P>the newly-created child watch source</P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-child-watch-add></A>
<H3>g_child_watch_add&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_child_watch_add (<EM class=parameter><CODE><A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> pid</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=GChildWatchFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GChildWatchFunc"><SPAN class=type>GChildWatchFunc</SPAN></A> function</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Sets a function to be called when the child indicated by <EM class=parameter><CODE>pid</CODE></EM> exits, at a default priority, <A class=link title=G_PRIORITY_DEFAULT href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT</SPAN></A>.</P>
<P>If you obtain <EM class=parameter><CODE>pid</CODE></EM> from <A class=link title=g_spawn_async&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-async"><CODE class=function>g_spawn_async()</CODE></A> or <A class=link title=g_spawn_async_with_pipes&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-async-with-pipes"><CODE class=function>g_spawn_async_with_pipes()</CODE></A> you will need to pass <A class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#G-SPAWN-DO-NOT-REAP-CHILD:CAPS"><SPAN class=type>G_SPAWN_DO_NOT_REAP_CHILD</SPAN></A> as flag to the spawn function for the child watching to work.</P>
<P>Note that on platforms where <A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> must be explicitly closed (see <A class=link title=g_spawn_close_pid&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-close-pid"><CODE class=function>g_spawn_close_pid()</CODE></A>) <EM class=parameter><CODE>pid</CODE></EM> must not be closed while the source is still active. Typically, you will want to call <A class=link title=g_spawn_close_pid&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-close-pid"><CODE class=function>g_spawn_close_pid()</CODE></A> in the callback function for the source.</P>
<P>GLib supports only a single callback per process id.</P>
<P>This internally creates a main loop source using <A class=link title=g_child_watch_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-source-new"><CODE class=function>g_child_watch_source_new()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<DIV class=refsect3><A name=id-1.4.2.7.60.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pid</P></TD>
<TD class=parameter_description>
<P>process id to watch. On POSIX the positive pid of a child process. On Windows a handle for a process (which doesn't have to be a child).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.60.10></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source.</P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-child-watch-add-full></A>
<H3>g_child_watch_add_full&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_child_watch_add_full (<EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> pid</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=GChildWatchFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GChildWatchFunc"><SPAN class=type>GChildWatchFunc</SPAN></A> function</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Sets a function to be called when the child indicated by <EM class=parameter><CODE>pid</CODE></EM> exits, at the priority <EM class=parameter><CODE>priority</CODE></EM> .</P>
<P>If you obtain <EM class=parameter><CODE>pid</CODE></EM> from <A class=link title=g_spawn_async&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-async"><CODE class=function>g_spawn_async()</CODE></A> or <A class=link title=g_spawn_async_with_pipes&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-async-with-pipes"><CODE class=function>g_spawn_async_with_pipes()</CODE></A> you will need to pass <A class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#G-SPAWN-DO-NOT-REAP-CHILD:CAPS"><SPAN class=type>G_SPAWN_DO_NOT_REAP_CHILD</SPAN></A> as flag to the spawn function for the child watching to work.</P>
<P>In many programs, you will want to call <A class=link title=g_spawn_check_exit_status&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-check-exit-status"><CODE class=function>g_spawn_check_exit_status()</CODE></A> in the callback to determine whether or not the child exited successfully.</P>
<P>Also, note that on platforms where <A class=link title=GPid href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPid"><SPAN class=type>GPid</SPAN></A> must be explicitly closed (see <A class=link title=g_spawn_close_pid&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-close-pid"><CODE class=function>g_spawn_close_pid()</CODE></A>) <EM class=parameter><CODE>pid</CODE></EM> must not be closed while the source is still active. Typically, you should invoke <A class=link title=g_spawn_close_pid&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-close-pid"><CODE class=function>g_spawn_close_pid()</CODE></A> in the callback function for the source.</P>
<P>GLib supports only a single callback per process id.</P>
<P>This internally creates a main loop source using <A class=link title=g_child_watch_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-source-new"><CODE class=function>g_child_watch_source_new()</CODE></A> and attaches it to the main loop context using <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>. You can do these steps manually if you need greater control.</P>
<DIV class=refsect3><A name=id-1.4.2.7.61.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the priority of the idle source. Typically this will be in the range between <A class=link title=G_PRIORITY_DEFAULT_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT-IDLE:CAPS"><SPAN class=type>G_PRIORITY_DEFAULT_IDLE</SPAN></A> and <A class=link title=G_PRIORITY_HIGH_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH-IDLE:CAPS"><SPAN class=type>G_PRIORITY_HIGH_IDLE</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pid</P></TD>
<TD class=parameter_description>
<P>process to watch. On POSIX the positive pid of a child process. On Windows a handle for a process (which doesn't have to be a child).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>function</P></TD>
<TD class=parameter_description>
<P>function to call</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>function</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>function to call when the idle is removed, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.61.11></A>
<H4>Returns</H4>
<P>the ID (greater than 0) of the event source.</P>
<P>Rename to: g_child_watch_add</P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-poll></A>
<H3>g_poll&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_poll (<EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fds</CODE></EM>,
        <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> nfds</CODE></EM>,
        <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> timeout</CODE></EM>);</PRE>
<P>Polls <EM class=parameter><CODE>fds</CODE></EM> , as with the <CODE class=function>poll()</CODE> system call, but portably. (On systems that don't have <CODE class=function>poll()</CODE>, it is emulated using <CODE class=function>select()</CODE>.) This is used internally by <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, but it can be called directly if you need to block until a file descriptor is ready, but don't want to run the full main loop.</P>
<P>Each element of <EM class=parameter><CODE>fds</CODE></EM> is a <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> describing a single file descriptor to poll. The <CODE class=literal>fd</CODE> field indicates the file descriptor, and the <CODE class=literal>events</CODE> field indicates the events to poll for. On return, the <CODE class=literal>revents</CODE> fields will be filled with the events that actually occurred.</P>
<P>On POSIX systems, the file descriptors in <EM class=parameter><CODE>fds</CODE></EM> can be any sort of file descriptor, but the situation is much more complicated on Windows. If you need to use <A class=link title=g_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-poll"><CODE class=function>g_poll()</CODE></A> in code that has to run on Windows, the easiest solution is to construct all of your <A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFDs</SPAN></A> with <CODE class=function>g_io_channel_win32_make_pollfd()</CODE>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.62.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>fds</P></TD>
<TD class=parameter_description>
<P>file descriptors to poll</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nfds</P></TD>
<TD class=parameter_description>
<P>the number of file descriptors in <EM class=parameter><CODE>fds</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>timeout</P></TD>
<TD class=parameter_description>
<P>amount of time to wait, in milliseconds, or -1 to wait forever</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.62.8></A>
<H4>Returns</H4>
<P>the number of entries in <EM class=parameter><CODE>fds</CODE></EM> whose <CODE class=literal>revents</CODE> fields were filled in, or 0 if the operation timed out, or -1 on error or if the call was interrupted.</P>
<P></P></DIV>
<P class=since>Since 2.20</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSourceDummyMarshal></A>
<H3>GSourceDummyMarshal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GSourceDummyMarshal<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>This is just a placeholder for <A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosureMarshal"><SPAN class=type>GClosureMarshal</SPAN></A>, which cannot be used here for dependency reasons.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-new></A>
<H3>g_source_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_source_new (<EM class=parameter><CODE><A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> *source_funcs</CODE></EM>,
              <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> struct_size</CODE></EM>);</PRE>
<P>Creates a new <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> structure. The size is specified to allow creating structures derived from <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that contain additional data. The size passed in must be at least <CODE class=literal>sizeof (GSource)</CODE>.</P>
<P>The source will not initially be associated with any <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> and must be added to one with <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A> before it will be executed.</P>
<DIV class=refsect3><A name=id-1.4.2.7.64.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source_funcs</P></TD>
<TD class=parameter_description>
<P>structure containing functions that implement the sources behavior.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>struct_size</P></TD>
<TD class=parameter_description>
<P>size of the <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> structure to create.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.64.7></A>
<H4>Returns</H4>
<P>the newly-created <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-ref></A>
<H3>g_source_ref&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=returnvalue>GSource</SPAN></A>&nbsp;*
g_source_ref (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Increases the reference count on a source by one.</P>
<DIV class=refsect3><A name=id-1.4.2.7.65.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.65.6></A>
<H4>Returns</H4>
<P><EM class=parameter><CODE>source</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-unref></A>
<H3>g_source_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_unref (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Decreases the reference count of a source by one. If the resulting reference count is zero the source and associated memory will be destroyed.</P>
<DIV class=refsect3><A name=id-1.4.2.7.66.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-funcs></A>
<H3>g_source_set_funcs&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_funcs (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> *funcs</CODE></EM>);</PRE>
<P>Sets the source functions (can be used to override default implementations) of an unattached source.</P>
<DIV class=refsect3><A name=id-1.4.2.7.67.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>funcs</P></TD>
<TD class=parameter_description>
<P>the new <A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.12</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-attach></A>
<H3>g_source_attach&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_source_attach (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Adds a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> to a <EM class=parameter><CODE>context</CODE></EM> so that it will be executed within that context. Remove it by calling <A class=link title=g_source_destroy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-destroy"><CODE class=function>g_source_destroy()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.68.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> (if <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the default context will be used). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.68.6></A>
<H4>Returns</H4>
<P>the ID (greater than 0) for the source within the <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>. </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-destroy></A>
<H3>g_source_destroy&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_destroy (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Removes a source from its <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, if any, and mark it as destroyed. The source cannot be subsequently added to another context. It is safe to call this on sources which have already been removed from their context.</P>
<DIV class=refsect3><A name=id-1.4.2.7.69.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-is-destroyed></A>
<H3>g_source_is_destroyed&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_source_is_destroyed (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Returns whether <EM class=parameter><CODE>source</CODE></EM> has been destroyed.</P>
<P>This is important when you operate upon your objects from within idle handlers, but may have freed the object before the dispatch of your idle handler.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static</SPAN> gboolean 
<SPAN class=function>idle_callback</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  SomeWidget <SPAN class="gtkdoc opt">*</SPAN>self <SPAN class="gtkdoc opt">=</SPAN> data<SPAN class="gtkdoc opt">;</SPAN>
   
  <SPAN class=function>GDK_THREADS_ENTER</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
  <SPAN class="gtkdoc slc">// do stuff with self</SPAN>
  self<SPAN class="gtkdoc opt">-&gt;</SPAN>idle_id <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function>GDK_THREADS_LEAVE</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
   
  <SPAN class=keyword>return</SPAN> G_SOURCE_REMOVE<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
 
<SPAN class="gtkdoc kwb">static void</SPAN> 
<SPAN class=function>some_widget_do_stuff_later</SPAN> <SPAN class="gtkdoc opt">(</SPAN>SomeWidget <SPAN class="gtkdoc opt">*</SPAN>self<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  self<SPAN class="gtkdoc opt">-&gt;</SPAN>idle_id <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add">g_idle_add</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>idle_callback<SPAN class="gtkdoc opt">,</SPAN> self<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
 
<SPAN class="gtkdoc kwb">static void</SPAN> 
<SPAN class=function>some_widget_finalize</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GObject <SPAN class="gtkdoc opt">*</SPAN>object<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  SomeWidget <SPAN class="gtkdoc opt">*</SPAN>self <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>SOME_WIDGET</SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
   
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">-&gt;</SPAN>idle_id<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove">g_source_remove</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">-&gt;</SPAN>idle_id<SPAN class="gtkdoc opt">);</SPAN>
   
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS:CAPS">G_OBJECT_CLASS</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>parent_class<SPAN class="gtkdoc opt">)-&gt;</SPAN><SPAN class=function>finalize</SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This will fail in a multi-threaded application if the widget is destroyed before the idle handler fires due to the use after free in the callback. A solution, to this particular problem, is to check to if the source has already been destroy within the callback.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static</SPAN> gboolean 
<SPAN class=function>idle_callback</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  SomeWidget <SPAN class="gtkdoc opt">*</SPAN>self <SPAN class="gtkdoc opt">=</SPAN> data<SPAN class="gtkdoc opt">;</SPAN>
  
  <SPAN class=function>GDK_THREADS_ENTER</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-is-destroyed">g_source_is_destroyed</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-current-source">g_main_current_source</A></SPAN> <SPAN class="gtkdoc opt">()))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class="gtkdoc slc">// do stuff with self</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
  <SPAN class=function>GDK_THREADS_LEAVE</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
  
  <SPAN class=keyword>return</SPAN> FALSE<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.4.2.7.70.11></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.70.12></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the source has been destroyed</P>
<P></P></DIV>
<P class=since>Since 2.12</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-priority></A>
<H3>g_source_set_priority&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_priority (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> priority</CODE></EM>);</PRE>
<P>Sets the priority of a source. While the main loop is being run, a source will be dispatched if it is ready to be dispatched and no sources at a higher (numerically smaller) priority are ready to be dispatched.</P>
<P>A child source always has the same priority as its parent. It is not permitted to change the priority of a source once it has been added as a child of another source.</P>
<DIV class=refsect3><A name=id-1.4.2.7.71.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>priority</P></TD>
<TD class=parameter_description>
<P>the new priority.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-priority></A>
<H3>g_source_get_priority&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_source_get_priority (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Gets the priority of a source.</P>
<DIV class=refsect3><A name=id-1.4.2.7.72.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.72.6></A>
<H4>Returns</H4>
<P>the priority of the source</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-can-recurse></A>
<H3>g_source_set_can_recurse&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_can_recurse (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                          <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> can_recurse</CODE></EM>);</PRE>
<P>Sets whether a source can be called recursively. If <EM class=parameter><CODE>can_recurse</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, then while the source is being dispatched then this source will be processed normally. Otherwise, all processing of this source is blocked until the dispatch function returns.</P>
<DIV class=refsect3><A name=id-1.4.2.7.73.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>can_recurse</P></TD>
<TD class=parameter_description>
<P>whether recursion is allowed for this source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-can-recurse></A>
<H3>g_source_get_can_recurse&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_source_get_can_recurse (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Checks whether a source is allowed to be called recursively. see <A class=link title=g_source_set_can_recurse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-can-recurse"><CODE class=function>g_source_set_can_recurse()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.74.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.74.6></A>
<H4>Returns</H4>
<P>whether recursion is allowed.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-id></A>
<H3>g_source_get_id&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_source_get_id (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Returns the numeric ID for a particular source. The ID of a source is a positive integer which is unique within a particular main loop context. The reverse mapping from ID to source is done by <A class=link title=g_main_context_find_source_by_id&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-context-find-source-by-id"><CODE class=function>g_main_context_find_source_by_id()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.75.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.75.6></A>
<H4>Returns</H4>
<P>the ID (greater than 0) for the source</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-name></A>
<H3>g_source_get_name&nbsp;()</H3><PRE class=programlisting>const <SPAN class=returnvalue>char</SPAN>&nbsp;*
g_source_get_name (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Gets a name for the source, used in debugging and profiling. The name may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><SPAN class=type>NULL</SPAN></A> if it has never been set with <A class=link title=g_source_set_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-name"><CODE class=function>g_source_set_name()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.76.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.76.6></A>
<H4>Returns</H4>
<P>the name of the source</P>
<P></P></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-name></A>
<H3>g_source_set_name&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_name (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                   <EM class=parameter><CODE>const <SPAN class=type>char</SPAN> *name</CODE></EM>);</PRE>
<P>Sets a name for the source, used in debugging and profiling. The name defaults to <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><SPAN class=type>NULL</SPAN></A>.</P>
<P>The source name should describe in a human-readable way what the source does. For example, "X11 event queue" or "GTK+ repaint idle handler" or whatever it is.</P>
<P>It is permitted to call this function multiple times, but is not recommended due to the potential performance impact. For example, one could change the name in the "check" function of a <A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> to include details like the event type in the source name.</P>
<P>Use caution if changing the name while another thread may be accessing it with <A class=link title=g_source_get_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-name"><CODE class=function>g_source_get_name()</CODE></A>; that function does not copy the value, and changing the value will free it while the other thread may be attempting to use it.</P>
<DIV class=refsect3><A name=id-1.4.2.7.77.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>debug name for the source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-name-by-id></A>
<H3>g_source_set_name_by_id&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_name_by_id (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> tag</CODE></EM>,
                         <EM class=parameter><CODE>const <SPAN class=type>char</SPAN> *name</CODE></EM>);</PRE>
<P>Sets the name of a source using its ID.</P>
<P>This is a convenience utility to set source names from the return value of <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>, <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>, etc.</P>
<P>It is a programmer error to attempt to set the name of a non-existent source.</P>
<P>More specifically: source IDs can be reissued after a source has been destroyed and therefore it is never valid to use this function with a source ID which may have already been removed. An example is when scheduling an idle to run in another thread with <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>: the idle may already have run and been removed by the time this function is called on its (now invalid) source ID. This source ID may have been reissued, leading to the operation being performed against the wrong source.</P>
<DIV class=refsect3><A name=id-1.4.2.7.78.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>tag</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> ID</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>debug name for the source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.26</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-context></A>
<H3>g_source_get_context&nbsp;()</H3><PRE class=programlisting><A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=returnvalue>GMainContext</SPAN></A>&nbsp;*
g_source_get_context (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Gets the <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> with which the source is associated.</P>
<P>You can call this on a source that has been destroyed, provided that the <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> it was attached to still exists (in which case it will return that <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>). In particular, you can always call this function on the source returned from <A class=link title=g_main_current_source&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-main-current-source"><CODE class=function>g_main_current_source()</CODE></A>. But calling this function on a source whose <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> has been destroyed is an error.</P>
<DIV class=refsect3><A name=id-1.4.2.7.79.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.79.7></A>
<H4>Returns</H4>
<P>the <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A> with which the source is associated, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the context has not yet been added to a source. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-callback></A>
<H3>g_source_set_callback&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_callback (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> func</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> notify</CODE></EM>);</PRE>
<P>Sets the callback function for a source. The callback for a source is called from the source's dispatch function.</P>
<P>The exact type of <EM class=parameter><CODE>func</CODE></EM> depends on the type of source; ie. you should not count on <EM class=parameter><CODE>func</CODE></EM> being called with <EM class=parameter><CODE>data</CODE></EM> as its first parameter.</P>
<P>Typically, you won't use this function. Instead use functions specific to the type of source you are using.</P>
<DIV class=refsect3><A name=id-1.4.2.7.80.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>a callback function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data to pass to callback function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>a function to call when <EM class=parameter><CODE>data</CODE></EM> is no longer in use, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSourceFunc></A>
<H3>GSourceFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GSourceFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Specifies the type of function passed to <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>, <A class=link title=g_timeout_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-full"><CODE class=function>g_timeout_add_full()</CODE></A>, <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>, and <A class=link title=g_idle_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add-full"><CODE class=function>g_idle_add_full()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.81.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data passed to the function, set when the source was created with one of the above functions</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.81.6></A>
<H4>Returns</H4>
<P><A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the source should be removed. <A class=link title=G_SOURCE_CONTINUE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-SOURCE-CONTINUE:CAPS"><SPAN class=type>G_SOURCE_CONTINUE</SPAN></A> and <A class=link title=G_SOURCE_REMOVE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-SOURCE-REMOVE:CAPS"><SPAN class=type>G_SOURCE_REMOVE</SPAN></A> are more memorable names for the return value.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-callback-indirect></A>
<H3>g_source_set_callback_indirect&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_callback_indirect (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> callback_data</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title="struct GSourceCallbackFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceCallbackFuncs"><SPAN class=type>GSourceCallbackFuncs</SPAN></A> *callback_funcs</CODE></EM>);</PRE>
<P>Sets the callback function storing the data as a refcounted callback "object". This is used internally. Note that calling <A class=link title=g_source_set_callback_indirect&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-callback-indirect"><CODE class=function>g_source_set_callback_indirect()</CODE></A> assumes an initial reference count on <EM class=parameter><CODE>callback_data</CODE></EM> , and thus <EM class=parameter><CODE>callback_funcs-&gt;unref</CODE></EM> will eventually be called once more than <EM class=parameter><CODE>callback_funcs-&gt;ref</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.4.2.7.82.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>the source</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>callback_data</P></TD>
<TD class=parameter_description>
<P>pointer to callback data "object"</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>callback_funcs</P></TD>
<TD class=parameter_description>
<P>functions for reference counting <EM class=parameter><CODE>callback_data</CODE></EM> and getting the callback and data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-set-ready-time></A>
<H3>g_source_set_ready_time&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_set_ready_time (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> ready_time</CODE></EM>);</PRE>
<P>Sets a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> to be dispatched when the given monotonic time is reached (or passed). If the monotonic time is in the past (as it always will be if <EM class=parameter><CODE>ready_time</CODE></EM> is 0) then the source will be dispatched immediately.</P>
<P>If <EM class=parameter><CODE>ready_time</CODE></EM> is -1 then the source is never woken up on the basis of the passage of time.</P>
<P>Dispatching the source does not reset the ready time. You should do so yourself, from the source dispatch function.</P>
<P>Note that if you have a pair of sources where the ready time of one suggests that it will be delivered first but the priority for the other suggests that it would be delivered first, and the ready time for both sources is reached during the same main context iteration then the order of dispatch is undefined.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<DIV class=refsect3><A name=id-1.4.2.7.83.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>ready_time</P></TD>
<TD class=parameter_description>
<P>the monotonic time at which the source will be ready, 0 for "immediately", -1 for "never"</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-ready-time></A>
<H3>g_source_get_ready_time&nbsp;()</H3><PRE class=programlisting><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A>
g_source_get_ready_time (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Gets the "ready time" of <EM class=parameter><CODE>source</CODE></EM> , as set by <A class=link title=g_source_set_ready_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-ready-time"><CODE class=function>g_source_set_ready_time()</CODE></A>.</P>
<P>Any time before the current monotonic time (including 0) is an indication that the source will fire immediately.</P>
<DIV class=refsect3><A name=id-1.4.2.7.84.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.84.7></A>
<H4>Returns</H4>
<P>the monotonic ready time, -1 for "never"</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-add-unix-fd></A>
<H3>g_source_add_unix_fd&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_source_add_unix_fd (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> fd</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="enum GIOCondition" href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOCondition"><SPAN class=type>GIOCondition</SPAN></A> events</CODE></EM>);</PRE>
<P>Monitors <EM class=parameter><CODE>fd</CODE></EM> for the IO events in <EM class=parameter><CODE>events</CODE></EM> .</P>
<P>The tag returned by this function can be used to remove or modify the monitoring of the fd using <A class=link title=g_source_remove_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-unix-fd"><CODE class=function>g_source_remove_unix_fd()</CODE></A> or <A class=link title=g_source_modify_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-modify-unix-fd"><CODE class=function>g_source_modify_unix_fd()</CODE></A>.</P>
<P>It is not necessary to remove the fd before destroying the source; it will be cleaned up automatically.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<P>As the name suggests, this function is not available on Windows.</P>
<DIV class=refsect3><A name=id-1.4.2.7.85.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>the fd to monitor</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>events</P></TD>
<TD class=parameter_description>
<P>an event mask</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.85.10></A>
<H4>Returns</H4>
<P>an opaque tag</P>
<P></P></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-remove-unix-fd></A>
<H3>g_source_remove_unix_fd&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_remove_unix_fd (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> tag</CODE></EM>);</PRE>
<P>Reverses the effect of a previous call to <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A>.</P>
<P>You only need to call this if you want to remove an fd from being watched while keeping the same source around. In the normal case you will just want to destroy the source.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<P>As the name suggests, this function is not available on Windows.</P>
<DIV class=refsect3><A name=id-1.4.2.7.86.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>tag</P></TD>
<TD class=parameter_description>
<P>the tag from <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-modify-unix-fd></A>
<H3>g_source_modify_unix_fd&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_modify_unix_fd (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> tag</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title="enum GIOCondition" href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOCondition"><SPAN class=type>GIOCondition</SPAN></A> new_events</CODE></EM>);</PRE>
<P>Updates the event mask to watch for the fd identified by <EM class=parameter><CODE>tag</CODE></EM> .</P>
<P><EM class=parameter><CODE>tag</CODE></EM> is the tag returned from <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A>.</P>
<P>If you want to remove a fd, don't set its event mask to zero. Instead, call <A class=link title=g_source_remove_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-remove-unix-fd"><CODE class=function>g_source_remove_unix_fd()</CODE></A>.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<P>As the name suggests, this function is not available on Windows.</P>
<DIV class=refsect3><A name=id-1.4.2.7.87.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>tag</P></TD>
<TD class=parameter_description>
<P>the tag from <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>new_events</P></TD>
<TD class=parameter_description>
<P>the new event mask to watch</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-query-unix-fd></A>
<H3>g_source_query_unix_fd&nbsp;()</H3><PRE class=programlisting><A class=link title="enum GIOCondition" href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOCondition"><SPAN class=returnvalue>GIOCondition</SPAN></A>
g_source_query_unix_fd (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> tag</CODE></EM>);</PRE>
<P>Queries the events reported for the fd corresponding to <EM class=parameter><CODE>tag</CODE></EM> on <EM class=parameter><CODE>source</CODE></EM> during the last poll.</P>
<P>The return value of this function is only defined when the function is called from the check or dispatch functions for <EM class=parameter><CODE>source</CODE></EM> .</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<P>As the name suggests, this function is not available on Windows.</P>
<DIV class=refsect3><A name=id-1.4.2.7.88.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>tag</P></TD>
<TD class=parameter_description>
<P>the tag from <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.88.9></A>
<H4>Returns</H4>
<P>the conditions reported on the fd</P>
<P></P></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-add-poll></A>
<H3>g_source_add_poll&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_add_poll (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fd</CODE></EM>);</PRE>
<P>Adds a file descriptor to the set of file descriptors polled for this source. This is usually combined with <A class=link title=g_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-new"><CODE class=function>g_source_new()</CODE></A> to add an event source. The event source's check function will typically test the <EM class=parameter><CODE>revents</CODE></EM> field in the <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> struct and return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if events need to be processed.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<P>Using this API forces the linear scanning of event sources on each main loop iteration. Newly-written event sources should try to use <A class=link title=g_source_add_unix_fd&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-unix-fd"><CODE class=function>g_source_add_unix_fd()</CODE></A> instead of this API.</P>
<DIV class=refsect3><A name=id-1.4.2.7.89.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> structure holding information about a file descriptor to watch.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-remove-poll></A>
<H3>g_source_remove_poll&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_remove_poll (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> *fd</CODE></EM>);</PRE>
<P>Removes a file descriptor from the set of file descriptors polled for this source. </P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<DIV class=refsect3><A name=id-1.4.2.7.90.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fd</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A> structure previously passed to <A class=link title=g_source_add_poll&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-poll"><CODE class=function>g_source_add_poll()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-add-child-source></A>
<H3>g_source_add_child_source&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_add_child_source (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *child_source</CODE></EM>);</PRE>
<P>Adds <EM class=parameter><CODE>child_source</CODE></EM> to <EM class=parameter><CODE>source</CODE></EM> as a "polled" source; when <EM class=parameter><CODE>source</CODE></EM> is added to a <A class=link title=GMainContext href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GMainContext"><SPAN class=type>GMainContext</SPAN></A>, <EM class=parameter><CODE>child_source</CODE></EM> will be automatically added with the same priority, when <EM class=parameter><CODE>child_source</CODE></EM> is triggered, it will cause <EM class=parameter><CODE>source</CODE></EM> to dispatch (in addition to calling its own callback), and when <EM class=parameter><CODE>source</CODE></EM> is destroyed, it will destroy <EM class=parameter><CODE>child_source</CODE></EM> as well. (<EM class=parameter><CODE>source</CODE></EM> will also still be dispatched if its own prepare/check functions indicate that it is ready.)</P>
<P>If you don't need <EM class=parameter><CODE>child_source</CODE></EM> to do anything on its own when it triggers, you can call <A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-source-set-dummy-callback"><CODE class=function>g_source_set_dummy_callback()</CODE></A> on it to set a callback that does nothing (except return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if appropriate).</P>
<P><EM class=parameter><CODE>source</CODE></EM> will hold a reference on <EM class=parameter><CODE>child_source</CODE></EM> while <EM class=parameter><CODE>child_source</CODE></EM> is attached to it.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<DIV class=refsect3><A name=id-1.4.2.7.91.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>child_source</P></TD>
<TD class=parameter_description>
<P>a second <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that <EM class=parameter><CODE>source</CODE></EM> should "poll"</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-remove-child-source></A>
<H3>g_source_remove_child_source&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_remove_child_source (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *child_source</CODE></EM>);</PRE>
<P>Detaches <EM class=parameter><CODE>child_source</CODE></EM> from <EM class=parameter><CODE>source</CODE></EM> and destroys it.</P>
<P>This API is only intended to be used by implementations of <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A>. Do not call this API on a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> that you did not create.</P>
<DIV class=refsect3><A name=id-1.4.2.7.92.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>child_source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> previously passed to <A class=link title=g_source_add_child_source&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-add-child-source"><CODE class=function>g_source_add_child_source()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-time></A>
<H3>g_source_get_time&nbsp;()</H3><PRE class=programlisting><A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=returnvalue>gint64</SPAN></A>
g_source_get_time (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>);</PRE>
<P>Gets the time to be used when checking this source. The advantage of calling this function over calling <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A> directly is that when checking multiple sources, GLib can cache a single value instead of having to repeatedly get the system monotonic time.</P>
<P>The time here is the system monotonic time, if available, or some other reasonable alternative otherwise. See <A class=link title=g_get_monotonic_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-monotonic-time"><CODE class=function>g_get_monotonic_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.93.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.93.7></A>
<H4>Returns</H4>
<P>the monotonic time in microseconds</P>
<P></P></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-get-current-time></A>
<H3>g_source_get_current_time&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_source_get_current_time (<EM class=parameter><CODE><A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> *source</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title="struct GTimeVal" href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#GTimeVal"><SPAN class=type>GTimeVal</SPAN></A> *timeval</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_source_get_current_time</CODE> has been deprecated since version 2.28 and should not be used in newly-written code.</P>
<P>use <A class=link title=g_source_get_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-time"><CODE class=function>g_source_get_time()</CODE></A> instead</P></DIV>
<P>This function ignores <EM class=parameter><CODE>source</CODE></EM> and is otherwise the same as <A class=link title=g_get_current_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-current-time"><CODE class=function>g_get_current_time()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.2.7.94.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>source</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>timeval</P></TD>
<TD class=parameter_description>
<P><A class=link title="struct GTimeVal" href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#GTimeVal"><SPAN class=type>GTimeVal</SPAN></A> structure in which to store current time.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-remove></A>
<H3>g_source_remove&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_source_remove (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> tag</CODE></EM>);</PRE>
<P>Removes the source with the given id from the default main context.</P>
<P>The id of a <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> is given by <A class=link title=g_source_get_id&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-get-id"><CODE class=function>g_source_get_id()</CODE></A>, or will be returned by the functions <A class=link title=g_source_attach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-attach"><CODE class=function>g_source_attach()</CODE></A>, <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>, <A class=link title=g_idle_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add-full"><CODE class=function>g_idle_add_full()</CODE></A>, <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>, <A class=link title=g_timeout_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add-full"><CODE class=function>g_timeout_add_full()</CODE></A>, <A class=link title=g_child_watch_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-add"><CODE class=function>g_child_watch_add()</CODE></A>, <A class=link title=g_child_watch_add_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-child-watch-add-full"><CODE class=function>g_child_watch_add_full()</CODE></A>, <A class=link title=g_io_add_watch&nbsp;() href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#g-io-add-watch"><CODE class=function>g_io_add_watch()</CODE></A>, and <A class=link title=g_io_add_watch_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#g-io-add-watch-full"><CODE class=function>g_io_add_watch_full()</CODE></A>.</P>
<P>See also <A class=link title=g_source_destroy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-destroy"><CODE class=function>g_source_destroy()</CODE></A>. You must use <A class=link title=g_source_destroy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-destroy"><CODE class=function>g_source_destroy()</CODE></A> for sources added to a non-default main context.</P>
<P>It is a programmer error to attempt to remove a non-existent source.</P>
<P>More specifically: source IDs can be reissued after a source has been destroyed and therefore it is never valid to use this function with a source ID which may have already been removed. An example is when scheduling an idle to run in another thread with <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>: the idle may already have run and been removed by the time this function is called on its (now invalid) source ID. This source ID may have been reissued, leading to the operation being performed against the wrong source.</P>
<DIV class=refsect3><A name=id-1.4.2.7.95.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>tag</P></TD>
<TD class=parameter_description>
<P>the ID of the source to remove.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.95.10></A>
<H4>Returns</H4>
<P>For historical reasons, this function always returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-remove-by-funcs-user-data></A>
<H3>g_source_remove_by_funcs_user_data&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_source_remove_by_funcs_user_data (<EM class=parameter><CODE><A class=link title="struct GSourceFuncs" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFuncs"><SPAN class=type>GSourceFuncs</SPAN></A> *funcs</CODE></EM>,
                                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Removes a source from the default main loop context given the source functions and user data. If multiple sources exist with the same source functions and user data, only one will be destroyed.</P>
<DIV class=refsect3><A name=id-1.4.2.7.96.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>funcs</P></TD>
<TD class=parameter_description>
<P>The <EM class=parameter><CODE>source_funcs</CODE></EM> passed to <A class=link title=g_source_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-new"><CODE class=function>g_source_new()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>the user data for the callback</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.96.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a source was found and removed. </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-source-remove-by-user-data></A>
<H3>g_source_remove_by_user_data&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_source_remove_by_user_data (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Removes a source from the default main loop context given the user data for the callback. If multiple sources exist with the same user data, only one will be destroyed.</P>
<DIV class=refsect3><A name=id-1.4.2.7.97.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>the user_data for the callback.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.2.7.97.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if a source was found and removed. </P>
<P></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-The-Main-Event-Loop.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GMainLoop></A>
<H3>GMainLoop</H3><PRE class=programlisting>typedef struct _GMainLoop GMainLoop;</PRE>
<P>The <CODE class=literal>GMainLoop</CODE> struct is an opaque data type representing the main event loop of a GLib or GTK+ application.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-PRIORITY-HIGH:CAPS></A>
<H3>G_PRIORITY_HIGH</H3><PRE class=programlisting>#define G_PRIORITY_HIGH            -100
</PRE>
<P>Use this for high priority event sources.</P>
<P>It is not used within GLib or GTK+.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-PRIORITY-DEFAULT:CAPS></A>
<H3>G_PRIORITY_DEFAULT</H3><PRE class=programlisting>#define G_PRIORITY_DEFAULT          0
</PRE>
<P>Use this for default priority event sources.</P>
<P>In GLib this priority is used when adding timeout functions with <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>. In GDK this priority is used for events from the X server.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-PRIORITY-HIGH-IDLE:CAPS></A>
<H3>G_PRIORITY_HIGH_IDLE</H3><PRE class=programlisting>#define G_PRIORITY_HIGH_IDLE        100
</PRE>
<P>Use this for high priority idle functions.</P>
<P>GTK+ uses <A class=link title=G_PRIORITY_HIGH_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH-IDLE:CAPS"><SPAN class=type>G_PRIORITY_HIGH_IDLE</SPAN></A> + 10 for resizing operations, and <A class=link title=G_PRIORITY_HIGH_IDLE href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#G-PRIORITY-HIGH-IDLE:CAPS"><SPAN class=type>G_PRIORITY_HIGH_IDLE</SPAN></A> + 20 for redrawing operations. (This is done to ensure that any pending resizes are processed before any pending redraws, so that widgets are not redrawn twice unnecessarily.)</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-PRIORITY-DEFAULT-IDLE:CAPS></A>
<H3>G_PRIORITY_DEFAULT_IDLE</H3><PRE class=programlisting>#define G_PRIORITY_DEFAULT_IDLE     200
</PRE>
<P>Use this for default priority idle functions.</P>
<P>In GLib this priority is used when adding idle functions with <A class=link title=g_idle_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-idle-add"><CODE class=function>g_idle_add()</CODE></A>.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-PRIORITY-LOW:CAPS></A>
<H3>G_PRIORITY_LOW</H3><PRE class=programlisting>#define G_PRIORITY_LOW              300
</PRE>
<P>Use this for very low priority background tasks.</P>
<P>It is not used within GLib or GTK+.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-SOURCE-CONTINUE:CAPS></A>
<H3>G_SOURCE_CONTINUE</H3><PRE class=programlisting>#define G_SOURCE_CONTINUE       TRUE
</PRE>
<P>Use this macro as the return value of a <A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> to leave the <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> in the main loop.</P>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-SOURCE-REMOVE:CAPS></A>
<H3>G_SOURCE_REMOVE</H3><PRE class=programlisting>#define G_SOURCE_REMOVE         FALSE
</PRE>
<P>Use this macro as the return value of a <A class=link title=GSourceFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSourceFunc"><SPAN class=type>GSourceFunc</SPAN></A> to remove the <A class=link title="struct GSource" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GSource"><SPAN class=type>GSource</SPAN></A> from the main loop.</P>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GMainContext></A>
<H3>GMainContext</H3><PRE class=programlisting>typedef struct _GMainContext GMainContext;</PRE>
<P>The <CODE class=literal>GMainContext</CODE> struct is an opaque data type representing a set of sources to be handled in a main loop.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPid></A>
<H3>GPid</H3><PRE class=programlisting>typedef int GPid;
</PRE>
<P>A type which is used to hold a process identification.</P>
<P>On UNIX, processes are identified by a process id (an integer), while Windows uses process handles (which are pointers).</P>
<P>GPid is used in GLib only for descendant processes spawned with the g_spawn functions.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPollFD></A>
<H3>struct GPollFD</H3><PRE class=programlisting>struct GPollFD {
#if defined (G_OS_WIN32) &amp;&amp; GLIB_SIZEOF_VOID_P == 8
#endif
#else
  gint		fd;
#endif
  gushort 	events;
  gushort 	revents;
};
</PRE>
<P>Represents a file descriptor, which events to poll for, and which events occurred.</P>
<DIV class=refsect3><A name=id-1.4.2.8.12.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GPollFD.fd></A>fd</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the file descriptor to poll (or a HANDLE on Win32)</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gushort href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gushort"><SPAN class=type>gushort</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GPollFD.events></A>events</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a bitwise combination from <A class=link title="enum GIOCondition" href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOCondition"><SPAN class=type>GIOCondition</SPAN></A>, specifying which events should be polled for. Typically for reading from a file descriptor you would use <A class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#G-IO-IN:CAPS"><CODE class=literal>G_IO_IN</CODE></A> | <A class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#G-IO-HUP:CAPS"><CODE class=literal>G_IO_HUP</CODE></A> | <A class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#G-IO-ERR:CAPS"><CODE class=literal>G_IO_ERR</CODE></A>, and for writing you would use <A class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#G-IO-OUT:CAPS"><CODE class=literal>G_IO_OUT</CODE></A> | <A class=link href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#G-IO-ERR:CAPS"><CODE class=literal>G_IO_ERR</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gushort href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gushort"><SPAN class=type>gushort</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GPollFD.revents></A>revents</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>a bitwise combination of flags from <A class=link title="enum GIOCondition" href="https://developer.gnome.org/glib/stable/glib-IO-Channels.html#GIOCondition"><SPAN class=type>GIOCondition</SPAN></A>, returned from the <CODE class=function>poll()</CODE> function to indicate which events occurred.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-POLLFD-FORMAT:CAPS></A>
<H3>G_POLLFD_FORMAT</H3><PRE class=programlisting>#define G_POLLFD_FORMAT "%#I64x"
</PRE>
<P>A format specifier that can be used in <CODE class=function>printf()</CODE>-style format strings when printing the <EM class=parameter><CODE>fd</CODE></EM> member of a <A class=link title="struct GPollFD" href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#GPollFD"><SPAN class=type>GPollFD</SPAN></A>.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSource></A>
<H3>struct GSource</H3><PRE class=programlisting>struct GSource {
};
</PRE>
<P>The <CODE class=literal>GSource</CODE> struct is an opaque data type representing an event source.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSourceFuncs></A>
<H3>struct GSourceFuncs</H3><PRE class=programlisting>struct GSourceFuncs {
  gboolean (*prepare)  (GSource    *source,
                        gint       *timeout_);
  gboolean (*check)    (GSource    *source);
  gboolean (*dispatch) (GSource    *source,
                        GSourceFunc callback,
                        gpointer    user_data);
  void     (*finalize) (GSource    *source); /* Can be NULL */
};
</PRE>
<P>The <CODE class=literal>GSourceFuncs</CODE> struct contains a table of functions used to handle event sources in a generic manner.</P>
<P>For idle sources, the prepare and check functions always return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> to indicate that the source is always ready to be processed. The prepare function also returns a timeout value of 0 to ensure that the <CODE class=function>poll()</CODE> call doesn't block (since that would be time wasted which could have been spent running the idle function).</P>
<P>For timeout sources, the prepare and check functions both return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the timeout interval has expired. The prepare function also returns a timeout value to ensure that the <CODE class=function>poll()</CODE> call doesn't block too long and miss the next timeout.</P>
<P>For file descriptor sources, the prepare function typically returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, since it must wait until <CODE class=function>poll()</CODE> has been called before it knows whether any events need to be processed. It sets the returned timeout to -1 to indicate that it doesn't mind how long the <CODE class=function>poll()</CODE> call blocks. In the check function, it tests the results of the <CODE class=function>poll()</CODE> call to see if the required condition has been met, and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if so.</P>
<DIV class=refsect3><A name=id-1.4.2.8.15.8></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceFuncs.prepare></A>prepare</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called before all the file descriptors are polled. If the source can determine that it is ready here (without waiting for the results of the <CODE class=function>poll()</CODE> call) it should return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. It can also return a <EM class=parameter><CODE>timeout_</CODE></EM> value which should be the maximum timeout (in milliseconds) which should be passed to the <CODE class=function>poll()</CODE> call. The actual timeout used will be -1 if all sources returned -1, or it will be the minimum of all the <EM class=parameter><CODE>timeout_</CODE></EM> values returned which were &gt;= 0. Since 2.36 this may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, in which case the effect is as if the function always returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> with a timeout of -1. If <EM class=parameter><CODE>prepare</CODE></EM> returns a timeout and the source also has a 'ready time' set then the nearer of the two will be used.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceFuncs.check></A>check</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called after all the file descriptors are polled. The source should return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if it is ready to be dispatched. Note that some time may have passed since the previous prepare function was called, so the source should be checked again here. Since 2.36 this may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, in which case the effect is as if the function always returns <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceFuncs.dispatch></A>dispatch</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called to dispatch the event source, after it has returned <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> in either its <EM class=parameter><CODE>prepare</CODE></EM> or its <EM class=parameter><CODE>check</CODE></EM> function. The <EM class=parameter><CODE>dispatch</CODE></EM> function is passed in a callback function and data. The callback function may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the source was never connected to a callback using <A class=link title=g_source_set_callback&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-source-set-callback"><CODE class=function>g_source_set_callback()</CODE></A>. The <EM class=parameter><CODE>dispatch</CODE></EM> function should call the callback function with <EM class=parameter><CODE>user_data</CODE></EM> and whatever additional parameters are needed for this type of event source.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceFuncs.finalize></A>finalize</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called when the source is finalized.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSourceCallbackFuncs></A>
<H3>struct GSourceCallbackFuncs</H3><PRE class=programlisting>struct GSourceCallbackFuncs {
  void (*ref)   (gpointer     cb_data);
  void (*unref) (gpointer     cb_data);
  void (*get)   (gpointer     cb_data,
                 GSource     *source, 
                 GSourceFunc *func,
                 gpointer    *data);
};
</PRE>
<P>The <CODE class=literal>GSourceCallbackFuncs</CODE> struct contains functions for managing callback objects.</P>
<DIV class=refsect3><A name=id-1.4.2.8.16.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceCallbackFuncs.ref></A>ref</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called when a reference is added to the callback object</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceCallbackFuncs.unref></A>unref</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called when a reference to the callback object is dropped</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GSourceCallbackFuncs.get></A>get</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Called to extract the callback function and data from the callback object.</P></TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>