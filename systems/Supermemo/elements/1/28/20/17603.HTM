<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Thread-Pools.top_of_page></A>Thread Pools</SPAN></H2>
<P>Thread Pools &#8212; pools of threads to execute work concurrently</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Thread-Pools.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=returnvalue>GThreadPool</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_thread_pool_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-new">g_thread_pool_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-push">g_thread_pool_push</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_set_max_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-max-threads">g_thread_pool_set_max_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_get_max_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-max-threads">g_thread_pool_get_max_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_get_num_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-num-threads">g_thread_pool_get_num_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_unprocessed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-unprocessed">g_thread_pool_unprocessed</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_thread_pool_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-free">g_thread_pool_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_thread_pool_set_max_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-max-unused-threads">g_thread_pool_set_max_unused_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_get_max_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-max-unused-threads">g_thread_pool_get_max_unused_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_get_num_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-num-unused-threads">g_thread_pool_get_num_unused_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_thread_pool_stop_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-stop-unused-threads">g_thread_pool_stop_unused_threads</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_thread_pool_set_sort_function&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-sort-function">g_thread_pool_set_sort_function</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_thread_pool_set_max_idle_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-max-idle-time">g_thread_pool_set_max_idle_time</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_thread_pool_get_max_idle_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-max-idle-time">g_thread_pool_get_max_idle_time</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Thread-Pools.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool">GThreadPool</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Thread-Pools.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Thread-Pools.description></A>
<H2>Description</H2>
<P>Sometimes you wish to asynchronously fork out the execution of work and continue working in your own thread. If that will happen often, the overhead of starting and destroying a thread each time might be too high. In such cases reusing already started threads seems like a good idea. And it indeed is, but implementing this can be tedious and error-prone.</P>
<P>Therefore GLib provides thread pools for your convenience. An added advantage is, that the threads can be shared between the different subsystems of your program, when they are using GLib.</P>
<P>To create a new thread pool, you use <A class=link title=g_thread_pool_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-new"><CODE class=function>g_thread_pool_new()</CODE></A>. It is destroyed by <A class=link title=g_thread_pool_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-free"><CODE class=function>g_thread_pool_free()</CODE></A>.</P>
<P>If you want to execute a certain task within a thread pool, you call <A class=link title=g_thread_pool_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-push"><CODE class=function>g_thread_pool_push()</CODE></A>.</P>
<P>To get the current number of running threads you call <A class=link title=g_thread_pool_get_num_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-num-threads"><CODE class=function>g_thread_pool_get_num_threads()</CODE></A>. To get the number of still unprocessed tasks you call <A class=link title=g_thread_pool_unprocessed&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-unprocessed"><CODE class=function>g_thread_pool_unprocessed()</CODE></A>. To control the maximal number of threads for a thread pool, you use <A class=link title=g_thread_pool_get_max_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-max-threads"><CODE class=function>g_thread_pool_get_max_threads()</CODE></A> and <A class=link title=g_thread_pool_set_max_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-max-threads"><CODE class=function>g_thread_pool_set_max_threads()</CODE></A>.</P>
<P>Finally you can control the number of unused threads, that are kept alive by GLib for future use. The current number can be fetched with <A class=link title=g_thread_pool_get_num_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-num-unused-threads"><CODE class=function>g_thread_pool_get_num_unused_threads()</CODE></A>. The maximal number can be controlled by <A class=link title=g_thread_pool_get_max_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-get-max-unused-threads"><CODE class=function>g_thread_pool_get_max_unused_threads()</CODE></A> and <A class=link title=g_thread_pool_set_max_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-max-unused-threads"><CODE class=function>g_thread_pool_set_max_unused_threads()</CODE></A>. All currently unused threads can be stopped by calling <A class=link title=g_thread_pool_stop_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-stop-unused-threads"><CODE class=function>g_thread_pool_stop_unused_threads()</CODE></A>.</P></DIV>
<DIV class=refsect1><A name=glib-Thread-Pools.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-thread-pool-new></A>
<H3>g_thread_pool_new&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=returnvalue>GThreadPool</SPAN></A>&nbsp;*
g_thread_pool_new (<EM class=parameter><CODE><A class=link title=GFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GFunc"><SPAN class=type>GFunc</SPAN></A> func</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> max_threads</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> exclusive</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>This function creates a new thread pool.</P>
<P>Whenever you call <A class=link title=g_thread_pool_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-push"><CODE class=function>g_thread_pool_push()</CODE></A>, either a new thread is created or an unused one is reused. At most <EM class=parameter><CODE>max_threads</CODE></EM> threads are running concurrently for this thread pool. <EM class=parameter><CODE>max_threads</CODE></EM> = -1 allows unlimited threads to be created for this thread pool. The newly created or reused thread now executes the function <EM class=parameter><CODE>func</CODE></EM> with the two arguments. The first one is the parameter to <A class=link title=g_thread_pool_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-push"><CODE class=function>g_thread_pool_push()</CODE></A> and the second one is <EM class=parameter><CODE>user_data</CODE></EM> .</P>
<P>The parameter <EM class=parameter><CODE>exclusive</CODE></EM> determines whether the thread pool owns all threads exclusive or shares them with other thread pools. If <EM class=parameter><CODE>exclusive</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, <EM class=parameter><CODE>max_threads</CODE></EM> threads are started immediately and they will run exclusively for this thread pool until it is destroyed by <A class=link title=g_thread_pool_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-free"><CODE class=function>g_thread_pool_free()</CODE></A>. If <EM class=parameter><CODE>exclusive</CODE></EM> is <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A>, threads are created when needed and shared between all non-exclusive thread pools. This implies that <EM class=parameter><CODE>max_threads</CODE></EM> may not be -1 for exclusive thread pools. Besides, exclusive thread pools are not affected by <A class=link title=g_thread_pool_set_max_idle_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-set-max-idle-time"><CODE class=function>g_thread_pool_set_max_idle_time()</CODE></A> since their threads are never considered idle and returned to the global pool.</P>
<P><EM class=parameter><CODE>error</CODE></EM> can be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors, or non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to report errors. An error can only occur when <EM class=parameter><CODE>exclusive</CODE></EM> is set to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> and not all <EM class=parameter><CODE>max_threads</CODE></EM> threads could be created. See <A class=link title="enum GThreadError" href="https://developer.gnome.org/glib/stable/glib-Threads.html#GThreadError"><SPAN class=type>GThreadError</SPAN></A> for possible errors that may occurr. Note, even in case of error a valid <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> is returned.</P>
<DIV class=refsect3><A name=id-1.4.4.7.2.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>a function to execute in the threads of the new thread pool</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data that is handed over to <EM class=parameter><CODE>func</CODE></EM> every time it is called</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>max_threads</P></TD>
<TD class=parameter_description>
<P>the maximal number of threads to execute concurrently in the new thread pool, -1 means no limit</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>exclusive</P></TD>
<TD class=parameter_description>
<P>should this thread pool be exclusive?</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>return location for error, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.4.7.2.9></A>
<H4>Returns</H4>
<P>the new <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-push></A>
<H3>g_thread_pool_push&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_thread_pool_push (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Inserts <EM class=parameter><CODE>data</CODE></EM> into the list of tasks to be executed by <EM class=parameter><CODE>pool</CODE></EM> .</P>
<P>When the number of currently running threads is lower than the maximal allowed number of threads, a new thread is started (or reused) with the properties given to <A class=link title=g_thread_pool_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-new"><CODE class=function>g_thread_pool_new()</CODE></A>. Otherwise, <EM class=parameter><CODE>data</CODE></EM> stays in the queue until a thread in this pool finishes its previous task and processes <EM class=parameter><CODE>data</CODE></EM> .</P>
<P><EM class=parameter><CODE>error</CODE></EM> can be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors, or non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to report errors. An error can only occur when a new thread couldn't be created. In that case <EM class=parameter><CODE>data</CODE></EM> is simply appended to the queue of work to do.</P>
<P>Before version 2.32, this function did not return a success status.</P>
<DIV class=refsect3><A name=id-1.4.4.7.3.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>a new task for <EM class=parameter><CODE>pool</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>return location for error, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.4.7.3.9></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success, <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if an error occurred</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-set-max-threads></A>
<H3>g_thread_pool_set_max_threads&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_thread_pool_set_max_threads (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>,
                               <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> max_threads</CODE></EM>,
                               <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Sets the maximal allowed number of threads for <EM class=parameter><CODE>pool</CODE></EM> . A value of -1 means that the maximal number of threads is unlimited. If <EM class=parameter><CODE>pool</CODE></EM> is an exclusive thread pool, setting the maximal number of threads to -1 is not allowed.</P>
<P>Setting <EM class=parameter><CODE>max_threads</CODE></EM> to 0 means stopping all work for <EM class=parameter><CODE>pool</CODE></EM> . It is effectively frozen until <EM class=parameter><CODE>max_threads</CODE></EM> is set to a non-zero value again.</P>
<P>A thread is never terminated while calling <EM class=parameter><CODE>func</CODE></EM> , as supplied by <A class=link title=g_thread_pool_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-new"><CODE class=function>g_thread_pool_new()</CODE></A>. Instead the maximal number of threads only has effect for the allocation of new threads in <A class=link title=g_thread_pool_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-push"><CODE class=function>g_thread_pool_push()</CODE></A>. A new thread is allocated, whenever the number of currently running threads in <EM class=parameter><CODE>pool</CODE></EM> is smaller than the maximal number.</P>
<P><EM class=parameter><CODE>error</CODE></EM> can be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors, or non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to report errors. An error can only occur when a new thread couldn't be created.</P>
<P>Before version 2.32, this function did not return a success status.</P>
<DIV class=refsect3><A name=id-1.4.4.7.4.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>max_threads</P></TD>
<TD class=parameter_description>
<P>a new maximal number of threads for <EM class=parameter><CODE>pool</CODE></EM> , or -1 for unlimited</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>return location for error, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.4.7.4.10></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success, <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if an error occurred</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-get-max-threads></A>
<H3>g_thread_pool_get_max_threads&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_thread_pool_get_max_threads (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>);</PRE>
<P>Returns the maximal number of threads for <EM class=parameter><CODE>pool</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.4.4.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.4.7.5.6></A>
<H4>Returns</H4>
<P>the maximal number of threads</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-get-num-threads></A>
<H3>g_thread_pool_get_num_threads&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_thread_pool_get_num_threads (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>);</PRE>
<P>Returns the number of threads currently running in <EM class=parameter><CODE>pool</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.4.4.7.6.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.4.7.6.6></A>
<H4>Returns</H4>
<P>the number of threads currently running</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-unprocessed></A>
<H3>g_thread_pool_unprocessed&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_thread_pool_unprocessed (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>);</PRE>
<P>Returns the number of tasks still unprocessed in <EM class=parameter><CODE>pool</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.4.4.7.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.4.7.7.6></A>
<H4>Returns</H4>
<P>the number of unprocessed tasks</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-free></A>
<H3>g_thread_pool_free&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_thread_pool_free (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> immediate</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> wait_</CODE></EM>);</PRE>
<P>Frees all resources allocated for <EM class=parameter><CODE>pool</CODE></EM> .</P>
<P>If <EM class=parameter><CODE>immediate</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, no new task is processed for <EM class=parameter><CODE>pool</CODE></EM> . Otherwise <EM class=parameter><CODE>pool</CODE></EM> is not freed before the last task is processed. Note however, that no thread of this pool is interrupted while processing a task. Instead at least all still running threads can finish their tasks before the <EM class=parameter><CODE>pool</CODE></EM> is freed.</P>
<P>If <EM class=parameter><CODE>wait_</CODE></EM> is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, the functions does not return before all tasks to be processed (dependent on <EM class=parameter><CODE>immediate</CODE></EM> , whether all or only the currently running) are ready. Otherwise the function returns immediately.</P>
<P>After calling this function <EM class=parameter><CODE>pool</CODE></EM> must not be used anymore.</P>
<DIV class=refsect3><A name=id-1.4.4.7.8.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>immediate</P></TD>
<TD class=parameter_description>
<P>should <EM class=parameter><CODE>pool</CODE></EM> shut down immediately?</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>wait_</P></TD>
<TD class=parameter_description>
<P>should the function wait for all tasks to be finished?</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-set-max-unused-threads></A>
<H3>g_thread_pool_set_max_unused_threads&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_thread_pool_set_max_unused_threads (<EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> max_threads</CODE></EM>);</PRE>
<P>Sets the maximal number of unused threads to <EM class=parameter><CODE>max_threads</CODE></EM> . If <EM class=parameter><CODE>max_threads</CODE></EM> is -1, no limit is imposed on the number of unused threads.</P>
<P>The default value is 2.</P>
<DIV class=refsect3><A name=id-1.4.4.7.9.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>max_threads</P></TD>
<TD class=parameter_description>
<P>maximal number of unused threads</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-get-max-unused-threads></A>
<H3>g_thread_pool_get_max_unused_threads&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_thread_pool_get_max_unused_threads (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns the maximal allowed number of unused threads.</P>
<DIV class=refsect3><A name=id-1.4.4.7.10.5></A>
<H4>Returns</H4>
<P>the maximal number of unused threads</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-get-num-unused-threads></A>
<H3>g_thread_pool_get_num_unused_threads&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_thread_pool_get_num_unused_threads (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns the number of currently unused threads.</P>
<DIV class=refsect3><A name=id-1.4.4.7.11.5></A>
<H4>Returns</H4>
<P>the number of currently unused threads</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-stop-unused-threads></A>
<H3>g_thread_pool_stop_unused_threads&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_thread_pool_stop_unused_threads (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Stops all currently unused threads. This does not change the maximal number of unused threads. This function can be used to regularly stop all unused threads e.g. from <A class=link title=g_timeout_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-The-Main-Event-Loop.html#g-timeout-add"><CODE class=function>g_timeout_add()</CODE></A>.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-set-sort-function></A>
<H3>g_thread_pool_set_sort_function&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_thread_pool_set_sort_function (<EM class=parameter><CODE><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> *pool</CODE></EM>,
                                 <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> func</CODE></EM>,
                                 <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Sets the function used to sort the list of tasks. This allows the tasks to be processed by a priority determined by <EM class=parameter><CODE>func</CODE></EM> , and not just in the order in which they were added to the pool.</P>
<P>Note, if the maximum number of threads is more than 1, the order that threads are executed cannot be guaranteed 100%. Threads are scheduled by the operating system and are executed at random. It cannot be assumed that threads are executed in the order they are created.</P>
<DIV class=refsect3><A name=id-1.4.4.7.13.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pool</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> used to sort the list of tasks. This function is passed two tasks. It should return 0 if the order in which they are handled does not matter, a negative value if the first task should be processed before the second or a positive value if the second task should be processed first.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <EM class=parameter><CODE>func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-set-max-idle-time></A>
<H3>g_thread_pool_set_max_idle_time&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_thread_pool_set_max_idle_time (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> interval</CODE></EM>);</PRE>
<P>This function will set the maximum <EM class=parameter><CODE>interval</CODE></EM> that a thread waiting in the pool for new tasks can be idle for before being stopped. This function is similar to calling <A class=link title=g_thread_pool_stop_unused_threads&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#g-thread-pool-stop-unused-threads"><CODE class=function>g_thread_pool_stop_unused_threads()</CODE></A> on a regular timeout, except this is done on a per thread basis.</P>
<P>By setting <EM class=parameter><CODE>interval</CODE></EM> to 0, idle threads will not be stopped.</P>
<P>The default value is 15000 (15 seconds).</P>
<DIV class=refsect3><A name=id-1.4.4.7.14.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>interval</P></TD>
<TD class=parameter_description>
<P>the maximum <EM class=parameter><CODE>interval</CODE></EM> (in milliseconds) a thread can be idle</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-thread-pool-get-max-idle-time></A>
<H3>g_thread_pool_get_max_idle_time&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_thread_pool_get_max_idle_time (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>This function will return the maximum <EM class=parameter><CODE>interval</CODE></EM> that a thread will wait in the thread pool for new tasks before being stopped.</P>
<P>If this function returns 0, threads waiting in the thread pool for new work are not stopped.</P>
<DIV class=refsect3><A name=id-1.4.4.7.15.6></A>
<H4>Returns</H4>
<P>the maximum <EM class=parameter><CODE>interval</CODE></EM> (milliseconds) to wait for new tasks in the thread pool before stopping the thread</P>
<P></P></DIV>
<P class=since>Since 2.10</P></DIV></DIV>
<DIV class=refsect1><A name=glib-Thread-Pools.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GThreadPool></A>
<H3>struct GThreadPool</H3><PRE class=programlisting>struct GThreadPool {
  GFunc func;
  gpointer user_data;
  gboolean exclusive;
};
</PRE>
<P>The <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> struct represents a thread pool. It has three public read-only members, but the underlying struct is bigger, so you must not copy this struct.</P>
<DIV class=refsect3><A name=id-1.4.4.8.2.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A class=link title=GFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GFunc"><SPAN class=type>GFunc</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GThreadPool.func></A>func</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the function to execute in the threads of this pool</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GThreadPool.user-data></A>user_data</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the user data for the threads of this pool</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GThreadPool.exclusive></A>exclusive</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>are all threads exclusive to this pool</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Thread-Pools.see-also></A>
<H2>See Also</H2>
<P><A class=link title=GThread href="https://developer.gnome.org/glib/stable/glib-Threads.html#GThread"><SPAN class=type>GThread</SPAN></A></P></DIV>