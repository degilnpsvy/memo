<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Asynchronous-Queues.top_of_page></A>Asynchronous Queues</SPAN></H2>
<P>Asynchronous Queues &#8212; asynchronous communication between threads</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=returnvalue>GAsyncQueue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_async_queue_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-new">g_async_queue_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=returnvalue>GAsyncQueue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_async_queue_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-new-full">g_async_queue_new_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=returnvalue>GAsyncQueue</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_async_queue_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-ref">g_async_queue_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unref">g_async_queue_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-push">g_async_queue_push</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_push_sorted&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-push-sorted">g_async_queue_push_sorted</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-pop">g_async_queue_pop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_try_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-try-pop">g_async_queue_try_pop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_timeout_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timeout-pop">g_async_queue_timeout_pop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_length&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-length">g_async_queue_length</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-sort">g_async_queue_sort</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_lock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-lock">g_async_queue_lock</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_unlock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unlock">g_async_queue_unlock</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_ref_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-ref-unlocked">g_async_queue_ref_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_unref_and_unlock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unref-and-unlock">g_async_queue_unref_and_unlock</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_push_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-push-unlocked">g_async_queue_push_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_push_sorted_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-push-sorted-unlocked">g_async_queue_push_sorted_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_pop_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-pop-unlocked">g_async_queue_pop_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_try_pop_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-try-pop-unlocked">g_async_queue_try_pop_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_timeout_pop_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timeout-pop-unlocked">g_async_queue_timeout_pop_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_length_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-length-unlocked">g_async_queue_length_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_async_queue_sort_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-sort-unlocked">g_async_queue_sort_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_timed_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timed-pop">g_async_queue_timed_pop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_async_queue_timed_pop_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timed-pop-unlocked">g_async_queue_timed_pop_unlocked</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue">GAsyncQueue</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.description></A>
<H2>Description</H2>
<P>Often you need to communicate between different threads. In general it's safer not to do this by shared memory, but by explicit message passing. These messages only make sense asynchronously for multi-threaded applications though, as a synchronous operation could as well be done in the same thread.</P>
<P>Asynchronous queues are an exception from most other GLib data structures, as they can be used simultaneously from multiple threads without explicit locking and they bring their own builtin reference counting. This is because the nature of an asynchronous queue is that it will always be used by at least 2 concurrent threads.</P>
<P>For using an asynchronous queue you first have to create one with <A class=link title=g_async_queue_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-new"><CODE class=function>g_async_queue_new()</CODE></A>. <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> structs are reference counted, use <A class=link title=g_async_queue_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-ref"><CODE class=function>g_async_queue_ref()</CODE></A> and <A class=link title=g_async_queue_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unref"><CODE class=function>g_async_queue_unref()</CODE></A> to manage your references.</P>
<P>A thread which wants to send a message to that queue simply calls <A class=link title=g_async_queue_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-push"><CODE class=function>g_async_queue_push()</CODE></A> to push the message to the queue.</P>
<P>A thread which is expecting messages from an asynchronous queue simply calls <A class=link title=g_async_queue_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-pop"><CODE class=function>g_async_queue_pop()</CODE></A> for that queue. If no message is available in the queue at that point, the thread is now put to sleep until a message arrives. The message will be removed from the queue and returned. The functions <A class=link title=g_async_queue_try_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-try-pop"><CODE class=function>g_async_queue_try_pop()</CODE></A> and <A class=link title=g_async_queue_timeout_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timeout-pop"><CODE class=function>g_async_queue_timeout_pop()</CODE></A> can be used to only check for the presence of messages or to only wait a certain time for messages respectively.</P>
<P>For almost every function there exist two variants, one that locks the queue and one that doesn't. That way you can hold the queue lock (acquire it with <A class=link title=g_async_queue_lock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-lock"><CODE class=function>g_async_queue_lock()</CODE></A> and release it with <A class=link title=g_async_queue_unlock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unlock"><CODE class=function>g_async_queue_unlock()</CODE></A>) over multiple queue accessing instructions. This can be necessary to ensure the integrity of the queue, but should only be used when really necessary, as it can make your life harder if used unwisely. Normally you should only use the locking function variants (those without the _unlocked suffix).</P>
<P>In many cases, it may be more convenient to use <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> when you need to distribute work to a set of worker threads instead of using <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> manually. <A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A> uses a GAsyncQueue internally.</P></DIV>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-async-queue-new></A>
<H3>g_async_queue_new&nbsp;()</H3><PRE class=programlisting><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=returnvalue>GAsyncQueue</SPAN></A>&nbsp;*
g_async_queue_new (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Creates a new asynchronous queue.</P>
<DIV class=refsect3><A name=id-1.4.5.7.2.5></A>
<H4>Returns</H4>
<P>a new <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A>. Free with <A class=link title=g_async_queue_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unref"><CODE class=function>g_async_queue_unref()</CODE></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-new-full></A>
<H3>g_async_queue_new_full&nbsp;()</H3><PRE class=programlisting><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=returnvalue>GAsyncQueue</SPAN></A>&nbsp;*
g_async_queue_new_full (<EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> item_free_func</CODE></EM>);</PRE>
<P>Creates a new asynchronous queue and sets up a destroy notify function that is used to free any remaining queue items when the queue is destroyed after the final unref.</P>
<DIV class=refsect3><A name=id-1.4.5.7.3.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>item_free_func</P></TD>
<TD class=parameter_description>
<P>function to free queue elements</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.3.6></A>
<H4>Returns</H4>
<P>a new <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A>. Free with <A class=link title=g_async_queue_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unref"><CODE class=function>g_async_queue_unref()</CODE></A></P>
<P></P></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-ref></A>
<H3>g_async_queue_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=returnvalue>GAsyncQueue</SPAN></A>&nbsp;*
g_async_queue_ref (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Increases the reference count of the asynchronous <EM class=parameter><CODE>queue</CODE></EM> by 1. You do not need to hold the lock to call this function.</P>
<DIV class=refsect3><A name=id-1.4.5.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.4.6></A>
<H4>Returns</H4>
<P>the <EM class=parameter><CODE>queue</CODE></EM> that was passed in (since 2.6)</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-unref></A>
<H3>g_async_queue_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_unref (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Decreases the reference count of the asynchronous <EM class=parameter><CODE>queue</CODE></EM> by 1.</P>
<P>If the reference count went to 0, the <EM class=parameter><CODE>queue</CODE></EM> will be destroyed and the memory allocated will be freed. So you are not allowed to use the <EM class=parameter><CODE>queue</CODE></EM> afterwards, as it might have disappeared. You do not need to hold the lock to call this function.</P>
<DIV class=refsect3><A name=id-1.4.5.7.5.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-push></A>
<H3>g_async_queue_push&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_push (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Pushes the <EM class=parameter><CODE>data</CODE></EM> into the <EM class=parameter><CODE>queue</CODE></EM> . <EM class=parameter><CODE>data</CODE></EM> must not be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.5.7.6.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P><EM class=parameter><CODE>data</CODE></EM> to push into the <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-push-sorted></A>
<H3>g_async_queue_push_sorted&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_push_sorted (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> func</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Inserts <EM class=parameter><CODE>data</CODE></EM> into <EM class=parameter><CODE>queue</CODE></EM> using <EM class=parameter><CODE>func</CODE></EM> to determine the new position.</P>
<P>This function requires that the <EM class=parameter><CODE>queue</CODE></EM> is sorted before pushing on new elements, see <A class=link title=g_async_queue_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-sort"><CODE class=function>g_async_queue_sort()</CODE></A>.</P>
<P>This function will lock <EM class=parameter><CODE>queue</CODE></EM> before it sorts the queue and unlock it when it is finished.</P>
<P>For an example of <EM class=parameter><CODE>func</CODE></EM> see <A class=link title=g_async_queue_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-sort"><CODE class=function>g_async_queue_sort()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.5.7.7.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the <EM class=parameter><CODE>data</CODE></EM> to push into the <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> is used to sort <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <EM class=parameter><CODE>func</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-pop></A>
<H3>g_async_queue_pop&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_pop (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Pops data from the <EM class=parameter><CODE>queue</CODE></EM> . If <EM class=parameter><CODE>queue</CODE></EM> is empty, this function blocks until data becomes available.</P>
<DIV class=refsect3><A name=id-1.4.5.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.8.6></A>
<H4>Returns</H4>
<P>data from the queue</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-try-pop></A>
<H3>g_async_queue_try_pop&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_try_pop (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Tries to pop data from the <EM class=parameter><CODE>queue</CODE></EM> . If no data is available, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<DIV class=refsect3><A name=id-1.4.5.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.9.6></A>
<H4>Returns</H4>
<P>data from the queue or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, when no data is available immediately.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-timeout-pop></A>
<H3>g_async_queue_timeout_pop&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_timeout_pop (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> timeout</CODE></EM>);</PRE>
<P>Pops data from the <EM class=parameter><CODE>queue</CODE></EM> . If the queue is empty, blocks for <EM class=parameter><CODE>timeout</CODE></EM> microseconds, or until data becomes available.</P>
<P>If no data is received before the timeout, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<DIV class=refsect3><A name=id-1.4.5.7.10.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>timeout</P></TD>
<TD class=parameter_description>
<P>the number of microseconds to wait</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.10.7></A>
<H4>Returns</H4>
<P>data from the queue or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, when no data is received before the timeout.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-length></A>
<H3>g_async_queue_length&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_async_queue_length (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Returns the length of the queue.</P>
<P>Actually this function returns the number of data items in the queue minus the number of waiting threads, so a negative value means waiting threads, and a positive value means available entries in the <EM class=parameter><CODE>queue</CODE></EM> . A return value of 0 could mean n entries in the queue and n threads waiting. This can happen due to locking of the queue or due to scheduling.</P>
<DIV class=refsect3><A name=id-1.4.5.7.11.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.11.7></A>
<H4>Returns</H4>
<P>the length of the <EM class=parameter><CODE>queue</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-sort></A>
<H3>g_async_queue_sort&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_sort (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> func</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Sorts <EM class=parameter><CODE>queue</CODE></EM> using <EM class=parameter><CODE>func</CODE></EM> .</P>
<P>The sort function <EM class=parameter><CODE>func</CODE></EM> is passed two elements of the <EM class=parameter><CODE>queue</CODE></EM> . It should return 0 if they are equal, a negative value if the first element should be higher in the <EM class=parameter><CODE>queue</CODE></EM> or a positive value if the first element should be lower in the <EM class=parameter><CODE>queue</CODE></EM> than the second element.</P>
<P>This function will lock <EM class=parameter><CODE>queue</CODE></EM> before it sorts the queue and unlock it when it is finished.</P>
<P>If you were sorting a list of priority numbers to make sure the lowest priority would be at the top of the queue, you could use:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7</PRE></TD>
<TD class=listing_code><PRE class=programlisting>gint32 id1<SPAN class="gtkdoc opt">;</SPAN>
gint32 id2<SPAN class="gtkdoc opt">;</SPAN>

id1 <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-INT:CAPS">GPOINTER_TO_INT</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>element1<SPAN class="gtkdoc opt">);</SPAN>
id2 <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-INT:CAPS">GPOINTER_TO_INT</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>element2<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class=keyword>return</SPAN> <SPAN class="gtkdoc opt">(</SPAN>id1 <SPAN class="gtkdoc opt">&gt;</SPAN> id2 ? <SPAN class="gtkdoc opt">+</SPAN><SPAN class=number>1</SPAN> <SPAN class="gtkdoc opt">:</SPAN> id1 <SPAN class="gtkdoc opt">==</SPAN> id2 ? <SPAN class=number>0</SPAN> <SPAN class="gtkdoc opt">: -</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.4.5.7.12.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> is used to sort <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <EM class=parameter><CODE>func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-lock></A>
<H3>g_async_queue_lock&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_lock (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Acquires the <EM class=parameter><CODE>queue</CODE></EM> 's lock. If another thread is already holding the lock, this call will block until the lock becomes available.</P>
<P>Call <A class=link title=g_async_queue_unlock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unlock"><CODE class=function>g_async_queue_unlock()</CODE></A> to drop the lock again.</P>
<P>While holding the lock, you can only call the g_async_queue_*_unlocked() functions on <EM class=parameter><CODE>queue</CODE></EM> . Otherwise, deadlock may occur.</P>
<DIV class=refsect3><A name=id-1.4.5.7.13.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-unlock></A>
<H3>g_async_queue_unlock&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_unlock (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Releases the queue's lock.</P>
<P>Calling this function when you have not acquired the with <A class=link title=g_async_queue_lock&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-lock"><CODE class=function>g_async_queue_lock()</CODE></A> leads to undefined behaviour.</P>
<DIV class=refsect3><A name=id-1.4.5.7.14.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-ref-unlocked></A>
<H3>g_async_queue_ref_unlocked&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_ref_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_async_queue_ref_unlocked</CODE> has been deprecated since version 2.8 and should not be used in newly-written code.</P>
<P>Reference counting is done atomically. so <A class=link title=g_async_queue_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-ref"><CODE class=function>g_async_queue_ref()</CODE></A> can be used regardless of the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P></DIV>
<P>Increases the reference count of the asynchronous <EM class=parameter><CODE>queue</CODE></EM> by 1.</P>
<DIV class=refsect3><A name=id-1.4.5.7.15.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-unref-and-unlock></A>
<H3>g_async_queue_unref_and_unlock&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_unref_and_unlock (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_async_queue_unref_and_unlock</CODE> has been deprecated since version 2.8 and should not be used in newly-written code.</P>
<P>Reference counting is done atomically. so <A class=link title=g_async_queue_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-unref"><CODE class=function>g_async_queue_unref()</CODE></A> can be used regardless of the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P></DIV>
<P>Decreases the reference count of the asynchronous <EM class=parameter><CODE>queue</CODE></EM> by 1 and releases the lock. This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock. If the reference count went to 0, the <EM class=parameter><CODE>queue</CODE></EM> will be destroyed and the memory allocated will be freed.</P>
<DIV class=refsect3><A name=id-1.4.5.7.16.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-push-unlocked></A>
<H3>g_async_queue_push_unlocked&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_push_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Pushes the <EM class=parameter><CODE>data</CODE></EM> into the <EM class=parameter><CODE>queue</CODE></EM> . <EM class=parameter><CODE>data</CODE></EM> must not be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.17.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P><EM class=parameter><CODE>data</CODE></EM> to push into the <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-push-sorted-unlocked></A>
<H3>g_async_queue_push_sorted_unlocked&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_push_sorted_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                                    <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> func</CODE></EM>,
                                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Inserts <EM class=parameter><CODE>data</CODE></EM> into <EM class=parameter><CODE>queue</CODE></EM> using <EM class=parameter><CODE>func</CODE></EM> to determine the new position.</P>
<P>The sort function <EM class=parameter><CODE>func</CODE></EM> is passed two elements of the <EM class=parameter><CODE>queue</CODE></EM> . It should return 0 if they are equal, a negative value if the first element should be higher in the <EM class=parameter><CODE>queue</CODE></EM> or a positive value if the first element should be lower in the <EM class=parameter><CODE>queue</CODE></EM> than the second element.</P>
<P>This function requires that the <EM class=parameter><CODE>queue</CODE></EM> is sorted before pushing on new elements, see <A class=link title=g_async_queue_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-sort"><CODE class=function>g_async_queue_sort()</CODE></A>.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<P>For an example of <EM class=parameter><CODE>func</CODE></EM> see <A class=link title=g_async_queue_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-sort"><CODE class=function>g_async_queue_sort()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.5.7.18.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the <EM class=parameter><CODE>data</CODE></EM> to push into the <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> is used to sort <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <EM class=parameter><CODE>func</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-pop-unlocked></A>
<H3>g_async_queue_pop_unlocked&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_pop_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Pops data from the <EM class=parameter><CODE>queue</CODE></EM> . If <EM class=parameter><CODE>queue</CODE></EM> is empty, this function blocks until data becomes available.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.19.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.19.7></A>
<H4>Returns</H4>
<P>data from the queue.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-try-pop-unlocked></A>
<H3>g_async_queue_try_pop_unlocked&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_try_pop_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Tries to pop data from the <EM class=parameter><CODE>queue</CODE></EM> . If no data is available, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.20.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.20.7></A>
<H4>Returns</H4>
<P>data from the queue or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, when no data is available immediately.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-timeout-pop-unlocked></A>
<H3>g_async_queue_timeout_pop_unlocked&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_timeout_pop_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                                    <EM class=parameter><CODE><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> timeout</CODE></EM>);</PRE>
<P>Pops data from the <EM class=parameter><CODE>queue</CODE></EM> . If the queue is empty, blocks for <EM class=parameter><CODE>timeout</CODE></EM> microseconds, or until data becomes available.</P>
<P>If no data is received before the timeout, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.21.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>timeout</P></TD>
<TD class=parameter_description>
<P>the number of microseconds to wait</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.21.8></A>
<H4>Returns</H4>
<P>data from the queue or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, when no data is received before the timeout.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-length-unlocked></A>
<H3>g_async_queue_length_unlocked&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_async_queue_length_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>);</PRE>
<P>Returns the length of the queue.</P>
<P>Actually this function returns the number of data items in the queue minus the number of waiting threads, so a negative value means waiting threads, and a positive value means available entries in the <EM class=parameter><CODE>queue</CODE></EM> . A return value of 0 could mean n entries in the queue and n threads waiting. This can happen due to locking of the queue or due to scheduling.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.22.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.22.8></A>
<H4>Returns</H4>
<P>the length of the <EM class=parameter><CODE>queue</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-sort-unlocked></A>
<H3>g_async_queue_sort_unlocked&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_async_queue_sort_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> func</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Sorts <EM class=parameter><CODE>queue</CODE></EM> using <EM class=parameter><CODE>func</CODE></EM> .</P>
<P>The sort function <EM class=parameter><CODE>func</CODE></EM> is passed two elements of the <EM class=parameter><CODE>queue</CODE></EM> . It should return 0 if they are equal, a negative value if the first element should be higher in the <EM class=parameter><CODE>queue</CODE></EM> or a positive value if the first element should be lower in the <EM class=parameter><CODE>queue</CODE></EM> than the second element.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.23.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the <A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> is used to sort <EM class=parameter><CODE>queue</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <EM class=parameter><CODE>func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-timed-pop></A>
<H3>g_async_queue_timed_pop&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_timed_pop (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title="struct GTimeVal" href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#GTimeVal"><SPAN class=type>GTimeVal</SPAN></A> *end_time</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_async_queue_timed_pop</CODE> is deprecated and should not be used in newly-written code.</P>
<P>use <A class=link title=g_async_queue_timeout_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timeout-pop"><CODE class=function>g_async_queue_timeout_pop()</CODE></A>.</P></DIV>
<P>Pops data from the <EM class=parameter><CODE>queue</CODE></EM> . If the queue is empty, blocks until <EM class=parameter><CODE>end_time</CODE></EM> or until data becomes available.</P>
<P>If no data is received before <EM class=parameter><CODE>end_time</CODE></EM> , <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>To easily calculate <EM class=parameter><CODE>end_time</CODE></EM> , a combination of <A class=link title=g_get_current_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-current-time"><CODE class=function>g_get_current_time()</CODE></A> and <A class=link title=g_time_val_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-time-val-add"><CODE class=function>g_time_val_add()</CODE></A> can be used.</P>
<DIV class=refsect3><A name=id-1.4.5.7.24.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>end_time</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GTimeVal" href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#GTimeVal"><SPAN class=type>GTimeVal</SPAN></A>, determining the final time</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.24.9></A>
<H4>Returns</H4>
<P>data from the queue or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, when no data is received before <EM class=parameter><CODE>end_time</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-async-queue-timed-pop-unlocked></A>
<H3>g_async_queue_timed_pop_unlocked&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_async_queue_timed_pop_unlocked (<EM class=parameter><CODE><A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A> *queue</CODE></EM>,
                                  <EM class=parameter><CODE><A class=link title="struct GTimeVal" href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#GTimeVal"><SPAN class=type>GTimeVal</SPAN></A> *end_time</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_async_queue_timed_pop_unlocked</CODE> is deprecated and should not be used in newly-written code.</P>
<P>use <A class=link title=g_async_queue_timeout_pop_unlocked&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#g-async-queue-timeout-pop-unlocked"><CODE class=function>g_async_queue_timeout_pop_unlocked()</CODE></A>.</P></DIV>
<P>Pops data from the <EM class=parameter><CODE>queue</CODE></EM> . If the queue is empty, blocks until <EM class=parameter><CODE>end_time</CODE></EM> or until data becomes available.</P>
<P>If no data is received before <EM class=parameter><CODE>end_time</CODE></EM> , <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned.</P>
<P>To easily calculate <EM class=parameter><CODE>end_time</CODE></EM> , a combination of <A class=link title=g_get_current_time&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-get-current-time"><CODE class=function>g_get_current_time()</CODE></A> and <A class=link title=g_time_val_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#g-time-val-add"><CODE class=function>g_time_val_add()</CODE></A> can be used.</P>
<P>This function must be called while holding the <EM class=parameter><CODE>queue</CODE></EM> 's lock.</P>
<DIV class=refsect3><A name=id-1.4.5.7.25.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>queue</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GAsyncQueue href="https://developer.gnome.org/glib/stable/glib-Asynchronous-Queues.html#GAsyncQueue"><SPAN class=type>GAsyncQueue</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>end_time</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GTimeVal" href="https://developer.gnome.org/glib/stable/glib-Date-and-Time-Functions.html#GTimeVal"><SPAN class=type>GTimeVal</SPAN></A>, determining the final time</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.5.7.25.10></A>
<H4>Returns</H4>
<P>data from the queue or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, when no data is received before <EM class=parameter><CODE>end_time</CODE></EM> .</P>
<P></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GAsyncQueue></A>
<H3>GAsyncQueue</H3><PRE class=programlisting>typedef struct _GAsyncQueue GAsyncQueue;</PRE>
<P>The GAsyncQueue struct is an opaque data structure which represents an asynchronous queue. It should only be accessed through the g_async_queue_* functions.</P></DIV></DIV>
<DIV class=refsect1><A name=glib-Asynchronous-Queues.see-also></A>
<H2>See Also</H2>
<P><A class=link title="struct GThreadPool" href="https://developer.gnome.org/glib/stable/glib-Thread-Pools.html#GThreadPool"><SPAN class=type>GThreadPool</SPAN></A></P></DIV>