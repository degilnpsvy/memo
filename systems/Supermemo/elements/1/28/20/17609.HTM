<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Error-Reporting.top_of_page></A>Error Reporting</SPAN></H2>
<P>Error Reporting &#8212; a system for reporting errors</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Error-Reporting.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue>GError</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_error_new&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-new">g_error_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue>GError</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_error_new_literal&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-new-literal">g_error_new_literal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue>GError</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_error_new_valist&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-new-valist">g_error_new_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_error_free&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-free">g_error_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue>GError</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_error_copy&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-copy">g_error_copy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title=gboolean class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_error_matches&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-matches">g_error_matches</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error">g_set_error</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_set_error_literal&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error-literal">g_set_error_literal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_propagate_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-error">g_propagate_error</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_clear_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-clear-error">g_clear_error</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_prefix_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-prefix-error">g_prefix_error</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_propagate_prefixed_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-prefixed-error">g_propagate_prefixed_error</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Error-Reporting.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError">GError</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Error-Reporting.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Error-Reporting.description></A>
<H2>Description</H2>
<P><FONT class=extract>GLib provides a standard method of reporting errors from a called function to the calling code. (This is the same problem solved by exceptions in other languages.) It's important to understand that this method is both a data type (the </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> struct) and a set of rules. If you use </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> incorrectly, then your code will not properly interoperate with other code that uses </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>, and users of your API will probably get confused.</FONT></P>
<P><FONT class=extract>First and foremost: </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> should only be used to report recoverable runtime errors, never to report programming errors. If the programmer has screwed up, then you should use </FONT><A title=g_warning() class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-warning"><CODE class=function><FONT class=extract>g_warning()</FONT></CODE></A><FONT class=extract>, </FONT><A title=g_return_if_fail() class=link href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-if-fail"><CODE class=function><FONT class=extract>g_return_if_fail()</FONT></CODE></A><FONT class=extract>, </FONT><A title=g_assert() class=link href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert"><CODE class=function><FONT class=extract>g_assert()</FONT></CODE></A><FONT class=extract>, </FONT><A title=g_error() class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-error"><CODE class=function><FONT class=extract>g_error()</FONT></CODE></A><FONT class=extract>, or some similar facility. (Incidentally, remember that the </FONT><A title=g_error() class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-error"><CODE class=function><FONT class=extract>g_error()</FONT></CODE></A><FONT class=extract> function should only be used for programming errors, it should not be used to print any error reportable via </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>.)</FONT></P>
<P><FONT class=extract>Examples of recoverable runtime errors are "file not found" or "failed to parse input." Examples of programming errors are "NULL passed to <CODE class=function>strcmp()</CODE>" or "attempted to free the same pointer twice." These two kinds of errors are fundamentally different: runtime errors should be handled or reported to the user, programming errors should be eliminated by fixing the bug in the program. This is why most functions in GLib and GTK+ do not use the </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> facility.</FONT></P>
<P><FONT class=extract>Functions that can fail take a return location for a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> as their last argument. For example:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gboolean <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents">g_file_get_contents</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">const</SPAN> gchar  <SPAN class="gtkdoc opt">*</SPAN>filename<SPAN class="gtkdoc opt">,</SPAN>
                              gchar       <SPAN class="gtkdoc opt">**</SPAN>contents<SPAN class="gtkdoc opt">,</SPAN>
                              gsize        <SPAN class="gtkdoc opt">*</SPAN>length<SPAN class="gtkdoc opt">,</SPAN>
                              GError      <SPAN class="gtkdoc opt">**</SPAN>error<SPAN class="gtkdoc opt">);</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract>If you pass a non-</FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> value for the <CODE class=literal>error</CODE> argument, it should point to a location where an error can be placed. For example:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gchar <SPAN class="gtkdoc opt">*</SPAN>contents<SPAN class="gtkdoc opt">;</SPAN>
GError <SPAN class="gtkdoc opt">*</SPAN>err <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents">g_file_get_contents</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"foo.txt"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>contents<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">, &amp;</SPAN>err<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">((</SPAN>contents <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">&amp;&amp;</SPAN> err <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">) || (</SPAN>contents <SPAN class="gtkdoc opt">!=</SPAN> NULL <SPAN class="gtkdoc opt">&amp;&amp;</SPAN> err <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">));</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class="gtkdoc slc">// Report error to user, and free error</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>contents <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class=function>fprintf</SPAN> <SPAN class="gtkdoc opt">(</SPAN>stderr<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Unable to read file: %s</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> err<SPAN class="gtkdoc opt">-&gt;</SPAN>message<SPAN class="gtkdoc opt">);</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-free">g_error_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class=keyword>else</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class="gtkdoc slc">// Use file contents</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>contents <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract>Note that <CODE class=literal>err != NULL</CODE> in this example is a reliable indicator of whether </FONT><A title=g_file_get_contents&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents"><CODE class=function><FONT class=extract>g_file_get_contents()</FONT></CODE></A><FONT class=extract> failed. Additionally, </FONT><A title=g_file_get_contents&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents"><CODE class=function><FONT class=extract>g_file_get_contents()</FONT></CODE></A><FONT class=extract> returns a boolean which indicates whether it was successful.</FONT></P>
<P><FONT class=extract>Because </FONT><A title=g_file_get_contents&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents"><CODE class=function><FONT class=extract>g_file_get_contents()</FONT></CODE></A><FONT class=extract> returns </FONT><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal><FONT class=extract>FALSE</FONT></CODE></A><FONT class=extract> on failure, if you are only interested in whether it failed and don't need to display an error message, you can pass </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> for the <EM class=parameter><CODE>error</CODE></EM> argument:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract><SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents">g_file_get_contents</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"foo.txt"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>contents<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">))</SPAN> <SPAN class="gtkdoc slc">// ignore errors</SPAN>
  <SPAN class="gtkdoc slc">// no error occurred </SPAN>
  <SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>else</SPAN>
  <SPAN class="gtkdoc slc">// error</SPAN>
  <SPAN class="gtkdoc opt">;</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>The </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> object contains three fields: <EM class=parameter><CODE>domain</CODE></EM> indicates the module the error-reporting function is located in, <EM class=parameter><CODE>code</CODE></EM> indicates the specific error that occurred, and <EM class=parameter><CODE>message</CODE></EM> is a user-readable error message with as many details as possible. Several functions are provided to deal with an error received from a called function: </FONT><A title=g_error_matches&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-matches"><CODE class=function><FONT class=extract>g_error_matches()</FONT></CODE></A><FONT class=extract> returns </FONT><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal><FONT class=extract>TRUE</FONT></CODE></A><FONT class=extract> if the error matches a given domain and code, </FONT><A title=g_propagate_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-error"><CODE class=function><FONT class=extract>g_propagate_error()</FONT></CODE></A><FONT class=extract> copies an error into an error location (so the calling function will receive it), and </FONT><A title=g_clear_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-clear-error"><CODE class=function><FONT class=extract>g_clear_error()</FONT></CODE></A><FONT class=extract> clears an error location by freeing the error and resetting the location to </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. To display an error to the user, simply display the <EM class=parameter><CODE>message</CODE></EM> , perhaps along with additional context known only to the calling function (the file being opened, or whatever - though in the </FONT><A title=g_file_get_contents&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-file-get-contents"><CODE class=function><FONT class=extract>g_file_get_contents()</FONT></CODE></A><FONT class=extract> case, the <EM class=parameter><CODE>message</CODE></EM> already contains a filename).</FONT></P>
<P><FONT class=extract>When implementing a function that can report errors, the basic tool is </FONT><A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error"><CODE class=function><FONT class=extract>g_set_error()</FONT></CODE></A><FONT class=extract>. Typically, if a fatal error occurs you want to </FONT><A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error"><CODE class=function><FONT class=extract>g_set_error()</FONT></CODE></A><FONT class=extract>, then return immediately. </FONT><A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error"><CODE class=function><FONT class=extract>g_set_error()</FONT></CODE></A><FONT class=extract> does nothing if the error location passed to it is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. Here's an example:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gint
<SPAN class=function>foo_open_file</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GError <SPAN class="gtkdoc opt">**</SPAN>error<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  gint fd<SPAN class="gtkdoc opt">;</SPAN>

  fd <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>open</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"file.txt"</SPAN><SPAN class="gtkdoc opt">,</SPAN> O_RDONLY<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>fd <SPAN class="gtkdoc opt">&lt;</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error">g_set_error</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>error<SPAN class="gtkdoc opt">,</SPAN>
                   FOO_ERROR<SPAN class="gtkdoc opt">,</SPAN>                 <SPAN class="gtkdoc slc">// error domain</SPAN>
                   FOO_ERROR_BLAH<SPAN class="gtkdoc opt">,</SPAN>            <SPAN class="gtkdoc slc">// error code</SPAN>
                   <SPAN class=string>"Failed to open file: %s"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class="gtkdoc slc">// error message format string</SPAN>
                   <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strerror">g_strerror</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>errno<SPAN class="gtkdoc opt">));</SPAN>
      <SPAN class=keyword>return</SPAN> <SPAN class="gtkdoc opt">-</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
  <SPAN class=keyword>else</SPAN>
    <SPAN class=keyword>return</SPAN> fd<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Things are somewhat more complicated if you yourself call another function that can report a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>. If the sub-function indicates fatal errors in some way other than reporting a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>, such as by returning </FONT><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal><FONT class=extract>TRUE</FONT></CODE></A><FONT class=extract> on success, you can simply do the following:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gboolean
<SPAN class=function>my_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GError <SPAN class="gtkdoc opt">**</SPAN>err<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail">g_return_val_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">|| *</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN> FALSE<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(!</SPAN><SPAN class=function>sub_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(</SPAN>err<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class="gtkdoc slc">// assert that error was set by the sub-function</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">|| *</SPAN>err <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=keyword>return</SPAN> FALSE<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>

  <SPAN class="gtkdoc slc">// otherwise continue, no error occurred</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert">g_assert</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">|| *</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>If the sub-function does not indicate errors other than by reporting a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>, you need to create a temporary </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> since the passed-in one may be </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. </FONT><A title=g_propagate_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-error"><CODE class=function><FONT class=extract>g_propagate_error()</FONT></CODE></A><FONT class=extract> is intended for use in this case.</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gboolean
<SPAN class=function>my_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GError <SPAN class="gtkdoc opt">**</SPAN>err<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GError <SPAN class="gtkdoc opt">*</SPAN>tmp_error<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail">g_return_val_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">|| *</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN> FALSE<SPAN class="gtkdoc opt">);</SPAN>

  tmp_error <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function>sub_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>tmp_error<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>tmp_error <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class="gtkdoc slc">// store tmp_error in err, if err != NULL,</SPAN>
      <SPAN class="gtkdoc slc">// otherwise call g_error_free() on tmp_error</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-error">g_propagate_error</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err<SPAN class="gtkdoc opt">,</SPAN> tmp_error<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=keyword>return</SPAN> FALSE<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>

  <SPAN class="gtkdoc slc">// otherwise continue, no error occurred</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Error pileups are always a bug. For example, this code is incorrect:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gboolean
<SPAN class=function>my_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GError <SPAN class="gtkdoc opt">**</SPAN>err<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GError <SPAN class="gtkdoc opt">*</SPAN>tmp_error<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail">g_return_val_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">|| *</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN> FALSE<SPAN class="gtkdoc opt">);</SPAN>

  tmp_error <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function>sub_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>tmp_error<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function>other_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>tmp_error<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>tmp_error <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-error">g_propagate_error</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err<SPAN class="gtkdoc opt">,</SPAN> tmp_error<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=keyword>return</SPAN> FALSE<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract><EM class=parameter><CODE>tmp_error</CODE></EM> should be checked immediately after <CODE class=function>sub_function_that_can_fail()</CODE>, and either cleared or propagated upward. The rule is: after each error, you must either handle the error, or return it to the calling function.</FONT></P>
<P><FONT class=extract>Note that passing </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> for the error location is the equivalent of handling an error by always doing nothing about it. So the following code is fine, assuming errors in <CODE class=function>sub_function_that_can_fail()</CODE> are not fatal to <CODE class=function>my_function_that_can_fail()</CODE>:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gboolean
<SPAN class=function>my_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GError <SPAN class="gtkdoc opt">**</SPAN>err<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GError <SPAN class="gtkdoc opt">*</SPAN>tmp_error<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail">g_return_val_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">|| *</SPAN>err <SPAN class="gtkdoc opt">==</SPAN> NULL<SPAN class="gtkdoc opt">,</SPAN> FALSE<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=function>sub_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">);</SPAN> <SPAN class="gtkdoc slc">// ignore errors</SPAN>

  tmp_error <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function>other_function_that_can_fail</SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>tmp_error<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>tmp_error <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-propagate-error">g_propagate_error</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>err<SPAN class="gtkdoc opt">,</SPAN> tmp_error<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class=keyword>return</SPAN> FALSE<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<P><FONT class=extract>Note that passing </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> for the error location ignores errors; it's equivalent to <CODE class=literal>try { <CODE class=function>sub_function_that_can_fail()</CODE>; } catch (...) {}</CODE> in C++. It does not mean to leave errors unhandled; it means to handle them by doing nothing.</FONT></P>
<P><FONT class=extract>Error domains and codes are conventionally named as follows:</FONT></P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P><FONT class=extract>The error domain is called &lt;NAMESPACE&gt;_&lt;MODULE&gt;_ERROR, for example </FONT><A title=G_SPAWN_ERROR class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#G-SPAWN-ERROR:CAPS"><CODE class=literal><FONT class=extract>G_SPAWN_ERROR</FONT></CODE></A><FONT class=extract> or </FONT><A title=G_THREAD_ERROR class=link href="https://developer.gnome.org/glib/stable/glib-Threads.html#G-THREAD-ERROR:CAPS"><CODE class=literal><FONT class=extract>G_THREAD_ERROR</FONT></CODE></A><FONT class=extract>:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4
5
6
7</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract><SPAN class="gtkdoc ppc">#define G_SPAWN_ERROR g_spawn_error_quark ()</SPAN>

GQuark
<SPAN class=function>g_spawn_error_quark</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>return</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Quarks.html#g-quark-from-static-string">g_quark_from_static_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"g-spawn-error-quark"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract></FONT></P>
<LI class=listitem>
<P><FONT class=extract>The quark function for the error domain is called &lt;namespace&gt;_&lt;module&gt;_error_quark, for example <CODE class=function>g_spawn_error_quark()</CODE> or <CODE class=function>g_thread_error_quark()</CODE>.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>The error codes are in an enumeration called &lt;Namespace&gt;&lt;Module&gt;Error; for example, </FONT><A title="enum GThreadError" class=link href="https://developer.gnome.org/glib/stable/glib-Threads.html#GThreadError"><SPAN class=type><FONT class=extract>GThreadError</FONT></SPAN></A><FONT class=extract> or </FONT><A title="enum GSpawnError" class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#GSpawnError"><SPAN class=type><FONT class=extract>GSpawnError</FONT></SPAN></A><FONT class=extract>.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>Members of the error code enumeration are called &lt;NAMESPACE&gt;_&lt;MODULE&gt;_ERROR_&lt;CODE&gt;, for example </FONT><A class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#G-SPAWN-ERROR-FORK:CAPS"><CODE class=literal><FONT class=extract>G_SPAWN_ERROR_FORK</FONT></CODE></A><FONT class=extract> or </FONT><A class=link href="https://developer.gnome.org/glib/stable/glib-Threads.html#G-THREAD-ERROR-AGAIN:CAPS"><CODE class=literal><FONT class=extract>G_THREAD_ERROR_AGAIN</FONT></CODE></A><FONT class=extract>.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>If there's a "generic" or "unknown" error code for unrecoverable errors it doesn't make sense to distinguish with specific codes, it should be called &lt;NAMESPACE&gt;_&lt;MODULE&gt;_ERROR_FAILED, for example </FONT><A class=link href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#G-SPAWN-ERROR-FAILED:CAPS"><CODE class=literal><FONT class=extract>G_SPAWN_ERROR_FAILED</FONT></CODE></A><FONT class=extract>. In the case of error code enumerations that may be extended in future releases, you should generally not handle this error code explicitly, but should instead treat any unrecognized error code as equivalent to FAILED.</FONT></P></LI></UL></DIV>
<P><FONT class=extract>Summary of rules for use of </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>:</FONT></P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P><FONT class=extract>Do not report programming errors via </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>The last argument of a function that returns an error should be a location where a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> can be placed (i.e. "</FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>** error"). If </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> is used with varargs, the </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>** should be the last argument before the "...".</FONT></P>
<LI class=listitem>
<P><FONT class=extract>The caller may pass </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> for the </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>** if they are not interested in details of the exact error that occurred.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>If </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> is passed for the </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>** argument, then errors should not be returned to the caller, but your function should still abort and return if an error occurs. That is, control flow should not be affected by whether the caller wants to get a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>If a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> is reported, then your function by definition had a fatal failure and did not complete whatever it was supposed to do. If the failure was not fatal, then you handled it and you should not report it. If it was fatal, then you must report it and discontinue whatever you were doing immediately.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>If a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> is reported, out parameters are not guaranteed to be set to any defined value.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>A </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>* must be initialized to </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> before passing its address to a function that can report errors.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>"Piling up" errors is always a bug. That is, if you assign a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> to a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>* that is non-</FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, thus overwriting the previous error, it indicates that you should have aborted the operation instead of continuing. If you were able to continue, you should have cleared the previous error with </FONT><A title=g_clear_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-clear-error"><CODE class=function><FONT class=extract>g_clear_error()</FONT></CODE></A><FONT class=extract>. </FONT><A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error"><CODE class=function><FONT class=extract>g_set_error()</FONT></CODE></A><FONT class=extract> will complain if you pile up errors.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>By convention, if you return a boolean value indicating success then </FONT><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal><FONT class=extract>TRUE</FONT></CODE></A><FONT class=extract> means success and </FONT><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal><FONT class=extract>FALSE</FONT></CODE></A><FONT class=extract> means failure. &lt;footnote&gt;&lt;para&gt;Avoid creating functions which have a boolean return value and a GError parameter, but where the boolean does something other than signal whether the GError is set. Among other problems, it requires C callers to allocate a temporary error. Instead, provide a "gboolean *" out parameter. There are functions in GLib itself such as </FONT><A title=g_key_file_has_key&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Key-value-file-parser.html#g-key-file-has-key"><CODE class=function><FONT class=extract>g_key_file_has_key()</FONT></CODE></A><FONT class=extract> that are deprecated because of this. &lt;/para&gt;&lt;/footnote&gt; If </FONT><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal><FONT class=extract>FALSE</FONT></CODE></A><FONT class=extract> is returned, the error must be set to a non-</FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> value. &lt;footnote&gt;&lt;para&gt;One exception to this is that in situations that are already considered to be undefined behaviour (such as when a </FONT><A title=g_return_val_if_fail() class=link href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail"><CODE class=function><FONT class=extract>g_return_val_if_fail()</FONT></CODE></A><FONT class=extract> check fails), the error need not be set. Instead of checking separately whether the error is set, callers should ensure that they do not provoke undefined behaviour, then assume that the error will be set on failure.&lt;/para&gt;&lt;/footnote&gt;</FONT></P>
<LI class=listitem>
<P><FONT class=extract>A </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> return value is also frequently used to mean that an error occurred. You should make clear in your documentation whether </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> is a valid return value in non-error cases; if </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> is a valid value, then users must check whether an error was returned to see if the function succeeded.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>When implementing a function that can report errors, you may want to add a check at the top of your function that the error return location is either </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> or contains a </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> error (e.g. <CODE class=literal>g_return_if_fail (error == NULL || *error == NULL);</CODE>).</FONT></P></LI></UL></DIV></DIV>
<DIV class=refsect1><A name=glib-Error-Reporting.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-error-new></A>
<H3><FONT class=extract>g_error_new&nbsp;()</FONT></H3><PRE class=programlisting><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>&nbsp;*
g_error_new (<EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
             <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>,
             <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
             <EM class=parameter><CODE>...</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Creates a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> with the given <EM class=parameter><CODE>domain</CODE></EM> and <EM class=parameter><CODE>code</CODE></EM> , and a message formatted with <EM class=parameter><CODE>format</CODE></EM> .</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.2.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>domain</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error domain</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>code</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error code</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>format</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>printf()-style format for error message</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>...</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>parameters for message format</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.10.7.2.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-error-new-literal></A>
<H3><FONT class=extract>g_error_new_literal&nbsp;()</FONT></H3><PRE class=programlisting><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>&nbsp;*
g_error_new_literal (<EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
                     <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>,
                     <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *message</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Creates a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>; unlike </FONT><A title=g_error_new&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-new"><CODE class=function><FONT class=extract>g_error_new()</FONT></CODE></A><FONT class=extract>, <EM class=parameter><CODE>message</CODE></EM> is not a <CODE class=function>printf()</CODE>-style format string. Use this function if <EM class=parameter><CODE>message</CODE></EM> contains text you don't have control over, that could include <CODE class=function>printf()</CODE> escape sequences.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.3.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>domain</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error domain</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>code</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error code</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>message</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error message</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.10.7.3.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-error-new-valist></A>
<H3><FONT class=extract>g_error_new_valist&nbsp;()</FONT></H3><PRE class=programlisting><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>&nbsp;*
g_error_new_valist (<EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
                    <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>,
                    <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                    <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Creates a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> with the given <EM class=parameter><CODE>domain</CODE></EM> and <EM class=parameter><CODE>code</CODE></EM> , and a message formatted with <EM class=parameter><CODE>format</CODE></EM> .</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.4.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>domain</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error domain</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>code</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error code</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>format</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>printf()-style format for error message</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>args</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract><SPAN class=type>va_list</SPAN> of parameters for the message format</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.10.7.4.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A></P>
<P><FONT class=extract></FONT></P></DIV>
<P class=since><FONT class=extract>Since 2.22</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-error-free></A>
<H3><FONT class=extract>g_error_free&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_error_free (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> *error</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Frees a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> and associated resources.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.5.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>error</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-error-copy></A>
<H3><FONT class=extract>g_error_copy&nbsp;()</FONT></H3><PRE class=programlisting><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=returnvalue><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>&nbsp;*
g_error_copy (<EM class=parameter><CODE>const <A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> *error</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Makes a copy of <EM class=parameter><CODE>error</CODE></EM> .</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.6.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>error</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.10.7.6.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>a new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-error-matches></A>
<H3><FONT class=extract>g_error_matches&nbsp;()</FONT></H3><PRE class=programlisting><A title=gboolean class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue><FONT class=extract>gboolean</FONT></SPAN></A>
<FONT class=extract>g_error_matches (<EM class=parameter><CODE>const <A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> *error</CODE></EM>,
                 <EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
                 <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Returns </FONT><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal><FONT class=extract>TRUE</FONT></CODE></A><FONT class=extract> if <EM class=parameter><CODE>error</CODE></EM> matches <EM class=parameter><CODE>domain</CODE></EM> and <EM class=parameter><CODE>code</CODE></EM> , </FONT><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal><FONT class=extract>FALSE</FONT></CODE></A><FONT class=extract> otherwise. In particular, when <EM class=parameter><CODE>error</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, </FONT><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal><FONT class=extract>FALSE</FONT></CODE></A><FONT class=extract> will be returned.</FONT></P>
<P><FONT class=extract>If <EM class=parameter><CODE>domain</CODE></EM> contains a <CODE class=literal>FAILED</CODE> (or otherwise generic) error code, you should generally not check for it explicitly, but should instead treat any not-explicitly-recognized error code as being equilalent to the <CODE class=literal>FAILED</CODE> code. This way, if the domain is extended in the future to provide a more specific error code for a certain case, your code will still work.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.7.6></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>error</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> or </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. </FONT></P></TD>
<TD class=parameter_annotations><SPAN class=annotation><FONT class=extract>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</FONT></SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>domain</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>an error domain</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>code</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>an error code</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.10.7.7.7></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>whether <EM class=parameter><CODE>error</CODE></EM> has <EM class=parameter><CODE>domain</CODE></EM> and <EM class=parameter><CODE>code</CODE></EM></FONT> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-set-error></A>
<H3><FONT class=extract>g_set_error&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_set_error (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **err</CODE></EM>,
             <EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
             <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>,
             <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
             <EM class=parameter><CODE>...</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Does nothing if <EM class=parameter><CODE>err</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>; if <EM class=parameter><CODE>err</CODE></EM> is non-</FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, then *<EM class=parameter><CODE>err</CODE></EM> must be </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. A new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> is created and assigned to *<EM class=parameter><CODE>err</CODE></EM> .</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.8.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>err</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a return location for a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>, or </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. </FONT></P></TD>
<TD class=parameter_annotations><SPAN class=annotation><FONT class=extract>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</FONT></SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>domain</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error domain</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>code</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error code</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>format</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>printf()-style format</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>...</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>args for <EM class=parameter><CODE>format</CODE></EM> </FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-set-error-literal></A>
<H3><FONT class=extract>g_set_error_literal&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_set_error_literal (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **err</CODE></EM>,
                     <EM class=parameter><CODE><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> domain</CODE></EM>,
                     <EM class=parameter><CODE><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> code</CODE></EM>,
                     <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *message</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Does nothing if <EM class=parameter><CODE>err</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>; if <EM class=parameter><CODE>err</CODE></EM> is non-</FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, then *<EM class=parameter><CODE>err</CODE></EM> must be </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. A new </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> is created and assigned to *<EM class=parameter><CODE>err</CODE></EM> . Unlike </FONT><A title=g_set_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-set-error"><CODE class=function><FONT class=extract>g_set_error()</FONT></CODE></A><FONT class=extract>, <EM class=parameter><CODE>message</CODE></EM> is not a <CODE class=function>printf()</CODE>-style format string. Use this function if <EM class=parameter><CODE>message</CODE></EM> contains text you don't have control over, that could include <CODE class=function>printf()</CODE> escape sequences.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.9.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>err</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a return location for a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>, or </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. </FONT></P></TD>
<TD class=parameter_annotations><SPAN class=annotation><FONT class=extract>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</FONT></SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>domain</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error domain</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>code</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error code</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>message</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error message</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since><FONT class=extract>Since 2.18</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-propagate-error></A>
<H3><FONT class=extract>g_propagate_error&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_propagate_error (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **dest</CODE></EM>,
                   <EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> *src</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>If <EM class=parameter><CODE>dest</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, free <EM class=parameter><CODE>src</CODE></EM> ; otherwise, moves <EM class=parameter><CODE>src</CODE></EM> into *<EM class=parameter><CODE>dest</CODE></EM> . The error variable <EM class=parameter><CODE>dest</CODE></EM> points to must be </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.10.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>dest</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error return location</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>src</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error to move into the return location</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-clear-error></A>
<H3><FONT class=extract>g_clear_error&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_clear_error (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **err</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>If <EM class=parameter><CODE>err</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, does nothing. If <EM class=parameter><CODE>err</CODE></EM> is non-</FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, calls </FONT><A title=g_error_free&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-error-free"><CODE class=function><FONT class=extract>g_error_free()</FONT></CODE></A><FONT class=extract> on *<EM class=parameter><CODE>err</CODE></EM> and sets *<EM class=parameter><CODE>err</CODE></EM> to </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.11.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>err</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract> return location</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-prefix-error></A>
<H3><FONT class=extract>g_prefix_error&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_prefix_error (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **err</CODE></EM>,
                <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                <EM class=parameter><CODE>...</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>Formats a string according to <EM class=parameter><CODE>format</CODE></EM> and prefix it to an existing error message. If <EM class=parameter><CODE>err</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> (ie: no error variable) then do nothing.</FONT></P>
<P><FONT class=extract>If *<EM class=parameter><CODE>err</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> (ie: an error variable is present but there is no error condition) then also do nothing. Whether or not it makes sense to take advantage of this feature is up to you.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.12.6></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>err</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a return location for a </FONT><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type><FONT class=extract>GError</FONT></SPAN></A><FONT class=extract>, or </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. </FONT></P></TD>
<TD class=parameter_annotations><SPAN class=annotation><FONT class=extract>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</FONT></SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>format</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>printf()-style format string</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>...</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>arguments to <EM class=parameter><CODE>format</CODE></EM> </FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since><FONT class=extract>Since 2.16</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-propagate-prefixed-error></A>
<H3><FONT class=extract>g_propagate_prefixed_error&nbsp;()</FONT></H3><PRE class=programlisting><FONT class=extract><SPAN class=returnvalue>void</SPAN>
g_propagate_prefixed_error (<EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **dest</CODE></EM>,
                            <EM class=parameter><CODE><A title="struct GError" class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> *src</CODE></EM>,
                            <EM class=parameter><CODE>const <A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
                            <EM class=parameter><CODE>...</CODE></EM>);</FONT></PRE>
<P><FONT class=extract>If <EM class=parameter><CODE>dest</CODE></EM> is </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>, free <EM class=parameter><CODE>src</CODE></EM> ; otherwise, moves <EM class=parameter><CODE>src</CODE></EM> into *<EM class=parameter><CODE>dest</CODE></EM> . *<EM class=parameter><CODE>dest</CODE></EM> must be </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract>. After the move, add a prefix as with </FONT><A title=g_prefix_error&nbsp;() class=link href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#g-prefix-error"><CODE class=function><FONT class=extract>g_prefix_error()</FONT></CODE></A><FONT class=extract>.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.7.13.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>dest</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error return location</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>src</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>error to move into the return location</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>format</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>printf()-style format string</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>...</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>arguments to <EM class=parameter><CODE>format</CODE></EM> </FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since><FONT class=extract>Since 2.16</FONT></P></DIV></DIV>
<DIV class=refsect1><A name=glib-Error-Reporting.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GError></A>
<H3><FONT class=extract>struct GError</FONT></H3><PRE class=programlisting><FONT class=extract>struct GError {
  GQuark       domain;
  gint         code;
  gchar       *message;
};
</FONT></PRE>
<P><FONT class=extract>The <CODE class=literal>GError</CODE> structure contains information about an error that has occurred.</FONT></P>
<DIV class=refsect3><A name=id-1.4.10.8.2.5></A>
<H4><FONT class=extract>Members</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title=GQuark class=link href="https://developer.gnome.org/glib/stable/glib-Quarks.html#GQuark"><SPAN class=type><FONT class=extract>GQuark</FONT></SPAN></A><FONT class=extract>&nbsp;<EM class=structfield><CODE><A name=GError.domain></A>domain</CODE></EM>;</FONT></P></TD>
<TD class=struct_member_description>
<P><FONT class=extract>error domain, e.g. </FONT><A title=G_FILE_ERROR class=link href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#G-FILE-ERROR:CAPS"><SPAN class=type><FONT class=extract>G_FILE_ERROR</FONT></SPAN></A></P></TD>
<TD class=struct_member_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=gint class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type><FONT class=extract>gint</FONT></SPAN></A><FONT class=extract>&nbsp;<EM class=structfield><CODE><A name=GError.code></A>code</CODE></EM>;</FONT></P></TD>
<TD class=struct_member_description>
<P><FONT class=extract>error code, e.g. </FONT><A class=link href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#G-FILE-ERROR-NOENT:CAPS"><CODE class=literal><FONT class=extract>G_FILE_ERROR_NOENT</FONT></CODE></A></P></TD>
<TD class=struct_member_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=gchar class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type><FONT class=extract>gchar</FONT></SPAN></A><FONT class=extract>&nbsp;*<EM class=structfield><CODE><A name=GError.message></A>message</CODE></EM>;</FONT></P></TD>
<TD class=struct_member_description>
<P><FONT class=extract>human-readable informative error message</FONT></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>