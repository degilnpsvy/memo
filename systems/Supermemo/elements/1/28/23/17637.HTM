<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Simple-XML-Subset-Parser.top_of_page></A>Simple XML Subset Parser</SPAN></H2>
<P>Simple XML Subset Parser &#8212; parses a subset of XML</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_escape_text&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-escape-text">g_markup_escape_text</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_printf_escaped&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-printf-escaped">g_markup_printf_escaped</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_vprintf_escaped&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-vprintf-escaped">g_markup_vprintf_escaped</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=returnvalue>GMarkupParseContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-new">g_markup_parse_context_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-parse">g_markup_parse_context_parse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_end_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-end-parse">g_markup_parse_context_end_parse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-free">g_markup_parse_context_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_get_position&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-position">g_markup_parse_context_get_position</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_get_element&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-element">g_markup_parse_context_get_element</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title="struct GSList" href="https://developer.gnome.org/glib/stable/glib-Singly-Linked-Lists.html#GSList"><SPAN class=returnvalue>GSList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_get_element_stack&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-element-stack">g_markup_parse_context_get_element_stack</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_get_user_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-user-data">g_markup_parse_context_get_user_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-push">g_markup_parse_context_push</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-pop">g_markup_parse_context_pop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=returnvalue>GMarkupParseContext</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-ref">g_markup_parse_context_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_markup_parse_context_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-unref">g_markup_parse_context_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_markup_collect_attributes&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-collect-attributes">g_markup_collect_attributes</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GMarkupError" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupError">GMarkupError</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_MARKUP_ERROR href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR:CAPS">G_MARKUP_ERROR</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GMarkupParseFlags" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseFlags">GMarkupParseFlags</A></TD></TR>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext">GMarkupParseContext</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser">GMarkupParser</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GMarkupCollectType" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupCollectType">GMarkupCollectType</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.description></A>
<H2>Description</H2>
<P>The "GMarkup" parser is intended to parse a simple markup format that's a subset of XML. This is a small, efficient, easy-to-use parser. It should not be used if you expect to interoperate with other applications generating full-scale XML. However, it's very useful for application data files, config files, etc. where you know your application will be the only one writing the file. Full-scale XML parsers should be able to parse the subset used by GMarkup, so you can easily migrate to full-scale XML at a later time if the need arises.</P>
<P>GMarkup is not guaranteed to signal an error on all invalid XML; the parser may accept documents that an XML parser would not. However, XML documents which are not well-formed (which is a weaker condition than being valid. See the <A class=ulink href="http://www.w3.org/TR/REC-xml/" target=_top>XML specification</A> for definitions of these terms.) are not considered valid GMarkup documents.</P>
<P>Simplifications to XML include:</P>
<DIV class=itemizedlist>
<UL style="LIST-STYLE-TYPE: disc" class=itemizedlist>
<LI class=listitem>
<P>Only UTF-8 encoding is allowed</P></LI>
<LI class=listitem>
<P>No user-defined entities</P></LI>
<LI class=listitem>
<P>Processing instructions, comments and the doctype declaration are "passed through" but are not interpreted in any way</P></LI>
<LI class=listitem>
<P>No DTD or validation</P></LI></UL></DIV>
<P>The markup format does support:</P>
<DIV class=itemizedlist>
<UL style="LIST-STYLE-TYPE: disc" class=itemizedlist>
<LI class=listitem>
<P>Elements</P></LI>
<LI class=listitem>
<P>Attributes</P></LI>
<LI class=listitem>
<P>5 standard entities: &amp; &lt; &gt; " '</P></LI>
<LI class=listitem>
<P>Character references</P></LI>
<LI class=listitem>
<P>Sections marked as CDATA</P></LI></UL></DIV></DIV>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-markup-escape-text></A>
<H3>g_markup_escape_text&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_markup_escape_text (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *text</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> length</CODE></EM>);</PRE>
<P>Escapes text so that the markup parser will parse it verbatim. Less than, greater than, ampersand, etc. are replaced with the corresponding entities. This function would typically be used when writing out a file to be parsed with the markup parser.</P>
<P>Note that this function doesn't protect whitespace and line endings from being processed according to the XML rules for normalization of line endings and attribute values.</P>
<P>Note also that this function will produce character references in the range of &amp;<SPAN class=type>x1</SPAN>; ... &amp;<SPAN class=type>x1f</SPAN>; for all control sequences except for tabstop, newline and carriage return. The character references in this range are not valid XML 1.0, but they are valid XML 1.1 and will be accepted by the GMarkup parser.</P>
<DIV class=refsect3><A name=id-1.5.26.7.2.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>text</P></TD>
<TD class=parameter_description>
<P>some valid UTF-8 text</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>length of <EM class=parameter><CODE>text</CODE></EM> in bytes, or -1 if the text is nul-terminated</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.2.8></A>
<H4>Returns</H4>
<P>a newly allocated string with the escaped text</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-printf-escaped></A>
<H3>g_markup_printf_escaped&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_markup_printf_escaped (<EM class=parameter><CODE>const <SPAN class=type>char</SPAN> *format</CODE></EM>,
                         <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Formats arguments according to <EM class=parameter><CODE>format</CODE></EM> , escaping all string and character arguments in the fashion of <A class=link title=g_markup_escape_text&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-escape-text"><CODE class=function>g_markup_escape_text()</CODE></A>. This is useful when you want to insert literal strings into XML-style markup output, without having to worry that the strings might themselves contain markup.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">const char</SPAN> <SPAN class="gtkdoc opt">*</SPAN>store <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=string>"Fortnum &amp; Mason"</SPAN><SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">const char</SPAN> <SPAN class="gtkdoc opt">*</SPAN>item <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=string>"Tea"</SPAN><SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">char</SPAN> <SPAN class="gtkdoc opt">*</SPAN>output<SPAN class="gtkdoc opt">;</SPAN>

output <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-printf-escaped">g_markup_printf_escaped</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"&lt;purchase&gt;"</SPAN>
                                  <SPAN class=string>"&lt;store&gt;%s&lt;/store&gt;"</SPAN>
                                  <SPAN class=string>"&lt;item&gt;%s&lt;/item&gt;"</SPAN>
                                  <SPAN class=string>"&lt;/purchase&gt;"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                  store<SPAN class="gtkdoc opt">,</SPAN> item<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.5.26.7.3.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>printf() style format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the arguments to insert in the format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.3.8></A>
<H4>Returns</H4>
<P>newly allocated result from formatting operation. Free with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-vprintf-escaped></A>
<H3>g_markup_vprintf_escaped&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_markup_vprintf_escaped (<EM class=parameter><CODE>const <SPAN class=type>char</SPAN> *format</CODE></EM>,
                          <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>);</PRE>
<P>Formats the data in <EM class=parameter><CODE>args</CODE></EM> according to <EM class=parameter><CODE>format</CODE></EM> , escaping all string and character arguments in the fashion of <A class=link title=g_markup_escape_text&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-escape-text"><CODE class=function>g_markup_escape_text()</CODE></A>. See <A class=link title=g_markup_printf_escaped&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-printf-escaped"><CODE class=function>g_markup_printf_escaped()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.26.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>printf() style format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>variable argument list, similar to <CODE class=function>vprintf()</CODE></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.4.6></A>
<H4>Returns</H4>
<P>newly allocated result from formatting operation. Free with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-new></A>
<H3>g_markup_parse_context_new&nbsp;()</H3><PRE class=programlisting><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=returnvalue>GMarkupParseContext</SPAN></A>&nbsp;*
g_markup_parse_context_new (<EM class=parameter><CODE>const <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> *parser</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title="enum GMarkupParseFlags" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseFlags"><SPAN class=type>GMarkupParseFlags</SPAN></A> flags</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> user_data_dnotify</CODE></EM>);</PRE>
<P>Creates a new parse context. A parse context is used to parse marked-up documents. You can feed any number of documents into a context, as long as no errors occur; once an error occurs, the parse context can't continue to parse text (you have to free it and create a new parse context).</P>
<DIV class=refsect3><A name=id-1.5.26.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>parser</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P>one or more <A class=link title="enum GMarkupParseFlags" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseFlags"><SPAN class=type>GMarkupParseFlags</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data_dnotify</P></TD>
<TD class=parameter_description>
<P>user data destroy notifier called when the parse context is freed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.5.6></A>
<H4>Returns</H4>
<P>a new <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-parse></A>
<H3>g_markup_parse_context_parse&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_markup_parse_context_parse (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>,
                              <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *text</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> text_len</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Feed some data to the <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A>.</P>
<P>The data need not be valid UTF-8; an error will be signaled if it's invalid. The data need not be an entire document; you can feed a document into the parser incrementally, via multiple calls to this function. Typically, as you receive data from a network connection or file, you feed each received chunk of data into this function, aborting the process if an error occurs. Once an error is reported, no further data may be fed to the <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A>; all errors are fatal.</P>
<DIV class=refsect3><A name=id-1.5.26.7.6.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>text</P></TD>
<TD class=parameter_description>
<P>chunk of text to parse</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>text_len</P></TD>
<TD class=parameter_description>
<P>length of <EM class=parameter><CODE>text</CODE></EM> in bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>return location for a <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.6.7></A>
<H4>Returns</H4>
<P><A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if an error occurred, <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-end-parse></A>
<H3>g_markup_parse_context_end_parse&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_markup_parse_context_end_parse (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>,
                                  <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Signals to the <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> that all data has been fed into the parse context with <A class=link title=g_markup_parse_context_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-parse"><CODE class=function>g_markup_parse_context_parse()</CODE></A>.</P>
<P>This function reports an error if the document isn't complete, for example if elements are still open.</P>
<DIV class=refsect3><A name=id-1.5.26.7.7.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>return location for a <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.7.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> on success, <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if an error was set</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-free></A>
<H3>g_markup_parse_context_free&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_markup_parse_context_free (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Frees a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A>.</P>
<P>This function can't be called from inside one of the <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions or while a subparser is pushed.</P>
<DIV class=refsect3><A name=id-1.5.26.7.8.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-get-position></A>
<H3>g_markup_parse_context_get_position&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_markup_parse_context_get_position (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>,
                                     <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> *line_number</CODE></EM>,
                                     <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> *char_number</CODE></EM>);</PRE>
<P>Retrieves the current line number and the number of the character on that line. Intended for use in error messages; there are no strict semantics for what constitutes the "current" line number other than "the best number we could come up with for error messages."</P>
<DIV class=refsect3><A name=id-1.5.26.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>line_number</P></TD>
<TD class=parameter_description>
<P>return location for a line number, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>char_number</P></TD>
<TD class=parameter_description>
<P>return location for a char-on-line number, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-get-element></A>
<H3>g_markup_parse_context_get_element&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_markup_parse_context_get_element (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Retrieves the name of the currently open element.</P>
<P>If called from the start_element or end_element handlers this will give the element_name as passed to those functions. For the parent elements, see <A class=link title=g_markup_parse_context_get_element_stack&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-element-stack"><CODE class=function>g_markup_parse_context_get_element_stack()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.26.7.10.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.10.7></A>
<H4>Returns</H4>
<P>the name of the currently open element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P>
<P></P></DIV>
<P class=since>Since 2.2</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-get-element-stack></A>
<H3>g_markup_parse_context_get_element_stack&nbsp;()</H3><PRE class=programlisting>const <A class=link title="struct GSList" href="https://developer.gnome.org/glib/stable/glib-Singly-Linked-Lists.html#GSList"><SPAN class=returnvalue>GSList</SPAN></A>&nbsp;*
g_markup_parse_context_get_element_stack
                               (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Retrieves the element stack from the internal state of the parser.</P>
<P>The returned <A class=link title="struct GSList" href="https://developer.gnome.org/glib/stable/glib-Singly-Linked-Lists.html#GSList"><SPAN class=type>GSList</SPAN></A> is a list of strings where the first item is the currently open tag (as would be returned by <A class=link title=g_markup_parse_context_get_element&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-element"><CODE class=function>g_markup_parse_context_get_element()</CODE></A>) and the next item is its immediate parent.</P>
<P>This function is intended to be used in the start_element and end_element handlers where <A class=link title=g_markup_parse_context_get_element&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-get-element"><CODE class=function>g_markup_parse_context_get_element()</CODE></A> would merely return the name of the element that is being processed.</P>
<DIV class=refsect3><A name=id-1.5.26.7.11.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.11.8></A>
<H4>Returns</H4>
<P>the element stack, which must not be modified</P>
<P></P></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-get-user-data></A>
<H3>g_markup_parse_context_get_user_data&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_markup_parse_context_get_user_data (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Returns the user_data associated with <EM class=parameter><CODE>context</CODE></EM> .</P>
<P>This will either be the user_data that was provided to <A class=link title=g_markup_parse_context_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-new"><CODE class=function>g_markup_parse_context_new()</CODE></A> or to the most recent call of <A class=link title=g_markup_parse_context_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-push"><CODE class=function>g_markup_parse_context_push()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.26.7.12.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.12.7></A>
<H4>Returns</H4>
<P>the provided user_data. The returned data belongs to the markup context and will be freed when <A class=link title=g_markup_parse_context_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-free"><CODE class=function>g_markup_parse_context_free()</CODE></A> is called.</P>
<P></P></DIV>
<P class=since>Since 2.18</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-push></A>
<H3>g_markup_parse_context_push&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_markup_parse_context_push (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> *parser</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Temporarily redirects markup data to a sub-parser.</P>
<P>This function may only be called from the start_element handler of a <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A>. It must be matched with a corresponding call to <A class=link title=g_markup_parse_context_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-pop"><CODE class=function>g_markup_parse_context_pop()</CODE></A> in the matching end_element handler (except in the case that the parser aborts due to an error).</P>
<P>All tags, text and other data between the matching tags is redirected to the subparser given by <EM class=parameter><CODE>parser</CODE></EM> . <EM class=parameter><CODE>user_data</CODE></EM> is used as the user_data for that parser. <EM class=parameter><CODE>user_data</CODE></EM> is also passed to the error callback in the event that an error occurs. This includes errors that occur in subparsers of the subparser.</P>
<P>The end tag matching the start tag for which this call was made is handled by the previous parser (which is given its own user_data) which is why <A class=link title=g_markup_parse_context_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-pop"><CODE class=function>g_markup_parse_context_pop()</CODE></A> is provided to allow "one last access" to the <EM class=parameter><CODE>user_data</CODE></EM> provided to this function. In the case of error, the <EM class=parameter><CODE>user_data</CODE></EM> provided here is passed directly to the error callback of the subparser and <A class=link title=g_markup_parse_context_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-pop"><CODE class=function>g_markup_parse_context_pop()</CODE></A> should not be called. In either case, if <EM class=parameter><CODE>user_data</CODE></EM> was allocated then it ought to be freed from both of these locations.</P>
<P>This function is not intended to be directly called by users interested in invoking subparsers. Instead, it is intended to be used by the subparsers themselves to implement a higher-level interface.</P>
<P>As an example, see the following implementation of a simple parser that counts the number of tags encountered.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwc">typedef</SPAN> <SPAN class="gtkdoc kwb">struct</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  gint tag_count<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN> CounterData<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>counter_start_element</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GMarkupParseContext  <SPAN class="gtkdoc opt">*</SPAN>context<SPAN class="gtkdoc opt">,</SPAN>
                       <SPAN class="gtkdoc kwb">const</SPAN> gchar          <SPAN class="gtkdoc opt">*</SPAN>element_name<SPAN class="gtkdoc opt">,</SPAN>
                       <SPAN class="gtkdoc kwb">const</SPAN> gchar         <SPAN class="gtkdoc opt">**</SPAN>attribute_names<SPAN class="gtkdoc opt">,</SPAN>
                       <SPAN class="gtkdoc kwb">const</SPAN> gchar         <SPAN class="gtkdoc opt">**</SPAN>attribute_values<SPAN class="gtkdoc opt">,</SPAN>
                       gpointer              user_data<SPAN class="gtkdoc opt">,</SPAN>
                       GError              <SPAN class="gtkdoc opt">**</SPAN>error<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  CounterData <SPAN class="gtkdoc opt">*</SPAN>data <SPAN class="gtkdoc opt">=</SPAN> user_data<SPAN class="gtkdoc opt">;</SPAN>

  data<SPAN class="gtkdoc opt">-&gt;</SPAN>tag_count<SPAN class="gtkdoc opt">++;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>counter_error</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GMarkupParseContext <SPAN class="gtkdoc opt">*</SPAN>context<SPAN class="gtkdoc opt">,</SPAN>
               GError              <SPAN class="gtkdoc opt">*</SPAN>error<SPAN class="gtkdoc opt">,</SPAN>
               gpointer             user_data<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  CounterData <SPAN class="gtkdoc opt">*</SPAN>data <SPAN class="gtkdoc opt">=</SPAN> user_data<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html#g-slice-free">g_slice_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>CounterData<SPAN class="gtkdoc opt">,</SPAN> data<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">static</SPAN> GMarkupParser counter_subparser <SPAN class="gtkdoc opt">=</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  counter_start_element<SPAN class="gtkdoc opt">,</SPAN>
  NULL<SPAN class="gtkdoc opt">,</SPAN>
  NULL<SPAN class="gtkdoc opt">,</SPAN>
  NULL<SPAN class="gtkdoc opt">,</SPAN>
  counter_error
<SPAN class="gtkdoc opt">};</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>In order to allow this parser to be easily used as a subparser, the following interface is provided:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>start_counting</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GMarkupParseContext <SPAN class="gtkdoc opt">*</SPAN>context<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  CounterData <SPAN class="gtkdoc opt">*</SPAN>data <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html#g-slice-new">g_slice_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>CounterData<SPAN class="gtkdoc opt">);</SPAN>

  data<SPAN class="gtkdoc opt">-&gt;</SPAN>tag_count <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-push">g_markup_parse_context_push</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>context<SPAN class="gtkdoc opt">, &amp;</SPAN>counter_subparser<SPAN class="gtkdoc opt">,</SPAN> data<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

gint
<SPAN class=function>end_counting</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GMarkupParseContext <SPAN class="gtkdoc opt">*</SPAN>context<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  CounterData <SPAN class="gtkdoc opt">*</SPAN>data <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-pop">g_markup_parse_context_pop</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>context<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc kwb">int</SPAN> result<SPAN class="gtkdoc opt">;</SPAN>

  result <SPAN class="gtkdoc opt">=</SPAN> data<SPAN class="gtkdoc opt">-&gt;</SPAN>tag_count<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html#g-slice-free">g_slice_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>CounterData<SPAN class="gtkdoc opt">,</SPAN> data<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class=keyword>return</SPAN> result<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>The subparser would then be used as follows:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11
12
13
14
15</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">static void</SPAN> <SPAN class=function>start_element</SPAN> <SPAN class="gtkdoc opt">(</SPAN>context<SPAN class="gtkdoc opt">,</SPAN> element_name<SPAN class="gtkdoc opt">, ...)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>strcmp</SPAN> <SPAN class="gtkdoc opt">(</SPAN>element_name<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"count-these"</SPAN><SPAN class="gtkdoc opt">) ==</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function>start_counting</SPAN> <SPAN class="gtkdoc opt">(</SPAN>context<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class="gtkdoc slc">// else, handle other tags...</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN> <SPAN class=function>end_element</SPAN> <SPAN class="gtkdoc opt">(</SPAN>context<SPAN class="gtkdoc opt">,</SPAN> element_name<SPAN class="gtkdoc opt">, ...)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>strcmp</SPAN> <SPAN class="gtkdoc opt">(</SPAN>element_name<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"count-these"</SPAN><SPAN class="gtkdoc opt">) ==</SPAN> <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-print">g_print</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Counted %d tags</SPAN><SPAN class="gtkdoc esc">\n</SPAN><SPAN class=string>"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function>end_counting</SPAN> <SPAN class="gtkdoc opt">(</SPAN>context<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class="gtkdoc slc">// else, handle other tags...</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.5.26.7.13.18></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>parser</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.18</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-pop></A>
<H3>g_markup_parse_context_pop&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_markup_parse_context_pop (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Completes the process of a temporary sub-parser redirection.</P>
<P>This function exists to collect the user_data allocated by a matching call to <A class=link title=g_markup_parse_context_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-push"><CODE class=function>g_markup_parse_context_push()</CODE></A>. It must be called in the end_element handler corresponding to the start_element handler during which <A class=link title=g_markup_parse_context_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-push"><CODE class=function>g_markup_parse_context_push()</CODE></A> was called. You must not call this function from the error callback -- the <EM class=parameter><CODE>user_data</CODE></EM> is provided directly to the callback in that case.</P>
<P>This function is not intended to be directly called by users interested in invoking subparsers. Instead, it is intended to be used by the subparsers themselves to implement a higher-level interface.</P>
<DIV class=refsect3><A name=id-1.5.26.7.14.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.14.8></A>
<H4>Returns</H4>
<P>the user data passed to <A class=link title=g_markup_parse_context_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-push"><CODE class=function>g_markup_parse_context_push()</CODE></A></P>
<P></P></DIV>
<P class=since>Since 2.18</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-ref></A>
<H3>g_markup_parse_context_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=returnvalue>GMarkupParseContext</SPAN></A>&nbsp;*
g_markup_parse_context_ref (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Increases the reference count of <EM class=parameter><CODE>context</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.5.26.7.15.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.15.6></A>
<H4>Returns</H4>
<P>the same <EM class=parameter><CODE>context</CODE></EM> </P>
<P></P></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-parse-context-unref></A>
<H3>g_markup_parse_context_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_markup_parse_context_unref (<EM class=parameter><CODE><A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A> *context</CODE></EM>);</PRE>
<P>Decreases the reference count of <EM class=parameter><CODE>context</CODE></EM> . When its reference count drops to 0, it is freed.</P>
<DIV class=refsect3><A name=id-1.5.26.7.16.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>context</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GMarkupParseContext href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParseContext"><SPAN class=type>GMarkupParseContext</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.36</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-markup-collect-attributes></A>
<H3>g_markup_collect_attributes&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_markup_collect_attributes (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *element_name</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **attribute_names</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **attribute_values</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title="enum GMarkupCollectType" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupCollectType"><SPAN class=type>GMarkupCollectType</SPAN></A> first_type</CODE></EM>,
                             <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_attr</CODE></EM>,
                             <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Collects the attributes of the element from the data passed to the <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> start_element function, dealing with common error conditions and supporting boolean values.</P>
<P>This utility function is not required to write a parser but can save a lot of typing.</P>
<P>The <EM class=parameter><CODE>element_name</CODE></EM> , <EM class=parameter><CODE>attribute_names</CODE></EM> , <EM class=parameter><CODE>attribute_values</CODE></EM> and <EM class=parameter><CODE>error</CODE></EM> parameters passed to the start_element callback should be passed unmodified to this function.</P>
<P>Following these arguments is a list of "supported" attributes to collect. It is an error to specify multiple attributes with the same name. If any attribute not in the list appears in the <EM class=parameter><CODE>attribute_names</CODE></EM> array then an unknown attribute error will result.</P>
<P>The <A class=link title="enum GMarkupCollectType" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupCollectType"><SPAN class=type>GMarkupCollectType</SPAN></A> field allows specifying the type of collection to perform and if a given attribute must appear or is optional.</P>
<P>The attribute name is simply the name of the attribute to collect.</P>
<P>The pointer should be of the appropriate type (see the descriptions under <A class=link title="enum GMarkupCollectType" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupCollectType"><SPAN class=type>GMarkupCollectType</SPAN></A>) and may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> in case a particular attribute is to be allowed but ignored.</P>
<P>This function deals with issuing errors for missing attributes (of type <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-MISSING-ATTRIBUTE:CAPS"><CODE class=literal>G_MARKUP_ERROR_MISSING_ATTRIBUTE</CODE></A>), unknown attributes (of type <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-UNKNOWN-ATTRIBUTE:CAPS"><CODE class=literal>G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE</CODE></A>) and duplicate attributes (of type <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-INVALID-CONTENT:CAPS"><CODE class=literal>G_MARKUP_ERROR_INVALID_CONTENT</CODE></A>) as well as parse errors for boolean-valued attributes (again of type <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-INVALID-CONTENT:CAPS"><CODE class=literal>G_MARKUP_ERROR_INVALID_CONTENT</CODE></A>). In all of these cases <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> will be returned and <EM class=parameter><CODE>error</CODE></EM> will be set as appropriate.</P>
<DIV class=refsect3><A name=id-1.5.26.7.17.12></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>element_name</P></TD>
<TD class=parameter_description>
<P>the current tag name</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>attribute_names</P></TD>
<TD class=parameter_description>
<P>the attribute names</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>attribute_values</P></TD>
<TD class=parameter_description>
<P>the attribute values</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_type</P></TD>
<TD class=parameter_description>
<P>the <A class=link title="enum GMarkupCollectType" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupCollectType"><SPAN class=type>GMarkupCollectType</SPAN></A> of the first attribute</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_attr</P></TD>
<TD class=parameter_description>
<P>the name of the first attribute</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>a pointer to the storage location of the first attribute (or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), followed by more types names and pointers, ending with <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-COLLECT-INVALID:CAPS"><CODE class=literal>G_MARKUP_COLLECT_INVALID</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.26.7.17.13></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if successful</P>
<P></P></DIV>
<P class=since>Since 2.16</P></DIV></DIV>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GMarkupError></A>
<H3>enum GMarkupError</H3>
<P>Error codes returned by markup parsing.</P>
<DIV class=refsect3><A name=id-1.5.26.8.2.4></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-BAD-UTF8:CAPS></A>G_MARKUP_ERROR_BAD_UTF8</P></TD>
<TD class=enum_member_description>
<P>text being parsed was not valid UTF-8</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-EMPTY:CAPS></A>G_MARKUP_ERROR_EMPTY</P></TD>
<TD class=enum_member_description>
<P>document contained nothing, or only whitespace</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-PARSE:CAPS></A>G_MARKUP_ERROR_PARSE</P></TD>
<TD class=enum_member_description>
<P>document was ill-formed</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-UNKNOWN-ELEMENT:CAPS></A>G_MARKUP_ERROR_UNKNOWN_ELEMENT</P></TD>
<TD class=enum_member_description>
<P>error should be set by <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions; element wasn't known</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-UNKNOWN-ATTRIBUTE:CAPS></A>G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE</P></TD>
<TD class=enum_member_description>
<P>error should be set by <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions; attribute wasn't known</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-INVALID-CONTENT:CAPS></A>G_MARKUP_ERROR_INVALID_CONTENT</P></TD>
<TD class=enum_member_description>
<P>error should be set by <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions; content was invalid</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-ERROR-MISSING-ATTRIBUTE:CAPS></A>G_MARKUP_ERROR_MISSING_ATTRIBUTE</P></TD>
<TD class=enum_member_description>
<P>error should be set by <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> functions; a required attribute was missing</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-MARKUP-ERROR:CAPS></A>
<H3>G_MARKUP_ERROR</H3><PRE class=programlisting>#define G_MARKUP_ERROR g_markup_error_quark ()
</PRE>
<P>Error domain for markup parsing. Errors in this domain will be from the <A class=link title="enum GMarkupError" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupError"><SPAN class=type>GMarkupError</SPAN></A> enumeration. See <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> for information on error domains.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GMarkupParseFlags></A>
<H3>enum GMarkupParseFlags</H3>
<P>Flags that affect the behaviour of the parser.</P>
<DIV class=refsect3><A name=id-1.5.26.8.4.4></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-DO-NOT-USE-THIS-UNSUPPORTED-FLAG:CAPS></A>G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG</P></TD>
<TD class=enum_member_description>
<P>flag you should not use</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-TREAT-CDATA-AS-TEXT:CAPS></A>G_MARKUP_TREAT_CDATA_AS_TEXT</P></TD>
<TD class=enum_member_description>
<P>When this flag is set, CDATA marked sections are not passed literally to the <EM class=parameter><CODE>passthrough</CODE></EM> function of the parser. Instead, the content of the section (without the <CODE class=literal>&lt;![CDATA[</CODE> and <CODE class=literal>]]&gt;</CODE>) is passed to the <EM class=parameter><CODE>text</CODE></EM> function. This flag was added in GLib 2.12</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-PREFIX-ERROR-POSITION:CAPS></A>G_MARKUP_PREFIX_ERROR_POSITION</P></TD>
<TD class=enum_member_description>
<P>Normally errors caught by GMarkup itself have line/column information prefixed to them to let the caller know the location of the error. When this flag is set the location information is also prefixed to errors generated by the <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> implementation functions</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-IGNORE-QUALIFIED:CAPS></A>G_MARKUP_IGNORE_QUALIFIED</P></TD>
<TD class=enum_member_description>
<P>Ignore (don't report) qualified attributes and tags, along with their contents. A qualified attribute or tag is one that contains ':' in its name (ie: is in another namespace). Since: 2.40.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GMarkupParseContext></A>
<H3>GMarkupParseContext</H3><PRE class=programlisting>typedef struct _GMarkupParseContext GMarkupParseContext;</PRE>
<P>A parse context is used to parse a stream of bytes that you expect to contain marked-up text.</P>
<P>See <A class=link title=g_markup_parse_context_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-new"><CODE class=function>g_markup_parse_context_new()</CODE></A>, <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A>, and so on for more details.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GMarkupParser></A>
<H3>struct GMarkupParser</H3><PRE class=programlisting>struct GMarkupParser {
  /* Called for open tags &lt;foo bar="baz"&gt; */
  void (*start_element)  (GMarkupParseContext *context,
                          const gchar         *element_name,
                          const gchar        **attribute_names,
                          const gchar        **attribute_values,
                          gpointer             user_data,
                          GError             **error);

  /* Called for close tags &lt;/foo&gt; */
  void (*end_element)    (GMarkupParseContext *context,
                          const gchar         *element_name,
                          gpointer             user_data,
                          GError             **error);

  /* Called for character data */
  /* text is not nul-terminated */
  void (*text)           (GMarkupParseContext *context,
                          const gchar         *text,
                          gsize                text_len,
                          gpointer             user_data,
                          GError             **error);

  /* Called for strings that should be re-saved verbatim in this same
   * position, but are not otherwise interpretable.  At the moment
   * this includes comments and processing instructions.
   */
  /* text is not nul-terminated. */
  void (*passthrough)    (GMarkupParseContext *context,
                          const gchar         *passthrough_text,
                          gsize                text_len,
                          gpointer             user_data,
                          GError             **error);

  /* Called on error, including one set by other
   * methods in the vtable. The GError should not be freed.
   */
  void (*error)          (GMarkupParseContext *context,
                          GError              *error,
                          gpointer             user_data);
};
</PRE>
<P>Any of the fields in <A class=link title="struct GMarkupParser" href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#GMarkupParser"><SPAN class=type>GMarkupParser</SPAN></A> can be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, in which case they will be ignored. Except for the <EM class=parameter><CODE>error</CODE></EM> function, any of these callbacks can set an error; in particular the <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-UNKNOWN-ELEMENT:CAPS"><CODE class=literal>G_MARKUP_ERROR_UNKNOWN_ELEMENT</CODE></A>, <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-UNKNOWN-ATTRIBUTE:CAPS"><CODE class=literal>G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE</CODE></A>, and <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-ERROR-INVALID-CONTENT:CAPS"><CODE class=literal>G_MARKUP_ERROR_INVALID_CONTENT</CODE></A> errors are intended to be set from these callbacks. If you set an error from a callback, <A class=link title=g_markup_parse_context_parse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#g-markup-parse-context-parse"><CODE class=function>g_markup_parse_context_parse()</CODE></A> will report that error back to its caller.</P>
<DIV class=refsect3><A name=id-1.5.26.8.6.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMarkupParser.start-element></A>start_element</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Callback to invoke when the opening tag of an element is seen. The callback's <EM class=parameter><CODE>attribute_names</CODE></EM> and <EM class=parameter><CODE>attribute_values</CODE></EM> parameters are <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMarkupParser.end-element></A>end_element</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Callback to invoke when the closing tag of an element is seen. Note that this is also called for empty tags like <CODE class=literal>&lt;empty/&gt;</CODE>.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMarkupParser.text></A>text</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Callback to invoke when some text is seen (text is always inside an element). Note that the text of an element may be spread over multiple calls of this function. If the <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-TREAT-CDATA-AS-TEXT:CAPS"><CODE class=literal>G_MARKUP_TREAT_CDATA_AS_TEXT</CODE></A> flag is set, this function is also called for the content of CDATA marked sections.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMarkupParser.passthrough></A>passthrough</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Callback to invoke for comments, processing instructions and doctype declarations; if you're re-writing the parsed document, write the passthrough text back out in the same position. If the <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-TREAT-CDATA-AS-TEXT:CAPS"><CODE class=literal>G_MARKUP_TREAT_CDATA_AS_TEXT</CODE></A> flag is not set, this function is also called for CDATA marked sections.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GMarkupParser.error></A>error</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>Callback to invoke when an error occurs.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GMarkupCollectType></A>
<H3>enum GMarkupCollectType</H3>
<P>A mixed enumerated type and flags field. You must specify one type (string, strdup, boolean, tristate). Additionally, you may optionally bitwise OR the type with the flag <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-COLLECT-OPTIONAL:CAPS"><CODE class=literal>G_MARKUP_COLLECT_OPTIONAL</CODE></A>.</P>
<P>It is likely that this enum will be extended in the future to support other types.</P>
<DIV class=refsect3><A name=id-1.5.26.8.7.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-COLLECT-INVALID:CAPS></A>G_MARKUP_COLLECT_INVALID</P></TD>
<TD class=enum_member_description>
<P>used to terminate the list of attributes to collect</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-COLLECT-STRING:CAPS></A>G_MARKUP_COLLECT_STRING</P></TD>
<TD class=enum_member_description>
<P>collect the string pointer directly from the attribute_values[] array. Expects a parameter of type (const char **). If <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-COLLECT-OPTIONAL:CAPS"><CODE class=literal>G_MARKUP_COLLECT_OPTIONAL</CODE></A> is specified and the attribute isn't present then the pointer will be set to <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-COLLECT-STRDUP:CAPS></A>G_MARKUP_COLLECT_STRDUP</P></TD>
<TD class=enum_member_description>
<P>as with <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-COLLECT-STRING:CAPS"><CODE class=literal>G_MARKUP_COLLECT_STRING</CODE></A>, but expects a parameter of type (char **) and <A class=link title=g_strdup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strdup"><CODE class=function>g_strdup()</CODE></A>s the returned pointer. The pointer must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-COLLECT-BOOLEAN:CAPS></A>G_MARKUP_COLLECT_BOOLEAN</P></TD>
<TD class=enum_member_description>
<P>expects a parameter of type (gboolean *) and parses the attribute value as a boolean. Sets <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the attribute isn't present. Valid boolean values consist of (case-insensitive) "false", "f", "no", "n", "0" and "true", "t", "yes", "y", "1"</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-COLLECT-TRISTATE:CAPS></A>G_MARKUP_COLLECT_TRISTATE</P></TD>
<TD class=enum_member_description>
<P>as with <A class=link href="https://developer.gnome.org/glib/stable/glib-Simple-XML-Subset-Parser.html#G-MARKUP-COLLECT-BOOLEAN:CAPS"><CODE class=literal>G_MARKUP_COLLECT_BOOLEAN</CODE></A>, but in the case of a missing attribute a value is set that compares equal to neither <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> nor <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> G_MARKUP_COLLECT_OPTIONAL is implied</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-MARKUP-COLLECT-OPTIONAL:CAPS></A>G_MARKUP_COLLECT_OPTIONAL</P></TD>
<TD class=enum_member_description>
<P>can be bitwise ORed with the other fields. If present, allows the attribute not to appear. A default value is set depending on what value type is used</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Simple-XML-Subset-Parser.see-also></A>
<H2>See Also</H2>
<P><A class=ulink href="http://www.w3.org/TR/REC-xml/" target=_top>XML Specification</A></P></DIV>