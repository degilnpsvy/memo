<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Miscellaneous-Utility-Functions.top_of_page></A>Miscellaneous Utility Functions</SPAN></H2>
<P>Miscellaneous Utility Functions &#8212; a selection of portable utility functions</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Miscellaneous-Utility-Functions.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-application-name">g_get_application_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_set_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-application-name">g_set_application_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-prgname">g_get_prgname</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_set_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-prgname">g_set_prgname</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_get_environ&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-environ">g_get_environ</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_environ_getenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-getenv">g_environ_getenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_environ_setenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-setenv">g_environ_setenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_environ_unsetenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-unsetenv">g_environ_unsetenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_getenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-getenv">g_getenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_setenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-setenv">g_setenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_unsetenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-unsetenv">g_unsetenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A class=link title=g_listenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-listenv">g_listenv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_user_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-name">g_get_user_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_real_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-real-name">g_get_real_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_user_cache_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-cache-dir">g_get_user_cache_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_user_data_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-data-dir">g_get_user_data_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_user_config_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-config-dir">g_get_user_config_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_user_runtime_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-runtime-dir">g_get_user_runtime_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_user_special_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-special-dir">g_get_user_special_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* const * </TD>
<TD class=function_name><A class=link title=g_get_system_data_dirs&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-system-data-dirs">g_get_system_data_dirs</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* const * </TD>
<TD class=function_name><A class=link title=g_get_system_config_dirs&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-system-config-dirs">g_get_system_config_dirs</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_reload_user_special_dirs_cache&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-reload-user-special-dirs-cache">g_reload_user_special_dirs_cache</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_host_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-host-name">g_get_host_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_home_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-home-dir">g_get_home_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_tmp_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-tmp-dir">g_get_tmp_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_current_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-current-dir">g_get_current_dir</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_basename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-basename">g_basename</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_path_is_absolute&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-is-absolute">g_path_is_absolute</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_path_skip_root&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-skip-root">g_path_skip_root</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_path_get_basename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-get-basename">g_path_get_basename</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_path_get_dirname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-get-dirname">g_path_get_dirname</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_build_filename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-build-filename">g_build_filename</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_build_filenamev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-build-filenamev">g_build_filenamev</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_build_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-build-path">g_build_path</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_build_pathv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-build-pathv">g_build_pathv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_format_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size">g_format_size</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_format_size_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size-full">g_format_size_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_format_size_for_display&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size-for-display">g_format_size_for_display</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_find_program_in_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-find-program-in-path">g_find_program_in_path</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_bit_nth_lsf&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-bit-nth-lsf">g_bit_nth_lsf</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_bit_nth_msf&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-bit-nth-msf">g_bit_nth_msf</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_bit_storage&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-bit-storage">g_bit_storage</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_spaced_primes_closest&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-spaced-primes-closest">g_spaced_primes_closest</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit">g_atexit</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_parse_debug_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-parse-debug-string">g_parse_debug_string</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GVoidFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GVoidFunc">*GVoidFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GFreeFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GFreeFunc">*GFreeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_qsort_with_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-qsort-with-data">g_qsort_with_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_nullify_pointer&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-nullify-pointer">g_nullify_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Miscellaneous-Utility-Functions.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GUserDirectory" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GUserDirectory">GUserDirectory</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_dirname href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-dirname">g_dirname</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GFormatSizeFlags" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GFormatSizeFlags">GFormatSizeFlags</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GDebugKey" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GDebugKey">GDebugKey</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Miscellaneous-Utility-Functions.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Miscellaneous-Utility-Functions.description></A>
<H2>Description</H2>
<P>These are portable utility functions.</P></DIV>
<DIV class=refsect1><A name=glib-Miscellaneous-Utility-Functions.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-get-application-name></A>
<H3>g_get_application_name&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_application_name (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets a human-readable name for the application, as set by <A class=link title=g_set_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-application-name"><CODE class=function>g_set_application_name()</CODE></A>. This name should be localized if possible, and is intended for display to the user. Contrast with <A class=link title=g_get_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-prgname"><CODE class=function>g_get_prgname()</CODE></A>, which gets a non-localized name. If <A class=link title=g_set_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-application-name"><CODE class=function>g_set_application_name()</CODE></A> has not been called, returns the result of <A class=link title=g_get_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-prgname"><CODE class=function>g_get_prgname()</CODE></A> (which may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if <A class=link title=g_set_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-prgname"><CODE class=function>g_set_prgname()</CODE></A> has also not been called).</P>
<DIV class=refsect3><A name=id-1.5.14.7.2.5></A>
<H4>Returns</H4>
<P>human-readable application name. may return <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P>
<P></P></DIV>
<P class=since>Since 2.2</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-set-application-name></A>
<H3>g_set_application_name&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_set_application_name (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *application_name</CODE></EM>);</PRE>
<P>Sets a human-readable name for the application. This name should be localized if possible, and is intended for display to the user. Contrast with <A class=link title=g_set_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-prgname"><CODE class=function>g_set_prgname()</CODE></A>, which sets a non-localized name. <A class=link title=g_set_prgname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-prgname"><CODE class=function>g_set_prgname()</CODE></A> will be called automatically by <CODE class=function>gtk_init()</CODE>, but <A class=link title=g_set_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-application-name"><CODE class=function>g_set_application_name()</CODE></A> will not.</P>
<P>Note that for thread safety reasons, this function can only be called once.</P>
<P>The application name will be used in contexts such as error messages, or when displaying an application's name in the task list.</P>
<DIV class=refsect3><A name=id-1.5.14.7.3.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>application_name</P></TD>
<TD class=parameter_description>
<P>localized name of the application</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.2</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-prgname></A>
<H3>g_get_prgname&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_prgname (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the name of the program. This name should not be localized, in contrast to <A class=link title=g_get_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-application-name"><CODE class=function>g_get_application_name()</CODE></A>.</P>
<P>If you are using GDK or GTK+ the program name is set in <CODE class=function>gdk_init()</CODE>, which is called by <CODE class=function>gtk_init()</CODE>. The program name is found by taking the last component of <EM class=parameter><CODE>argv</CODE></EM> [0].</P>
<DIV class=refsect3><A name=id-1.5.14.7.4.6></A>
<H4>Returns</H4>
<P>the name of the program. The returned string belongs to GLib and must not be modified or freed.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-set-prgname></A>
<H3>g_set_prgname&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_set_prgname (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *prgname</CODE></EM>);</PRE>
<P>Sets the name of the program. This name should not be localized, in contrast to <A class=link title=g_set_application_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-set-application-name"><CODE class=function>g_set_application_name()</CODE></A>.</P>
<P>Note that for thread-safety reasons this function can only be called once.</P>
<DIV class=refsect3><A name=id-1.5.14.7.5.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>prgname</P></TD>
<TD class=parameter_description>
<P>the name of the program.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-environ></A>
<H3>g_get_environ&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_get_environ (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the list of environment variables for the current process.</P>
<P>The list is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> terminated and each item in the list is of the form 'NAME=VALUE'.</P>
<P>This is equivalent to direct access to the 'environ' global variable, except portable.</P>
<P>The return value is freshly allocated and it should be freed with <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A> when it is no longer needed.</P>
<DIV class=refsect3><A name=id-1.5.14.7.6.8></A>
<H4>Returns</H4>
<P>the list of environment variables. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-environ-getenv></A>
<H3>g_environ_getenv&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_environ_getenv (<EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **envp</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *variable</CODE></EM>);</PRE>
<P>Returns the value of the environment variable <EM class=parameter><CODE>variable</CODE></EM> in the provided list <EM class=parameter><CODE>envp</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.5.14.7.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>envp</P></TD>
<TD class=parameter_description>
<P>an environment list (eg, as returned from <A class=link title=g_get_environ&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-environ"><CODE class=function>g_get_environ()</CODE></A>), or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for an empty environment list. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>variable</P></TD>
<TD class=parameter_description>
<P>the environment variable to get, in the GLib file name encoding</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.7.6></A>
<H4>Returns</H4>
<P>the value of the environment variable, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the environment variable is not set in <EM class=parameter><CODE>envp</CODE></EM> . The returned string is owned by <EM class=parameter><CODE>envp</CODE></EM> , and will be freed if <EM class=parameter><CODE>variable</CODE></EM> is set or unset again.</P>
<P></P></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-environ-setenv></A>
<H3>g_environ_setenv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_environ_setenv (<EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **envp</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *variable</CODE></EM>,
                  <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *value</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> overwrite</CODE></EM>);</PRE>
<P>Sets the environment variable <EM class=parameter><CODE>variable</CODE></EM> in the provided list <EM class=parameter><CODE>envp</CODE></EM> to <EM class=parameter><CODE>value</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.5.14.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>envp</P></TD>
<TD class=parameter_description>
<P>an environment list that can be freed using <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A> (e.g., as returned from <A class=link title=g_get_environ&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-environ"><CODE class=function>g_get_environ()</CODE></A>), or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for an empty environment list. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>variable</P></TD>
<TD class=parameter_description>
<P>the environment variable to set, must not contain '='</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value for to set the variable to</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>overwrite</P></TD>
<TD class=parameter_description>
<P>whether to change the variable if it already exists</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.8.6></A>
<H4>Returns</H4>
<P>the updated environment list. Free it using <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-environ-unsetenv></A>
<H3>g_environ_unsetenv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_environ_unsetenv (<EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **envp</CODE></EM>,
                    <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *variable</CODE></EM>);</PRE>
<P>Removes the environment variable <EM class=parameter><CODE>variable</CODE></EM> from the provided environment <EM class=parameter><CODE>envp</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.5.14.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>envp</P></TD>
<TD class=parameter_description>
<P>an environment list that can be freed using <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A> (e.g., as returned from <A class=link title=g_get_environ&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-environ"><CODE class=function>g_get_environ()</CODE></A>), or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for an empty environment list. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>][<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>variable</P></TD>
<TD class=parameter_description>
<P>the environment variable to remove, must not contain '='</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.9.6></A>
<H4>Returns</H4>
<P>the updated environment list. Free it using <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-getenv></A>
<H3>g_getenv&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_getenv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *variable</CODE></EM>);</PRE>
<P>Returns the value of an environment variable.</P>
<P>The name and value are in the GLib file name encoding. On UNIX, this means the actual bytes which might or might not be in some consistent character set and encoding. On Windows, it is in UTF-8. On Windows, in case the environment variable's value contains references to other environment variables, they are expanded.</P>
<DIV class=refsect3><A name=id-1.5.14.7.10.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>variable</P></TD>
<TD class=parameter_description>
<P>the environment variable to get, in the GLib file name encoding</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.10.7></A>
<H4>Returns</H4>
<P>the value of the environment variable, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the environment variable is not found. The returned string may be overwritten by the next call to <A class=link title=g_getenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-getenv"><CODE class=function>g_getenv()</CODE></A>, <A class=link title=g_setenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-setenv"><CODE class=function>g_setenv()</CODE></A> or <A class=link title=g_unsetenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-unsetenv"><CODE class=function>g_unsetenv()</CODE></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-setenv></A>
<H3>g_setenv&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_setenv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *variable</CODE></EM>,
          <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *value</CODE></EM>,
          <EM class=parameter><CODE><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> overwrite</CODE></EM>);</PRE>
<P>Sets an environment variable. Both the variable's name and value should be in the GLib file name encoding. On UNIX, this means that they can be arbitrary byte strings. On Windows, they should be in UTF-8.</P>
<P>Note that on some systems, when variables are overwritten, the memory used for the previous variables and its value isn't reclaimed.</P>
<P>You should be mindful of the fact that environment variable handling in UNIX is not thread-safe, and your program may crash if one thread calls <A class=link title=g_setenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-setenv"><CODE class=function>g_setenv()</CODE></A> while another thread is calling <CODE class=function>getenv()</CODE>. (And note that many functions, such as <CODE class=function>gettext()</CODE>, call <CODE class=function>getenv()</CODE> internally.) This function is only safe to use at the very start of your program, before creating any other threads (or creating objects that create worker threads of their own).</P>
<P>If you need to set up the environment for a child process, you can use <A class=link title=g_get_environ&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-environ"><CODE class=function>g_get_environ()</CODE></A> to get an environment array, modify that with <A class=link title=g_environ_setenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-setenv"><CODE class=function>g_environ_setenv()</CODE></A> and <A class=link title=g_environ_unsetenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-unsetenv"><CODE class=function>g_environ_unsetenv()</CODE></A>, and then pass that array directly to <CODE class=function>execvpe()</CODE>, <A class=link title=g_spawn_async&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-async"><CODE class=function>g_spawn_async()</CODE></A>, or the like.</P>
<DIV class=refsect3><A name=id-1.5.14.7.11.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>variable</P></TD>
<TD class=parameter_description>
<P>the environment variable to set, must not contain '='.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value for to set the variable to.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>overwrite</P></TD>
<TD class=parameter_description>
<P>whether to change the variable if it already exists.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.11.9></A>
<H4>Returns</H4>
<P><A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the environment variable couldn't be set.</P>
<P></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-unsetenv></A>
<H3>g_unsetenv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_unsetenv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *variable</CODE></EM>);</PRE>
<P>Removes an environment variable from the environment.</P>
<P>Note that on some systems, when variables are overwritten, the memory used for the previous variables and its value isn't reclaimed.</P>
<P>You should be mindful of the fact that environment variable handling in UNIX is not thread-safe, and your program may crash if one thread calls <A class=link title=g_unsetenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-unsetenv"><CODE class=function>g_unsetenv()</CODE></A> while another thread is calling <CODE class=function>getenv()</CODE>. (And note that many functions, such as <CODE class=function>gettext()</CODE>, call <CODE class=function>getenv()</CODE> internally.) This function is only safe to use at the very start of your program, before creating any other threads (or creating objects that create worker threads of their own).</P>
<P>If you need to set up the environment for a child process, you can use <A class=link title=g_get_environ&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-environ"><CODE class=function>g_get_environ()</CODE></A> to get an environment array, modify that with <A class=link title=g_environ_setenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-setenv"><CODE class=function>g_environ_setenv()</CODE></A> and <A class=link title=g_environ_unsetenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-environ-unsetenv"><CODE class=function>g_environ_unsetenv()</CODE></A>, and then pass that array directly to <CODE class=function>execvpe()</CODE>, <A class=link title=g_spawn_async&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Spawning-Processes.html#g-spawn-async"><CODE class=function>g_spawn_async()</CODE></A>, or the like.</P>
<DIV class=refsect3><A name=id-1.5.14.7.12.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>variable</P></TD>
<TD class=parameter_description>
<P>the environment variable to remove, must not contain '='</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-listenv></A>
<H3>g_listenv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;**
g_listenv (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the names of all variables set in the environment.</P>
<P>Programs that want to be portable to Windows should typically use this function and <A class=link title=g_getenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-getenv"><CODE class=function>g_getenv()</CODE></A> instead of using the environ array from the C library directly. On Windows, the strings in the environ array are in system codepage encoding, while in most of the typical use cases for environment variables in GLib-using programs you want the UTF-8 encoding that this function and <A class=link title=g_getenv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-getenv"><CODE class=function>g_getenv()</CODE></A> provide.</P>
<DIV class=refsect3><A name=id-1.5.14.7.13.6></A>
<H4>Returns</H4>
<P>a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated list of strings which must be freed with <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.8</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-user-name></A>
<H3>g_get_user_name&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_user_name (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the user name of the current user. The encoding of the returned string is system-defined. On UNIX, it might be the preferred file name encoding, or something else, and there is no guarantee that it is even consistent on a machine. On Windows, it is always UTF-8.</P>
<DIV class=refsect3><A name=id-1.5.14.7.14.5></A>
<H4>Returns</H4>
<P>the user name of the current user.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-real-name></A>
<H3>g_get_real_name&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_real_name (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the real name of the user. This usually comes from the user's entry in the <CODE class=literal>passwd</CODE> file. The encoding of the returned string is system-defined. (On Windows, it is, however, always UTF-8.) If the real user name cannot be determined, the string "Unknown" is returned.</P>
<DIV class=refsect3><A name=id-1.5.14.7.15.5></A>
<H4>Returns</H4>
<P>the user's real name.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-user-cache-dir></A>
<H3>g_get_user_cache_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_user_cache_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns a base directory in which to store non-essential, cached data specific to particular user.</P>
<P>On UNIX platforms this is determined using the mechanisms described in the <A class=ulink href="http://www.freedesktop.org/Standards/basedir-spec" target=_top>XDG Base Directory Specification</A>. In this case the directory retrieved will be XDG_CACHE_HOME.</P>
<P>On Windows is the directory that serves as a common repository for temporary Internet files. A typical path is C:\Documents and Settings\username\Local Settings\Temporary Internet Files. See documentation for CSIDL_INTERNET_CACHE.</P>
<DIV class=refsect3><A name=id-1.5.14.7.16.7></A>
<H4>Returns</H4>
<P>a string owned by GLib that must not be modified or freed.</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-user-data-dir></A>
<H3>g_get_user_data_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_user_data_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns a base directory in which to access application data such as icons that is customized for a particular user. </P>
<P>On UNIX platforms this is determined using the mechanisms described in the <A class=ulink href="http://www.freedesktop.org/Standards/basedir-spec" target=_top>XDG Base Directory Specification</A>. In this case the directory retrieved will be <CODE class=literal>XDG_DATA_HOME</CODE>.</P>
<P>On Windows this is the folder to use for local (as opposed to roaming) application data. See documentation for CSIDL_LOCAL_APPDATA. Note that on Windows it thus is the same as what <A class=link title=g_get_user_config_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-config-dir"><CODE class=function>g_get_user_config_dir()</CODE></A> returns.</P>
<DIV class=refsect3><A name=id-1.5.14.7.17.7></A>
<H4>Returns</H4>
<P>a string owned by GLib that must not be modified or freed.</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-user-config-dir></A>
<H3>g_get_user_config_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_user_config_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns a base directory in which to store user-specific application configuration information such as user preferences and settings. </P>
<P>On UNIX platforms this is determined using the mechanisms described in the <A class=ulink href="http://www.freedesktop.org/Standards/basedir-spec" target=_top>XDG Base Directory Specification</A>. In this case the directory retrieved will be <CODE class=literal>XDG_CONFIG_HOME</CODE>.</P>
<P>On Windows this is the folder to use for local (as opposed to roaming) application data. See documentation for CSIDL_LOCAL_APPDATA. Note that on Windows it thus is the same as what <A class=link title=g_get_user_data_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-data-dir"><CODE class=function>g_get_user_data_dir()</CODE></A> returns.</P>
<DIV class=refsect3><A name=id-1.5.14.7.18.7></A>
<H4>Returns</H4>
<P>a string owned by GLib that must not be modified or freed.</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-user-runtime-dir></A>
<H3>g_get_user_runtime_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_user_runtime_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns a directory that is unique to the current user on the local system.</P>
<P>On UNIX platforms this is determined using the mechanisms described in the <A class=ulink href="http://www.freedesktop.org/Standards/basedir-spec" target=_top>XDG Base Directory Specification</A>. This is the directory specified in the <CODE class=literal>XDG_RUNTIME_DIR</CODE> environment variable. In the case that this variable is not set, GLib will issue a warning message to stderr and return the value of <A class=link title=g_get_user_cache_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-cache-dir"><CODE class=function>g_get_user_cache_dir()</CODE></A>.</P>
<P>On Windows this is the folder to use for local (as opposed to roaming) application data. See documentation for CSIDL_LOCAL_APPDATA. Note that on Windows it thus is the same as what <A class=link title=g_get_user_config_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-config-dir"><CODE class=function>g_get_user_config_dir()</CODE></A> returns.</P>
<DIV class=refsect3><A name=id-1.5.14.7.19.7></A>
<H4>Returns</H4>
<P>a string owned by GLib that must not be modified or freed.</P>
<P></P></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-user-special-dir></A>
<H3>g_get_user_special_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_user_special_dir (<EM class=parameter><CODE><A class=link title="enum GUserDirectory" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GUserDirectory"><SPAN class=type>GUserDirectory</SPAN></A> directory</CODE></EM>);</PRE>
<P>Returns the full path of a special directory using its logical id.</P>
<P>On UNIX this is done using the XDG special user directories. For compatibility with existing practise, <A class=link href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#G-USER-DIRECTORY-DESKTOP:CAPS"><CODE class=literal>G_USER_DIRECTORY_DESKTOP</CODE></A> falls back to <CODE class=literal>$HOME/Desktop</CODE> when XDG special user directories have not been set up. </P>
<P>Depending on the platform, the user might be able to change the path of the special directory without requiring the session to restart; GLib will not reflect any change once the special directories are loaded.</P>
<DIV class=refsect3><A name=id-1.5.14.7.20.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>directory</P></TD>
<TD class=parameter_description>
<P>the logical id of special directory</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.20.8></A>
<H4>Returns</H4>
<P>the path to the specified special directory, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the logical id was not found. The returned string is owned by GLib and should not be modified or freed.</P>
<P></P></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-system-data-dirs></A>
<H3>g_get_system_data_dirs&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* const *
g_get_system_data_dirs (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns an ordered list of base directories in which to access system-wide application data.</P>
<P>On UNIX platforms this is determined using the mechanisms described in the <A class=ulink href="http://www.freedesktop.org/Standards/basedir-spec" target=_top>XDG Base Directory Specification</A> In this case the list of directories retrieved will be XDG_DATA_DIRS.</P>
<P>On Windows the first elements in the list are the Application Data and Documents folders for All Users. (These can be determined only on Windows 2000 or later and are not present in the list on other Windows versions.) See documentation for CSIDL_COMMON_APPDATA and CSIDL_COMMON_DOCUMENTS.</P>
<P>Then follows the "share" subfolder in the installation folder for the package containing the DLL that calls this function, if it can be determined.</P>
<P>Finally the list contains the "share" subfolder in the installation folder for GLib, and in the installation folder for the package the application's .exe file belongs to.</P>
<P>The installation folders above are determined by looking up the folder where the module (DLL or EXE) in question is located. If the folder's name is "bin", its parent is used, otherwise the folder itself.</P>
<P>Note that on Windows the returned list can vary depending on where this function is called.</P>
<DIV class=refsect3><A name=id-1.5.14.7.21.11></A>
<H4>Returns</H4>
<P>a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated array of strings owned by GLib that must not be modified or freed. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-system-config-dirs></A>
<H3>g_get_system_config_dirs&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* const *
g_get_system_config_dirs (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Returns an ordered list of base directories in which to access system-wide configuration information.</P>
<P>On UNIX platforms this is determined using the mechanisms described in the <A class=ulink href="http://www.freedesktop.org/Standards/basedir-spec" target=_top>XDG Base Directory Specification</A>. In this case the list of directories retrieved will be <CODE class=literal>XDG_CONFIG_DIRS</CODE>.</P>
<P>On Windows is the directory that contains application data for all users. A typical path is C:\Documents and Settings\All Users\Application Data. This folder is used for application data that is not user specific. For example, an application can store a spell-check dictionary, a database of clip art, or a log file in the CSIDL_COMMON_APPDATA folder. This information will not roam and is available to anyone using the computer.</P>
<DIV class=refsect3><A name=id-1.5.14.7.22.7></A>
<H4>Returns</H4>
<P>a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated array of strings owned by GLib that must not be modified or freed. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-reload-user-special-dirs-cache></A>
<H3>g_reload_user_special_dirs_cache&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_reload_user_special_dirs_cache (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Resets the cache used for <A class=link title=g_get_user_special_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-special-dir"><CODE class=function>g_get_user_special_dir()</CODE></A>, so that the latest on-disk version is used. Call this only if you just changed the data on disk yourself.</P>
<P>Due to threadsafety issues this may cause leaking of strings that were previously returned from <A class=link title=g_get_user_special_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-special-dir"><CODE class=function>g_get_user_special_dir()</CODE></A> that can't be freed. We ensure to only leak the data for the directories that actually changed value though.</P>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-host-name></A>
<H3>g_get_host_name&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_host_name (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Return a name for the machine. </P>
<P>The returned name is not necessarily a fully-qualified domain name, or even present in DNS or some other name service at all. It need not even be unique on your local network or site, but usually it is. Callers should not rely on the return value having any specific properties like uniqueness for security purposes. Even if the name of the machine is changed while an application is running, the return value from this function does not change. The returned string is owned by GLib and should not be modified or freed. If no name can be determined, a default fixed string "localhost" is returned.</P>
<DIV class=refsect3><A name=id-1.5.14.7.24.6></A>
<H4>Returns</H4>
<P>the host name of the machine.</P>
<P></P></DIV>
<P class=since>Since 2.8</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-home-dir></A>
<H3>g_get_home_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_home_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the current user's home directory.</P>
<P>As with most UNIX tools, this function will return the value of the <CODE class=literal>HOME</CODE> environment variable if it is set to an existing absolute path name, falling back to the <CODE class=literal>passwd</CODE> file in the case that it is unset.</P>
<P>If the path given in <CODE class=literal>HOME</CODE> is non-absolute, does not exist, or is not a directory, the result is undefined.</P>
<P>Before version 2.36 this function would ignore the <CODE class=literal>HOME</CODE> environment variable, taking the value from the <CODE class=literal>passwd</CODE> database instead. This was changed to increase the compatibility of GLib with other programs (and the XDG basedir specification) and to increase testability of programs based on GLib (by making it easier to run them from test frameworks).</P>
<P>If your program has a strong requirement for either the new or the old behaviour (and if you don't wish to increase your GLib dependency to ensure that the new behaviour is in effect) then you should either directly check the <CODE class=literal>HOME</CODE> environment variable yourself or unset it before calling any functions in GLib.</P>
<DIV class=refsect3><A name=id-1.5.14.7.25.9></A>
<H4>Returns</H4>
<P>the current user's home directory</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-tmp-dir></A>
<H3>g_get_tmp_dir&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_tmp_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the directory to use for temporary files.</P>
<P>On UNIX, this is taken from the <CODE class=literal>TMPDIR</CODE> environment variable. If the variable is not set, <CODE class=literal>P_tmpdir</CODE> is used, as defined by the system C library. Failing that, a hard-coded default of "/tmp" is returned.</P>
<P>On Windows, the <CODE class=literal>TEMP</CODE> environment variable is used, with the root directory of the Windows installation (eg: "C:\") used as a default.</P>
<P>The encoding of the returned string is system-defined. On Windows, it is always UTF-8. The return value is never <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> or the empty string.</P>
<DIV class=refsect3><A name=id-1.5.14.7.26.8></A>
<H4>Returns</H4>
<P>the directory to use for temporary files.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-current-dir></A>
<H3>g_get_current_dir&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_current_dir (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the current directory.</P>
<P>The returned string should be freed when no longer needed. The encoding of the returned string is system defined. On Windows, it is always UTF-8.</P>
<P>Since GLib 2.40, this function will return the value of the "PWD" environment variable if it is set and it happens to be the same as the current directory. This can make a difference in the case that the current directory is the target of a symbolic link.</P>
<DIV class=refsect3><A name=id-1.5.14.7.27.7></A>
<H4>Returns</H4>
<P>the current directory</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-basename></A>
<H3>g_basename&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_basename (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *file_name</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_basename</CODE> has been deprecated since version 2.2 and should not be used in newly-written code.</P>
<P>Use <A class=link title=g_path_get_basename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-get-basename"><CODE class=function>g_path_get_basename()</CODE></A> instead, but notice that <A class=link title=g_path_get_basename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-get-basename"><CODE class=function>g_path_get_basename()</CODE></A> allocates new memory for the returned string, unlike this function which returns a pointer into the argument.</P></DIV>
<P>Gets the name of the file without any leading directory components. It returns a pointer into the given file name string.</P>
<DIV class=refsect3><A name=id-1.5.14.7.28.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>the name of the file</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.28.7></A>
<H4>Returns</H4>
<P>the name of the file without any leading directory components</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-path-is-absolute></A>
<H3>g_path_is_absolute&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_path_is_absolute (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *file_name</CODE></EM>);</PRE>
<P>Returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the given <EM class=parameter><CODE>file_name</CODE></EM> is an absolute file name. Note that this is a somewhat vague concept on Windows.</P>
<P>On POSIX systems, an absolute file name is well-defined. It always starts from the single root directory. For example "/usr/local".</P>
<P>On Windows, the concepts of current drive and drive-specific current directory introduce vagueness. This function interprets as an absolute file name one that either begins with a directory separator such as "\Users\tml" or begins with the root on a drive, for example "C:\Windows". The first case also includes UNC paths such as "\myserver\docs\foo". In all cases, either slashes or backslashes are accepted.</P>
<P>Note that a file name relative to the current drive root does not truly specify a file uniquely over time and across processes, as the current drive is a per-process value and can be changed.</P>
<P>File names relative the current directory on some specific drive, such as "D:foo/bar", are not interpreted as absolute by this function, but they obviously are not relative to the normal current directory as returned by <CODE class=function>getcwd()</CODE> or <A class=link title=g_get_current_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-current-dir"><CODE class=function>g_get_current_dir()</CODE></A> either. Such paths should be avoided, or need to be handled using Windows-specific code.</P>
<DIV class=refsect3><A name=id-1.5.14.7.29.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>a file name</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.29.10></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>file_name</CODE></EM> is absolute</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-path-skip-root></A>
<H3>g_path_skip_root&nbsp;()</H3><PRE class=programlisting>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_path_skip_root (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *file_name</CODE></EM>);</PRE>
<P>Returns a pointer into <EM class=parameter><CODE>file_name</CODE></EM> after the root component, i.e. after the "/" in UNIX or "C:\" under Windows. If <EM class=parameter><CODE>file_name</CODE></EM> is not an absolute path it returns <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.14.7.30.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>a file name</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.30.6></A>
<H4>Returns</H4>
<P>a pointer into <EM class=parameter><CODE>file_name</CODE></EM> after the root component</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-path-get-basename></A>
<H3>g_path_get_basename&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_path_get_basename (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *file_name</CODE></EM>);</PRE>
<P>Gets the last component of the filename.</P>
<P>If <EM class=parameter><CODE>file_name</CODE></EM> ends with a directory separator it gets the component before the last slash. If <EM class=parameter><CODE>file_name</CODE></EM> consists only of directory separators (and on Windows, possibly a drive letter), a single separator is returned. If <EM class=parameter><CODE>file_name</CODE></EM> is empty, it gets ".".</P>
<DIV class=refsect3><A name=id-1.5.14.7.31.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>the name of the file</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.31.7></A>
<H4>Returns</H4>
<P>a newly allocated string containing the last component of the filename</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-path-get-dirname></A>
<H3>g_path_get_dirname&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_path_get_dirname (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *file_name</CODE></EM>);</PRE>
<P>Gets the directory components of a file name.</P>
<P>If the file name has no directory components "." is returned. The returned string should be freed when no longer needed.</P>
<DIV class=refsect3><A name=id-1.5.14.7.32.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>the name of the file</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.32.7></A>
<H4>Returns</H4>
<P>the directory components of the file</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-build-filename></A>
<H3>g_build_filename&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_build_filename (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_element</CODE></EM>,
                  <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a filename from a series of elements using the correct separator for filenames.</P>
<P>On Unix, this function behaves identically to <CODE class=literal>g_build_path (G_DIR_SEPARATOR_S, first_element, ....)</CODE>.</P>
<P>On Windows, it takes into account that either the backslash (<CODE class=literal>\</CODE> or slash (<CODE class=literal>/</CODE>) can be used as separator in filenames, but otherwise behaves as on UNIX. When file pathname separators need to be inserted, the one that last previously occurred in the parameters (reading from left to right) is used.</P>
<P>No attempt is made to force the resulting filename to be an absolute path. If the first element is a relative path, the result will be a relative path.</P>
<DIV class=refsect3><A name=id-1.5.14.7.33.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>first_element</P></TD>
<TD class=parameter_description>
<P>the first element in the path</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>remaining elements in path, terminated by <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.33.9></A>
<H4>Returns</H4>
<P>a newly-allocated string that must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-build-filenamev></A>
<H3>g_build_filenamev&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_build_filenamev (<EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **args</CODE></EM>);</PRE>
<P>Behaves exactly like <A class=link title=g_build_filename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-build-filename"><CODE class=function>g_build_filename()</CODE></A>, but takes the path elements as a string array, instead of varargs. This function is mainly meant for language bindings.</P>
<DIV class=refsect3><A name=id-1.5.14.7.34.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P><A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated array of strings containing the path elements. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.34.6></A>
<H4>Returns</H4>
<P>a newly-allocated string that must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV>
<P class=since>Since 2.8</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-build-path></A>
<H3>g_build_path&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_build_path (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *separator</CODE></EM>,
              <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_element</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a path from a series of elements using <EM class=parameter><CODE>separator</CODE></EM> as the separator between elements. At the boundary between two elements, any trailing occurrences of separator in the first element, or leading occurrences of separator in the second element are removed and exactly one copy of the separator is inserted.</P>
<P>Empty elements are ignored.</P>
<P>The number of leading copies of the separator on the result is the same as the number of leading copies of the separator on the first non-empty element.</P>
<P>The number of trailing copies of the separator on the result is the same as the number of trailing copies of the separator on the last non-empty element. (Determination of the number of trailing copies is done without stripping leading copies, so if the separator is <CODE class=literal>ABA</CODE>, then <CODE class=literal>ABABA</CODE> has 1 trailing copy.)</P>
<P>However, if there is only a single non-empty element, and there are no characters in that element not part of the leading or trailing separators, then the result is exactly the original value of that element.</P>
<P>Other than for determination of the number of leading and trailing copies of the separator, elements consisting only of copies of the separator are ignored.</P>
<DIV class=refsect3><A name=id-1.5.14.7.35.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>separator</P></TD>
<TD class=parameter_description>
<P>a string used to separator the elements of the path.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_element</P></TD>
<TD class=parameter_description>
<P>the first element in the path</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>remaining elements in path, terminated by <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.35.11></A>
<H4>Returns</H4>
<P>a newly-allocated string that must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-build-pathv></A>
<H3>g_build_pathv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_build_pathv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *separator</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **args</CODE></EM>);</PRE>
<P>Behaves exactly like <A class=link title=g_build_path&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-build-path"><CODE class=function>g_build_path()</CODE></A>, but takes the path elements as a string array, instead of varargs. This function is mainly meant for language bindings.</P>
<DIV class=refsect3><A name=id-1.5.14.7.36.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>separator</P></TD>
<TD class=parameter_description>
<P>a string used to separator the elements of the path.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P><A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated array of strings containing the path elements. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> zero-terminated=1]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.36.6></A>
<H4>Returns</H4>
<P>a newly-allocated string that must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV>
<P class=since>Since 2.8</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-format-size></A>
<H3>g_format_size&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_format_size (<EM class=parameter><CODE><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> size</CODE></EM>);</PRE>
<P>Formats a size (for example the size of a file) into a human readable string. Sizes are rounded to the nearest size prefix (kB, MB, GB) and are displayed rounded to the nearest tenth. E.g. the file size 3292528 bytes will be converted into the string "3.2 MB".</P>
<P>The prefix units base is 1000 (i.e. 1 kB is 1000 bytes).</P>
<P>This string should be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> when not needed any longer.</P>
<P>See <A class=link title=g_format_size_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size-full"><CODE class=function>g_format_size_full()</CODE></A> for more options about how the size might be formatted.</P>
<DIV class=refsect3><A name=id-1.5.14.7.37.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>size</P></TD>
<TD class=parameter_description>
<P>a size in bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.37.9></A>
<H4>Returns</H4>
<P>a newly-allocated formatted string containing a human readable file size</P>
<P></P></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-format-size-full></A>
<H3>g_format_size_full&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_format_size_full (<EM class=parameter><CODE><A class=link title=guint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint64"><SPAN class=type>guint64</SPAN></A> size</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="enum GFormatSizeFlags" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GFormatSizeFlags"><SPAN class=type>GFormatSizeFlags</SPAN></A> flags</CODE></EM>);</PRE>
<P>Formats a size.</P>
<P>This function is similar to <A class=link title=g_format_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size"><CODE class=function>g_format_size()</CODE></A> but allows for flags that modify the output. See <A class=link title="enum GFormatSizeFlags" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GFormatSizeFlags"><SPAN class=type>GFormatSizeFlags</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.5.14.7.38.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>size</P></TD>
<TD class=parameter_description>
<P>a size in bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>flags</P></TD>
<TD class=parameter_description>
<P><A class=link title="enum GFormatSizeFlags" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GFormatSizeFlags"><SPAN class=type>GFormatSizeFlags</SPAN></A> to modify the output</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.38.7></A>
<H4>Returns</H4>
<P>a newly-allocated formatted string containing a human readable file size</P>
<P></P></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-format-size-for-display></A>
<H3>g_format_size_for_display&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_format_size_for_display (<EM class=parameter><CODE><A class=link title=goffset href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#goffset"><SPAN class=type>goffset</SPAN></A> size</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_format_size_for_display</CODE> has been deprecated since version 2.30 and should not be used in newly-written code.</P>
<P>This function is broken due to its use of SI suffixes to denote IEC units. Use <A class=link title=g_format_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size"><CODE class=function>g_format_size()</CODE></A> instead.</P></DIV>
<P>Formats a size (for example the size of a file) into a human readable string. Sizes are rounded to the nearest size prefix (KB, MB, GB) and are displayed rounded to the nearest tenth. E.g. the file size 3292528 bytes will be converted into the string "3.1 MB".</P>
<P>The prefix units base is 1024 (i.e. 1 KB is 1024 bytes).</P>
<P>This string should be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> when not needed any longer.</P>
<DIV class=refsect3><A name=id-1.5.14.7.39.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>size</P></TD>
<TD class=parameter_description>
<P>a size in bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.39.10></A>
<H4>Returns</H4>
<P>a newly-allocated formatted string containing a human readable file size</P>
<P></P></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-find-program-in-path></A>
<H3>g_find_program_in_path&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_find_program_in_path (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *program</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_find_program_in_path</CODE> is deprecated and should not be used in newly-written code.</P></DIV>
<P>Locates the first executable named <EM class=parameter><CODE>program</CODE></EM> in the user's path, in the same way that <CODE class=function>execvp()</CODE> would locate it. Returns an allocated string with the absolute path name, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the program is not found in the path. If <EM class=parameter><CODE>program</CODE></EM> is already an absolute path, returns a copy of <EM class=parameter><CODE>program</CODE></EM> if <EM class=parameter><CODE>program</CODE></EM> exists and is executable, and <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> otherwise.</P>
<P>On Windows, if <EM class=parameter><CODE>program</CODE></EM> does not have a file type suffix, tries with the suffixes .exe, .cmd, .bat and .com, and the suffixes in the <CODE class=literal>PATHEXT</CODE> environment variable. </P>
<P>On Windows, it looks for the file in the same way as <CODE class=function>CreateProcess()</CODE> would. This means first in the directory where the executing program was loaded from, then in the current directory, then in the Windows 32-bit system directory, then in the Windows directory, and finally in the directories in the <CODE class=literal>PATH</CODE> environment variable. If the program is found, the return value contains the full name including the type suffix.</P>
<DIV class=refsect3><A name=id-1.5.14.7.40.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>program</P></TD>
<TD class=parameter_description>
<P>a program name in the GLib file name encoding</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.40.9></A>
<H4>Returns</H4>
<P>a newly-allocated string with the absolute path, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-bit-nth-lsf></A>
<H3>g_bit_nth_lsf&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_bit_nth_lsf (<EM class=parameter><CODE><A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> mask</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> nth_bit</CODE></EM>);</PRE>
<P>Find the position of the first bit set in <EM class=parameter><CODE>mask</CODE></EM> , searching from (but not including) <EM class=parameter><CODE>nth_bit</CODE></EM> upwards. Bits are numbered from 0 (least significant) to sizeof(<A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A>) * 8 - 1 (31 or 63, usually). To start searching from the 0th bit, set <EM class=parameter><CODE>nth_bit</CODE></EM> to -1.</P>
<DIV class=refsect3><A name=id-1.5.14.7.41.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>mask</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> containing flags</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nth_bit</P></TD>
<TD class=parameter_description>
<P>the index of the bit to start the search from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.41.6></A>
<H4>Returns</H4>
<P>the index of the first bit set which is higher than <EM class=parameter><CODE>nth_bit</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-bit-nth-msf></A>
<H3>g_bit_nth_msf&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_bit_nth_msf (<EM class=parameter><CODE><A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> mask</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> nth_bit</CODE></EM>);</PRE>
<P>Find the position of the first bit set in <EM class=parameter><CODE>mask</CODE></EM> , searching from (but not including) <EM class=parameter><CODE>nth_bit</CODE></EM> downwards. Bits are numbered from 0 (least significant) to sizeof(<A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A>) * 8 - 1 (31 or 63, usually). To start searching from the last bit, set <EM class=parameter><CODE>nth_bit</CODE></EM> to -1 or GLIB_SIZEOF_LONG * 8.</P>
<DIV class=refsect3><A name=id-1.5.14.7.42.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>mask</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> containing flags</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>nth_bit</P></TD>
<TD class=parameter_description>
<P>the index of the bit to start the search from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.42.6></A>
<H4>Returns</H4>
<P>the index of the first bit set which is lower than <EM class=parameter><CODE>nth_bit</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-bit-storage></A>
<H3>g_bit_storage&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_bit_storage (<EM class=parameter><CODE><A class=link title=gulong href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gulong"><SPAN class=type>gulong</SPAN></A> number</CODE></EM>);</PRE>
<P>Gets the number of bits used to hold <EM class=parameter><CODE>number</CODE></EM> , e.g. if <EM class=parameter><CODE>number</CODE></EM> is 4, 3 bits are needed.</P>
<DIV class=refsect3><A name=id-1.5.14.7.43.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>number</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.43.6></A>
<H4>Returns</H4>
<P>the number of bits used to hold <EM class=parameter><CODE>number</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-spaced-primes-closest></A>
<H3>g_spaced_primes_closest&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_spaced_primes_closest (<EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> num</CODE></EM>);</PRE>
<P>Gets the smallest prime number from a built-in array of primes which is larger than <EM class=parameter><CODE>num</CODE></EM> . This is used within GLib to calculate the optimum size of a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>The built-in array of primes ranges from 11 to 13845163 such that each prime is approximately 1.5-2 times the previous prime.</P>
<DIV class=refsect3><A name=id-1.5.14.7.44.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>num</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.44.7></A>
<H4>Returns</H4>
<P>the smallest prime number from a built-in array of primes which is larger than <EM class=parameter><CODE>num</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-atexit></A>
<H3>g_atexit&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_atexit (<EM class=parameter><CODE><A class=link title=GVoidFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GVoidFunc"><SPAN class=type>GVoidFunc</SPAN></A> func</CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>g_atexit</CODE> has been deprecated since version 2.32 and should not be used in newly-written code.</P>
<P>It is best to avoid <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A>.</P></DIV>
<P>Specifies a function to be called at normal program termination.</P>
<P>Since GLib 2.8.2, on Windows <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A> actually is a preprocessor macro that maps to a call to the <CODE class=function>atexit()</CODE> function in the C library. This means that in case the code that calls <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A>, i.e. <CODE class=function>atexit()</CODE>, is in a DLL, the function will be called when the DLL is detached from the program. This typically makes more sense than that the function is called when the GLib DLL is detached, which happened earlier when <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A> was a function in the GLib DLL.</P>
<P>The behaviour of <CODE class=function>atexit()</CODE> in the context of dynamically loaded modules is not formally specified and varies wildly.</P>
<P>On POSIX systems, calling <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A> (or <CODE class=function>atexit()</CODE>) in a dynamically loaded module which is unloaded before the program terminates might well cause a crash at program exit.</P>
<P>Some POSIX systems implement <CODE class=function>atexit()</CODE> like Windows, and have each dynamically loaded module maintain an own atexit chain that is called when the module is unloaded.</P>
<P>On other POSIX systems, before a dynamically loaded module is unloaded, the registered atexit functions (if any) residing in that module are called, regardless where the code that registered them resided. This is presumably the most robust approach.</P>
<P>As can be seen from the above, for portability it's best to avoid calling <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A> (or <CODE class=function>atexit()</CODE>) except in the main executable of a program.</P>
<DIV class=refsect3><A name=id-1.5.14.7.45.12></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call on normal program termination. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="The callback is valid until first called."><SPAN class=acronym>scope async</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-parse-debug-string></A>
<H3>g_parse_debug_string&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_parse_debug_string (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *string</CODE></EM>,
                      <EM class=parameter><CODE>const <A class=link title="struct GDebugKey" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GDebugKey"><SPAN class=type>GDebugKey</SPAN></A> *keys</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> nkeys</CODE></EM>);</PRE>
<P>Parses a string containing debugging options into a <A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><CODE class=literal>guint</CODE></A> containing bit flags. This is used within GDK and GTK+ to parse the debug options passed on the command line or through environment variables.</P>
<P>If <EM class=parameter><CODE>string</CODE></EM> is equal to "all", all flags are set. Any flags specified along with "all" in <EM class=parameter><CODE>string</CODE></EM> are inverted; thus, "all,foo,bar" or "foo,bar,all" sets all flags except those corresponding to "foo" and "bar".</P>
<P>If <EM class=parameter><CODE>string</CODE></EM> is equal to "help", all the available keys in <EM class=parameter><CODE>keys</CODE></EM> are printed out to standard error.</P>
<DIV class=refsect3><A name=id-1.5.14.7.46.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>string</P></TD>
<TD class=parameter_description>
<P>a list of debug options separated by colons, spaces, or commas, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>keys</P></TD>
<TD class=parameter_description>
<P>pointer to an array of <A class=link title="struct GDebugKey" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GDebugKey"><SPAN class=type>GDebugKey</SPAN></A> which associate strings with bit flags. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=nkeys]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>nkeys</P></TD>
<TD class=parameter_description>
<P>the number of <A href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GDebugKey"><SPAN class=type>GDebugKeys</SPAN></A> in the array.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.7.46.8></A>
<H4>Returns</H4>
<P>the combined set of bit flags.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GVoidFunc></A>
<H3>GVoidFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GVoidFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<DIV class=warning>
<P><CODE class=literal>GVoidFunc</CODE> is deprecated and should not be used in newly-written code.</P></DIV>
<P>Declares a type of function which takes no arguments and has no return value. It is used to specify the type function passed to <A class=link title=g_atexit&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-atexit"><CODE class=function>g_atexit()</CODE></A>.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GFreeFunc></A>
<H3>GFreeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GFreeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Declares a type of function which takes an arbitrary data pointer argument and has no return value. It is not currently used in GLib or GTK+.</P>
<DIV class=refsect3><A name=id-1.5.14.7.48.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>a data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-qsort-with-data></A>
<H3>g_qsort_with_data&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_qsort_with_data (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> pbase</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> total_elems</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> size</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> compare_func</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>This is just like the standard C <CODE class=function>qsort()</CODE> function, but the comparison routine accepts a user data argument.</P>
<P>This is guaranteed to be a stable sort since version 2.32.</P>
<DIV class=refsect3><A name=id-1.5.14.7.49.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>pbase</P></TD>
<TD class=parameter_description>
<P>start of array to sort</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>total_elems</P></TD>
<TD class=parameter_description>
<P>elements in the array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>size</P></TD>
<TD class=parameter_description>
<P>size of each element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>function to compare elements</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>compare_func</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-nullify-pointer></A>
<H3>g_nullify_pointer&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_nullify_pointer (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *nullify_location</CODE></EM>);</PRE>
<P>Set the pointer at the specified location to <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.14.7.50.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>nullify_location</P></TD>
<TD class=parameter_description>
<P>the memory address of the pointer.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Miscellaneous-Utility-Functions.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GUserDirectory></A>
<H3>enum GUserDirectory</H3>
<P>These are logical ids for special directories which are defined depending on the platform used. You should use <A class=link title=g_get_user_special_dir&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-get-user-special-dir"><CODE class=function>g_get_user_special_dir()</CODE></A> to retrieve the full path associated to the logical id.</P>
<P>The <A class=link title="enum GUserDirectory" href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#GUserDirectory"><SPAN class=type>GUserDirectory</SPAN></A> enumeration can be extended at later date. Not every platform has a directory for every logical id in this enumeration.</P>
<DIV class=refsect3><A name=id-1.5.14.8.2.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-DESKTOP:CAPS></A>G_USER_DIRECTORY_DESKTOP</P></TD>
<TD class=enum_member_description>
<P>the user's Desktop directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-DOCUMENTS:CAPS></A>G_USER_DIRECTORY_DOCUMENTS</P></TD>
<TD class=enum_member_description>
<P>the user's Documents directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-DOWNLOAD:CAPS></A>G_USER_DIRECTORY_DOWNLOAD</P></TD>
<TD class=enum_member_description>
<P>the user's Downloads directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-MUSIC:CAPS></A>G_USER_DIRECTORY_MUSIC</P></TD>
<TD class=enum_member_description>
<P>the user's Music directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-PICTURES:CAPS></A>G_USER_DIRECTORY_PICTURES</P></TD>
<TD class=enum_member_description>
<P>the user's Pictures directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-PUBLIC-SHARE:CAPS></A>G_USER_DIRECTORY_PUBLIC_SHARE</P></TD>
<TD class=enum_member_description>
<P>the user's shared directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-TEMPLATES:CAPS></A>G_USER_DIRECTORY_TEMPLATES</P></TD>
<TD class=enum_member_description>
<P>the user's Templates directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-DIRECTORY-VIDEOS:CAPS></A>G_USER_DIRECTORY_VIDEOS</P></TD>
<TD class=enum_member_description>
<P>the user's Movies directory</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-USER-N-DIRECTORIES:CAPS></A>G_USER_N_DIRECTORIES</P></TD>
<TD class=enum_member_description>
<P>the number of enum values</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-dirname></A>
<H3>g_dirname</H3><PRE class=programlisting>#define             g_dirname</PRE>
<DIV class=warning>
<P><CODE class=literal>g_dirname</CODE> is deprecated and should not be used in newly-written code.</P>
<P>use <A class=link title=g_path_get_dirname&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-path-get-dirname"><CODE class=function>g_path_get_dirname()</CODE></A> instead</P></DIV>
<P>Gets the directory components of a file name.</P>
<P>If the file name has no directory components "." is returned. The returned string should be freed when no longer needed.</P>
<DIV class=refsect3><A name=id-1.5.14.8.3.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>file_name</P></TD>
<TD class=parameter_description>
<P>the name of the file</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.14.8.3.8></A>
<H4>Returns</H4>
<P>the directory components of the file</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GFormatSizeFlags></A>
<H3>enum GFormatSizeFlags</H3>
<P>Flags to modify the format of the string returned by <A class=link title=g_format_size_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size-full"><CODE class=function>g_format_size_full()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.14.8.4.4></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-FORMAT-SIZE-DEFAULT:CAPS></A>G_FORMAT_SIZE_DEFAULT</P></TD>
<TD class=enum_member_description>
<P>behave the same as <A class=link title=g_format_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-format-size"><CODE class=function>g_format_size()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-FORMAT-SIZE-LONG-FORMAT:CAPS></A>G_FORMAT_SIZE_LONG_FORMAT</P></TD>
<TD class=enum_member_description>
<P>include the exact number of bytes as part of the returned string. For example, "45.6 kB (45,612 bytes)".</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-FORMAT-SIZE-IEC-UNITS:CAPS></A>G_FORMAT_SIZE_IEC_UNITS</P></TD>
<TD class=enum_member_description>
<P>use IEC (base 1024) units with "KiB"-style suffixes. IEC units should only be used for reporting things with a strong "power of 2" basis, like RAM sizes or RAID stripe sizes. Network and storage sizes should be reported in the normal SI units.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GDebugKey></A>
<H3>struct GDebugKey</H3><PRE class=programlisting>struct GDebugKey {
  const gchar *key;
  guint	       value;
};
</PRE>
<P>Associates a string with a bit flag. Used in <A class=link title=g_parse_debug_string&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Miscellaneous-Utility-Functions.html#g-parse-debug-string"><CODE class=function>g_parse_debug_string()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.5.14.8.5.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GDebugKey.key></A>key</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the string</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GDebugKey.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the flag</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>