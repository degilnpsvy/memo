<H1 class=postTitle><A id=cb_post_title_url class=postTitle2 href="http://www.cnblogs.com/vamei/archive/2012/10/12/2721484.html">Python&#26631;&#20934;&#24211;10 &#22810;&#36827;&#31243;&#21021;&#27493; (multiprocessing&#21253;)</A> </H1>
<DIV class=clear></DIV>
<DIV class=postBody>
<DIV id=cnblogs_post_body>
<DIV class=postBody>
<DIV id=cnblogs_post_body>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#20316;&#32773;&#65306;Vamei &#20986;&#22788;&#65306;http://www.cnblogs.com/vamei &#27426;&#36814;&#36716;&#36733;&#65292;&#20063;&#35831;&#20445;&#30041;&#36825;&#27573;&#22768;&#26126;&#12290;&#35874;&#35874;&#65281;</SPAN></P></DIV></DIV>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#25105;&#20204;&#24050;&#32463;&#35265;&#36807;&#20102;<A href="http://www.cnblogs.com/vamei/archive/2012/09/23/2698014.html">&#20351;&#29992;subprocess&#21253;&#26469;&#21019;&#24314;&#23376;&#36827;&#31243;</A>&#65292;&#20294;&#36825;&#20010;&#21253;&#26377;&#20004;&#20010;&#24456;&#22823;&#30340;&#23616;&#38480;&#24615;&#65306;1) &#25105;&#20204;&#24635;&#26159;&#35753;subprocess&#36816;&#34892;&#22806;&#37096;&#30340;&#31243;&#24207;&#65292;&#32780;&#19981;&#26159;&#36816;&#34892;&#19968;&#20010;Python&#33050;&#26412;&#20869;&#37096;&#32534;&#20889;&#30340;&#20989;&#25968;&#12290;2) &#36827;&#31243;&#38388;&#21482;&#36890;&#36807;&#31649;&#36947;&#36827;&#34892;&#25991;&#26412;&#20132;&#27969;&#12290;&#20197;&#19978;&#38480;&#21046;&#20102;&#25105;&#20204;&#23558;subprocess&#21253;&#24212;&#29992;&#21040;&#26356;&#24191;&#27867;&#30340;&#22810;&#36827;&#31243;&#20219;&#21153;&#12290;(&#36825;&#26679;&#30340;&#27604;&#36739;&#23454;&#38469;&#26159;&#19981;&#20844;&#24179;&#30340;&#65292;&#22240;&#20026;subprocessing&#26412;&#36523;&#23601;&#26159;&#35774;&#35745;&#25104;&#20026;&#19968;&#20010;shell&#65292;&#32780;&#19981;&#26159;&#19968;&#20010;&#22810;&#36827;&#31243;&#31649;&#29702;&#21253;)</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<H3><SPAN style="FONT-FAMILY: courier new, courier">threading&#21644;multiprocessing</SPAN></H3>
<P><SPAN style="FONT-FAMILY: courier new, courier">(&#35831;&#23613;&#37327;&#20808;&#38405;&#35835;<A id=PostsList1_rpPosts_TitleUrl_1 href="http://www.cnblogs.com/vamei/archive/2012/10/11/2720042.html">Python&#22810;&#32447;&#31243;&#19982;&#21516;&#27493;</A>)</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier"><SPAN style="COLOR: #ff0000">multiprocessing</SPAN>&#21253;&#26159;Python&#20013;&#30340;&#22810;&#36827;&#31243;&#31649;&#29702;&#21253;&#12290;&#19982;threading.Thread&#31867;&#20284;&#65292;&#23427;&#21487;&#20197;&#21033;&#29992;<SPAN style="COLOR: #ff0000">multiprocessing.Process</SPAN>&#23545;&#35937;&#26469;&#21019;&#24314;&#19968;&#20010;&#36827;&#31243;&#12290;&#35813;&#36827;&#31243;&#21487;&#20197;&#36816;&#34892;&#22312;Python&#31243;&#24207;&#20869;&#37096;&#32534;&#20889;&#30340;&#20989;&#25968;&#12290;&#35813;Process&#23545;&#35937;&#19982;Thread&#23545;&#35937;&#30340;&#29992;&#27861;&#30456;&#21516;&#65292;&#20063;&#26377;start(), run(), join()&#30340;&#26041;&#27861;&#12290;&#27492;&#22806;multiprocessing&#21253;&#20013;&#20063;&#26377;<SPAN style="COLOR: #ff0000">Lock</SPAN>/<SPAN style="COLOR: #ff0000">Event</SPAN>/<SPAN style="COLOR: #ff0000">Semaphore</SPAN>/<SPAN style="COLOR: #ff0000">Condition</SPAN>&#31867; (&#36825;&#20123;&#23545;&#35937;&#21487;&#20197;&#20687;&#22810;&#32447;&#31243;&#37027;&#26679;&#65292;&#36890;&#36807;&#21442;&#25968;&#20256;&#36882;&#32473;&#21508;&#20010;&#36827;&#31243;)&#65292;&#29992;&#20197;<SPAN style="COLOR: #ff0000">&#21516;&#27493;<SPAN style="COLOR: #000000">&#36827;&#31243;</SPAN></SPAN>&#65292;&#20854;&#29992;&#27861;&#19982;threading&#21253;&#20013;&#30340;&#21516;&#21517;&#31867;&#19968;&#33268;&#12290;&#25152;&#20197;&#65292;multiprocessing&#30340;&#24456;&#22823;&#19968;&#37096;&#20221;&#19982;threading&#20351;&#29992;&#21516;&#19968;&#22871;API&#65292;&#21482;&#19981;&#36807;&#25442;&#21040;&#20102;&#22810;&#36827;&#31243;&#30340;&#24773;&#22659;&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#20294;&#22312;&#20351;&#29992;&#36825;&#20123;&#20849;&#20139;API&#30340;&#26102;&#20505;&#65292;&#25105;&#20204;&#35201;&#27880;&#24847;&#20197;&#19979;&#20960;&#28857;:</SPAN></P>
<UL>
<LI><SPAN style="FONT-FAMILY: courier new, courier">&#22312;UNIX&#24179;&#21488;&#19978;&#65292;&#24403;&#26576;&#20010;&#36827;&#31243;&#32456;&#32467;&#20043;&#21518;&#65292;&#35813;&#36827;&#31243;&#38656;&#35201;&#34987;&#20854;&#29238;&#36827;&#31243;&#35843;&#29992;wait&#65292;&#21542;&#21017;&#36827;&#31243;&#25104;&#20026;<A href="http://www.cnblogs.com/vamei/archive/2012/09/20/2694466.html">&#20725;&#23608;&#36827;&#31243;</A>(Zombie)&#12290;&#25152;&#20197;&#65292;&#26377;&#24517;&#35201;&#23545;&#27599;&#20010;Process&#23545;&#35937;&#35843;&#29992;<SPAN style="COLOR: #ff0000">join()</SPAN>&#26041;&#27861; (&#23454;&#38469;&#19978;&#31561;&#21516;&#20110;wait)&#12290;&#23545;&#20110;&#22810;&#32447;&#31243;&#26469;&#35828;&#65292;&#30001;&#20110;&#21482;&#26377;&#19968;&#20010;&#36827;&#31243;&#65292;&#25152;&#20197;&#19981;&#23384;&#22312;&#27492;&#24517;&#35201;&#24615;&#12290;</SPAN></LI>
<LI><SPAN style="COLOR: #000000">multiprocessing&#25552;&#20379;&#20102;threading&#21253;&#20013;&#27809;&#26377;&#30340;IPC(&#27604;&#22914;Pipe&#21644;Queue)&#65292;&#25928;&#29575;&#19978;&#26356;&#39640;&#12290;&#24212;&#20248;&#20808;&#32771;&#34385;Pipe&#21644;Queue&#65292;<SPAN style="COLOR: #ff0000">&#36991;&#20813;&#20351;&#29992;</SPAN>Lock/Event/Semaphore/Condition&#31561;&#21516;&#27493;&#26041;&#24335; (&#22240;&#20026;&#23427;&#20204;&#21344;&#25454;&#30340;&#19981;&#26159;&#29992;&#25143;&#36827;&#31243;&#30340;&#36164;&#28304;)&#12290;</SPAN></LI>
<LI>&#22810;&#36827;&#31243;<SPAN style="COLOR: #000000">&#24212;&#35813;<SPAN style="COLOR: #ff0000">&#36991;&#20813;</SPAN><SPAN style="COLOR: #ff0000">&#20849;&#20139;&#36164;&#28304;</SPAN>&#12290;&#22312;&#22810;&#32447;&#31243;&#20013;&#65292;&#25105;&#20204;&#21487;&#20197;&#27604;&#36739;&#23481;&#26131;&#22320;&#20849;&#20139;&#36164;&#28304;&#65292;&#27604;&#22914;<A href="http://www.cnblogs.com/vamei/archive/2012/10/11/2720042.html">&#20351;&#29992;&#20840;&#23616;&#21464;&#37327;&#25110;&#32773;&#20256;&#36882;&#21442;&#25968;</A>&#12290;&#22312;&#22810;&#36827;&#31243;&#24773;&#20917;&#19979;&#65292;&#30001;&#20110;&#27599;&#20010;&#36827;&#31243;&#26377;&#33258;&#24049;&#29420;&#31435;&#30340;&#20869;&#23384;&#31354;&#38388;&#65292;&#20197;&#19978;&#26041;&#27861;&#24182;&#19981;&#21512;&#36866;&#12290;&#27492;&#26102;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;<A href="http://www.cnblogs.com/vamei/archive/2012/10/10/2715398.html">&#20849;&#20139;&#20869;&#23384;</A>&#21644;<SPAN style="COLOR: #ff0000">Manager</SPAN>&#30340;&#26041;&#27861;&#26469;&#20849;&#20139;&#36164;&#28304;&#12290;</SPAN>&#20294;&#36825;&#26679;&#20570;&#25552;&#39640;&#20102;&#31243;&#24207;&#30340;&#22797;&#26434;&#24230;&#65292;&#24182;&#22240;&#20026;&#21516;&#27493;&#30340;&#38656;&#35201;&#32780;&#38477;&#20302;&#20102;&#31243;&#24207;&#30340;&#25928;&#29575;&#12290;<SPAN style="COLOR: #000000"><BR></SPAN></LI></UL>
<P><SPAN style="FONT-FAMILY: courier new, courier"><SPAN style="COLOR: #ff0000">Process.PID</SPAN>&#20013;&#20445;&#23384;&#26377;PID&#65292;&#22914;&#26524;&#36827;&#31243;&#36824;&#27809;&#26377;start()&#65292;&#21017;PID&#20026;None&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#25105;&#20204;&#21487;&#20197;&#20174;&#19979;&#38754;&#30340;&#31243;&#24207;&#20013;&#30475;&#21040;Thread&#23545;&#35937;&#21644;Process&#23545;&#35937;&#22312;&#20351;&#29992;&#19978;&#30340;&#30456;&#20284;&#24615;&#19982;&#32467;&#26524;&#19978;&#30340;&#19981;&#21516;&#12290;&#21508;&#20010;&#32447;&#31243;&#21644;&#36827;&#31243;&#37117;&#20570;&#19968;&#20214;&#20107;&#65306;&#25171;&#21360;PID&#12290;&#20294;&#38382;&#39064;&#26159;&#65292;&#25152;&#26377;&#30340;&#20219;&#21153;&#22312;&#25171;&#21360;&#30340;&#26102;&#20505;&#37117;&#20250;&#21521;&#21516;&#19968;&#20010;&#26631;&#20934;&#36755;&#20986;(stdout)&#36755;&#20986;&#12290;&#36825;&#26679;&#36755;&#20986;&#30340;&#23383;&#31526;&#20250;&#28151;&#21512;&#22312;&#19968;&#36215;&#65292;&#26080;&#27861;&#38405;&#35835;&#12290;<SPAN style="FONT-FAMILY: courier new, courier">&#20351;&#29992;Lock&#21516;&#27493;&#65292;&#22312;&#19968;&#20010;&#20219;&#21153;&#36755;&#20986;&#23436;&#25104;&#20043;&#21518;&#65292;&#20877;&#20801;&#35768;&#21478;&#19968;&#20010;&#20219;&#21153;&#36755;&#20986;&#65292;&#21487;&#20197;&#36991;&#20813;&#22810;&#20010;&#20219;&#21153;&#21516;&#26102;&#21521;&#32456;&#31471;&#36755;&#20986;&#12290;</SPAN></SPAN></P>
<DIV class=cnblogs_code>
<DIV class=cnblogs_code_toolbar><SPAN class=cnblogs_code_copy><A title=&#22797;&#21046;&#20195;&#30721; void(0);"><IMG alt=&#22797;&#21046;&#20195;&#30721; src="http://common.cnblogs.com/images/copycode.gif"></A></SPAN></DIV><PRE><SPAN style="FONT-FAMILY: courier new, courier"><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Similarity and difference of multi thread vs. multi process</SPAN><SPAN style="COLOR: #008000">
#</SPAN><SPAN style="COLOR: #008000"> Written by Vamei</SPAN>

<SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> os
</SPAN><SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> threading
</SPAN><SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> multiprocessing

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> worker function</SPAN>
<SPAN style="COLOR: #0000ff">def</SPAN><SPAN style="COLOR: #000000"> worker(sign, lock):
    lock.acquire()
    </SPAN><SPAN style="COLOR: #0000ff">print</SPAN><SPAN style="COLOR: #000000">(sign, os.getpid())
    lock.release()

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Main</SPAN>
<SPAN style="COLOR: #0000ff">print</SPAN>(<SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">Main:</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">,os.getpid())

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Multi-thread</SPAN>
record =<SPAN style="COLOR: #000000"> []
lock  </SPAN>=<SPAN style="COLOR: #000000"> threading.Lock()
</SPAN><SPAN style="COLOR: #0000ff">for</SPAN> i <SPAN style="COLOR: #0000ff">in</SPAN> range(5<SPAN style="COLOR: #000000">):
    thread </SPAN>= threading.Thread(target=worker,args=(<SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">thread</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">,lock))
    thread.start()
    record.append(thread)

</SPAN><SPAN style="COLOR: #0000ff">for</SPAN> thread <SPAN style="COLOR: #0000ff">in</SPAN><SPAN style="COLOR: #000000"> record:
    thread.join()

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Multi-process</SPAN>
record =<SPAN style="COLOR: #000000"> []
lock </SPAN>=<SPAN style="COLOR: #000000"> multiprocessing.Lock()
</SPAN><SPAN style="COLOR: #0000ff">for</SPAN> i <SPAN style="COLOR: #0000ff">in</SPAN> range(5<SPAN style="COLOR: #000000">):
    process </SPAN>= multiprocessing.Process(target=worker,args=(<SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">process</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">,lock))
    process.start()
    record.append(process)

</SPAN><SPAN style="COLOR: #0000ff">for</SPAN> process <SPAN style="COLOR: #0000ff">in</SPAN><SPAN style="COLOR: #000000"> record:
    process.join()</SPAN></SPAN></PRE>
<DIV class=cnblogs_code_toolbar><SPAN class=cnblogs_code_copy><A title=&#22797;&#21046;&#20195;&#30721; void(0);"><IMG alt=&#22797;&#21046;&#20195;&#30721; src="http://common.cnblogs.com/images/copycode.gif"></A></SPAN></DIV></DIV>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#25152;&#26377;Thread&#30340;PID&#37117;&#19982;&#20027;&#31243;&#24207;&#30456;&#21516;&#65292;&#32780;&#27599;&#20010;Process&#37117;&#26377;&#19968;&#20010;&#19981;&#21516;&#30340;PID&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">(&#32451;&#20064;: &#20351;&#29992;mutiprocessing&#21253;&#23558;<A id=PostsList1_rpPosts_TitleUrl_1 href="http://www.cnblogs.com/vamei/archive/2012/10/11/2720042.html">Python&#22810;&#32447;&#31243;&#19982;&#21516;&#27493;</A>&#20013;&#30340;&#22810;&#32447;&#31243;&#31243;&#24207;&#26356;&#25913;&#20026;&#22810;&#36827;&#31243;&#31243;&#24207;)</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<H3><SPAN style="FONT-FAMILY: courier new, courier">Pipe&#21644;Queue</SPAN></H3>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#27491;&#22914;&#25105;&#20204;&#22312;<A id=cb_post_title_url class=postTitle2 href="http://www.cnblogs.com/vamei/archive/2012/10/09/2715393.html">Linux&#22810;&#32447;&#31243;</A>&#20013;&#20171;&#32461;&#30340;&#31649;&#36947;PIPE&#21644;&#28040;&#24687;&#38431;&#21015;message queue&#65292;multiprocessing&#21253;&#20013;&#26377;<SPAN style="COLOR: #ff0000">Pipe<SPAN style="COLOR: #000000">&#31867;</SPAN></SPAN>&#21644;<SPAN style="COLOR: #ff0000">Queue</SPAN>&#31867;&#26469;&#20998;&#21035;&#25903;&#25345;&#36825;&#20004;&#31181;IPC&#26426;&#21046;&#12290;Pipe&#21644;Queue&#21487;&#20197;&#29992;&#26469;&#20256;&#36865;&#24120;&#35265;&#30340;&#23545;&#35937;&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">1) Pipe&#21487;&#20197;&#26159;<SPAN style="COLOR: #ff0000">&#21333;&#21521;</SPAN>(half-duplex)&#65292;&#20063;&#21487;&#20197;&#26159;<SPAN style="COLOR: #ff0000">&#21452;&#21521;</SPAN>(duplex)&#12290;&#25105;&#20204;&#36890;&#36807;<SPAN style="COLOR: #ff0000">mutiprocessing.Pipe(<EM>duplex=False</EM>)</SPAN>&#21019;&#24314;&#21333;&#21521;&#31649;&#36947; (&#40664;&#35748;&#20026;&#21452;&#21521;)&#12290;&#19968;&#20010;&#36827;&#31243;&#20174;PIPE&#19968;&#31471;&#36755;&#20837;&#23545;&#35937;&#65292;&#28982;&#21518;&#34987;PIPE&#21478;&#19968;&#31471;&#30340;&#36827;&#31243;&#25509;&#25910;&#65292;&#21333;&#21521;&#31649;&#36947;&#21482;&#20801;&#35768;&#31649;&#36947;&#19968;&#31471;&#30340;&#36827;&#31243;&#36755;&#20837;&#65292;&#32780;&#21452;&#21521;&#31649;&#36947;&#21017;&#20801;&#35768;&#20174;&#20004;&#31471;&#36755;&#20837;&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#19979;&#38754;&#30340;&#31243;&#24207;&#23637;&#31034;&#20102;Pipe&#30340;&#20351;&#29992;:</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<DIV class=cnblogs_code>
<DIV class=cnblogs_code_toolbar><SPAN class=cnblogs_code_copy><A title=&#22797;&#21046;&#20195;&#30721; void(0);"><IMG alt=&#22797;&#21046;&#20195;&#30721; src="http://common.cnblogs.com/images/copycode.gif"></A></SPAN></DIV><PRE><SPAN style="FONT-FAMILY: courier new, courier"><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Multiprocessing with Pipe</SPAN><SPAN style="COLOR: #008000">
#</SPAN><SPAN style="COLOR: #008000"> Written by Vamei</SPAN>

<SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> multiprocessing as mul

</SPAN><SPAN style="COLOR: #0000ff">def</SPAN><SPAN style="COLOR: #000000"> proc1(pipe):
    pipe.send(</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">hello</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">)
    </SPAN><SPAN style="COLOR: #0000ff">print</SPAN>(<SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">proc1 rec:</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">,pipe.recv())

</SPAN><SPAN style="COLOR: #0000ff">def</SPAN><SPAN style="COLOR: #000000"> proc2(pipe):
    </SPAN><SPAN style="COLOR: #0000ff">print</SPAN>(<SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">proc2 rec:</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">,pipe.recv())
    pipe.send(</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">hello, too</SPAN><SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #000000">)

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Build a pipe</SPAN>
pipe =<SPAN style="COLOR: #000000"> mul.Pipe()

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Pass an end of the pipe to process 1</SPAN>
p1   = mul.Process(target=proc1, args=<SPAN style="COLOR: #000000">(pipe[0],))
</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Pass the other end of the pipe to process 2</SPAN>
p2   = mul.Process(target=proc2, args=(pipe[1<SPAN style="COLOR: #000000">],))
p1.start()
p2.start()
p1.join()
p2.join()</SPAN></SPAN></PRE>
<DIV class=cnblogs_code_toolbar><SPAN class=cnblogs_code_copy><A title=&#22797;&#21046;&#20195;&#30721; void(0);"><IMG alt=&#22797;&#21046;&#20195;&#30721; src="http://common.cnblogs.com/images/copycode.gif"></A></SPAN></DIV></DIV>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#36825;&#37324;&#30340;Pipe&#26159;&#21452;&#21521;&#30340;&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">Pipe&#23545;&#35937;&#24314;&#31435;&#30340;&#26102;&#20505;&#65292;&#36820;&#22238;&#19968;&#20010;&#21547;&#26377;&#20004;&#20010;&#20803;&#32032;&#30340;&#34920;&#65292;&#27599;&#20010;&#20803;&#32032;&#20195;&#34920;Pipe&#30340;&#19968;&#31471;(Connection&#23545;&#35937;)&#12290;&#25105;&#20204;&#23545;Pipe&#30340;&#26576;&#19968;&#31471;&#35843;&#29992;<SPAN style="COLOR: #ff0000">send()</SPAN>&#26041;&#27861;&#26469;&#20256;&#36865;&#23545;&#35937;&#65292;&#22312;&#21478;&#19968;&#31471;&#20351;&#29992;<SPAN style="COLOR: #ff0000">recv()</SPAN>&#26469;&#25509;&#25910;&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">2) Queue&#19982;Pipe&#30456;&#31867;&#20284;&#65292;&#37117;&#26159;&#20808;&#36827;&#20808;&#20986;&#30340;&#32467;&#26500;&#12290;&#20294;Queue&#20801;&#35768;&#22810;&#20010;&#36827;&#31243;&#25918;&#20837;&#65292;&#22810;&#20010;&#36827;&#31243;&#20174;&#38431;&#21015;&#21462;&#20986;&#23545;&#35937;&#12290;Queue&#20351;&#29992;<SPAN style="COLOR: #ff0000">mutiprocessing.Queue(<EM>maxsize</EM>)</SPAN>&#21019;&#24314;&#65292;maxsize&#34920;&#31034;&#38431;&#21015;&#20013;&#21487;&#20197;&#23384;&#25918;&#23545;&#35937;&#30340;&#26368;&#22823;&#25968;&#37327;&#12290;</SPAN><BR></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&#19979;&#38754;&#30340;&#31243;&#24207;&#23637;&#31034;&#20102;Queue&#30340;&#20351;&#29992;:</SPAN></P>
<DIV class=cnblogs_code>
<DIV class=cnblogs_code_toolbar><SPAN class=cnblogs_code_copy><A title=&#22797;&#21046;&#20195;&#30721; void(0);"><IMG alt=&#22797;&#21046;&#20195;&#30721; src="http://common.cnblogs.com/images/copycode.gif"></A></SPAN></DIV><PRE><SPAN style="FONT-FAMILY: courier new, courier"><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> Written by Vamei</SPAN>
<SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> os
</SPAN><SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> multiprocessing
</SPAN><SPAN style="COLOR: #0000ff">import</SPAN><SPAN style="COLOR: #000000"> time
</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000">==================</SPAN><SPAN style="COLOR: #008000">
#</SPAN><SPAN style="COLOR: #008000"> input worker</SPAN>
<SPAN style="COLOR: #0000ff">def</SPAN><SPAN style="COLOR: #000000"> inputQ(queue):
    info </SPAN>= str(os.getpid()) + <SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">(put):</SPAN><SPAN style="COLOR: #800000">'</SPAN> +<SPAN style="COLOR: #000000"> str(time.time())
    queue.put(info)

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> output worker</SPAN>
<SPAN style="COLOR: #0000ff">def</SPAN><SPAN style="COLOR: #000000"> outputQ(queue,lock):
    info </SPAN>=<SPAN style="COLOR: #000000"> queue.get()
    lock.acquire()
    </SPAN><SPAN style="COLOR: #0000ff">print</SPAN> (str(os.getpid()) + <SPAN style="COLOR: #800000">'</SPAN><SPAN style="COLOR: #800000">(get):</SPAN><SPAN style="COLOR: #800000">'</SPAN> +<SPAN style="COLOR: #000000"> info)
    lock.release()
</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000">===================</SPAN><SPAN style="COLOR: #008000">
#</SPAN><SPAN style="COLOR: #008000"> Main</SPAN>
<SPAN style="COLOR: #000000">record1 </SPAN>= []   <SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> store input processes</SPAN>
record2 = []   <SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> store output processes</SPAN>
lock  = multiprocessing.Lock()    <SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> To prevent messy print</SPAN>
queue =<SPAN style="COLOR: #000000"> multiprocessing.Queue(3)

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> input processes</SPAN>
<SPAN style="COLOR: #0000ff">for</SPAN> i <SPAN style="COLOR: #0000ff">in</SPAN> range(10<SPAN style="COLOR: #000000">):
    process </SPAN>= multiprocessing.Process(target=inputQ,args=<SPAN style="COLOR: #000000">(queue,))
    process.start()
    record1.append(process)

</SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> output processes</SPAN>
<SPAN style="COLOR: #0000ff">for</SPAN> i <SPAN style="COLOR: #0000ff">in</SPAN> range(10<SPAN style="COLOR: #000000">):
    process </SPAN>= multiprocessing.Process(target=outputQ,args=<SPAN style="COLOR: #000000">(queue,lock))
    process.start()
    record2.append(process)

</SPAN><SPAN style="COLOR: #0000ff">for</SPAN> p <SPAN style="COLOR: #0000ff">in</SPAN><SPAN style="COLOR: #000000"> record1:
    p.join()

queue.close()  </SPAN><SPAN style="COLOR: #008000">#</SPAN><SPAN style="COLOR: #008000"> No more object will come, close the queue</SPAN>

<SPAN style="COLOR: #0000ff">for</SPAN> p <SPAN style="COLOR: #0000ff">in</SPAN><SPAN style="COLOR: #000000"> record2:
    p.join()</SPAN></SPAN></PRE>
<DIV class=cnblogs_code_toolbar><SPAN class=cnblogs_code_copy><A title=&#22797;&#21046;&#20195;&#30721; void(0);"><IMG alt=&#22797;&#21046;&#20195;&#30721; src="http://common.cnblogs.com/images/copycode.gif"></A></SPAN></DIV></DIV>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;&#19968;&#20123;&#36827;&#31243;&#20351;&#29992;<SPAN style="COLOR: #ff0000">put()</SPAN>&#22312;Queue&#20013;&#25918;&#20837;&#23383;&#31526;&#20018;&#65292;&#36825;&#20010;&#23383;&#31526;&#20018;&#20013;&#21253;&#21547;PID&#21644;&#26102;&#38388;&#12290;&#21478;&#19968;&#20123;&#36827;&#31243;&#20174;Queue&#20013;&#21462;&#20986;&#65292;&#24182;&#25171;&#21360;&#33258;&#24049;&#30340;PID&#20197;&#21450;<SPAN style="COLOR: #ff0000">get()</SPAN>&#30340;&#23383;&#31526;&#20018;&#12290;</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">&nbsp;</SPAN></P>
<H3><SPAN style="FONT-FAMILY: courier new, courier">&#24635;&#32467;</SPAN></H3>
<P><SPAN style="FONT-FAMILY: courier new, courier">Process, Lock, Event, Semaphore, Condition</SPAN></P>
<P><SPAN style="FONT-FAMILY: courier new, courier">Pipe, Queue</SPAN></P></DIV></DIV>