<H3 class=section>2.2 Command-Line Options</H3><A name=index-options_002c-command_002dline></A><A name=index-command-line_002c-options></A><A name=index-GNU-long-options-1></A><A name=index-options_002c-long-1></A>
<P>Options begin with a dash and consist of a single character. GNU-style long options consist of two dashes and a keyword. The keyword can be abbreviated, as long as the abbreviation allows the option to be uniquely identified. If the option takes an argument, then the keyword is either immediately followed by an equals sign (&#8216;<SAMP>=</SAMP>&#8217;) and the argument&#8217;s value, or the keyword and the argument&#8217;s value are separated by whitespace. If a particular option with a value is given more than once, it is the last value that counts. </P><A name=index-POSIX-awk_002c-GNU-long-options-and></A>
<P>Each long option for <CODE>gawk</CODE> has a corresponding POSIX-style short option. The long and short options are interchangeable in all contexts. The following list describes options mandated by the POSIX standard: </P>
<DL compact>
<DT><CODE>-F <VAR>fs</VAR></CODE></DT>
<DT><CODE>--field-separator <VAR>fs</VAR></CODE></DT>
<DD><A name=index-_002dF-option></A><A name=index-_002d_002dfield_002dseparator-option></A><A name=index-FS-variable_002c-_002d_002dfield_002dseparator-option-and></A>
<P>Set the <CODE>FS</CODE> variable to <VAR>fs</VAR> (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Field-Separators">Field Separators</A>). </P></DD>
<DT><CODE>-f <VAR>source-file</VAR></CODE></DT>
<DT><CODE>--file <VAR>source-file</VAR></CODE></DT>
<DD><A name=index-_002df-option-1></A><A name=index-_002d_002dfile-option></A><A name=index-awk-programs_002c-location-of></A>
<P>Read <CODE>awk</CODE> program source from <VAR>source-file</VAR> instead of in the first non-option argument. This option may be given multiple times; the <CODE>awk</CODE> program consists of the concatenation of the contents of each specified <VAR>source-file</VAR>. </P></DD>
<DT><CODE>-v <VAR>var</VAR>=<VAR>val</VAR></CODE></DT>
<DT><CODE>--assign <VAR>var</VAR>=<VAR>val</VAR></CODE></DT>
<DD><A name=index-_002dv-option></A><A name=index-_002d_002dassign-option></A><A name=index-variables_002c-setting></A>
<P>Set the variable <VAR>var</VAR> to the value <VAR>val</VAR> <EM>before</EM> execution of the program begins. Such variable values are available inside the <CODE>BEGIN</CODE> rule (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Other-Arguments">Other Arguments</A>). </P>
<P>The <SAMP>-v</SAMP> option can only set one variable, but it can be used more than once, setting another variable each time, like this: &#8216;<SAMP>awk <SPAN class=nolinebreak>-v</SPAN>&nbsp;foo=1<!-- /@w --> <SPAN class=nolinebreak>-v</SPAN>&nbsp;bar=2<!-- /@w --> &#8230;</SAMP>&#8217;. </P><A name=index-built_002din-variables_002c-_002dv-option_002c-setting-with></A><A name=index-variables_002c-built_002din_002c-_002dv-option_002c-setting-with></A>
<BLOCKQUOTE>
<P><B>CAUTION:</B> Using <SAMP>-v</SAMP> to set the values of the built-in variables may lead to surprising results. <CODE>awk</CODE> will reset the values of those variables as it needs to, possibly ignoring any predefined value you may have given. </P></BLOCKQUOTE></DD>
<DT><CODE>-W <VAR>gawk-opt</VAR></CODE></DT>
<DD><A name=index-_002dW-option></A>
<P>Provide an implementation-specific option. This is the POSIX convention for providing implementation-specific options. These options also have corresponding GNU-style long options. Note that the long options may be abbreviated, as long as the abbreviations remain unique. The full list of <CODE>gawk</CODE>-specific options is provided next. </P></DD>
<DT><CODE>--</CODE></DT>
<DD><A name=index-command-line_002c-options_002c-end-of></A><A name=index-options_002c-command_002dline_002c-end-of></A>
<P>Signal the end of the command-line options. The following arguments are not treated as options even if they begin with &#8216;<SAMP>-</SAMP>&#8217;. This interpretation of <SAMP>--</SAMP> follows the POSIX argument parsing conventions. </P><A name=index-_002d-_0028hyphen_0029_002c-filenames-beginning-with></A><A name=index-hyphen-_0028_002d_0029_002c-filenames-beginning-with></A>
<P>This is useful if you have file names that start with &#8216;<SAMP>-</SAMP>&#8217;, or in shell scripts, if you have file names that will be specified by the user that could start with &#8216;<SAMP>-</SAMP>&#8217;. It is also useful for passing options on to the <CODE>awk</CODE> program; see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Getopt-Function">Getopt Function</A>. </P></DD></DL>
<P>The following list describes <CODE>gawk</CODE>-specific options: </P>
<DL compact>
<DT><CODE>-b</CODE></DT>
<DT><CODE>--characters-as-bytes</CODE></DT>
<DD><A name=index-_002db-option></A><A name=index-_002d_002dcharacters_002das_002dbytes-option></A>
<P>Cause <CODE>gawk</CODE> to treat all input data as single-byte characters. In addition, all output written with <CODE>print</CODE> or <CODE>printf</CODE> are treated as single-byte characters. </P>
<P>Normally, <CODE>gawk</CODE> follows the POSIX standard and attempts to process its input data according to the current locale. This can often involve converting multibyte characters into wide characters (internally), and can lead to problems or confusion if the input data does not contain valid multibyte characters. This option is an easy way to tell <CODE>gawk</CODE>: &#8220;hands off my data!&#8221;. </P></DD>
<DT><CODE>-c</CODE></DT>
<DT><CODE>--traditional</CODE></DT>
<DD><A name=index-_002dc-option></A><A name=index-_002d_002dtraditional-option></A><A name=index-compatibility-mode-_0028gawk_0029_002c-specifying></A>
<P>Specify <EM>compatibility mode</EM>, in which the GNU extensions to the <CODE>awk</CODE> language are disabled, so that <CODE>gawk</CODE> behaves just like Brian Kernighan&#8217;s version <CODE>awk</CODE>. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#POSIX_002fGNU">POSIX/GNU</A>, which summarizes the extensions. Also see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Compatibility-Mode">Compatibility Mode</A>. </P></DD>
<DT><CODE>-C</CODE></DT>
<DT><CODE>--copyright</CODE></DT>
<DD><A name=index-_002dC-option></A><A name=index-_002d_002dcopyright-option></A><A name=index-GPL-_0028General-Public-License_0029_002c-printing></A>
<P>Print the short version of the General Public License and then exit. </P></DD>
<DT><CODE>-d<SPAN class=roman><FONT face=Batang>[</FONT></SPAN><VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DT><CODE>--dump-variables<SPAN class=roman><FONT face=Batang>[</FONT></SPAN>=<VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DD><A name=index-_002dd-option></A><A name=index-_002d_002ddump_002dvariables-option></A><A name=index-dump-all-variables-of-a-program></A><A name=index-awkvars_002eout-file></A><A name=index-files_002c-awkvars_002eout></A><A name=index-variables_002c-global_002c-printing-list-of></A>
<P>Print a sorted list of global variables, their types, and final values to <VAR>file</VAR>. If no <VAR>file</VAR> is provided, print this list to the file named <SAMP>awkvars.out</SAMP> in the current directory. No space is allowed between the <SAMP>-d</SAMP> and <VAR>file</VAR>, if <VAR>file</VAR> is supplied. </P><A name=index-troubleshooting_002c-typographical-errors_002c-global-variables></A>
<P>Having a list of all global variables is a good way to look for typographical errors in your programs. You would also use this option if you have a large program with a lot of functions, and you want to be sure that your functions don&#8217;t inadvertently use global variables that you meant to be local. (This is a particularly easy mistake to make with simple variable names like <CODE>i</CODE>, <CODE>j</CODE>, etc.) </P></DD>
<DT><CODE>-D<SPAN class=roman><FONT face=Batang>[</FONT></SPAN><VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DT><CODE>--debug=<SPAN class=roman><FONT face=Batang>[</FONT></SPAN><VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DD><A name=index-_002dD-option></A><A name=index-_002d_002ddebug-option></A><A name=index-awk-debugging_002c-enabling></A>
<P>Enable debugging of <CODE>awk</CODE> programs (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Debugging">Debugging</A>). By default, the debugger reads commands interactively from the terminal. The optional <VAR>file</VAR> argument allows you to specify a file with a list of commands for the debugger to execute non-interactively. No space is allowed between the <SAMP>-D</SAMP> and <VAR>file</VAR>, if <VAR>file</VAR> is supplied. </P></DD>
<DT><CODE>-e <VAR>program-text</VAR></CODE></DT>
<DT><CODE>--source <VAR>program-text</VAR></CODE></DT>
<DD><A name=index-_002de-option></A><A name=index-_002d_002dsource-option></A><A name=index-source-code_002c-mixing></A>
<P>Provide program source code in the <VAR>program-text</VAR>. This option allows you to mix source code in files with source code that you enter on the command line. This is particularly useful when you have library functions that you want to use from your command-line programs (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#AWKPATH-Variable">AWKPATH Variable</A>). </P></DD>
<DT><CODE>-E <VAR>file</VAR></CODE></DT>
<DT><CODE>--exec <VAR>file</VAR></CODE></DT>
<DD><A name=index-_002dE-option></A><A name=index-_002d_002dexec-option></A><A name=index-awk-programs_002c-location-of-1></A><A name=index-CGI_002c-awk-scripts-for></A>
<P>Similar to <SAMP>-f</SAMP>, read <CODE>awk</CODE> program text from <VAR>file</VAR>. There are two differences from <SAMP>-f</SAMP>: </P>
<UL>
<LI>This option terminates option processing; anything else on the command line is passed on directly to the <CODE>awk</CODE> program. </LI>
<LI>Command-line variable assignments of the form &#8216;<SAMP><VAR>var</VAR>=<VAR>value</VAR></SAMP>&#8217; are disallowed. </LI></UL>
<P>This option is particularly necessary for World Wide Web CGI applications that pass arguments through the URL; using this option prevents a malicious (or other) user from passing in options, assignments, or <CODE>awk</CODE> source code (via <SAMP>--source</SAMP>) to the CGI application. This option should be used with &#8216;<SAMP>#!</SAMP>&#8217; scripts (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Executable-Scripts">Executable Scripts</A>), like so: </P>
<DIV class=example><PRE class=example>#! /usr/local/bin/gawk -E

<VAR>awk program here &#8230;</VAR>
</PRE></DIV></DD>
<DT><CODE>-g</CODE></DT>
<DT><CODE>--gen-pot</CODE></DT>
<DD><A name=index-_002dg-option></A><A name=index-_002d_002dgen_002dpot-option></A><A name=index-portable-object-files_002c-generating></A><A name=index-files_002c-portable-object_002c-generating></A>
<P>Analyze the source program and generate a GNU <CODE>gettext</CODE> Portable Object Template file on standard output for all string constants that have been marked for translation. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Internationalization">Internationalization</A>, for information about this option. </P></DD>
<DT><CODE>-h</CODE></DT>
<DT><CODE>--help</CODE></DT>
<DD><A name=index-_002dh-option></A><A name=index-_002d_002dhelp-option></A><A name=index-GNU-long-options_002c-printing-list-of></A><A name=index-options_002c-printing-list-of></A><A name=index-printing_002c-list-of-options></A>
<P>Print a &#8220;usage&#8221; message summarizing the short and long style options that <CODE>gawk</CODE> accepts and then exit. </P></DD>
<DT><CODE>-i <VAR>source-file</VAR></CODE></DT>
<DT><CODE>--include <VAR>source-file</VAR></CODE></DT>
<DD><A name=index-_002di-option></A><A name=index-_002d_002dinclude-option></A><A name=index-awk-programs_002c-location-of-2></A>
<P>Read <CODE>awk</CODE> source library from <VAR>source-file</VAR>. This option is completely equivalent to using the &#8216;<SAMP>@include</SAMP>&#8217; directive inside your program. This option is very similar to the <SAMP>-f</SAMP> option, but there are two important differences. First, when <SAMP>-i</SAMP> is used, the program source will not be loaded if it has been previously loaded, whereas the <SAMP>-f</SAMP> will always load the file. Second, because this option is intended to be used with code libraries, <CODE>gawk</CODE> does not recognize such files as constituting main program input. Thus, after processing an <SAMP>-i</SAMP> argument, <CODE>gawk</CODE> still expects to find the main source code via the <SAMP>-f</SAMP> option or on the command-line. </P></DD>
<DT><CODE>-l <VAR>lib</VAR></CODE></DT>
<DT><CODE>--load <VAR>lib</VAR></CODE></DT>
<DD><A name=index-_002dl-option></A><A name=index-_002d_002dload-option></A><A name=index-loading_002c-library></A>
<P>Load a shared library <VAR>lib</VAR>. This searches for the library using the <CODE>AWKLIBPATH</CODE> environment variable. The correct library suffix for your platform will be supplied by default, so it need not be specified in the library name. The library initialization routine should be named <CODE>dl_load()</CODE>. An alternative is to use the &#8216;<SAMP>@load</SAMP>&#8217; keyword inside the program to load a shared library. </P></DD>
<DT><CODE>-L <SPAN class=roman><FONT face=Batang>[</FONT></SPAN>value<SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DT><CODE>--lint<SPAN class=roman><FONT face=Batang>[</FONT></SPAN>=value<SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DD><A name=index-_002dl-option-1></A><A name=index-_002d_002dlint-option-1></A><A name=index-lint-checking_002c-issuing-warnings></A><A name=index-warnings_002c-issuing></A>
<P>Warn about constructs that are dubious or nonportable to other <CODE>awk</CODE> implementations. Some warnings are issued when <CODE>gawk</CODE> first reads your program. Others are issued at runtime, as your program executes. With an optional argument of &#8216;<SAMP>fatal</SAMP>&#8217;, lint warnings become fatal errors. This may be drastic, but its use will certainly encourage the development of cleaner <CODE>awk</CODE> programs. With an optional argument of &#8216;<SAMP>invalid</SAMP>&#8217;, only warnings about things that are actually invalid are issued. (This is not fully implemented yet.) </P>
<P>Some warnings are only printed once, even if the dubious constructs they warn about occur multiple times in your <CODE>awk</CODE> program. Thus, when eliminating problems pointed out by <SAMP>--lint</SAMP>, you should take care to search for all occurrences of each inappropriate construct. As <CODE>awk</CODE> programs are usually short, doing so is not burdensome. </P></DD>
<DT><CODE>-M</CODE></DT>
<DT><CODE>--bignum</CODE></DT>
<DD><A name=index-_002dM-option></A><A name=index-_002d_002dbignum-option></A>
<P>Force arbitrary precision arithmetic on numbers. This option has no effect if <CODE>gawk</CODE> is not compiled to use the GNU MPFR and MP libraries (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Gawk-and-MPFR">Gawk and MPFR</A>). </P></DD>
<DT><CODE>-n</CODE></DT>
<DT><CODE>--non-decimal-data</CODE></DT>
<DD><A name=index-_002dn-option></A><A name=index-_002d_002dnon_002ddecimal_002ddata-option></A><A name=index-hexadecimal-values_002c-enabling-interpretation-of></A><A name=index-octal-values_002c-enabling-interpretation-of></A><A name=index-troubleshooting_002c-_002d_002dnon_002ddecimal_002ddata-option></A>
<P>Enable automatic interpretation of octal and hexadecimal values in input data (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Nondecimal-Data">Nondecimal Data</A>). </P>
<BLOCKQUOTE>
<P><B>CAUTION:</B> This option can severely break old programs. Use with care. </P></BLOCKQUOTE></DD>
<DT><CODE>-N</CODE></DT>
<DT><CODE>--use-lc-numeric</CODE></DT>
<DD><A name=index-_002dN-option></A><A name=index-_002d_002duse_002dlc_002dnumeric-option></A>
<P>Force the use of the locale&#8217;s decimal point character when parsing numeric input data (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Locales">Locales</A>). </P></DD>
<DT><CODE>-o<SPAN class=roman><FONT face=Batang>[</FONT></SPAN><VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DT><CODE>--pretty-print<SPAN class=roman><FONT face=Batang>[</FONT></SPAN>=<VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DD><A name=index-_002do-option></A><A name=index-_002d_002dpretty_002dprint-option></A>
<P>Enable pretty-printing of <CODE>awk</CODE> programs. By default, output program is created in a file named <SAMP>awkprof.out</SAMP>. The optional <VAR>file</VAR> argument allows you to specify a different file name for the output. No space is allowed between the <SAMP>-o</SAMP> and <VAR>file</VAR>, if <VAR>file</VAR> is supplied. </P></DD>
<DT><CODE>-O</CODE></DT>
<DT><CODE>--optimize</CODE></DT>
<DD><A name=index-_002d_002doptimize-option></A><A name=index-_002dO-option></A>
<P>Enable some optimizations on the internal representation of the program. At the moment this includes just simple constant folding. The <CODE>gawk</CODE> maintainer hopes to add more optimizations over time. </P></DD>
<DT><CODE>-p<SPAN class=roman><FONT face=Batang>[</FONT></SPAN><VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DT><CODE>--profile<SPAN class=roman><FONT face=Batang>[</FONT></SPAN>=<VAR>file</VAR><SPAN class=roman><FONT face=Batang>]</FONT></SPAN></CODE></DT>
<DD><A name=index-_002dp-option></A><A name=index-_002d_002dprofile-option></A><A name=index-awk-profiling_002c-enabling></A>
<P>Enable profiling of <CODE>awk</CODE> programs (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Profiling">Profiling</A>). By default, profiles are created in a file named <SAMP>awkprof.out</SAMP>. The optional <VAR>file</VAR> argument allows you to specify a different file name for the profile file. No space is allowed between the <SAMP>-p</SAMP> and <VAR>file</VAR>, if <VAR>file</VAR> is supplied. </P>
<P>The profile contains execution counts for each statement in the program in the left margin, and function call counts for each function. </P></DD>
<DT><CODE>-P</CODE></DT>
<DT><CODE>--posix</CODE></DT>
<DD><A name=index-_002dP-option></A><A name=index-_002d_002dposix-option></A><A name=index-POSIX-mode></A><A name=index-gawk_002c-extensions_002c-disabling></A>
<P>Operate in strict POSIX mode. This disables all <CODE>gawk</CODE> extensions (just like <SAMP>--traditional</SAMP>) and disables all extensions not allowed by POSIX. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Common-Extensions">Common Extensions</A>, for a summary of the extensions in <CODE>gawk</CODE> that are disabled by this option. Also, the following additional restrictions apply: </P>
<UL>
<LI><A name=index-newlines-1></A><A name=index-whitespace_002c-newlines-as></A>Newlines do not act as whitespace to separate fields when <CODE>FS</CODE> is equal to a single space (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Fields">Fields</A>). </LI>
<LI>Newlines are not allowed after &#8216;<SAMP>?</SAMP>&#8217; or &#8216;<SAMP>:</SAMP>&#8217; (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Conditional-Exp">Conditional Exp</A>). </LI>
<LI><A name=index-FS-variable_002c-as-TAB-character></A>Specifying &#8216;<SAMP>-Ft</SAMP>&#8217; on the command-line does not set the value of <CODE>FS</CODE> to be a single TAB character (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Field-Separators">Field Separators</A>). </LI>
<LI><A name=index-locale-decimal-point-character></A><A name=index-decimal-point-character_002c-locale-specific></A>The locale&#8217;s decimal point character is used for parsing input data (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Locales">Locales</A>). </LI></UL><A name=index-_002d_002dtraditional-option_002c-_002d_002dposix-option-and></A><A name=index-_002d_002dposix-option_002c-_002d_002dtraditional-option-and></A>
<P>If you supply both <SAMP>--traditional</SAMP> and <SAMP>--posix</SAMP> on the command line, <SAMP>--posix</SAMP> takes precedence. <CODE>gawk</CODE> also issues a warning if both options are supplied. </P></DD>
<DT><CODE>-r</CODE></DT>
<DT><CODE>--re-interval</CODE></DT>
<DD><A name=index-_002dr-option></A><A name=index-_002d_002dre_002dinterval-option></A><A name=index-regular-expressions_002c-interval-expressions-and></A>
<P>Allow interval expressions (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Regexp-Operators">Regexp Operators</A>) in regexps. This is now <CODE>gawk</CODE>&#8217;s default behavior. Nevertheless, this option remains both for backward compatibility, and for use in combination with the <SAMP>--traditional</SAMP> option. </P></DD>
<DT><CODE>-S</CODE></DT>
<DT><CODE>--sandbox</CODE></DT>
<DD><A name=index-_002dS-option></A><A name=index-_002d_002dsandbox-option></A><A name=index-sandbox-mode></A>
<P>Disable the <CODE>system()</CODE> function, input redirections with <CODE>getline</CODE>, output redirections with <CODE>print</CODE> and <CODE>printf</CODE>, and dynamic extensions. This is particularly useful when you want to run <CODE>awk</CODE> scripts from questionable sources and need to make sure the scripts can&#8217;t access your system (other than the specified input data file). </P></DD>
<DT><CODE>-t</CODE></DT>
<DT><CODE>--lint-old</CODE></DT>
<DD><A name=index-_002dL-option></A><A name=index-_002d_002dlint_002dold-option></A>
<P>Warn about constructs that are not available in the original version of <CODE>awk</CODE> from Version 7 Unix (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#V7_002fSVR3_002e1">V7/SVR3.1</A>). </P></DD>
<DT><CODE>-V</CODE></DT>
<DT><CODE>--version</CODE></DT>
<DD><A name=index-_002dV-option></A><A name=index-_002d_002dversion-option></A><A name=index-gawk_002c-versions-of_002c-information-about_002c-printing></A>
<P>Print version information for this particular copy of <CODE>gawk</CODE>. This allows you to determine if your copy of <CODE>gawk</CODE> is up to date with respect to whatever the Free Software Foundation is currently distributing. It is also useful for bug reports (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Bugs">Bugs</A>). </P></DD></DL>
<P>As long as program text has been supplied, any other options are flagged as invalid with a warning message but are otherwise ignored. </P><A name=index-_002dF-option_002c-_002dFt-sets-FS-to-TAB></A>
<P>In compatibility mode, as a special case, if the value of <VAR>fs</VAR> supplied to the <SAMP>-F</SAMP> option is &#8216;<SAMP>t</SAMP>&#8217;, then <CODE>FS</CODE> is set to the TAB character (<CODE>"\t"</CODE>). This is true only for <SAMP>--traditional</SAMP> and not for <SAMP>--posix</SAMP> (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Field-Separators">Field Separators</A>). </P><A name=index-_002df-option_002c-multiple-uses></A>
<P>The <SAMP>-f</SAMP> option may be used more than once on the command line. If it is, <CODE>awk</CODE> reads its program source from all of the named files, as if they had been concatenated together into one big file. This is useful for creating libraries of <CODE>awk</CODE> functions. These functions can be written once and then retrieved from a standard place, instead of having to be included into each individual program. (As mentioned in <A href="http://www.gnu.org/software/gawk/manual/gawk.html#Definition-Syntax">Definition Syntax</A>, function names must be unique.) </P>
<P>With standard <CODE>awk</CODE>, library functions can still be used, even if the program is entered at the terminal, by specifying &#8216;<SAMP>-f /dev/tty</SAMP>&#8217;. After typing your program, type <KBD><EM>Ctrl-d</EM></KBD> (the end-of-file character) to terminate it. (You may also use &#8216;<SAMP>-f -</SAMP>&#8217; to read program source from the standard input but then you will not be able to also use the standard input as a source of data.) </P>
<P>Because it is clumsy using the standard <CODE>awk</CODE> mechanisms to mix source file and command-line <CODE>awk</CODE> programs, <CODE>gawk</CODE> provides the <SAMP>--source</SAMP> option. This does not require you to pre-empt the standard input for your source code; it allows you to easily mix command-line and library source code (see <A href="http://www.gnu.org/software/gawk/manual/gawk.html#AWKPATH-Variable">AWKPATH Variable</A>). The <SAMP>--source</SAMP> option may also be used multiple times on the command line. </P><A name=index-_002d_002dsource-option-1></A>
<P>If no <SAMP>-f</SAMP> or <SAMP>--source</SAMP> option is specified, then <CODE>gawk</CODE> uses the first non-option command-line argument as the text of the program source code. </P><A name=index-POSIXLY_005fCORRECT-environment-variable></A><A name=index-lint-checking_002c-POSIXLY_005fCORRECT-environment-variable></A><A name=index-POSIX-mode-1></A>
<P>If the environment variable <CODE>POSIXLY_CORRECT</CODE> exists, then <CODE>gawk</CODE> behaves in strict POSIX mode, exactly as if you had supplied the <SAMP>--posix</SAMP> command-line option. Many GNU programs look for this environment variable to suppress extensions that conflict with POSIX, but <CODE>gawk</CODE> behaves differently: it suppresses all extensions, even those that do not conflict with POSIX, and behaves in strict POSIX mode. If <SAMP>--lint</SAMP> is supplied on the command line and <CODE>gawk</CODE> turns on POSIX mode because of <CODE>POSIXLY_CORRECT</CODE>, then it issues a warning message indicating that POSIX mode is in effect. You would typically set this variable in your shell&#8217;s startup file. For a Bourne-compatible shell (such as Bash), you would add these lines to the <SAMP>.profile</SAMP> file in your home directory: </P>
<DIV class=example><PRE class=example>POSIXLY_CORRECT=true
export POSIXLY_CORRECT
</PRE></DIV><A name=index-csh-utility_002c-POSIXLY_005fCORRECT-environment-variable></A>
<P>For a C shell-compatible shell,<A href="http://www.gnu.org/software/gawk/manual/gawk.html#FOOT13" name=DOCF13><SUP>13</SUP></A> you would add this line to the <SAMP>.login</SAMP> file in your home directory: </P>
<DIV class=example><PRE class=example>setenv POSIXLY_CORRECT true
</PRE></DIV><A name=index-portability_002c-POSIXLY_005fCORRECT-environment-variable></A>
<P>Having <CODE>POSIXLY_CORRECT</CODE> set is not recommended for daily use, but it is good for testing the portability of your programs to other environments.