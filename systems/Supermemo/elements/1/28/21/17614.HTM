<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Character-Set-Conversion.top_of_page></A>Character Set Conversion</SPAN></H2>
<P>Character Set Conversion &#8212; convert strings between different character sets</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Character-Set-Conversion.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert">g_convert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_convert_with_fallback&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-fallback">g_convert_with_fallback</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_convert_with_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-iconv">g_convert_with_iconv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GIConv href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GIConv"><SPAN class=returnvalue>GIConv</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_iconv_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv-open">g_iconv_open</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv">g_iconv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_iconv_close&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv-close">g_iconv_close</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_locale_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-to-utf8">g_locale_to_utf8</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_filename_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-to-utf8">g_filename_to_utf8</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_filename_from_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-from-utf8">g_filename_from_utf8</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_get_filename_charsets&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-get-filename-charsets">g_get_filename_charsets</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_filename_display_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-display-name">g_filename_display_name</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_filename_display_basename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-display-basename">g_filename_display_basename</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_locale_from_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-from-utf8">g_locale_from_utf8</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_get_charset&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-get-charset">g_get_charset</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_get_codeset&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-get-codeset">g_get_codeset</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Character-Set-Conversion.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GIConv href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GIConv">GIConv</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_CONVERT_ERROR href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR:CAPS">G_CONVERT_ERROR</A></TD></TR>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError">GConvertError</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Character-Set-Conversion.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Character-Set-Conversion.description></A>
<H2>Description</H2>
<P>The <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A> family of function wraps the functionality of <CODE class=function>iconv()</CODE>. In addition to pure character set conversions, GLib has functions to deal with the extra complications of encodings for file names.</P>
<DIV class=refsect3><A name=id-1.5.3.6.3></A>
<H4>File Name Encodings</H4>
<P>Historically, UNIX has not had a defined encoding for file names: a file name is valid as long as it does not have path separators in it ("/"). However, displaying file names may require conversion: from the character set in which they were created, to the character set in which the application operates. Consider the Spanish file name "Presentaci&#243;n.sxi". If the application which created it uses ISO-8859-1 for its encoding,</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting>Character<SPAN class="gtkdoc opt">:</SPAN>  P  r  e  s  e  n  t  a  c  i  <SPAN class="gtkdoc opt">&amp;</SPAN>oacute<SPAN class="gtkdoc opt">;</SPAN>  n  <SPAN class="gtkdoc opt">.</SPAN>  s  x  i
Hex code<SPAN class="gtkdoc opt">:</SPAN>   <SPAN class=number>50 72 65 73 65 6</SPAN>e <SPAN class=number>74 61 63 69</SPAN> f3 <SPAN class=number>6</SPAN>e <SPAN class=number>2</SPAN>e <SPAN class=number>73 78 69</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>However, if the application use UTF-8, the actual file name on disk would look like this:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting>Character<SPAN class="gtkdoc opt">:</SPAN>  P  r  e  s  e  n  t  a  c  i  <SPAN class="gtkdoc opt">&amp;</SPAN>oacute<SPAN class="gtkdoc opt">;</SPAN>     n  <SPAN class="gtkdoc opt">.</SPAN>  s  x  i
Hex code<SPAN class="gtkdoc opt">:</SPAN>   <SPAN class=number>50 72 65 73 65 6</SPAN>e <SPAN class=number>74 61 63 69</SPAN> c3 b3 <SPAN class=number>6</SPAN>e <SPAN class=number>2</SPAN>e <SPAN class=number>73 78 69</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Glib uses UTF-8 for its strings, and GUI toolkits like GTK+ that use Glib do the same thing. If you get a file name from the file system, for example, from <CODE class=function>readdir()</CODE> or from <A class=link title=g_dir_read_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-File-Utilities.html#g-dir-read-name"><CODE class=function>g_dir_read_name()</CODE></A>, and you wish to display the file name to the user, you will need to convert it into UTF-8. The opposite case is when the user types the name of a file he wishes to save: the toolkit will give you that string in UTF-8 encoding, and you will need to convert it to the character set used for file names before you can create the file with <CODE class=function>open()</CODE> or <CODE class=function>fopen()</CODE>.</P>
<P>By default, Glib assumes that file names on disk are in UTF-8 encoding. This is a valid assumption for file systems which were created relatively recently: most applications use UTF-8 encoding for their strings, and that is also what they use for the file names they create. However, older file systems may still contain file names created in "older" encodings, such as ISO-8859-1. In this case, for compatibility reasons, you may want to instruct Glib to use that particular encoding for file names rather than UTF-8. You can do this by specifying the encoding for file names in the <A class=link title=G_FILENAME_ENCODING href="https://developer.gnome.org/glib/stable/glib-running.html#G_FILENAME_ENCODING"><CODE class=literal>G_FILENAME_ENCODING</CODE></A> environment variable. For example, if your installation uses ISO-8859-1 for file names, you can put this in your <CODE class=literal>~/.profile</CODE></P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1</PRE></TD>
<TD class=listing_code><PRE class=programlisting>export G_FILENAME_ENCODING<SPAN class="gtkdoc opt">=</SPAN>ISO<SPAN class="gtkdoc opt">-</SPAN><SPAN class=number>8859</SPAN><SPAN class="gtkdoc opt">-</SPAN><SPAN class=number>1</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Glib provides the functions <A class=link title=g_filename_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-to-utf8"><CODE class=function>g_filename_to_utf8()</CODE></A> and <A class=link title=g_filename_from_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-from-utf8"><CODE class=function>g_filename_from_utf8()</CODE></A> to perform the necessary conversions. These functions convert file names from the encoding specified in <CODE class=literal>G_FILENAME_ENCODING</CODE> to UTF-8 and vice-versa. This diagram illustrates how these functions are used to convert between UTF-8 and the encoding for file names in the file system.</P></DIV>
<DIV class=refsect3><A name=id-1.5.3.6.4></A>
<H4>Conversion between file name encodings # {<SPAN class=type>file-name-encodings-diagram</SPAN>)</H4>
<P><SPAN class=inlinemediaobject><IMG src="https://developer.gnome.org/glib/stable/file-name-encodings.png"></IMG></SPAN></P></DIV>
<DIV class=refsect3><A name=id-1.5.3.6.5></A>
<H4>Checklist for Application Writers</H4>
<P>This section is a practical summary of the detailed</P>
<P>things to do to make sure your applications process file name encodings correctly.</P>
<DIV class=orderedlist>
<OL class=orderedlist type=1>
<LI class=listitem>
<P>If you get a file name from the file system from a function such as <CODE class=function>readdir()</CODE> or <CODE class=function>gtk_file_chooser_get_filename()</CODE>, you do not need to do any conversion to pass that file name to functions like <CODE class=function>open()</CODE>, <CODE class=function>rename()</CODE>, or <CODE class=function>fopen()</CODE> -- those are "raw" file names which the file system understands.</P></LI>
<LI class=listitem>
<P>If you need to display a file name, convert it to UTF-8 first by using <A class=link title=g_filename_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-to-utf8"><CODE class=function>g_filename_to_utf8()</CODE></A>. If conversion fails, display a string like "Unknown file name". Do not convert this string back into the encoding used for file names if you wish to pass it to the file system; use the original file name instead.</P>
<P>For example, the document window of a word processor could display "Unknown file name" in its title bar but still let the user save the file, as it would keep the raw file name internally. This can happen if the user has not set the <CODE class=literal>G_FILENAME_ENCODING</CODE> environment variable even though he has files whose names are not encoded in UTF-8.</P></LI>
<LI class=listitem>
<P>If your user interface lets the user type a file name for saving or renaming, convert it to the encoding used for file names in the file system by using <A class=link title=g_filename_from_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-from-utf8"><CODE class=function>g_filename_from_utf8()</CODE></A>. Pass the converted file name to functions like <CODE class=function>fopen()</CODE>. If conversion fails, ask the user to enter a different file name. This can happen if the user types Japanese characters when <CODE class=literal>G_FILENAME_ENCODING</CODE> is set to <CODE class=literal>ISO-8859-1</CODE>, for example.</P></LI></OL></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Character-Set-Conversion.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-convert></A>
<H3>g_convert&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_convert (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *str</CODE></EM>,
           <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
           <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *to_codeset</CODE></EM>,
           <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *from_codeset</CODE></EM>,
           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
           <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
           <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string from one character set to another.</P>
<P>Note that you should use <A class=link title=g_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv"><CODE class=function>g_iconv()</CODE></A> for streaming conversions. Despite the fact that <EM class=parameter><CODE>byes_read</CODE></EM> can return information about partial characters, the g_convert_... functions are not generally suitable for streaming. If the underlying converter maintains internal state, then this won't be preserved across successive calls to <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A>, <A class=link title=g_convert_with_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-iconv"><CODE class=function>g_convert_with_iconv()</CODE></A> or <A class=link title=g_convert_with_fallback&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-fallback"><CODE class=function>g_convert_with_fallback()</CODE></A>. (An example of this is the GNU C converter for CP1255 which does not emit a base character until it knows that the next character is not a mark that could combine with the base character.)</P>
<P>Using extensions such as "//TRANSLIT" may not work (or may not work well) on many platforms. Consider using <A class=link title=g_str_to_ascii&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-str-to-ascii"><CODE class=function>g_str_to_ascii()</CODE></A> instead.</P>
<DIV class=refsect3><A name=id-1.5.3.7.2.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>str</P></TD>
<TD class=parameter_description>
<P>the string to convert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string in bytes, or -1 if the string is nul-terminated (Note that some encodings may allow nul bytes to occur inside strings. In that case, using -1 for the <EM class=parameter><CODE>len</CODE></EM> parameter is unsafe)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>to_codeset</P></TD>
<TD class=parameter_description>
<P>name of character set into which to convert <EM class=parameter><CODE>str</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>from_codeset</P></TD>
<TD class=parameter_description>
<P>character set of <EM class=parameter><CODE>str</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input. If the error <A class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS"><SPAN class=type>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</SPAN></A> occurs, the value stored will the byte offset after the last valid input sequence. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.2.8></A>
<H4>Returns</H4>
<P>If the conversion was successful, a newly allocated nul-terminated string, which must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>. Otherwise <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> and <EM class=parameter><CODE>error</CODE></EM> will be set.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-convert-with-fallback></A>
<H3>g_convert_with_fallback&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_convert_with_fallback (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *str</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
                         <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *to_codeset</CODE></EM>,
                         <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *from_codeset</CODE></EM>,
                         <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *fallback</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
                         <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string from one character set to another, possibly including fallback sequences for characters not representable in the output. Note that it is not guaranteed that the specification for the fallback sequences in <EM class=parameter><CODE>fallback</CODE></EM> will be honored. Some systems may do an approximate conversion from <EM class=parameter><CODE>from_codeset</CODE></EM> to <EM class=parameter><CODE>to_codeset</CODE></EM> in their <CODE class=function>iconv()</CODE> functions, in which case GLib will simply return that approximate conversion.</P>
<P>Note that you should use <A class=link title=g_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv"><CODE class=function>g_iconv()</CODE></A> for streaming conversions. Despite the fact that <EM class=parameter><CODE>byes_read</CODE></EM> can return information about partial characters, the g_convert_... functions are not generally suitable for streaming. If the underlying converter maintains internal state, then this won't be preserved across successive calls to <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A>, <A class=link title=g_convert_with_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-iconv"><CODE class=function>g_convert_with_iconv()</CODE></A> or <A class=link title=g_convert_with_fallback&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-fallback"><CODE class=function>g_convert_with_fallback()</CODE></A>. (An example of this is the GNU C converter for CP1255 which does not emit a base character until it knows that the next character is not a mark that could combine with the base character.)</P>
<DIV class=refsect3><A name=id-1.5.3.7.3.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>str</P></TD>
<TD class=parameter_description>
<P>the string to convert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string in bytes, or -1 if the string is nul-terminated (Note that some encodings may allow nul bytes to occur inside strings. In that case, using -1 for the <EM class=parameter><CODE>len</CODE></EM> parameter is unsafe)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>to_codeset</P></TD>
<TD class=parameter_description>
<P>name of character set into which to convert <EM class=parameter><CODE>str</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>from_codeset</P></TD>
<TD class=parameter_description>
<P>character set of <EM class=parameter><CODE>str</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fallback</P></TD>
<TD class=parameter_description>
<P>UTF-8 string to use in place of character not present in the target encoding. (The string must be representable in the target encoding). If <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, characters not in the target encoding will be represented as Unicode escapes \uxxxx or \Uxxxxyyyy.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.3.7></A>
<H4>Returns</H4>
<P>If the conversion was successful, a newly allocated nul-terminated string, which must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>. Otherwise <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> and <EM class=parameter><CODE>error</CODE></EM> will be set.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-convert-with-iconv></A>
<H3>g_convert_with_iconv&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_convert_with_iconv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *str</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=GIConv href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GIConv"><SPAN class=type>GIConv</SPAN></A> converter</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string from one character set to another. </P>
<P>Note that you should use <A class=link title=g_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv"><CODE class=function>g_iconv()</CODE></A> for streaming conversions. Despite the fact that <EM class=parameter><CODE>byes_read</CODE></EM> can return information about partial characters, the g_convert_... functions are not generally suitable for streaming. If the underlying converter maintains internal state, then this won't be preserved across successive calls to <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A>, <A class=link title=g_convert_with_iconv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-iconv"><CODE class=function>g_convert_with_iconv()</CODE></A> or <A class=link title=g_convert_with_fallback&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert-with-fallback"><CODE class=function>g_convert_with_fallback()</CODE></A>. (An example of this is the GNU C converter for CP1255 which does not emit a base character until it knows that the next character is not a mark that could combine with the base character.)</P>
<DIV class=refsect3><A name=id-1.5.3.7.4.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>str</P></TD>
<TD class=parameter_description>
<P>the string to convert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string in bytes, or -1 if the string is nul-terminated (Note that some encodings may allow nul bytes to occur inside strings. In that case, using -1 for the <EM class=parameter><CODE>len</CODE></EM> parameter is unsafe)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>converter</P></TD>
<TD class=parameter_description>
<P>conversion descriptor from <A class=link title=g_iconv_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv-open"><CODE class=function>g_iconv_open()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input. If the error <A class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS"><SPAN class=type>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</SPAN></A> occurs, the value stored will the byte offset after the last valid input sequence.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.4.7></A>
<H4>Returns</H4>
<P>If the conversion was successful, a newly allocated nul-terminated string, which must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>. Otherwise <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> and <EM class=parameter><CODE>error</CODE></EM> will be set.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-iconv-open></A>
<H3>g_iconv_open&nbsp;()</H3><PRE class=programlisting><A class=link title=GIConv href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GIConv"><SPAN class=returnvalue>GIConv</SPAN></A>
g_iconv_open (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *to_codeset</CODE></EM>,
              <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *from_codeset</CODE></EM>);</PRE>
<P>Same as the standard UNIX routine <CODE class=function>iconv_open()</CODE>, but may be implemented via libiconv on UNIX flavors that lack a native implementation.</P>
<P>GLib provides <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A> and <A class=link title=g_locale_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-to-utf8"><CODE class=function>g_locale_to_utf8()</CODE></A> which are likely more convenient than the raw iconv wrappers.</P>
<DIV class=refsect3><A name=id-1.5.3.7.5.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>to_codeset</P></TD>
<TD class=parameter_description>
<P>destination codeset</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>from_codeset</P></TD>
<TD class=parameter_description>
<P>source codeset</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.5.7></A>
<H4>Returns</H4>
<P>a "conversion descriptor", or (GIConv)-1 if opening the converter failed.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-iconv></A>
<H3>g_iconv&nbsp;()</H3><PRE class=programlisting><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=returnvalue>gsize</SPAN></A>
g_iconv (<EM class=parameter><CODE><A class=link title=GIConv href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GIConv"><SPAN class=type>GIConv</SPAN></A> converter</CODE></EM>,
         <EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **inbuf</CODE></EM>,
         <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *inbytes_left</CODE></EM>,
         <EM class=parameter><CODE><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> **outbuf</CODE></EM>,
         <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *outbytes_left</CODE></EM>);</PRE>
<P>Same as the standard UNIX routine <CODE class=function>iconv()</CODE>, but may be implemented via libiconv on UNIX flavors that lack a native implementation.</P>
<P>GLib provides <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A> and <A class=link title=g_locale_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-to-utf8"><CODE class=function>g_locale_to_utf8()</CODE></A> which are likely more convenient than the raw iconv wrappers.</P>
<DIV class=refsect3><A name=id-1.5.3.7.6.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>converter</P></TD>
<TD class=parameter_description>
<P>conversion descriptor from <A class=link title=g_iconv_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv-open"><CODE class=function>g_iconv_open()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>inbuf</P></TD>
<TD class=parameter_description>
<P>bytes to convert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>inbytes_left</P></TD>
<TD class=parameter_description>
<P>inout parameter, bytes remaining to convert in <EM class=parameter><CODE>inbuf</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>outbuf</P></TD>
<TD class=parameter_description>
<P>converted output bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>outbytes_left</P></TD>
<TD class=parameter_description>
<P>inout parameter, bytes available to fill in <EM class=parameter><CODE>outbuf</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.6.7></A>
<H4>Returns</H4>
<P>count of non-reversible conversions, or -1 on error</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-iconv-close></A>
<H3>g_iconv_close&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_iconv_close (<EM class=parameter><CODE><A class=link title=GIConv href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GIConv"><SPAN class=type>GIConv</SPAN></A> converter</CODE></EM>);</PRE>
<P>Same as the standard UNIX routine <CODE class=function>iconv_close()</CODE>, but may be implemented via libiconv on UNIX flavors that lack a native implementation. Should be called to clean up the conversion descriptor from <A class=link title=g_iconv_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv-open"><CODE class=function>g_iconv_open()</CODE></A> when you are done converting things.</P>
<P>GLib provides <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A> and <A class=link title=g_locale_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-to-utf8"><CODE class=function>g_locale_to_utf8()</CODE></A> which are likely more convenient than the raw iconv wrappers.</P>
<DIV class=refsect3><A name=id-1.5.3.7.7.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>converter</P></TD>
<TD class=parameter_description>
<P>a conversion descriptor from <A class=link title=g_iconv_open&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-iconv-open"><CODE class=function>g_iconv_open()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.7.7></A>
<H4>Returns</H4>
<P>-1 on error, 0 on success</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-locale-to-utf8></A>
<H3>g_locale_to_utf8&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_locale_to_utf8 (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *opsysstring</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string which is in the encoding used for strings by the C runtime (usually the same as that used by the operating system) in the <A class=link title=Locale href="https://developer.gnome.org/glib/stable/glib-running.html#setlocale">current locale</A> into a UTF-8 string.</P>
<DIV class=refsect3><A name=id-1.5.3.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>opsysstring</P></TD>
<TD class=parameter_description>
<P>a string in the encoding of the current locale. On Windows this means the system codepage.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string, or -1 if the string is nul-terminated (Note that some encodings may allow nul bytes to occur inside strings. In that case, using -1 for the <EM class=parameter><CODE>len</CODE></EM> parameter is unsafe)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input. If the error <A class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS"><SPAN class=type>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</SPAN></A> occurs, the value stored will the byte offset after the last valid input sequence.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.8.6></A>
<H4>Returns</H4>
<P>A newly-allocated buffer containing the converted string, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> on an error, and error will be set.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-filename-to-utf8></A>
<H3>g_filename_to_utf8&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_filename_to_utf8 (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *opsysstring</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string which is in the encoding used by GLib for filenames into a UTF-8 string. Note that on Windows GLib uses UTF-8 for filenames; on other platforms, this function indirectly depends on the <A class=link title=Locale href="https://developer.gnome.org/glib/stable/glib-running.html#setlocale">current locale</A>.</P>
<DIV class=refsect3><A name=id-1.5.3.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>opsysstring</P></TD>
<TD class=parameter_description>
<P>a string in the encoding for filenames</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string, or -1 if the string is nul-terminated (Note that some encodings may allow nul bytes to occur inside strings. In that case, using -1 for the <EM class=parameter><CODE>len</CODE></EM> parameter is unsafe)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input. If the error <A class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS"><SPAN class=type>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</SPAN></A> occurs, the value stored will the byte offset after the last valid input sequence.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.9.6></A>
<H4>Returns</H4>
<P>The converted string, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> on an error.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-filename-from-utf8></A>
<H3>g_filename_from_utf8&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_filename_from_utf8 (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *utf8string</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string from UTF-8 to the encoding GLib uses for filenames. Note that on Windows GLib uses UTF-8 for filenames; on other platforms, this function indirectly depends on the <A class=link title=Locale href="https://developer.gnome.org/glib/stable/glib-running.html#setlocale">current locale</A>.</P>
<DIV class=refsect3><A name=id-1.5.3.7.10.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>utf8string</P></TD>
<TD class=parameter_description>
<P>a UTF-8 encoded string.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string, or -1 if the string is nul-terminated.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input. If the error <A class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS"><SPAN class=type>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</SPAN></A> occurs, the value stored will the byte offset after the last valid input sequence. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>][<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul). </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.10.6></A>
<H4>Returns</H4>
<P>The converted string, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> on an error. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=bytes_written][<ACRONYM title="Generics and defining elements of containers and arrays."><SPAN class=acronym>element-type</SPAN></ACRONYM> guint8][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-filename-charsets></A>
<H3>g_get_filename_charsets&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_get_filename_charsets (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> ***charsets</CODE></EM>);</PRE>
<P>Determines the preferred character sets used for filenames. The first character set from the <EM class=parameter><CODE>charsets</CODE></EM> is the filename encoding, the subsequent character sets are used when trying to generate a displayable representation of a filename, see <A class=link title=g_filename_display_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-display-name"><CODE class=function>g_filename_display_name()</CODE></A>.</P>
<P>On Unix, the character sets are determined by consulting the environment variables <CODE class=literal>G_FILENAME_ENCODING</CODE> and <CODE class=literal>G_BROKEN_FILENAMES</CODE>. On Windows, the character set used in the GLib API is always UTF-8 and said environment variables have no effect.</P>
<P><CODE class=literal>G_FILENAME_ENCODING</CODE> may be set to a comma-separated list of character set names. The special token "@locale" is taken to mean the character set for the <A class=link title=Locale href="https://developer.gnome.org/glib/stable/glib-running.html#setlocale">current locale</A>. If <CODE class=literal>G_FILENAME_ENCODING</CODE> is not set, but <CODE class=literal>G_BROKEN_FILENAMES</CODE> is, the character set of the current locale is taken as the filename encoding. If neither environment variable is set, UTF-8 is taken as the filename encoding, but the character set of the current locale is also put in the list of encodings.</P>
<P>The returned <EM class=parameter><CODE>charsets</CODE></EM> belong to GLib and must not be freed.</P>
<P>Note that on Unix, regardless of the locale character set or <CODE class=literal>G_FILENAME_ENCODING</CODE> value, the actual file names present on a system might be in any random encoding or just gibberish.</P>
<DIV class=refsect3><A name=id-1.5.3.7.11.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>charsets</P></TD>
<TD class=parameter_description>
<P>return location for the <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated list of encoding names</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.11.10></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the filename encoding is UTF-8.</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-filename-display-name></A>
<H3>g_filename_display_name&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_filename_display_name (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *filename</CODE></EM>);</PRE>
<P>Converts a filename into a valid UTF-8 string. The conversion is not necessarily reversible, so you should keep the original around and use the return value of this function only for display purposes. Unlike <A class=link title=g_filename_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-to-utf8"><CODE class=function>g_filename_to_utf8()</CODE></A>, the result is guaranteed to be non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> even if the filename actually isn't in the GLib file name encoding.</P>
<P>If GLib cannot make sense of the encoding of <EM class=parameter><CODE>filename</CODE></EM> , as a last resort it replaces unknown characters with U+FFFD, the Unicode replacement character. You can search the result for the UTF-8 encoding of this character (which is "\357\277\275" in octal notation) to find out if <EM class=parameter><CODE>filename</CODE></EM> was in an invalid encoding.</P>
<P>If you know the whole pathname of the file you should use <A class=link title=g_filename_display_basename&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-display-basename"><CODE class=function>g_filename_display_basename()</CODE></A>, since that allows location-based translation of filenames.</P>
<DIV class=refsect3><A name=id-1.5.3.7.12.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>filename</P></TD>
<TD class=parameter_description>
<P>a pathname hopefully in the GLib file name encoding</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.12.8></A>
<H4>Returns</H4>
<P>a newly allocated string containing a rendition of the filename in valid UTF-8</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-filename-display-basename></A>
<H3>g_filename_display_basename&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_filename_display_basename (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *filename</CODE></EM>);</PRE>
<P>Returns the display basename for the particular filename, guaranteed to be valid UTF-8. The display name might not be identical to the filename, for instance there might be problems converting it to UTF-8, and some files can be translated in the display.</P>
<P>If GLib cannot make sense of the encoding of <EM class=parameter><CODE>filename</CODE></EM> , as a last resort it replaces unknown characters with U+FFFD, the Unicode replacement character. You can search the result for the UTF-8 encoding of this character (which is "\357\277\275" in octal notation) to find out if <EM class=parameter><CODE>filename</CODE></EM> was in an invalid encoding.</P>
<P>You must pass the whole absolute pathname to this functions so that translation of well known locations can be done.</P>
<P>This function is preferred over <A class=link title=g_filename_display_name&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-filename-display-name"><CODE class=function>g_filename_display_name()</CODE></A> if you know the whole path, as it allows translation.</P>
<DIV class=refsect3><A name=id-1.5.3.7.13.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>filename</P></TD>
<TD class=parameter_description>
<P>an absolute pathname in the GLib file name encoding</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.13.9></A>
<H4>Returns</H4>
<P>a newly allocated string containing a rendition of the basename of the filename in valid UTF-8</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-locale-from-utf8></A>
<H3>g_locale_from_utf8&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_locale_from_utf8 (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *utf8string</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gssize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gssize"><SPAN class=type>gssize</SPAN></A> len</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_read</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> *bytes_written</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> **error</CODE></EM>);</PRE>
<P>Converts a string from UTF-8 to the encoding used for strings by the C runtime (usually the same as that used by the operating system) in the <A class=link title=Locale href="https://developer.gnome.org/glib/stable/glib-running.html#setlocale">current locale</A>. On Windows this means the system codepage.</P>
<DIV class=refsect3><A name=id-1.5.3.7.14.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>utf8string</P></TD>
<TD class=parameter_description>
<P>a UTF-8 encoded string </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>len</P></TD>
<TD class=parameter_description>
<P>the length of the string, or -1 if the string is nul-terminated (Note that some encodings may allow nul bytes to occur inside strings. In that case, using -1 for the <EM class=parameter><CODE>len</CODE></EM> parameter is unsafe)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_read</P></TD>
<TD class=parameter_description>
<P>location to store the number of bytes in the input string that were successfully converted, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. Even if the conversion was successful, this may be less than <EM class=parameter><CODE>len</CODE></EM> if there were partial characters at the end of the input. If the error <A class=link href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS"><SPAN class=type>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</SPAN></A> occurs, the value stored will the byte offset after the last valid input sequence.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>bytes_written</P></TD>
<TD class=parameter_description>
<P>the number of bytes stored in the output buffer (not including the terminating nul).</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>error</P></TD>
<TD class=parameter_description>
<P>location to store the error occurring, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to ignore errors. Any of the errors in <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> may occur.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.14.6></A>
<H4>Returns</H4>
<P>A newly-allocated buffer containing the converted string, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> on an error, and error will be set.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-charset></A>
<H3>g_get_charset&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_get_charset (<EM class=parameter><CODE>const <SPAN class=type>char</SPAN> **charset</CODE></EM>);</PRE>
<P>Obtains the character set for the <A class=link title=Locale href="https://developer.gnome.org/glib/stable/glib-running.html#setlocale">current locale</A>; you might use this character set as an argument to <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A>, to convert from the current locale's encoding to some other encoding. (Frequently <A class=link title=g_locale_to_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-to-utf8"><CODE class=function>g_locale_to_utf8()</CODE></A> and <A class=link title=g_locale_from_utf8&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-locale-from-utf8"><CODE class=function>g_locale_from_utf8()</CODE></A> are nice shortcuts, though.)</P>
<P>On Windows the character set returned by this function is the so-called system default ANSI code-page. That is the character set used by the "narrow" versions of C library and Win32 functions that handle file names. It might be different from the character set used by the C library's current locale.</P>
<P>The return value is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the locale's encoding is UTF-8, in that case you can perhaps avoid calling <A class=link title=g_convert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#g-convert"><CODE class=function>g_convert()</CODE></A>.</P>
<P>The string returned in <EM class=parameter><CODE>charset</CODE></EM> is not allocated, and should not be freed.</P>
<DIV class=refsect3><A name=id-1.5.3.7.15.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>charset</P></TD>
<TD class=parameter_description>
<P>return location for character set name</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.5.3.7.15.9></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the returned charset is UTF-8</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-get-codeset></A>
<H3>g_get_codeset&nbsp;()</H3><PRE class=programlisting><A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=returnvalue>gchar</SPAN></A>&nbsp;*
g_get_codeset (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Gets the character set for the current locale.</P>
<DIV class=refsect3><A name=id-1.5.3.7.16.5></A>
<H4>Returns</H4>
<P>a newly allocated string containing the name of the character set. This string must be freed with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>.</P>
<P></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Character-Set-Conversion.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GIConv></A>
<H3>GIConv</H3><PRE class=programlisting>typedef struct _GIConv GIConv;</PRE>
<P>The GIConv struct wraps an <CODE class=function>iconv()</CODE> conversion descriptor. It contains private data and should only be accessed using the following functions.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-CONVERT-ERROR:CAPS></A>
<H3>G_CONVERT_ERROR</H3><PRE class=programlisting>#define G_CONVERT_ERROR g_convert_error_quark()
</PRE>
<P>Error domain for character set conversions. Errors in this domain will be from the <A class=link title="enum GConvertError" href="https://developer.gnome.org/glib/stable/glib-Character-Set-Conversion.html#GConvertError"><SPAN class=type>GConvertError</SPAN></A> enumeration. See <A class=link title="struct GError" href="https://developer.gnome.org/glib/stable/glib-Error-Reporting.html#GError"><SPAN class=type>GError</SPAN></A> for information on error domains.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GConvertError></A>
<H3>enum GConvertError</H3>
<P>Error codes returned by character set conversion routines.</P>
<DIV class=refsect3><A name=id-1.5.3.8.4.4></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-NO-CONVERSION:CAPS></A>G_CONVERT_ERROR_NO_CONVERSION</P></TD>
<TD class=enum_member_description>
<P>Conversion between the requested character sets is not supported.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-ILLEGAL-SEQUENCE:CAPS></A>G_CONVERT_ERROR_ILLEGAL_SEQUENCE</P></TD>
<TD class=enum_member_description>
<P>Invalid byte sequence in conversion input.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-FAILED:CAPS></A>G_CONVERT_ERROR_FAILED</P></TD>
<TD class=enum_member_description>
<P>Conversion failed for some reason.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-PARTIAL-INPUT:CAPS></A>G_CONVERT_ERROR_PARTIAL_INPUT</P></TD>
<TD class=enum_member_description>
<P>Partial character sequence at end of input.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-BAD-URI:CAPS></A>G_CONVERT_ERROR_BAD_URI</P></TD>
<TD class=enum_member_description>
<P>URI is invalid.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-NOT-ABSOLUTE-PATH:CAPS></A>G_CONVERT_ERROR_NOT_ABSOLUTE_PATH</P></TD>
<TD class=enum_member_description>
<P>Pathname is not an absolute path.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-CONVERT-ERROR-NO-MEMORY:CAPS></A>G_CONVERT_ERROR_NO_MEMORY</P></TD>
<TD class=enum_member_description>
<P>No memory available. Since: 2.40</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>