<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Message-Logging.top_of_page></A>Message Logging</SPAN></H2>
<P>Message Logging &#8212; versatile support for logging messages with different levels of importance</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Message-Logging.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_LOG_DOMAIN href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-DOMAIN:CAPS">G_LOG_DOMAIN</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_LOG_FATAL_MASK href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-FATAL-MASK:CAPS">G_LOG_FATAL_MASK</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_LOG_LEVEL_USER_SHIFT href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-USER-SHIFT:CAPS">G_LOG_LEVEL_USER_SHIFT</A></TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GLogFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogFunc">*GLogFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_log&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log">g_log</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_logv&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-logv">g_logv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_message() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-message">g_message</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_warning() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-warning">g_warning</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_critical() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-critical">g_critical</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_error() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-error">g_error</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_info() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-info">g_info</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_debug() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-debug">g_debug</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_log_set_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler">g_log_set_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_log_remove_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-remove-handler">g_log_remove_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=returnvalue>GLogLevelFlags</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_log_set_always_fatal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-always-fatal">g_log_set_always_fatal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=returnvalue>GLogLevelFlags</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_log_set_fatal_mask&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-fatal-mask">g_log_set_fatal_mask</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler">g_log_default_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GLogFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogFunc"><SPAN class=returnvalue>GLogFunc</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_log_set_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-default-handler">g_log_set_default_handler</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Message-Logging.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>enum</TD>
<TD class=function_name><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags">GLogLevelFlags</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Message-Logging.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Message-Logging.description></A>
<H2>Description</H2>
<P>These functions provide support for logging error messages or messages used for debugging.</P>
<P>There are several built-in levels of messages, defined in <A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A>. These can be extended with user-defined levels.</P></DIV>
<DIV class=refsect1><A name=glib-Message-Logging.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-LOG-DOMAIN:CAPS></A>
<H3>G_LOG_DOMAIN</H3><PRE class=programlisting>#define G_LOG_DOMAIN    ((gchar*) 0)
</PRE>
<P>Defines the log domain.</P>
<P>For applications, this is typically left as the default <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> (or "") domain. Libraries should define this so that any messages which they log can be differentiated from messages from other libraries and application code. But be careful not to define it in any public header files.</P>
<P>For example, GTK+ uses this in its Makefile.am:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1</PRE></TD>
<TD class=listing_code><PRE class=programlisting>INCLUDES <SPAN class="gtkdoc opt">= -</SPAN>DG_LOG_DOMAIN<SPAN class="gtkdoc opt">=</SPAN><SPAN class="gtkdoc esc">\"</SPAN>Gtk<SPAN class="gtkdoc esc">\"</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-LOG-FATAL-MASK:CAPS></A>
<H3>G_LOG_FATAL_MASK</H3><PRE class=programlisting>#define G_LOG_FATAL_MASK        (G_LOG_FLAG_RECURSION | G_LOG_LEVEL_ERROR)
</PRE>
<P>GLib log levels that are considered fatal by default.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-LOG-LEVEL-USER-SHIFT:CAPS></A>
<H3>G_LOG_LEVEL_USER_SHIFT</H3><PRE class=programlisting>#define G_LOG_LEVEL_USER_SHIFT  (8)
</PRE>
<P>Log levels below 1&lt;&lt;G_LOG_LEVEL_USER_SHIFT are used by GLib. Higher bits can be used for user-defined log levels.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GLogFunc></A>
<H3>GLogFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GLogFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
             <EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> log_level</CODE></EM>,
             <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *message</CODE></EM>,
             <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Specifies the prototype of log handler functions.</P>
<P>The default log handler, <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A>, automatically appends a new-line character to <EM class=parameter><CODE>message</CODE></EM> when printing it. It is advised that any custom log handler functions behave similarly, so that logging calls in user code do not need modifying to add a new-line character to the message if the log handler is changed.</P>
<DIV class=refsect3><A name=id-1.4.12.7.5.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain of the message</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>log_level</P></TD>
<TD class=parameter_description>
<P>the log level of the message (including the fatal and recursion flags)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>message</P></TD>
<TD class=parameter_description>
<P>the message to process</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data, set in <A class=link title=g_log_set_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler"><CODE class=function>g_log_set_handler()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log></A>
<H3>g_log&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_log (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
       <EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> log_level</CODE></EM>,
       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
       <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Logs an error or debugging message.</P>
<P>If the log level has been set as fatal, the <CODE class=function>abort()</CODE> function is called to terminate the program.</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<DIV class=refsect3><A name=id-1.4.12.7.6.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain, usually <A class=link title=G_LOG_DOMAIN href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-DOMAIN:CAPS"><SPAN class=type>G_LOG_DOMAIN</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>log_level</P></TD>
<TD class=parameter_description>
<P>the log level, either from <A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> or a user-defined level</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>the message format. See the <CODE class=function>printf()</CODE> documentation</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the parameters to insert into the format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-logv></A>
<H3>g_logv&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_logv (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
        <EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> log_level</CODE></EM>,
        <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *format</CODE></EM>,
        <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> args</CODE></EM>);</PRE>
<P>Logs an error or debugging message.</P>
<P>If the log level has been set as fatal, the <CODE class=function>abort()</CODE> function is called to terminate the program.</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<DIV class=refsect3><A name=id-1.4.12.7.7.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>log_level</P></TD>
<TD class=parameter_description>
<P>the log level</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>format</P></TD>
<TD class=parameter_description>
<P>the message format. See the <CODE class=function>printf()</CODE> documentation</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>args</P></TD>
<TD class=parameter_description>
<P>the parameters to insert into the format string</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-message></A>
<H3>g_message()</H3><PRE class=programlisting>#define             g_message(...)</PRE>
<P>A convenience function/macro to log a normal message.</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<DIV class=refsect3><A name=id-1.4.12.7.8.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>format string, followed by parameters to insert into the format string (as with <CODE class=function>printf()</CODE>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-warning></A>
<H3>g_warning()</H3><PRE class=programlisting>#define             g_warning(...)</PRE>
<P>A convenience function/macro to log a warning message.</P>
<P>You can make warnings fatal at runtime by setting the <CODE class=literal>G_DEBUG</CODE> environment variable (see <A class=ulink href="https://developer.gnome.org/glib/stable/glib-running.html" target=_top>Running GLib Applications</A>).</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a newline character will automatically be appended to @..., and need not be entered manually.</P>
<DIV class=refsect3><A name=id-1.4.12.7.9.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>format string, followed by parameters to insert into the format string (as with <CODE class=function>printf()</CODE>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-critical></A>
<H3>g_critical()</H3><PRE class=programlisting>#define             g_critical(...)</PRE>
<P>Logs a "critical warning" (<A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-CRITICAL:CAPS"><SPAN class=type>G_LOG_LEVEL_CRITICAL</SPAN></A>). It's more or less application-defined what constitutes a critical vs. a regular warning. You could call <A class=link title=g_log_set_always_fatal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-always-fatal"><CODE class=function>g_log_set_always_fatal()</CODE></A> to make critical warnings exit the program, then use <A class=link title=g_critical() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-critical"><CODE class=function>g_critical()</CODE></A> for fatal errors, for example.</P>
<P>You can also make critical warnings fatal at runtime by setting the <CODE class=literal>G_DEBUG</CODE> environment variable (see <A class=ulink href="https://developer.gnome.org/glib/stable/glib-running.html" target=_top>Running GLib Applications</A>).</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<DIV class=refsect3><A name=id-1.4.12.7.10.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>format string, followed by parameters to insert into the format string (as with <CODE class=function>printf()</CODE>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-error></A>
<H3>g_error()</H3><PRE class=programlisting>#define             g_error(...)</PRE>
<P>A convenience function/macro to log an error message.</P>
<P>Error messages are always fatal, resulting in a call to <CODE class=function>abort()</CODE> to terminate the application. This function will result in a core dump; don't use it for errors you expect. Using this function indicates a bug in your program, i.e. an assertion failure.</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<DIV class=refsect3><A name=id-1.4.12.7.11.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>format string, followed by parameters to insert into the format string (as with <CODE class=function>printf()</CODE>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-info></A>
<H3>g_info()</H3><PRE class=programlisting>#define             g_info(...)</PRE>
<P>A convenience function/macro to log an informational message. Seldom used.</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<P>Such messages are suppressed by the <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> unless the G_MESSAGES_DEBUG environment variable is set appropriately.</P>
<DIV class=refsect3><A name=id-1.4.12.7.12.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>format string, followed by parameters to insert into the format string (as with <CODE class=function>printf()</CODE>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-debug></A>
<H3>g_debug()</H3><PRE class=programlisting>#define             g_debug(...)</PRE>
<P>A convenience function/macro to log a debug message.</P>
<P>If <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> is used as the log handler function, a new-line character will automatically be appended to @..., and need not be entered manually.</P>
<P>Such messages are suppressed by the <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> unless the G_MESSAGES_DEBUG environment variable is set appropriately.</P>
<DIV class=refsect3><A name=id-1.4.12.7.13.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>format string, followed by parameters to insert into the format string (as with <CODE class=function>printf()</CODE>)</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log-set-handler></A>
<H3>g_log_set_handler&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_log_set_handler (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> log_levels</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=GLogFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogFunc"><SPAN class=type>GLogFunc</SPAN></A> log_func</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Sets the log handler for a domain and a set of log levels. To handle fatal and recursive messages the <EM class=parameter><CODE>log_levels</CODE></EM> parameter must be combined with the <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-FLAG-FATAL:CAPS"><SPAN class=type>G_LOG_FLAG_FATAL</SPAN></A> and <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-FLAG-RECURSION:CAPS"><SPAN class=type>G_LOG_FLAG_RECURSION</SPAN></A> bit flags.</P>
<P>Note that since the <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-ERROR:CAPS"><SPAN class=type>G_LOG_LEVEL_ERROR</SPAN></A> log level is always fatal, if you want to set a handler for this log level you must combine it with <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-FLAG-FATAL:CAPS"><SPAN class=type>G_LOG_FLAG_FATAL</SPAN></A>.</P>
<P>Here is an example for adding a log handler for all warning messages in the default domain:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler">g_log_set_handler</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>NULL<SPAN class="gtkdoc opt">,</SPAN> G_LOG_LEVEL_WARNING <SPAN class="gtkdoc opt">|</SPAN> G_LOG_FLAG_FATAL
                   <SPAN class="gtkdoc opt">|</SPAN> G_LOG_FLAG_RECURSION<SPAN class="gtkdoc opt">,</SPAN> my_log_handler<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This example adds a log handler for all critical messages from GTK+:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler">g_log_set_handler</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"Gtk"</SPAN><SPAN class="gtkdoc opt">,</SPAN> G_LOG_LEVEL_CRITICAL <SPAN class="gtkdoc opt">|</SPAN> G_LOG_FLAG_FATAL
                   <SPAN class="gtkdoc opt">|</SPAN> G_LOG_FLAG_RECURSION<SPAN class="gtkdoc opt">,</SPAN> my_log_handler<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>This example adds a log handler for all messages from GLib:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler">g_log_set_handler</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"GLib"</SPAN><SPAN class="gtkdoc opt">,</SPAN> G_LOG_LEVEL_MASK <SPAN class="gtkdoc opt">|</SPAN> G_LOG_FLAG_FATAL
                   <SPAN class="gtkdoc opt">|</SPAN> G_LOG_FLAG_RECURSION<SPAN class="gtkdoc opt">,</SPAN> my_log_handler<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.4.12.7.14.15></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for the default "" application domain. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>log_levels</P></TD>
<TD class=parameter_description>
<P>the log levels to apply the log handler for. To handle fatal and recursive messages as well, combine the log levels with the <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-FLAG-FATAL:CAPS"><SPAN class=type>G_LOG_FLAG_FATAL</SPAN></A> and <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-FLAG-RECURSION:CAPS"><SPAN class=type>G_LOG_FLAG_RECURSION</SPAN></A> bit flags.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>log_func</P></TD>
<TD class=parameter_description>
<P>the log handler function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data passed to the log handler</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.12.7.14.16></A>
<H4>Returns</H4>
<P>the id of the new handler</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log-remove-handler></A>
<H3>g_log_remove_handler&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_log_remove_handler (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> handler_id</CODE></EM>);</PRE>
<P>Removes the log handler.</P>
<DIV class=refsect3><A name=id-1.4.12.7.15.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>handler_id</P></TD>
<TD class=parameter_description>
<P>the id of the handler, which was returned in <A class=link title=g_log_set_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler"><CODE class=function>g_log_set_handler()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log-set-always-fatal></A>
<H3>g_log_set_always_fatal&nbsp;()</H3><PRE class=programlisting><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=returnvalue>GLogLevelFlags</SPAN></A>
g_log_set_always_fatal (<EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> fatal_mask</CODE></EM>);</PRE>
<P>Sets the message levels which are always fatal, in any log domain. When a message with any of these levels is logged the program terminates. You can only set the levels defined by GLib to be fatal. <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-ERROR:CAPS"><CODE class=literal>G_LOG_LEVEL_ERROR</CODE></A> is always fatal.</P>
<P>You can also make some message levels fatal at runtime by setting the <CODE class=literal>G_DEBUG</CODE> environment variable (see <A class=ulink href="https://developer.gnome.org/glib/stable/glib-running.html" target=_top>Running GLib Applications</A>).</P>
<DIV class=refsect3><A name=id-1.4.12.7.16.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>fatal_mask</P></TD>
<TD class=parameter_description>
<P>the mask containing bits set for each level of error which is to be fatal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.12.7.16.7></A>
<H4>Returns</H4>
<P>the old fatal mask</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log-set-fatal-mask></A>
<H3>g_log_set_fatal_mask&nbsp;()</H3><PRE class=programlisting><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=returnvalue>GLogLevelFlags</SPAN></A>
g_log_set_fatal_mask (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> fatal_mask</CODE></EM>);</PRE>
<P>Sets the log levels which are fatal in the given domain. <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-ERROR:CAPS"><CODE class=literal>G_LOG_LEVEL_ERROR</CODE></A> is always fatal.</P>
<DIV class=refsect3><A name=id-1.4.12.7.17.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>fatal_mask</P></TD>
<TD class=parameter_description>
<P>the new fatal mask</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.12.7.17.6></A>
<H4>Returns</H4>
<P>the old fatal mask for the log domain</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log-default-handler></A>
<H3>g_log_default_handler&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_log_default_handler (<EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *log_domain</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title="enum GLogLevelFlags" href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogLevelFlags"><SPAN class=type>GLogLevelFlags</SPAN></A> log_level</CODE></EM>,
                       <EM class=parameter><CODE>const <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *message</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> unused_data</CODE></EM>);</PRE>
<P>The default log handler set up by GLib; <A class=link title=g_log_set_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-default-handler"><CODE class=function>g_log_set_default_handler()</CODE></A> allows to install an alternate default log handler. This is used if no log handler has been set for the particular log domain and log level combination. It outputs the message to stderr or stdout and if the log level is fatal it calls <CODE class=function>abort()</CODE>. It automatically prints a new-line character after the message, so one does not need to be manually included in <EM class=parameter><CODE>message</CODE></EM> .</P>
<P>The behavior of this log handler can be influenced by a number of environment variables:</P>
<DIV class=itemizedlist>
<UL style="LIST-STYLE-TYPE: disc" class=itemizedlist>
<LI class=listitem>
<P><CODE class=literal>G_MESSAGES_PREFIXED</CODE>: A :-separated list of log levels for which messages should be prefixed by the program name and PID of the aplication.</P></LI>
<LI class=listitem>
<P><CODE class=literal>G_MESSAGES_DEBUG</CODE>: A space-separated list of log domains for which debug and informational messages are printed. By default these messages are not printed.</P></LI></UL></DIV>
<P>stderr is used for levels <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-ERROR:CAPS"><CODE class=literal>G_LOG_LEVEL_ERROR</CODE></A>, <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-CRITICAL:CAPS"><CODE class=literal>G_LOG_LEVEL_CRITICAL</CODE></A>, <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-WARNING:CAPS"><CODE class=literal>G_LOG_LEVEL_WARNING</CODE></A> and <A class=link href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#G-LOG-LEVEL-MESSAGE:CAPS"><CODE class=literal>G_LOG_LEVEL_MESSAGE</CODE></A>. stdout is used for the rest.</P>
<DIV class=refsect3><A name=id-1.4.12.7.18.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_domain</P></TD>
<TD class=parameter_description>
<P>the log domain of the message</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>log_level</P></TD>
<TD class=parameter_description>
<P>the level of the message</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>message</P></TD>
<TD class=parameter_description>
<P>the message</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>unused_data</P></TD>
<TD class=parameter_description>
<P>data passed from <A class=link title=g_log&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log"><CODE class=function>g_log()</CODE></A> which is unused</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-log-set-default-handler></A>
<H3>g_log_set_default_handler&nbsp;()</H3><PRE class=programlisting><A class=link title=GLogFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogFunc"><SPAN class=returnvalue>GLogFunc</SPAN></A>
g_log_set_default_handler (<EM class=parameter><CODE><A class=link title=GLogFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#GLogFunc"><SPAN class=type>GLogFunc</SPAN></A> log_func</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Installs a default log handler which is used if no log handler has been set for the particular log domain and log level combination. By default, GLib uses <A class=link title=g_log_default_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-default-handler"><CODE class=function>g_log_default_handler()</CODE></A> as default log handler.</P>
<DIV class=refsect3><A name=id-1.4.12.7.19.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>log_func</P></TD>
<TD class=parameter_description>
<P>the log handler function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>data passed to the log handler</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.4.12.7.19.6></A>
<H4>Returns</H4>
<P>the previous default log handler</P>
<P></P></DIV>
<P class=since>Since 2.6</P></DIV></DIV>
<DIV class=refsect1><A name=glib-Message-Logging.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GLogLevelFlags></A>
<H3>enum GLogLevelFlags</H3>
<P>Flags specifying the level of log messages.</P>
<P>It is possible to change how GLib treats messages of the various levels using <A class=link title=g_log_set_handler&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-handler"><CODE class=function>g_log_set_handler()</CODE></A> and <A class=link title=g_log_set_fatal_mask&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-log-set-fatal-mask"><CODE class=function>g_log_set_fatal_mask()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.4.12.8.2.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=enum_members_name width=300></COL>
<COL class=enum_members_description></COL>
<COL class=enum_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-FLAG-RECURSION:CAPS></A>G_LOG_FLAG_RECURSION</P></TD>
<TD class=enum_member_description>
<P>internal flag</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-FLAG-FATAL:CAPS></A>G_LOG_FLAG_FATAL</P></TD>
<TD class=enum_member_description>
<P>internal flag</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-ERROR:CAPS></A>G_LOG_LEVEL_ERROR</P></TD>
<TD class=enum_member_description>
<P>log level for errors, see <A class=link title=g_error() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-error"><CODE class=function>g_error()</CODE></A>. This level is also used for messages produced by <A class=link title=g_assert() href="https://developer.gnome.org/glib/stable/glib-Testing.html#g-assert"><CODE class=function>g_assert()</CODE></A>.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-CRITICAL:CAPS></A>G_LOG_LEVEL_CRITICAL</P></TD>
<TD class=enum_member_description>
<P>log level for critical messages, see <A class=link title=g_critical() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-critical"><CODE class=function>g_critical()</CODE></A>. This level is also used for messages produced by <A class=link title=g_return_if_fail() href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-if-fail"><CODE class=function>g_return_if_fail()</CODE></A> and <A class=link title=g_return_val_if_fail() href="https://developer.gnome.org/glib/stable/glib-Warnings-and-Assertions.html#g-return-val-if-fail"><CODE class=function>g_return_val_if_fail()</CODE></A>.</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-WARNING:CAPS></A>G_LOG_LEVEL_WARNING</P></TD>
<TD class=enum_member_description>
<P>log level for warnings, see <A class=link title=g_warning() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-warning"><CODE class=function>g_warning()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-MESSAGE:CAPS></A>G_LOG_LEVEL_MESSAGE</P></TD>
<TD class=enum_member_description>
<P>log level for messages, see <A class=link title=g_message() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-message"><CODE class=function>g_message()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-INFO:CAPS></A>G_LOG_LEVEL_INFO</P></TD>
<TD class=enum_member_description>
<P>log level for informational messages, see <A class=link title=g_info() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-info"><CODE class=function>g_info()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-DEBUG:CAPS></A>G_LOG_LEVEL_DEBUG</P></TD>
<TD class=enum_member_description>
<P>log level for debug messages, see <A class=link title=g_debug() href="https://developer.gnome.org/glib/stable/glib-Message-Logging.html#g-debug"><CODE class=function>g_debug()</CODE></A></P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=enum_member_name>
<P><A name=G-LOG-LEVEL-MASK:CAPS></A>G_LOG_LEVEL_MASK</P></TD>
<TD class=enum_member_description>
<P>a mask including all log levels</P></TD>
<TD class=enum_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>