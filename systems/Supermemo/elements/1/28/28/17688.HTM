<H2 class=chapter>1 Getting Started with <CODE>awk</CODE></H2><A name=index-awk_002c-function-of></A>
<P>The basic function of <CODE>awk</CODE> is to search files for lines (or other units of text) that contain certain patterns. When a line matches one of the patterns, <CODE>awk</CODE> performs specified actions on that line. <CODE>awk</CODE> keeps processing input lines in this way until it reaches the end of the input files. </P><A name=index-awk_002c-uses-for-1></A><A name=index-programming-languages_002c-data_002ddriven-vs_002e-procedural></A><A name=index-awk-programs></A>
<P>Programs in <CODE>awk</CODE> are different from programs in most other languages, because <CODE>awk</CODE> programs are <EM>data-driven</EM>; that is, you describe the data you want to work with and then what to do when you find it. Most other languages are <EM>procedural</EM>; you have to describe, in great detail, every step the program is to take. When working with procedural languages, it is usually much harder to clearly describe the data your program will process. For this reason, <CODE>awk</CODE> programs are often refreshingly easy to read and write. </P><A name=index-program_002c-definition-of></A><A name=index-rule_002c-definition-of></A>
<P>When you run <CODE>awk</CODE>, you specify an <CODE>awk</CODE> <EM>program</EM> that tells <CODE>awk</CODE> what to do. The program consists of a series of <EM>rules</EM>. (It may also contain <EM>function definitions</EM>, an advanced feature that we will ignore for now. See <A href="http://www.gnu.org/software/gawk/manual/gawk.html#User_002ddefined">User-defined</A>.) Each rule specifies one pattern to search for and one action to perform upon finding the pattern. </P>
<P>Syntactically, a rule consists of a pattern followed by an action. The action is enclosed in curly braces to separate it from the pattern. Newlines usually separate rules. Therefore, an <CODE>awk</CODE> program looks like this: </P>
<DIV class=example><PRE class=example><VAR>pattern</VAR> { <VAR>action</VAR> }
<VAR>pattern</VAR> { <VAR>action</VAR> }
&#8230;
</PRE></DIV>
<TABLE class=menu border=0 cellSpacing=0>
<TBODY>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=1 href="http://www.gnu.org/software/gawk/manual/gawk.html#Running-gawk">Running gawk</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>How to run <CODE>gawk</CODE> programs; includes command-line syntax. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=2 href="http://www.gnu.org/software/gawk/manual/gawk.html#Sample-Data-Files">Sample Data Files</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Sample data files for use in the <CODE>awk</CODE> programs illustrated in this Web page. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=3 href="http://www.gnu.org/software/gawk/manual/gawk.html#Very-Simple">Very Simple</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>A very simple example. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=4 href="http://www.gnu.org/software/gawk/manual/gawk.html#Two-Rules">Two Rules</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>A less simple one-line example using two rules. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=5 href="http://www.gnu.org/software/gawk/manual/gawk.html#More-Complex">More Complex</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>A more complex example. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=6 href="http://www.gnu.org/software/gawk/manual/gawk.html#Statements_002fLines">Statements/Lines</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Subdividing or combining statements into lines. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=7 href="http://www.gnu.org/software/gawk/manual/gawk.html#Other-Features">Other Features</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>Other Features of <CODE>awk</CODE>. </TD></TR>
<TR>
<TD vAlign=top align=left>&#8226; <A accessKey=8 href="http://www.gnu.org/software/gawk/manual/gawk.html#When">When</A>:</TD>
<TD>&nbsp;&nbsp;</TD>
<TD vAlign=top align=left>When to use <CODE>gawk</CODE> and when to use other things. </TD></TR></TBODY></TABLE>