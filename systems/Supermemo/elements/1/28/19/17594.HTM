<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Standard-Macros.top_of_page></A>Standard Macros</SPAN></H2>
<P>Standard Macros &#8212; commonly-used macros</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Standard-Macros.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_DIR_SEPARATOR() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-IS-DIR-SEPARATOR:CAPS">G_IS_DIR_SEPARATOR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS">NULL</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=MIN() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#MIN:CAPS">MIN</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=MAX() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#MAX:CAPS">MAX</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=ABS() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#ABS:CAPS">ABS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=CLAMP() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#CLAMP:CAPS">CLAMP</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_STRUCT_MEMBER() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-STRUCT-MEMBER:CAPS">G_STRUCT_MEMBER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_STRUCT_MEMBER_P() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-STRUCT-MEMBER-P:CAPS">G_STRUCT_MEMBER_P</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_STRUCT_OFFSET() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-STRUCT-OFFSET:CAPS">G_STRUCT_OFFSET</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_N_ELEMENTS() class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-N-ELEMENTS:CAPS">G_N_ELEMENTS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OS_WIN32 class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-OS-WIN32:CAPS">G_OS_WIN32</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OS_UNIX class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-OS-UNIX:CAPS">G_OS_UNIX</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DIR_SEPARATOR class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-DIR-SEPARATOR:CAPS">G_DIR_SEPARATOR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_DIR_SEPARATOR_S class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-DIR-SEPARATOR-S:CAPS">G_DIR_SEPARATOR_S</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_SEARCHPATH_SEPARATOR class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-SEARCHPATH-SEPARATOR:CAPS">G_SEARCHPATH_SEPARATOR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_SEARCHPATH_SEPARATOR_S class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-SEARCHPATH-SEPARATOR-S:CAPS">G_SEARCHPATH_SEPARATOR_S</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS">FALSE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_MEM_ALIGN class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-MEM-ALIGN:CAPS">G_MEM_ALIGN</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_CONST_RETURN class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-CONST-RETURN:CAPS">G_CONST_RETURN</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.description></A>
<H2>Description</H2>
<P>These macros provide a few commonly-used features.</P></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-IS-DIR-SEPARATOR:CAPS></A>
<H3><FONT class=extract>G_IS_DIR_SEPARATOR()</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_IS_DIR_SEPARATOR(c) ((c) == G_DIR_SEPARATOR || (c) == '/')
</FONT></PRE>
<P><FONT class=extract>Checks whether a character is a directory separator. It returns </FONT><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal><FONT class=extract>TRUE</FONT></CODE></A><FONT class=extract> for '/' on UNIX machines and for '\' or '/' under Windows.</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.2.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>c</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a character</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since><FONT class=extract>Since 2.6</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=NULL:CAPS></A>
<H3><FONT class=extract>NULL</FONT></H3><PRE class=programlisting><FONT class=extract>#  define NULL        (0L)
</FONT></PRE>
<P><FONT class=extract>Defines the standard </FONT><A title=NULL class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal><FONT class=extract>NULL</FONT></CODE></A><FONT class=extract> pointer.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=MIN:CAPS></A>
<H3><FONT class=extract>MIN()</FONT></H3><PRE class=programlisting><FONT class=extract>#define MIN(a, b)  (((a) &lt; (b)) ? (a) : (b))
</FONT></PRE>
<P><FONT class=extract>Calculates the minimum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.4.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>a</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a numeric value</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>b</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a numeric value</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.4.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>the minimum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</FONT></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=MAX:CAPS></A>
<H3><FONT class=extract>MAX()</FONT></H3><PRE class=programlisting><FONT class=extract>#define MAX(a, b)  (((a) &gt; (b)) ? (a) : (b))
</FONT></PRE>
<P><FONT class=extract>Calculates the maximum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.5.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>a</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a numeric value</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>b</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a numeric value</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.5.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>the maximum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</FONT></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=ABS:CAPS></A>
<H3><FONT class=extract>ABS()</FONT></H3><PRE class=programlisting><FONT class=extract>#define ABS(a)	   (((a) &lt; 0) ? -(a) : (a))
</FONT></PRE>
<P><FONT class=extract>Calculates the absolute value of <EM class=parameter><CODE>a</CODE></EM> . The absolute value is simply the number with any negative sign taken away.</FONT></P>
<P><FONT class=extract>For example,</FONT></P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P><FONT class=extract>ABS(-10) is 10.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>ABS(10) is also 10.</FONT></P></LI></UL></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.6.7></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>a</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a numeric value</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.6.8></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>the absolute value of <EM class=parameter><CODE>a</CODE></EM> .</FONT></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=CLAMP:CAPS></A>
<H3><FONT class=extract>CLAMP()</FONT></H3><PRE class=programlisting><FONT class=extract>#define CLAMP(x, low, high)  (((x) &gt; (high)) ? (high) : (((x) &lt; (low)) ? (low) : (x)))
</FONT></PRE>
<P><FONT class=extract>Ensures that <EM class=parameter><CODE>x</CODE></EM> is between the limits set by <EM class=parameter><CODE>low</CODE></EM> and <EM class=parameter><CODE>high</CODE></EM> . If <EM class=parameter><CODE>low</CODE></EM> is greater than <EM class=parameter><CODE>high</CODE></EM> the result is undefined.</FONT></P>
<P><FONT class=extract>For example,</FONT></P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<P><FONT class=extract>CLAMP(5, 10, 15) is 10.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>CLAMP(15, 5, 10) is 10.</FONT></P>
<LI class=listitem>
<P><FONT class=extract>CLAMP(20, 15, 25) is 20.</FONT></P></LI></UL></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.7.7></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>x</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the value to clamp</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>low</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the minimum value allowed</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>high</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the maximum value allowed</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.7.8></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>the value of <EM class=parameter><CODE>x</CODE></EM> clamped to the range between <EM class=parameter><CODE>low</CODE></EM> and <EM class=parameter><CODE>high</CODE></EM></FONT> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-STRUCT-MEMBER:CAPS></A>
<H3><FONT class=extract>G_STRUCT_MEMBER()</FONT></H3><PRE class=programlisting><FONT class=extract>#define             G_STRUCT_MEMBER(member_type, struct_p, struct_offset)</FONT></PRE>
<P><FONT class=extract>Returns a member of a structure at a given offset, using the given type.</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.8.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>member_type</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the type of the struct field</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>struct_p</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a pointer to a struct</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>struct_offset</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the offset of the field from the start of the struct, in bytes</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.8.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>the struct member</FONT></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-STRUCT-MEMBER-P:CAPS></A>
<H3><FONT class=extract>G_STRUCT_MEMBER_P()</FONT></H3><PRE class=programlisting><FONT class=extract>#define             G_STRUCT_MEMBER_P(struct_p, struct_offset)</FONT></PRE>
<P><FONT class=extract>Returns an untyped pointer to a given offset of a struct.</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.9.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>struct_p</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a pointer to a struct</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>struct_offset</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the offset from the start of the struct, in bytes</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.9.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>an untyped pointer to <EM class=parameter><CODE>struct_p</CODE></EM> plus <EM class=parameter><CODE>struct_offset</CODE></EM> bytes</FONT></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-STRUCT-OFFSET:CAPS></A>
<H3><FONT class=extract>G_STRUCT_OFFSET()</FONT></H3><PRE class=programlisting><FONT class=extract>#define             G_STRUCT_OFFSET(struct_type, member)</FONT></PRE>
<P><FONT class=extract>Returns the offset, in bytes, of a member of a struct.</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.10.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>struct_type</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a structure type, e.g. <SPAN class=type>GtkWidget</SPAN></FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>member</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>a field in the structure, e.g. <EM class=parameter><CODE>window</CODE></EM> </FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.10.6></A>
<H4><FONT class=extract>Returns</FONT></H4>
<P><FONT class=extract>the offset of <EM class=parameter><CODE>member</CODE></EM> from the start of <EM class=parameter><CODE>struct_type</CODE></EM></FONT> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-N-ELEMENTS:CAPS></A>
<H3><FONT class=extract>G_N_ELEMENTS()</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_N_ELEMENTS(arr)		(sizeof (arr) / sizeof ((arr)[0]))
</FONT></PRE>
<P><FONT class=extract>Determines the number of elements in an array. The array must be declared so the compiler knows its size at compile-time; this macro will not work on an array allocated on the heap, only static arrays or arrays on the stack.</FONT></P>
<DIV class=refsect3><A name=id-1.3.4.7.11.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>arr</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>the array</FONT></P></TD>
<TD class=parameter_annotations><FONT class=extract>&nbsp;</FONT></TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.other_details></A>
<H2><FONT class=extract>Types and Values</FONT></H2>
<DIV class=refsect2><A name=G-OS-WIN32:CAPS></A>
<H3><FONT class=extract>G_OS_WIN32</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_OS_WIN32
</FONT></PRE>
<P><FONT class=extract>This macro is defined only on Windows. So you can bracket Windows-specific code in "#ifdef G_OS_WIN32".</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-OS-UNIX:CAPS></A>
<H3><FONT class=extract>G_OS_UNIX</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_OS_UNIX
</FONT></PRE>
<P><FONT class=extract>This macro is defined only on UNIX. So you can bracket UNIX-specific code in "#ifdef G_OS_UNIX".</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-DIR-SEPARATOR:CAPS></A>
<H3><FONT class=extract>G_DIR_SEPARATOR</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_DIR_SEPARATOR '\\'
</FONT></PRE>
<P><FONT class=extract>The directory separator character. This is '/' on UNIX machines and '\' under Windows.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-DIR-SEPARATOR-S:CAPS></A>
<H3><FONT class=extract>G_DIR_SEPARATOR_S</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_DIR_SEPARATOR_S "\\"
</FONT></PRE>
<P><FONT class=extract>The directory separator as a string. This is "/" on UNIX machines and "\" under Windows.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-SEARCHPATH-SEPARATOR:CAPS></A>
<H3><FONT class=extract>G_SEARCHPATH_SEPARATOR</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_SEARCHPATH_SEPARATOR ';'
</FONT></PRE>
<P><FONT class=extract>The search path separator character. This is ':' on UNIX machines and ';' under Windows.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-SEARCHPATH-SEPARATOR-S:CAPS></A>
<H3><FONT class=extract>G_SEARCHPATH_SEPARATOR_S</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_SEARCHPATH_SEPARATOR_S ";"
</FONT></PRE>
<P><FONT class=extract>The search path separator as a string. This is ":" on UNIX machines and ";" under Windows.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=TRUE:CAPS></A>
<H3><FONT class=extract>TRUE</FONT></H3><PRE class=programlisting><FONT class=extract>#define&nbsp;TRUE&nbsp;(!FALSE)
</FONT></PRE>
<P><FONT class=extract>Defines the </FONT><A title=TRUE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal><FONT class=extract>TRUE</FONT></CODE></A><FONT class=extract> value for the </FONT><A title=gboolean class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type><FONT class=extract>gboolean</FONT></SPAN></A><FONT class=extract> type.</FONT></P></DIV><FONT class=extract>
<HR>
</HR></FONT>
<DIV class=refsect2><A name=FALSE:CAPS></A>
<H3><FONT class=extract>FALSE</FONT></H3><PRE class=programlisting><FONT class=extract>#define&nbsp;FALSE&nbsp;(0)
</FONT></PRE>
<P><FONT class=extract>Defines the </FONT><A title=FALSE class=link href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal><FONT class=extract>FALSE</FONT></CODE></A><FONT class=extract> value for the </FONT><A title=gboolean class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type><FONT class=extract>gboolean</FONT></SPAN></A><FONT class=extract> type.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-MEM-ALIGN:CAPS></A>
<H3><FONT class=extract>G_MEM_ALIGN</FONT></H3><PRE class=programlisting><FONT class=extract>#  define G_MEM_ALIGN&nbsp;GLIB_SIZEOF_VOID_P
</FONT></PRE>
<P><FONT class=extract>Indicates the number of bytes to which memory will be aligned on the current platform.</FONT></P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-CONST-RETURN:CAPS></A>
<H3><FONT class=extract>G_CONST_RETURN</FONT></H3><PRE class=programlisting><FONT class=extract>#define G_CONST_RETURN
</FONT></PRE>
<DIV class=warning>
<P><FONT class=extract><CODE class=literal>G_CONST_RETURN</CODE> has been deprecated since version 2.30 and should not be used in newly-written code.</FONT></P>
<P><FONT class=extract>API providers should replace all existing uses with const and API consumers should adjust their code accordingly</FONT></P></DIV>
<P><FONT class=extract>If <CODE class=literal>G_DISABLE_CONST_RETURNS</CODE> is defined, this macro expands to nothing. By default, the macro expands to const. The macro can be used in place of const for functions that return a value that should not be modified. The purpose of this macro is to allow us to turn on const for returned constant strings by default, while allowing programmers who find that annoying to turn it off. This macro should only be used for return values and for "out" parameters, it doesn't make sense for "in" parameters.</FONT></P></DIV></DIV>