<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Standard-Macros.top_of_page></A>Standard Macros</SPAN></H2>
<P>Standard Macros &#8212; commonly-used macros</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Standard-Macros.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_IS_DIR_SEPARATOR() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-IS-DIR-SEPARATOR:CAPS">G_IS_DIR_SEPARATOR</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS">NULL</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=MIN() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#MIN:CAPS">MIN</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=MAX() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#MAX:CAPS">MAX</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=ABS() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#ABS:CAPS">ABS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=CLAMP() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#CLAMP:CAPS">CLAMP</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_STRUCT_MEMBER() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-STRUCT-MEMBER:CAPS">G_STRUCT_MEMBER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_STRUCT_MEMBER_P() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-STRUCT-MEMBER-P:CAPS">G_STRUCT_MEMBER_P</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_STRUCT_OFFSET() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-STRUCT-OFFSET:CAPS">G_STRUCT_OFFSET</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_N_ELEMENTS() href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-N-ELEMENTS:CAPS">G_N_ELEMENTS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_OS_WIN32 href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-OS-WIN32:CAPS">G_OS_WIN32</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_OS_UNIX href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-OS-UNIX:CAPS">G_OS_UNIX</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_DIR_SEPARATOR href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-DIR-SEPARATOR:CAPS">G_DIR_SEPARATOR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_DIR_SEPARATOR_S href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-DIR-SEPARATOR-S:CAPS">G_DIR_SEPARATOR_S</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_SEARCHPATH_SEPARATOR href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-SEARCHPATH-SEPARATOR:CAPS">G_SEARCHPATH_SEPARATOR</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_SEARCHPATH_SEPARATOR_S href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-SEARCHPATH-SEPARATOR-S:CAPS">G_SEARCHPATH_SEPARATOR_S</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS">TRUE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS">FALSE</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_MEM_ALIGN href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-MEM-ALIGN:CAPS">G_MEM_ALIGN</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=G_CONST_RETURN href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#G-CONST-RETURN:CAPS">G_CONST_RETURN</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.description></A>
<H2>Description</H2>
<P>These macros provide a few commonly-used features.</P></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=G-IS-DIR-SEPARATOR:CAPS></A>
<H3>G_IS_DIR_SEPARATOR()</H3><PRE class=programlisting>#define G_IS_DIR_SEPARATOR(c) ((c) == G_DIR_SEPARATOR || (c) == '/')
</PRE>
<P>Checks whether a character is a directory separator. It returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> for '/' on UNIX machines and for '\' or '/' under Windows.</P>
<DIV class=refsect3><A name=id-1.3.4.7.2.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>c</P></TD>
<TD class=parameter_description>
<P>a character</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.6</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=NULL:CAPS></A>
<H3>NULL</H3><PRE class=programlisting>#  define NULL        (0L)
</PRE>
<P>Defines the standard <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointer.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=MIN:CAPS></A>
<H3>MIN()</H3><PRE class=programlisting>#define MIN(a, b)  (((a) &lt; (b)) ? (a) : (b))
</PRE>
<P>Calculates the minimum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.3.4.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>a</P></TD>
<TD class=parameter_description>
<P>a numeric value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>b</P></TD>
<TD class=parameter_description>
<P>a numeric value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.4.6></A>
<H4>Returns</H4>
<P>the minimum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=MAX:CAPS></A>
<H3>MAX()</H3><PRE class=programlisting>#define MAX(a, b)  (((a) &gt; (b)) ? (a) : (b))
</PRE>
<P>Calculates the maximum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.3.4.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>a</P></TD>
<TD class=parameter_description>
<P>a numeric value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>b</P></TD>
<TD class=parameter_description>
<P>a numeric value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.5.6></A>
<H4>Returns</H4>
<P>the maximum of <EM class=parameter><CODE>a</CODE></EM> and <EM class=parameter><CODE>b</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=ABS:CAPS></A>
<H3>ABS()</H3><PRE class=programlisting>#define ABS(a)	   (((a) &lt; 0) ? -(a) : (a))
</PRE>
<P>Calculates the absolute value of <EM class=parameter><CODE>a</CODE></EM> . The absolute value is simply the number with any negative sign taken away.</P>
<P>For example,</P>
<DIV class=itemizedlist>
<UL style="LIST-STYLE-TYPE: disc" class=itemizedlist>
<LI class=listitem>
<P>ABS(-10) is 10.</P></LI>
<LI class=listitem>
<P>ABS(10) is also 10.</P></LI></UL></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.6.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>a</P></TD>
<TD class=parameter_description>
<P>a numeric value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.6.8></A>
<H4>Returns</H4>
<P>the absolute value of <EM class=parameter><CODE>a</CODE></EM> .</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=CLAMP:CAPS></A>
<H3>CLAMP()</H3><PRE class=programlisting>#define CLAMP(x, low, high)  (((x) &gt; (high)) ? (high) : (((x) &lt; (low)) ? (low) : (x)))
</PRE>
<P>Ensures that <EM class=parameter><CODE>x</CODE></EM> is between the limits set by <EM class=parameter><CODE>low</CODE></EM> and <EM class=parameter><CODE>high</CODE></EM> . If <EM class=parameter><CODE>low</CODE></EM> is greater than <EM class=parameter><CODE>high</CODE></EM> the result is undefined.</P>
<P>For example,</P>
<DIV class=itemizedlist>
<UL style="LIST-STYLE-TYPE: disc" class=itemizedlist>
<LI class=listitem>
<P>CLAMP(5, 10, 15) is 10.</P></LI>
<LI class=listitem>
<P>CLAMP(15, 5, 10) is 10.</P></LI>
<LI class=listitem>
<P>CLAMP(20, 15, 25) is 20.</P></LI></UL></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.7.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>x</P></TD>
<TD class=parameter_description>
<P>the value to clamp</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>low</P></TD>
<TD class=parameter_description>
<P>the minimum value allowed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>high</P></TD>
<TD class=parameter_description>
<P>the maximum value allowed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.7.8></A>
<H4>Returns</H4>
<P>the value of <EM class=parameter><CODE>x</CODE></EM> clamped to the range between <EM class=parameter><CODE>low</CODE></EM> and <EM class=parameter><CODE>high</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-STRUCT-MEMBER:CAPS></A>
<H3>G_STRUCT_MEMBER()</H3><PRE class=programlisting>#define             G_STRUCT_MEMBER(member_type, struct_p, struct_offset)</PRE>
<P>Returns a member of a structure at a given offset, using the given type.</P>
<DIV class=refsect3><A name=id-1.3.4.7.8.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>member_type</P></TD>
<TD class=parameter_description>
<P>the type of the struct field</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>struct_p</P></TD>
<TD class=parameter_description>
<P>a pointer to a struct</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>struct_offset</P></TD>
<TD class=parameter_description>
<P>the offset of the field from the start of the struct, in bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.8.6></A>
<H4>Returns</H4>
<P>the struct member</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-STRUCT-MEMBER-P:CAPS></A>
<H3>G_STRUCT_MEMBER_P()</H3><PRE class=programlisting>#define             G_STRUCT_MEMBER_P(struct_p, struct_offset)</PRE>
<P>Returns an untyped pointer to a given offset of a struct.</P>
<DIV class=refsect3><A name=id-1.3.4.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>struct_p</P></TD>
<TD class=parameter_description>
<P>a pointer to a struct</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>struct_offset</P></TD>
<TD class=parameter_description>
<P>the offset from the start of the struct, in bytes</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.9.6></A>
<H4>Returns</H4>
<P>an untyped pointer to <EM class=parameter><CODE>struct_p</CODE></EM> plus <EM class=parameter><CODE>struct_offset</CODE></EM> bytes</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-STRUCT-OFFSET:CAPS></A>
<H3>G_STRUCT_OFFSET()</H3><PRE class=programlisting>#define             G_STRUCT_OFFSET(struct_type, member)</PRE>
<P>Returns the offset, in bytes, of a member of a struct.</P>
<DIV class=refsect3><A name=id-1.3.4.7.10.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>struct_type</P></TD>
<TD class=parameter_description>
<P>a structure type, e.g. <SPAN class=type>GtkWidget</SPAN></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>member</P></TD>
<TD class=parameter_description>
<P>a field in the structure, e.g. <EM class=parameter><CODE>window</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.3.4.7.10.6></A>
<H4>Returns</H4>
<P>the offset of <EM class=parameter><CODE>member</CODE></EM> from the start of <EM class=parameter><CODE>struct_type</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-N-ELEMENTS:CAPS></A>
<H3>G_N_ELEMENTS()</H3><PRE class=programlisting>#define G_N_ELEMENTS(arr)		(sizeof (arr) / sizeof ((arr)[0]))
</PRE>
<P>Determines the number of elements in an array. The array must be declared so the compiler knows its size at compile-time; this macro will not work on an array allocated on the heap, only static arrays or arrays on the stack.</P>
<DIV class=refsect3><A name=id-1.3.4.7.11.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>arr</P></TD>
<TD class=parameter_description>
<P>the array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Standard-Macros.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=G-OS-WIN32:CAPS></A>
<H3>G_OS_WIN32</H3><PRE class=programlisting>#define G_OS_WIN32
</PRE>
<P>This macro is defined only on Windows. So you can bracket Windows-specific code in "#ifdef G_OS_WIN32".</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-OS-UNIX:CAPS></A>
<H3>G_OS_UNIX</H3><PRE class=programlisting>#define G_OS_UNIX
</PRE>
<P>This macro is defined only on UNIX. So you can bracket UNIX-specific code in "#ifdef G_OS_UNIX".</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-DIR-SEPARATOR:CAPS></A>
<H3>G_DIR_SEPARATOR</H3><PRE class=programlisting>#define G_DIR_SEPARATOR '\\'
</PRE>
<P>The directory separator character. This is '/' on UNIX machines and '\' under Windows.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-DIR-SEPARATOR-S:CAPS></A>
<H3>G_DIR_SEPARATOR_S</H3><PRE class=programlisting>#define G_DIR_SEPARATOR_S "\\"
</PRE>
<P>The directory separator as a string. This is "/" on UNIX machines and "\" under Windows.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-SEARCHPATH-SEPARATOR:CAPS></A>
<H3>G_SEARCHPATH_SEPARATOR</H3><PRE class=programlisting>#define G_SEARCHPATH_SEPARATOR ';'
</PRE>
<P>The search path separator character. This is ':' on UNIX machines and ';' under Windows.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-SEARCHPATH-SEPARATOR-S:CAPS></A>
<H3>G_SEARCHPATH_SEPARATOR_S</H3><PRE class=programlisting>#define G_SEARCHPATH_SEPARATOR_S ";"
</PRE>
<P>The search path separator as a string. This is ":" on UNIX machines and ";" under Windows.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=TRUE:CAPS></A>
<H3>TRUE</H3><PRE class=programlisting>#define&nbsp;TRUE&nbsp;(!FALSE)
</PRE>
<P>Defines the <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> value for the <A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> type.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=FALSE:CAPS></A>
<H3>FALSE</H3><PRE class=programlisting>#define&nbsp;FALSE&nbsp;(0)
</PRE>
<P>Defines the <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> value for the <A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> type.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-MEM-ALIGN:CAPS></A>
<H3>G_MEM_ALIGN</H3><PRE class=programlisting>#  define G_MEM_ALIGN&nbsp;GLIB_SIZEOF_VOID_P
</PRE>
<P>Indicates the number of bytes to which memory will be aligned on the current platform.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=G-CONST-RETURN:CAPS></A>
<H3>G_CONST_RETURN</H3><PRE class=programlisting>#define G_CONST_RETURN
</PRE>
<DIV class=warning>
<P><CODE class=literal>G_CONST_RETURN</CODE> has been deprecated since version 2.30 and should not be used in newly-written code.</P>
<P>API providers should replace all existing uses with const and API consumers should adjust their code accordingly</P></DIV>
<P>If <CODE class=literal>G_DISABLE_CONST_RETURNS</CODE> is defined, this macro expands to nothing. By default, the macro expands to const. The macro can be used in place of const for functions that return a value that should not be modified. The purpose of this macro is to allow us to turn on const for returned constant strings by default, while allowing programmers who find that annoying to turn it off. This macro should only be used for return values and for "out" parameters, it doesn't make sense for "in" parameters.</P></DIV></DIV>