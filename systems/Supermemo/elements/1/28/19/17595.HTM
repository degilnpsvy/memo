<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Type-Conversion-Macros.top_of_page></A>Type Conversion Macros</SPAN></H2>
<P>Type Conversion Macros &#8212; portably storing integers in pointer variables</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=GINT_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS">GINT_TO_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=GPOINTER_TO_INT() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-INT:CAPS">GPOINTER_TO_INT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=GUINT_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GUINT-TO-POINTER:CAPS">GUINT_TO_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=GPOINTER_TO_UINT() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-UINT:CAPS">GPOINTER_TO_UINT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=GSIZE_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GSIZE-TO-POINTER:CAPS">GSIZE_TO_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=GPOINTER_TO_SIZE() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-SIZE:CAPS">GPOINTER_TO_SIZE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.description></A>
<H2>Description</H2>
<P><FONT class=extract>Many times GLib, GTK+, and other libraries allow you to pass "user data" to a callback, in the form of a void pointer. From time to time you want to pass an integer instead of a pointer. You could allocate an integer, with something like:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract><SPAN class="gtkdoc kwb">int</SPAN> <SPAN class="gtkdoc opt">*</SPAN>ip <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-new">g_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">int</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>ip <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract>But this is inconvenient, and it's annoying to have to free the memory at some later time.</FONT></P>
<P><FONT class=extract>Pointers are always at least 32 bits in size (on all platforms GLib intends to support). Thus you can store at least 32-bit integer values in a pointer value. Naively, you might try this, but it's incorrect:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gpointer p<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">int</SPAN> i<SPAN class="gtkdoc opt">;</SPAN>
p <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">*)</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN>
i <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">int</SPAN><SPAN class="gtkdoc opt">)</SPAN> p<SPAN class="gtkdoc opt">;</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract>Again, that example was not correct, don't copy it. The problem is that on some systems you need to do this:</FONT></P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE><FONT class=extract>1
2
3
4</FONT></PRE></TD>
<TD class=listing_code><PRE class=programlisting><FONT class=extract>gpointer p<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">int</SPAN> i<SPAN class="gtkdoc opt">;</SPAN>
p <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">*) (</SPAN><SPAN class="gtkdoc kwb">long</SPAN><SPAN class="gtkdoc opt">)</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN>
i <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">int</SPAN><SPAN class="gtkdoc opt">) (</SPAN><SPAN class="gtkdoc kwb">long</SPAN><SPAN class="gtkdoc opt">)</SPAN> p<SPAN class="gtkdoc opt">;</SPAN></FONT></PRE></TD></TR></TBODY></TABLE></DIV>
<P><FONT class=extract>The GLib macros </FONT><A title=GPOINTER_TO_INT() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-INT:CAPS"><CODE class=function><FONT class=extract>GPOINTER_TO_INT()</FONT></CODE></A><FONT class=extract>, </FONT><A title=GINT_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS"><CODE class=function><FONT class=extract>GINT_TO_POINTER()</FONT></CODE></A><FONT class=extract>, etc. take care to do the right thing on the every platform.</FONT></P>
<P><FONT class=extract>Warning: You may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</FONT></P></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GINT-TO-POINTER:CAPS></A>
<H3><FONT class=extract>GINT_TO_POINTER()</FONT></H3><PRE class=programlisting><FONT class=extract>#define GINT_TO_POINTER(i)&nbsp;((gpointer) (glong) (i))
</FONT></PRE>
<P><FONT class=extract>Stuffs an integer into a pointer type.</FONT></P>
<P><FONT class=extract>Remember, you may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</FONT></P>
<DIV class=refsect3><A name=id-1.3.5.6.2.6></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>i</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>integer to stuff into a pointer</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPOINTER-TO-INT:CAPS></A>
<H3><FONT class=extract>GPOINTER_TO_INT()</FONT></H3><PRE class=programlisting><FONT class=extract>#define GPOINTER_TO_INT(p)&nbsp;((gint)  (glong) (p))
</FONT></PRE>
<P><FONT class=extract>Extracts an integer from a pointer. The integer must have been stored in the pointer with </FONT><A title=GINT_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS"><CODE class=function><FONT class=extract>GINT_TO_POINTER()</FONT></CODE></A><FONT class=extract>.</FONT></P>
<P><FONT class=extract>Remember, you may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</FONT></P>
<DIV class=refsect3><A name=id-1.3.5.6.3.6></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>p</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>pointer containing an integer</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GUINT-TO-POINTER:CAPS></A>
<H3><FONT class=extract>GUINT_TO_POINTER()</FONT></H3><PRE class=programlisting><FONT class=extract>#define GUINT_TO_POINTER(u)&nbsp;((gpointer) (gulong) (u))
</FONT></PRE>
<P><FONT class=extract>Stuffs an unsigned integer into a pointer type.</FONT></P>
<DIV class=refsect3><A name=id-1.3.5.6.4.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>u</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>unsigned integer to stuff into the pointer</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPOINTER-TO-UINT:CAPS></A>
<H3><FONT class=extract>GPOINTER_TO_UINT()</FONT></H3><PRE class=programlisting><FONT class=extract>#define GPOINTER_TO_UINT(p)&nbsp;((guint) (gulong) (p))
</FONT></PRE>
<P><FONT class=extract>Extracts an unsigned integer from a pointer. The integer must have been stored in the pointer with </FONT><A title=GUINT_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GUINT-TO-POINTER:CAPS"><CODE class=function><FONT class=extract>GUINT_TO_POINTER()</FONT></CODE></A><FONT class=extract>.</FONT></P>
<DIV class=refsect3><A name=id-1.3.5.6.5.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>p</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>pointer to extract an unsigned integer from</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSIZE-TO-POINTER:CAPS></A>
<H3><FONT class=extract>GSIZE_TO_POINTER()</FONT></H3><PRE class=programlisting><FONT class=extract>#define GSIZE_TO_POINTER(s)&nbsp;((gpointer) (gsize) (s))
</FONT></PRE>
<P><FONT class=extract>Stuffs a </FONT><A title=gsize class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type><FONT class=extract>gsize</FONT></SPAN></A><FONT class=extract> into a pointer type.</FONT></P>
<DIV class=refsect3><A name=id-1.3.5.6.6.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>s</FONT></P></TD>
<TD class=parameter_description>
<P><A title=gsize class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type><FONT class=extract>gsize</FONT></SPAN></A><FONT class=extract> to stuff into the pointer</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPOINTER-TO-SIZE:CAPS></A>
<H3><FONT class=extract>GPOINTER_TO_SIZE()</FONT></H3><PRE class=programlisting><FONT class=extract>#define GPOINTER_TO_SIZE(p)&nbsp;((gsize) (p))
</FONT></PRE>
<P><FONT class=extract>Extracts a </FONT><A title=gsize class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type><FONT class=extract>gsize</FONT></SPAN></A><FONT class=extract> from a pointer. The </FONT><A title=gsize class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type><FONT class=extract>gsize</FONT></SPAN></A><FONT class=extract> must have been stored in the pointer with </FONT><A title=GSIZE_TO_POINTER() class=link href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GSIZE-TO-POINTER:CAPS"><CODE class=function><FONT class=extract>GSIZE_TO_POINTER()</FONT></CODE></A><FONT class=extract>.</FONT></P>
<DIV class=refsect3><A name=id-1.3.5.6.7.5></A>
<H4><FONT class=extract>Parameters</FONT></H4>
<DIV class=informaltable>
<TABLE width="100%" border=0>
<COLGROUP><FONT class=extract>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></FONT></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P><FONT class=extract>p</FONT></P></TD>
<TD class=parameter_description>
<P><FONT class=extract>pointer to extract a </FONT><A title=gsize class=link href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type><FONT class=extract>gsize</FONT></SPAN></A><FONT class=extract> from</FONT></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.other_details></A>
<H2>Types and Values</H2></DIV>