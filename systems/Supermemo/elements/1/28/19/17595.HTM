<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Type-Conversion-Macros.top_of_page></A>Type Conversion Macros</SPAN></H2>
<P>Type Conversion Macros &#8212; portably storing integers in pointer variables</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=GINT_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS">GINT_TO_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=GPOINTER_TO_INT() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-INT:CAPS">GPOINTER_TO_INT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=GUINT_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GUINT-TO-POINTER:CAPS">GUINT_TO_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=GPOINTER_TO_UINT() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-UINT:CAPS">GPOINTER_TO_UINT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=GSIZE_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GSIZE-TO-POINTER:CAPS">GSIZE_TO_POINTER</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=GPOINTER_TO_SIZE() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-SIZE:CAPS">GPOINTER_TO_SIZE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.description></A>
<H2>Description</H2>
<P>Many times GLib, GTK+, and other libraries allow you to pass "user data" to a callback, in the form of a void pointer. From time to time you want to pass an integer instead of a pointer. You could allocate an integer, with something like:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">int</SPAN> <SPAN class="gtkdoc opt">*</SPAN>ip <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-new">g_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class="gtkdoc kwb">int</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">*</SPAN>ip <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>But this is inconvenient, and it's annoying to have to free the memory at some later time.</P>
<P>Pointers are always at least 32 bits in size (on all platforms GLib intends to support). Thus you can store at least 32-bit integer values in a pointer value. Naively, you might try this, but it's incorrect:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4</PRE></TD>
<TD class=listing_code><PRE class=programlisting>gpointer p<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">int</SPAN> i<SPAN class="gtkdoc opt">;</SPAN>
p <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">*)</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN>
i <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">int</SPAN><SPAN class="gtkdoc opt">)</SPAN> p<SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Again, that example was not correct, don't copy it. The problem is that on some systems you need to do this:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4</PRE></TD>
<TD class=listing_code><PRE class=programlisting>gpointer p<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class="gtkdoc kwb">int</SPAN> i<SPAN class="gtkdoc opt">;</SPAN>
p <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">void</SPAN><SPAN class="gtkdoc opt">*) (</SPAN><SPAN class="gtkdoc kwb">long</SPAN><SPAN class="gtkdoc opt">)</SPAN> <SPAN class=number>42</SPAN><SPAN class="gtkdoc opt">;</SPAN>
i <SPAN class="gtkdoc opt">= (</SPAN><SPAN class="gtkdoc kwb">int</SPAN><SPAN class="gtkdoc opt">) (</SPAN><SPAN class="gtkdoc kwb">long</SPAN><SPAN class="gtkdoc opt">)</SPAN> p<SPAN class="gtkdoc opt">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>The GLib macros <A class=link title=GPOINTER_TO_INT() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GPOINTER-TO-INT:CAPS"><CODE class=function>GPOINTER_TO_INT()</CODE></A>, <A class=link title=GINT_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS"><CODE class=function>GINT_TO_POINTER()</CODE></A>, etc. take care to do the right thing on the every platform.</P>
<P>Warning: You may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</P></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GINT-TO-POINTER:CAPS></A>
<H3>GINT_TO_POINTER()</H3><PRE class=programlisting>#define GINT_TO_POINTER(i)&nbsp;((gpointer) (glong) (i))
</PRE>
<P>Stuffs an integer into a pointer type.</P>
<P>Remember, you may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</P>
<DIV class=refsect3><A name=id-1.3.5.6.2.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>i</P></TD>
<TD class=parameter_description>
<P>integer to stuff into a pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPOINTER-TO-INT:CAPS></A>
<H3>GPOINTER_TO_INT()</H3><PRE class=programlisting>#define GPOINTER_TO_INT(p)&nbsp;((gint)  (glong) (p))
</PRE>
<P>Extracts an integer from a pointer. The integer must have been stored in the pointer with <A class=link title=GINT_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS"><CODE class=function>GINT_TO_POINTER()</CODE></A>.</P>
<P>Remember, you may not store pointers in integers. This is not portable in any way, shape or form. These macros only allow storing integers in pointers, and only preserve 32 bits of the integer; values outside the range of a 32-bit integer will be mangled.</P>
<DIV class=refsect3><A name=id-1.3.5.6.3.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>p</P></TD>
<TD class=parameter_description>
<P>pointer containing an integer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GUINT-TO-POINTER:CAPS></A>
<H3>GUINT_TO_POINTER()</H3><PRE class=programlisting>#define GUINT_TO_POINTER(u)&nbsp;((gpointer) (gulong) (u))
</PRE>
<P>Stuffs an unsigned integer into a pointer type.</P>
<DIV class=refsect3><A name=id-1.3.5.6.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>u</P></TD>
<TD class=parameter_description>
<P>unsigned integer to stuff into the pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPOINTER-TO-UINT:CAPS></A>
<H3>GPOINTER_TO_UINT()</H3><PRE class=programlisting>#define GPOINTER_TO_UINT(p)&nbsp;((guint) (gulong) (p))
</PRE>
<P>Extracts an unsigned integer from a pointer. The integer must have been stored in the pointer with <A class=link title=GUINT_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GUINT-TO-POINTER:CAPS"><CODE class=function>GUINT_TO_POINTER()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.3.5.6.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>p</P></TD>
<TD class=parameter_description>
<P>pointer to extract an unsigned integer from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GSIZE-TO-POINTER:CAPS></A>
<H3>GSIZE_TO_POINTER()</H3><PRE class=programlisting>#define GSIZE_TO_POINTER(s)&nbsp;((gpointer) (gsize) (s))
</PRE>
<P>Stuffs a <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> into a pointer type.</P>
<DIV class=refsect3><A name=id-1.3.5.6.6.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>s</P></TD>
<TD class=parameter_description>
<P><A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> to stuff into the pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GPOINTER-TO-SIZE:CAPS></A>
<H3>GPOINTER_TO_SIZE()</H3><PRE class=programlisting>#define GPOINTER_TO_SIZE(p)&nbsp;((gsize) (p))
</PRE>
<P>Extracts a <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> from a pointer. The <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> must have been stored in the pointer with <A class=link title=GSIZE_TO_POINTER() href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GSIZE-TO-POINTER:CAPS"><CODE class=function>GSIZE_TO_POINTER()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.3.5.6.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>p</P></TD>
<TD class=parameter_description>
<P>pointer to extract a <A class=link title=gsize href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gsize"><SPAN class=type>gsize</SPAN></A> from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Type-Conversion-Macros.other_details></A>
<H2>Types and Values</H2></DIV>