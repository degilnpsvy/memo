<CENTER style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<P align=center><FONT size=6 face="Times New Roman, Times, serif"><B>An Introduction to the<BR>PC's (<I>Personal Computer's</I>)<BR>BIOS (Basic I/O System)</B></FONT><BR></P>
<HR>
<FONT size=4 face="Verdana, Arial, Helvetica"><B>Copyright &#169; 2007, 2011, 2012 by Daniel B. Sedory<BR></B><FONT color=#ff0000 size=3><B><FONT face="Arial, Helvetica, sans-serif">NOT to be reproduced in any form without Permission of the Author!</FONT></B></FONT></FONT></CENTER><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">

<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><FONT color=#990000><B>NOTE: This page is still under construction</B>; if a topic doesn't<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>make sense</I>, you may<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/FF.html" target=FF>contact us</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for more information.</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><FONT color=#993300><B>TO DO:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>We're planning on providing examples of different BIOS features to show how<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>incredibly complex<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>the code has become since the first PC was designed; another page will highlight a number of the routines at the assembly level of the BOCHS BIOS and a guide to using various tools to see what's inside the compressed BIOS code of some fairly recent motherboards.</FONT></P>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#HIST"><B>History of PC's BIOS</B></A></LI>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#Bchips"><B>Where is BIOS Code Stored? (BIOS Chips)</B></A></LI>
<UL>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#DetChips"><B>How to Identify your PC's Chipset</B></A></LI></UL>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#1ST"><B>Location of a PC's First Instruction</B></A></LI>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#RELEASE"><B>BIOS Release Date</B></A></LI>
<UL>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#MSDB"><B>Using DEBUG to find your BIOS Code's Release Date</B></A></LI></UL>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#COPY"><B>Copying BIOS Code from Memory</B></A></LI>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#CHECK"><B>What is a Checksum Byte?</B></A></LI>
<LI><A href="http://thestarman.pcministry.com/asm/bios/index.html#NEWFEAT"><B>There's more to modern BIOS code than most have imagined!</B></A></LI></UL><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=HIST></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">

<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Times New Roman, Times, serif">A History of the PC's BIOS</FONT></H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>It would take a group of accomplished authors working full-time to produce a textbook on the complete history of the PC BIOS in a reasonable amount of time. It will take us much longer to even produce a brief summary of how PC BIOS code has changed over the years. Though we have provided many details on special topics (such as Checksum Bytes and even some assembly listings), we are limited in the research we can conduct and the access we have to different types of computers. Nevertheless, we hope to provide some data on this subject you may not find anywhere else; we appreciate your feedback.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>Though many of the details (and their order) have changed over the years, this is a list of the fundamental operations which the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>BIOS</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<B>B</B>asic<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>I</B>nput/<B>O</B>utput<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>S</B>ystem)<B>code</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>must complete before handing control over to an operating system. Due to the complexity of the modern BIOS, completing these items is now often referred to as the POST (<I><B>P</B>ower<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>O</B>n<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>S</B>elf<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>T</B>est</I>), since the BIOS has also contained code for many other tasks and features for quite some time:</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>
<LI>Test the Processor (CPU)</LI>
<LI>Verify its own code using checksums</LI>
<LI>Test Memory; may be preceded by DMA (Direct Memory Access) testing</LI>
<LI>Test the Controller chips on the Motherboard</LI>
<UL>
<LI>Test that CPU Interrupts can be processed correctly</LI></UL>
<LI>Test and Initialize I/O Interfaces; identify any media drives connected</LI>
<UL>
<LI>Test any Serial port devices</LI></UL>
<LI>Identify any 'Option ROM' devices with BIOS code of their own</LI>
<UL>
<LI>Verify any Option ROM code using checksums</LI></UL>
<UL>
<LI>Allow such devices to run their own BIOS code and return</LI></UL>
<LI>Initialize the BIOS Data Area in Memory</LI>
<LI>Test for indications of an OS Loader on any media</LI>
<UL>
<LI>Pass control of the PC to that code</LI></UL></SPAN></UL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>As can be seen from the partial list above, a computer's BIOS is inextricably linked to its<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>hardware.</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>Therefore a history of the BIOS code must also include at least an historical summary of changes in PC hardware. Before computers with new processors, other internal devices (such as a real time clock), different types of memory, etc. ever became available to the public, they invariably required changes in the BIOS code. It's important to note the major differences (such as, bus width and addressable memory) in the Intel&#174; processor family (see table below) for any historical study of the PC's BIOS.</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" border=1 cellSpacing=0 borderColor=#000000 cellPadding=5 align=center>
<TBODY>
<TR>
<TD colSpan=6>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>A Few Relevant Facts concerning some early Intel&#174; Processors</DIV></TD></TR>
<TR>
<TD rowSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Processor<BR>(<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN>)</DIV></TD>
<TD colSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Bits per Bus</DIV></TD>
<TD rowSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Addressable<BR>Memory</DIV></TD>
<TD rowSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Initial<BR>Clock Speed</DIV></TD>
<TD rowSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Introduced</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Data</DIV></TD>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Address</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center><A href="http://en.wikipedia.org/wiki/Intel_8080" target=8080>8080</A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>8</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>16</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>64 KiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>2 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>April 1974</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center><A href="http://en.wikipedia.org/wiki/Intel_8086" target=8086>8086</A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>16</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>20</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>1 MiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>4.77 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>June 1978</DIV></TD></TR>
<TR>
<TD>
<DIV align=center><A href="http://en.wikipedia.org/wiki/Intel_8088" target=8088><B>8088</B></A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>8</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>20</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>1 MiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>4.77 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>July 1979</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center><A href="http://en.wikipedia.org/wiki/Intel_80186" target=186>80186</A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>16</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>20</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>1 MiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>6 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>JAN 1982</DIV></TD></TR>
<TR>
<TD>
<DIV align=center><A href="http://en.wikipedia.org/wiki/Intel_80186" target=188><B>80188</B></A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>8</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>20</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>1 MiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>6 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>JAN 1982</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center><A href="http://en.wikipedia.org/wiki/Intel_80286" target=286>80286</A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>16</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>24</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>16 MiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>6 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>FEB 1982</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center><A href="http://en.wikipedia.org/wiki/Intel_80386" target=386>80386</A></DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>32</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>32</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>4 GiB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>16 MHz</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1>
<DIV align=center>OCT 1985</DIV></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>Except for some early notebook CPUs (e.g.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Intel_80386#The_i386SX_variant" target=86SX>386SX</A>), all Intel processors from 80386 and later, such as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Intel_80486" target=486>80486</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(late 1989), were capable of addressing 4 GiB of Memory. But the maximum amount of memory an i486 through<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>6th-generation<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>CPU based PC (i.e., Pentium&#8482; Pro/-II/-III and Celeron&#8482;) could actually use was often determined by the Memory Control chips available to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A name=R1>motherboard</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>manufacturers. For example, a particular ASUS&#8482; motherboard (CUSL-2C); circa 2000, designed for Socket 370 Pentium&#8482; III or Celeron&#8482; processors, only supported up to 512 MiB<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N1">[<B>1</B>]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(even though CPUs which could access at least 4 GiB had been available for 15 years) due to the limitations of its<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>MCH</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(Memory Controller Hub).<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N2">[<B>2</B>]</A></SUP></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>The advent of 64-bit processors meant computers might possibly access up to<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>16 EiB</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<A href="http://thestarman.pcministry.com/asm/6to64bits.htm#N6" target=EXA>16 Binary<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Exa<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>Bytes</A>) of memory at some point in the future.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A name=R3>However,</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>all<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>7th</I>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>8th-generation<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>64-bit CPUs have been manufactured with far less than 64-bit address lines; 36-bit (for 64 GiB) and now 40-bit (for 1 TiB) are common. As noted above, a PC's<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>chipset<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>(such as its MCH) has often been the limiting factor regarding memory; and is still often true. For example, a GIGABYTE&#8482; GA-G33M-DS2R from 2007, with an LGA775 socket for many different Intel 64-bit CPUs, only supported up to 8 GiB<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N3">[<B>3</B>]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>of system memory due to the limitations of its 82G33<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Graphics and Memory Controller Hub<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>(GMCH).<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N4">[<B>4</B>]</A></SUP></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>Of course, in order to generally make use of more than 4 GiB of RAM, a 64-bit OS is also needed.<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>(Note:<SPAN class=Apple-converted-space>&nbsp;</SPAN></B>PCs with 32-bit OSs often show only about 3.2 to 3.3 GiB available when 4 GiB is installed, since addressable hardware; especially onboard video controllers, may use hundreds of MB for their own support.<B>)</B></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><FONT color=#990000 size=4>We will have more to say about how BIOS code was affected by changes in the amount of memory these processors could access.</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">&nbsp;</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=Bchips></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Times New Roman, Times, serif">Where is a PC's BIOS code stored? Various types of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>BIOS chips.</I></FONT></H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>Over the course of the PC's history, BIOS code has been stored in many different types of non-volatile memory, the first of which was truly<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Read Only Memory</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Read-only_memory" target=rom>ROM</A>), because its programming had to be encoded in the chip at the time it was fabricated. Thus, BIOS chips on early IBM<I>Personal Computers</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>often had lines printed on them which not only indicated the manufacturer's IC type, but also an IBM part number for the code it contained.<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3>In the photo below, the logo for AMD&#8482; (Advanced Micro Devices, Inc.) probably caught your attention first, being on four of the five ICs, but you'll also find the Motorola&#8482;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>batwing</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>logo (an 'M' inside a small circle) on U30. The first chip on the left (U33), with the lines "1501476 / AM9264DPC / 34146 / 8407VPM," contains the BIOS code for an IBM Model 5150, and its part number (<B>1501476</B>) identifies it as the 3rd version (October 27, 1982) of the code. These are all 24-pin, 8K-word x 8-bit ROMs, the BIOS/POST code being only 8 KiB long;<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>U29</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(5000019),<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>U30</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(5000021),<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>U31</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(5000022) and<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>U32</B>(5000023) comprise the 32 KiB ROM BASIC code.</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" align=center><IMG src="http://thestarman.pcministry.com/asm/bios/ibmpc-bios-chips.jpg" width=837 height=324><BR><FONT size=3 face="Times New Roman, serif">From a 2008 photo, courtesy of Rune Tapper,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://pc-museum.com/" target=rune>pc-museum.com</A>. (This particular IBM 5150 had been "Made in Greenock, Scotland,"<BR>some time after week 8 of 1984, since a number of chips soldered to the board had that date code; note the '8408' on U30 and U32.)</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>For testing or even small production runs,<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Programmable_read-only_memory" target=prom>PROM</A>s (one time only,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Programmable<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>ROM) or<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/EPROM" target=eprom>EPROM</A>s (<I>Erasable Programmable<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>ROM) may have been used on some computers, since the manufacturer could then test and use revised code and not be left with any ROMs in their stock having either erroneous or obsolete data. Both PROMs and EPROMs usually have part numbers beginning with<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>27</B>, but an EPROM has a small quartz window on top (often covered by a label), so its memory can be erased with a specific high intensity beam of ultra-violet light; allowing it be reused. Much later, motherboard manufacturers designed circuitry and utility programs for various types of<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/EEPROM" target=eeprom>EEPROM</A>s (<I>Electrically Erasable Programmable<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>ROM; part numbers usually begin with a<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>28</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>29</B>) that allowed users to reprogram their own PC's BIOS. [<FONT size=3>This also meant the code could be corrupted if a power-loss occurred during the upgrade process! Of course, having a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>known-good<SPAN class=Apple-converted-space>&nbsp;</SPAN></I><B>battery-backup power supply</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>could prevent that.</FONT>]</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>If the BIOS chip became corrupted, it required purchasing a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>pre-programmed<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>replacement chip; unless a user was so unlucky as to find the PC manufacturer had<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>soldered<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>the BIOS chip to the board! Even then, the BIOS chip generally still had 24 rather large pins, and an electronics hobbyist could disable (or cut away) the old chip and solder the new one to the existing legs (pins) without having to unsolder the old chip. Of course, if the cost of a programmed chip was too high, then a better board with more features would win out. The worst class of motherboards in relation to BIOS chips were those that stored the code in a chip soldered onto the board and also<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>required</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>the user to run an upgrade<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>under Windows,<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>without anything else running! So, forgetting to disconnect the Network cable or to use TASK MANAGER to kill all but the essential processes, meant you could easily<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>turn such a motherboard into a useless piece of junk!</B><BR><BR><A name=R5>PCs</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>with a better<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>design philosophy,<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>had a built-in bootstrap routine that would remain unaltered, thus allowing users to recover from failed BIOS upgrades. And more recent motherboards, may have a<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Dual BIOS</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>system<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N5">[<B>5</B>]</A></SUP>, so users can re-boot from a secondary BIOS chip that was<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>not<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>in the process of being changed if a power-loss or some other event occurs. When the PC boots-up again, it will use the secondary BIOS and the user can go back to reprogramming the primary BIOS chip. Depending upon how the board manufacturer<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>decided to implement<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>their dual BIOS design, the second chip may be a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>safety<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>chip that is 'read only' and can never be changed (GIGABYTE's design); which has the solid advantage of having some BIOS code that could always be relied upon, unless it had a hardware failure too. Or, a routine may exist to copy the successfully upgraded chip's contents to the other BIOS chip, after determining there is no problem with the updated code. The BIOS could then check that the copied code matches that of the upgraded chip, before allowing another upgrade (decidedly more difficult to program and might allow a hacker's code to be your new 'backup code').</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>Today, a PC's BIOS may reside in a small 8-pin,<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Flash_memory#Serial_flash" target=SFM>Serial Flash</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<FONT style="FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 16px" class=norS>such as the Macronix&#8482; MX25L8005; an 8 Mbit or 1024 KiB chip, with Boot Lock protection</FONT>), its code being accessed by the motherboard's<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>South Bridge<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>(<FONT style="FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 16px" class=norS>such as Intel's ICH9; I/O Controller Hub 9</FONT>) using an<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus" target=SPI>SPI</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>bus. On other bords, you may still find a 32-pin PLCC package used for the BIOS. The Dell E521 PC used such a chip (<FONT style="FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 16px" class=norS>SST 49LF040B 33-4C-NHE; a 4 Mbit chip to store up to 512 KiB of BIOS code</FONT>). Pictured<A href="http://en.wikipedia.org/wiki/File:Qfj32gel%C3%B6tet.jpg" target=PLCC>here</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an early Gigabyte DualBIOS&#8482; board using two PLCC chips.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><FONT color=#990000 size=4><B>Note:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>If you'd like to contribute to a listing of the different types of BIOS chips and methods used to access them, we'd appreciate hearing from you; perhaps including some digital photos of your motherboard (and/or a closeup of the BIOS chip, once we determine where it's located) You can<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/FF.html" target=FF>email us here</A>.</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">&nbsp;</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=DetChips></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Verdana, Arial, Helvetica, sans-serif">How to Identify your PC's Chipset</FONT></H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>The best source of information, if it's available, would be from the engineers who designed your PC's motherboard. ASUS&#8482; and GIGABYTE&#8482; both provide manuals online for most of their products; other motherboard companies may as well. A number of chips on our GIGABYTE boards were listed in these manuals. However, most likely due to the cost of support, most PC manufacturers do<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>not<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>supply you with such details.<BR><BR>But utility programs also exist which will search PC buses for ID bytes that reveal the identity of a number of its ICs. One which we've used for years is called<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>CPU-Z</B>; available in both 32- and 64-bit OS versions of installable and portable downloads:</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.cpuid.com/softwares/cpu-z.html" target=CPUZ><IMG src="http://thestarman.pcministry.com/asm/bios/cpuz.png" width=32 height=32>CPU-Z</A>. The program's<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Mainboard</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>TAB window displays whatever it knows about a PC's chipset and BIOS. Below you'll see examples for both a Gigabyte Motherboard and a Dell PC. On the left, most of the data is the same as we found in the manual. However, the data displayed here for the Dell PC (and other name-brand computers) is generally unavailable. Now we at least know it's using a chipset from NVIDIA, and some kind of Super I/O chip from SMSC ("Standard Microsystems Corporation") for its LPC (<IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Low_Pin_Count" target=LPC>Low Pin Count</A>) I/O bus. We had to examine the board to find it was an SCH55140-NS chip; whereas the Gigabyte board's LPC I/O chip from ITE shows it was an IT8718. But neither board's actual BIOS chip is listed here. To see more detailed information about your PC, you could also download<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.cpuid.com/softwares/pc-wizard.html" target=PCWIZ>PC-Wizard</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(from the same web site). The Hardware section provides information about the Mainboard, BIOS and Chipset; among many other items. And the data provided by its remaining sections is so detailed, it may overload your brain.</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<TBODY>
<TR>
<TD><IMG src="http://thestarman.pcministry.com/asm/bios/CPU-Zeg.png" width=407 height=396><BR></TD>
<TD width=7>&nbsp;</TD>
<TD><IMG src="http://thestarman.pcministry.com/asm/bios/DellPC.png" width=407 height=396></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>Once you have the Chipset data, you can search a chip manufacturer's site for details on how data in the chip might be accessed; that data can be used by independent utility programmers to show the actual contents of a BIOS chip, as well as by motherboard manufacturers for use in their own BIOS upgrade programs. Some Board manufacturers may even provide a Windows-based utility to make a copy of your BIOS code!<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>[Note:</B>We do<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>not</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>recommend performing a BIOS upgrade, unless you have been assured it will allow your PC to function in some new way you require it to; such as recognizing a larger disk drive, or fixing a problem. We are only pointing out it may be easy to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>copy the code from<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>your PC's BIOS chip using a software tool; not to use such tools for overwriting BIOS code, without considering the possibility it may become corrupted.<B>]</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>The following shows one such utility running on a PC (we used the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>PrintScreen</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>key to capture its image; NEVER do this when upgrading!) and added the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BACKGROUND-COLOR: rgb(255,255,0)" class=yel>yellow rectangle</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and caption:</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<TBODY>
<TR>
<TD><IMG src="http://thestarman.pcministry.com/asm/bios/atBIOS.PNG" width=544 height=244><BR><SPAN style="FONT-FAMILY: 'Times New Roman', Times, serif; FONT-SIZE: 12px" class=cap>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A screen capture of GIGABYTE's @BIOS&#8482; utility running under Microsoft Windows&#8482; XP.</SPAN></TD>
<TD width=7>&nbsp;</TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>This utility even shows the type of memory chip being used to store the BIOS code: "MX(IC)25L8005"; as well as its 8 Mbits capacity.<BR><BR>
<P></P></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><B>Note:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>For anyone wishing to access the BIOS code on a modern PC -<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>without such a utilty</B>, you would first need to know how to use Intel's<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><A href="http://www.intel.com/design/chipsets/industry/lpc.htm" target=LPCspec>Low Pin Count Specification</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and any possible variations in the LPC I/O Interface of the different<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/Super_I/O" target=SIO>Super I/O chip</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>manufacturers, and then figure out how to communicate with the actual BIOS chip itself; which could be an 8-pin or 32-pin flash chip of different manufacturers as well.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">&nbsp;</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=1ST></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Times New Roman, Times, serif">The Location of a PC's First Instruction</FONT></H2><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=R6></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>Virtually every PC, since the very first IBM&#174;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>produced in 1981, to the latest Intel&#174; or AMD&#174; based PC, has had exactly the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Memory</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>address<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>hard-wired<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>into its<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>CPU</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a reference for its first instruction!<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N6">[<B>6</B>]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>This means every PC's CPU will always begin executing<I>machine code<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>instructions from essentially the same location inside its BIOS chip, or for PCs that must first move (or decompress) their BIOS code to Memory, from an equivalent location in Memory. That address is:</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>F000:FFF0</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Segment:Offset</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>notation) &nbsp;or:<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>FFFF0</B>h (in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Linear</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>notation). You may also find it represented by<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>FFFF:0000</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=5>[</FONT>See Figure 1 below; as listed in<FONT style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>I</FONT>BM's original<SPAN class=Apple-converted-space>&nbsp;</SPAN><U>Technical Reference</U><SPAN class=Apple-converted-space>&nbsp;</SPAN>manual;<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3>P/N<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>6025008</B></FONT><FONT size=5>]</FONT>, or as just<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>FFFF:0</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(in<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Normalized</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>Segment:Offset notation). [<FONT size=3>Read<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/debug/Segments.html#NORM" target=SegOff>Section 3</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of our page on Segment:Offset Addressing to understand why<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>FFFF:0</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>is equivalent to the Segment<B>:</B>Offset pair<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>F000:FFF0</B>.</FONT>]</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm><FONT face="Verdana, Helvetica, sans-serif">I</FONT>BM&#174; named this address the "Power On Reset<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Vector</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>" and it always contains a<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd><I>far jump</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the beginning of the BIOS chip's Power-on RESET code. Here's a display of what you'd find in that location and the next 12 bytes of an original<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT face="Verdana, Arial, Helvetica, sans-serif">I</FONT>BM&#174; PC's BIOS chip:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" align=center><A name=RELEASE></A>
<TABLE border=1 cellSpacing=0 cellPadding=10 bgColor=#000000>
<TBODY>
<TR>
<TD><PRE><FONT color=#cccccc>Offset: 0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F    ASCII chars. 
------ -----------------------------------------------  ---------------- 
<B>0FFFF0</B></FONT> <B><FONT color=#00ff00>EA 5B E0 00 F0</FONT> <FONT color=#ffff00>30 34 2F 32 34 2F 38 31</FONT> <FONT color=#cccccc>FF FF EB</FONT>  <FONT color=#00ff00>.[...</FONT><FONT color=#ffff00>04/24/81</FONT><FONT color=#cccccc>...</FONT> </B></PRE></TD></TR></TBODY></TABLE><FONT size=3>(The two<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>FF</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes are used as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>padding<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>EB</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>at FFFFFh is the BIOS<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/bios/index.html#CHECK">Checksum byte</A>.)</FONT></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>The first five bytes (shown in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="BACKGROUND-COLOR: rgb(0,0,0)"><FONT color=#00ff00><I>green<SPAN class=Apple-converted-space>&nbsp;</SPAN></I></FONT></B>) comprise the Power-On Reset<SPAN class=Apple-converted-space>&nbsp;</SPAN><B><I>Far Jump.<SPAN class=Apple-converted-space>&nbsp;</SPAN></I></B>These 5 bytes<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>disassemble<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>to:</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" align=center><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>JMP &nbsp; F000:E05B</B></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm><FONT size=3>As you can see, Segment<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>F000:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>embedded</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>inside this instruction, thus the reason its location is often referenced as<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>F000:FFF0</B></FONT>. Although the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>location<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>of this<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>far jump</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction is essentially<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>'set in stone'<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>for all PC BIOS, it's not a requirement that where it jumps to next always be the same; yet every PC BIOS we've ever examined always jumps to "<B>F000:E05B</B>".</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm><A name=R7>Of</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>the twelve IBM engineers assigned to create the IBM<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>(model 5150), David J. Bradley<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N7">[<B>7</B>]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>developed the code for its BIOS. So he's the one who, among all its other details, decided where in Memory the BIOS would place and execute the code from the first sector of the IBM PC's first floppy diskette's Boot Record. The location he chose was 0x<B>7C00</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or 0000:7C00 in Segment:Offset notation). Unlike the first 'jump address' mentioned above (to Offset 0xE05B), later BIOS authors could<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>not</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>have chosen a different location in Memory for loading the initial bootstrap routines without having their code become incompatible with existing boot diskettes! So IBM (and all the PC-clone companies which followed) continued to use that same location in Memory for their hard disk drive's<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/mbr/index.html" target=MBRs>Master Boot Records (MBRs)</A>.</P>
<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Verdana, Arial, Helvetica, sans-serif">Release Date</FONT></H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>The next eight bytes (shown in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="BACKGROUND-COLOR: rgb(0,0,0)"><FONT color=#ffff00><I>yellow<SPAN class=Apple-converted-space>&nbsp;</SPAN></I></FONT></B>) were originally called the "<B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL>RELEASE MARKER</B>" by<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT face="Verdana, Arial, Helvetica, sans-serif">I</FONT>BM; they always contain the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>release date</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>of the BIOS code (which was<B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 22px" class=codeL><FONT size=3>04/24/81</FONT></B><SPAN class=Apple-converted-space>&nbsp;</SPAN>for those first PCs).</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" border=1 cellSpacing=0 borderColor=#999999 cellPadding=5 align=center>
<TBODY>
<TR>
<TD><A href="http://thestarman.pcministry.com/asm/bios/A-80.htm" target=A80><IMG border=0 alt="Portion of IBM Hardware Technical Reference&#10; book, page A-80" src="http://thestarman.pcministry.com/asm/bios/A-80lo.gif" width=576 height=252></A><BR></TD></TR>
<TR>
<TD>Portion of page A-80, Appendix A, "ROM BIOS Listing," in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><U>Technical Reference</U><SPAN class=Apple-converted-space>&nbsp;</SPAN>manual<BR>(IBM Part Number,<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 14px" class=codeS>6025008</FONT>), First Edition (August, 1981), of the IBM<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer<BR>Hardware Reference Library.</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&nbsp;<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT face="Arial, Helvetica, sans-serif">&nbsp; (Click on figure above for larger size.) &nbsp; &nbsp;<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>Figure 1</B></FONT></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT size=3 face="Arial, Helvetica, sans-serif">[ In Figure 1, there's an<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="BACKGROUND-COLOR: rgb(255,204,204)" class=ltred>error</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the machine code listing for the location of the Power On RESET code in the "JMP RESET" instruction. This is exactly how the original "IBM Personal Computer Technical Reference Manual," was printed. This should have been listed as:<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>EA5B<B>E0</B>00F0</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>rather than "<SPAN style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>EA5B<SPAN style="BACKGROUND-COLOR: rgb(255,204,204)" class=ltred>00</SPAN>00F0</SPAN>"; if you check the address shown on<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/bios/A-5.htm" target=A-5>page A-5</A>, it's obvious "<SPAN style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>RESET</SPAN>" begins at the address we've specified.]<BR></FONT></P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=MSDB></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>Anyone running a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Microsoft/IBM<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>OS from DOS through Windows&#8482; 7 (32-bit), should be able to enter the following DEBUG commands (<I>Windows<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>users must first<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>click on<SPAN class=Apple-converted-space>&nbsp;</SPAN></I><B>start</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8212;&gt;<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Programs</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8212;&gt;<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Accessories</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8212;&gt;<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Command prompt</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>to open a 'Command Prompt' window. Windows 7 users may be required to select 'Run As Administrator' next to the Command Prompt icon in order to access DEBUG), and obtain results similar to the following (DEBUG.EXE should already be in your<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>path</I>):</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" border=1 cellSpacing=0 cellPadding=10 bgColor=#000000 align=center>
<TBODY>
<TR>
<TD><PRE><FONT color=#cccccc>C:\&gt;<B><FONT color=#00ff00>debug</FONT></B><BR>-<B><FONT color=#00ff00>d f000:fff0</FONT><FONT color=#ffff00> </FONT></B><FONT size=2 face="Verdana, Arial, Helvetica, sans-serif"><B><FONT color=#ff0000>[To <FONT face="Courier New, Courier, mono">'dump'</FONT> the </FONT><FONT color=#cccccc><FONT size=2 face="Verdana, Arial, Helvetica, sans-serif"><B><FONT color=#ff0000>last </FONT></B></FONT></FONT><FONT color=#ff0000>16 bytes of memory Segment.]</FONT></B></FONT><BR>F000:FFF0  EA 5B E0 00 F0 30 34 2F-31 34 2F 30 33 00 FC 48   .[...<B><FONT color=#ffff00>04/14/03</FONT></B>..H <BR>-
-<FONT color=#ffff00><B><FONT color=#00ff00>u f000:fff0 l5</FONT></B></FONT><B><FONT color=#ffff00> </FONT></B><FONT size=2 face="Verdana, Arial, Helvetica, sans-serif"><B><FONT color=#ff0000>[The "<FONT face="Courier New, Courier, mono">l5</FONT>" stands for 'length of 5 bytes.]</FONT></B></FONT><BR>F000:FFF0 EA5BE000F0    JMP     F000:E05B
-
-<B><FONT color=#00ff00>q</FONT></B> <FONT size=2 face="Verdana, Arial, Helvetica, sans-serif"><B><FONT color=#ff0000>[To exit DEBUG. This is a Q for 'Quit'.]</FONT></B></FONT></FONT></PRE></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>ENTER the commands shown in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="BACKGROUND-COLOR: rgb(0,0,0)"><FONT color=#00ff00><I>green</I></FONT></B><SPAN class=Apple-converted-space>&nbsp;</SPAN>at the DEBUG prompt ("-"). You can see we have the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>Jump instruction</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>as the original<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>on this one, but this BIOS code was<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>released<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>on April 14, 2003 ("04/14/03"). (For more on the use of DEBUG, see our<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/debug/debug.htm" target=DBUG>Guide to MS-DEBUG</A>).</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>Here's a Windows&#8482; 7 (32-bit) Command Prompt using DEBUG to show its PC's BIOS<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>release date<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>of "06/18/09":</P>
<CENTER style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><IMG border=0 alt="" src="http://thestarman.pcministry.com/asm/bios/win7FFFF0.png" width=677 height=114></CENTER>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>On early PCs, RAM was an expensive and limited resource that was used as wisely as possible for the the execution of user's programs. Since the original PC could be purchased with only 16 KiB (<FONT size=3>16 x 1024 bytes = 16,384 bytes</FONT>) of memory, we know for a fact it would have been impossible to fit the 32 KiB of ROM BASIC code into memory. But using<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>half</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>the available memory for even the 8 KiB of initial<SPAN class=Apple-converted-space>&nbsp;</SPAN><A name=R8>bootstrap</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>code made no sense, since it could be accessed from its own ROM chip just as fast as any code in the dynamic RAM chips; both having a 250 nano second access time<SUP><A href="http://thestarman.pcministry.com/asm/bios/index.html#N8">[<B>8</B>]</A></SUP>. Once RAM became much faster than ROM or EEPROM ICs<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>and<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>PCs commonly had many megabytes of memory, system engineers had motive enough to first copy bootstrap routines from the BIOS code into memory, then execute it there. This made it possible for BIOS programmers to explore a number of other advantages to having their code<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>shadowed</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>in RAM; which we'll point out in our next section. But first, we need to mention some methods for making copies of whatever BIOS code still remains in memory after a PC boots up:</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=COPY></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: 18px; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>How to Save BIOS code from the First 1 MiB of a PC's Memory</H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>As we mentioned above, for first generation PCs, BIOS code always had to be read directly from its chip(s). Not only when the PC was booting-up, but every time a program used a system Interrupt or needed to access any other BIOS code stored in its ROM (Read Only Memory) chip(s). In those days, the address lines corresponding to the last segment of memory were<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>hard-wired<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>only to locations within the BIOS chip(s). Later on, PCs were made in which the BIOS code was first copied into RAM and then used from there instead of directly from the BIOS chip(s). If you have access to a PC with an Intel&#174; 80286 (or possibly one with an i386) CPU, you might be able to use DEBUG to change various bytes of the BIOS code in memory, since early computers lacked the ability to write-protect portions of memory.<BR><BR>Motherboard and BIOS chip designs are now much more advanced and vastly different in how they function before even starting the POST than those early PCs, but it's still possible to examine<SPAN class=Apple-converted-space>&nbsp;</SPAN><B><I>some<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>of the BIOS code</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>that's copied to the last 64 KiB and other Segments of a computer's first Binary Megabyte of Memory. Although early PCs often revealed an exact duplicate of the code from their BIOS chip(s), what you'll find today, for example, on a PC running Windows XP, will only be a small portion of the full BIOS code that has been copied yet again into a Virtual Memory address space used by the NTVDM program to simulate the first Megabyte and beyond of a computer's physical memory. Nevertheless, these bytes are similar to (possibly even the same as) a small section of all the bytes archived in whatever hardware is actually used to store the PC's BIOS code.<BR><BR>To make a copy of this code on your own PC, simply download and run our<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/bios/BIOSDUMP.ZIP">BIOSDUMP Batch program</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which includes a DEBUG script file that uses MS-DEBUG to read all the bytes from<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>F0000</B>h to<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>FFFFF</B>h in memory and write them to the file BIOSDUMP.BIN. Being DEBUG purists, this script file was designed to make sure the first 256 bytes of DEBUG's memory space would not be altered. (Note: This download also includes VIDEODMP.BAT and a script file for dumping the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>C000:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>segment; the standard location for VGA video BIOS code.) The scripts cause DEBUG to perform a two-step process that first copies the code to a 65,280-byte file, followed by a 256-byte file. Then the two *.BIN files are combined using the DOS "COPY /b" command; lastly, the intermediate *.BIN files are deleted.<BR><B style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>Instructions for using BIOSDUMP.ZIP:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>Simply extract all 4 files to a Windows or DOS folder of your choice, then double-click on one of the *.BAT files, or enter its name at a DOS prompt to run it. The Batch programs run the associated *.DSF Debug Script so you don't have to type in the DEBUG commands. (If run from a bootable floppy diskette, make sure a copy of DEBUG.EXE is in the same location or in<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>the path.</I>)</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd>In order to quickly<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>skim through<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>the contents of any *.BIN file created by these programs, or to search for either a text string or hex byte pattern, we recommend using the free hex/disk editor,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/tool/HexEds.htm#HxD" target=tools>HxD</A>.</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=CHECK></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Verdana, Arial, Helvetica, sans-serif">BIOS Checksum Bytes</FONT></H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>The last location in an early PC's BIOS chip was called its CHECKSUM byte. It was used to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>help<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>check that none of the chip's bytes had become corrupted (changed values). For example, the Checksum Byte of the first IBM<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>is "<B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>EB</B>". This value was computed by first adding together every preceding byte of the PC's 8 KiB BIOS code, two bytes at a time, keeping only the last 8-bits (one byte) of the sum, and finally subtracting that value from 100 hex. Thus, the Checksum Byte ensures that running an "<B>8-bit Checksum operation</B>" on every byte in the BIOS chip will produce a result of<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>zero (0)</B>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>[</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3><B>Note:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>An 8 KiB file full of only<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>FF</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes would also have an 8-bit Checksum of<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>zero</B>, but its<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>32-bit Checksum<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>would be<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>1FE000</B>; which is the sum of all 8,192 of its bytes added together (2,088,960 decimal).</FONT><B>]</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>In summary, an 8-bit Checksum Byte can be computed as follows (we also show in the table below all checksum data for the original IBM PC's three different BIOS chip versions):<BR><BR>1. When you have finished coding the BIOS, insert a Checksum Byte of 00 (or simply proceed without one).<BR>2. Use a program or utility to compute the 8-bit Checksum of these bytes.<BR>3. Subtract this checksum from 100 hexadecimal; for example, in the table below:<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>100</B>h -<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>15</B>h =<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>EB</B>.<BR>4. The result is the 8-bit Checksum Byte for the BIOS; ensuring its<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>final<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>8-bit Checksum is<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>zero</B>.</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" border=2 cellSpacing=0 borderColor=#999999 cellPadding=5 align=center>
<TBODY>
<TR>
<TD colSpan=6>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>BIOS Checksum Data for U33 of the 5150 IBM&#174;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer</I></DIV></TD></TR>
<TR>
<TD bgColor=#ffffcc rowSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>ROM Version P/N<BR>(Release Date)</DIV></TD>
<TD bgColor=#ffffcc colSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Original Checksum</DIV></TD>
<TD bgColor=#ffffcc rowSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Checksum<BR>Byte</DIV></TD>
<TD bgColor=#ffffcc colSpan=2>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>Final Checksum</DIV></TD></TR>
<TR>
<TD bgColor=#ffffcc>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>8-Bit</DIV></TD>
<TD bgColor=#ffffcc>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>32-Bit</DIV></TD>
<TD bgColor=#ffffcc>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>8-Bit</DIV></TD>
<TD bgColor=#ffffcc>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 align=center>32-Bit</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center>5700051<BR>(04/24/81)</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ffccff>
<DIV align=center>15</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ffccff>
<DIV align=center>E8515</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>EB</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>00</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>E8600</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center>5700671<BR>(10/19/81)</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ffccff>
<DIV align=center>65</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ffccff>
<DIV align=center>E8565</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>9B</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>00</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>E8600</DIV></TD></TR>
<TR>
<TD>
<DIV style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-WEIGHT: bold" class=T2 align=center>1501476<BR>(10/27/82)</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ffccff>
<DIV align=center>89</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ffccff>
<DIV align=center>EAF89</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>77</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>00</DIV></TD>
<TD style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif" class=T1 bgColor=#ccffcc>
<DIV align=center>EB000</DIV></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>If you wish to compute the 8-bit (or 16- or 32-bit) Checksum of a file, you can easily do so using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/asm/mbr/BootToolsRefs.htm#HxD" target=HXD>HxD</A>, as shown here:</P>
<CENTER style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><IMG src="http://thestarman.pcministry.com/asm/bios/Checksums.png" width=650 height=327><BR><FONT size=3>This BIOS file begins with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>part number</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>of its programmed ROM chip (<B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 14px" class=codeS>5700051</B>) followed by IBM's<BR><B>copyright phrase</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>("COPR. IBM 1981") which some have<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><B>mistaken</B><SPAN class=Apple-converted-space>&nbsp;</SPAN></I>as an erroneous spelling of 'Corp.'</FONT></CENTER>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">&nbsp;</P><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" name=NEWFEAT></A><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT face="Verdana, Arial, Helvetica, sans-serif">What Most Can Find<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Ain't<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>All There Is!<BR>(<FONT style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>Or: There's more to modern BIOS code than most have imagined!</FONT>)</FONT></H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>Although you<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>could<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>boot-up your computer with a DOS boot diskette or a CD-ROM disc so there's no chance of its memory being altered by anything but 16-bit real DOS before dumping its contents,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>even then<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>there's no assurance (without prior research) this will provide you with a copy of all the bytes actually contained in its "BIOS chip(s)". Why? Because the BIOS code may include features that are never retained in memory; for example, a PC company's<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>splash screen<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>that often appears on the display when a computer is first turned on. Or, for example, this familiar EPA ("Energy Star") Logo:</P>
<TABLE style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" border=2 cellSpacing=0 cellPadding=10 width=548 align=center height=124>
<TBODY>
<TR>
<TD bgColor=#000000 align=middle><IMG src="http://thestarman.pcministry.com/asm/bios/EPA.bmp" width=136 height=84></TD>
<TD>
<P style="FONT-FAMILY: Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=norm>This bit-map file had to be converted from a special AWARD BIOS Bit-map file ("AWBM") after extracting it from an LHA compressed file named "AwardBmp.bmp" stored within a PC's actual 128 KiB BIOS chip.</P></TD></TR></TBODY></TABLE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=norm>To see just how sophisticated modern BIOS code has become; using<SPAN class=Apple-converted-space>&nbsp;</SPAN><B><I>compression</I></B><SPAN class=Apple-converted-space>&nbsp;</SPAN>and possibly even encrypting its machine code, we've decided to delve into some of the methods used by BIOS manufacturers for our readers. We want you to see how much BIOS code has changed over the decades.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">&nbsp;</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><FONT color=#cc0000>If you have a particular interest in this topic, feel free to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://thestarman.pcministry.com/FF.html" target=FF>write to us</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>about your own PC's BIOS for help in obtaining a copy of what's actually stored in its BIOS chip(s) and/or a BIOS upgrade file.</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: 18px Verdana, Arial, Helvetica, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=verd><FONT color=#990000 size=5><B>NOTE: This page is still under construction</B></FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">&nbsp;</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=FN>&nbsp;</A></P>
<HR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<FONT style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" size=5 face="Verdana, Arial, Helvetica, sans-serif"><B>Footnotes</B></FONT><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=N1><SUP><FONT size=4 face=Verdana><B>1</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R1">Return to Text</A>]</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=4 face="Times New Roman, Times, serif">On page 8 of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3 face="Arial, Helvetica, sans-serif"><I>ASUS&#174; CUSL2-C, Intel&#174; 815EP ATX Motherboard, USER'S MANUAL,<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>Revision 1.04 E639,</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN>Copyright &#169;2000 by ASUSTeK Computer Inc., it states: "<FONT size=3 face="Arial, Helvetica, sans-serif">Equipped with<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>three Dual Inline Memory Module (DIMM) sockets to support PC100/PC133-compliant SDRAMs</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(available in 64, 128, 256, 512MB densities)<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>up to 512 MB</B></FONT>." [<B>Emphasis</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>ours.] Note: The<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=CodeM>Black Pearl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>Edition (CUSL2-CBP) was no different; its User Manual has the same note on page 12.</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=N2><SUP><FONT size=4 face=Verdana><B>2</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R1">Return to Text</A>]</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=4 face="Times New Roman, Times, serif">On page 9 of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3 face="Arial, Helvetica, sans-serif"><I>Intel&#174; 815 Chipset Family:, 82815EP and 82815P, Memory Controller Hub (MCH),<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>March 2001, Document Reference Number: 290693-002, Copyright &#169; 2000,2001 Intel Corporation,</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN>under "<FONT size=3 face="Arial, Helvetica, sans-serif">Integrated SDRAM Controller</FONT>" it lists: "<FONT size=3 face="Arial, Helvetica, sans-serif"><B>32 MB to 512 MB</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>using 16Mb/64Mb/128Mb/256Mb technology</FONT>". And on page 50, it quite clearly states: "<FONT size=3 face="Arial, Helvetica, sans-serif"><B>The maximum supported main memory capacity is 512 MB.</B></FONT>" [<B>Emphasis</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>ours.]</FONT></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT size=4 face="Times New Roman, Times, serif"><A name=N3><SUP><FONT size=4 face=Verdana><B>3</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R3">Return to Text</A>]</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=4 face="Times New Roman, Times, serif">On page 12 of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3 face="Arial, Helvetica, sans-serif"><I>GA-G33M-DS2R/, GA-G33M-S2, LGA775 socket motherboard for Intel&#174; Core&#8482; processor family/, Intel&#174; Pentium&#174; processor family/Intel&#174; Celeron&#174; processor family, User's Manual, Rev. 1003, 12ME-G33MD2R-1003R,<SPAN class=Apple-converted-space>&nbsp;</SPAN></I></FONT>&#169;2007 by GIGABYTE&#8482; you'll find: "<FONT size=3 face="Arial,&#10; Helvetica, sans-serif"><B>4 x</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>1.8V DDR2 DIMM sockets<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>supporting up to 8 GB of system memory</B></FONT>." [<B>Emphasis</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>ours.] The fact that GIGABYTE included four sockets on this board, means we'll only need to purchase DIMMs of 2 GB each when moving from a 32 to 64-bit OS to take full advantage of that 8 GiB of memory.</FONT></FONT></P><FONT style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" size=4 face="Times New Roman, Times, serif">
<P><A name=N4><SUP><FONT size=4 face=Verdana><B>4</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R3">Return to Text</A>]</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=4 face="Times New Roman, Times, serif">On page 28 of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=3 face="Arial, Helvetica, sans-serif"><I>Intel&#174; 3 Series Express Chipset, Family, Datasheet, - For the Intel&#174; 82Q35, 82Q33, 82G33 Graphics and Memory Controller Hub (GMCH) and Intel&#174; 82P35 Memory Controller Hub (MCH),<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>August 2007, you'll find: "<FONT size=3 face="Arial, Helvetica, sans-serif">Using 1 Gb device technologies,<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>the largest memory capacity possible is 8 GB</B>, assuming Dual Channel Mode with four x8 double sided un-buffered non-ECC DIMM memory configuration.</FONT>." [<B>Emphasis</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>ours.] And on page 17: "<FONT size=3 face="Arial, Helvetica, sans-serif">Supports 1-Gb, 512-Mb DDR2 or DDR3 technologies, for x8 and x16 devices,<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>8 GB maximum memory</B></FONT>." [<B>Emphasis</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>ours.]</FONT></FONT></P><FONT size=4 face="Times New Roman, Times, serif">
<P><A name=N5><SUP><FONT size=4 face=Verdana><B>5</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R5">Return to Text</A>]</FONT><SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT size=4 face="Times New Roman, Times, serif">See this link for how the motherboard manufacturer, GIGABYTE&#174;, explains their<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://www.gigabyte.com/microsite/55/tech_081226_dualbios.htm" target=DUAL>DualBIOS&#8482; system</A>.</FONT></P>
<P><A name=N6><SUP><FONT size=4 face=Verdana><B>6</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R6">Return to Text</A>]<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Technically,<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>this has not been exactly true for a long time. We're still looking for an Intel 80286 CPU Manual, but can state for certain that for any PC running on an i386 or later CPU, the BIOS chip's first instruction is actually accessed through address<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>0xFFFFFFF0</B>. This is just 16 bytes below<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>4 GiB</B>. Something to think about: How does code at that high of a Memory location become the same as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 18px" class=codeM>0xFFFF0</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>20-bit address under a first generation IBM PC processor?<BR><BR>For example, from the Intel 80386, Programmer's Reference Manual, 1986, on page 176 (of 421), under Section 10.2.3 "First Instructions," we find:</FONT></P>
<UL>
<P style="FONT-FAMILY: 'Courier New', Courier, mono; FONT-SIZE: 14px" class=codeS>After RESET, address lines A{31-20} are automatically asserted for instruction fetches. This fact, together with the initial values of CS:IP, causes instruction execution to begin at physical address FFFFFFF0H. Near (intrasegment) forms of control transfer instructions may be used to pass control to other addresses in the upper 64K bytes of the address space. The first far (intersegment) JMP or CALL instruction causes A{31-20} to drop low, and the 80386 continues executing instructions in the lower one megabyte of physical memory. This automatic assertion of address lines A{31-20} allows systems designers to use a ROM at the high end of the address space to initialize the system.</P></UL>
<P style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd><FONT color=#990000 size=4><B>We will have a lot more to say about this in the future, and hope to provide a much clearer explanation using our own memory diagrams, so everyone can understand the process.</B></FONT></P>
<P><A name=N7><SUP><FONT size=4 face=Verdana><B>7</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R7">Return to Text</A>] References: Article on<SPAN class=Apple-converted-space>&nbsp;</SPAN><IMG src="http://thestarman.pcministry.com/img/offsite.gif" width=33 height=11><SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://en.wikipedia.org/wiki/David_Bradley_%28engineer%29">David J. Bradley</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in Wikipedia.</FONT></P>
<P><A name=N8><SUP><FONT size=4 face=Verdana><B>8</B></FONT></SUP></A><FONT size=3 face="Arial, Helvetica, sans-serif">[<A href="http://thestarman.pcministry.com/asm/bios/index.html#R8">Return to Text</A>] "The ROM is packaged in 24-pin modules and has an access time of 250 ns and a cycle time of 350 ns. .... All memory is parity-checked and consists of 16 K by 1 bit or ([sic]64 K by 1 bit) chips with an access time of 250 ns and a cycle time of 410 ns." Page 1-5, "Section 1: Hardware," IBM Personal Computer<SPAN class=Apple-converted-space>&nbsp;</SPAN><U>Technical Reference</U><SPAN class=Apple-converted-space>&nbsp;</SPAN>manual, Revised Edition (April, 1983), of the IBM&#174;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>Personal Computer Hardware Reference Library.</I></FONT></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<HR>

<P style="FONT-FAMILY: Verdana, Arial, Helvetica, sans-serif; FONT-SIZE: 18px" class=verd>Published: 15 December 2007 (15.12.2007),<SPAN class=Apple-converted-space>&nbsp;</SPAN><B><I>Revised:<SPAN class=Apple-converted-space>&nbsp;</SPAN></I>27 September 2010</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(27.09.2010).<BR><I><B>Updated:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN></I>20 October 2010 (20.10.2010), 30 March 2011 (30.03.2011), 22 May 2011 (22.05.2011), 31 May 2011 (31.05.2011), 31 July 2011 (31.07.2011), 21 August 2011 (21.08.2011), 27 June 2012 (27.06.2012), 22 September 2012 (22.09.2012).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><BR><I>Last Update:<SPAN class=Apple-converted-space>&nbsp;</SPAN></I><B>12 November 2012</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(12.11.2012).</P></FONT></FONT>