<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Hash-Tables.top_of_page></A>Hash Tables</SPAN></H2>
<P>Hash Tables &#8212; associations between keys and values so that given a key the value can be found quickly</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Hash-Tables.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new">g_hash_table_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new-full">g_hash_table_new_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GHashFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashFunc">*GHashFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GEqualFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GEqualFunc">*GEqualFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-insert">g_hash_table_insert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_replace&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-replace">g_hash_table_replace</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-add">g_hash_table_add</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_contains&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-contains">g_hash_table_contains</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_size&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-size">g_hash_table_size</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup">g_hash_table_lookup</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_lookup_extended&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup-extended">g_hash_table_lookup_extended</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach">g_hash_table_foreach</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_find&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-find">g_hash_table_find</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GHFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHFunc">*GHFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-remove">g_hash_table_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_steal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-steal">g_hash_table_steal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_foreach_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach-remove">g_hash_table_foreach_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_foreach_steal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach-steal">g_hash_table_foreach_steal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_remove_all&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-remove-all">g_hash_table_remove_all</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_steal_all&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-steal-all">g_hash_table_steal_all</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_get_keys&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-get-keys">g_hash_table_get_keys</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_get_values&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-get-values">g_hash_table_get_values</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_get_keys_as_array&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-get-keys-as-array">g_hash_table_get_keys_as_array</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GHRFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHRFunc">*GHRFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_hash_table_freeze() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-freeze">g_hash_table_freeze</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_hash_table_thaw() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-thaw">g_hash_table_thaw</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_destroy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-destroy">g_hash_table_destroy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_ref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-ref">g_hash_table_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_unref&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-unref">g_hash_table_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_iter_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-init">g_hash_table_iter_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_hash_table_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-next">g_hash_table_iter_next</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_hash_table_iter_get_hash_table&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-get-hash-table">g_hash_table_iter_get_hash_table</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_iter_replace&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-replace">g_hash_table_iter_replace</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_iter_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-remove">g_hash_table_iter_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_hash_table_iter_steal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-steal">g_hash_table_iter_steal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_direct_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-equal">g_direct_equal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_direct_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-hash">g_direct_hash</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_int_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int-equal">g_int_equal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_int_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int-hash">g_int_hash</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_int64_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int64-equal">g_int64_equal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_int64_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int64-hash">g_int64_hash</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_double_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-double-equal">g_double_equal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_double_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-double-hash">g_double_hash</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_str_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-str-equal">g_str_equal</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_str_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-str-hash">g_str_hash</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Hash-Tables.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable">GHashTable</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter">GHashTableIter</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Hash-Tables.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Hash-Tables.description></A>
<H2>Description</H2>
<P>A <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> provides associations between keys and values which is optimized so that given a key, the associated value can be found very quickly.</P>
<P>Note that neither keys nor values are copied when inserted into the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, so they must exist for the lifetime of the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. This means that the use of static strings is OK, but temporary strings (i.e. those created in buffers and those returned by GTK+ widgets) should be copied with <A class=link title=g_strdup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strdup"><CODE class=function>g_strdup()</CODE></A> before being inserted.</P>
<P>If keys or values are dynamically allocated, you must be careful to ensure that they are freed when they are removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, and also when they are overwritten by new insertions into the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. It is also not advisable to mix static strings and dynamically-allocated strings in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, because it then becomes difficult to determine whether the string should be freed.</P>
<P>To create a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, use <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A>.</P>
<P>To insert a key and value into a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, use <A class=link title=g_hash_table_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-insert"><CODE class=function>g_hash_table_insert()</CODE></A>.</P>
<P>To lookup a value corresponding to a given key, use <A class=link title=g_hash_table_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup"><CODE class=function>g_hash_table_lookup()</CODE></A> and <A class=link title=g_hash_table_lookup_extended&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup-extended"><CODE class=function>g_hash_table_lookup_extended()</CODE></A>.</P>
<P>g_hash_table_lookup_extended() can also be used to simply check if a key is present in the hash table.</P>
<P>To remove a key and value, use <A class=link title=g_hash_table_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-remove"><CODE class=function>g_hash_table_remove()</CODE></A>.</P>
<P>To call a function for each key and value pair use <A class=link title=g_hash_table_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach"><CODE class=function>g_hash_table_foreach()</CODE></A> or use a iterator to iterate over the key/value pairs in the hash table, see <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A>.</P>
<P>To destroy a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> use <A class=link title=g_hash_table_destroy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-destroy"><CODE class=function>g_hash_table_destroy()</CODE></A>.</P>
<P>A common use-case for hash tables is to store information about a set of keys, without associating any particular value with each key. GHashTable optimizes one way of doing so: If you store only key-value pairs where key == value, then GHashTable does not allocate memory to store the values, which can be a considerable space saving, if your set is large. The functions <A class=link title=g_hash_table_add&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-add"><CODE class=function>g_hash_table_add()</CODE></A> and <A class=link title=g_hash_table_contains&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-contains"><CODE class=function>g_hash_table_contains()</CODE></A> are designed to be used when using <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> this way.</P></DIV>
<DIV class=refsect1><A name=glib-Hash-Tables.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-hash-table-new></A>
<H3>g_hash_table_new&nbsp;()</H3><PRE class=programlisting><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;*
g_hash_table_new (<EM class=parameter><CODE><A class=link title=GHashFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashFunc"><SPAN class=type>GHashFunc</SPAN></A> hash_func</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=GEqualFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GEqualFunc"><SPAN class=type>GEqualFunc</SPAN></A> key_equal_func</CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> with a reference count of 1.</P>
<P>Hash values returned by <EM class=parameter><CODE>hash_func</CODE></EM> are used to determine where keys are stored within the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> data structure. The <A class=link title=g_direct_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-hash"><CODE class=function>g_direct_hash()</CODE></A>, <A class=link title=g_int_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int-hash"><CODE class=function>g_int_hash()</CODE></A>, <A class=link title=g_int64_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int64-hash"><CODE class=function>g_int64_hash()</CODE></A>, <A class=link title=g_double_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-double-hash"><CODE class=function>g_double_hash()</CODE></A> and <A class=link title=g_str_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-str-hash"><CODE class=function>g_str_hash()</CODE></A> functions are provided for some common types of keys. If <EM class=parameter><CODE>hash_func</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, <A class=link title=g_direct_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-hash"><CODE class=function>g_direct_hash()</CODE></A> is used.</P>
<P><EM class=parameter><CODE>key_equal_func</CODE></EM> is used when looking up keys in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. The <A class=link title=g_direct_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-equal"><CODE class=function>g_direct_equal()</CODE></A>, <A class=link title=g_int_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int-equal"><CODE class=function>g_int_equal()</CODE></A>, <A class=link title=g_int64_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int64-equal"><CODE class=function>g_int64_equal()</CODE></A>, <A class=link title=g_double_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-double-equal"><CODE class=function>g_double_equal()</CODE></A> and <A class=link title=g_str_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-str-equal"><CODE class=function>g_str_equal()</CODE></A> functions are provided for the most common types of keys. If <EM class=parameter><CODE>key_equal_func</CODE></EM> is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, keys are compared directly in a similar fashion to <A class=link title=g_direct_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-equal"><CODE class=function>g_direct_equal()</CODE></A>, but without the overhead of a function call.</P>
<DIV class=refsect3><A name=id-1.6.7.7.2.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_func</P></TD>
<TD class=parameter_description>
<P>a function to create a hash value from a key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key_equal_func</P></TD>
<TD class=parameter_description>
<P>a function to check two keys for equality</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.2.8></A>
<H4>Returns</H4>
<P>a new <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-new-full></A>
<H3>g_hash_table_new_full&nbsp;()</H3><PRE class=programlisting><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;*
g_hash_table_new_full (<EM class=parameter><CODE><A class=link title=GHashFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashFunc"><SPAN class=type>GHashFunc</SPAN></A> hash_func</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GEqualFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GEqualFunc"><SPAN class=type>GEqualFunc</SPAN></A> key_equal_func</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> key_destroy_func</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> value_destroy_func</CODE></EM>);</PRE>
<P>Creates a new <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> like <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> with a reference count of 1 and allows to specify functions to free the memory allocated for the key and value that get called when removing the entry from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.3.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_func</P></TD>
<TD class=parameter_description>
<P>a function to create a hash value from a key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key_equal_func</P></TD>
<TD class=parameter_description>
<P>a function to check two keys for equality</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key_destroy_func</P></TD>
<TD class=parameter_description>
<P>a function to free the memory allocated for the key used when removing the entry from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if you don't want to supply such a function. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>value_destroy_func</P></TD>
<TD class=parameter_description>
<P>a function to free the memory allocated for the value used when removing the entry from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if you don't want to supply such a function. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.3.6></A>
<H4>Returns</H4>
<P>a new <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GHashFunc></A>
<H3>GHashFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GHashFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> key</CODE></EM>);</PRE>
<P>Specifies the type of the hash function which is passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> when a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> is created.</P>
<P>The function is passed a key and should return a <A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> hash value. The functions <A class=link title=g_direct_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-hash"><CODE class=function>g_direct_hash()</CODE></A>, <A class=link title=g_int_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-int-hash"><CODE class=function>g_int_hash()</CODE></A> and <A class=link title=g_str_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-str-hash"><CODE class=function>g_str_hash()</CODE></A> provide hash functions which can be used when the key is a <A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>, <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>*, and <A class=link title=gchar href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>* respectively.</P>
<P>g_direct_hash() is also the appropriate hash function for keys of the form <CODE class=literal>GINT_TO_POINTER (n)</CODE> (or similar macros).</P>
<P>&lt;!-- FIXME: Need more here. --&gt; A good hash functions should produce hash values that are evenly distributed over a fairly large range. The modulus is taken with the hash table size (a prime number) to find the 'bucket' to place each key into. The function should also be very fast, since it is called for each key lookup.</P>
<P>Note that the hash functions provided by GLib have these qualities, but are not particularly robust against manufactured keys that cause hash collisions. Therefore, you should consider choosing a more secure hash function when using a GHashTable with keys that originate in untrusted data (such as HTTP requests). Using <A class=link title=g_str_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-str-hash"><CODE class=function>g_str_hash()</CODE></A> in that situation might make your application vulerable to <A class=ulink href="https://lwn.net/Articles/474912/" target=_top>Algorithmic Complexity Attacks</A>.</P>
<P>The key to choosing a good hash is unpredictability. Even cryptographic hashes are very easy to find collisions for when the remainder is taken modulo a somewhat predictable prime number. There must be an element of randomness that an attacker is unable to guess.</P>
<DIV class=refsect3><A name=id-1.6.7.7.4.10></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.4.11></A>
<H4>Returns</H4>
<P>the hash value corresponding to the key</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GEqualFunc></A>
<H3>GEqualFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GEqualFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> a</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> b</CODE></EM>);</PRE>
<P>Specifies the type of a function used to test two values for equality. The function should return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if both values are equal and <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P>
<DIV class=refsect3><A name=id-1.6.7.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>a</P></TD>
<TD class=parameter_description>
<P>a value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>b</P></TD>
<TD class=parameter_description>
<P>a value to compare with</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.5.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>a</CODE></EM> = <EM class=parameter><CODE>b</CODE></EM> ; <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-insert></A>
<H3>g_hash_table_insert&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_insert (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> key</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> value</CODE></EM>);</PRE>
<P>Inserts a new key and value into a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>If the key already exists in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> its current value is replaced with the new value. If you supplied a <EM class=parameter><CODE>value_destroy_func</CODE></EM> when creating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, the old value is freed using that function. If you supplied a <EM class=parameter><CODE>key_destroy_func</CODE></EM> when creating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, the passed key is freed using that function.</P>
<DIV class=refsect3><A name=id-1.6.7.7.6.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key to insert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value to associate with the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.6.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key did not exist yet</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-replace></A>
<H3>g_hash_table_replace&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_replace (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> key</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> value</CODE></EM>);</PRE>
<P>Inserts a new key and value into a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> similar to <A class=link title=g_hash_table_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-insert"><CODE class=function>g_hash_table_insert()</CODE></A>. The difference is that if the key already exists in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, it gets replaced by the new key. If you supplied a <EM class=parameter><CODE>value_destroy_func</CODE></EM> when creating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, the old value is freed using that function. If you supplied a <EM class=parameter><CODE>key_destroy_func</CODE></EM> when creating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, the old key is freed using that function.</P>
<DIV class=refsect3><A name=id-1.6.7.7.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key to insert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value to associate with the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.7.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> of the key did not exist yet</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-add></A>
<H3>g_hash_table_add&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_add (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> key</CODE></EM>);</PRE>
<P>This is a convenience function for using a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> as a set. It is equivalent to calling <A class=link title=g_hash_table_replace&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-replace"><CODE class=function>g_hash_table_replace()</CODE></A> with <EM class=parameter><CODE>key</CODE></EM> as both the key and the value.</P>
<P>When a hash table only ever contains keys that have themselves as the corresponding value it is able to be stored more efficiently. See the discussion in the section description.</P>
<DIV class=refsect3><A name=id-1.6.7.7.8.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key to insert</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.8.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key did not exist yet</P>
<P></P></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-contains></A>
<H3>g_hash_table_contains&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_contains (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> key</CODE></EM>);</PRE>
<P>Checks if <EM class=parameter><CODE>key</CODE></EM> is in <EM class=parameter><CODE>hash_table</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.7.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key to check</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.32</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-size></A>
<H3>g_hash_table_size&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_hash_table_size (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Returns the number of elements contained in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.10.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.10.6></A>
<H4>Returns</H4>
<P>the number of key/value pairs in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-lookup></A>
<H3>g_hash_table_lookup&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_hash_table_lookup (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> key</CODE></EM>);</PRE>
<P>Looks up a key in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. Note that this function cannot distinguish between a key that is not present and one which is present and has the value <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If you need this distinction, use <A class=link title=g_hash_table_lookup_extended&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup-extended"><CODE class=function>g_hash_table_lookup_extended()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.11.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.11.6></A>
<H4>Returns</H4>
<P>the associated value, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the key is not found. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-lookup-extended></A>
<H3>g_hash_table_lookup_extended&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_lookup_extended (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> lookup_key</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *orig_key</CODE></EM>,
                              <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *value</CODE></EM>);</PRE>
<P>Looks up a key in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, returning the original key and the associated value and a <A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> which is <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key was found. This is useful if you need to free the memory allocated for the original key, for example before calling <A class=link title=g_hash_table_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-remove"><CODE class=function>g_hash_table_remove()</CODE></A>.</P>
<P>You can actually pass <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> for <EM class=parameter><CODE>lookup_key</CODE></EM> to test whether the <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> key exists, provided the hash and equal functions of <EM class=parameter><CODE>hash_table</CODE></EM> are <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-safe.</P>
<DIV class=refsect3><A name=id-1.6.7.7.12.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>lookup_key</P></TD>
<TD class=parameter_description>
<P>the key to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>orig_key</P></TD>
<TD class=parameter_description>
<P>return location for the original key, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>return location for the value associated with the key, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.12.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key was found in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-foreach></A>
<H3>g_hash_table_foreach&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_foreach (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=GHFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHFunc"><SPAN class=type>GHFunc</SPAN></A> func</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Calls the given function for each of the key/value pairs in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. The function is passed the key and value of each pair, and the given <EM class=parameter><CODE>user_data</CODE></EM> parameter. The hash table may not be modified while iterating over it (you can't add/remove items). To remove all items matching a predicate, use <A class=link title=g_hash_table_foreach_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach-remove"><CODE class=function>g_hash_table_foreach_remove()</CODE></A>.</P>
<P>See <A class=link title=g_hash_table_find&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-find"><CODE class=function>g_hash_table_find()</CODE></A> for performance caveats for linear order searches in contrast to <A class=link title=g_hash_table_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup"><CODE class=function>g_hash_table_lookup()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.13.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call for each key/value pair</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-find></A>
<H3>g_hash_table_find&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_hash_table_find (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=GHRFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHRFunc"><SPAN class=type>GHRFunc</SPAN></A> predicate</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Calls the given function for key/value pairs in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> until <EM class=parameter><CODE>predicate</CODE></EM> returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. The function is passed the key and value of each pair, and the given <EM class=parameter><CODE>user_data</CODE></EM> parameter. The hash table may not be modified while iterating over it (you can't add/remove items).</P>
<P>Note, that hash tables are really only optimized for forward lookups, i.e. <A class=link title=g_hash_table_lookup&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-lookup"><CODE class=function>g_hash_table_lookup()</CODE></A>. So code that frequently issues <A class=link title=g_hash_table_find&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-find"><CODE class=function>g_hash_table_find()</CODE></A> or <A class=link title=g_hash_table_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach"><CODE class=function>g_hash_table_foreach()</CODE></A> (e.g. in the order of once per every entry in a hash table) should probably be reworked to use additional or different data structures for reverse lookups (keep in mind that an O(n) find/foreach operation issued for all n values in a hash table ends up needing O(n*n) operations).</P>
<DIV class=refsect3><A name=id-1.6.7.7.14.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>predicate</P></TD>
<TD class=parameter_description>
<P>function to test the key/value pairs for a certain property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.14.7></A>
<H4>Returns</H4>
<P>The value of the first key/value pair is returned, for which <EM class=parameter><CODE>predicate</CODE></EM> evaluates to <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>. If no pair with the requested property is found, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is returned. </P>
<P><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.4</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GHFunc></A>
<H3>GHFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GHFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> key</CODE></EM>,
           <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> value</CODE></EM>,
           <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Specifies the type of the function passed to <A class=link title=g_hash_table_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach"><CODE class=function>g_hash_table_foreach()</CODE></A>. It is called with each key/value pair, together with the <EM class=parameter><CODE>user_data</CODE></EM> parameter which is passed to <A class=link title=g_hash_table_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach"><CODE class=function>g_hash_table_foreach()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.15.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value corresponding to the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <A class=link title=g_hash_table_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach"><CODE class=function>g_hash_table_foreach()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-remove></A>
<H3>g_hash_table_remove&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_remove (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> key</CODE></EM>);</PRE>
<P>Removes a key and its associated value from a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>If the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> was created using <A class=link title=g_hash_table_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new-full"><CODE class=function>g_hash_table_new_full()</CODE></A>, the key and value are freed using the supplied destroy functions, otherwise you have to make sure that any dynamically allocated values are freed yourself.</P>
<DIV class=refsect3><A name=id-1.6.7.7.16.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.16.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key was found and removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-steal></A>
<H3>g_hash_table_steal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_steal (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> key</CODE></EM>);</PRE>
<P>Removes a key and its associated value from a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> without calling the key and value destroy functions.</P>
<DIV class=refsect3><A name=id-1.6.7.7.17.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>the key to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.17.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key was found and removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-foreach-remove></A>
<H3>g_hash_table_foreach_remove&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_hash_table_foreach_remove (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=GHRFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHRFunc"><SPAN class=type>GHRFunc</SPAN></A> func</CODE></EM>,
                             <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Calls the given function for each key/value pair in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. If the function returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, then the key/value pair is removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. If you supplied key or value destroy functions when creating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, they are used to free the memory allocated for the removed keys and values.</P>
<P>See <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> for an alternative way to loop over the key/value pairs in the hash table.</P>
<DIV class=refsect3><A name=id-1.6.7.7.18.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call for each key/value pair</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.18.7></A>
<H4>Returns</H4>
<P>the number of key/value pairs removed</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-foreach-steal></A>
<H3>g_hash_table_foreach_steal&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_hash_table_foreach_steal (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=GHRFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHRFunc"><SPAN class=type>GHRFunc</SPAN></A> func</CODE></EM>,
                            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Calls the given function for each key/value pair in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. If the function returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, then the key/value pair is removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, but no key or value destroy functions are called.</P>
<P>See <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> for an alternative way to loop over the key/value pairs in the hash table.</P>
<DIV class=refsect3><A name=id-1.6.7.7.19.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call for each key/value pair</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.19.7></A>
<H4>Returns</H4>
<P>the number of key/value pairs removed.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-remove-all></A>
<H3>g_hash_table_remove_all&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_remove_all (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Removes all keys and their associated values from a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>If the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> was created using <A class=link title=g_hash_table_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new-full"><CODE class=function>g_hash_table_new_full()</CODE></A>, the keys and values are freed using the supplied destroy functions, otherwise you have to make sure that any dynamically allocated values are freed yourself.</P>
<DIV class=refsect3><A name=id-1.6.7.7.20.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.12</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-steal-all></A>
<H3>g_hash_table_steal_all&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_steal_all (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Removes all keys and their associated values from a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> without calling the key and value destroy functions.</P>
<DIV class=refsect3><A name=id-1.6.7.7.21.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.12</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-get-keys></A>
<H3>g_hash_table_get_keys&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_hash_table_get_keys (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Retrieves every key inside <EM class=parameter><CODE>hash_table</CODE></EM> . The returned data is valid until changes to the hash release those keys.</P>
<DIV class=refsect3><A name=id-1.6.7.7.22.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.22.6></A>
<H4>Returns</H4>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> containing all the keys inside the hash table. The content of the list is owned by the hash table and should not be modified or freed. Use <A class=link title=g_list_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free"><CODE class=function>g_list_free()</CODE></A> when done using the list.</P>
<P></P></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-get-values></A>
<H3>g_hash_table_get_values&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_hash_table_get_values (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Retrieves every value inside <EM class=parameter><CODE>hash_table</CODE></EM> . The returned data is valid until <EM class=parameter><CODE>hash_table</CODE></EM> is modified.</P>
<DIV class=refsect3><A name=id-1.6.7.7.23.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.23.6></A>
<H4>Returns</H4>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> containing all the values inside the hash table. The content of the list is owned by the hash table and should not be modified or freed. Use <A class=link title=g_list_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free"><CODE class=function>g_list_free()</CODE></A> when done using the list.</P>
<P></P></DIV>
<P class=since>Since 2.14</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-get-keys-as-array></A>
<H3>g_hash_table_get_keys_as_array&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>&nbsp;*
g_hash_table_get_keys_as_array (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *length</CODE></EM>);</PRE>
<P>Retrieves every key inside <EM class=parameter><CODE>hash_table</CODE></EM> , as an array.</P>
<P>The returned array is <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated but may contain <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> as a key. Use <EM class=parameter><CODE>length</CODE></EM> to determine the true length if it's possible that <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> was used as the value for a key.</P>
<P>Note: in the common case of a string-keyed <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, the return value of this function can be conveniently cast to (gchar **).</P>
<P>You should always free the return result with <A class=link title=g_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A>. In the above-mentioned case of a string-keyed hash table, it may be appropriate to use <A class=link title=g_strfreev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strfreev"><CODE class=function>g_strfreev()</CODE></A> if you call <A class=link title=g_hash_table_steal_all&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-steal-all"><CODE class=function>g_hash_table_steal_all()</CODE></A> first to transfer ownership of the keys.</P>
<DIV class=refsect3><A name=id-1.6.7.7.24.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>length</P></TD>
<TD class=parameter_description>
<P>the length of the returned array. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.24.9></A>
<H4>Returns</H4>
<P>a <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-terminated array containing each key from the table. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=length][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since 2.40</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GHRFunc></A>
<H3>GHRFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GHRFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> key</CODE></EM>,
            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> value</CODE></EM>,
            <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Specifies the type of the function passed to <A class=link title=g_hash_table_foreach_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach-remove"><CODE class=function>g_hash_table_foreach_remove()</CODE></A>. It is called with each key/value pair, together with the <EM class=parameter><CODE>user_data</CODE></EM> parameter passed to <A class=link title=g_hash_table_foreach_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-foreach-remove"><CODE class=function>g_hash_table_foreach_remove()</CODE></A>. It should return <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key/value pair should be removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.25.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value associated with the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <A class=link title=g_hash_table_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-remove"><CODE class=function>g_hash_table_remove()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.25.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the key/value pair should be removed from the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-freeze></A>
<H3>g_hash_table_freeze()</H3><PRE class=programlisting>#define             g_hash_table_freeze(hash_table)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_hash_table_freeze</CODE> is deprecated and should not be used in newly-written code.</P></DIV>
<P>This function is deprecated and will be removed in the next major release of GLib. It does nothing.</P>
<DIV class=refsect3><A name=id-1.6.7.7.26.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-thaw></A>
<H3>g_hash_table_thaw()</H3><PRE class=programlisting>#define             g_hash_table_thaw(hash_table)</PRE>
<DIV class=warning>
<P><CODE class=literal>g_hash_table_thaw</CODE> is deprecated and should not be used in newly-written code.</P></DIV>
<P>This function is deprecated and will be removed in the next major release of GLib. It does nothing.</P>
<DIV class=refsect3><A name=id-1.6.7.7.27.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-destroy></A>
<H3>g_hash_table_destroy&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_destroy (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Destroys all keys and values in the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> and decrements its reference count by 1. If keys and/or values are dynamically allocated, you should either free them first or create the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> with destroy notifiers using <A class=link title=g_hash_table_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new-full"><CODE class=function>g_hash_table_new_full()</CODE></A>. In the latter case the destroy functions you supplied will be called on all keys and values during the destruction phase.</P>
<DIV class=refsect3><A name=id-1.6.7.7.28.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-ref></A>
<H3>g_hash_table_ref&nbsp;()</H3><PRE class=programlisting><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;*
g_hash_table_ref (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Atomically increments the reference count of <EM class=parameter><CODE>hash_table</CODE></EM> by one. This function is MT-safe and may be called from any thread.</P>
<DIV class=refsect3><A name=id-1.6.7.7.29.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a valid <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.29.6></A>
<H4>Returns</H4>
<P>the passed in <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-unref></A>
<H3>g_hash_table_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_unref (<EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Atomically decrements the reference count of <EM class=parameter><CODE>hash_table</CODE></EM> by one. If the reference count drops to 0, all keys and values will be destroyed, and all memory allocated by the hash table is released. This function is MT-safe and may be called from any thread.</P>
<DIV class=refsect3><A name=id-1.6.7.7.30.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a valid <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-iter-init></A>
<H3>g_hash_table_iter_init&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_iter_init (<EM class=parameter><CODE><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> *iter</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> *hash_table</CODE></EM>);</PRE>
<P>Initializes a key/value pair iterator and associates it with <EM class=parameter><CODE>hash_table</CODE></EM> . Modifying the hash table after calling this function invalidates the returned iterator.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GHashTableIter iter<SPAN class="gtkdoc opt">;</SPAN>
gpointer key<SPAN class="gtkdoc opt">,</SPAN> value<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-init">g_hash_table_iter_init</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">,</SPAN> hash_table<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-next">g_hash_table_iter_next</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">, &amp;</SPAN>key<SPAN class="gtkdoc opt">, &amp;</SPAN>value<SPAN class="gtkdoc opt">))</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class="gtkdoc slc">// do something with key and value</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.7.7.31.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>an uninitialized <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>hash_table</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-iter-next></A>
<H3>g_hash_table_iter_next&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_hash_table_iter_next (<EM class=parameter><CODE><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> *iter</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *key</CODE></EM>,
                        <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *value</CODE></EM>);</PRE>
<P>Advances <EM class=parameter><CODE>iter</CODE></EM> and retrieves the key and/or value that are now pointed to as a result of this advancement. If <A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> is returned, <EM class=parameter><CODE>key</CODE></EM> and <EM class=parameter><CODE>value</CODE></EM> are not set, and the iterator becomes invalid.</P>
<DIV class=refsect3><A name=id-1.6.7.7.32.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>an initialized <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a location to store the key, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a location to store the value, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.32.6></A>
<H4>Returns</H4>
<P><A class=link title=FALSE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the end of the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> has been reached.</P>
<P></P></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-iter-get-hash-table></A>
<H3>g_hash_table_iter_get_hash_table&nbsp;()</H3><PRE class=programlisting><A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=returnvalue>GHashTable</SPAN></A>&nbsp;*
g_hash_table_iter_get_hash_table (<EM class=parameter><CODE><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Returns the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> associated with <EM class=parameter><CODE>iter</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.7.7.33.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>an initialized <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.33.6></A>
<H4>Returns</H4>
<P>the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> associated with <EM class=parameter><CODE>iter</CODE></EM> .</P>
<P></P></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-iter-replace></A>
<H3>g_hash_table_iter_replace&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_iter_replace (<EM class=parameter><CODE><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> *iter</CODE></EM>,
                           <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> value</CODE></EM>);</PRE>
<P>Replaces the value currently pointed to by the iterator from its associated <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. Can only be called after <A class=link title=g_hash_table_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-next"><CODE class=function>g_hash_table_iter_next()</CODE></A> returned <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>.</P>
<P>If you supplied a <EM class=parameter><CODE>value_destroy_func</CODE></EM> when creating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, the old value is freed using that function.</P>
<DIV class=refsect3><A name=id-1.6.7.7.34.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>an initialized <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value to replace with</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.30</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-iter-remove></A>
<H3>g_hash_table_iter_remove&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_iter_remove (<EM class=parameter><CODE><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Removes the key/value pair currently pointed to by the iterator from its associated <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. Can only be called after <A class=link title=g_hash_table_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-next"><CODE class=function>g_hash_table_iter_next()</CODE></A> returned <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, and cannot be called more than once for the same key/value pair.</P>
<P>If the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> was created using <A class=link title=g_hash_table_new_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new-full"><CODE class=function>g_hash_table_new_full()</CODE></A>, the key and value are freed using the supplied destroy functions, otherwise you have to make sure that any dynamically allocated values are freed yourself.</P>
<P>It is safe to continue iterating the <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> afterward:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-next">g_hash_table_iter_next</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">, &amp;</SPAN>key<SPAN class="gtkdoc opt">, &amp;</SPAN>value<SPAN class="gtkdoc opt">))</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>condition<SPAN class="gtkdoc opt">)</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-remove">g_hash_table_iter_remove</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>iter<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.7.7.35.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>an initialized <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-hash-table-iter-steal></A>
<H3>g_hash_table_iter_steal&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_hash_table_iter_steal (<EM class=parameter><CODE><A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A> *iter</CODE></EM>);</PRE>
<P>Removes the key/value pair currently pointed to by the iterator from its associated <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>, without calling the key and value destroy functions. Can only be called after <A class=link title=g_hash_table_iter_next&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-next"><CODE class=function>g_hash_table_iter_next()</CODE></A> returned <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, and cannot be called more than once for the same key/value pair.</P>
<DIV class=refsect3><A name=id-1.6.7.7.36.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>iter</P></TD>
<TD class=parameter_description>
<P>an initialized <A class=link title="struct GHashTableIter" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTableIter"><SPAN class=type>GHashTableIter</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.16</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-direct-equal></A>
<H3>g_direct_equal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_direct_equal (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v1</CODE></EM>,
                <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v2</CODE></EM>);</PRE>
<P>Compares two <A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> arguments and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if they are equal. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>key_equal_func</CODE></EM> parameter, when using opaque pointers compared by pointer value as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>This equality function is also appropriate for keys that are integers stored in pointers, such as <CODE class=literal>GINT_TO_POINTER (n)</CODE>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.37.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v1</P></TD>
<TD class=parameter_description>
<P>a key. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>v2</P></TD>
<TD class=parameter_description>
<P>a key to compare with <EM class=parameter><CODE>v1</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.37.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the two keys match.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-direct-hash></A>
<H3>g_direct_hash&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_direct_hash (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v</CODE></EM>);</PRE>
<P>Converts a gpointer to a hash value. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>hash_func</CODE></EM> parameter, when using opaque pointers compared by pointer value as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>This hash function is also appropriate for keys that are integers stored in pointers, such as <CODE class=literal>GINT_TO_POINTER (n)</CODE>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.38.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v</P></TD>
<TD class=parameter_description>
<P>a <A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> key. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL is OK, both for passing and for returning."><SPAN class=acronym>allow-none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.38.7></A>
<H4>Returns</H4>
<P>a hash value corresponding to the key.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-int-equal></A>
<H3>g_int_equal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_int_equal (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v1</CODE></EM>,
             <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v2</CODE></EM>);</PRE>
<P>Compares the two <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> values being pointed to and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if they are equal. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>key_equal_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers to integers as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>Note that this function acts on pointers to <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>, not on <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> directly: if your hash table's keys are of the form <CODE class=literal>GINT_TO_POINTER (n)</CODE>, use <A class=link title=g_direct_equal&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-equal"><CODE class=function>g_direct_equal()</CODE></A> instead.</P>
<DIV class=refsect3><A name=id-1.6.7.7.39.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v1</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v2</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> key to compare with <EM class=parameter><CODE>v1</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.39.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the two keys match.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-int-hash></A>
<H3>g_int_hash&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_int_hash (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v</CODE></EM>);</PRE>
<P>Converts a pointer to a <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> to a hash value. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>hash_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers to integer values as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>Note that this function acts on pointers to <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A>, not on <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> directly: if your hash table's keys are of the form <CODE class=literal>GINT_TO_POINTER (n)</CODE>, use <A class=link title=g_direct_hash&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-direct-hash"><CODE class=function>g_direct_hash()</CODE></A> instead.</P>
<DIV class=refsect3><A name=id-1.6.7.7.40.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.40.7></A>
<H4>Returns</H4>
<P>a hash value corresponding to the key.</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-int64-equal></A>
<H3>g_int64_equal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_int64_equal (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v1</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v2</CODE></EM>);</PRE>
<P>Compares the two <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> values being pointed to and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if they are equal. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>key_equal_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers to 64-bit integers as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.41.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v1</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v2</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> key to compare with <EM class=parameter><CODE>v1</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.41.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the two keys match.</P>
<P></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-int64-hash></A>
<H3>g_int64_hash&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_int64_hash (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v</CODE></EM>);</PRE>
<P>Converts a pointer to a <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> to a hash value.</P>
<P>It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>hash_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers to 64-bit integer values as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.42.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gint64 href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint64"><SPAN class=type>gint64</SPAN></A> key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.42.7></A>
<H4>Returns</H4>
<P>a hash value corresponding to the key.</P>
<P></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-double-equal></A>
<H3>g_double_equal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_double_equal (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v1</CODE></EM>,
                <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v2</CODE></EM>);</PRE>
<P>Compares the two <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> values being pointed to and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if they are equal. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>key_equal_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers to doubles as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.43.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v1</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v2</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> key to compare with <EM class=parameter><CODE>v1</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.43.6></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the two keys match.</P>
<P></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-double-hash></A>
<H3>g_double_hash&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_double_hash (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v</CODE></EM>);</PRE>
<P>Converts a pointer to a <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> to a hash value. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>hash_func</CODE></EM> parameter, It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>hash_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> pointers to doubles as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.44.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title=gdouble href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gdouble"><SPAN class=type>gdouble</SPAN></A> key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.44.6></A>
<H4>Returns</H4>
<P>a hash value corresponding to the key.</P>
<P></P></DIV>
<P class=since>Since 2.22</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-str-equal></A>
<H3>g_str_equal&nbsp;()</H3><PRE class=programlisting><A class=link title=gboolean href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_str_equal (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v1</CODE></EM>,
             <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v2</CODE></EM>);</PRE>
<P>Compares two strings for byte-by-byte equality and returns <A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if they are equal. It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>key_equal_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> strings as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<P>Note that this function is primarily meant as a hash table comparison function. For a general-purpose, <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>-safe string comparison function, see <A class=link title=g_strcmp0&nbsp;() href="https://developer.gnome.org/glib/stable/glib-String-Utility-Functions.html#g-strcmp0"><CODE class=function>g_strcmp0()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.45.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v1</P></TD>
<TD class=parameter_description>
<P>a key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>v2</P></TD>
<TD class=parameter_description>
<P>a key to compare with <EM class=parameter><CODE>v1</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.45.7></A>
<H4>Returns</H4>
<P><A class=link title=TRUE href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the two keys match</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-str-hash></A>
<H3>g_str_hash&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_str_hash (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> v</CODE></EM>);</PRE>
<P>Converts a string to a hash value.</P>
<P>This function implements the widely used "djb" hash apparently posted by Daniel Bernstein to comp.lang.c some time ago. The 32 bit unsigned hash value starts at 5381 and for each byte 'c' in the string, is updated: <CODE class=literal>hash = hash * 33 + c</CODE>. This function uses the signed value of each byte.</P>
<P>It can be passed to <A class=link title=g_hash_table_new&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-new"><CODE class=function>g_hash_table_new()</CODE></A> as the <EM class=parameter><CODE>hash_func</CODE></EM> parameter, when using non-<A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> strings as keys in a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.7.7.46.7></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>v</P></TD>
<TD class=parameter_description>
<P>a string key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.7.7.46.8></A>
<H4>Returns</H4>
<P>a hash value corresponding to the key</P>
<P></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Hash-Tables.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GHashTable></A>
<H3>GHashTable</H3><PRE class=programlisting>typedef struct _GHashTable GHashTable;</PRE>
<P>The <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A> struct is an opaque data structure to represent a <A class=link title="Hash Tables" href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html">Hash Table</A>. It should only be accessed via the following functions.</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GHashTableIter></A>
<H3>struct GHashTableIter</H3><PRE class=programlisting>struct GHashTableIter {
};
</PRE>
<P>A GHashTableIter structure represents an iterator that can be used to iterate over the elements of a <A class=link title=GHashTable href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#GHashTable"><SPAN class=type>GHashTable</SPAN></A>. GHashTableIter structures are typically allocated on the stack and then initialized with <A class=link title=g_hash_table_iter_init&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Hash-Tables.html#g-hash-table-iter-init"><CODE class=function>g_hash_table_iter_init()</CODE></A>.</P></DIV></DIV>