<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Doubly-Linked-Lists.top_of_page></A>Doubly-Linked Lists</SPAN></H2>
<P>Doubly-Linked Lists &#8212; linked lists that can be iterated over in both directions</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Doubly-Linked-Lists.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_append&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append">g_list_append</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_prepend&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert">g_list_insert</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_insert_before&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert-before">g_list_insert_before</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_insert_sorted&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert-sorted">g_list_insert_sorted</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove">g_list_remove</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_remove_link&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove-link">g_list_remove_link</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_delete_link&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-delete-link">g_list_delete_link</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_remove_all&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove-all">g_list_remove_all</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_list_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free">g_list_free</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_list_free_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-full">g_list_free_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_alloc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-alloc">g_list_alloc</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_list_free_1&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-1">g_list_free_1</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_list_length&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-length">g_list_length</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_copy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-copy">g_list_copy</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_copy_deep&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-copy-deep">g_list_copy_deep</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_reverse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-reverse">g_list_reverse</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-sort">g_list_sort</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GCompareFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareFunc">*GCompareFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_insert_sorted_with_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert-sorted-with-data">g_list_insert_sorted_with_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_sort_with_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-sort-with-data">g_list_sort_with_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc">*GCompareDataFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_concat&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-concat">g_list_concat</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_list_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-foreach">g_list_foreach</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A class=link title=GFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GFunc">*GFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_first&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-first">g_list_first</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_last&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-last">g_list_last</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_list_previous() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-previous">g_list_previous</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_list_next() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-next">g_list_next</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_nth&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-nth">g_list_nth</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_list_nth_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-nth-data">g_list_nth_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_nth_prev&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-nth-prev">g_list_nth_prev</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_find&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-find">g_list_find</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A class=link title=g_list_find_custom&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-find-custom">g_list_find_custom</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_list_position&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-position">g_list_position</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_list_index&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-index">g_list_index</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Doubly-Linked-Lists.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList">GList</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A class=link title=g_list_free1 href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free1">g_list_free1</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Doubly-Linked-Lists.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Doubly-Linked-Lists.description></A>
<H2>Description</H2>
<P>The <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> structure and its associated functions provide a standard doubly-linked list data structure.</P>
<P>Each element in the list contains a piece of data, together with pointers which link to the previous and next elements in the list. Using these pointers it is possible to move through the list in both directions (unlike the singly-linked <A class=link title="Singly-Linked Lists" href="https://developer.gnome.org/glib/stable/glib-Singly-Linked-Lists.html">GSList</A>, which only allows movement through the list in the forward direction).</P>
<P>The double linked list does not keep track of the number of items and does not keep track of both the start and end of the list. If you want fast access to both the start and the end of the list, and/or the number of items in the list, use a <A class=link title="Double-ended Queues" href="https://developer.gnome.org/glib/stable/glib-Double-ended-Queues.html">GQueue</A> instead.</P>
<P>The data contained in each element can be either integer values, by using one of the <A class=link title="Type Conversion Macros" href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html">Type Conversion Macros</A>, or simply pointers to any type of data.</P>
<P>List elements are allocated from the <A class=link title="Memory Slices" href="https://developer.gnome.org/glib/stable/glib-Memory-Slices.html">slice allocator</A>, which is more efficient than allocating elements individually.</P>
<P>Note that most of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> functions expect to be passed a pointer to the first element in the list. The functions which insert elements return the new start of the list, which may have changed.</P>
<P>There is no function to create a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> is considered to be a valid, empty list so you simply set a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>* to <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to initialize it.</P>
<P>To add elements, use <A class=link title=g_list_append&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append"><CODE class=function>g_list_append()</CODE></A>, <A class=link title=g_list_prepend&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend"><CODE class=function>g_list_prepend()</CODE></A>, <A class=link title=g_list_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert"><CODE class=function>g_list_insert()</CODE></A> and <A class=link title=g_list_insert_sorted&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert-sorted"><CODE class=function>g_list_insert_sorted()</CODE></A>.</P>
<P>To visit all elements in the list, use a loop over the list:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GList <SPAN class="gtkdoc opt">*</SPAN>l<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>for</SPAN> <SPAN class="gtkdoc opt">(</SPAN>l <SPAN class="gtkdoc opt">=</SPAN> list<SPAN class="gtkdoc opt">;</SPAN> l <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN> l <SPAN class="gtkdoc opt">=</SPAN> l<SPAN class="gtkdoc opt">-&gt;</SPAN>next<SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    <SPAN class="gtkdoc slc">// do something with l-&gt;data</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>To call a function for each element in the list, use <A class=link title=g_list_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-foreach"><CODE class=function>g_list_foreach()</CODE></A>.</P>
<P>To loop over the list and modify it (e.g. remove a certain element) a while loop is more appropriate, for example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10
11</PRE></TD>
<TD class=listing_code><PRE class=programlisting>GList <SPAN class="gtkdoc opt">*</SPAN>l <SPAN class="gtkdoc opt">=</SPAN> list<SPAN class="gtkdoc opt">;</SPAN>
<SPAN class=keyword>while</SPAN> <SPAN class="gtkdoc opt">(</SPAN>l <SPAN class="gtkdoc opt">!=</SPAN> NULL<SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class="gtkdoc opt">{</SPAN>
    GList <SPAN class="gtkdoc opt">*</SPAN>next <SPAN class="gtkdoc opt">=</SPAN> l<SPAN class="gtkdoc opt">-&gt;</SPAN>next<SPAN class="gtkdoc opt">;</SPAN>
    <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>should_be_removed</SPAN> <SPAN class="gtkdoc opt">(</SPAN>l<SPAN class="gtkdoc opt">))</SPAN>
      <SPAN class="gtkdoc opt">{</SPAN>
        <SPAN class="gtkdoc slc">// possibly free l-&gt;data</SPAN>
        list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-delete-link">g_list_delete_link</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> l<SPAN class="gtkdoc opt">);</SPAN>
      <SPAN class="gtkdoc opt">}</SPAN>
    l <SPAN class="gtkdoc opt">=</SPAN> next<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>To remove elements, use <A class=link title=g_list_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove"><CODE class=function>g_list_remove()</CODE></A>.</P>
<P>To navigate in a list, use <A class=link title=g_list_first&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-first"><CODE class=function>g_list_first()</CODE></A>, <A class=link title=g_list_last&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-last"><CODE class=function>g_list_last()</CODE></A>, <A class=link title=g_list_next() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-next"><CODE class=function>g_list_next()</CODE></A>, <A class=link title=g_list_previous() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-previous"><CODE class=function>g_list_previous()</CODE></A>.</P>
<P>To find elements in the list use <A class=link title=g_list_nth&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-nth"><CODE class=function>g_list_nth()</CODE></A>, <A class=link title=g_list_nth_data&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-nth-data"><CODE class=function>g_list_nth_data()</CODE></A>, <A class=link title=g_list_find&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-find"><CODE class=function>g_list_find()</CODE></A> and <A class=link title=g_list_find_custom&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-find-custom"><CODE class=function>g_list_find_custom()</CODE></A>.</P>
<P>To find the index of an element use <A class=link title=g_list_position&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-position"><CODE class=function>g_list_position()</CODE></A> and <A class=link title=g_list_index&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-index"><CODE class=function>g_list_index()</CODE></A>.</P>
<P>To free the entire list, use <A class=link title=g_list_free&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free"><CODE class=function>g_list_free()</CODE></A> or <A class=link title=g_list_free_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-full"><CODE class=function>g_list_free_full()</CODE></A>.</P></DIV>
<DIV class=refsect1><A name=glib-Doubly-Linked-Lists.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-list-append></A>
<H3>g_list_append&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_append (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Adds a new element on to the end of the list.</P>
<P>Note that the return value is the new start of the list, if <EM class=parameter><CODE>list</CODE></EM> was empty; make sure you store the new value.</P>
<P>g_list_append() has to traverse the entire list to find the end, which is inefficient when adding multiple elements. A common idiom to avoid the inefficiency is to use <A class=link title=g_list_prepend&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend"><CODE class=function>g_list_prepend()</CODE></A> and reverse the list with <A class=link title=g_list_reverse&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-reverse"><CODE class=function>g_list_reverse()</CODE></A> when all elements have been added.</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5
6
7
8
9
10</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// Notice that these are initialized to the empty list.</SPAN>
GList <SPAN class="gtkdoc opt">*</SPAN>string_list <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">, *</SPAN>number_list <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class="gtkdoc slc">// This is a list of strings.</SPAN>
string_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append">g_list_append</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>string_list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"first"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
string_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append">g_list_append</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>string_list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"second"</SPAN><SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc slc">// This is a list of integers.</SPAN>
number_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append">g_list_append</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>number_list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS">GINT_TO_POINTER</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=number>27</SPAN><SPAN class="gtkdoc opt">));</SPAN>
number_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append">g_list_append</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>number_list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html#GINT-TO-POINTER:CAPS">GINT_TO_POINTER</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=number>14</SPAN><SPAN class="gtkdoc opt">));</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.2.7.2.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the new element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.2.10></A>
<H4>Returns</H4>
<P>either <EM class=parameter><CODE>list</CODE></EM> or the new start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> if <EM class=parameter><CODE>list</CODE></EM> was <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-prepend></A>
<H3>g_list_prepend&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_prepend (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Prepends a new element on to the start of the list.</P>
<P>Note that the return value is the new start of the list, which will have changed, so make sure you store the new value. </P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3
4
5</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// Notice that it is initialized to the empty list.</SPAN>
GList <SPAN class="gtkdoc opt">*</SPAN>list <SPAN class="gtkdoc opt">=</SPAN> NULL<SPAN class="gtkdoc opt">;</SPAN>

list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"last"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"first"</SPAN><SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>Do not use this function to prepend a new element to a different element than the start of the list. Use <A class=link title=g_list_insert_before&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert-before"><CODE class=function>g_list_insert_before()</CODE></A> instead.</P>
<DIV class=refsect3><A name=id-1.6.2.7.3.9></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the new element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.3.10></A>
<H4>Returns</H4>
<P>a pointer to the newly prepended element, which is the new start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-insert></A>
<H3>g_list_insert&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_insert (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=type>gint</SPAN></A> position</CODE></EM>);</PRE>
<P>Inserts a new element into the list at the given position.</P>
<DIV class=refsect3><A name=id-1.6.2.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the new element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>position</P></TD>
<TD class=parameter_description>
<P>the position to insert the element. If this is negative, or is larger than the number of elements in the list, the new element is added on to the end of the list.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.4.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-insert-before></A>
<H3>g_list_insert_before&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_insert_before (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *sibling</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Inserts a new element into the list before the given position.</P>
<DIV class=refsect3><A name=id-1.6.2.7.5.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>sibling</P></TD>
<TD class=parameter_description>
<P>the list element before which the new element is inserted or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to insert at the end of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the new element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.5.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-insert-sorted></A>
<H3>g_list_insert_sorted&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_insert_sorted (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                      <EM class=parameter><CODE><A class=link title=GCompareFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareFunc"><SPAN class=type>GCompareFunc</SPAN></A> func</CODE></EM>);</PRE>
<P>Inserts a new element into the list, using the given comparison function to determine its position.</P>
<P>If you are adding many new elements to a list, and the number of new elements is much larger than the length of the list, use <A class=link title=g_list_prepend&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend"><CODE class=function>g_list_prepend()</CODE></A> to add the new items and sort the list afterwards with <A class=link title=g_list_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-sort"><CODE class=function>g_list_sort()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.6.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the already sorted list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the new element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to compare elements in the list. It should return a number &gt; 0 if the first parameter comes after the second parameter in the sort order.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.6.7></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-remove></A>
<H3>g_list_remove&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_remove (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
               <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes an element from a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. If two elements contain the same data, only the first is removed. If none of the elements contain the data, the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> is unchanged.</P>
<DIV class=refsect3><A name=id-1.6.2.7.7.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data of the element to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.7.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-remove-link></A>
<H3>g_list_remove_link&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_remove_link (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *llink</CODE></EM>);</PRE>
<P>Removes an element from a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, without freeing the element. The removed element's prev and next links are set to <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, so that it becomes a self-contained list with one element.</P>
<P>This function is for example used to move an element in the list (see the example for <A class=link title=g_list_concat&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-concat"><CODE class=function>g_list_concat()</CODE></A>) or to remove an element in the list before freeing its data:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2
3</PRE></TD>
<TD class=listing_code><PRE class=programlisting>list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove-link">g_list_remove_link</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> llink<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function>free_some_data_that_may_access_the_list_again</SPAN> <SPAN class="gtkdoc opt">(</SPAN>llink<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free">g_list_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>llink<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.2.7.8.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>llink</P></TD>
<TD class=parameter_description>
<P>an element in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.8.9></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-delete-link></A>
<H3>g_list_delete_link&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_delete_link (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *link_</CODE></EM>);</PRE>
<P>Removes the node link_ from the list and frees it. Compare this to <A class=link title=g_list_remove_link&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove-link"><CODE class=function>g_list_remove_link()</CODE></A> which removes the node without freeing it.</P>
<DIV class=refsect3><A name=id-1.6.2.7.9.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>link_</P></TD>
<TD class=parameter_description>
<P>node to delete from <EM class=parameter><CODE>list</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.9.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-remove-all></A>
<H3>g_list_remove_all&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_remove_all (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                   <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes all list nodes with data equal to <EM class=parameter><CODE>data</CODE></EM> . Returns the new head of the list. Contrast with <A class=link title=g_list_remove&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove"><CODE class=function>g_list_remove()</CODE></A> which removes only the first node matching the given data.</P>
<DIV class=refsect3><A name=id-1.6.2.7.10.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to remove</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.10.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-free></A>
<H3>g_list_free&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_list_free (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Frees all of the memory used by a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. The freed elements are returned to the slice allocator.</P>
<P>If list elements contain dynamically-allocated memory, you should either use <A class=link title=g_list_free_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-full"><CODE class=function>g_list_free_full()</CODE></A> or free them manually first.</P>
<DIV class=refsect3><A name=id-1.6.2.7.11.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-free-full></A>
<H3>g_list_free_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_list_free_full (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=GDestroyNotify&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> free_func</CODE></EM>);</PRE>
<P>Convenience method, which frees all the memory used by a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, and calls <EM class=parameter><CODE>free_func</CODE></EM> on every element's data.</P>
<DIV class=refsect3><A name=id-1.6.2.7.12.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>free_func</P></TD>
<TD class=parameter_description>
<P>the function to be called to free each element's data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since 2.28</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-alloc></A>
<H3>g_list_alloc&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_alloc (<EM class=parameter><CODE><SPAN class=type>void</SPAN></CODE></EM>);</PRE>
<P>Allocates space for one <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element. It is called by <A class=link title=g_list_append&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-append"><CODE class=function>g_list_append()</CODE></A>, <A class=link title=g_list_prepend&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend"><CODE class=function>g_list_prepend()</CODE></A>, <A class=link title=g_list_insert&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert"><CODE class=function>g_list_insert()</CODE></A> and <A class=link title=g_list_insert_sorted&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-insert-sorted"><CODE class=function>g_list_insert_sorted()</CODE></A> and so is rarely used on its own.</P>
<DIV class=refsect3><A name=id-1.6.2.7.13.5></A>
<H4>Returns</H4>
<P>a pointer to the newly-allocated <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-free-1></A>
<H3>g_list_free_1&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_list_free_1 (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Frees one <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element. It is usually used after <A class=link title=g_list_remove_link&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove-link"><CODE class=function>g_list_remove_link()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.14.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-length></A>
<H3>g_list_length&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_list_length (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Gets the number of elements in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<P>This function iterates over the whole list to count its elements. Use a <A class=link title="struct GQueue" href="https://developer.gnome.org/glib/stable/glib-Double-ended-Queues.html#GQueue"><SPAN class=type>GQueue</SPAN></A> instead of a GList if you regularly need the number of items.</P>
<DIV class=refsect3><A name=id-1.6.2.7.15.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.15.7></A>
<H4>Returns</H4>
<P>the number of elements in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-copy></A>
<H3>g_list_copy&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_copy (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Copies a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<P>Note that this is a "shallow" copy. If the list elements consist of pointers to data, the pointers are copied but the actual data is not. See <A class=link title=g_list_copy_deep&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-copy-deep"><CODE class=function>g_list_copy_deep()</CODE></A> if you need to copy the data as well.</P>
<DIV class=refsect3><A name=id-1.6.2.7.16.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.16.7></A>
<H4>Returns</H4>
<P>the start of the new list that holds the same data as <EM class=parameter><CODE>list</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-copy-deep></A>
<H3>g_list_copy_deep&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_copy_deep (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=GCopyFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-N-ary-Trees.html#GCopyFunc"><SPAN class=type>GCopyFunc</SPAN></A> func</CODE></EM>,
                  <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Makes a full (deep) copy of a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<P>In contrast with <A class=link title=g_list_copy&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-copy"><CODE class=function>g_list_copy()</CODE></A>, this function uses <EM class=parameter><CODE>func</CODE></EM> to make a copy of each list element, in addition to copying the list container itself.</P>
<P><EM class=parameter><CODE>func</CODE></EM> , as a <A class=link title=GCopyFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-N-ary-Trees.html#GCopyFunc"><SPAN class=type>GCopyFunc</SPAN></A>, takes two arguments, the data to be copied and a <EM class=parameter><CODE>user_data</CODE></EM> pointer. It's safe to pass <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> as user_data, if the copy function takes only one argument.</P>
<P>For instance, if <EM class=parameter><CODE>list</CODE></EM> holds a list of GObjects, you can do:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1</PRE></TD>
<TD class=listing_code><PRE class=programlisting>another_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-copy-deep">g_list_copy_deep</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">, (</SPAN>GCopyFunc<SPAN class="gtkdoc opt">)</SPAN> g_object_ref<SPAN class="gtkdoc opt">,</SPAN> NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>And, to entirely free the new list, you could do:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1</PRE></TD>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-full">g_list_free_full</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>another_list<SPAN class="gtkdoc opt">,</SPAN> g_object_unref<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.2.7.17.13></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>a copy function used to copy every element in the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to the copy function <EM class=parameter><CODE>func</CODE></EM> , or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.17.14></A>
<H4>Returns</H4>
<P>the start of the new list that holds a full copy of <EM class=parameter><CODE>list</CODE></EM> , use <A class=link title=g_list_free_full&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-full"><CODE class=function>g_list_free_full()</CODE></A> to free it</P>
<P></P></DIV>
<P class=since>Since 2.34</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-reverse></A>
<H3>g_list_reverse&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_reverse (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Reverses a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. It simply switches the next and prev pointers of each element.</P>
<DIV class=refsect3><A name=id-1.6.2.7.18.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.18.6></A>
<H4>Returns</H4>
<P>the start of the reversed <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-sort></A>
<H3>g_list_sort&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_sort (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
             <EM class=parameter><CODE><A class=link title=GCompareFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareFunc"><SPAN class=type>GCompareFunc</SPAN></A> compare_func</CODE></EM>);</PRE>
<P>Sorts a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> using the given comparison function. The algorithm used is a stable sort.</P>
<DIV class=refsect3><A name=id-1.6.2.7.19.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>the comparison function used to sort the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. This function is passed the data from 2 elements of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> and should return 0 if they are equal, a negative value if the first element comes before the second, or a positive value if the first element comes after the second.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.19.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GCompareFunc></A>
<H3>GCompareFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GCompareFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> a</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> b</CODE></EM>);</PRE>
<P>Specifies the type of a comparison function used to compare two values. The function should return a negative integer if the first value comes before the second, 0 if they are equal, or a positive integer if the first value comes after the second.</P>
<DIV class=refsect3><A name=id-1.6.2.7.20.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>a</P></TD>
<TD class=parameter_description>
<P>a value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>b</P></TD>
<TD class=parameter_description>
<P>a value to compare with</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.20.6></A>
<H4>Returns</H4>
<P>negative value if <EM class=parameter><CODE>a</CODE></EM> &lt; <EM class=parameter><CODE>b</CODE></EM> ; zero if <EM class=parameter><CODE>a</CODE></EM> = <EM class=parameter><CODE>b</CODE></EM> ; positive value if <EM class=parameter><CODE>a</CODE></EM> &gt; <EM class=parameter><CODE>b</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-insert-sorted-with-data></A>
<H3>g_list_insert_sorted_with_data&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_insert_sorted_with_data (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> func</CODE></EM>,
                                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Inserts a new element into the list, using the given comparison function to determine its position.</P>
<P>If you are adding many new elements to a list, and the number of new elements is much larger than the length of the list, use <A class=link title=g_list_prepend&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-prepend"><CODE class=function>g_list_prepend()</CODE></A> to add the new items and sort the list afterwards with <A class=link title=g_list_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-sort"><CODE class=function>g_list_sort()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.21.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the already sorted list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data for the new element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to compare elements in the list. It should return a number &gt; 0 if the first parameter comes after the second parameter in the sort order.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to comparison function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.21.7></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV>
<P class=since>Since 2.10</P></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-sort-with-data></A>
<H3>g_list_sort_with_data&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_sort_with_data (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=GCompareDataFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareDataFunc"><SPAN class=type>GCompareDataFunc</SPAN></A> compare_func</CODE></EM>,
                       <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Like <A class=link title=g_list_sort&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-sort"><CODE class=function>g_list_sort()</CODE></A>, but the comparison function accepts a user data argument.</P>
<DIV class=refsect3><A name=id-1.6.2.7.22.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>compare_func</P></TD>
<TD class=parameter_description>
<P>comparison function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to comparison function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.22.6></A>
<H4>Returns</H4>
<P>the (possibly changed) start of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GCompareDataFunc></A>
<H3>GCompareDataFunc&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
<SPAN class=c_punctuation>(</SPAN>*GCompareDataFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> a</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> b</CODE></EM>,
                     <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Specifies the type of a comparison function used to compare two values. The function should return a negative integer if the first value comes before the second, 0 if they are equal, or a positive integer if the first value comes after the second.</P>
<DIV class=refsect3><A name=id-1.6.2.7.23.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>a</P></TD>
<TD class=parameter_description>
<P>a value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>b</P></TD>
<TD class=parameter_description>
<P>a value to compare with</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.23.6></A>
<H4>Returns</H4>
<P>negative value if <EM class=parameter><CODE>a</CODE></EM> &lt; <EM class=parameter><CODE>b</CODE></EM> ; zero if <EM class=parameter><CODE>a</CODE></EM> = <EM class=parameter><CODE>b</CODE></EM> ; positive value if <EM class=parameter><CODE>a</CODE></EM> &gt; <EM class=parameter><CODE>b</CODE></EM> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-concat></A>
<H3>g_list_concat&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_concat (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list1</CODE></EM>,
               <EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list2</CODE></EM>);</PRE>
<P>Adds the second <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> onto the end of the first <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. Note that the elements of the second <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> are not copied. They are used directly.</P>
<P>This function is for example used to move an element in the list. The following example moves an element to the top of the list:</P>
<DIV class=informalexample>
<TABLE class=listing_frame border=0 cellSpacing=0 cellPadding=0>
<TBODY>
<TR>
<TD class=listing_lines align=right><PRE>1
2</PRE></TD>
<TD class=listing_code><PRE class=programlisting>list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-remove-link">g_list_remove_link</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> llink<SPAN class="gtkdoc opt">);</SPAN>
list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-concat">g_list_concat</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>llink<SPAN class="gtkdoc opt">,</SPAN> list<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=id-1.6.2.7.24.8></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list1</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>list2</P></TD>
<TD class=parameter_description>
<P>the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> to add to the end of the first <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.24.9></A>
<H4>Returns</H4>
<P>the start of the new <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, which equals <EM class=parameter><CODE>list1</CODE></EM> if not <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> </P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-foreach></A>
<H3>g_list_foreach&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_list_foreach (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                <EM class=parameter><CODE><A class=link title=GFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GFunc"><SPAN class=type>GFunc</SPAN></A> func</CODE></EM>,
                <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Calls a function for each element of a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.25.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call with each element's data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data to pass to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=GFunc></A>
<H3>GFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
          <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>Specifies the type of functions passed to <A class=link title=g_list_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-foreach"><CODE class=function>g_list_foreach()</CODE></A> and <A class=link title=g_slist_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Singly-Linked-Lists.html#g-slist-foreach"><CODE class=function>g_slist_foreach()</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.26.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the element's data</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data passed to <A class=link title=g_list_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-foreach"><CODE class=function>g_list_foreach()</CODE></A> or <A class=link title=g_slist_foreach&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Singly-Linked-Lists.html#g-slist-foreach"><CODE class=function>g_slist_foreach()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-first></A>
<H3>g_list_first&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_first (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Gets the first element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.27.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>any <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.27.6></A>
<H4>Returns</H4>
<P>the first element in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> has no elements</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-last></A>
<H3>g_list_last&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_last (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>);</PRE>
<P>Gets the last element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.28.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>any <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.28.6></A>
<H4>Returns</H4>
<P>the last element in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> has no elements</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-previous></A>
<H3>g_list_previous()</H3><PRE class=programlisting>#define             g_list_previous(list)</PRE>
<P>A convenience macro to get the previous element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. Note that it is considered perfectly acceptable to access <EM class=parameter><CODE>list-&gt;previous</CODE></EM> directly.</P>
<DIV class=refsect3><A name=id-1.6.2.7.29.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>an element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.29.6></A>
<H4>Returns</H4>
<P>the previous element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if there are no previous elements</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-next></A>
<H3>g_list_next()</H3><PRE class=programlisting>#define             g_list_next(list)</PRE>
<P>A convenience macro to get the next element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>. Note that it is considered perfectly acceptable to access <EM class=parameter><CODE>list-&gt;next</CODE></EM> directly.</P>
<DIV class=refsect3><A name=id-1.6.2.7.30.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>an element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.30.6></A>
<H4>Returns</H4>
<P>the next element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if there are no more elements</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-nth></A>
<H3>g_list_nth&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_nth (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
            <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n</CODE></EM>);</PRE>
<P>Gets the element at the given position in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.2.7.31.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n</P></TD>
<TD class=parameter_description>
<P>the position of the element, counting from 0</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.31.6></A>
<H4>Returns</H4>
<P>the element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the position is off the end of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-nth-data></A>
<H3>g_list_nth_data&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_list_nth_data (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n</CODE></EM>);</PRE>
<P>Gets the data of the element at the given position.</P>
<DIV class=refsect3><A name=id-1.6.2.7.32.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n</P></TD>
<TD class=parameter_description>
<P>the position of the element</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.32.6></A>
<H4>Returns</H4>
<P>the element's data, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the position is off the end of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-nth-prev></A>
<H3>g_list_nth_prev&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_nth_prev (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n</CODE></EM>);</PRE>
<P>Gets the element <EM class=parameter><CODE>n</CODE></EM> places before <EM class=parameter><CODE>list</CODE></EM> .</P>
<DIV class=refsect3><A name=id-1.6.2.7.33.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n</P></TD>
<TD class=parameter_description>
<P>the position of the element, counting from 0</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.33.6></A>
<H4>Returns</H4>
<P>the element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the position is off the end of the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-find></A>
<H3>g_list_find&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_find (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
             <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Finds the element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> which contains the given data.</P>
<DIV class=refsect3><A name=id-1.6.2.7.34.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the element data to find</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.34.6></A>
<H4>Returns</H4>
<P>the found <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if it is not found</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-find-custom></A>
<H3>g_list_find_custom&nbsp;()</H3><PRE class=programlisting><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=returnvalue>GList</SPAN></A>&nbsp;*
g_list_find_custom (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> data</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=GCompareFunc&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GCompareFunc"><SPAN class=type>GCompareFunc</SPAN></A> func</CODE></EM>);</PRE>
<P>Finds an element in a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, using a supplied function to find the desired element. It iterates over the list, calling the given function which should return 0 when the desired element is found. The function takes two <A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> arguments, the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element's data as the first argument and the given user data.</P>
<DIV class=refsect3><A name=id-1.6.2.7.35.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>user data passed to the function</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>func</P></TD>
<TD class=parameter_description>
<P>the function to call for each element. It should return 0 when the desired element is found</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.35.6></A>
<H4>Returns</H4>
<P>the found <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> element, or <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if it is not found</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-position></A>
<H3>g_list_position&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_list_position (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
                 <EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *llink</CODE></EM>);</PRE>
<P>Gets the position of the given element in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> (starting from 0).</P>
<DIV class=refsect3><A name=id-1.6.2.7.36.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>llink</P></TD>
<TD class=parameter_description>
<P>an element in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.36.6></A>
<H4>Returns</H4>
<P>the position of the element in the <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, or -1 if the element is not found</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-index></A>
<H3>g_list_index&nbsp;()</H3><PRE class=programlisting><A class=link title=gint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gint"><SPAN class=returnvalue>gint</SPAN></A>
g_list_index (<EM class=parameter><CODE><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> *list</CODE></EM>,
              <EM class=parameter><CODE><A class=link title=gconstpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gconstpointer"><SPAN class=type>gconstpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Gets the position of the element containing the given data (starting from 0).</P>
<DIV class=refsect3><A name=id-1.6.2.7.37.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>list</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>, this must point to the top of the list</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>the data to find</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.2.7.37.6></A>
<H4>Returns</H4>
<P>the index of the element containing the data, or -1 if the data is not found</P>
<P></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Doubly-Linked-Lists.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GList></A>
<H3>struct GList</H3><PRE class=programlisting>struct GList {
  gpointer data;
  GList *next;
  GList *prev;
};
</PRE>
<P>The <A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A> struct is used for each element in a doubly-linked list.</P>
<DIV class=refsect3><A name=id-1.6.2.8.2.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GList.data></A>data</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>holds the element's data, which can be a pointer to any kind of data, or any integer value using the <A class=link title="Type Conversion Macros" href="https://developer.gnome.org/glib/stable/glib-Type-Conversion-Macros.html">Type Conversion Macros</A></P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GList.next></A>next</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>contains the link to the next element in the list</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A class=link title="struct GList" href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#GList"><SPAN class=type>GList</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GList.prev></A>prev</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>contains the link to the previous element in the list</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-list-free1></A>
<H3>g_list_free1</H3><PRE class=programlisting>#define             g_list_free1</PRE>
<P>Another name for <A class=link title=g_list_free_1&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Doubly-Linked-Lists.html#g-list-free-1"><CODE class=function>g_list_free_1()</CODE></A>.</P></DIV></DIV>