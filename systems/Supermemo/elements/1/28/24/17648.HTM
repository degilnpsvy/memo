<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle><A name=glib-Trash-Stacks.top_of_page></A>Trash Stacks</SPAN></H2>
<P>Trash Stacks &#8212; maintain a stack of unused allocated memory chunks</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE>
<DIV class=refsect1><A name=glib-Trash-Stacks.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=functions_return width=150></COL>
<COL class=functions_name></COL></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A class=link title=g_trash_stack_push&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#g-trash-stack-push">g_trash_stack_push</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_trash_stack_pop&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#g-trash-stack-pop">g_trash_stack_pop</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_trash_stack_peek&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#g-trash-stack-peek">g_trash_stack_peek</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A> </TD>
<TD class=function_name><A class=link title=g_trash_stack_height&nbsp;() href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#g-trash-stack-height">g_trash_stack_height</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Trash-Stacks.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=name width=150></COL>
<COL class=description></COL></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack">GTrashStack</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=glib-Trash-Stacks.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=glib-Trash-Stacks.description></A>
<H2>Description</H2>
<P>A <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A> is an efficient way to keep a stack of unused allocated memory chunks. Each memory chunk is required to be large enough to hold a <A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>. This allows the stack to be maintained without any space overhead, since the stack pointers can be stored inside the memory chunks.</P>
<P>There is no function to create a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A>. A <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A>* is a perfectly valid empty stack.</P></DIV>
<DIV class=refsect1><A name=glib-Trash-Stacks.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=g-trash-stack-push></A>
<H3>g_trash_stack_push&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_trash_stack_push (<EM class=parameter><CODE><A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A> **stack_p</CODE></EM>,
                    <EM class=parameter><CODE><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data_p</CODE></EM>);</PRE>
<P>Pushes a piece of memory onto a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.6.7.2.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>stack_p</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data_p</P></TD>
<TD class=parameter_description>
<P>the piece of memory to push on the stack</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-trash-stack-pop></A>
<H3>g_trash_stack_pop&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_trash_stack_pop (<EM class=parameter><CODE><A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A> **stack_p</CODE></EM>);</PRE>
<P>Pops a piece of memory off a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A>.</P>
<DIV class=refsect3><A name=id-1.6.6.7.3.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>stack_p</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.6.7.3.6></A>
<H4>Returns</H4>
<P>the element at the top of the stack</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-trash-stack-peek></A>
<H3>g_trash_stack_peek&nbsp;()</H3><PRE class=programlisting><A class=link title=gpointer href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_trash_stack_peek (<EM class=parameter><CODE><A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A> **stack_p</CODE></EM>);</PRE>
<P>Returns the element at the top of a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A> which may be <A class=link title=NULL href="https://developer.gnome.org/glib/stable/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<DIV class=refsect3><A name=id-1.6.6.7.4.5></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>stack_p</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.6.7.4.6></A>
<H4>Returns</H4>
<P>the element at the top of the stack</P>
<P></P></DIV></DIV>
<HR>
</HR>
<DIV class=refsect2><A name=g-trash-stack-height></A>
<H3>g_trash_stack_height&nbsp;()</H3><PRE class=programlisting><A class=link title=guint href="https://developer.gnome.org/glib/stable/glib-Basic-Types.html#guint"><SPAN class=returnvalue>guint</SPAN></A>
g_trash_stack_height (<EM class=parameter><CODE><A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A> **stack_p</CODE></EM>);</PRE>
<P>Returns the height of a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A>.</P>
<P>Note that execution of this function is of O(N) complexity where N denotes the number of items on the stack.</P>
<DIV class=refsect3><A name=id-1.6.6.7.5.6></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=parameters_name width=150></COL>
<COL class=parameters_description></COL>
<COL class=parameters_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>stack_p</P></TD>
<TD class=parameter_description>
<P>a <A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=id-1.6.6.7.5.7></A>
<H4>Returns</H4>
<P>the height of the stack</P>
<P></P></DIV></DIV></DIV>
<DIV class=refsect1><A name=glib-Trash-Stacks.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GTrashStack></A>
<H3>struct GTrashStack</H3><PRE class=programlisting>struct GTrashStack {
  GTrashStack *next;
};
</PRE>
<P>Each piece of memory that is pushed onto the stack is cast to a GTrashStack*.</P>
<DIV class=refsect3><A name=id-1.6.6.8.2.5></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE border=0 width="100%">
<COLGROUP>
<COL class=struct_members_name width=300></COL>
<COL class=struct_members_description></COL>
<COL class=struct_members_annotations width=200></COL></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A class=link title="struct GTrashStack" href="https://developer.gnome.org/glib/stable/glib-Trash-Stacks.html#GTrashStack"><SPAN class=type>GTrashStack</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GTrashStack.next></A>next</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>pointer to the previous element of the stack, gets stored in the first <CODE class=literal>sizeof (gpointer)</CODE> bytes of the element</P></TD></TR></TBODY></TABLE></DIV></DIV></DIV></DIV>