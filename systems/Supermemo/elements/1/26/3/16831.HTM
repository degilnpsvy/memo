<A name=Command-Search-and-Execution></A>
<H4 class=subsection>3.7.2 Command Search and Execution</H4><A name=index-command-execution></A><A name=index-command-search></A>
<P>After a command has been split into words, if it results in a simple command and an optional list of arguments, the following actions are taken. </P>
<OL>
<LI>If the command name contains no slashes, the shell attempts to locate it. If there exists a shell function by that name, that function is invoked as described in <A href="http://www.gnu.org/software/bash/manual/html_node/Shell-Functions.html#Shell-Functions">Shell Functions</A>. 
<LI>If the name does not match a function, the shell searches for it in the list of shell builtins. If a match is found, that builtin is invoked. 
<LI>If the name is neither a shell function nor a builtin, and contains no slashes, Bash searches each element of <CODE>$PATH</CODE> for a directory containing an executable file by that name. Bash uses a hash table to remember the full pathnames of executable files to avoid multiple <CODE>PATH</CODE> searches (see the description of <CODE>hash</CODE> in <A href="http://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#Bourne-Shell-Builtins">Bourne Shell Builtins</A>). A full search of the directories in <CODE>$PATH</CODE> is performed only if the command is not found in the hash table. If the search is unsuccessful, the shell searches for a defined shell function named <SPAN class=cloze>[...]</SPAN>. If that function exists, it is invoked with the original command and the original command&#8217;s arguments as its arguments, and the function&#8217;s exit status becomes the exit status of the shell. If that function is not defined, the shell prints an error message and returns an exit status of 127. 
<LI>If the search is successful, or if the command name contains one or more slashes, the shell executes the named program in a separate execution environment. Argument 0 is set to the name given, and the remaining arguments to the command are set to the arguments supplied, if any. 
<LI>If this execution fails because the file is not in executable format, and the file is not a directory, it is assumed to be a <VAR>shell script</VAR> and the shell executes it as described in <A href="http://www.gnu.org/software/bash/manual/html_node/Shell-Scripts.html#Shell-Scripts">Shell Scripts</A>. 
<LI>If the command was not begun asynchronously, the shell waits for the command to complete and collects its exit status. </LI></OL>
<HR>

<DIV class=header>
<P>Next: <A accessKey=n href="http://www.gnu.org/software/bash/manual/html_node/Command-Execution-Environment.html#Command-Execution-Environment" rel=next>Command Execution Environment</A>, Previous: <A accessKey=p href="http://www.gnu.org/software/bash/manual/html_node/Simple-Command-Expansion.html#Simple-Command-Expansion" rel=previous>Simple Command Expansion</A>, Up: <A accessKey=u href="http://www.gnu.org/software/bash/manual/html_node/Executing-Commands.html#Executing-Commands" rel=up>Executing Commands</A> &nbsp; [<A title="Table of contents" href="http://www.gnu.org/software/bash/manual/html_node/index.html#SEC_Contents" rel=contents>Contents</A>][<A title=Index href="http://www.gnu.org/software/bash/manual/html_node/Indexes.html#Indexes" rel=index>Index</A>]</P></DIV>