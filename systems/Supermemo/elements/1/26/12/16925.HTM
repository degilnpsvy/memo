<P style="MARGIN: 6pt 0cm"><SPAN style="FONT-FAMILY: 'Arial','sans-serif'; COLOR: #252525; FONT-SIZE: 15.5pt; mso-bidi-font-size: 10.5pt; mso-ansi-language: EN" lang=EN>Computer systems that use channel I/O have special hardware components that handle all input/output operations in their entirety independently of the systems' CPU(s). The CPU of a system that uses channel I/O typically has only one<SPAN class=apple-converted-space>&nbsp;</SPAN><A title="Machine instruction" href="http://en.wikipedia.org/wiki/Machine_instruction"><SPAN style="COLOR: #0b0080">machine instruction</SPAN></A><SPAN class=apple-converted-space>&nbsp;</SPAN>in its repertoire for input and output; this instruction is used to pass input/output commands to the specialized I/O hardware in the form of<SPAN class=apple-converted-space>&nbsp;</SPAN><A title="Channel program" href="http://en.wikipedia.org/wiki/Channel_program"><SPAN style="COLOR: #0b0080">channel programs</SPAN></A>. I/O thereafter proceeds without intervention from the CPU until an event requiring notification of the operating system occurs, at which point the I/O hardware signals an interrupt to the CPU.</SPAN></P>
<P style="MARGIN: 6pt 0cm"><SPAN style="FONT-FAMILY: 'Arial','sans-serif'; COLOR: #252525; FONT-SIZE: 15.5pt; mso-bidi-font-size: 10.5pt; mso-ansi-language: EN" lang=EN><FONT class=extract>A channel is an independent hardware component that coordinates all I/O to a set of controllers or devices. It is not merely a medium of communication, despite the name; it is a<SPAN class=apple-converted-space>&nbsp;</SPAN><I>programmable</I><SPAN class=apple-converted-space>&nbsp;</SPAN>device that handles all details of I/O after being given a list of I/O operations to carry out (the channel program).</FONT></SPAN></P>
<P style="MARGIN: 6pt 0cm"><SPAN style="FONT-FAMILY: 'Arial','sans-serif'; COLOR: #252525; FONT-SIZE: 15.5pt; mso-bidi-font-size: 10.5pt; mso-ansi-language: EN" lang=EN>Each channel may support one or more controllers and/or devices, but each channel program may only be directed at one of those connected devices. A channel program contain lists of commands to the channel itself and to the controller and device to which it is directed. Once the operating system has prepared a complete list of channel commands, it executes a single I/O machine instruction to initiate the channel program; the channel thereafter assumes control of the I/O operations until they are completed.</SPAN></P>
<P style="MARGIN: 6pt 0cm"><SPAN style="FONT-FAMILY: 'Arial','sans-serif'; COLOR: #252525; FONT-SIZE: 15.5pt; mso-bidi-font-size: 10.5pt; mso-ansi-language: EN" lang=EN>It is possible to develop very complex channel programs, including testing of data and conditional branching within that channel program. This flexibility frees the CPU from the overhead of starting, monitoring, and managing individual I/O operations. The specialized channel hardware, in turn, is dedicated to I/O and can carry it out more efficiently than the CPU (and entirely in parallel with the CPU). Channel I/O is not unlike the<SPAN class=apple-converted-space>&nbsp;</SPAN><A title="Direct Memory Access" href="http://en.wikipedia.org/wiki/Direct_Memory_Access"><SPAN style="COLOR: #0b0080">Direct Memory Access</SPAN></A><SPAN class=apple-converted-space>&nbsp;</SPAN>(DMA) of microcomputers, only more complex and advanced. Most mainframe operating systems do not fully exploit all the features of channel I/O.</SPAN></P>
<P style="MARGIN: 6pt 0cm"><SPAN style="FONT-FAMILY: 'Arial','sans-serif'; COLOR: #252525; FONT-SIZE: 15.5pt; mso-bidi-font-size: 10.5pt; mso-ansi-language: EN" lang=EN>On large mainframe computer systems, CPUs are only one of several powerful hardware components that work in parallel. Special input/output controllers (the exact names of which vary from one manufacturer to another) handle I/O exclusively, and these in turn are connected to hardware channels that also are dedicated to input and output. There may be several CPUs and several I/O processors. The overall architecture optimizes input/output performance without degrading pure CPU performance. Since most real-world applications of mainframe systems are heavily I/O-intensive business applications, this architecture helps provide the very high levels of<SPAN class=apple-converted-space>&nbsp;</SPAN><A title=Throughput href="http://en.wikipedia.org/wiki/Throughput"><SPAN style="COLOR: #0b0080">throughput</SPAN></A><SPAN class=apple-converted-space>&nbsp;</SPAN>that distinguish mainframes from other types of computer.</SPAN>