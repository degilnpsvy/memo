Chapter 2. DRM Internals<BR>Prev &nbsp;Part I. DRM Core&nbsp; Next<BR>Chapter 2. DRM Internals 
<P></P>
<P>Table of Contents</P>
<P>Driver Initialization</P>
<P>&nbsp;&nbsp;&nbsp; Driver Information<BR>&nbsp;&nbsp;&nbsp; Device Registration<BR>&nbsp;&nbsp;&nbsp; Driver Load</P>
<P>Memory management</P>
<P>&nbsp;&nbsp;&nbsp; The Translation Table Manager (TTM)<BR>&nbsp;&nbsp;&nbsp; The Graphics Execution Manager (GEM)<BR>&nbsp;&nbsp;&nbsp; VMA Offset Manager<BR>&nbsp;&nbsp;&nbsp; PRIME Buffer Sharing<BR>&nbsp;&nbsp;&nbsp; PRIME Function References<BR>&nbsp;&nbsp;&nbsp; DRM MM Range Allocator<BR>&nbsp;&nbsp;&nbsp; DRM MM Range Allocator Function References</P>
<P>Mode Setting</P>
<P>&nbsp;&nbsp;&nbsp; Display Modes Function Reference<BR>&nbsp;&nbsp;&nbsp; Frame Buffer Creation<BR>&nbsp;&nbsp;&nbsp; Dumb Buffer Objects<BR>&nbsp;&nbsp;&nbsp; Output Polling<BR>&nbsp;&nbsp;&nbsp; Locking</P>
<P>KMS Initialization and Cleanup</P>
<P>&nbsp;&nbsp;&nbsp; CRTCs (struct drm_crtc)<BR>&nbsp;&nbsp;&nbsp; Planes (struct drm_plane)<BR>&nbsp;&nbsp;&nbsp; Encoders (struct drm_encoder)<BR>&nbsp;&nbsp;&nbsp; Connectors (struct drm_connector)<BR>&nbsp;&nbsp;&nbsp; Cleanup<BR>&nbsp;&nbsp;&nbsp; Output discovery and initialization example<BR>&nbsp;&nbsp;&nbsp; KMS API Functions<BR>&nbsp;&nbsp;&nbsp; KMS Locking</P>
<P>Mode Setting Helper Functions</P>
<P>&nbsp;&nbsp;&nbsp; Helper Functions<BR>&nbsp;&nbsp;&nbsp; CRTC Helper Operations<BR>&nbsp;&nbsp;&nbsp; Encoder Helper Operations<BR>&nbsp;&nbsp;&nbsp; Connector Helper Operations<BR>&nbsp;&nbsp;&nbsp; Modeset Helper Functions Reference<BR>&nbsp;&nbsp;&nbsp; Output Probing Helper Functions Reference<BR>&nbsp;&nbsp;&nbsp; fbdev Helper Functions Reference<BR>&nbsp;&nbsp;&nbsp; Display Port Helper Functions Reference<BR>&nbsp;&nbsp;&nbsp; Display Port MST Helper Functions Reference<BR>&nbsp;&nbsp;&nbsp; EDID Helper Functions Reference<BR>&nbsp;&nbsp;&nbsp; Rectangle Utilities Reference<BR>&nbsp;&nbsp;&nbsp; Flip-work Helper Reference<BR>&nbsp;&nbsp;&nbsp; HDMI Infoframes Helper Reference<BR>&nbsp;&nbsp;&nbsp; Plane Helper Reference</P>
<P>KMS Properties</P>
<P>&nbsp;&nbsp;&nbsp; Existing KMS Properties</P>
<P>Vertical Blanking</P>
<P>&nbsp;&nbsp;&nbsp; Vertical Blanking and Interrupt Handling Functions Reference</P>
<P>Open/Close, File Operations and IOCTLs</P>
<P>&nbsp;&nbsp;&nbsp; Open and Close<BR>&nbsp;&nbsp;&nbsp; File Operations<BR>&nbsp;&nbsp;&nbsp; IOCTLs</P>
<P>Legacy Support Code</P>
<P>&nbsp;&nbsp;&nbsp; Legacy Suspend/Resume<BR>&nbsp;&nbsp;&nbsp; Legacy DMA Services</P>
<P>This chapter documents DRM internals relevant to driver authors and developers working to add support for the latest features to existing drivers.</P>
<P>First, we go over some typical driver initialization requirements, like setting up command buffers, creating an initial output configuration, and initializing core services. Subsequent sections cover core internals in more detail, providing implementation notes and examples.</P>
<P>The DRM layer provides several services to graphics drivers, many of them driven by the application interfaces it provides through libdrm, the library that wraps most of the DRM ioctls. These include vblank event handling, memory management, output management, framebuffer management, command submission &amp; fencing, suspend/resume support, and DMA services.<BR>Prev &nbsp;Up&nbsp; Next<BR>Chapter 1. Introduction &nbsp;Home&nbsp; drm_pci_alloc