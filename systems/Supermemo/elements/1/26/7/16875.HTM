<SPAN style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The four write modes, of which the current one is set by writing to the<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#05">Write Mode</A><SPAN style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN>field The four write modes, simply called write modes 0-3, based on the value of the<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><A style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#05">Write Mode</A><SPAN style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium Simsun; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN>field are:</SPAN> 
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><B>Write Mode 0:</B><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write Mode 0 is the standard and most general write mode. While the other write modes are designed to perform a specific task, this mode can be used to perform most tasks as all five operations are performed on the data. The data byte from the host is first rotated as specified by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#03">Rotate Count</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field, then is replicated across all four planes. Then the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#01">Enable Set/Reset</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field selects which planes will receive their values from the host data and which will receive their data from that plane's<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#00">Set/Reset</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field location. Then the operation specified by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#03">Logical Operation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field is performed on the resulting data and the data in the read latches. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#08">Bit Mask</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field is then used to select between the resulting data and data from the latch register. Finally, the resulting data is written to the display memory planes enabled in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/seqreg.htm#02">Memory Plane Write Enable</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field. 
<LI><B>Write Mode 1:</B><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write Mode 1 is used to transfer the data in the latches register directly to the screen, affected only by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/seqreg.htm#02">Memory Plane Write Enable</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field. This can facilitate rapid transfer of data on byte boundaries from one area of video memory to another or filling areas of the display with a pattern of 8 pixels. When Write Mode 0 is used with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#08">Bit Mask</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field set to 00000000b the operation of the hardware is identical to this mode, although it is entirely possible that this mode is faster on some cards. 
<LI><B>Write Mode 2:</B><BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Write Mode 2 is used to unpack a pixel value packed into the lower 4 bits of the host data byte into the 4 display planes. In the byte from the host, the bit representing each plane will be replicated across all 8 bits of the corresponding planes. Then the operation specified by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#03">Logical Operation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field is performed on the resulting data and the data in the read latches. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#08">Bit Mask</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field is then used to select between the resulting data and data from the latch register. Finally, the resulting data is written to the display memory planes enabled in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/seqreg.htm#02">Memory Plane Write Enable</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field. 
<LI><B>Write Mode 3:</B><BR><B>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<SPAN class=Apple-converted-space>&nbsp;</SPAN></B>Write Mode 3 is used when the color written is fairly constant but the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#08">Bit Mask</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field needs to be changed frequently, such as when drawing single color lines or text. The value of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#00">Set/Reset</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field is expanded as if the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#01">Enable Set/Reset</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field were set to 1111b, regardless of its actual value. The host data is first rotated as specified by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#03">Rotate Count</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field, then is ANDed with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#08">Bit Mask</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field. The resulting value is used where the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#08">Bit Mask</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field normally would be used, selecting data from either the expansion of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/graphreg.htm#00">Set/Reset</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field or the latch register. Finally, the resulting data is written to the display memory planes enabled in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://web.stanford.edu/class/cs140/projects/pintos/specs/freevga/vga/seqreg.htm#02">Memory Plane Write Enable</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>field.</LI></UL>