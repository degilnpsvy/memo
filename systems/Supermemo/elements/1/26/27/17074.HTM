drm_vma_offset_lock_lookup<BR>Prev &nbsp;VMA Offset Manager&nbsp; Next<BR>Name</P>
<P>drm_vma_offset_lock_lookup &#8212; Lock lookup for extended private use<BR>Synopsis<BR>void drm_vma_offset_lock_lookup (&nbsp;struct drm_vma_offset_manager * mgr);<BR>&nbsp;<BR>Arguments</P>
<P>mgr</P>
<P>&nbsp;&nbsp;&nbsp; Manager object </P>
<P>Description</P>
<P>Lock VMA manager for extended lookups. Only *_locked VMA function calls are allowed while holding this lock. All other contexts are blocked from VMA until the lock is released via drm_vma_offset_unlock_lookup.</P>
<P>Use this if you need to take a reference to the objects returned by drm_vma_offset_lookup_locked before releasing this lock again.</P>
<P>This lock must not be used for anything else than extended lookups. You must not call any other VMA helpers while holding this lock.<BR>Note</P>
<P>You're in atomic-context while holding this lock!<BR>Example</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp; drm_vma_offset_lock_lookup(mgr);<BR>&nbsp;&nbsp;&nbsp;&nbsp; node = drm_vma_offset_lookup_locked(mgr);<BR>&nbsp;&nbsp;&nbsp;&nbsp; if (node)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kref_get_unless_zero(container_of(node, sth, entr));<BR>&nbsp;&nbsp;&nbsp;&nbsp; drm_vma_offset_unlock_lookup(mgr);</P>
<P>Prev &nbsp;Up&nbsp; Next<BR>drm_vma_offset_exact_lookup &nbsp;Home&nbsp; drm_vma_offset_unlock_lookup