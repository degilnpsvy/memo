drm_vma_offset_add<BR>Prev &nbsp;VMA Offset Manager&nbsp; Next<BR>Name</P>
<P>drm_vma_offset_add &#8212; Add offset node to manager<BR>Synopsis<BR>int drm_vma_offset_add (&nbsp;struct drm_vma_offset_manager * mgr,<BR>&nbsp;&nbsp;struct drm_vma_offset_node * node,<BR>&nbsp;&nbsp;unsigned long pages);<BR>&nbsp;<BR>Arguments</P>
<P>mgr</P>
<P>&nbsp;&nbsp;&nbsp; Manager object <BR>node</P>
<P>&nbsp;&nbsp;&nbsp; Node to be added <BR>pages</P>
<P>&nbsp;&nbsp;&nbsp; Allocation size visible to user-space (in number of pages) </P>
<P>Description</P>
<P>Add a node to the offset-manager. If the node was already added, this does nothing and return 0. pages is the size of the object given in number of pages. After this call succeeds, you can access the offset of the node until it is removed again.</P>
<P>If this call fails, it is safe to retry the operation or call drm_vma_offset_remove, anyway. However, no cleanup is required in that case.</P>
<P>pages is not required to be the same size as the underlying memory object that you want to map. It only limits the size that user-space can map into their address space.<BR>RETURNS</P>
<P>0 on success, negative error code on failure.<BR>Prev &nbsp;Up&nbsp; Next<BR>drm_vma_offset_lookup_locked &nbsp;Home&nbsp; drm_vma_offset_remove