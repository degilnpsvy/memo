<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><FONT class=extract><SPAN style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US>Because each reference to </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>errno </SPAN><SPAN style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US>in a threaded program carries the overhead of a function call, our example programs don&#8217;t directly assign the return value of a Pthreads function to </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>errno</SPAN></FONT><SPAN style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract>.</FONT> Instead, we use an intermediate variable and employ our </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 20pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>errExitEN() </SPAN><SPAN style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US>diagnostic function (Section 3.5.2), like so:</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>1pthread_t</SPAN><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US> *<SPAN style="COLOR: #bfbf00">thread</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>2int</SPAN><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US> <SPAN style="COLOR: #bfbf00">s</SPAN>;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>3</SPAN><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>s = pthread_create(&amp;thread, <SPAN style="COLOR: #bf00bf">NULL</SPAN>, func, &amp;arg);</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>4</SPAN><SPAN style="FONT-FAMILY: 'Lucida Console'; COLOR: #40ffff; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>if</SPAN><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US> (s != 0)</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Lucida Console'; COLOR: #00bf00; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US>5</SPAN><SPAN style="FONT-FAMILY: 'Lucida Console'; FONT-SIZE: 15pt; mso-bidi-font-size: 9.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: 'Lucida Console'" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>errExitEN(s, <SPAN style="COLOR: #00bf00">"pthread_create"</SPAN>);</SPAN>