<P style="MARGIN: 0cm 10.5pt 0pt" class=a><SPAN style="FONT-SIZE: 15pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt" lang=EN-US><EM>As can be seen from Figure 29-1, all of the per-thread stacks reside within the same virtual address space. This means that, <FONT class=clozed>given a suitable pointer, it is possible for threads to share data on each other&#8217;s stacks. This is occasionally useful, but it requires careful programming to handle the dependency that results from the fact that a local variable remains valid only for the lifetime of the stack frame in which it resides. (If a function returns, the memory region used by its stack frame may be reused by a later function call. If the thread terminates, a new thread may reuse the memory region used for the terminated thread&#8217;s stack.) Failing to correctly handle this dependency can create bugs that are hard to track down.</FONT></EM></SPAN>