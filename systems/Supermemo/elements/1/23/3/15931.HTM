<H3 style="MARGIN: 13pt 0cm"><SPAN lang=EN-US style="FONT-SIZE: 21pt; LINE-HEIGHT: 173%; mso-bidi-font-size: 16.0pt; mso-font-kerning: 0pt">31.3.1 Thread-Specific Data from the Library Function&#8217;s Perspective</SPAN></H3>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman">In order to understand the use of the thread-specific data API, we need to consider things from the point of view of a library function that uses thread-specific data:</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman">The function must allocate a separate block of storage for each thread that calls the function. This block needs to be allocated once, the first time the thread calls the function.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman">On each subsequent call from the same thread, the function needs to be able to obtain the address of the storage block that was allocated the first time this thread called the function. The function can&#8217;t maintain a pointer to the block in an automatic variable, since automatic variables disappear when the function returns; nor can it store the pointer in a static variable, since only one instance of each static variable exists in the process. The Pthreads API provides functions to handle this task.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman">Different (i.e., independent) functions may each need thread-specific data. Each function needs a method of identifying its thread-specific data (a key), as distinct from the thread-specific data used by other functions.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; TEXT-INDENT: -21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo1; tab-stops: list 21.0pt" align=left><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: Wingdings; mso-fareast-font-family: Wingdings"><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman">The function has no direct control over what happens when the thread terminates. When the thread terminates, it is probably executing code outside the function. Nevertheless, there must be some mechanism (a destructor) to ensure that the storage block allocated for this thread is automatically deallocated when the thread terminates. If this is not done, then a memory leak could occur as threads are continuously created, call the function, and then terminate.</SPAN>