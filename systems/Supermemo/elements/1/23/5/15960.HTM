<H3 style="MARGIN: 13pt 0cm"><SPAN style="LINE-HEIGHT: 173%; FONT-SIZE: 21pt; mso-bidi-font-size: 16.0pt; mso-font-kerning: 0pt" lang=EN-US>33.5.2 NPTL</SPAN></H3>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>NPTL was designed to address most of the shortcomings of LinuxThreads. In particular:</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l1 level1 lfo1; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>NPTL provides much closer conformance to the SUSv3 specification for Pthreads.</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l1 level1 lfo1; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>Applications that employ large numbers of threads scale much better under NPTL than under LinuxThreads.</SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>NPTL allows an application to create large numbers of threads. The NPTL implementers were able to run test programs that created 100,000 threads. With LinuxThreads, the practical limit on the number of threads is a few thousand. (Admittedly, very few applications need such large numbers of threads.)</EM></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>Work on implementing NPTL began in 2002 and progressed over the next year or so. In parallel, various changes were made within the Linux kernel to accommodate the requirements of NPTL. The changes that appeared in the Linux 2.6 kernel to support NPTL included the following:</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>refinements to the implementation of thread groups (Section 28.2.1);</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>the addition of futexes as a synchronization mechanism (futexes are a generic mechanism that was designed not just for NPTL);</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>the addition of new system calls (</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>get_thread_area() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>and </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>set_thread_area()</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>) to support thread-local storage;</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>support for threaded core dumps and debugging of multithreaded processes;</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>modifications to support management of signals in a manner consistent with the Pthreads model;</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>the addition of a new </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>exit_group() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>system call to terminate all of the threads in a process (starting with </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>glibc </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>2.3, </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>_exit()</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>&#8212;and thus also the </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>exit() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>library function&#8212;is aliased as a wrapper that invokes </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>exit_group()</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>, while a call to </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>pthread_exit() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>invokes the true </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>_exit() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>system call in the kernel, which terminates just the calling thread);</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>a rewrite of the kernel scheduler to allow efficient scheduling of very large numbers (i.e., thousands) of KSEs;</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>improved performance for the kernel&#8217;s process termination code; and</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l0 level1 lfo2; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>extensions to the </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>clone() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>system call (Section 28.2).</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>The essentials of the NPTL implementation are as follows:</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>Threads are created using a </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>clone() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>call that specifies the following flags:</SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>CLONE_VM | CLONE_FILES | CLONE_FS | CLONE_SIGHAND |</EM></SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>CLONE_THREAD | CLONE_SETTLS | CLONE_PARENT_SETTID |</EM></SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>CLONE_CHILD_CLEARTID | CLONE_SYSVSEM</EM></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; mso-para-margin-left: 2.0gd; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>NPTL threads share all of the information that LinuxThreads threads share,</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; mso-para-margin-left: 2.0gd; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>and more. The </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-Plain; FONT-SIZE: 12pt; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: TheSansMonoCondensed-Plain" lang=EN-US>CLONE_THREAD </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>flag means that a thread is placed in the same</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; mso-para-margin-left: 2.0gd; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>thread group as its creator and shares the same process ID and parent process</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; mso-para-margin-left: 2.0gd; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>ID. The </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-Plain; FONT-SIZE: 12pt; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-hansi-font-family: Wingdings; mso-bidi-font-family: TheSansMonoCondensed-Plain" lang=EN-US>CLONE_SYSVSEM </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>flag means that a thread shares System V semaphore</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 21pt; mso-para-margin-left: 2.0gd; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>undo values with its creator.</SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>When we use ps(1) to list a multithreaded process running under NPTL, we</EM></SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>see just a single line of output. To see information about the threads within a</EM></SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>process, we can use the ps &#8211;L option.</EM></SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>The implementation makes internal use of the first two realtime signals. Applications can&#8217;t use these signals.</SPAN></P>
<P style="MARGIN: 0cm 10.5pt 0pt 31.5pt; mso-para-margin-top: 0cm; mso-para-margin-right: 10.5pt; mso-para-margin-bottom: .0001pt; mso-para-margin-left: 3.0gd" class=a><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 12.0pt" lang=EN-US><EM>One of these signals is used to implement thread cancellation. The other signal is used as part of a technique that ensures that all of the threads in a process have the same user and group IDs. This technique is required because, at the kernel level, threads have distinct user and group credentials. Therefore, the NPTL implementation does some work in the wrapper function for each system call that changes user and group IDs (setuid(), setresuid(), and so on, and their group analogs) that causes the IDs to be changed in all of the threads of the process.</EM></SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>Unlike LinuxThreads, NPTL doesn&#8217;t use manager threads.</SPAN></P>
<H3 style="MARGIN: 13pt 0cm"><SPAN style="LINE-HEIGHT: 173%; FONT-SIZE: 21pt; mso-bidi-font-size: 16.0pt; mso-font-kerning: 0pt" lang=EN-US>NPTL standards conformance</SPAN></H3>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>These changes mean that NPTL achieves much closer SUSv3 conformance than LinuxThreads. At the time of writing, the following nonconformance remains:</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>Threads don&#8217;t share a nice value.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>There are some additional NPTL nonconformances in earlier 2.6.</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>x </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>kernels:</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>In kernels before 2.6.16, the alternate signal stack was per-thread, but a new thread wrongly inherited alternate signal stack settings (established by </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>sigaltstack()</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>) from the caller of </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>pthread_create()</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>, with the consequence that the two threads shared an alternate signal stack.</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>In kernels before 2.6.16, only a thread group leader (i.e., the main thread) could start a new session by calling </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>setsid()</SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>.</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>In kernels before 2.6.16, only a thread group leader could use </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>setpgid() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>to make the host process a process group leader.</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>In kernels prior to 2.6.12, interval timers created using </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>setitimer() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>were not shared between the threads of a process.</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>In kernels prior to 2.6.10, resource limit settings were not shared between the threads of a process.</SPAN></P>
<P style="TEXT-ALIGN: left; TEXT-INDENT: -21pt; MARGIN: 0cm 0cm 0pt 21pt; mso-layout-grid-align: none; mso-list: l2 level1 lfo3; tab-stops: list 21.0pt" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Wingdings; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-fareast-font-family: Wingdings; mso-bidi-font-family: Wingdings" lang=EN-US><SPAN style="mso-list: Ignore">l<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp; </SPAN></SPAN></SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>In kernels prior to 2.6.9, the CPU time returned by </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>times() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>and the resource usage information returned by </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta" lang=EN-US>getrusage() </SPAN><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>were per-thread.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'NewBaskervilleEF-Roman','sans-serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-Roman" lang=EN-US>NPTL was designed to be ABI-compatible with LinuxThreads. This means that programs that were linked against a GNU C library providing LinuxThreads don&#8217;t need to be relinked in order to use NPTL. However, some behaviors may change when the program is run with NPTL, primarily because NPTL adheres more closely to the SUSv3 specification for Pthreads.</SPAN>