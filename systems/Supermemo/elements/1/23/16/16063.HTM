<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">arg </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">argument is declared as </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">void *</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">, meaning that we can pass a pointer to any type of object to the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">start </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">function. Typically, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">arg </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">points to a global or heap variable, but it can also be specified as </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-font-kerning: 0pt; mso-bidi-font-family: TheSansMonoCondensed-Plain">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">. If we need to pass multiple arguments to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">start</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">, then </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">arg </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">can be specified as a pointer to a structure containing the arguments as separate fields. With judicious casting, we can even specify </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">arg </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">as an </SPAN><SPAN lang=EN-US style="FONT-SIZE: 20pt; FONT-FAMILY: 'NewBaskervilleEF-RomanIta','sans-serif'; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta">int</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt">.</SPAN></P>
<P class=a style="MARGIN: 0cm 10.5pt 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15pt; mso-bidi-font-size: 12.0pt; mso-font-kerning: 0pt"><EM>Strictly speaking, the C standards don&#8217;t define the results of casting int to void * and vice versa. However, most C compilers permit these operations, and they produce the desired result; that is, int j == (int) ((void *) j).</EM></SPAN>