<H5 class=subsubsection style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.17.2.3 Adding symbols from an archive</H5>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">When the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_link_add_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>routine is passed an archive, it must look through the symbols defined by the archive and decide which elements of the archive should be included in the link. For each such element it must call the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>add_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>linker callback, and it must add the symbols from the object file to the linker hash table. (The callback may in fact indicate that a replacement BFD should be used, in which case the symbols from that BFD should be added to the linker hash table instead.)</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-g_t_005fbfd_005fgeneric_005flink_005fadd_005farchive_005fsymbols-1915></A>In most cases the work of looking through the symbols in the archive should be done by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_generic_link_add_archive_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function. This function builds a hash table from the archive symbol table and looks through the list of undefined symbols to see which elements should be included.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_generic_link_add_archive_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is passed a function to call to make the final decision about adding an archive element to the link and to do the actual work of adding the symbols to the linker hash table.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The function passed to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_generic_link_add_archive_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>must read the symbols of the archive element and decide whether the archive element should be included in the link. If the element is to be included, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>add_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>linker callback routine must be called with the element as an argument, and the element's symbols must be added to the linker hash table just as though the element had itself been passed to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_link_add_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>add_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>callback has the option to indicate that it would like to replace the element archive with a substitute BFD, in which case it is the symbols of that substitute BFD that must be added to the linker hash table instead.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">When the a.out<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_link_add_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function receives an archive, it calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_generic_link_add_archive_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>passing<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>aout_link_check_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as the function argument.<CODE>aout_link_check_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>aout_link_check_ar_symbols</CODE>. If the latter decides to add the element (an element is only added if it provides a real, non-common, definition for a previously undefined or common symbol) it calls the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>add_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>callback and then<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>aout_link_check_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>aout_link_add_symbols</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to actually add the symbols to the linker hash table - possibly those of a substitute BFD, if the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>add_archive_element</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>callback avails itself of that option.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The ECOFF back end is unusual in that it does not normally call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_bfd_generic_link_add_archive_symbols</CODE>, because ECOFF archives already contain a hash table of symbols. The ECOFF back end searches the archive itself to avoid the overhead of creating a new hash table.