<H5 class=subsubsection style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">3.3.2.3 Bit twiddling</H5>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Each flavour of coff supported in BFD has its own header file describing the external layout of the structures. There is also an internal description of the coff layout, in<SAMP><SPAN class=file>coff/internal.h</SPAN></SAMP>. A major function of the coff backend is swapping the bytes and twiddling the bits to translate the external form of the structures into the normal internal form. This is all performed in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_swap</CODE>_<I>thing</I>_<I>direction</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>routines. Some elements are different sizes between different versions of coff; it is the duty of the coff version specific include file to override the definitions of various packing routines in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>coffcode.h</SPAN></SAMP>. E.g., the size of line number entry in coff is sometimes 16 bits, and sometimes 32 bits.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#define</CODE>ing<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>PUT_LNSZ_LNNO</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>GET_LNSZ_LNNO</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will select the correct one. No doubt, some day someone will find a version of coff which has a varying field size not catered to at the moment. To port BFD, that person will have to add more<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#defines</CODE>. Three of the bit twiddling routines are exported to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gdb</CODE>;<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_aux_in</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_sym_in</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<CODE>coff_swap_lineno_in</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>GDB</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>reads the symbol table on its own, but uses BFD to fix things up. More of the bit twiddlers are exported for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gas</CODE>;<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_aux_out</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_sym_out</CODE>,<CODE>coff_swap_lineno_out</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_reloc_out</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_filehdr_out</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_aouthdr_out</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>coff_swap_scnhdr_out</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>Gas</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>currently keeps track of all the symbol table and reloc drudgery itself, thereby saving the internal BFD overhead, but uses BFD to swap things on the way out, making cross ports much safer. Doing so also allows BFD (and thus the linker) to use the same header files as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gas</CODE>, which makes one avenue to disaster disappear.