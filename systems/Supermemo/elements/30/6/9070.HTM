<H5 class=subsubsection style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">3.3.2.10 Reading relocations</H5>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Coff relocations are easily transformed into the internal BFD form (<CODE>arelent</CODE>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Reading a coff relocation table is done in the following stages:</P>
<UL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI>Read the entire coff relocation table into memory.</LI>
<LI>Process each relocation in turn; first swap it from the external to the internal form.</LI>
<LI>Turn the symbol referenced in the relocation's symbol index into a pointer into the canonical symbol table. This table is the same as the one returned by a call to<CODE>bfd_canonicalize_symtab</CODE>. The back end will call that routine and save the result if a canonicalization hasn't been done.</LI>
<LI>The reloc index is turned into a pointer to a howto structure, in a back end specific way. For instance, the 386 and 960 use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r_type</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to directly produce an index into a howto table vector; the 88k subtracts a number from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r_type</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>field and creates an addend field.</LI></UL>