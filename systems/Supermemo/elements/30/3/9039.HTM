<H4 class=subsection style="FONT-SIZE: medium; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.18.1 Creating and freeing a hash table</H4>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-bfd_005fhash_005ftable_005finit-1926></A><A name=index-bfd_005fhash_005ftable_005finit_005fn-1927></A>To create a hash table, create an instance of a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct bfd_hash_table</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(defined in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd.h</CODE>) and call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_table_init</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(if you know approximately how many entries you will need, the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_table_init_n</CODE>, which takes a<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument, may be used).<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_table_init</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FALSE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if some sort of error occurs.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-bfd_005fhash_005fnewfunc-1928></A>The function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_table_init</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>take as an argument a function to use to create new entries. For a basic hash table, use the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_newfunc</CODE>. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://sourceware.org/binutils/docs-2.23.1/bfd/Deriving-a-New-Hash-Table-Type.html#Deriving-a-New-Hash-Table-Type">Deriving a New Hash Table Type</A>, for why you would want to use a different value for this argument.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-bfd_005fhash_005fallocate-1929></A><CODE>bfd_hash_table_init</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will create an objalloc which will be used to allocate new entries. You may allocate memory on this objalloc using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_allocate</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-bfd_005fhash_005ftable_005ffree-1930></A>Use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_table_free</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to free up all the memory that has been allocated for a hash table. This will not free up the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>struct bfd_hash_table</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>itself, which you must provide.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-bfd_005fhash_005fset_005fdefault_005fsize-1931></A>Use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bfd_hash_set_default_size</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to set the default size of hash table to use.