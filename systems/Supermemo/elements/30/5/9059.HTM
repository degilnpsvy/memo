<H4 class=subsection style="FONT-SIZE: medium; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">3.3.1 Porting to a new version of coff</H4>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The recommended method is to select from the existing implementations the version of coff which is most like the one you want to use. For example, we'll say that i386 coff is the one you select, and that your coff flavour is called foo. Copy<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>i386coff.c</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>foocoff.c</SPAN></SAMP>, copy<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>../include/coff/i386.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>../include/coff/foo.h</SPAN></SAMP>, and add the lines to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>targets.c</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SAMP><SPAN class=file>Makefile.in</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>so that your new back end is used. Alter the shapes of the structures in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>../include/coff/foo.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>so that they match what you need. You will probably also have to add<CODE>#ifdef</CODE>s to the code in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>coff/internal.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>coffcode.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>if your version of coff is too wild.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">You can verify that your new BFD backend works quite simply by building<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>objdump</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>binutils</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>directory, and making sure that its version of what's going on and your host system's idea (assuming it has the pretty standard coff dump utility, usually called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>att-dump</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or just<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>dump</CODE>) are the same. Then clean up your code, and send what you've done to Cygnus. Then your stuff will be in the next release, and you won't have to keep integrating it.