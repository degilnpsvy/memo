<SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: MyriadPro-SemiboldCond; mso-bidi-font-size: 14.0pt; mso-bidi-font-family: MyriadPro-SemiboldCond; mso-font-kerning: 0pt">Internal versus External Iterators</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>gang of four</SPAN>&#8221;<SPAN lang=EN-US> define and contrast internal and external iterators quite clearly in</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">their design patterns book:</SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#65288;</SPAN><FONT size=3><SPAN lang=EN-US style="FONT-FAMILY: Birka; mso-bidi-font-size: 7.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">* </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">Design Patterns: Elements of Reusable Object-Oriented Software</SPAN></I></FONT><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, by Gamma, Helm, Johnson, and</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Vlissides (Addison-Wesley).</SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#65289;<SPAN lang=EN-US></SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">A fundamental issue is deciding which party controls the iteration, the iterator or</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">the client that uses the iterator. When the client controls the iteration, the iterator</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is called an </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Bold; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka-Bold; mso-font-kerning: 0pt">external iterator</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and when the iterator controls it, the iterator is an</SPAN></P>
<p><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Bold; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka-Bold; mso-font-kerning: 0pt">internal iterator</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Clients that use an external iterator must advance the traversal</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and request the next element explicitly from the iterator. In contrast, the client</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">hands an internal iterator an operation to perform, and the iterator applies that</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">operation to every element....</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">External iterators are more flexible than internal iterators. It</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s easy to compare</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">two collections for equality with an external iterator, for example, but it</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s practically</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">impossible with internal iterators</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8230;<SPAN lang=EN-US>. But on the other hand, internal iterators</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are easier to use, because they define the iteration logic for you.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">In Ruby, iterator methods like </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">each </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are internal iterators; they control the iteration and</SPAN></P>
<p><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>push</SPAN>&#8221;<SPAN lang=EN-US> values to the block of code associated with the method invocation. Enumerators</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">have an </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">each </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method for internal iteration, but in Ruby 1.9 and later, they also work</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">as external iterators</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>client code can sequentially </SPAN>&#8220;<SPAN lang=EN-US>pull</SPAN>&#8221;<SPAN lang=EN-US> values from an enumerator</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">with </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMono-Cd5; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMono-Cd5; mso-font-kerning: 0pt">next</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 9.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN>