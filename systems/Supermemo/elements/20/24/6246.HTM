<SPAN lang=EN-US style="FONT-SIZE: 24pt; COLOR: black; FONT-FAMILY: MyriadPro-SemiboldCond; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: MyriadPro-SemiboldCond; mso-font-kerning: 0pt">Garbage Collection</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">In </SPAN><SPAN style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>The git fsck Command</SPAN>&#8221;<SPAN lang=EN-US> on page 361</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, which I expanded on the concept of reachability</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">was first introduced in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: blue; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Chapter 4</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. In those sections, I explained how the Git</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">object store and its commit graph might leave unreferenced or dangling objects within</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">the object store. I also gave a few examples how some commands might leave these</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">unreferenced objects in your repository.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Having dangling commits or unreachable objects is not necessarily bad. You may have</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">moved away from a particular commit intentionally or added a file blob and then</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">changed it again before actually committing it. The problem, however, is that over a</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">long period, manipulating the repository can be messy and leave many unreferenced</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">objects in your object store.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Historically, within the computer science industry, such unreferenced objects are</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">cleaned up by an algorithm called </SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>garbage collection.</SPAN>&#8221;<SPAN lang=EN-US> It is the job of the </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git gc </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to perform periodic garbage collection and keep your repository object stores</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">neat and tidy.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This is neat, tidy, and small. Git</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s garbage collection has one other very important task:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">optimizing the size of the repository by locating unpacked objects (loose objects) and</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">creating pack files for them.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">So when does garbage collection happen, and how often? Is it automatic or is it something</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that needs to be done manually? When it runs does it remove everything it can?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Pack everything it can?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">All good questions and, as usual, the answers are all, </SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>It depends.</SPAN>&#8221;<SPAN lang=EN-US></SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">For starters, Git runs garbage collection automatically at strategic times. At other times,</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">you should run </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git gc </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">directly by hand.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Git runs garbage collection automatically:</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> If there are too many loose objects in the repository</SPAN></SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> When a push to a remote repository happens</SPAN></SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> After some commands that might introduce many loose objects</SPAN></SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> When some commands such as </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git reflog expire </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">explicitly request it</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">And finally, garbage collection occurs when you explicitly request it using the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git gc</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command. But when should that be? There</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s no solid answer to this question, but there</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is some good advice and best practice.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">You should consider running </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git gc </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">manually in a few situations:</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> If you have just completed a </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git filter-branch</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Recall that </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">filter-branch </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">rewrites</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">many commits, introduces new ones, and leaves the old ones on a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">ref </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that should</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">be removed when you are satisfied with the results. All those dead objects (that are</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">no longer referenced since you just removed the one </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">ref </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">pointing to them) should</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">be removed via garbage collection.</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> After some commands that might introduce many loose objects. This might be a</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">large rebase effort, for example.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">And on the flip side, when should you be wary of garbage collection?</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> If there are orphaned refs that you might want to recover</SPAN></SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> In the context of </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git rerere </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and you do not need to save the resolutions forever</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> In the context of only tags and branches being sufficient to cause Git to retain a</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">commit permanently</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> In the context of </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">FETCH_HEAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">retrievals (URL-direct retrievals via </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git fetch</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) because</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">they are immediately subject to garbage collection</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Git doesn</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t spontaneously jump to life and carry out garbage collection of its own free</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">will, not even automatically. Instead, what happens is that certain commands that you</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">run cause Git to then consider running garbage collection and packing. But just because</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">you run those commands and Git runs </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git gc </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">doesn</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t mean that Git </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">acts </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">on this trigger.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Instead, Git takes that opportunity to inspect a whole series of configuration parameters</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that guide the inner workings of both the removal of unreferenced objects and the</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">creation of pack files. Some of the more important </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git config </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">parameters include:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">gc.auto</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The number of loose objects allowed to exist in a repository before garbage collection</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">causes them to be packed. The default is 6700.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">gc.autopacklimit</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The number of pack files that may exist in a repository before pack files are themselves</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">repacked into larger, more efficient pack files. The default is 50.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">gc.pruneexpire</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The period of time unreachable objects may linger in an object store. The default</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is two weeks.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">gc.reflogexpire</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git reflog expire </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command will remove </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">reflog </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">entries older than this time</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">period. The default is 90 days.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">gc.reflogexpireunreachable</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git reflog expire </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command will remove </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">reflog </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">entries older than this time</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">period only if they are unreachable from the current branch. The default is 30 days.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Most of the garbage collection config parameters have a value that means either </SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>do it</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">now</SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8221;<SPAN lang=EN-US> or </SPAN>&#8220;<SPAN lang=EN-US>never do it.</SPAN>&#8221;<SPAN lang=EN-US></SPAN></SPAN>