<SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: MyriadPro-SemiboldCond; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: MyriadPro-SemiboldCond; mso-font-kerning: 0pt">Recovering from an Upstream Rebase</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Sometimes, when working in a distributed environment where you don</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t necessarily</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">control the upstream repository from which you derived your current development</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">clone, the upstream version of the branch on which you have developed your work will</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">undergo a non</SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8211;<SPAN lang=EN-US>fast-forward change or a rebase. That change destroys the basis of your</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">branch, and prevents you from directly sending your changes upstream.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Unfortunately, Git doesn</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t provide a way for an upstream repository maintainer to state</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">how its branches will be treated. That is, there is no flag that says </SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>this branch will be</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">rebased at will,</SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8221;<SPAN lang=EN-US> or </SPAN>&#8220;<SPAN lang=EN-US>don</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t expect this branch to fast-forward.</SPAN><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8221;<SPAN lang=EN-US> You, the downstream</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">developer, just have to know, intuit its intended behavior, or ask the upstream maintainer.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">For the most part, other than that, branches are expected to fast-forward and</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">not be rebased.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Sure, that can be bad. I</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">ve explained before how changing published history is bad.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Nevertheless, it happens sometimes. Furthermore, there are some very good development</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">models that even encourage the occasional rebasing of a branch during the normal</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">course of development. (For an example, see how the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">pu</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, or proposed updates branches,</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">of the Git repository itself are handled.)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">So when it happens, what do you do? How do you recover so that your work </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">can </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">be</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">sent upstream again?</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">First, ask yourself whether the rebased branch is really the right branch on which you</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should have been basing your work in the first place. Branches are often intended to</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">be read only. For example, maybe a collection of branches are being gathered and</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">merged together for testing purposes into a read only branch, but are otherwise available</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">individually and should form the basis of development work. In this case, you</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">likely shouldn</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t have been developing on the merged collection branch. (The Linux</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">next </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">branches tend to operate like this.)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Depending on the extent of the rebase that occurred upstream, you may get off easily</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and be able to recover with a simple </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git pull --rebase</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Give it a try; if it works, you</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">win. But I wouldn</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t count on it. You should be prepared to recover an ensuing mess</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">with a judicious use of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">reflog</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The real, more reliable approach is to methodically transfer your developed and</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">orphaned commit sequence from your now defunct branch to the new upstream</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">branch. The basic sequence is to:</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> Rename your old upstream branch. It is important to do this before you fetch</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">because it allows a clean fetch of the new upstream history. Try something like:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git branch save-origin-master origin/master</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> Fetch from upstream to recover the current upstream content. A simple</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git fetch </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should be sufficient.</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> Rebase your commits from the renamed branch onto the new upstream branch</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">using commands like </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">cherry-pick </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or </SPAN><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">rebase</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. This should be the command:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git rebase --onto origin/master save-origin-master master</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></P>
<p><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8226;<SPAN lang=EN-US> Clean up and remove the temporary branch. Try using the command</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 11pt; FONT-FAMILY: TheSansMonoCd-W5Regular; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCd-W5Regular; mso-font-kerning: 0pt">git branch -D save-origin-master</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">It seems easy enough, but the key can often be in locating the point back in the history</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">of the upstream branch where the original history and the new history begin to diverge.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">It</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s possible that everything between that point and your first commit isn</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">t needed at</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">all; that is, the rewritten commit history changes nothing that intersects with your work.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">In this case, you win because a rebase should happen readily. On the other hand, it is</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">also possible that the rewritten history touches the same ground that you were developing.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">In this case, you likely have a tough rebase road ahead of you and will need to</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">fully understand the semantic meanings of the original and changed histories in order</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to figure out how to resolve your desired development changes.</SPAN>