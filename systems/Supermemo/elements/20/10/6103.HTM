<HEAD></HEAD>
<BODY>
<P>Fetching the Alternate History </P>
<P>For Git to perform a merge between two alternate histories, both must be present within one repository on two different branches. Branches that are purely local development branches are a special (degenerate) case of their already being in the same repository. However, if the alternate histories are in different repositories because of cloning, then the remote branch must be brought into your repository via a fetch operation. You can carry out the operation through a direct git fetch command or as part of a git pull command; it doesn&#8217;t matter which. In either case, the fetch brings the remote&#8217;s commits, here C and D, into your repository. The results are shown in Figure 12-5. </P>
<P>&nbsp;</P>
<P>Figure 12-5. Fetching the alternate history</P>
<P>In no way does the introduction of the alternate history with commits C and D change the history represented by X and Y; the two alternate histories both now exist simultaneously in your repository and form a more complex graph. Your history is represented by your master branch, and the remote history is represented by the origin/ master remote-tracking branch.</P></BODY>