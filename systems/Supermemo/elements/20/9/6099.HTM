<HEAD></HEAD>
<BODY>
<P>Alternate Histories </P>
<P>Once you have cloned and obtained your development repository, two distinct paths of development may result. First, you may do development in your repository and make new commits on your master branch, as shown in Figure 12-3. In this picture, your development extends the master branch with two new commits, X and Y, which are based on B. </P>
<P>&nbsp;</P>
<P>Figure 12-3. Commits in your repository </P>
<P>In the meantime, any other developer who has access to the original repository might have done further development and pushed her changes into that repository. Those changes are represented in Figure 12-4 by the addition of commits C and D.</P>
<P>In this situation, we say that the histories of the repositories have diverged or forked at commit B. In much the same way that local branching within one repository causes alternate histories to diverge at a commit, a repository and its clone can diverge into alternate histories as a result of separate actions by possibly different people. It is important to realize that this is perfectly fine and that neither history is more correct than the other.</P>
<P>In fact, the whole point of the merge operation is that these different histories may be brought back together and resolved again. Let&#8217;s see how Git implements that!</P></BODY>