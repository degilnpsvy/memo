The merge or rebase step 
<P></P>
<P>In the second step of the pull operation, Git performs a merge (the default), or a rebase operation. In this example, Git merges the contents of the remote-tracking branch, origin/master, into your local-tracking branch, master, using a special type of merge called a fast-forward. </P>
<P>But how did Git know to merge those particular branches? The answer comes from the configuration file: </P>
<P>[branch "master"] </P>
<P>remote = origin </P>
<P>merge = refs/heads/master</P>
<P>Paraphrased, this gives Git two key pieces of information:</P>
<P>When master is the current, checked out branch, use origin as the default remote from which to fetch updates during a fetch (or pull). Further, during the merge step of git pull, use refs/heads/master from the remote as the default branch to merge into this, the master branch.</P>
<P><FONT class=extract>For readers paying close attention to detail, the first part of that paraphrase is the actual mechanism by which Git determines that origin should be the remote used during this parameterless git pull command.</FONT></P>
<P><FONT class=extract>The value of the merge field in the branch section of the configuration file (refs/heads/ master) is treated like the remote part of a refspec, and it must match one of the source refs just fetched during the git pull command. It&#8217;s a little convoluted, but think of this as a hint conveyed from the fetch step to the merge step of a pull command.</FONT></P>
<P>Because the merge configuration value applies only during git pull, a manual application of git merge at this point must name the merge source branch on the command line. The branch is likely a remote-tracking branch name, such as this: </P>
<P># Or, fully specified: refs/remotes/origin/master </P>
<P>$ git merge origin/master</P>
<P>Updating 3958f68..55c15c8 </P>
<P>Fast forward </P>
<P>index.html | 2 ++ </P>
<P>1 files changed, 2 insertions(+), 0 deletions(-)</P>
<P>There are slight semantic differences between the merging behavior of branches when multiple refspecs are given on the command line and when they are found in a remote entry. The former causes an octopus merge, wherein all branches are merged simultaneously in an n-way operation, whereas the latter does not. Read the git pull manual page carefully!</P>
<P><FONT class=extract>If you choose to rebase rather than merge, Git will instead forward port the changes on your local-tracking topic branch to the newly fetched HEAD of the corresponding remote- tracking branch. The operation is the same as that shown in Figure 10-12 and Figure 10-13 in Chapter 10.</FONT></P>
<P><FONT class=extract>The command git pull --rebase will cause Git to rebase (rather than merge) your local-tracking branch onto the remote-tracking branch during only this pull. To make rebase the normal operation for a branch, set the branch.branch_name.rebase configuration variable to true:</FONT></P>
<P><FONT class=extract>[branch "mydev"] </FONT></P>
<P><FONT class=extract>remote = origin </FONT></P>
<P><FONT class=extract>merge = refs/heads/master </FONT></P>
<P><FONT class=extract>rebase = true </FONT></P>
<P><FONT class=extract>And with that, the merge (or rebase) step is also done.</FONT>