Publishing Repositories 
<P></P>
<P>Whether you are setting up an open source development environment in which many people across the Internet might develop a project or establishing a project for internal development within a private group, the mechanics of collaboration are essentially the same. The main difference between the two scenarios is the location of the repository and access to it. </P>
<P><FONT class=extract>The phrase &#8220;commit rights&#8221; is really sort of a misnomer in Git. Git doesn&#8217;t try to manage access rights, leaving that issue to other tools, such as SSH, which are more suited to the task. You can always commit in any repository to which you have (Unix) access, either via SSH and cding to that repository, or to which you have direct rwx-mode access. The concept might better be paraphrased as &#8220;Can I update the published repository?&#8221; In that expression, you can see the issue is really the question, &#8220;Can I push changes to the published repository?&#8221;</FONT></P>
<P><FONT class=extract>Earlier, in &#8220;Referring to Remote Repositories&#8221; on page 200, you were cautioned about using the remote repository URL form /path/to/repo.git because it might exhibit problems characteristic of repositories that use shared files. On the other hand, setting up a common depot containing several similar repositories is a common situation where you would want to use a shared, underlying object store. In this case, you expect the repositories to be monotonically increasing in size without objects and refs being removed from them. This situation can benefit from large-scale sharing of the object store by many repositories, thus saving tremendous volumes of disk space. To achieve this space savings, consider using the --reference repository, the --local, or the --shared options during the initial bare repository clone setup step for your published repositories.</FONT></P>
<P><FONT class=extract>In any situation where you publish a repository, we strongly advise that you publish a bare one.</FONT>