A Word About Servers 
<P></P>
<P>The word &#8220;server&#8221; gets used liberally and loosely for a variety of meanings. Neither Git nor this book will be an exception, so let&#8217;s clarify some aspects of what a server may or may not be, might or might not do, and just how Git might use one. </P>
<P><FONT class=extract>Technically, Git doesn&#8217;t need a server. In contrast to other VCSs, where a centralized server is often required, there is no need to hang onto the mindset that one is required to host Git repositories.</FONT></P>
<P><FONT class=extract>Having a server in the context of a Git repository is often little more than establishing a convenient, fixed, or known location from which repositories are obtained or updates are exchanged. The Git server might also provide some form of authentication or access control.</FONT></P>
<P>Git is happy to exchange files directly with a peer repository on the same machine without the need for some server to broker the deal, or with different machines via a variety of protocols none of which enforces a superior server to exist.</P>
<P>Instead, the word &#8220;server&#8221; here is more loose. On one hand, it may be just &#8220;some other computer willing to interact with us.&#8221; On the other hand, it could be some rack-mounted, highly available, well-connected, centralized server with a lot of computational power. So, this whole notion of setting up a server needs to be understood in the context of &#8220;if that&#8217;s how you want to do it.&#8221; You be the judge of your requirements here.