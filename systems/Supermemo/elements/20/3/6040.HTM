<DT><CODE>newlib, Definitions for OS interface</CODE>
<DT><CODE>write</CODE><A name=index-write-484></A> 
<DD>Write to a file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>libc</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>subroutines will use this system routine for output to all files,<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>including</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stdout</CODE>&#8212;so if you need to generate any output, for example to a serial port for debugging, you should make your minimal<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>capable of doing this. The following minimal implementation is an incomplete example; it relies on a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>outbyte</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>subroutine (not shown; typically, you must write this in assembler from examples provided by your hardware manufacturer) to actually perform the output.<PRE class=example>          int write(int file, char *ptr, int len) {
            int todo;
          
            for (todo = 0; todo &lt; len; todo++) {
              outbyte (*ptr++);
            }
            return len;
          }
</PRE></DD>