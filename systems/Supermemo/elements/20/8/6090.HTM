Adding a New Developer 
<P></P>
<P>Once you have established an authoritative repository, it&#8217;s easy to add a new developer to a project simply by letting him clone the repository and begin working. </P>
<P>Let&#8217;s introduce Bob to the project by giving him his own cloned repository in which to work:</P>
<P>$ cd /tmp/bob </P>
<P>$ git clone /tmp/Depot/public_html.git </P>
<P>Initialized empty Git repository in /tmp/public_html/.git/ </P>
<P>$ls</P>
<P>public_html </P>
<P>$ cd public_html </P>
<P>$ ls</P>
<P>fuzzy.txt index.html poem.html techinfo.txt </P>
<P>$ git branch </P>
<P>* master </P>
<P>$ git log -1</P>
<P>commit 6f168803f6f1b987dffd5fff77531dcadf7f4b68 </P>
<P>Author: Jon Loeliger </P>
<P><JDL@EXAMPLE.COM>Date: Sun Sep 14 21:04:44 2008 -0500 </P>
<P>Add a hairy poem.</P>
<P>Immediately, you can see from ls that the clone has a working directory populated with all the files under version control. That is, Bob&#8217;s clone is a development repository, and not a bare repository. Good. Bob will be doing some development, too.</P>
<P>From the git log output, you can see that the most recent commit is available in Bob&#8217;s repository. Additionally, because Bob&#8217;s repository was cloned from a parent repository, it has a default remote called origin. Bob can find out more information about the origin remote within his repository:</P>
<P>$ git remote show origin </P>
<P>* remote origin </P>
<P>URL: /tmp/Depot/public_html.git</P>
<P>Remote branch merged with 'git pull' while on branch master </P>
<P>master </P>
<P>Tracked remote branch </P>
<P>master</P>
<P><FONT class=extract>The complete contents of the configuration file after a default clone show how it contains the origin remote: </FONT></P>
<P><FONT class=extract>$ cat .git/config </FONT></P>
<P><FONT class=extract>[core] </FONT></P>
<P><FONT class=extract>repositoryformatversion = 0 </FONT></P>
<P><FONT class=extract>filemode = true </FONT></P>
<P><FONT class=extract>bare = false </FONT></P>
<P><FONT class=extract>logallrefupdates = true </FONT></P>
<P><FONT class=extract>[remote "origin"] </FONT></P>
<P><FONT class=extract>url = /tmp/Depot/public_html.git </FONT></P>
<P><FONT class=extract>fetch = +refs/heads/*:refs/remotes/origin/* </FONT></P>
<P><FONT class=extract>[branch "master"] </FONT></P>
<P><FONT class=extract>remote = origin </FONT></P>
<P><FONT class=extract>merge = refs/heads/master </FONT></P>
<P><FONT class=extract>In addition to having the origin remote in his repository, Bob also has a few branches. He can list all of the branches in his repository by using git branch-a:</FONT></P>
<P><FONT class=extract>$ git branch -a </FONT></P>
<P><FONT class=extract>* master </FONT></P>
<P><FONT class=extract>origin/HEAD </FONT></P>
<P><FONT class=extract>origin/master</FONT></P>
<P><FONT class=extract>The master branch is Bob&#8217;s main development branch. It is the normal, local topic branch. It is also a local-tracking branch associated with the correspondingly named master remote-tracking branch. The origin/master branch is a remote-tracking branch to follow the commits from the master branch of the origin repository. The origin/HEAD ref indicates which branch the remote considers the active branch, through a symbolic name. Finally, the asterisk next to the master branch name indicates that it is the current, checked-out branch in his repository.</FONT></P>
<P>Let&#8217;s have Bob make a commit that alters the hairy poem and then push that to the main depot repository. Bob thinks the last line of the poem should be &#8220;Wuzzy?&#8221;, makes this change, and commits it:</P>
<P>$ git diff </P>
<P>diff --git a/fuzzy.txt b/fuzzy.txt </P>
<P>index 0d601fa..608ab5b 100644 </P>
<P>--- a/fuzzy.txt </P>
<P>+++ b/fuzzy.txt </P>
<P>@@ -1,4 +1,4 @@</P>
<P>Fuzzy Wuzzy was a bear </P>
<P>Fuzzy Wuzzy had no hair </P>
<P>Fuzzy Wuzzy wasn't very fuzzy, </P>
<P>-Was he? </P>
<P>+Wuzzy? </P>
<P>$ git commit fuzzy.txt</P>
<P>Created commit 3958f68: Make the name pun complete! </P>
<P>1 files changed, 1 insertions(+), 1 deletions(-)</P>
<P>To complete Bob&#8217;s development cycle, he pushes his changes to the depot, using git push as before: </P>
<P>$ git push</P>
<P>Counting objects: 5, done. </P>
<P>Compressing objects: 100% (3/3), done. </P>
<P>Writing objects: 100% (3/3), 377 bytes, done.</P>
<P>Total 3 (delta 1), reused 0 (delta 0) </P>
<P>Unpacking objects: 100% (3/3), done. </P>
<P>To /tmp/Depot/public_html.git </P>
<P>6f16880..3958f68 master -&gt; master