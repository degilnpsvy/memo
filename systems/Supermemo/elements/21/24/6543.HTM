The command git add stages a file. In terms of Git&#8217;s file classifications, if a file is untracked, then git add converts that file&#8217;s status to tracked. <FONT class=extract>When git add is used on a directory name, all of the files and subdirectories beneath it are staged recursively.</FONT> Let&#8217;s continue the example from the previous section. 
<P></P>
<P>$ git status </P>
<P># On branch master </P>
<P># </P>
<P># Initial commit </P>
<P># </P>
<P># Untracked files: </P>
<P># (use "git add <FILE>..." to include in what will be committed) </P>
<P># </P>
<P># .gitignore </P>
<P># data </P>
<P># Track both new files. </P>
<P>$ git add data .gitignore </P>
<P>$ git status </P>
<P># On branch master</P>
<P># </P>
<P># Initial commit </P>
<P># </P>
<P># Changes to be committed: </P>
<P># (use "git rm --cached <FILE>..." to unstage) </P>
<P># </P>
<P># new file: .gitignore </P>
<P># new file: data </P>
<P>#</P>
<P>The first git status shows you that two files are untracked and reminds you that to make a file tracked, you simply need to use git add. After git add, both data and .gitignore are staged and tracked, and ready to be added to the repository on the next commit.