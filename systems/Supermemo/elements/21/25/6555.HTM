With data back in the example repository, let&#8217;s rename it and commit the change: 
<P></P>
<P>$ git mv data mydata </P>
<P>$ git status </P>
<P># On branch master </P>
<P># Changes to be committed: </P>
<P># (use "git reset HEAD <FILE>..." to unstage) </P>
<P># </P>
<P># renamed: data -&gt; mydata </P>
<P># </P>
<P>$ git commit -m "Moved data to mydata"</P>
<P>Created commit ec7d888: Moved data to mydata </P>
<P>1 files changed, 0 insertions(+), 0 deletions(-) </P>
<P>rename data =&gt; mydata (100%)</P>
<P><FONT class=extract>If you happen to check the history of the file, you may be a bit disturbed to see that Git has apparently lost the history of the original data file and remembers only that it renamed data to the current name:</FONT></P>
<P><FONT class=extract>$ git log mydata </FONT></P>
<P><FONT class=extract>commit ec7d888b6492370a8ef43f56162a2a4686aea3b4 </FONT></P>
<P><FONT class=extract>Author: Jon Loeliger </FONT></P>
<P><JDL@EXAMPLE.COM><FONT class=extract>Date: Sun Nov 2 19:01:20 2008 -0600 </FONT></P>
<P><FONT class=extract>Moved data to mydata</FONT></P>
<P><FONT class=extract>Git does still remember the whole history, but the display is limited to the particular filename you specified in the command. The --follow option asks Git to trace back through the log and find the whole history associated with the content: </FONT></P>
<P><FONT class=extract>$ git log --follow mydata</FONT></P>
<P><FONT class=extract>commit ec7d888b6492370a8ef43f56162a2a4686aea3b4 </FONT></P>
<P><FONT class=extract>Author: Jon Loeliger </FONT></P>
<P><JDL@EXAMPLE.COM><FONT class=extract>Date: Sun Nov 2 19:01:20 2008 -0600 Moved data to mydata </FONT></P>
<P><FONT class=extract>commit 5b22108820b6638a86bf57145a136f3a7ab71818 </FONT></P>
<P><FONT class=extract>Author: Jon Loeliger </FONT></P>
<P><JDL@EXAMPLE.COM><FONT class=extract>Date: Sun Nov 2 18:38:28 2008 -0600 Add some files</FONT></P>
<P>One of the classic problems with VCSs is that renaming a file can cause them to lose track of a file&#8217;s history. Git preserves this information even after a rename.