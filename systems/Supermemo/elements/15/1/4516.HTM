<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">pref hint,addr<BR>prefx hint,t(b)</SPAN></P></TD><TD style="BORDER-TOP: #ffffff; HEIGHT: 71.25pt; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #ffffff; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt">
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">Prefetch instruction for memory reference optimization. A program that knows in advance it may need data can arrange for it to be brought into the cache early, with no real side effects. Implementations are always entitled to treat pref as a no-op.<BR>hint defines which sort of prefetch this is; see section 8.5.8.<BR>prefx is only available with floating-point, where it matches the register+register address mode available for floating-point load/store instructions.</SPAN></P></TD>