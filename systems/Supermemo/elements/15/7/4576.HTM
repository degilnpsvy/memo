<SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">DMA controllers write memory (leaving cache contents out-of-date) or read it (perhaps missing cached data not yet written back). On some systems</SPAN><SPAN style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>particularly x86 PCs</SPAN>&#8212;<SPAN lang=EN-US>the DMA controllers find some way to tell the hardware cache controller about their transfers, and the cache controller automatically invalidates or writes back cache contents as required to make the whole process transparent, just as though the CPU was reading and writing raw memory. Such a system is called </SPAN>&#8220;<SPAN class=cloze>[...]</SPAN><SPAN lang=EN-US>.</SPAN>&#8221;<SPAN lang=EN-US></SPAN></SPAN> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Minion-Regular-0-1000-19; mso-bidi-font-family: Minion-Regular-0-1000-19; mso-font-kerning: 0pt">Few MIPS systems are I/O-cache coherent. In most cases, a DMA transfer will take place without any notification to the cache logic, and the device driver software must manage the caches to make sure that no stale data in cache or memory is used.</SPAN>