<H4 class=subsection style="FONT-SIZE: 15px; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: 19px; FONT-STYLE: normal; FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">7.5.3 Capturing column view</H4>
<P style="MARGIN-TOP: 0px; WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; TEXT-ALIGN: justify; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Since column view is just an overlay over a buffer, it cannot be exported or printed directly. If you want to capture a column view, use a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>columnview</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>dynamic block (see<A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#Dynamic-blocks">Dynamic blocks</A>). The frame of this block looks like this:</P>
<P style="MARGIN-TOP: 0px; WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; TEXT-ALIGN: justify; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A name=index-g_t_0023_002bBEGIN_002c-columnview-778></A></P><PRE class=example style="BORDER-RIGHT: medium none; PADDING-RIGHT: 12pt; BORDER-TOP: medium none; PADDING-LEFT: 12pt; FONT-WEIGHT: normal; FONT-SIZE: 14px; MARGIN-BOTTOM: 14pt; PADDING-BOTTOM: 12pt; WORD-SPACING: 0px; OVERFLOW: auto; TEXT-TRANSFORM: none; BORDER-LEFT: medium none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; PADDING-TOP: 12pt; BORDER-BOTTOM: medium none; FONT-STYLE: normal; FONT-FAMILY: 'Courier New'; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(238,238,238); FONT-VARIANT: normal; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     * The column view
     #+BEGIN: columnview :hlines 1 :id "label"
     
     #+END:
</PRE>
<P class=noindent style="MARGIN-TOP: 0px; WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; TEXT-ALIGN: justify; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">This dynamic block has the following parameters:</P>
<DL style="WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><CODE>:id</CODE> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">This is the most important parameter. Column view is a feature that is often localized to a certain (sub)tree, and the capture block might be at a different location in the file. To identify the tree whose view to capture, you can use 4 values:<A name=index-property_002c-ID-779></A><PRE class=example style="BORDER-RIGHT: medium none; PADDING-RIGHT: 12pt; BORDER-TOP: medium none; PADDING-LEFT: 12pt; FONT-SIZE: 14px; MARGIN-BOTTOM: 14pt; PADDING-BOTTOM: 12pt; OVERFLOW: auto; BORDER-LEFT: medium none; COLOR: black; PADDING-TOP: 12pt; BORDER-BOTTOM: medium none; FONT-FAMILY: 'Courier New'; BACKGROUND-COLOR: rgb(238,238,238); box-shadow: rgb(136, 136, 136) 5px 5px 5px">          local     <SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">use the tree in which the capture block is located</SPAN>
          global    <SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">make a global view, including all headings in the file</SPAN>
          "file:<VAR>path-to-file</VAR>"
                    <SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">run column view at the top of this file</SPAN>
          "<VAR>ID</VAR>"      <SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">call column view in the tree that has an </SPAN><CODE>:ID:</CODE>
                    <SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">property with the value </SPAN><I>label</I><SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">.  You can use</SPAN>
                    <KBD>M-x org-id-copy RET</KBD><SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif"> to create a globally unique ID for</SPAN>
                    <SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">the current entry and copy it to the kill-ring.</SPAN>
</PRE><BR>
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><CODE>:hlines</CODE> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">When<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>t</CODE>, insert an hline after every line. When a number<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>N</VAR>, insert an hline before each headline with level<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;=<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>N</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><CODE>:vlines</CODE> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">When set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>t</CODE>, force column groups to get vertical lines.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><CODE>:maxlevel</CODE> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">When set to a number, don't capture entries below this level.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><CODE>:skip-empty-rows</CODE> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">When set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>t</CODE>, skip rows where the only non-empty specifier of the column view is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ITEM</CODE>.</DD></DL>
<P class=noindent style="MARGIN-TOP: 0px; WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; TEXT-ALIGN: justify; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">The following commands insert or update the dynamic block:<A name=index-C_002dc-C_002dx-i-780></A><A name=index-org_002dinsert_002dcolumns_002ddblock-781></A></P>
<DL style="WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><KBD>C-c C-x i &nbsp;&nbsp;&nbsp;&nbsp;(</KBD><CODE>org-insert-columns-dblock</CODE><KBD>)</KBD> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Insert a dynamic block capturing a column view. You will be prompted for the scope or ID of the view.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A name=index-C_002dc-C_002dc-782></A><A name=index-C_002dc-C_002dx-C_002du-783></A><A name=index-org_002ddblock_002dupdate-784></A><BR>
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><KBD>C-c C-c<SPAN class=Apple-converted-space>&nbsp;</SPAN></KBD><SPAN class=roman style="FONT-WEIGHT: normal; FONT-FAMILY: serif">or</SPAN><KBD><SPAN class=Apple-converted-space>&nbsp;</SPAN>C-c C-x C-u &nbsp;&nbsp;&nbsp;&nbsp;(</KBD><CODE>org-dblock-update</CODE><KBD>)</KBD> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Update dynamic block at point. The cursor needs to be in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#+BEGIN</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line of the dynamic block.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A name=index-C_002du-C_002dc-C_002dx-C_002du-785></A><A name=index-org_002dupdate_002dall_002ddblocks-786></A><BR>
<DT style="PADDING-RIGHT: 3px; PADDING-LEFT: 3px; FONT-SIZE: 16px; MARGIN-BOTTOM: 3px; PADDING-BOTTOM: 3px; COLOR: rgb(28,48,48); PADDING-TOP: 3px; FONT-FAMILY: 'Courier New'"><KBD>C-u C-c C-x C-u &nbsp;&nbsp;&nbsp;&nbsp;(</KBD><CODE>org-update-all-dblocks</CODE><KBD>)</KBD> 
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Update all dynamic blocks (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#Dynamic-blocks">Dynamic blocks</A>). This is useful if you have several clock table blocks, column-capturing blocks or other dynamic blocks in a buffer.</DD></DL>
<P style="MARGIN-TOP: 0px; WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; TEXT-ALIGN: justify; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">You can add formulas to the column view table and you may add plotting instructions in front of the table&#8212;these will survive an update of the block. If there is a<CODE>#+TBLFM:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>after the table, the table will actually be recalculated automatically after an update.</P>
<P style="MARGIN-TOP: 0px; WORD-SPACING: 0px; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; TEXT-ALIGN: justify; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">An alternative way to capture and process property values into a table is provided by Eric Schulte's<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>org-collector.el</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>which is a contributed package<A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#fn-66" rel=footnote name=fnd-66><SUP>66</SUP></A>. It provides a general API to collect properties from entries in a certain scope, and arbitrary Lisp expressions to process these values before inserting them into a table or a dynamic block.