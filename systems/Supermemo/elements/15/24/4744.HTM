<H4 class=subsection style="FONT-SIZE: 15px; FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: 19px; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">3.5.2 Formula syntax for Calc</H4>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A name=index-formula-syntax_002c-Calc-354></A><A name=index-syntax_002c-of-formulas-355></A>A formula can be any algebraic expression understood by the Emacs<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>Calc</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>package. Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>calc</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>has the non-standard convention that &#8216;<SAMP><SPAN class=samp>/</SPAN></SAMP>&#8217; has lower precedence than &#8216;<SAMP><SPAN class=samp>*</SPAN></SAMP>&#8217;, so that &#8216;<SAMP><SPAN class=samp>a/b*c</SPAN></SAMP>&#8217; is interpreted as &#8216;<SAMP><SPAN class=samp>a/(b*c)</SPAN></SAMP>&#8217;. Before evaluation by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>calc-eval</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/calc.html#Calling-Calc-from-Your-Programs">calc-eval</A>), variable substitution takes place according to the rules described above.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A name=index-vectors_002c-in-table-calculations-356></A>The range vectors can be directly fed into the Calc vector functions like &#8216;<SAMP><SPAN class=samp>vmean</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>vsum</SPAN></SAMP>&#8217;.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A name=index-format-specifier-357></A><A name=index-mode_002c-for-_0040file_007bcalc_007d-358></A><A name=index-org_002dcalc_002ddefault_002dmodes-359></A>A formula can contain an optional mode string after a semicolon. This string consists of flags to influence Calc and other modes during execution. By default, Org uses the standard Calc modes (precision 12, angular units degrees, fraction and symbolic modes off). The display format, however, has been changed to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>(float 8)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to keep tables compact. The default settings can be configured using the option<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>org-calc-default-modes</CODE>.</P>
<P class=noindent style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">List of modes:</P>
<DL style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>p20</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Set the internal Calc calculation precision to 20 digits.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>n3</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>s3</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>e2</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>f4</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Normal, scientific, engineering or fixed format of the result of Calc passed back to Org. Calc formatting is unlimited in precision as long as the Calc calculation precision is greater.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>D</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>R</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Degree and radian angle modes of Calc.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>F</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>S</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Fraction and symbolic modes of Calc.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>T</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>t</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Duration computations in Calc or Lisp, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#Durations-and-time-values">Durations and time values</A>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>E</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">If and how to consider empty fields. Without &#8216;<SAMP><SPAN class=samp>E</SPAN></SAMP>&#8217; empty fields in range references are suppressed so that the Calc vector or Lisp list contains only the non-empty fields. With &#8216;<SAMP><SPAN class=samp>E</SPAN></SAMP>&#8217; the empty fields are kept. For empty fields in ranges or empty field references the value &#8216;<SAMP><SPAN class=samp>nan</SPAN></SAMP>&#8217; (not a number) is used in Calc formulas and the empty string is used for Lisp formulas. Add &#8216;<SAMP><SPAN class=samp>N</SPAN></SAMP>&#8217; to use 0 instead for both formula types. For the value of a field the mode &#8216;<SAMP><SPAN class=samp>N</SPAN></SAMP>&#8217; has higher precedence than &#8216;<SAMP><SPAN class=samp>E</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>N</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Interpret all fields as numbers, use 0 for non-numbers. See the next section to see how this is essential for computations with Lisp formulas. In Calc formulas it is used only occasionally because there number strings are already interpreted as numbers without &#8216;<SAMP><SPAN class=samp>N</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>L</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Literal, for Lisp formulas only. See the next section.</DD></DL>
<P class=noindent style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Unless you use large integer numbers or high-precision-calculation and -display for floating point numbers you may alternatively provide a &#8216;<SAMP><SPAN class=samp>printf</SPAN></SAMP>&#8217; format specifier to reformat the Calc result after it has been passed back to Org instead of letting Calc already do the formatting<A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/org.html#fn-33" name=fnd-33 rel=footnote><SUP>33</SUP></A>. A few examples:</P><PRE class=example style="OVERFLOW: auto; MARGIN-BOTTOM: 14pt; FONT-SIZE: 14px; BORDER-TOP: medium none; FONT-FAMILY: 'Courier New'; BORDER-RIGHT: medium none; FONT-VARIANT: normal; BORDER-BOTTOM: medium none; TEXT-TRANSFORM: none; WORD-SPACING: 0px; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 12pt; FONT-STYLE: normal; PADDING-TOP: 12pt; PADDING-LEFT: 12pt; BORDER-LEFT: medium none; LETTER-SPACING: normal; PADDING-RIGHT: 12pt; BACKGROUND-COLOR: rgb(238,238,238); TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; box-shadow: rgb(136, 136, 136) 5px 5px 5px">     $1+$2                <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Sum of first and second field</SPAN>
     $1+$2;%.2f           <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Same, format result to two decimals</SPAN>
     exp($2)+exp($1)      <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Math functions can be used</SPAN>
     $0;%.1f              <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Reformat current cell to 1 decimal</SPAN>
     ($3-32)*5/9          <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Degrees F -&gt; C conversion</SPAN>
     $c/$1/$cm            <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Hz -&gt; cm conversion, using </SPAN><SAMP><SPAN class=file>constants.el</SPAN></SAMP>
     tan($1);Dp3s1        <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Compute in degrees, precision 3, display SCI 1</SPAN>
     sin($1);Dp3%.1e      <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Same, but use printf specifier for display</SPAN>
     taylor($3,x=7,2)     <SPAN class=roman style="FONT-FAMILY: serif; FONT-WEIGHT: normal">Taylor series of $3, at x=7, second degree</SPAN>
</PRE>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Calc also contains a complete set of logical operations, (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="FONT-WEIGHT: normal; TEXT-DECORATION: none" href="http://orgmode.org/calc.html#Logical-Operations">Logical Operations</A>). For example</P>
<DL style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>if($1 &lt; 20, teen, string(""))</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">"teen" if age $1 is less than 20, else the Org table result field is set to empty with the empty string.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>if("$1" == "nan" || "$2" == "nan", string(""), $1 + $2); E</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Sum of the first two columns. When at least one of the input fields is empty the Org table result field is set to empty.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>if(typeof(vmean($1..$7)) == 12, string(""), vmean($1..$7); E</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Mean value of a range unless there is any empty field. Every field in the range that is empty is replaced by &#8216;<SAMP><SPAN class=samp>nan</SPAN></SAMP>&#8217; which lets &#8216;<SAMP><SPAN class=samp>vmean</SPAN></SAMP>&#8217; result in &#8216;<SAMP><SPAN class=samp>nan</SPAN></SAMP>&#8217;. Then &#8216;<SAMP><SPAN class=samp>typeof == 12</SPAN></SAMP>&#8217; detects the &#8216;<SAMP><SPAN class=samp>nan</SPAN></SAMP>&#8217; from &#8216;<SAMP><SPAN class=samp>vmean</SPAN></SAMP>&#8217; and the Org table result field is set to empty. Use this when the sample set is expected to never have missing values.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>if("$1..$7" == "[]", string(""), vmean($1..$7))</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Mean value of a range with empty fields skipped. Every field in the range that is empty is skipped. When all fields in the range are empty the mean value is not defined and the Org table result field is set to empty. Use this when the sample set can have a variable size.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>vmean($1..$7); EN</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">To complete the example before: Mean value of a range with empty fields counting as samples with value 0. Use this only when incomplete sample sets should be padded with 0 to the full size.</DD></DL>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">You can add your own Calc functions defined in Emacs Lisp with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>defmath</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and use them in formula syntax for Calc.