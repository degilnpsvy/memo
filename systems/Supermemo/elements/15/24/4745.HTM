<H4 class=subsection style="FONT-SIZE: 15px; FONT-FAMILY: 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; FONT-VARIANT: normal; WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: 19px; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">3.5.3 Emacs Lisp forms as formulas</H4>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A name=index-Lisp-forms_002c-as-table-formulas-360></A>It is also possible to write a formula in Emacs Lisp. This can be useful for string manipulation and control structures, if Calc's functionality is not enough.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">If a formula starts with a single-quote followed by an opening parenthesis, then it is evaluated as a Lisp form. The evaluation should return either a string or a number. Just as with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>calc</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>formulas, you can specify modes and a printf format after a semicolon.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">With Emacs Lisp forms, you need to be conscious about the way field references are interpolated into the form. By default, a reference will be interpolated as a Lisp string (in double-quotes) containing the field. If you provide the &#8216;<SAMP><SPAN class=samp>N</SPAN></SAMP>&#8217; mode switch, all referenced elements will be numbers (non-number fields will be zero) and interpolated as Lisp numbers, without quotes. If you provide the &#8216;<SAMP><SPAN class=samp>L</SPAN></SAMP>&#8217; flag, all fields will be interpolated literally, without quotes. I.e., if you want a reference to be interpreted as a string by the Lisp form, enclose the reference operator itself in double-quotes, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"$3"</CODE>. Ranges are inserted as space-separated fields, so you can embed them in list or vector syntax.</P>
<P style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); TEXT-ALIGN: justify; FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; MARGIN-TOP: 0px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Here are a few examples&#8212;note how the &#8216;<SAMP><SPAN class=samp>N</SPAN></SAMP>&#8217; mode is used when we do computations in Lisp:</P>
<DL style="WHITE-SPACE: normal; TEXT-TRANSFORM: none; WORD-SPACING: 0px; COLOR: rgb(0,0,0); FONT: 15px/19px 'Droid Serif', 'Lucida Grande', 'Lucida Sans Unicode', 'DejaVu Sans', Verdana, sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>'(concat (substring $1 1 2) (substring $1 0 1) (substring $1 2))</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Swap the first two characters of the content of column 1.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>'(+ $1 $2);N</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Add columns 1 and 2, equivalent to Calc's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>$1+$2</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT style="MARGIN-BOTTOM: 3px; FONT-SIZE: 16px; FONT-FAMILY: 'Courier New'; COLOR: rgb(28,48,48); PADDING-BOTTOM: 3px; PADDING-TOP: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px"><CODE>'(apply '+ '($1..$4));N</CODE></DT>
<DD style="MARGIN-BOTTOM: 14pt; TEXT-ALIGN: justify">Compute the sum of columns 1 to 4, like Calc's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vsum($1..$4)</CODE>.</DD></DL>