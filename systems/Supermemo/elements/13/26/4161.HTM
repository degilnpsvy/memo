<B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">Overlay Description</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">An overlay description provides an easy way to describe sections, which are to be loaded as part of a single memory image but are to be run at the same memory address. At run time, some sort of overlay manager will copy the overlaid sections in and out of the runtime memory address as required, perhaps by simply manipulating addressing bits. This approach can be useful, for example, when a certain region of memory is faster than another region of memory.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">Overlays are described using the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command is used within a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SECTIONS </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command, like an output section description. The full syntax of the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command is shpown in the following example.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY [start] : [NOCROSSREFS] [AT ( ldaddr )]</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">secname1</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">output-section-command</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">output-section-command</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">...</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">} [:PHDR...] [=FILL]</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">secname2</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">output-section-command</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">output-section-command</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">...</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">} [:phdr...] [=fill]</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">...</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">} [&gt;region] [:phdr...] [=fill]</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">Everything is optional except </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">(a keyword), and each section must have a name (as in the previous example, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">secname1 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">secname2</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">). The section definitions within the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">construct are identical to those within the general </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SECTIONS </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">construct, except that no addresses and no memory regions may be defined for sections within an </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">. See &#8220;SECTIONS Command&#8221; on page 37.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">The sections are all defined with the same starting address. The load addresses of the sections are arranged, so that they are consecutive in memory, starting at the load address used for the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">as a whole (as with normal section definitions. The load address is optional, and defaults to the start address. The start address is also optional, and defaults to the current value of the location counter).</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">If the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">NOCROSSREFS </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">keyword is used, and there any references among the sections, the linker will report an error. Since the sections all run at the same address, it normally does not make sense for one section to refer directly to another.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">For each section within the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, the linker automatically defines two symbols.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">The symbol </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_start_secname </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">is defined as the starting load address of the section. The symbol </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_stop_secname </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">is defined as the final load address of the section. Any characters within </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">secname </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">that are not legal within C identifiers are removed. C (or assembler) code may use these symbols to move the overlaid sections around as necessary. At the end of the overlay, the value of the location counter is set to the start address of the overlay plus the size of the largest section. The following example shows the way. Remember that this would appear inside a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SECTIONS </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">construct.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY 0x1000 : AT (0x4000)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">{</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text0 { o1/*.o(.text) }</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text1 { o2/*.o(.text) }</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">}</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">This will define both </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text0 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text1 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">to start at address, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">0x1000</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text0 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">will be loaded at address, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">0x4000</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text1 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">will be loaded immediately after </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">. The following symbols will be defined: </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_start_text0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_stop_text0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_start_text1</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_stop_text1</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">. C code to copy overlay </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text1 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">into the overlay area might look like the following example&#8217;s code.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">extern char __load_start_text1, __load_stop_text1;</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">memcpy ((char *) 0x1000, &amp;__load_start_text1,</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">&amp;__load_stop_text1 - &amp;__load_start_text1);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">Everything that the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">OVERLAY </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command does can be done using the more basic commands. The previous example could have been written identically as follows.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text0 0x1000 : AT (0x4000) { o1/*.o(.text) }</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_start_text0 = LOADADDR (.text0);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_stop_text0 = LOADADDR (.text0) + SIZEOF (.text0);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">.text1 0x1000 : AT (0x4000 + SIZEOF (.text0)) { o2/*.o(.text) }</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_start_text1 = LOADADDR (.text1);</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">__load_stop_text1 = LOADADDR (.text1) + SIZEOF (.text1);</SPAN>