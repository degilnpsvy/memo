<B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">1,Overview of </SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld</SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">, the GNU Linker</SPAN></B> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt"><FONT class=extract>Linkers allow you to build your programs from modules rather than as huge source files.</FONT> The GNU linker, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, combines object and archive files, relocates their data and ties up symbol references. Usually the last step in compiling a program is to run </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">. The following documentation discusses the basics of using the GNU linker.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">&#8220;Invocation of ld, the GNU Linker&#8221; on page 7</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">&#8220;Linker Scripts&#8221; on page 29</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">&#8220;ld Machine Dependent Features&#8221; on page 63</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">&#8220;BFD Library&#8221; on page 67</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: AdobePiStd; mso-font-kerning: 0pt; mso-bidi-font-family: AdobePiStd">n </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">&#8220;MRI Compatible Script Files for the GNU Linker&#8221; on page 71</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">accepts Linker Command Language files written in a superset of AT&amp;T&#8217;s <I>Link Editor Command Language </I>syntax(A standard from the System V UNIX convention, enabling the linker to have one source from which the compiler or assembler creates object files containing the binary code and data for an executable.), providing explicit and total control over the linking process.This version of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">uses the general purpose BFD libraries to operate </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">on object files. This allows </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">to read, combine, and write object files in many different formats&#8212;for example, ELF, COFF or </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">a.out</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">. The linker is capable of performing partial links and, for certain executable formats, it can also produce shared libraries or Dynamic Link Libraries (DLLs). Different formats may be linked together to produce any available kind of object file. See &#8220;BFD Library&#8221; on page 67 for more information. Aside from its flexibility, the GNU linker is more helpful than other linkers in providing diagnostic information. Many linkers abandon execution immediately upon encountering an error. Whenever possible, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">ld </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">continues executing, allowing you to identify other errors (or, in some cases, to get an output file in spite of the error).</SPAN>