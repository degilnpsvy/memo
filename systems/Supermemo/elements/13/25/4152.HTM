<B><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Arial; mso-font-kerning: 0pt">Output Section Data</SPAN></B></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">You can include explicit bytes of data in an output section by using </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">BYTE</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SHORT</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">LONG</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">QUAD</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, or </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SQUAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">as an output section command. Each keyword is followed by an expression in parentheses providing the value to store; see &#8220;Expressions in Linker Scripts&#8221; on page 55. The value of the expression is stored at the current value of the location counter.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">BYTE</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SHORT</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">LONG</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">QUAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">commands store one, two, four, and eight bytes (respectively). After storing the bytes, the location counter is incremented by the number of bytes stored. For example, this will store the byte 1 followed by the four byte value of the symbol,</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">addr</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">BYTE(1)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">LONG(addr)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">When using a 64-bit host or target, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">QUAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SQUAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">are the same; they both store an 8-byte, or 64-bit, value. When both host and target are 32 bits, an expression is computed as 32 bits. In this case </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">QUAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">stores a 32-bit value zero extended to 64 bits, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">SQUAD </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">stores a 32-bit value sign extended to 64 bits.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">If the object file format of the output file has an explicit endianness, which is the normal case, the value will be stored in that endianness. When the object file format does not have an explicit endianness, as is true of, for example, S-records, the value will be stored in the endianness of the first input object file.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">You may use the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command to set the fill pattern for the current section. It is followed by an expression in parentheses. Any otherwise unspecified regions of memory within the section (for example, gaps left due to the required alignment of input sections) are filled with the two least significant bytes of the expression, repeated as necessary. A </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">statement covers memory locations after the point at which it occurs in the section definition; by including more than one </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">statement, you can have different fill patterns in different parts of an output section.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">The following example shows how to fill unspecified regions of memory with the value </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">0x9090</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">:</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL(0x9090)</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command is similar to the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">=fillexp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">output section attribute (see &#8220;Output Section Fill&#8221; on page 47); but it only affects the part of the section following the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command, rather than the entire section. If both are used, the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: Courier; mso-font-kerning: 0pt; mso-bidi-font-family: Courier">FILL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-font-kerning: 0pt">command takes precedence.</SPAN>