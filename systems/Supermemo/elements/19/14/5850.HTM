<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.70<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vfwprintf</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vwprintf</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vswprintf</CODE>&#8212;wide character format argument list</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-vfwprintf-343></A><A name=index-g_t_005fvfwprintf_005fr-344></A><A name=index-vwprintf-345></A><A name=index-g_t_005fvwprintf_005fr-346></A><A name=index-vswprintf-347></A><A name=index-g_t_005fvswprintf_005fr-348></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdio.h&gt;
     #include &lt;stdarg.h&gt;
     #include &lt;wchar.h&gt;
     int vwprintf(const wchar_t *<VAR>fmt</VAR>, va_list <VAR>list</VAR>);
     int vfwprintf(FILE *<VAR>fp</VAR>, const wchar_t *<VAR>fmt</VAR>, va_list <VAR>list</VAR>);
     int vswprintf(wchar_t *<VAR>str</VAR>, size_t <VAR>size</VAR>, const wchar_t *<VAR>fmt</VAR>,
         va_list <VAR>list</VAR>);
     
     int _vwprintf_r(struct _reent *<VAR>reent</VAR>, const wchar_t *<VAR>fmt</VAR>,
         va_list <VAR>list</VAR>);
     int _vfwprintf_r(struct _reent *<VAR>reent</VAR>, FILE *<VAR>fp</VAR>,
         const wchar_t *<VAR>fmt</VAR>, va_list <VAR>list</VAR>);
     int _vswprintf_r(struct _reent *<VAR>reent</VAR>, wchar_t *<VAR>str</VAR>,
         size_t <VAR>size</VAR>, const wchar_t *<VAR>fmt</VAR>, va_list <VAR>list</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>vwprintf</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vfwprintf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vswprintf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are (respectively) variants of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wprintf</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fwprintf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>swprintf</CODE>. They differ only in allowing their caller to pass the variable argument list as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>va_list</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object (initialized by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>va_start</CODE>) rather than directly accepting a variable number of arguments. The caller is responsible for calling<CODE>va_end</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>_vwprintf_r</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_vfwprintf_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_vswprintf_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are reentrant versions of the above.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>The return values are consistent with the corresponding functions.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>POSIX-1.2008 with extensions; C99 (compliant except for POSIX extensions).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>close</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fstat</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>See Also</STRONG><BR><CODE>wprintf</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fwprintf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>swprintf</CODE>.