<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.65<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT class=extract><CODE>tmpnam</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE>&#8212;name for a temporary file</FONT></H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-tmpnam-317></A><A name=index-tempnam-318></A><A name=index-g_t_005ftmpnam_005fr-319></A><A name=index-g_t_005ftempnam_005fr-320></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdio.h&gt;
     char *tmpnam(char *<VAR>s</VAR>);
     char *tempnam(char *<VAR>dir</VAR>, char *<VAR>pfx</VAR>);
     char *_tmpnam_r(struct _reent *<VAR>reent</VAR>, char *<VAR>s</VAR>);
     char *_tempnam_r(struct _reent *<VAR>reent</VAR>, char *<VAR>dir</VAR>, char *<VAR>pfx</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>Use either of these functions to generate a name for a temporary file. The generated name is guaranteed to avoid collision with other files (for up to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>TMP_MAX</CODE>calls of either function).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>tmpnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>generates file names with the value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>P_tmpdir</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(defined in `<CODE>stdio.h</CODE>') as the leading directory component of the path.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">You can use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to specify a suitable area of memory for the generated filename; otherwise, you can call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam(NULL)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to use an internal static buffer.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>tempnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>allows you more control over the generated filename: you can use the argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dir</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to specify the path to a directory for temporary files, and you can use the argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>pfx</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to specify a prefix for the base filename.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dir</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NULL</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will attempt to use the value of environment variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>TMPDIR</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instead; if there is no such value,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>uses the value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>P_tmpdir</CODE>(defined in `<CODE>stdio.h</CODE>').</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If you don't need any particular prefix to the basename of temporary files, you can pass<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>pfx</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>_tmpnam_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_tempnam_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are reentrant versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>respectively. The extra argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>reent</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a pointer to a reentrancy structure.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Warnings</STRONG><BR>The generated filenames are suitable for temporary files, but do not in themselves make files temporary. Files with these names must still be explicitly removed when you no longer want them.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If you supply your own data area<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam</CODE>, you must ensure that it has room for at least<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>L_tmpnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>elements of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>char</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>Both<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>return a pointer to the newly generated filename.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>ANSI C requires<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam</CODE>, but does not specify the use of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>P_tmpdir</CODE>. The System V Interface Definition (Issue 2) requires both<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tmpnam</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tempnam</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>close</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fstat</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>getpid</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>open</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The global pointer<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>environ</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is also required.