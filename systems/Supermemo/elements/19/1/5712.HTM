<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.13<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT class=extract><CODE>ecvt</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvtf</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvt</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvtf</CODE>&#8212;double or float to string</FONT></H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-ecvt-20></A><A name=index-ecvtf-21></A><A name=index-fcvt-22></A><A name=index-fcvtf-23></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdlib.h&gt;
     
     char *ecvt(double <VAR>val</VAR>, int <VAR>chars</VAR>, int *<VAR>decpt</VAR>, int *<VAR>sgn</VAR>);
     char *ecvtf(float <VAR>val</VAR>, int <VAR>chars</VAR>, int *<VAR>decpt</VAR>, int *<VAR>sgn</VAR>);
     
     char *fcvt(double <VAR>val</VAR>, int <VAR>decimals</VAR>,
         int *<VAR>decpt</VAR>, int *<VAR>sgn</VAR>);
     char *fcvtf(float <VAR>val</VAR>, int <VAR>decimals</VAR>,
         int *<VAR>decpt</VAR>, int *<VAR>sgn</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>ecvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>produce (null-terminated) strings of digits representating the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>number<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvtf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvtf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>produce the corresponding character representations of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>float</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>numbers.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">(The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stdlib</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvtbuf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvtbuf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are reentrant versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvt</CODE>.)</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The only difference between<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the interpretation of the second argument (<VAR>chars</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>decimals</VAR>). For<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvt</CODE>, the second argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>chars</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifies the total number of characters to write (which is also the number of significant digits in the formatted string, since these two functions write only digits). For<CODE>fcvt</CODE>, the second argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>decimals</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifies the number of characters to write after the decimal point; all digits for the integer part of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are always included.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Since<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ecvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>write only digits in the output string, they record the location of the decimal point in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*</CODE><VAR>decpt</VAR>, and the sign of the number in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*</CODE><VAR>sgn</VAR>. After formatting a number,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*</CODE><VAR>decpt</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>contains the number of digits to the left of the decimal point.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*</CODE><VAR>sgn</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>contains<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if the number is positive, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if it is negative.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>All four functions return a pointer to the new string containing a character representation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>None of these functions are ANSI C.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>close</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fstat</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE>.