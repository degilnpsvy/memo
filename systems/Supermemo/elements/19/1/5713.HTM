<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.14<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gvcvt</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gcvtf</CODE>&#8212;format double or float as string</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-gcvt-24></A><A name=index-gcvtf-25></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdlib.h&gt;
     
     char *gcvt(double <VAR>val</VAR>, int <VAR>precision</VAR>, char *<VAR>buf</VAR>);
     char *gcvtf(float <VAR>val</VAR>, int <VAR>precision</VAR>, char *<VAR>buf</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>gcvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>writes a fully formatted number as a null-terminated string in the buffer<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>*</CODE><VAR>buf</VAR>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gdvtf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>produces corresponding character representations of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>float</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>numbers.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>gcvt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>uses the same rules as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>printf</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>format `<CODE>%.</CODE><VAR>precision</VAR><CODE>g</CODE>'&#8212;only negative values are signed (with `<CODE>-</CODE>'), and either exponential or ordinary decimal-fraction format is chosen depending on the number of significant digits (specified by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>precision</VAR>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>The result is a pointer to the formatted representation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(the same as the argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>buf</VAR>).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>Neither function is ANSI C.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>close</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fstat</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE>.