<H2 class=chapter style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">5 Strings and Memory (<SAMP><SPAN class=file>string.h</SPAN></SAMP>)</H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">This chapter describes string-handling functions and functions for managing areas of memory. The corresponding declarations are in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>string.h</SPAN></SAMP>.</P>
<UL class=menu style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI><A accessKey=1 href="http://sourceware.org/newlib/libc.html#bcmp">bcmp</A>: Compare two memory areas 
<LI><A accessKey=2 href="http://sourceware.org/newlib/libc.html#bcopy">bcopy</A>: Copy memory regions 
<LI><A accessKey=3 href="http://sourceware.org/newlib/libc.html#bzero">bzero</A>: Initialize memory to zero 
<LI><A accessKey=4 href="http://sourceware.org/newlib/libc.html#index">index</A>: Search for character in string 
<LI><A accessKey=5 href="http://sourceware.org/newlib/libc.html#memccpy">memccpy</A>: Copy memory regions up to end-token 
<LI><A accessKey=6 href="http://sourceware.org/newlib/libc.html#memchr">memchr</A>: Find character in memory 
<LI><A accessKey=7 href="http://sourceware.org/newlib/libc.html#memcmp">memcmp</A>: Compare two memory areas 
<LI><A accessKey=8 href="http://sourceware.org/newlib/libc.html#memcpy">memcpy</A>: Copy memory regions 
<LI><A accessKey=9 href="http://sourceware.org/newlib/libc.html#memmem">memmem</A>: Find memory segment 
<LI><A href="http://sourceware.org/newlib/libc.html#memmove">memmove</A>: Move possibly overlapping memory 
<LI><A href="http://sourceware.org/newlib/libc.html#mempcpy">mempcpy</A>: Copy memory regions and locate end 
<LI><A href="http://sourceware.org/newlib/libc.html#memset">memset</A>: Set an area of memory 
<LI><A href="http://sourceware.org/newlib/libc.html#rindex">rindex</A>: Reverse search for character in string 
<LI><A href="http://sourceware.org/newlib/libc.html#stpcpy">stpcpy</A>: Copy string returning a pointer to its end 
<LI><A href="http://sourceware.org/newlib/libc.html#stpncpy">stpncpy</A>: Counted copy string returning a pointer to its end 
<LI><A href="http://sourceware.org/newlib/libc.html#strcasecmp">strcasecmp</A>: Compare strings ignoring case 
<LI><A href="http://sourceware.org/newlib/libc.html#strcasestr">strcasestr</A>: Find string segment ignoring case 
<LI><A href="http://sourceware.org/newlib/libc.html#strcat">strcat</A>: Concatenate strings 
<LI><A href="http://sourceware.org/newlib/libc.html#strchr">strchr</A>: Search for character in string 
<LI><A href="http://sourceware.org/newlib/libc.html#strcmp">strcmp</A>: Character string compare 
<LI><A href="http://sourceware.org/newlib/libc.html#strcoll">strcoll</A>: Locale-specific character string compare 
<LI><A href="http://sourceware.org/newlib/libc.html#strcpy">strcpy</A>: Copy string 
<LI><A href="http://sourceware.org/newlib/libc.html#strcspn">strcspn</A>: Count chars not in string 
<LI><A href="http://sourceware.org/newlib/libc.html#strerror">strerror</A>: Convert error number to string 
<LI><A href="http://sourceware.org/newlib/libc.html#strerror_005fr">strerror_r</A>: Convert error number to string 
<LI><A href="http://sourceware.org/newlib/libc.html#strlen">strlen</A>: Character string length 
<LI><A href="http://sourceware.org/newlib/libc.html#strlwr">strlwr</A>: Convert string to lowercase 
<LI><A href="http://sourceware.org/newlib/libc.html#strncasecmp">strncasecmp</A>: Compare strings ignoring case 
<LI><A href="http://sourceware.org/newlib/libc.html#strncat">strncat</A>: Concatenate strings 
<LI><A href="http://sourceware.org/newlib/libc.html#strncmp">strncmp</A>: Character string compare 
<LI><A href="http://sourceware.org/newlib/libc.html#strncpy">strncpy</A>: Counted copy string 
<LI><A href="http://sourceware.org/newlib/libc.html#strnlen">strnlen</A>: Character string length 
<LI><A href="http://sourceware.org/newlib/libc.html#strpbrk">strpbrk</A>: Find chars in string 
<LI><A href="http://sourceware.org/newlib/libc.html#strrchr">strrchr</A>: Reverse search for character in string 
<LI><A href="http://sourceware.org/newlib/libc.html#strsignal">strsignal</A>: Return signal message string 
<LI><A href="http://sourceware.org/newlib/libc.html#strspn">strspn</A>: Find initial match 
<LI><A href="http://sourceware.org/newlib/libc.html#strstr">strstr</A>: Find string segment 
<LI><A href="http://sourceware.org/newlib/libc.html#strtok">strtok</A>: Get next token from a string 
<LI><A href="http://sourceware.org/newlib/libc.html#strupr">strupr</A>: Convert string to upper case 
<LI><A href="http://sourceware.org/newlib/libc.html#strxfrm">strxfrm</A>: Transform string 
<LI><A href="http://sourceware.org/newlib/libc.html#swab">swab</A>: Swap adjacent bytes 
<LI><A href="http://sourceware.org/newlib/libc.html#wcscasecmp">wcscasecmp</A>: Compare wide character strings ignoring case 
<LI><A href="http://sourceware.org/newlib/libc.html#wcsdup">wcsdup</A>: Wide character string duplicate 
<LI><A href="http://sourceware.org/newlib/libc.html#wcsncasecmp">wcsncasecmp</A>: Compare wide character strings ignoring case</LI></UL>