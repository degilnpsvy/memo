<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.37<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT class=extract><CODE>getline</CODE>&#8212;read a line from a file</FONT></H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-getline-224></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdio.h&gt;
     ssize_t getline(char **<VAR>bufptr</VAR>, size_t *<VAR>n</VAR>, FILE *<VAR>fp</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>getline</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>reads a file<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>fp</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>up to and possibly including the newline character. The line is read into a buffer pointed to by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>bufptr</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and designated with size *<VAR>n</VAR>. If the buffer is not large enough, it will be dynamically grown by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>getdelim</CODE>. As the buffer is grown, the pointer to the size<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be updated.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>getline</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is equivalent to getdelim(bufptr, n, '\n', fp);</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR><CODE>getline</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if no characters were successfully read, otherwise, it returns the number of bytes successfully read. at end of file, the result is nonzero.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR><CODE>getline</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a glibc extension.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">No supporting OS subroutines are directly required.