<H2 class=chapter style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">8 Time Functions (<SAMP><SPAN class=file>time.h</SPAN></SAMP>)</H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">This chapter groups functions used either for reporting on time (elapsed, current, or compute time) or to perform calculations based on time.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The header file<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>time.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>defines three types.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>clock_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>time_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are both used for representations of time particularly suitable for arithmetic. (In this implementation, quantities of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>clock_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>have the highest resolution possible on your machine, and quantities of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>time_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>resolve to seconds.)<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>size_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is also defined if necessary for quantities representing sizes.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SAMP><SPAN class=file>time.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>also defines the structure<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tm</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for the traditional representation of Gregorian calendar time as a series of numbers, with the following fields:</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DT><CODE>tm_sec</CODE></DT>
<DD>Seconds, between 0 and 60 inclusive (60 allows for leap seconds).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_min</CODE></DT>
<DD>Minutes, between 0 and 59 inclusive.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_hour</CODE></DT>
<DD>Hours, between 0 and 23 inclusive.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_mday</CODE></DT>
<DD>Day of the month, between 1 and 31 inclusive.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_mon</CODE></DT>
<DD>Month, between 0 (January) and 11 (December).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_year</CODE></DT>
<DD>Year (since 1900), can be negative for earlier years.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_wday</CODE></DT>
<DD>Day of week, between 0 (Sunday) and 6 (Saturday).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_yday</CODE></DT>
<DD>Number of days elapsed since last January 1, between 0 and 365 inclusive.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>tm_isdst</CODE></DT>
<DD>Daylight Savings Time flag: positive means DST in effect, zero means DST not in effect, negative means no information about DST is available. Although for mktime(), negative means that it should decide if DST is in effect or not.</DD></DL>
<UL class=menu style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI><A accessKey=1 href="http://sourceware.org/newlib/libc.html#asctime">asctime</A>: Format time as string</LI>
<LI><A accessKey=2 href="http://sourceware.org/newlib/libc.html#clock">clock</A>: Cumulative processor time</LI>
<LI><A accessKey=3 href="http://sourceware.org/newlib/libc.html#ctime">ctime</A>: Convert time to local and format as string</LI>
<LI><A accessKey=4 href="http://sourceware.org/newlib/libc.html#difftime">difftime</A>: Subtract two times</LI>
<LI><A accessKey=5 href="http://sourceware.org/newlib/libc.html#gmtime">gmtime</A>: Convert time to UTC (GMT) traditional representation</LI>
<LI><A accessKey=6 href="http://sourceware.org/newlib/libc.html#localtime">localtime</A>: Convert time to local representation</LI>
<LI><A accessKey=7 href="http://sourceware.org/newlib/libc.html#mktime">mktime</A>: Convert time to arithmetic representation</LI>
<LI><A accessKey=8 href="http://sourceware.org/newlib/libc.html#strftime">strftime</A>: Convert date and time to a user-formatted string</LI>
<LI><A accessKey=9 href="http://sourceware.org/newlib/libc.html#time">time</A>: Get current calendar time (as single number)</LI>
<LI><A href="http://sourceware.org/newlib/libc.html#g_t_005f_005ftz_005flock">__tz_lock</A>: Lock time zone global variables</LI>
<LI><A href="http://sourceware.org/newlib/libc.html#tzset">tzset</A>: Set timezone info</LI></UL>