<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">7.3<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE>&#8212;specify handler subroutine for a signal</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-signal-426></A><A name=index-g_t_005fsignal_005fr-427></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;signal.h&gt;
     void (*signal(int <VAR>sig</VAR>, void(*<VAR>func</VAR>)(int))) (int);
     
     void (*_signal_r(void *<VAR>reent</VAR>, int <VAR>sig</VAR>, void(*<VAR>func</VAR>)(int))) (int);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>signal</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides a simple signal-handling implementation for embedded targets.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>signal</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>allows you to request changed treatment for a particular signal<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>sig</VAR>. You can use one of the predefined macros<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>SIG_DFL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(select system default handling) or<CODE>SIG_IGN</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(ignore this signal) as the value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>func</VAR>; otherwise,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>func</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a function pointer that identifies a subroutine in your program as the handler for this signal.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Some of the execution environment for signal handlers is unpredictable; notably, the only library function required to work correctly from within a signal handler is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>itself, and only when used to redefine the handler for the current signal value.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Static storage is likewise unreliable for signal handlers, with one exception: if you declare a static storage location as `<CODE>volatile sig_atomic_t</CODE>', then you may use that location in a signal handler to store signal values.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If your signal handler terminates using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>return</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or implicit return), your program's execution continues at the point where it was when the signal was raised (whether by your program itself, or by an external event). Signal handlers can also use functions such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>exit</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>abort</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to avoid returning.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The alternate function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_signal_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the reentrant version. The extra argument<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>reent</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a pointer to a reentrancy structure.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>If your request for a signal handler cannot be honored, the result is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>SIG_ERR</CODE>; a specific error number is also recorded in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>errno</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Otherwise, the result is the previous handler (a function pointer or one of the predefined macros).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>ANSI C requires<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">No supporting OS subroutines are required to link with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE>, but it will not have any useful effects, except for software generated signals, without an operating system that can actually raise exceptions.</P><BR class=Apple-interchange-newline>