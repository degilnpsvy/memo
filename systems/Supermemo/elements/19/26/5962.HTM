<H4 class=subsection style="FONT-SIZE: medium; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">13.2.3 Extract a value from argument list</H4>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-va_005farg-503></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;varargs.h&gt;
     <VAR>type</VAR> va_arg(va_list <VAR>ap</VAR>, <VAR>type</VAR>);
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>va_arg</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the next unprocessed value from a variable argument list<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>ap</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(which you must previously create with<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>va_start</VAR>). Specify the type for the value as the second parameter to the macro,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>type</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Returns</STRONG><BR><CODE>va_arg</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the next argument, an object of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>type</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Portability</STRONG><BR>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>va_arg</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>defined in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>varargs.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>has the same syntax and usage as the ANSI C version from<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>stdarg.h</SPAN></SAMP>.