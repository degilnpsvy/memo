<B><SPAN lang=EN-US style="FONT-SIZE: 24pt; COLOR: black; mso-bidi-font-size: 18.0pt; mso-font-kerning: 0pt">6. Porting Newlib </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 24pt; COLOR: black; mso-bidi-font-size: 18.0pt; mso-font-kerning: 0pt"></SPAN>
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">Newlib supports more than a dozen target CPU architectures, but it doesn't come with code to connect to very many operating systems or target hardware platforms. This makes the odds almost certain that you will need to do some work to get newlib running in your system. Fortunately, the process is both straightforward and relatively painless. </SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt"><FONT class=extract>All of newlib's functionality builds on an integration layer of seventeen <I>stubs </I>of code that supply capabilities that newlib cannot provide itself: low-level filesystem access, requests to enlarge the memory heap, getting the time of day, and various types of context management like process forking and killing. Newlib's source code supplies templates for each of these stubs, which either return "not implemented", or fail silently. </FONT></SPAN></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">The requirements for each stub are fully documented in newlib's </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">libc.info </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">file, in the section called <I>Syscalls</I>. The key to a successfully ported newlib is providing stubs that bridge the gap between the functionality newlib needs, and what your target system can provide. </SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">To demonstrate this, the following sections show how to use newlib in an embedded system that also uses uC/OS, a pragmatic, superbly written RTOS that features a reentrant memory pool implementation, but lacks any concept of a device driver or filesystem API. Despite the operating system's modest feature set, the combination of uC/OS and newlib yields a practical and perfectly usable system, and offers insights into how you would use newlib in both larger and smaller settings. </SPAN>