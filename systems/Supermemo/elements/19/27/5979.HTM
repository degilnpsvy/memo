<P class=Default style="MARGIN: 0cm 0cm 0pt"><B><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 13.5pt">6.1.1. The </SPAN></B><B><SPAN lang=EN-US style="FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt"><FONT size=3>errno </FONT></SPAN></B><B><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 13.5pt">variable </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 18pt; mso-bidi-font-size: 13.5pt"></SPAN></P>
<P class=Default style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-size: 11.5pt">The ANSI C standard specifies a global integer called </SPAN><SPAN lang=EN-US style="FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt"><FONT size=3>errno</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-size: 11.5pt">, that the C runtime library asserts when an error occurs. Once asserted, </SPAN><SPAN lang=EN-US style="FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt"><FONT size=3>errno</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; mso-bidi-font-size: 11.5pt">'s value persists until the application clears it. This simplifies error notification by the library, but creates problems when multiple execution threads are working in the library at the same time: even if the error occurs in only one processing context, both threads see the error code that results. </SPAN>