<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">6.16<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcslen</CODE>&#8212;get wide-character string length</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;wchar.h&gt;
     size_t wcslen(const wchar_t *<VAR>s</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcslen</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function computes the number of wide-character codes in the wide-character string to which<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>points, not including the terminating null wide-character code.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcslen</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function returns the length of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s</VAR>; no return value is reserved to indicate an error.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR><CODE>wcslen</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is ISO/IEC 9899/AMD1:1995 (ISO C).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">No supporting OS subroutines are required.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR></P>
<DIV class=node style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=wcsncat></A>
<P></P>
<HR>
Next:&nbsp;<A accessKey=n href="http://sourceware.org/newlib/libc.html#wcsncmp" rel=next>wcsncmp</A>, Previous:&nbsp;<A accessKey=p href="http://sourceware.org/newlib/libc.html#wcslen" rel=previous>wcslen</A>, Up:&nbsp;<A accessKey=u href="http://sourceware.org/newlib/libc.html#Wchar-strings" rel=up>Wchar strings</A></DIV>
<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">6.17<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcsncat</CODE>&#8212;concatenate part of two wide-character strings</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;wchar.h&gt;
     wchar_t *wcsncat(wchar_t *<VAR>s1</VAR>, const wchar_t *<VAR>s2</VAR>, size_t <VAR>n</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcsncat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function appends not more than<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>wide-character codes (a null wide-character code and wide-character codes that follow it are not appended) from the array pointed to by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s2</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the end of the wide-character string pointed to by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s1</VAR>. The initial wide-character code of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s2</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>overwrites the null wide-character code at the end of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s1</VAR>. A terminating null wide-character code is always appended to the result. If copying takes place between objects that overlap, the behaviour is undefined.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcsncat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s1</VAR>; no return value is reserved to indicate an error.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR><CODE>wcsncat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is ISO/IEC 9899/AMD1:1995 (ISO C).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">No supporting OS subroutines are required.