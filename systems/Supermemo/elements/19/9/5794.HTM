<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.14<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fgetws</CODE>&#8212;get wide character string from a file or stream</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-fgetws-174></A><A name=index-g_t_005ffgetws_005fr-175></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;wchar.h&gt;
     wchar_t *fgetws(wchar_t *<VAR>ws</VAR>, int <VAR>n</VAR>, FILE *<VAR>fp</VAR>);
     
     #include &lt;wchar.h&gt;
     wchar_t *_fgetws_r(struct _reent *<VAR>ptr</VAR>, wchar_t *<VAR>ws</VAR>, int <VAR>n</VAR>, FILE *<VAR>fp</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>Reads at most<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n-1</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>wide characters from<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>fp</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>until a newline is found. The wide characters including to the newline are stored in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>ws</VAR>. The buffer is terminated with a 0.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_fgetws_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is simply the reentrant version of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fgetws</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and is passed an additional reentrancy structure pointer:<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>ptr</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR><CODE>fgetws</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the buffer passed to it, with the data filled in. If end of file occurs with some data already accumulated, the data is returned with no other indication. If no data are read, NULL is returned instead.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>C99, POSIX.1-2001