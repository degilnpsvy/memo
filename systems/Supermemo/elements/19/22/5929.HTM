<H2 class=chapter style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">7 Signal Handling (<SAMP><SPAN class=file>signal.h</SPAN></SAMP>)</H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>signal</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an event that interrupts the normal flow of control in your program. Your operating environment normally defines the full set of signals available (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>sys/signal.h</SPAN></SAMP>), as well as the default means of dealing with them&#8212;typically, either printing an error message and aborting your program, or ignoring the signal.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">All systems support at least the following signals:</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DT><CODE>SIGABRT</CODE> 
<DD>Abnormal termination of a program; raised by the &lt;&lt;abort&gt;&gt; function.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIGFPE</CODE> 
<DD>A domain error in arithmetic, such as overflow, or division by zero.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIGILL</CODE> 
<DD>Attempt to execute as a function data that is not executable.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIGINT</CODE> 
<DD>Interrupt; an interactive attention signal.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIGSEGV</CODE> 
<DD>An attempt to access a memory location that is not available.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIGTERM</CODE> 
<DD>A request that your program end execution.</DD></DL>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Two functions are available for dealing with asynchronous signals&#8212;one to allow your program to send signals to itself (this is called<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>raising</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>a signal), and one to specify subroutines (called<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>handlers</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>to handle particular signals that you anticipate may occur&#8212;whether raised by your own program or the operating environment.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">To support these functions,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>signal.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>defines three macros:</P>
<DL style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<DT><CODE>SIG_DFL</CODE> 
<DD>Used with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function in place of a pointer to a handler subroutine, to select the operating environment's default handling of a signal.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIG_IGN</CODE> 
<DD>Used with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function in place of a pointer to a handler, to ignore a particular signal.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR>
<DT><CODE>SIG_ERR</CODE> 
<DD>Returned by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>signal</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function in place of a pointer to a handler, to indicate that your request to set up a handler could not be honored for some reason.</DD></DL>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><SAMP><SPAN class=file>signal.h</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>also defines an integral type,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sig_atomic_t</CODE>. This type is not used in any function declarations; it exists only to allow your signal handlers to declare a static storage location where they may store a signal value. (Static storage is not otherwise reliable from signal handlers.)</P>
<UL class=menu style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI><A accessKey=1 href="http://sourceware.org/newlib/libc.html#psignal">psignal</A>: Print a signal message to standard error 
<LI><A accessKey=2 href="http://sourceware.org/newlib/libc.html#raise">raise</A>: Send a signal 
<LI><A accessKey=3 href="http://sourceware.org/newlib/libc.html#signal">signal</A>: Specify handler subroutine for a signal</LI></UL>