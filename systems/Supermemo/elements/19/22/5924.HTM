<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">6.25<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcsstr</CODE>&#8212;find a wide-character substring</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;wchar.h&gt;
     wchar_t *wcsstr(const wchar_t *<VAR>big</VAR>, const wchar_t *<VAR>little</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcsstr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function locates the first occurrence in the wide-character string pointed to by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>big</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>of the sequence of wide characters (excluding the terminating null wide character) in the wide-character string pointed to by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>little</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>On successful completion,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wcsstr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns a pointer to the located wide-character string, or a null pointer if the wide-character string is not found.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">If<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>little</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>points to a wide-character string with zero length, the function returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>big</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR><CODE>wcsstr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is ISO/IEC 9899/AMD1:1995 (ISO C).