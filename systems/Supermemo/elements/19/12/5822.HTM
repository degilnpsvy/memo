<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.42<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>open_memstream</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>open_wmemstream</CODE>&#8212;open a write stream around an arbitrary-length string</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-open_005fmemstream-242></A><A name=index-open_005fwmemstream-243></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdio.h&gt;
     FILE *open_memstream(char **restrict <VAR>buf</VAR>,
         size_t *restrict <VAR>size</VAR>);
     
     #include &lt;wchar.h&gt;
     FILE *open_wmemstream(wchar_t **restrict <VAR>buf</VAR>,
         size_t *restrict <VAR>size</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>open_memstream</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>creates a seekable, byte-oriented<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FILE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>stream that wraps an arbitrary-length buffer, created as if by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>malloc</CODE>. The current contents of *<VAR>buf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are ignored; this implementation uses *<VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a hint of the maximum size expected, but does not fail if the hint was wrong. The parameters<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>buf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are later stored through following any call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fflush</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fclose</CODE>, set to the current address and usable size of the allocated string; although after fflush, the pointer is only valid until another stream operation that results in a write. Behavior is undefined if the user alters either *<VAR>buf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>or *<VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>prior to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fclose</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>open_wmemstream</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>open_memstream</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>just with the associated stream being wide-oriented. The size set in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>in subsequent operations is the number of wide characters.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The stream is write-only, since the user can directly read *<VAR>buf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>after a flush; see<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fmemopen</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for a way to wrap a string with a readable stream. The user is responsible for calling<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>free</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>on the final *<VAR>buf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>after<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fclose</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Any time the stream is flushed, a NUL byte is written at the current position (but is not counted in the buffer length), so that the string is always NUL-terminated after at most *<VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes (or wide characters in case of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>open_wmemstream</CODE>). However, data previously written beyond the current stream offset is not lost, and the NUL value written during a flush is restored to its previous value when seeking elsewhere in the string.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>The return value is an open FILE pointer on success. On error,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NULL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is returned, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>errno</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be set to EINVAL if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>buf</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>size</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is NULL, ENOMEM if memory could not be allocated, or EMFILE if too many streams are already open.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>POSIX.1-2008</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>.