<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.49<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>putw</CODE>&#8212;write a word (int)</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-putw-255></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdio.h&gt;
     int putw(int <VAR>w</VAR>, FILE *<VAR>fp</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>putw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a function, defined in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stdio.h</CODE>. You can use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>putw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to write a word to the file or stream identified by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>fp</VAR>. As a side effect,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>putw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>advances the file's current position indicator.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>Zero on success,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>EOF</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>on failure.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR><CODE>putw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a remnant of K&amp;R C; it is not part of any ISO C Standard.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fwrite</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>should be used instead. In fact, this implementation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>putw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is based upon<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fwrite</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fwrite</CODE>.