<B><SPAN lang=EN-US style="FONT-SIZE: 18pt; COLOR: black; mso-bidi-font-size: 13.5pt; mso-font-kerning: 0pt">6.1.4. Reentrancy and i/o streams </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 18pt; COLOR: black; mso-bidi-font-size: 13.5pt; mso-font-kerning: 0pt"></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">_reent </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">structure contains fields for the <I>standard input </I>(stdin), <I>standard output </I>(stdout), and <I>standard error </I>(stderr) descriptors. This capability allows individual tasks to define their own set of streams for reading and writing data. Tasks A and B could both use </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; COLOR: black; FONT-FAMILY: 'Courier New'; mso-bidi-font-size: 10.0pt; mso-font-kerning: 0pt">printf() </SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; COLOR: black; mso-bidi-font-size: 11.5pt; mso-font-kerning: 0pt">simultaneously, with each task's output going to different locations. </SPAN>