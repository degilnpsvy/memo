<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.23<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fputws</CODE>&#8212;write a wide character string in a file or stream</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-fputws-192></A><A name=index-g_t_005ffputws_005fr-193></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;wchar.h&gt;
     int fputws(const wchar_t *<VAR>ws</VAR>, FILE *<VAR>fp</VAR>);
     
     #include &lt;wchar.h&gt;
     int _fputws_r(struct _reent *<VAR>ptr</VAR>, const wchar_t *<VAR>ws</VAR>, FILE *<VAR>fp</VAR>);
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>fputws</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>writes the wide character string at<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>ws</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(but without the trailing null) to the file or stream identified by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>fp</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>_fputws_r</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is simply the reentrant version of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fputws</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that takes an additional reentrant struct pointer argument:<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>ptr</VAR>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR>If successful, the result is a non-negative integer; otherwise, the result is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to indicate an error.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>C99, POSIX.1-2001