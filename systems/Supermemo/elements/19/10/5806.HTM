<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4.26<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fseeko</CODE>&#8212;set file position</H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-fseek-198></A><A name=index-fseeko-199></A><A name=index-g_t_005ffseek_005fr-200></A><A name=index-g_t_005ffseeko_005fr-201></A><STRONG>Synopsis</STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     #include &lt;stdio.h&gt;
     int fseek(FILE *<VAR>fp</VAR>, long <VAR>offset</VAR>, int <VAR>whence</VAR>)
     int fseeko(FILE *<VAR>fp</VAR>, off_t <VAR>offset</VAR>, int <VAR>whence</VAR>)
     int _fseek_r(struct _reent *<VAR>ptr</VAR>, FILE *<VAR>fp</VAR>,
         long <VAR>offset</VAR>, int <VAR>whence</VAR>)
     int _fseeko_r(struct _reent *<VAR>ptr</VAR>, FILE *<VAR>fp</VAR>,
         off_t <VAR>offset</VAR>, int <VAR>whence</VAR>)
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR>Objects of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>FILE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>can have a &#8220;position&#8221; that records how much of the file your program has already read. Many of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stdio</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions depend on this position, and many change it as a side effect.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">You can use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fseek</CODE>/<CODE>fseeko</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to set the position for the file identified by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>fp</VAR>. The value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>determines the new position, in one of three ways selected by the value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>whence</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>(defined as macros in `<CODE>stdio.h</CODE>'):</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>SEEK_SET</CODE>&#8212;<VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the absolute file position (an offset from the beginning of the file) desired.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>must be positive.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>SEEK_CUR</CODE>&#8212;<VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is relative to the current file position.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can meaningfully be either positive or negative.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>SEEK_END</CODE>&#8212;<VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is relative to the current end of file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>offset</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can meaningfully be either positive (to increase the size of the file) or negative.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">See<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ftell</CODE>/<CODE>ftello</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to determine the current file position.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Returns</STRONG><BR><CODE>fseek</CODE>/<CODE>fseeko</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>when successful. On failure, the result is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>EOF</CODE>. The reason for failure is indicated in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>errno</CODE>: either<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ESPIPE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(the stream identified by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>fp</VAR>doesn't support repositioning) or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>EINVAL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(invalid file position).</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR>ANSI C requires<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fseek</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><CODE>fseeko</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is defined by the Single Unix specification.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>close</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fstat</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE>.