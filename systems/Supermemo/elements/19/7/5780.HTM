<H2 class=chapter style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">4 Input and Output (<SAMP><SPAN class=file>stdio.h</SPAN></SAMP>)</H2>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">This chapter comprises functions to manage files or other input/output streams. Among these functions are subroutines to generate or scan strings according to specifications from a format string.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The underlying facilities for input and output depend on the host system, but these functions provide a uniform interface.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The corresponding declarations are in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>stdio.h</SPAN></SAMP>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The reentrant versions of these functions use macros</P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">     _stdin_r(<VAR>reent</VAR>)
     _stdout_r(<VAR>reent</VAR>)
     _stderr_r(<VAR>reent</VAR>)
</PRE>
<P class=noindent style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">instead of the globals<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stdin</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stdout</CODE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>stderr</CODE>. The argument &lt;[reent]&gt; is a pointer to a reentrancy structure.</P>
<UL class=menu style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">
<LI><A accessKey=1 href="http://sourceware.org/newlib/libc.html#clearerr">clearerr</A>: Clear file or stream error indicator 
<LI><A accessKey=2 href="http://sourceware.org/newlib/libc.html#diprintf">diprintf</A>: Print to a file descriptor (integer only) 
<LI><A accessKey=3 href="http://sourceware.org/newlib/libc.html#dprintf">dprintf</A>: Print to a file descriptor 
<LI><A accessKey=4 href="http://sourceware.org/newlib/libc.html#fclose">fclose</A>: Close a file 
<LI><A accessKey=5 href="http://sourceware.org/newlib/libc.html#fcloseall">fcloseall</A>: Close all files 
<LI><A accessKey=6 href="http://sourceware.org/newlib/libc.html#fdopen">fdopen</A>: Turn an open file into a stream 
<LI><A accessKey=7 href="http://sourceware.org/newlib/libc.html#feof">feof</A>: Test for end of file 
<LI><A accessKey=8 href="http://sourceware.org/newlib/libc.html#ferror">ferror</A>: Test whether read/write error has occurred 
<LI><A accessKey=9 href="http://sourceware.org/newlib/libc.html#fflush">fflush</A>: Flush buffered file output 
<LI><A href="http://sourceware.org/newlib/libc.html#fgetc">fgetc</A>: Get a character from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fgetpos">fgetpos</A>: Record position in a stream or file 
<LI><A href="http://sourceware.org/newlib/libc.html#fgets">fgets</A>: Get character string from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fgetwc">fgetwc</A>: Get a wide character from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fgetws">fgetws</A>: Get a wide character string from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fileno">fileno</A>: Get file descriptor associated with stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fmemopen">fmemopen</A>: Open a stream around a fixed-length buffer 
<LI><A href="http://sourceware.org/newlib/libc.html#fopen">fopen</A>: Open a file 
<LI><A href="http://sourceware.org/newlib/libc.html#fopencookie">fopencookie</A>: Open a stream with custom callbacks 
<LI><A href="http://sourceware.org/newlib/libc.html#fpurge">fpurge</A>: Discard all pending I/O on a stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fputc">fputc</A>: Write a character on a stream or file 
<LI><A href="http://sourceware.org/newlib/libc.html#fputs">fputs</A>: Write a character string in a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fputwc">fputwc</A>: Write a wide character to a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fputws">fputws</A>: Write a wide character string to a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fread">fread</A>: Read array elements from a file 
<LI><A href="http://sourceware.org/newlib/libc.html#freopen">freopen</A>: Open a file using an existing file descriptor 
<LI><A href="http://sourceware.org/newlib/libc.html#fseek">fseek</A>: Set file position 
<LI><A href="http://sourceware.org/newlib/libc.html#fsetpos">fsetpos</A>: Restore position of a stream or file 
<LI><A href="http://sourceware.org/newlib/libc.html#ftell">ftell</A>: Return position in a stream or file 
<LI><A href="http://sourceware.org/newlib/libc.html#funopen">funopen</A>: Open a stream with custom callbacks 
<LI><A href="http://sourceware.org/newlib/libc.html#fwide">fwide</A>: Set and determine the orientation of a FILE stream 
<LI><A href="http://sourceware.org/newlib/libc.html#fwrite">fwrite</A>: Write array elements from memory to a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#getc">getc</A>: Get a character from a file or stream (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#getc_005funlocked">getc_unlocked</A>: Get a character from a file or stream (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#getchar">getchar</A>: Get a character from standard input (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#getchar_005funlocked">getchar_unlocked</A>: Get a character from standard input (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#getdelim">getdelim</A>: Get character string from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#getline">getline</A>: Get character string from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#gets">gets</A>: Get character string from standard input (obsolete) 
<LI><A href="http://sourceware.org/newlib/libc.html#getw">getw</A>: Get a word (int) from a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#getwchar">getwchar</A>: Get a wide character from standard input 
<LI><A href="http://sourceware.org/newlib/libc.html#mktemp">mktemp</A>: Generate unused file name 
<LI><A href="http://sourceware.org/newlib/libc.html#open_005fmemstream">open_memstream</A>: Open a write stream around an arbitrary-length buffer 
<LI><A href="http://sourceware.org/newlib/libc.html#perror">perror</A>: Print an error message on standard error 
<LI><A href="http://sourceware.org/newlib/libc.html#putc">putc</A>: Write a character on a stream or file (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#putc_005funlocked">putc_unlocked</A>: Write a character on a stream or file (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#putchar">putchar</A>: Write a character on standard output (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#putchar_005funlocked">putchar_unlocked</A>: Write a character on standard output (macro) 
<LI><A href="http://sourceware.org/newlib/libc.html#puts">puts</A>: Write a character string on standard output 
<LI><A href="http://sourceware.org/newlib/libc.html#putw">putw</A>: Write a word (int) to a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#putwchar">putwchar</A>: Write a wide character to standard output 
<LI><A href="http://sourceware.org/newlib/libc.html#remove">remove</A>: Delete a file's name 
<LI><A href="http://sourceware.org/newlib/libc.html#rename">rename</A>: Rename a file 
<LI><A href="http://sourceware.org/newlib/libc.html#rewind">rewind</A>: Reinitialize a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#setbuf">setbuf</A>: Specify full buffering for a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#setbuffer">setbuffer</A>: Specify full buffering for a file or stream with size 
<LI><A href="http://sourceware.org/newlib/libc.html#setlinebuf">setlinebuf</A>: Specify line buffering for a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#setvbuf">setvbuf</A>: Specify buffering for a file or stream 
<LI><A href="http://sourceware.org/newlib/libc.html#siprintf">siprintf</A>: Write formatted output (integer only) 
<LI><A href="http://sourceware.org/newlib/libc.html#siscanf">siscanf</A>: Scan and format input (integer only) 
<LI><A href="http://sourceware.org/newlib/libc.html#sprintf">sprintf</A>: Write formatted output 
<LI><A href="http://sourceware.org/newlib/libc.html#sscanf">sscanf</A>: Scan and format input 
<LI><A href="http://sourceware.org/newlib/libc.html#swprintf">swprintf</A>: Write formatted wide character output 
<LI><A href="http://sourceware.org/newlib/libc.html#swscanf">swscanf</A>: Scan and format wide character input 
<LI><A href="http://sourceware.org/newlib/libc.html#tmpfile">tmpfile</A>: Create a temporary file 
<LI><A href="http://sourceware.org/newlib/libc.html#tmpnam">tmpnam</A>: Generate name for a temporary file 
<LI><A href="http://sourceware.org/newlib/libc.html#ungetc">ungetc</A>: Push data back into a stream 
<LI><A href="http://sourceware.org/newlib/libc.html#ungetwc">ungetwc</A>: Push wide character data back into a stream 
<LI><A href="http://sourceware.org/newlib/libc.html#vfprintf">vfprintf</A>: Format variable argument list 
<LI><A href="http://sourceware.org/newlib/libc.html#vfscanf">vfscanf</A>: Scan variable argument list 
<LI><A href="http://sourceware.org/newlib/libc.html#vfwprintf">vfwprintf</A>: Format variable wide character argument list 
<LI><A href="http://sourceware.org/newlib/libc.html#vfwscanf">vfwscanf</A>: Scan and format argument list from wide character input 
<LI><A href="http://sourceware.org/newlib/libc.html#viprintf">viprintf</A>: Format variable argument list (integer only) 
<LI><A href="http://sourceware.org/newlib/libc.html#viscanf">viscanf</A>: Scan variable format list (integer only)</LI></UL>