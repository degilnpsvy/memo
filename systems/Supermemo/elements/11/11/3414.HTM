The CPU&#8217;s caches form a vital part of the memory system, and high-availability or trustworthy systems find it worth while to use some extra bits to monitor the integrity of the data stored there. 
<P></P>
<P>Data integrity checks should ideally be implemented end to end; check bits should be computed as soon as data is generated or introduced to the system, stored with the data, and checked just before it&#8217;s used. That way the check catches faults not just in the memory array but in the complex buses and gizmos that data passes through on its way to the CPU and back. </P>
<P>For this reason MIPS CPUs that may be used to implement high-reliability systems often choose to provide error checking in the caches. As in a main memory system, you can use either simple parity or an <FONT class=extract>error-correcting code (ECC)</FONT>.</P>
<P>The components used to build memory systems tend to come in multiples of 8-bit widths these days, and memory modules that allow for checking provide 64 data and 8 check bits. So whatever else we use should follow that lead.