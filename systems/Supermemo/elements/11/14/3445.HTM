Immediate versions of instructions: </P>
<P>A constant value embedded within an instruction is, by ancient convention, called an immediate value. MIPS assembly language lets you specify the last source operand as a constant. MIPS CPUs offer some real hardware instructions supporting immediates of up to 16 bits in size for some operations, but you&#8217;re recommended to write the &#8220;root&#8221; mnemonic instead. Names like addui are recognized by the assembler as legal mnemonics; but probably only compilers generating assembly intermediate code should ever do so, and you&#8217;ll see these &#8220;immediate&#8221; forms when we&#8217;re discussing machine instructions (Table 8.6, for example) and in disassembly listings. </P>
<P>In assembly language you&#8217;re not limited to 16 bits, and you don&#8217;t have to remember which of the &#8220;immediate&#8221; forms uses signed or unsigned values; if you write an arbitrary constant, the assembler will synthesize away, as described in section 9.3.2.</P>
<P>Once again, the assembler may need to use the temporary register at for some complicated cases.