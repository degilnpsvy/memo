<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">The traditional start-up sequence is as follows:</SPAN>
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20"><SPAN class=cloze>[...]</SPAN></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20"><SPAN class=cloze></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">2. Set the status register to some known and sensible state. Now you can load and store reliably in uncached space.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">3. You will probably have to run using registers only until you have initialized and (most likely) run a quick check on the integrity of some RAM memory. This will be slow (we</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">re still running uncached from ROM), so you will probably confine your initialization and check to a chunk of memory big enough for the ROM program</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">s data.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">4. You will probably have to make some contact with the outside world (a console port or diagnostic register) so you can report any problem with the initialization process.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">5. You can now assign yourself some stack and set up enough registers to be able to call a standard C routine.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">6. Now you can initialize the caches and run in comfort. Some systems can run code from ROM cached and some can</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">t; on most MIPS CPUs, a memory supplying the cache must be able to provide 4/8-word bursts, and your ROM subsystem may or may not oblige.</SPAN>