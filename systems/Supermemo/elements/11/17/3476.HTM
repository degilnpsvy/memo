<HEAD></HEAD>
<BODY>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>The traditional start-up sequence is as follows:</SPAN></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US><FONT class=clozed>1. Branch to the main ROM code. Why do a branch now?</FONT></SPAN></P>
<P><FONT class=clozed><FONT class=extract><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>The uncached exception entry points start at </SPAN><SPAN style="FONT-FAMILY: Courier-8r-0-1000-59; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-8r-0-1000-59" lang=EN-US>0xBFC0.0100</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>, which wouldn</SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>t leave enough space for start-up code to get to a </SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20">&#8220;<SPAN lang=EN-US>natural break</SPAN>&#8221;&#8212;<SPAN lang=EN-US>so we</SPAN></SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>re going to have to do a branch soon, anyway.</SPAN></FONT></FONT></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US><FONT class=clozed>The branch is a very simple test to see if the CPU is functioning and is successfully reading instructions. If something terrible goes wrong with the hardware, the MIPS CPU is most likely to keep fetching instructions in sequence (and next most likely to get permanent exceptions).</FONT></SPAN></P>
<P><FONT class=clozed><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>If you use test equipment that can track the addresses of CPU reads and writes, it will show the CPU</SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>s uncached instruction fetches from reset; if the CPU starts up and branches to the right place, you have strong evidence that the CPU is getting mostly correct data from the <?xml:namespace prefix = st1 /><st1:country-region w:st="on"><st1:place w:st="on">ROM.</st1:place></st1:country-region></SPAN></FONT></P>
<P><FONT class=clozed><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>By contrast, if your ROM program plows straight in and fiddles with </SPAN><B><SPAN style="FONT-FAMILY: Courier-Bold-8r-0-1000-47; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Courier-Bold-8r-0-1000-47" lang=EN-US>SR</SPAN></B><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>, strange and undiagnosable consequences may result from simple faults.</SPAN></FONT></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US><FONT class=clozed>2. Set the status register to some known and sensible state. Now you can load and store reliably in uncached space.</FONT></SPAN></P>
<P><FONT class=clozed><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>3. You will probably have to run using registers only until you have initialized and (most likely) run a quick check on the integrity of some RAM memory. This will be slow (we</SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>re still running uncached from ROM), so you will probably confine your initialization and check to a chunk of memory big enough for the ROM program</SPAN><SPAN style="FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US>s data.</SPAN></FONT></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US><FONT class=clozed>4. You will probably have to make some contact with the outside world (a console port or diagnostic register) so you can report any problem with the initialization process.</FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US><FONT class=clozed>5. You can now assign yourself some stack and set up enough registers to be able to call a standard C routine.</FONT></SPAN></P>
<P><SPAN style="FONT-FAMILY: Minion-Regular-0-1000-20; FONT-SIZE: 14pt; mso-font-kerning: 0pt; mso-bidi-font-family: Minion-Regular-0-1000-20" lang=EN-US><SPAN class=cloze>[...]</SPAN></SPAN></P></BODY>