Multiply and divide: 
<P></P>
<P><FONT class=extract>Integer multiply operations produce a result with twice the precision of the operands, and that means that they need to produce genuinely different results for signed and unsigned inputs; hence, there are two instructions: mult and multu. Note that the low part of the result, left in the lo register, will be the same for both the signed and the unsigned version; it&#8217;s the way that overflows into hi are handled that differs. </FONT></P>
<P></P>
<P><FONT class=extract>Integer divide instructions are also sign dependent (think about dividing 0xFFFF.FFFE by 2), so there&#8217;s a div and a divu. The same variation exists for shift-right instructions (shift-right by one is really just divide by two), but this was obviously a U too far; the shift instructions are called sra (shift-right arithmetic, suitable for signed numbers) and srl (shift-right logical). The world is indeed a wonderful place<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">.</SPAN></FONT>