<B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Bold-0-1000-22; mso-bidi-font-family: Minion-Bold-0-1000-22; mso-font-kerning: 0pt">9.3.2 </SPAN></B><B><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-BoldItalic-0-1000-50; mso-bidi-font-family: Minion-BoldItalic-0-1000-50; mso-font-kerning: 0pt">Immediates: Computational Instructions with Constants</SPAN></I></B> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">In assembly or machine language, a constant value encoded within an instruction </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">is called an </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-25; mso-bidi-font-family: Minion-Italic-0-1000-25; mso-font-kerning: 0pt">immediate </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">value. Many of the MIPS arithmetical and logical </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">operations have an alternative form that uses a 16-bit immediate in place of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">t</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">. The immediate value is first sign-extended or zero-extended to 32 bits; the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">choice of how it</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">s extended depends on the operation, but in general arithmetical </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">operations sign-extend and logical operations zero-extend.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Although an immediate operand produces a different machine instruction </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">from its three-register version (e.g., </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">addiu </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">instead of </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">addu</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">), there is no need </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">for the programmer to write this explicitly. The assembler checks whether the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">final operand is a register or an immediate and chooses the correct machine </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">instruction accordingly:</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">addu $2, $4, 64 =&gt; addiu $2, $4, 64</SPAN></B></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">If an immediate value is too large to fit into the 16-bit field in the machine </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">instruction, then the assembler helps out again. It automatically loads the constant </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">into the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Italic-0-1000-25; mso-bidi-font-family: Minion-Italic-0-1000-25; mso-font-kerning: 0pt">assembler temporary register </SPAN></I><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">at</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">/</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">$1 </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">and then uses it to perform </SPAN></FONT><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt"><FONT class=extract>the operation</FONT>:</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">addu $4, 0x12345 =&gt; li at, 0x12345</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">addu $4, $4, at</SPAN></B></P>
<P><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Note the </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">li </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">(load immediate) instruction, which you won</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">t find in the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">machine</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">s instruction set; </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">li </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">is a heavily used macro instruction that loads an </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">arbitrary 32-bit integer value into a register without the programmer having to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">worry about how it gets there</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>the assembler automatically chooses the best </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">way to code the operation, according to the properties of the integer value.</SPAN></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">When the 32-bit value lies between </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: TMMathSy-0-1000-31; mso-bidi-font-family: TMMathSy-0-1000-31; mso-font-kerning: 0pt">&#177;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">32 K, the assembler can use a single </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">addiu </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">with </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">$0</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">; when bits 16</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8211;<SPAN lang=EN-US>31 are all zero, it can use </SPAN></SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">ori</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">; when bits 0</SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">&#8211;<SPAN lang=EN-US>15 </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">are all zero, it will use </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">lui</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">; and when none of these is possible, it will choose a </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">lui</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">/</SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">ori </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">pair:</SPAN></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">li $3, -5 =&gt; addiu $3, $0, -5</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">li $4, 0x8000 =&gt; ori $4, $0, 0x8000</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">li $5, 0x120000 =&gt; lui $5, 0x12</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">li $6, 0x12345 =&gt; lui $6, 0x1</SPAN></B></P>
<P><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">ori $6, $6, 0x2345</SPAN></B></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">Assembly instructions that expand into multiple machine instructions are </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">troublesome if you</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt; mso-fareast-font-family: Minion-Regular-0-1000-20; mso-ascii-font-family: Minion-Regular-0-1000-20">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">re using </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Courier-Bold-8r-0-1000-48; mso-bidi-font-family: Courier-Bold-8r-0-1000-48; mso-font-kerning: 0pt">.set noreorder </SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">directives to take control of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">managing branch delay slots. If you write a multi-instruction macro in a delay </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Minion-Regular-0-1000-20; mso-bidi-font-family: Minion-Regular-0-1000-20; mso-font-kerning: 0pt">slot, the assembler should warn you.</SPAN>