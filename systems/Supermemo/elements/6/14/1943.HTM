<H3 class=docSection1Title>7.1. Using Tabs</H3>
<P class=docText>Tabs provide an easy way to <A name=gnu3-CHP-7-ITERM-2296></A><A name=gnu3-CHP-7-ITERM-2297></A>do some simple formatting. While we were revising this book, we found that the way Emacs handles tabs has changed a great deal. This section describes first how Emacs works by default and then discusses what you can do to change the default behavior to meet your needs.</P><A name=gnu3-CHP-7-SECT-1.1></A>
<H4 class=docSection2Title>7.1.1 How Emacs 21 Handles Tabs by Default</H4>
<P class=docText>If you open a new file in text mode, <A name=gnu3-CHP-7-ITERM-2298></A><A name=gnu3-CHP-7-ITERM-2299></A>tabs are set every eight spaces by default. (Programming modes have their own indentation behavior; see <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-9.html#gnu3-chp-9">Chapter 9</A> for details.)</P><A name=ch07-3-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Press <SPAN class=docEmphBold>Tab</SPAN>.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=149 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn01.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Pressing <SPAN class=docEmphBold>Tab</SPAN> in text mode or fundamental mode inserts a tab character that moves the cursor forward eight columns by default.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Watch what happens when we type a sentence. The default tab stops change automatically.</P><A name=ch07-4-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>It was the best of times Enter Tab Tab</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=149 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn02.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Pressing <SPAN class=docEmphBold>Tab</SPAN> twice moves the cursor under the word <SPAN class=docEmphasis>was</SPAN>, clearly less than eight columns.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText><FONT class=extract>Every time you press <SPAN class=docEmphBold>Tab</SPAN>, Emacs moves the cursor under the next word. This is the behavior that many people expect when writing code. Neatly lined up code is easier to read.</FONT></P>
<P class=docText><FONT class=extract>As we experimented with this feature, we would tab across under each word, and press <SPAN class=docEmphBold>Enter</SPAN>. What happens next is surprising if you are not expecting it. Emacs considers that newline to be the only character you typed on the line, so pressing <SPAN class=docEmphBold>Tab</SPAN> on a subsequent line brings you nearly to the end of the line.</FONT></P><A name=ch07-5-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Press <SPAN class=docEmphBold>Tab</SPAN> repeatedly to the end of the window, press <SPAN class=docEmphBold>Enter</SPAN>, then press <SPAN class=docEmphBold>Tab</SPAN> once.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=149 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn03.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs moves the cursor to the column where you pressed <SPAN class=docEmphBold>Enter</SPAN>.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>If you press <SPAN class=docEmphBold>Enter</SPAN> but don't press <SPAN class=docEmphBold>Tab</SPAN> at all, the indentation level moves back to the left margin.</P>
<P class=docText><FONT class=extract>Changing tabs to align with each word can be helpful, if, for example, you're typing tables.</FONT> However, the default tab behavior may not be helpful to you in all situations. If you are interested in changing the default behavior, read on and we'll describe how to get Emacs to do what you want it to do.</P><A name=gnu3-CHP-7-SECT-1.2></A>
<H4 class=docSection2Title>7.1.2 Changing Tab Stops</H4>
<P class=docText>By default (and if text is not lining up <A name=gnu3-CHP-7-ITERM-2300></A>with some previous line of text), tabs are set every eight characters. Emacs allows you to change the positions of the tab stops. <FONT class=extract>To change the tab stops, type <SPAN class=docEmphBold>M-x</SPAN> <SPAN class=docEmphBold>edit-tab-stops</SPAN>. A <TT>*Tab Stops*</TT> buffer appears.</FONT></P><A name=ch07-6-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>M-x edit-tab-stops</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=199 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn04.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>You now see a tab stop ruler; colons show the locations of tab stops.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>The colons in the first line of <A name=gnu3-CHP-7-ITERM-2301></A><A name=gnu3-CHP-7-ITERM-2302></A>the display show you where tab stops are currently located. The next two lines form a ruler that shows each character position on the line. To insert a tab, use <SPAN class=docEmphBold>C-f</SPAN> to move to the desired column, and then type a colon ( : ). To delete a tab, move to the desired tab, and press <SPAN class=docEmphBold>Space</SPAN>. The <TT>*Tab Stops*</TT> buffer is in overwrite mode, so these changes won't change the position of other tabs. Make sure that you do all your editing in the first line of the display. Changes made to the other lines won't have any effect.</P>
<P class=docText><FONT class=extract>When you're satisfied with the tab stops, press <SPAN class=docEmphBold>C-c</SPAN> <SPAN class=docEmphBold>C-c</SPAN> to install them. If you don't make any changes, press <SPAN class=docEmphBold>C-c</SPAN> <SPAN class=docEmphBold>C-c</SPAN> to exit the buffer. If you make some changes and then decide you don't want them after all, kill the buffer by typing <SPAN class=docEmphBold>C-x</SPAN> <SPAN class=docEmphBold>k</SPAN> <SPAN class=docEmphBold>Enter</SPAN>. The default tab stops remain in effect.</FONT></P>
<P class=docText><FONT class=extract>If you press <SPAN class=docEmphBold>C-c C-c</SPAN> to install them, the new tab settings affect all buffers that you create but remain in effect for this Emacs session only.</FONT></P>
<P class=docText><FONT class=extract>Again, it may well appear to you that this feature doesn't work as you would expect. Because Emacs's default behavior tries to align with preceding lines, changing tab stops really affects only the first line of any buffer.</FONT></P>
<P class=docText>In this example, we set the first tab at column 51, pressed <SPAN class=docEmphBold>C-c C-c</SPAN> to install the tab stops, and started a new buffer. Pressing <SPAN class=docEmphBold>Tab</SPAN> at the beginning of the buffer moves the cursor immediately to column 51. That works fine.</P><A name=ch07-7-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Press <SPAN class=docEmphBold>Tab</SPAN> once.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=199 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn05.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Cursor moves to column 51.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Now we press <SPAN class=docEmphBold>Tab</SPAN> a few more times, followed by <SPAN class=docEmphBold>Enter</SPAN> to move to a new line.</P>
<P class=docText>When we press <SPAN class=docEmphBold>Tab</SPAN> on the second line, Emacs views the newline as the only item on the last line. Pressing <SPAN class=docEmphBold>Tab</SPAN> moves us right to the end of the line.</P><A name=ch07-8-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Press <SPAN class=docEmphBold>Tab</SPAN> on the next line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=199 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn06.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs moves to the end of the line.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>As you can see, changing tab stops in this way is of limited efficacy if you're going to add blank lines between rows of your table or whatever you're typing. You'd have to work around this by adding blank lines after typing the whole table, perhaps using a macro as described in <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6.html#gnu3-chp-6">Chapter 6</A>.</P><A name=gnu3-CHP-7-SECT-1.3></A>
<H4 class=docSection2Title>7.1.3 What if You Want Literal Tabs?</H4>
<P class=docText>Let's say that all this tab <A name=gnu3-CHP-7-ITERM-2303></A><A name=gnu3-CHP-7-ITERM-2304></A>finery is getting on your nerves. You don't want context-sensitive indenting; you don't even want to change tab stops. There is a way to make Emacs treat tabs just like a regular old typewriter did, moving over eight characters at a time.<SUP class=docFootnote><A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-7-sect-1.html#gnu3-chp-7-fnote-1">[1]</A></SUP></P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=gnu3-CHP-7-FNOTE-1>[1]</A></SUP> You can't change tab stops with this method, but you can change tab width. We'll cover this shortly.</P></BLOCKQUOTE>
<P class=docText>To insert rigid, typewriter-style tabs, press <SPAN class=docEmphBold>C-q Tab</SPAN>. In theory, this should insert a tab character into the file, which would look like <TT>^I</TT>. In practice, it moves the cursor forward rigidly eight columns.</P><A name=ch07-9-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>C-q Tab</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=199 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch07scrn07.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The cursor moves eight columns forward and does not align with the text in the previous line.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText><SPAN class=docEmphBold>C-q Tab</SPAN> does in fact insert a tab character in the file. You can check that by erasing it with a single press of the <SPAN class=docEmphBold>Del</SPAN> key.</P><A name=gnu3-CHP-7-SECT-1.4></A>
<H4 class=docSection2Title>7.1.4 Changing Tab Width</H4>
<P class=docText>One problem with tabs is <A name=gnu3-CHP-7-ITERM-2305></A>that there is no universal definition of what a tab means. In <SPAN class=docEmphasis>vi</SPAN>, the default tab width is four columns versus eight columns in Emacs. Further, Unix generally favors eight columns for tabs while some operating systems tend to use four spaces. Emacs uses eight columns by default no matter what platform it's running on. If you view another user's file in Emacs, Emacs interprets the tabs as eight columns each, throwing things off. For this reason, you might want to set your tab default to four columns by adding this line to your <SPAN class=docEmphasis>.emacs</SPAN> file:</P><PRE> (setq-default tab-width 4)
</PRE><BR>
<P class=docText>You have to press <SPAN class=docEmphBold>C-q Tab</SPAN> to have the modified tab width take effect.</P><A name=gnu3-CHP-7-SECT-1.5></A>
<H4 class=docSection2Title>7.1.5 Tabs and Spaces</H4>
<P class=docText>Another characteristic <A name=gnu3-CHP-7-ITERM-2306></A>of Emacs's default behavior is the fact that it may insert a combination of tabs and spaces when you press <SPAN class=docEmphBold>Tab</SPAN>. Try to erase a few "tabs" and you'll see that often it isn't one character, but the equivalent number of spaces or a combination of tabs and spaces. Of course, this largely depends on the tab stops compared to setting of the <TT>tab-width</TT> variable. If you set tab stops that are multiples of six while you have a <TT>tab-width</TT> of 4 or 8, Emacs is going to have to use a combination of tabs and spaces to achieve the desired tab stops.</P>
<P class=docText>If you want Emacs to insert spaces for indentation rather than tab characters, add this line to your <SPAN class=docEmphasis>.emacs</SPAN> file:</P><PRE>(setq-default indent-tabs-mode nil)
</PRE><BR>
<P class=docText>With this setting, Emacs inserts only spaces when you press <SPAN class=docEmphBold>Tab</SPAN>. Pressing <SPAN class=docEmphBold>C-q Tab</SPAN> instead inserts a literal tab character. It's safe to say you won't enter tab characters accidentally with this setting.</P><A name=gnu3-CHP-7-SECT-1.6></A>
<H4 class=docSection2Title>7.1.6 Changing Tabs to Spaces (and Vice Versa)</H4>
<P class=docText>We've just talked about a <A name=gnu3-CHP-7-ITERM-2307></A><A name=gnu3-CHP-7-ITERM-2308></A>way to make sure that Emacs inserts spaces instead of tabs. But what if you inherit a file and it has tabs that you want to change to spaces?</P>
<P class=docText>Emacs provides a command to banish tabs from your files. You can use tabs for editing and then convert all of the tabs to the appropriate number of spaces so that the appearance of your file doesn't change. Unlike tabs, a space is almost always well defined. The command for eliminating tabs is <SPAN class=docEmphBold>M-x</SPAN> <SPAN class=docEmphBold>untabify</SPAN>. There's a corresponding command to convert spaces into tabs: <SPAN class=docEmphBold>tabify</SPAN>. However, we trust that you'll take our advice and forget about it.</P>
<P class=docText>The <SPAN class=docEmphBold>untabify</SPAN> command works on a region. Therefore, to use it, you must put the mark somewhere in the buffer (preferably at the beginning), move to some other place in the buffer (preferably the end), and type <SPAN class=docEmphBold>M-x</SPAN> <SPAN class=docEmphBold>untabify</SPAN> <SPAN class=docEmphBold>Enter</SPAN>. The command <SPAN class=docEmphBold>C-x</SPAN> <SPAN class=docEmphBold>h</SPAN> (for <SPAN class=docEmphBold>mark-whole-buffer</SPAN>) automatically puts the cursor at the beginning of the buffer and the mark at the end. It makes untabification a bit easier because you can do it all at once with the simple sequence <SPAN class=docEmphBold>C-x</SPAN> <SPAN class=docEmphBold>h</SPAN> <SPAN class=docEmphBold>M-x</SPAN> <SPAN class=docEmphBold>untabify</SPAN> <SPAN class=docEmphBold>Enter</SPAN>.</P>
<P class=docText><A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-7-sect-1.html#gnu3-chp-7-table-1">Table 7-1</A> shows the tab commands we've covered in this section.</P><A name=gnu3-CHP-7-TABLE-1></A>
<H5 class=docTableTitle>Table 7-1. Tab commands</H5>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystrokes</P></TH>
<TH class=thead scope=col>
<P class=docText>Command name</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>(none)</P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>edit-tab-stops</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Open a buffer called <TT>*Tab Stops*</TT> where you can change the tab settings.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>(none)</P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>untabify</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Change all tabs into the equivalent number of spaces.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>(none)</P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>tabify</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Change groups of three or more spaces to tabs where possible without affecting the text placement.</P></TD></TR></TBODY></TABLE>