<PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>(defun how-many (count)</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(cond ((zerop count) "no")</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>((= count 1) "one")</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>((= count 2) "two")</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(t "many")))</FONT></FONT></SPAN></PRE>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>The first conditional<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2781></A><A name=gnu3-CHP-11-ITERM-2780></A><A name=gnu3-CHP-11-ITERM-2779></A><A name=gnu3-CHP-11-ITERM-2778></A>expression introduces a new primitive Lisp function,<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>zerop</SPAN>. It checks whether its argument is zero, and returns<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;>t</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>&nbsp;</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>(true) when it is. So when<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>count</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is zero, the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>cond</SPAN>statement takes this first branch, and our function returns the value<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>no</SPAN>. This strange function name bears a little explanation. It is pronounced "zero-pee" and is short for "zero predicate." In the realm of mathematical logic from which Lisp evolved, a predicate is a function that returns true or false based on some attribute of its argument. Lisp has a wide variety of similar predicate functions, with structurally related names. When you run into the next one, you'll understand it. (Of course, you might now expect the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>null</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>function we introduced in the previous example to be called "<SPAN class=docemphbold>nilp</SPAN>" instead. Nobody's perfectly consistent.)</SPAN></P>
<P style="MARGIN: auto 0cm" class=doctext><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>The next two conditional expressions in the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>cond</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>statement check if<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>count</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is 1 or 2 and cause it to return "one" or "two" as appropriate. We could have written the first one using the same structure, but then we'd have missed out on an opportunity for a digression into Lisp trivia!</SPAN></P>
<P style="MARGIN: auto 0cm" class=doctext><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>The last conditional expression is simply the atom<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>t</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(true), which means its body is executed whenever all the preceding expressions failed. It returns the value<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>many</SPAN>. Executing this function gives us results like these:</SPAN></P><PRE><FONT size=3><FONT face=&#23435;&#20307;><B><SPAN lang=EN-US>(how-many 1)</SPAN></B><SPAN lang=EN-US></SPAN></FONT></FONT></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>"one"</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><FONT size=3><FONT face=&#23435;&#20307;><B><SPAN lang=EN-US>(how-many 0)</SPAN></B><SPAN lang=EN-US></SPAN></FONT></FONT></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>"no"</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><FONT size=3><FONT face=&#23435;&#20307;><B><SPAN lang=EN-US>(how-many 3)</SPAN></B><SPAN lang=EN-US></SPAN></FONT></FONT></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>"many"</FONT></FONT></SPAN></PRE>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US></SPAN></P>
<P style="MARGIN: auto 0cm" class=doctext><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>Combining these two helper functions into a mechanism to report the change count for our fancy command is easy.</SPAN></P><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>(defun report-change-count (count)</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(message "Made %s %s." (how-many count) (pluralize "change" count)))</FONT></FONT></SPAN></PRE>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US></SPAN></P>
<P style="MARGIN: auto 0cm" class=doctext><SPAN style="FONT-FAMILY: 'Tahoma','sans-serif'; FONT-SIZE: 10pt" lang=EN-US>We get results like these:</SPAN></P><PRE><FONT size=3><FONT face=&#23435;&#20307;><B><SPAN lang=EN-US>(report-change-count 0)</SPAN></B><SPAN lang=EN-US></SPAN></FONT></FONT></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>"Made no changes."</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><FONT size=3><FONT face=&#23435;&#20307;><B><SPAN lang=EN-US>(report-change-count 1)</SPAN></B><SPAN lang=EN-US></SPAN></FONT></FONT></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>"Made one change."</FONT></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><FONT size=3><FONT face=&#23435;&#20307;><B><SPAN lang=EN-US>(report-change-count 1329)</SPAN></B><SPAN lang=EN-US></SPAN></FONT></FONT></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3 face=&#23435;&#20307;></FONT></SPAN></PRE><PRE><SPAN lang=EN-US><FONT size=3><FONT face=&#23435;&#20307;>"Made many changes."</FONT></FONT></SPAN></PRE>