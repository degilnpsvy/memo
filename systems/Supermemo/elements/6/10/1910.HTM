<H3 class=docSection1Title>6.3. A More Complicated Macro Example</H3>
<P class=docText>Sometimes you may want to find all the references to a particular topic in a file. <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6-sect-3.html#gnu3-chp-6-table-2">Table 6-2</A> lists steps for creating a macro that takes takes every sentence in the buffer that contains the word <SPAN class=docEmphasis>Emacs</SPAN> and copies it to another buffer. If you try this macro, you'll need to type some text about Emacs into a buffer. You can also get a test file to work with by opening the Emacs <SPAN class=docEmphasis>NEWS</SPAN> file (using <SPAN class=docEmphBold>C-h n</SPAN>), then writing it to a file (<SPAN class=docEmphBold>C-x C-w</SPAN> <SPAN class=docEmphBold>NEWS</SPAN>). This buffer is in view mode by default; change to text mode by typing <SPAN class=docEmphBold>M-x text-mode Enter</SPAN>.</P><A name=gnu3-CHP-6-TABLE-2></A>
<H5 class=docTableTitle>Table 6-2. Steps for macro that creates a buffer of Emacs references</H5>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystrokes</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>F3</SPAN> <SPAN class=docEmphasis>or</SPAN> <SPAN class=docEmphBold>C-x (</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText>Start macro definition; <TT>Def</TT> appears on the mode line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-s emacs</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Find the word Emacs.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Stop the search after it is successful; if the search is unsuccessful, it rings the bell and stops the macro.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-a</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the beginning of the sentence.<SUP class=docFootnote><A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6-sect-3.html#gnu3-chp-6-fnote-3">[3]</A></SUP></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-Space</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Set the mark.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-e</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the end of the sentence.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-w</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Copy the sentence to the kill ring.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-x b emacsrefs Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to a buffer called <TT>emacsrefs</TT>.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-y</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert the sentence.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Start the next sentence on a new line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-x b Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move back to the original buffer.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>F4</SPAN> <SPAN class=docEmphasis>or</SPAN> <SPAN class=docEmphBold>C-x )</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText>End the macro definition; <TT>Def</TT> is removed from the mode line.</P></TD></TR></TBODY></TABLE><BR>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=gnu3-CHP-6-FNOTE-3>[3]</A></SUP> <SPAN class=docEmphBold>M-a</SPAN>'s definition of a "sentence" is controlled by the variable <SPAN class=docEmphBold>sentence-end</SPAN>, which is a fairly complex regular expression. By default, a sentence ends with a period, question mark, or exclamation mark, optionally followed by a quotation mark or parenthesis (including brackets or braces), and followed by two or more spaces or a newline.</P></BLOCKQUOTE>
<P class=docText>Now, assume that you've already constructed the macro outlined in <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6-sect-3.html#gnu3-chp-6-table-2">Table 6-2</A> and that you can invoke it with <SPAN class=docEmphBold>F4</SPAN>. The following screen shows what happens when you run it five times and then display the <TT>emacsrefs</TT> buffer.</P><A name=ch06-5-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>M-5 F4</SPAN> or <SPAN class=docEmphBold>M-5 C-x e</SPAN>, followed by <SPAN class=docEmphBold>C-x b Enter</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch06scrn03.gif" width=425 height=206> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>By executing the macro repeatedly, we've created a buffer that contains references to the Emacs editor.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText><FONT class=extract>As in the previous example, you can jump back and forth between an unlimited number of buffers while defining a macro. Macros don't need to be confined to one buffer. Macros that work with several buffers are more difficult to debug; when several buffers are involved, it becomes harder for you to keep track of where the cursor and the mark are. It is also easy to make mistaken assumptions about what buffer you're visiting; hence, it's a good idea to specify the buffer name explicitly. However, after you get accustomed to working with macros and multiple buffers, you'll be amazed at how much work you can do with almost no effort.</FONT></P>
<P class=docText><FONT class=extract>Windows are sometimes useful in macros, but, again, you have to watch out. It's better to start a macro with one window on the screen, have the macro open other windows, and finally close all but one window (<SPAN class=docEmphBold>C-x 1</SPAN>). If you write a macro with two windows on the screen and later try to execute it with four windows on the screen, the results will be unpredictable at best! In general, moving to a named buffer, <SPAN class=docEmphBold>C-x b</SPAN> <TT><I>buffername</I></TT>, is preferable to moving to the "other" window using <SPAN class=docEmphBold>C-x o</SPAN> (too vague to be generally useful). The other window could be anything&#8212;a <TT>*Help*</TT> buffer, <TT>*Completion*</TT> buffer, <TT>*shell*</TT> buffer, and so on. Moving to a named buffer always gets you to the right place, no matter how (or whether) the buffer is displayed.</FONT>