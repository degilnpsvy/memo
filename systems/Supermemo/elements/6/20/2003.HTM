<H3 class=docSection1Title>9.6. Perl Support</H3>
<P class=docText>Emacs has Perl support. Indeed, <A name=gnu3-CHP-9-ITERM-2600></A><A name=gnu3-CHP-9-ITERM-2601></A>much like Perl itself, there are multiple ways to get things done&#8212;in this case, multiple Perl modes: the classic Perl mode (which comes up by default) and the more popular CPerl mode.</P>
<P class=docText>You should have a version of CPerl mode built right in, but you can also pick up the latest release from CPAN (the Comprehensive Perl Archive Network) <A name=gnu3-CHP-9-ITERM-2602></A><A name=gnu3-CHP-9-ITERM-2603></A>online at <A class=docLink href="http://www.cpan.org/" target=_blank>http://www.cpan.org</A>.</P>
<P class=docText>You can add one of the following pairs of lines to your <SPAN class=docEmphasis>.emacs</SPAN> file to make sure CPerl mode is invoked rather than Perl mode</P><PRE>;; load cperl-mode for perl files


(fset 'perl-mode 'cperl-mode)





;; or maybe use an alias


(defalias 'perl-mode 'cperl-mode)
</PRE><BR>
<P class=docText>CPerl mode is mostly like <SPAN class=docEmphBold>cc-mode</SPAN> with respect to motion and other programming language features. It also includes fun debug operations. You can start the debugger with <SPAN class=docEmphBold>M-x cperl-db</SPAN>. You'll be prompted to verify the debugger command and then be dropped into a split-screen mode. One buffer allows you to drive the normal <SPAN class=docEmphBold>perldb</SPAN> environment with all the regular commands you're accustomed to using in the Perl debugger.</P>
<P class=docText>The other buffer shows your script and follows along as you work through the debugger. It tracks the line you're about to execute as you issue commands in the other buffer. It's amazing how quickly you grow to depend on having such tools available while you're developing scripts. It is worth trying out if you've never done it before.</P><A name=gnu3-CHP-9-SECT-6.1></A>
<H4 class=docSection2Title>9.6.1 Perl Caveats</H4>
<P class=docText>A big reason we wanted to mention Perl mode here is to highlight a few caveats. Perl is an amazingly expressive language much more akin to the idioms found in human languages than just about any other computer language out there. That expressiveness can cause problems&#8212;especially when considering the expressiveness of regular expressions.</P>
<P class=docText>Perl supports all sorts of "funny" variable names like <TT><B>$'</B></TT> and <TT><B>$/</B></TT>. CPerl mode boasts the use of a syntax table to help understand most of Perl's odd and occasionally disruptive verbiage. The older Perl mode has no such trick up its sleeves and suffers under many circumstances in the font-lock and indentation realms. This is one of the main reasons to make the leap into CPerl mode.</P>
<P class=docText>Even with that syntax table, though, you'll probably find some combinations of variables and strings that give Emacs headaches. Sometimes restructuring your code will help, sometimes not. The important thing to remember is that it won't harm your program at all. It might make things a bit less readable, but the script itself should run just fine. And if it doesn't, you can always launch the debugger to find out why!</P>
<P class=docText>Here are some parting <SPAN class=docEmphasis>.emacs</SPAN> thoughts for you Perl programmers. These lines select <SPAN class=docEmphBold>cperl-mode</SPAN> as the default and make sure the syntax highlighting is turned on. These lines also turn on <SPAN class=docEmphasis>folding</SPAN> (<SPAN class=docEmphBold>outline-minor-mode</SPAN> in the snippet below). Folding allows you to "hide" chunks of your code, such as functions where the body of the function is "folded" into the name. That can make it easier to get a grip on everything that is going on in the file. Try it&#8212;it can become addictive!</P><PRE>;; Turn on highlighting globally


(global-font-lock-mode t)





;; automatically load cperl-mode for perl files


(fset 'perl-mode 'cperl-mode)





;; show only the toplevel nodes when loading a file


(add-hook 'cperl-mode-hook 'hide-body)





;; outline minor mode with cperl


(add-hook 'cperl-mode-hook 'outline-minor-mode)





;; Change the prefix for outline commands from C-c @ to C-c C-o


(setq outline-minor-mode-prefix "\C-co")





(load-file "cperl-mode.el")
</PRE>