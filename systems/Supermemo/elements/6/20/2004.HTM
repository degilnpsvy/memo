<H3 class=docSection1Title>9.7. SQL Support</H3>
<P class=docText>For you database folks out <A name=gnu3-CHP-9-ITERM-2604></A><A name=gnu3-CHP-9-ITERM-2605></A>there, you can even run interactive SQL sessions through Emacs. You can navigate through your SQL command history using normal motion commands and even create complex SQL statements in any buffer and then shuttle them off to the interactive area for debugging.</P><A name=gnu3-CHP-9-SECT-7.1></A>
<H4 class=docSection2Title>9.7.1 Prerequisites</H4>
<P class=docText>Before we get started with SQL queries, you do need to have a few things in place. Most of the SQL interaction modes require an actual client application for their particular database. For example, we use the MySQL server. We have to install the MySQL client programs (<TT>mysql</TT>, at a minimum) on any system where we want to use SQL mode. Even though the MySQL version of SQL mode is built-in, we still need access to a real client. This is true for every type of database you expect to access.</P>
<P class=docText>And speaking of communicating with the database, you must also have the basics of communication taken care of. You need to have network access to the server in question. You also need to have a valid username and password for connecting to that server. A good rule before jumping into SQL mode in Emacs is to make sure you can connect and interact with your database server from your machine. If it works from a terminal window or other client application, you can make it work in Emacs.</P>
<P class=docText>One last thing to remember: the various SQL modes in Emacs are just helpers, so you can't do anything with them that you couldn't do with your normal database client. You won't magically have access to that restricted table with everyone's salaries. Sorry. Even so, it's just more convenient to stay in Emacs when possible, so let's forge ahead.</P><A name=gnu3-CHP-9-SECT-7.2></A>
<H4 class=docSection2Title>9.7.2 Modes of Operation</H4>
<P class=docText>You'll find two modes <A name=gnu3-CHP-9-ITERM-2606></A><A name=gnu3-CHP-9-ITERM-2607></A><A name=gnu3-CHP-9-ITERM-2608></A>of operation for dealing with SQL. The interactive mode lets you communicate directly with a database server and run commands and view their output immediately. The editing mode allows you to build up (and edit) more complex commands. If you want, you can have the editing buffer send parts of itself to the interactive session for testing and verification.</P><A name=gnu3-CHP-9-SECT-7.2.1></A>
<H5 class=docSection3Title>9.7.2.1 Interactive mode</H5>
<P class=docText>Start the interactive mode by typing <SPAN class=docEmphBold>M-x sql-mysql</SPAN> (or rather, your own variant of the interactive modes shown in <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-9-sect-7.html#gnu3-chp-9-table-9">Table 9-9</A>).</P><A name=gnu3-CHP-9-TABLE-9></A>
<H5 class=docTableTitle>Table 9-9. Commands for entering database-specific SQL modes</H5>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-db2</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-linter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-postgres</SPAN> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-informix</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-ms (Microsoft)</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-solid</SPAN> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-ingres</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-mysql</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-sqlite</SPAN> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-interbase</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-oracle</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sql-sybase</SPAN> </P></TD></TR></TBODY></TABLE><BR>
<P class=docText>You'll be prompted for things like your username and password, the database or catalog to use, and the server to contact. Remember the prerequisites, though; many modes require that you have a normal command-line client available. The mode simply supplies an intelligent layer on top of those clients.</P>
<P class=docText>After you get connected, just type normal SQL commands that your server understands. Most interactive clients have some type of "end-of-line" marker to let the system know when to send a completed command. In MySQL, for example, you can end statements with a semicolon (;) or the <SPAN class=docEmphBold>\g</SPAN> sequence.</P>
<P class=docText>Emacs keeps these commands in a history buffer for you so that you can revisit them. <SPAN class=docEmphBold>M-p</SPAN> and <SPAN class=docEmphBold>M-n</SPAN> allow you navigate to previous and next commands respectively. (<SPAN class=docEmphBold>C-p</SPAN> and <SPAN class=docEmphBold>C-n</SPAN> simply allow you to move around in the buffer as you would expect.)</P><A name=gnu3-CHP-9-SECT-7.2.2></A>
<H5 class=docSection3Title>9.7.2.2 Editing mode</H5>
<P class=docText>You can also put a buffer <A name=gnu3-CHP-9-ITERM-2609></A><A name=gnu3-CHP-9-ITERM-2610></A><A name=gnu3-CHP-9-ITERM-2611></A>directly into SQL mode with <SPAN class=docEmphBold>M-x sql-mode</SPAN>. This provides some assistance for motion and composition of SQL statements, but mostly it's there to let you build complex statements and then ship them to the interactive buffer for execution. <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-9-sect-7.html#gnu3-chp-9-table-10">Table 9-10</A> shows how to send various segments of the buffer to the database.</P><A name=gnu3-CHP-9-TABLE-10></A>
<H5 class=docTableTitle>Table 9-10. SQL mode send commands</H5>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystroke</P></TH>
<TH class=thead scope=col>
<P class=docText>Command name</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>sql-send-paragraph</P></TD>
<TD class=docTableCell>
<P class=docText>Send the paragraph the cursor is on. A paragraph is defined by the particular database client. For the <SPAN class=docEmphBold>sql-mysql</SPAN> process, for example, a paragraph begins with a statement like select or update and ends with a semicolon. Any number of lines can intervene.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-r</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>sql-send-region</P></TD>
<TD class=docTableCell>
<P class=docText>Send the marked region.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-b</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>sql-send-buffer</P></TD>
<TD class=docTableCell>
<P class=docText>Send the entire buffer.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>The output of all of these send commands shows up in your interactive buffer. Nothing changes in the editing buffer so you should feel free to experiment. That's what these modes are here for!