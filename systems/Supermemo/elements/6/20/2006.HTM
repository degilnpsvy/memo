<H3 style="BACKGROUND: white; MARGIN: 13pt 0cm"><SPAN lang=EN-US style="COLOR: #1e5798; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT size=5>11.1. Introduction to Lisp</FONT></SPAN></H3>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">You may have heard of Lisp as a<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2736></A>language for artificial intelligence (AI). If you aren't into AI, don't worry. Lisp may have an unusual syntax, but many of its basic features are just like those of more conventional languages you may have seen, such as Java or Perl. We emphasize such features in this chapter. After introducing the basic Lisp concepts, we proceed by building up various example functions that you can actually use in Emacs. In order to try out the examples, you should be familiar with Emacs Lisp mode and Lisp interaction mode, which were discussed in<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-9.html#gnu3-chp-9"><SPAN style="COLOR: #1e5798">Chapter 9</SPAN></A>.</SPAN></P>
<H4 style="BACKGROUND: white; MARGIN: 14pt 0cm 14.5pt; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" name=gnu3-CHP-11-SECT-1.1></A><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: #1e5798; LINE-HEIGHT: 156%; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN><SPAN style="FLOAT: none; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT size=5><FONT face=Cambria>11.1.1 Basic Lisp Entities</FONT></FONT></SPAN></H4>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>The basic elements<SPAN class=apple-converted-space>&nbsp;</SPAN></FONT><A name=gnu3-CHP-11-ITERM-2737></A><A name=gnu3-CHP-11-ITERM-2738></A><FONT class=extract>in Lisp you need to be familiar with are functions, variables, and atoms. Functions are the only<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>program units</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>in Lisp; they cover the notions of procedures, subroutines, programs, and even operators in other languages.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN class=docemphasis><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Functions</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are defined as lists of the above entities, usually as lists of calls to other, existing functions. All functions<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2739></A><A name=gnu3-CHP-11-ITERM-2740></A><A name=gnu3-CHP-11-ITERM-2741></A>have<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>return values</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(as with Perl functions and non-void Java methods); a function's return value is simply the value of the last item in the list, usually the value returned by the last function called. A function call within another function is equivalent to a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>statement </SPAN>in other languages, and we use statement interchangeably with function call in this chapter. Here is the syntax for function:</SPAN></FONT></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT face=&#23435;&#20307;><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">(</SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>function-name</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"> </SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>argument1</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"> </SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>argument2</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"> ...)</SPAN></FONT></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">which is equivalent to this:</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT face=&#23435;&#20307;><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>method_name </FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">(</SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>argument1, argument2,</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"> ...);</SPAN></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">in Java. This syntax is used for<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2742></A><A name=gnu3-CHP-11-ITERM-2743></A>all functions, including those equivalent to arithmetic or comparison operators in other languages. For example, in order to add 2 and 4 in Java or Perl, you would use the expression 2 + 4, whereas in Lisp you would use the following:</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>(+ 2 4)</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Similarly, where you would use 4 &gt;= 2 (greater than or equal to), the Lisp equivalent is:</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>(&gt;= 4 2)</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN class=docemphasis><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Variables</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">in Lisp are<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2744></A><A name=gnu3-CHP-11-ITERM-2745></A>similar to those in any other language, except that they do not have<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>types</SPAN>. A Lisp variable can assume any type of value (values themselves do have types, but variables don't impose restrictions on what they can hold).</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN class=docemphasis><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Atoms</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are values of<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2746></A><A name=gnu3-CHP-11-ITERM-2747></A>any type, including integers, floating point (real) numbers, characters, strings, Boolean truth values, symbols, and special Emacs types such as buffers, windows, and processes. The syntax for various kinds of atoms is:</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Integers</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are what you would<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2748></A><A name=gnu3-CHP-11-ITERM-2749></A><A name=gnu3-CHP-11-ITERM-2750></A><A name=gnu3-CHP-11-ITERM-2751></A>expect: signed whole numbers in the range -2<SUP>27</SUP><SPAN class=apple-converted-space>&nbsp;</SPAN>to 2<SUP>27</SUP>-1.</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Floating point numbers</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are real<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2752></A>numbers that you can represent with decimal points and scientific notation (with lowercase "e" for the power of 10). For example, the number 5489 can be written 5489, 5.489e3, 548.9e1, and so on.</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Characters</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are preceded by a question<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2753></A>mark, for example,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>?a</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">.<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Esc</SPAN>,<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Newline</SPAN>, and<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Tab</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>are abbreviated<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>\e</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>\n</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, and<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>\t</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">respectively; other control characters are denoted with the prefix<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>\C-</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, so that (for example)<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>C-a</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is denoted as<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>?\C-a</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">.<SUP><A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-11-sect-1.html#gnu3-chp-11-fnote-3"><SPAN style="COLOR: #1e5798">[3]</SPAN></A></SUP></SPAN></FONT></P>
<P class=docfootnote style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt"><A name=gnu3-CHP-11-FNOTE-3><SUP><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>[3]</FONT></SPAN></SUP></A><SPAN style="mso-bookmark: gnu3-CHP-11-FNOTE-3"></SPAN><FONT class=extract><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Integers are also allowed where characters are expected. The ASCII code is used on most machines. For example, the number 65 is interpreted as the character A on such a machine.</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Strings</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are surrounded by<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2754></A>double quotes; quote marks and backslashes within strings need to be preceded by a backslash. For example, "</SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>Jane said, \"See</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>Dick run.\"</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">" is a legal string. Strings can be split across multiple lines without any special syntax. Everything until the closing quote, including all the line breaks, is part of the string value.</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Booleans</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">use<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>t</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">for true and<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">for false,<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2755></A>though most of the time, if a Boolean value is expected, any non-</SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">value is assumed to mean true.<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">is also used as a null or nonvalue in various situations, as we will see.</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l1 level1 lfo1; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Symbols</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">are names of things in Lisp, for<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2756></A>example, names of variables or functions. Sometimes it is important to refer to the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>name</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>of something instead of its value, and this is done by preceding the name with a single quote ('). For example, the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>define-key</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>function, described in<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-10.html#gnu3-chp-10"><SPAN style="COLOR: #1e5798">Chapter 10</SPAN></A>, uses the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>name</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>of the command (as a symbol) rather than the command itself.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">A simple example that ties many of these basic Lisp concepts together is the function<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN>.<SUP><A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-11-sect-1.html#gnu3-chp-11-fnote-4"><SPAN style="COLOR: #1e5798">[4]</SPAN></A></SUP><SPAN class=apple-converted-space>&nbsp;</SPAN>As you may have figured out from previous chapters,<SPAN class=apple-converted-space>&nbsp;</SPAN><FONT class=extract><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is a way of assigning values to variables</FONT>, as in</SPAN></P>
<P class=docfootnote style="BACKGROUND: white; MARGIN: auto 0cm"><A name=gnu3-CHP-11-FNOTE-4><SUP><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">[4]</SPAN></SUP></A><SPAN style="mso-bookmark: gnu3-CHP-11-FNOTE-4"></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">We hope that Lisp purists will forgive us for calling<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>a function, for the sake of simplicity, rather than a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>form</SPAN>, which it technically is.</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>(setq auto-save-interval 800)</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Notice that<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is a function, unlike in other languages in which special syntax such as<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>=</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">or<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>:=</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN></FONT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>is used for assignment.<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>takes two arguments: a variable name and a value.</FONT> In this example, the variable<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>auto-save-interval</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(the number of keystrokes between auto-saves) is set to the value<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>800</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">setq</SPAN></SPAN><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">can actually be used to assign values to multiple variables, as in</SPAN></FONT></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT face=&#23435;&#20307;><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">(setq </SPAN><FONT size=3><TT><I><SPAN lang=EN-US style="COLOR: black">thisvar thisvalue</SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"></SPAN></FONT></FONT></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><FONT size=3><FONT face=&#23435;&#20307;><TT><I><SPAN lang=EN-US style="COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>thatvar thatvalue</SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"></SPAN></FONT></FONT></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><FONT face=&#23435;&#20307;><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>theothervar theothervalue</FONT></SPAN></I></TT><SPAN class=docemphbold><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">)</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"></SPAN></FONT></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>The return value of<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is simply the last value assigned</FONT>, in this case<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>theothervalue</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">. You can set the values of variables in other ways, as we'll see, but<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is the most widely applicable.</SPAN></P>
<H4 style="BACKGROUND: white; MARGIN: 14pt 0cm 14.5pt; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" name=gnu3-CHP-11-SECT-1.2></A><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: #1e5798; LINE-HEIGHT: 156%; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN><SPAN style="FLOAT: none; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT size=5><FONT face=Cambria>11.1.2 Defining Functions</FONT></FONT></SPAN></H4>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Now it's time for<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2757></A><A name=gnu3-CHP-11-ITERM-2758></A>an example of a simple function definition. <FONT class=extract>Start Emacs without any arguments; this puts you into the<SPAN class=apple-converted-space>&nbsp;</SPAN></FONT></SPAN><FONT class=extract><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>*scratch*</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">buffer, an empty buffer in Lisp interaction mode (see<A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-9.html#gnu3-chp-9"><SPAN style="COLOR: #1e5798">Chapter 9</SPAN></A>), so that you can actually try this and subsequent examples.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Before we get to the example, however, some more comments on Lisp syntax are necessary. First, you will notice that the dash (</SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>-</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">) is used as a "break" character to separate words in names of variables, functions, and so on. This practice is simply a widely used Lisp programming convention; thus the dash takes the place of the underscore (</SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>_</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">) in languages like C and Ada. A more important issue has to do with all of the parentheses in Lisp code. Lisp is an<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>old</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>language that was designed before anyone gave much thought to language syntax (it was still considered amazing that you could use any language other than the native processor's binary instruction set), so its syntax is not exactly programmer-friendly. Yet Lisp's heavy use of lists&#8212;and thus its heavy use of parentheses&#8212;has its advantages, as we'll see toward the end of this chapter.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The main problem a programmer faces is how to keep all the parentheses balanced properly. Compounding this problem is the usual programming convention of putting multiple right parentheses at the end of a line, rather than the more readable technique of placing each right parenthesis directly below its matching left parenthesis. Your best defense against this is the support the Emacs Lisp modes give you, particularly the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Tab</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>key for proper indentation and the flash-matching-parenthesis feature.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Now we're ready for our example function. Suppose you are a student or journalist who needs to keep track of the number of words in a paper or story you are writing. Emacs has no built-in way of counting the number of words in a buffer, so we'll write a Lisp function that does the job:</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>1<SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(defun count-words-buffer ( )</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>2<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>(let ((count 0))</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>3<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(save-excursion</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>4<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(goto-char (point-min))</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;5</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(while (&lt; (point) (point-max))</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>6<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(forward-word 1)</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>7<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(setq count (1+ count)))</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>8<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(message "buffer contains %d words." count))))</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Let's go through this function line by line and see what it does. (Of course, if you are trying this in Emacs, don't type the line numbers in.)</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>defun</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>on line 1 defines the function by its name and arguments. Notice that<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>defun</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is itself a function&#8212;one that, when called, defines a new function. (<SPAN class=docemphbold>defun</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>returns the name of the function defined, as a symbol.) The function's arguments appear as a list of names inside parentheses; in this case, the function has no arguments. Arguments can be made<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>optional</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>by preceding them with the keyword<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>&amp;optional</SPAN>. If an argument is optional and not supplied when the function is called, its value is assumed to be<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Line 2 contains a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>construct, whose general form is:</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT face=&#23435;&#20307;><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">(let ((</SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>var1 value</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">1) (var2 value2) ... )</SPAN></FONT></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp; </SPAN></SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>statement-block</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">)</SPAN></FONT></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The first thing<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>does is define the variables<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>var1</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>var2</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, etc., and set them to the initial values<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>value1</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>value2</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, etc. Then<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>executes the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>statement block</SPAN>, which is a sequence of function calls or values, just like the body of a function.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>It is useful to think of<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>as doing three things:</FONT></SPAN></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Defining (or declaring) a list of variables</SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Setting the variables to initial values, as if with<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN></SPAN></FONT></P>
<P class=doclist style="BACKGROUND: white; MARGIN: auto 0cm auto 36pt; TEXT-INDENT: -18pt; mso-list: l0 level1 lfo2; tab-stops: list 36.0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: Symbol; mso-fareast-font-family: Symbol; mso-bidi-font-family: Symbol"><SPAN style="mso-list: Ignore">&#183;<SPAN style="FONT: 7pt 'Times New Roman'">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Creating a block in which the variables are known; the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>block is known as the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>scope</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>of the variables</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>If a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is used to define a variable, its value can be reset later within the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>block with<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN>. Furthermore, a variable defined with<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>can have the same name as a global variable; all<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN>s on that variable within the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>block act on the local variable, leaving the global variable undisturbed. However, a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>setq</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>on a variable that is not defined with a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>affects the global environment. It is advisable to avoid using global variables as much as possible because their names might conflict with those of existing global variables and therefore your changes might have unexpected and inexplicable side effects later on.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">So, in our example function, we use<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>to define the local variable<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>count</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>and initialize it to 0. As we will see, this variable is used as a loop counter.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Lines 3 through 8 are the statements within the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>block. The first of these calls <FONT class=extract>the built-in Emacs function<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>save-excursion</SPAN>, which is a way of being polite. The function is going to move the cursor around the buffer, so we don't want to disorient the user by jumping them to a strange place in their file just because they asked for a word count. Calling<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>save-excursion</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>tells Emacs to remember the location of cursor at the beginning of the function, and go back there after executing any statements in its body. Notice how<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>save-excursion</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is providing us with capability similar to<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN>; you can think of it as a way of making the cursor location itself a local variable.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Line 4 calls<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>goto-char</SPAN>. The argument to<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>goto-char</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is a (nested) function call to the built-in function<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>point-min</SPAN>. As we have mentioned before,<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>point</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is Emacs's internal name for the position of the cursor, and we'll refer to the cursor as point throughout the remainder of this chapter.<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>point-min</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>returns the value of the first character position in the current buffer, which is almost always 1; then,<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>goto-char</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is called with the value 1, which has the effect of moving point to the beginning of the buffer.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The next line sets up a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>loop; Java and Perl have a similar construct. The<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>construct has the general form</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT face=&#23435;&#20307;><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;<FONT class=extract> </FONT></SPAN><FONT class=extract>(while </FONT></SPAN><FONT class=extract><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>condition</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT size=3>statement-block</FONT></SPAN></I></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black">)</SPAN></FONT></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Like<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>let</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>and<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>save-excursion</SPAN>,<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>sets up another statement block.<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>condition</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is a value (an atom, a variable, or a function returning a value). This value is tested; if it is<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, the condition is considered to be false, and the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>loop terminates. If the value is other than<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, the condition is considered to be true, the statement block gets executed, the condition is tested again, and the process repeats.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Of course, it is possible to write an infinite loop. If you write a Lisp function with a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>loop and try running it, and your Emacs session hangs, chances are that you have made this all-too-common mistake; just type<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>C-g</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>to abort it.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">In our sample function, the condition is the function<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>&lt;</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, which is a less-than function with two arguments, analogous to the &lt; operator in Java or Perl. The first argument is another function that returns the current character position of point; the second argument returns the maximum character position in the buffer, that is, the length of the buffer. The function<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>&lt;</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">(and other relational functions) return a Boolean value,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>t</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">or<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>nil</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The loop's statement block consists of two statements. Line 6 moves point forward one word (i.e., as if you had typed<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>M-f</SPAN>). Line 7 increments the loop counter by 1;<FONT class=extract> the function<SPAN class=apple-converted-space>&nbsp;</SPAN></FONT></SPAN><FONT class=extract><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>1+</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">is shorthand for<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>(+ 1 variable-name)</FONT></SPAN></TT></FONT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>.</FONT> Notice that the third right parenthesis on line 7 matches the left parenthesis preceding<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN>. So, the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>while</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>loop causes Emacs to go through the current buffer a word at a time while counting the words.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The final statement in the function uses the built-in function<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>message</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>to print a message in the minibuffer saying how many words the buffer contains. <FONT class=extract>The form of the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>message</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>function will be familiar to C programmers. The first argument to<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>message</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is a format string, which contains text and special formatting instructions of the form<SPAN class=apple-converted-space>&nbsp;</SPAN></FONT></SPAN><FONT class=extract><TT><SPAN lang=EN-US style="COLOR: black"><FONT size=3><FONT face=&#23435;&#20307;>%<I>x</I></FONT></FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, where<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><I><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>x</FONT></SPAN></I></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">is one of a few possible letters. For each of these instructions, in the order in which they appear in the format string,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>message</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">reads the next argument and tries to interpret it according to the letter after the percent sign.<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-11-sect-1.html#gnu3-chp-11-table-1"><SPAN style="COLOR: #1e5798">Table 11-1</SPAN></A><SPAN class=apple-converted-space>&nbsp;</SPAN>lists meanings for the letters in the format string.</SPAN></FONT></P>
<H5 style="BACKGROUND: white; MARGIN: 14pt 0cm 14.5pt; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" name=gnu3-CHP-11-TABLE-1></A><SPAN lang=EN-US style="COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN><FONT size=5><FONT face=Calibri><FONT class=extract><SPAN style="FLOAT: none; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Table 11-1. Message format strings</SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; LINE-HEIGHT: 156%; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></FONT></H5>
<TABLE class=MsoNormalTable style="BACKGROUND: white; WORD-SPACING: 0px; WIDTH: 100%; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-cellspacing: 0cm; mso-yfti-tbllook: 1184; mso-padding-alt: 3.0pt 3.0pt 3.0pt 3.0pt" cellSpacing=0 cellPadding=0 rules=all width="100%" border=1>
<COLGROUP><FONT size=5>
<COL>
<COL><FONT class=extract face=Calibri></FONT></FONT></COLGROUP>
<THEAD>
<TR style="mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm; TEXT-ALIGN: center" align=center><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Format string</FONT></SPAN></B></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm; TEXT-ALIGN: center" align=center><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Meaning</FONT></SPAN></B></P></TD></TR></THEAD>
<TBODY>
<TR style="mso-yfti-irow: 1">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>%s</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>String or symbol</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 2">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>%c</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Character</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 3">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>%d</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Integer</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 4">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>%e</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Floating point in scientific notation</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 5">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>%f</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Floating point in decimal-point notation</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 6; mso-yfti-lastrow: yes">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>%g</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Floating point in whichever format yields the shortest string</FONT></SPAN></P></TD></TR></TBODY></TABLE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract></FONT></SPAN><SPAN lang=EN-US style="FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>For example:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(message "\"%s\" is a string, %d is a number, and %c is a character" </FONT></SPAN></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>"hi there" 142 ?q)</FONT></SPAN></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>causes the message:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>"hi there" is a string, 142 is a number, and q is a character</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>to appear in the minibuffer. This is analogous to the C code:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>printf ("\"%s\" is a string, %d is a number, and %c is a character\n", </FONT></SPAN></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>"hi there", 142, 'q');</FONT></SPAN></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>The floating-point-format characters are a bit more complicated. They assume a certain number of significant digits unless you tell them otherwise. For example, the following:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(message "This book was printed in %f, also known as %e." 2004 2004)</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>yields this:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>This book was printed in 2004.000000, also known as 2.004000e+03.</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">But you can control the number of digits after the decimal point by inserting a period and the number of digits desired between the<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>%</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">and<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2759></A><A name=gnu3-CHP-11-ITERM-2760></A>the<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>e</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>f</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">, or<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>g</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">. For example, this:</SPAN></FONT></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(message "This book was printed in %.3e, also known as %.0f." 2004 2004)</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>prints in the minibuffer:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>This book was printed in 2.004e+03, also known as 2004.</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT face=&#23435;&#20307;></FONT></SPAN><A style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" name=gnu3-CHP-11-SECT-1.3></A><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></SPAN></P><SPAN style="FLOAT: none; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">
<H4 style="BACKGROUND: white; MARGIN: 14pt 0cm 14.5pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: #1e5798; LINE-HEIGHT: 156%; FONT-FAMILY: 'Tahoma','sans-serif'">11.1.3 Turning Lisp Functions into Emacs Commands</SPAN></H4>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>count-words-buffer</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>function<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2761></A><A name=gnu3-CHP-11-ITERM-2762></A>that we've just finished works, but it still isn't as convenient to use as the Emacs commands you work with daily. If you have typed it in, try it yourself. First <FONT class=extract>you need to get Emacs to evaluate the lines you typed in, thereby actually defining the function. To do this, move your cursor to just after the last closing parenthesis in the function and type<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>C-j</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(or<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Linefeed</SPAN>)&#8212;the "evaluate" key in Lisp interaction mode&#8212;to tell Emacs to perform the function definition. You should see the name of the function appear again in the buffer; the return value of the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>defun</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>function is the symbol that has been defined. (If instead you get an error message, double check that your function looks exactly like the example and that you haven't typed in the line numbers, and try again.)</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Once the function is defined, you can execute it by typing<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>(count-words-buffer)</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>on its own line in your Lisp interaction window, and once again typing<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>C-j</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>after the closing parenthesis.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Now that you can execute the function correctly from a Lisp interaction window,<FONT class=extract> try executing the function with<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>M-x</SPAN>, as with any other Emacs command. Try typing<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>M-x count-words-buffer Enter</SPAN>: you will get the error message<SPAN class=apple-converted-space>&nbsp;</SPAN></FONT></SPAN><FONT class=extract><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>[No match]</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">. (You can type<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>C-g</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>to cancel this failed attempt.) You get this error message because you need to "register" a function with Emacs to make it available for interactive use. The function to do this is<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN>, which has the form:</SPAN></FONT></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(interactive "prompt-string")</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>This statement should be the first in a function, that is, right after the line containing the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>defun</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>and the documentation string (which we will cover shortly). Using<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>causes Emacs to register the function as a command and to prompt the user for the arguments declared in the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>defun</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>statement. The prompt string is optional.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The prompt string has a special format: for each argument you want to prompt the user for, you provide a section of prompt string. The sections are separated by newlines (</SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>\n</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">). The first letter of each<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2763></A><A name=gnu3-CHP-11-ITERM-2764></A><A name=gnu3-CHP-11-ITERM-2765></A><A name=gnu3-CHP-11-ITERM-2766></A>section is a code for the type of argument you want. There are many choices; the most commonly used are listed in<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/&#229;&#183;&#165;&#228;&#189;&#339;&#229;&#376;&#186;&#231;&#161;&#8364;/learning-gnu-emacs-3rd/0596006489/gnu3-chp-11-sect-1.html#gnu3-chp-11-table-2"><SPAN style="COLOR: #1e5798">Table 11-2</SPAN></A>.</SPAN></FONT></P>
<H5 style="BACKGROUND: white; MARGIN: 14pt 0cm 14.5pt; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><A style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px" name=gnu3-CHP-11-TABLE-2></A><SPAN lang=EN-US style="COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN><FONT size=5><FONT face=Calibri><FONT class=extract><SPAN style="FLOAT: none; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px">Table 11-2. Argument codes for interactive functions</SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; LINE-HEIGHT: 156%; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></FONT></H5>
<TABLE class=MsoNormalTable style="BACKGROUND: white; WORD-SPACING: 0px; WIDTH: 100%; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-cellspacing: 0cm; mso-yfti-tbllook: 1184; mso-padding-alt: 3.0pt 3.0pt 3.0pt 3.0pt" cellSpacing=0 cellPadding=0 rules=all width="100%" border=1>
<COLGROUP><FONT size=5>
<COL>
<COL><FONT class=extract face=Calibri></FONT></FONT></COLGROUP>
<THEAD>
<TR style="mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm; TEXT-ALIGN: center" align=center><FONT class=extract><SPAN class=docemphbold><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'">Code</SPAN></B></SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></B></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm; TEXT-ALIGN: center" align=center><FONT class=extract><SPAN class=docemphbold><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'">User is prompted for</SPAN></B></SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'">:</SPAN></B></FONT></P></TD></TR></THEAD>
<TBODY>
<TR style="mso-yfti-irow: 1">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>b</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Name of an existing buffer</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 2">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>e</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Event (mouse action or function key press)</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 3">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>f</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Name of an existing file</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 4">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>n</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Number (integer)</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 5">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>s</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>String</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 6">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'; mso-fareast-font-family: &#23435;&#20307;"></SPAN></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT class=extract><SPAN class=docemphasis><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'">Most of these have uppercase variations</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></P></TD></TR>
<TR style="mso-yfti-irow: 7">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>B</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Name of a buffer that may not exist</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 8">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>F</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Name of a file that may not exist</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 9">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>N</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Number, unless command is invoked with a prefix argument, in which case use the prefix argument and skip this prompt</FONT></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 10; mso-yfti-lastrow: yes">
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><FONT face=&#23435;&#20307;><FONT class=extract><TT><SPAN lang=EN-US>S</SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"></SPAN></FONT></FONT></P></TD>
<TD style="BORDER-RIGHT: #ffffff; PADDING-RIGHT: 3pt; BORDER-TOP: #ffffff; PADDING-LEFT: 3pt; PADDING-BOTTOM: 3pt; BORDER-LEFT: #ffffff; PADDING-TOP: 3pt; BORDER-BOTTOM: #ffffff; BACKGROUND-COLOR: white">
<P class=doctext style="MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>Symbol</FONT></SPAN></P></TD></TR></TBODY></TABLE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"></SPAN><SPAN lang=EN-US style="FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>With the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>b</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>and<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>f</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>options, Emacs signals an error if the buffer or file given does not already exist. Another useful option to<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>r</SPAN></FONT>, which we will see later. There are many other option letters; consult the documentation for function<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>for the details. The rest of each section is the actual prompt that appears in the minibuffer.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The way<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is used to fill in function arguments is somewhat complicated and best explained through an example. A simple example is in the function<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>goto-percent</SPAN>, which we will see shortly. It contains the statement</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(interactive "nPercent: ")</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>n</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">in the prompt string tells Emacs to prompt for an integer; the string<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>Percent</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">: appears in the minibuffer.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>As a slightly more complicated example, let's say we want to write our own version of the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>replace-string</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>command. Here's how we would do the prompting:</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(defun replace-string (from to)</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(interactive "sReplace string: \nsReplace string %s with: ")</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>...)</FONT></SPAN></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">The prompt string consists of two sections,<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>sReplace string</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">: and<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>sReplace string</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>%s with</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">:, separated by a Newline. The initial<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>s</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">in each means that a string is expected; the<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>%s</FONT></SPAN></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">is a formatting operator (as in the previous<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>message</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>function) that Emacs replaces with the user's response to the first prompt. When applying formatting operators in a prompt, it is as if <SPAN class=docemphbold>message</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>has been called with a list of all responses read so far, so the first formatting operator is applied to the first response, and so on.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">When this command is invoked, first the prompt<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>Replace string</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">: appears in the minibuffer. Assume the user types<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><B><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>fred</FONT></SPAN></B></TT><SPAN class=apple-converted-space><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">in response. After the user presses<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Enter</SPAN>, the prompt<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><TT><SPAN lang=EN-US style="COLOR: black"><FONT face=&#23435;&#20307; size=3>Replace fred with</FONT></SPAN></TT><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">: appears. The user types the replacement string and presses<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>Enter</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>again.</SPAN></FONT></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>The two strings the user types are used as values of the function arguments<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>from</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>and<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>to</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(in that order), and the command runs to completion. Thus,<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>supplies values to the function's arguments in the order of the sections of the prompt string.</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>The use of<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>does not preclude calling the function from other Lisp code; in this case, the calling function needs to supply values for all arguments. For example, if we were interested in calling our version of<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>replace-string</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>from another Lisp function that needs to replace all occurrences of "Bill" with "Deb" in a file, we would use</FONT></SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(replace-string "Bill" "Deb")</FONT></SPAN></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><BR style="WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; mso-special-character: line-break"><BR style="mso-special-character: line-break"><FONT class=extract face=&#23435;&#20307;></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: &#23435;&#20307;; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: &#23435;&#20307;"></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'"><FONT class=extract>The function is not being called interactively in this case, so the<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>statement has no effect; the argument<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>from</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is set to "Bill," and<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>to</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>is set to "Deb."</FONT></SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">Getting back to our<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>count-words-buffer</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>command: it has no arguments, so its<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>interactive</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>command does not need a prompt string. The final modification we want to make to our command is to add a<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>documentation string</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(or<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphasis>doc string</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>for short), which is shown by online help facilities such as<SPAN class=apple-converted-space>&nbsp;</SPAN><SPAN class=docemphbold>describe-function</SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>(<SPAN class=docemphbold>C-h f</SPAN>). Doc strings are normal Lisp strings; they are optional and can be arbitrarily many lines long, although, by convention, the first line is a terse, complete sentence summarizing the command's functionality. Remember that any double quotes inside a string need to be preceded by backslashes.</SPAN></P>
<P class=doctext style="BACKGROUND: white; MARGIN: auto 0cm; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black; FONT-FAMILY: 'Tahoma','sans-serif'">With all of the fixes taken into<SPAN class=apple-converted-space>&nbsp;</SPAN><A name=gnu3-CHP-11-ITERM-2767></A><A name=gnu3-CHP-11-ITERM-2768></A>account, the complete function looks like this:</SPAN></P><PRE style="BACKGROUND: white; WORD-SPACING: 0px; ORPHANS: 2; WIDOWS: 2; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT class=extract face=&#23435;&#20307;>(defun count-words-buffer ( )</FONT></SPAN></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>"Count the number of words in the current buffer; </FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>print a message in the minibuffer with the result."</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(interactive)</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp; </SPAN>(save-excursion</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>(let ((count 0))</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(goto-char (point-min))</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp; </FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(while (&lt; (point) (point-max))</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(forward-word 1)</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(setq count (1+ count)))</FONT></SPAN></FONT></PRE><PRE style="BACKGROUND: white"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;>&nbsp;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 10pt; COLOR: black"><FONT face=&#23435;&#20307;><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>(message "buffer contains %d words." count))))</FONT></SPAN></FONT></PRE>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US><FONT class=extract face=Calibri size=3>&nbsp;</FONT></SPAN></P></SPAN>