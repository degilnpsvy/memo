<H3 class=docSection1Title>6.8. Building More Complicated Macros</H3>
<P class=docText>So far, we've covered the basics of writing, executing, and saving keyboard macros. Now let's discuss a couple of more advanced features Emacs lets you add to your macros: pausing a macro for keyboard input and inserting a query in a macro.</P><A name=gnu3-CHP-6-SECT-8.1></A>
<H4 class=docSection2Title>6.8.1 Pausing a Macro for Keyboard Input</H4>
<P class=docText><FONT class=extract>Sometimes it's </FONT><A name=gnu3-CHP-6-ITERM-2281></A><A name=gnu3-CHP-6-ITERM-2282></A><A name=gnu3-CHP-6-ITERM-2283></A><FONT class=extract>useful to pause a macro briefly so you can type something. For example, if you write a lot of letters, you could have a macro that prints out a template and then pauses for you to fill in variables (such as the date and the recipient's name). You can perform this task (and similar tasks) by inserting a recursive edit into a macro. A recursive edit is just a fancy way to say, "Stop and let me type a while, then pick up the macro where I left off."</FONT></P>
<P class=docText><FONT class=extract>When you're defining a macro, type <SPAN class=docEmphBold>C-u C-x q</SPAN> at the point where you want the recursive edit to occur.</FONT> Emacs enters a recursive edit. (You can tell you're in a recursive edit because square brackets appear on the mode line; you'll see them in the screenshots later in this section.) Nothing you type during the recursive edit becomes a part of the macro. You can type whatever you want to and then press <SPAN class=docEmphBold>C-M-c</SPAN> to exit the recursive edit. Notice how the square brackets disappear when you type <SPAN class=docEmphBold>C-M-c</SPAN>. When the square brackets are no longer on the screen, you have left the recursive edit. Anything you type at this point becomes part of the macro. You can put as many pauses in your macros as you want to.</P><A name=gnu3-CHP-6-SECT-8.1.1></A>
<H5 class=docSection3Title>6.8.1.1 Example</H5>
<P class=docText>Here's an example of a macro that puts a business letter template on the screen and uses recursive edits to let you type your return address, the recipient's name and address, and the date. Because the brackets on the mode line are a pretty subtle clue to what you are going to type, we'll give the user of this macro explicit instructions about what to type. <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6-sect-8.html#gnu3-chp-6-table-3">Table 6-3</A> provides these instructions.</P><A name=gnu3-CHP-6-TABLE-3></A>
<H5 class=docTableTitle>Table 6-3. Steps for creating a business letter macro</H5>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystrokes</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>F3</SPAN> <SPAN class=docEmphasis>or</SPAN> <SPAN class=docEmphBold>C-x (</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Start keyboard macro definition.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-5 Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Put in 5 blank lines.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Type your address and press C-M-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Display <TT>Type your address and press C-M-c</TT> on the screen.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-a</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the beginning of the line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-u C-x q</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Enter a recursive edit, during which the keystrokes you type are not recorded as part of the macro.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Exit the recursive edit.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-e</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the end of the line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-5 Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move the cursor down 5 lines.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Type recipient name and address and press C-M-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Display <TT>Type recipient name and address and press C-M-c</TT> on the screen.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-a</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the beginning of the line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-u C-x q</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Enter a recursive edit.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Exit the recursive edit.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-e</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the end of the line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-5 Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move the cursor down 5 lines.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Type date and press C-M-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Display <TT>Type date and press C-M-c</TT> on the screen.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-a</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the beginning of the line</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-u C-x q</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Enter a recursive edit.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-c</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Exit the recursive edit.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-e</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the end of the line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-5 Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move the cursor down 5 lines.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Dear Space</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Display <SPAN class=docEmphBold>Dear</SPAN> on the screen.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>F4</SPAN> <SPAN class=docEmphasis>or</SPAN> <SPAN class=docEmphBold>C-x )</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>End keyboard macro definition.</FONT></P></TD></TR></TBODY></TABLE><BR>
<P class=docText>The following screens show what the macro defined in <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6-sect-8.html#gnu3-chp-6-table-3">Table 6-3</A> looks like when you run it.</P><A name=ch06-11-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>F4</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch06scrn08.gif" width=425 height=195> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The macro pauses so that you can type your address.</P></TD></TR></TBODY></TABLE><BR><A name=ch06-12-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type your address and press: <SPAN class=docEmphBold>C-M-c</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch06scrn09.gif" width=425 height=238> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The macro pauses so you can type the recipient's name and address.</P></TD></TR></TBODY></TABLE><BR><A name=ch06-13-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type the recipient's name and address and press: <SPAN class=docEmphBold>C-M-c</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch06scrn10.gif" width=425 height=227> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The macro pauses so you can type the date.</P></TD></TR></TBODY></TABLE><BR><A name=ch06-14-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type the date and press: <SPAN class=docEmphBold>C-M-c</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch06scrn11.gif" width=425 height=257> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The macro finishes by typing the opening for the letter.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Now the macro has finished editing; you can type the recipient's name and then the body of the letter, and of course you can go back and edit any of the information you've already filled in.</P><A name=gnu3-CHP-6-SECT-8.2></A>
<H4 class=docSection2Title>6.8.2 Adding a Query to a Macro</H4>
<P class=docText>The more complex the task your <A name=gnu3-CHP-6-ITERM-2285></A><A name=gnu3-CHP-6-ITERM-2286></A>macro performs, the more difficult it is to make the macro general enough to work in every case. <FONT class=extract>Although macros can do a lot of things, they aren't programs: you can't have <SPAN class=docEmphBold>if</SPAN> statements, loops, and the other things you associate with a program.</FONT> In particular, a macro can't get input from the user and then take some action on the basis of that input.</P>
<P class=docText><FONT class=extract>However, one feature lets a macro get input, in a limited way, from the user. You can create a macro that queries the user while it is running; it works much like a query-replace. To create this kind of a macro, type <SPAN class=docEmphBold>C-x q</SPAN> when you reach the point in the macro definition where you want the macro to query the user. </FONT>Nothing happens immediately; go on defining the macro as you normally would.</P>
<P class=docText><FONT class=extract>Things get interesting later, when you execute the macro. When it gets to the point in the macro where you typed <SPAN class=docEmphBold>C-x q</SPAN>, Emacs prints a query in the minibuffer:</FONT></P><PRE><FONT class=extract>Proceed with macro? (y, n, RET, C-l, C-r)
</FONT></PRE><BR>
<P class=docText><FONT class=extract>The responses listed here are analogous to those in query-replace:</FONT></P>
<UL>
<LI>
<P class=docList><FONT class=extract>Pressing <SPAN class=docEmphBold>y</SPAN> means to continue and go on to the next repetition, if any.</FONT></P>
<LI>
<P class=docList><FONT class=extract>Pressing <SPAN class=docEmphBold>n</SPAN> means to stop executing the macro but go on to the next repetition, if any.</FONT></P>
<LI>
<P class=docList><FONT class=extract>Pressing <SPAN class=docEmphBold>Enter</SPAN> means to stop executing the macro and cancel any repetitions.</FONT></P>
<LI>
<P class=docList><FONT class=extract>Pressing <SPAN class=docEmphBold>C-r</SPAN> starts a recursive edit, which lets you do any editing or moving around you may want to and then resume the macro when you exit the recursive edit. To exit a recursive edit, press <SPAN class=docEmphBold>C-M-c</SPAN>. Emacs again asks if you want to proceed with the macro, and you type <SPAN class=docEmphBold>y</SPAN> for yes or <SPAN class=docEmphBold>n</SPAN> or <SPAN class=docEmphBold>Enter</SPAN> for no.</FONT></P>
<LI>
<P class=docList><FONT class=extract>Pressing <SPAN class=docEmphBold>C-l</SPAN> puts the line the cursor is on in the middle of the screen (this is good for getting a feel for the context). Similar to <SPAN class=docEmphBold>C-r</SPAN>, Emacs again asks if you want to proceed with the macro, and you have to answer <SPAN class=docEmphBold>y</SPAN>, <SPAN class=docEmphBold>n</SPAN>, or <SPAN class=docEmphBold>Enter</SPAN>.</FONT></P>
<LI>
<P class=docList><FONT class=extract>Pressing <SPAN class=docEmphBold>C-g</SPAN> (although not listed as an option) cancels the query and the macro; it is similar to pressing <SPAN class=docEmphBold>Enter</SPAN>.</FONT></P></LI></UL><A name=gnu3-CHP-6-SECT-8.2.1></A>
<H5 class=docSection3Title>6.8.2.1 Example</H5>
<P class=docText>Let's say that you write a macro that copies comments from a program to another buffer. The comments in our program are preceded by a slash, so you start the macro with a search for a slash. However, not all comments are worth copying. Following the search with a query lets you decide case by case whether the search has found a comment you want to copy. <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-6-sect-8.html#gnu3-chp-6-table-4">Table 6-4</A> shows a macro to copy comments to another buffer.</P><A name=gnu3-CHP-6-TABLE-4></A>
<H5 class=docTableTitle>Table 6-4. Comment-copying macro with a query</H5>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystrokes</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>F3</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Start the macro definition.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-s /</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Search for a slash.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Stop the search when it is successful.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-x q</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert a query in the macro; Emacs asks you if you want to proceed at this point when you run the macro.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-f</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move forward one word.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-b</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the beginning of this word.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-Space</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Set the mark.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-e</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the end of the line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-f</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move forward one character.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-w</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Copy the comment to the kill ring.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-x b comments</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to a buffer called <TT>comments</TT>.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-y</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert the comment in the buffer.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-x b</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move back to the original buffer.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>F4</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>End the macro definition.</P></TD></TR></TBODY></TABLE>