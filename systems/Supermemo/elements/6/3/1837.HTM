<H3 class=docSection1Title>5.1. Executing Commands in Shell Buffers</H3>
<P class=docText>One of the most important features <A name=gnu3-CHP-5-ITERM-2134></A><A name=gnu3-CHP-5-ITERM-2135></A>of Emacs is its ability to run a command shell in a buffer. Once you have started a shell buffer, you can do all of your normal command-line work within Emacs. What does this buy you?</P>
<UL>
<LI>
<P class=docList>You don't have to leave Emacs to get a command prompt. If you want to print or compile a file that you're editing, you can do it immediately.</P>
<LI>
<P class=docList>You can use Emacs editing features to write your commands.</P>
<LI>
<P class=docList>You can use Emacs editing features to "back up" through your command list, copy an old command, modify it, and execute it again.</P>
<LI>
<P class=docList>You can save your shell buffer, keeping a transcript of your editing session&#8212;which automatically includes the output from every command that you ran. For debugging or remembering commands you run infrequently, this can be invaluable.</P>
<LI>
<P class=docList>You can copy output from commands into a file or into another command.</P>
<LI>
<P class=docList>You can save complex commands in a file and insert the file at the prompt, rather than retyping the command.</P></LI></UL>
<P class=docText>As you get used to working within Emacs, you will undoubtedly discover more and more ways to put shell mode to use.</P>
<P class=docText>In this section, we discuss shell mode. Later in this chapter, we discuss directory editing, printing, and calendar and diary features for doing simple time management in Emacs. Right now, we'll start with a simple variation on shell mode, a feature that lets you execute commands one at a time.</P><A name=gnu3-CHP-5-SECT-1.1></A>
<H4 class=docSection2Title>5.1.1 Running One Command at a Time</H4>
<P class=docText><FONT class=extract>To run a command while </FONT><A name=gnu3-CHP-5-ITERM-2136></A><A name=gnu3-CHP-5-ITERM-2137></A><FONT class=extract>you're in an Emacs session, type <SPAN class=docEmphBold>M-!</SPAN>.</FONT> Emacs asks for the command you want to run. Type the command and press <SPAN class=docEmphBold>Enter</SPAN>. Emacs then opens a window called <TT>*Shell Command Output*</TT> where it displays the results of your command.</P><A name=ch05-2-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>M-!</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=152 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn01.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs prompts you for a command to execute.</P></TD></TR></TBODY></TABLE><BR><A name=ch05-3-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>diff joyce joyce2</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=181 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn02.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs executes the <SPAN class=docEmphBold>diff</SPAN> command and puts the output into a <TT>*Shell</TT> <TT>Command</TT> <TT>Output*</TT> buffer.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Because the output from the <SPAN class=docEmphBold>diff</SPAN> command is in a buffer, you can edit it, save it, or do anything else you would like with it. Of course, if the operating system has no <SPAN class=docEmphBold>diff</SPAN> command or cannot access it for some reason, this command fails.</P>
<P class=docText><FONT class=extract>An interesting twist to the shell command facility is that you can use a region of a buffer rather than a traditional file as input to the command.</FONT> For example, let's say we want to sort a phone list. First, we put the cursor somewhere in the list (say, on the first character of <TT>Liam</TT>), then we give the <SPAN class=docEmphBold>mark-paragraph</SPAN> command (<SPAN class=docEmphBold>M-h</SPAN>). This command defines the phone list as a region, with the cursor at the beginning of the paragraph and the mark at the end.</P>
<P class=docText>In the following example, the shaded area shows the extent of the region we want to sort. <FONT class=extract>After selecting a region, we press <SPAN class=docEmphBold>M-|</SPAN> (for <SPAN class=docEmphBold>shell-command-on-region</SPAN>); Emacs prompts for the shell command to run.</FONT></P><A name=ch05-4-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>M-h M-|</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=193 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn03.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs prompts you for a command to execute (Windows).</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Now we give the command <SPAN class=docEmphBold>sort</SPAN> without specifying any input file. Emacs is taking care of the input for us.</P><A name=ch05-5-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>sort Enter</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=266 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn04.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs runs a sort on the region (Windows).</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Emacs has sorted the phone list (i.e., everything within the region).</P>
<P class=docText><FONT class=extract>A useful variation for <SPAN class=docEmphBold>M-!</SPAN> puts the output </FONT><A name=gnu3-CHP-5-ITERM-2138></A><A name=gnu3-CHP-5-ITERM-2139></A><FONT class=extract>directly into the current buffer, rather than into a <TT>*Shell Command Output*</TT> buffer. To do so, precede the command with <SPAN class=docEmphBold>C-u</SPAN>: for example, <SPAN class=docEmphBold>C-u M-!</SPAN> runs a shell command and puts the output in the current buffer.</FONT></P><A name=ch05-6-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>C-u M-! ls -la Enter</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=209 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn05.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs runs <SPAN class=docEmphBold>ls</SPAN> and inserts the result at your current location (Mac OS X).</P></TD></TR></TBODY></TABLE><BR><A name=gnu3-CHP-5-SECT-1.2></A>
<H4 class=docSection2Title>5.1.2 Using Shell Mode</H4>
<P class=docText><FONT class=extract>Now we're ready </FONT><A name=gnu3-CHP-5-ITERM-2140></A><A name=gnu3-CHP-5-ITERM-2141></A><A name=gnu3-CHP-5-ITERM-2142></A><FONT class=extract>to discuss shell mode, the interactive facility for running commands. To start a shell buffer, type <SPAN class=docEmphBold>M-x shell Enter</SPAN>. This creates a buffer named <TT>*shell*</TT>.</FONT> You see the prompt for your shell within this buffer. (This defaults to your usual shell; you can substitute another shell to use in Emacs. See "Which shell?" later in this chapter.)</P><A name=gnu3-CHP-5-FIG-1></A>
<CENTER>
<H5 class=docFigureTitle>Figure 5-1. Shell buffers for Linux, Mac OS X, and Windows</H5><IMG height=424 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_fig0501.gif" width=432 border=0> </CENTER><BR>
<P class=docText>For the most part, shell mode is exactly like the normal command interface, except that you can use Emacs to edit the commands as you type them. You can copy commands from one place to another, copy the results into a file, save the whole shell buffer to a file, and so on. Note in <A class=docLink href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-5-sect-1.html#gnu3-chp-5-fig-1">Figure 5-1</A> that Emacs has added a few items to the menu bar (Complete, In/Out, and Signals).</P>
<P class=docText><FONT class=extract>A few tricks are worth knowing, though. For example, you normally interrupt a command by typing <SPAN class=docEmphBold>C-c</SPAN>. If you type <SPAN class=docEmphBold>C-c</SPAN> in shell mode, Emacs thinks that the <SPAN class=docEmphBold>C-c</SPAN> is part of a command meant for it, because many Emacs commands start with <SPAN class=docEmphBold>C-c</SPAN>. Therefore, you have to type <SPAN class=docEmphBold>C-c C-c</SPAN> to terminate the current job. Likewise, under Unix, you type <SPAN class=docEmphBold>C-c C-z</SPAN> to stop a job, instead of <SPAN class=docEmphBold>C-z</SPAN>, and <SPAN class=docEmphBold>C-c C-d</SPAN> instead of <SPAN class=docEmphBold>C-d</SPAN>, and so on. (<SPAN class=docEmphBold>C-c C-d</SPAN> is not strictly necessary because Emacs understands <SPAN class=docEmphBold>C-d</SPAN> in context. If you're at the end of the buffer, <SPAN class=docEmphBold>C-d</SPAN> means "end of file"; if you're anywhere else, it deletes a character.) Alternatively, you can select options from the <SPAN class=docEmphBold>Signals</SPAN> menu rather than using control characters, if desired (for example, selecting <SPAN class=docEmphBold>EOF</SPAN> instead of typing <SPAN class=docEmphBold>C-d</SPAN>).</FONT></P>
<P class=docText><FONT class=extract>Shell mode also provides a few convenient shortcuts. The command <SPAN class=docEmphBold>M-p</SPAN> retrieves the last shell command you typed, no matter how far back in the buffer it is. Typing successive <SPAN class=docEmphBold>M-p</SPAN>'s brings back earlier commands.</FONT></P><A name=ch05-8-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>M-p</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=145 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn06.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-p</SPAN> retrieves the last command, even if it isn't on the screen (Mac OS X).</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>In this example, the previous command was <SPAN class=docEmphBold>more dickensxmas.tex</SPAN>. It's no longer on the screen; its output has pushed it off the top. <FONT class=extract><SPAN class=docEmphBold>M-p</SPAN> (for <SPAN class=docEmphBold>comint-previous-input</SPAN>) retrieves the command, but doesn't execute it; you can edit the command before pressing <SPAN class=docEmphBold>Enter</SPAN>. To find subsequent commands, type <SPAN class=docEmphBold>M-n</SPAN>.</FONT></P>
<P class=docText>If these commands sound <A name=gnu3-CHP-5-ITERM-2143></A><A name=gnu3-CHP-5-ITERM-2144></A>familiar to you, they should. They are history commands, which are identical to the minibuffer history commands we discussed in <A class=docLink href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-3.html#gnu3-chp-3">Chapter 3</A>. The <SPAN class=docEmphBold>In/Out</SPAN> menu is devoted to working with command history.</P>
<P class=docText><SPAN class=docEmphBold>Enter</SPAN> and <SPAN class=docEmphBold>Tab</SPAN> have special functions in shell mode. Pressing <SPAN class=docEmphBold>Enter</SPAN> executes the command on the line where the cursor is, even if you move the cursor up to the line of an earlier command you want to execute again. When you press <SPAN class=docEmphBold>Enter</SPAN>, Emacs copies the command to the end of the buffer and executes it. Of course, you can modify the command before pressing <SPAN class=docEmphBold>Enter</SPAN>.</P>
<P class=docText>Pressing <SPAN class=docEmphBold>Tab</SPAN> puts the Emacs completion feature into action; use completion for operating system commands, filenames, and variables. Note that the completion of system commands works best on Unix implementations like Linux and Mac OS X; Emacs doesn't seem to find all the possible Windows commands, for example.</P>
<P class=docText><FONT class=extract>If you type a command that produces a lot of output, cluttering up your session, there's an easy way to get rid of it. Type <SPAN class=docEmphBold>C-c C-o</SPAN> (for <SPAN class=docEmphBold>comint-kill-output</SPAN>).</FONT></P><A name=ch05-9-fm2xml></A>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>C-c C-o</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG height=145 alt="" src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch05scrn07.gif" width=425 border=0> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-o</SPAN> automatically deletes the output from the last command (Mac OS X).</P></TD></TR></TBODY></TABLE><BR>
<P class=docText><FONT class=extract>The previous command (<SPAN class=docEmphBold>ls-la</SPAN>) remains on the screen, but its output, a long list of files, is deleted. <SPAN class=docEmphBold>C-c C-o</SPAN> can delete output from only the most recent command; it can't delete output from your previous commands.</FONT></P>
<P class=docText><FONT class=extract>Another useful command for shell mode is <SPAN class=docEmphBold>C-c C-r</SPAN> (for <SPAN class=docEmphBold>comint-show-output</SPAN>). This command is useful if a command produces a lot of output and causes the first few lines of output to scroll off the screen. <SPAN class=docEmphBold>C-c C-r</SPAN> repositions the window so the first line of output from your last command is at the top of the window. If you want to see the end of the output instead, type <SPAN class=docEmphBold>C-c C-e</SPAN> (for <SPAN class=docEmphBold>comint-show-maximum-output</SPAN>); this command moves the last line of the input to the bottom of the window.</FONT></P>
<P class=docText><FONT class=extract>When you're writing a book, moving by paragraphs makes sense, but when you're using a shell, moving </FONT><A name=gnu3-CHP-5-ITERM-2145></A><A name=gnu3-CHP-5-ITERM-2146></A><FONT class=extract>by output group is more helpful. An <SPAN class=docEmphasis>output group</SPAN> consists of a command and its output. To move to the previous output group, type <SPAN class=docEmphBold>C-c C-p</SPAN>. To move to the next output group, type <SPAN class=docEmphBold>C-c C-n</SPAN>.</FONT></P>
<P class=docText><FONT class=extract>An advantage of shell mode is that you can start a command and then edit another buffer while the command runs. The shell buffer doesn't need to be onscreen; just type <SPAN class=docEmphBold>M-x shell</SPAN> to get the buffer back again.</FONT></P>
<P class=docText><FONT class=extract>You can have multiple shell buffers running </FONT><A name=gnu3-CHP-5-ITERM-2147></A><FONT class=extract>at once; just use the command <SPAN class=docEmphBold>M-x rename-uniquely</SPAN> to rename your shell buffer. You can start another shell buffer, and another, and another&#8212;as many as you need to juggle all your tasks.</FONT></P><A name=gnu3-CHP-5-SECT-1.2.1></A>
<H5 class=docSection3Title>5.1.2.1 Which shell?</H5>
<P class=docText>Normally, Emacs uses your default shell in shell mode. Under Windows that's <SPAN class=docEmphasis>cmd.exe</SPAN> (the familiar <SPAN class=docEmphBold>C:\&gt;</SPAN> prompt or a close relative).<SUP class=docFootnote><A class=docLink href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-5-sect-1.html#gnu3-chp-5-fnote-1">[1]</A></SUP> But Unix has a wide variety of available shells, including the GNU Project's <SPAN class=docEmphBold>bash</SPAN> and the zed shell, <SPAN class=docEmphBold>zsh</SPAN>. Whatever shell you normally use, that's what Emacs starts when you enter shell mode.</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=gnu3-CHP-5-FNOTE-1>[1]</A></SUP> You do have choices under Windows as well, thanks to Cygwin (<A class=docLink href="http://cygwin.com/" target=_blank>http://cygwin.com/</A>). For example, if you wanted to run Cygwin's bash, you'll find helpful information on how to set that up on Ngai Kim Hoong's page on that topic at <A class=docLink href="http://www.khngai.com/emacs/cygwin.php" target=_blank>http://www.khngai.com/emacs/cygwin.php</A>.</P></BLOCKQUOTE>
<P class=docText>How does Emacs know which shell to start? First, it looks at the variable <SPAN class=docEmphBold>shell-file-name</SPAN>. Then it looks for a Unix environment variable named <SPAN class=docEmphBold>ESHELL</SPAN>. Finally it looks for an environment variable named <SPAN class=docEmphBold>SHELL</SPAN>. If you want to run another particular shell (for example, the zed shell) when you're in Emacs, you can add the following command to your <SPAN class=docEmphasis>.emacs</SPAN> file:</P><PRE>(setq shell-file-name "/bin/zsh")
</PRE><BR>
<P class=docText>When Emacs starts an interactive shell, it runs an additional initialization file after your shell's normal startup files. The name of this file is <SPAN class=docEmphasis>.emacs_shell-name</SPAN>, where <SPAN class=docEmphasis>shell-name</SPAN> is the name of the shell you want to use in Emacs. It must be located in your home directory. For example, if you use the C shell, you can add Emacs-only startup commands by placing them in the file <SPAN class=docEmphasis>.emacs_csh</SPAN>. Let's say that when you're in Emacs, you want to change the prompt to <SPAN class=docEmphBold>emacs:%</SPAN> and you want an environment variable called <SPAN class=docEmphBold>WITHIN_EDITOR</SPAN> to be set to <SPAN class=docEmphBold>T</SPAN>. Here's the contents of your <SPAN class=docEmphasis>.emacs_csh</SPAN> file:</P><PRE>set prompt="emacs:% "


setenv WITHIN_EDITOR T
</PRE><BR>
<P class=docText>Within a shell buffer, Emacs also sets the environment variable <SPAN class=docEmphBold>EMACS</SPAN> to <SPAN class=docEmphBold>t</SPAN>, and sets your terminal type (the <SPAN class=docEmphBold>TERM</SPAN> variable) to <SPAN class=docEmphBold>emacs</SPAN>.</P><A name=gnu3-CHP-5-SECT-1.2.2></A>
<H5 class=docSection3Title>5.1.2.2 Making passwords invisible in shell mode</H5>
<P class=docText><A name=gnu3-CHP-5-ITERM-2148></A><A name=gnu3-CHP-5-ITERM-2149></A>By default, shell mode displays everything you type and that includes passwords&#8212;not a good situation if someone is peering over your shoulder. There is a way around this problem, however. Before you type the password, type <SPAN class=docEmphBold>M-x send-invisible</SPAN>. Emacs asks for the nonechoed text. When you type a character, Emacs puts an asterisk in the minibuffer. Press <SPAN class=docEmphBold>Enter</SPAN> and Emacs enters the password without displaying it. To have Emacs hide passwords as you type them, add the following two lines to your <SPAN class=docEmphasis>.emacs</SPAN> file:</P><PRE>(add-hook 'comint-output-filter-functions


   'comint-watch-for-password-prompt)
</PRE><BR>
<P class=docText>Emacs asks for nonechoed text in the minibuffer whenever a password prompt appears on the screen, making sure that the password is never displayed. <A class=docLink href="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-5-sect-1.html#gnu3-chp-5-table-1">Table 5-1</A> summarizes shell mode commands. <A name=gnu3-CHP-5-ITERM-2150></A></P><A name=gnu3-CHP-5-TABLE-1></A>
<H5 class=docTableTitle>Table 5-1.<FONT class=extract> Shell mode commands</FONT></H5>
<TABLE cellSpacing=0 cellPadding=4 rules=all width="100%" border=1>
<COLGROUP><FONT class=extract>
<COL>
<COL>
<COL></FONT></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>Keystrokes</SPAN> </FONT></P></TH>
<TH class=thead scope=col>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>Command name</SPAN> </FONT></P></TH>
<TH class=thead scope=col>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>Action</SPAN> </FONT></P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract>(<SPAN class=docEmphasis>none</SPAN>)</FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>shell</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Enter shell mode.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-c</SPAN><SPAN class=docEmphasis>Signals</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>BREAK</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-interrupt-subjob</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Interrupt current job; equivalent to <SPAN class=docEmphBold>C-c</SPAN>.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-d</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-delchar-or-maybe-eof</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Send EOF character if at end of buffer; delete a character elsewhere.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-d</SPAN><SPAN class=docEmphasis>Signals</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>EOF</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-send-eof</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Send EOF character.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-u</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-kill-input</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Erase current line; equivalent to <SPAN class=docEmphBold>C-u</SPAN> in Unix shells.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-z</SPAN><SPAN class=docEmphasis>Signals</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>STOP</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-stop-subjob</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Suspend or stop a job; <SPAN class=docEmphBold>C-z</SPAN> in Unix shells.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>M-p</SPAN><SPAN class=docEmphasis>In/Out</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>Previous Input</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-previous-input</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Retrieve previous commands (can be repeated to find earlier commands).</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>M-n</SPAN><SPAN class=docEmphasis>In/Out</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>Next Input</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-next-input</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Retrieve subsequent commands (can be repeated to find more recent commands).</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>Enter</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-send-input</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Send input on current line.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>Tab</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-dynamic-complete</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Complete current command, filename, or variable name.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-o</SPAN><SPAN class=docEmphasis>In/Out</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>Delete Current Output Group</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-kill-output</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Delete output from last command.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-r</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-show-output</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Move first line of output to top of window.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-e</SPAN><SPAN class=docEmphasis>In/Out</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>Show Maximum Output</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-show-maximum-output</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Move last line of output to bottom of window.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-p</SPAN><SPAN class=docEmphasis>In/Out</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>Backward Output Group</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-previous-prompt</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Move to previous command.</FONT></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>C-c C-n</SPAN><SPAN class=docEmphasis>In/Out</SPAN> <IMG src="file:///D:/&#230;&#710;&#8216;&#231;&#353;&#8222;&#233;&#8230;&#183;&#231;&#8250;&#732;/&#229;&#183;&#165;&#228;&#189;&#339;&#231;&#8250;&#174;&#229;&#189;&#8226;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif" border=0> <SPAN class=docEmphasis>Forward Output Group</SPAN></FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract><SPAN class=docEmphBold>comint-next-prompt</SPAN> </FONT></P></TD>
<TD class=docTableCell>
<P class=docText><FONT class=extract>Move to next command.</FONT></P></TD></TR></TBODY></TABLE>