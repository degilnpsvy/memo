<H3 class=docSection1Title>8.4. Writing XML</H3>
<P class=docText>Writing XML involves entering structured <A name=gnu3-CHP-8-ITERM-2478></A><A name=gnu3-CHP-8-ITERM-2479></A>information that complies with a document type definition or schema. Even within Emacs, the XML support you receive varies. At the low end of the spectrum, there is plain vanilla Fundamental mode. It provides simply a screen where you type. Specialized modes like SGML mode provide support for entering tags, as we saw earlier in our discussion of HTML mode, a derivative of SGML mode. But neither of these approaches help you parse or validate XML (SGML mode has a command for validating, but it is tricky to set up correctly). More advanced Lisp packages, though currently not included in Emacs, are available to provide these functions. These add-on packages provide validation against DTDs or schemas, parsing capabilities, and, typically, an array of standard DTDs and schema definitions. In Emacs, these tools primarily work in conjunction with one of two major modes. psgml mode validates XML (and SGML) against DTDs. The newer nxml mode validates against RELAX NG schemas. We cover both of these options in this section. Before we go into detail on those modes, however, let's look briefly what Emacs has built-in with SGML mode.</P><A name=gnu3-CHP-8-SECT-4.1></A>
<H4 class=docSection2Title>8.4.1 Writing XML with SGML Mode</H4>
<P class=docText>Emacs's own SGML mode provides<A name=gnu3-CHP-8-ITERM-2480></A><A name=gnu3-CHP-8-ITERM-2481></A><A name=gnu3-CHP-8-ITERM-2482></A><A name=gnu3-CHP-8-ITERM-2483></A> support for entering tags. We covered much of this earlier under HTML mode, so we provide just one brief example here. Inserting, hiding, and showing tags are especially helpful features provided by SGML mode.</P>
<P class=docText>Let's look at a chapter on enumerated types by <SPAN class=docEmphasis>Java in a Nutshell</SPAN> author David Flanagan. This chapter uses the DocBook DTD.</P><A name=ch08-20-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Initial state:</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn12.gif" width=431 height=225> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Editing a document that uses the DocBook DTD (Mac OS X).</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Note that Emacs displays XML on the mode line. XML mode in this context is a subset of SGML mode. Actually, despite this name, all the commands in this mode start with sgml, not xml. The menu of relevant commands is called SGML as well. Emacs doesn't pretend to have extensive XML support.</P>
<P class=docText>We want to insert a paragraph before the first paragraph.</P><A name=ch08-21-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Add a blank line following the title and type: <SPAN class=docEmphBold>C-c C-t</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn13.gif" width=431 height=224> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs inserts an open angle bracket and prompts for the tag name (Mac OS X).</P></TD></TR></TBODY></TABLE><BR><A name=ch08-22-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>para Enter</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn14.gif" width=431 height=224> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs inserts opening and closing paragraph tags (Mac OS X).</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Note that Emacs is not following our indentation style. We can correct it by moving to the beginning of the line and pressing <SPAN class=docEmphBold>Tab</SPAN>. See <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-8-sect-3.html#gnu3-chp-8-table-4">Table 8-4</A> earlier in this chapter for details on SGML mode commands.</P><A name=gnu3-CHP-8-SECT-4.2></A>
<H4 class=docSection2Title>8.4.2 TEI Emacs: XML Authoring for Linux and Windows</H4>
<P class=docText>The Text Encoding Initiative (TEI) <A name=gnu3-CHP-8-ITERM-2484></A><A name=gnu3-CHP-8-ITERM-2485></A>wanted an XML authoring environment for Emacs, so it created (the somewhat misleadingly named) TEI Emacs.<SUP class=docFootnote><A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-8-sect-4.html#gnu3-chp-8-fnote-9">[9]</A></SUP> Despite its name, TEI Emacs does not include Emacs itself. Rather, it creates an authoring environment for writing XML using nxml mode or psgml mode. It incorporates XSLT tools, along with most of the standard DTDs, such as the three forms of XHTML DTDs (strict, frameset, and transitional), DocBook DTDs, and more. Naturally, the TEI's own DTDs and schemas are also included.</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=gnu3-CHP-8-FNOTE-9>[9]</A></SUP> We'd like to thank Emacs guru Eric Pement for pointing out TEI Emacs to Deb.</P></BLOCKQUOTE>
<P class=docText>The active development of this tool and its careful packaging led us to describe this tool despite the fact that it is limited to Linux and Windows at this writing.<SUP class=docFootnote><A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-8-sect-4.html#gnu3-chp-8-fnote-10">[10]</A></SUP> You should have Emacs 21.3 already installed before you install this tool. Installing TEI Emacs is trivial. The Windows version has an installer, and Linux users follow simple instructions at <A class=docLink href="http://www.tei-c.org/Software/tei-emacs/" target=_blank>http://www.tei-c.org/Software/tei-emacs/</A>, the web site for downloading TEI Emacs.</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=gnu3-CHP-8-FNOTE-10>[10]</A></SUP> We sincerely hope that this support will be extended to Mac OS X as well, providing developers and writers on that platform the benefits of this tool's capabilities. Meanwhile, Mac users may want to install nxml mode from <A class=docLink href="http://thaiopensource.com/download/" target=_blank>http://thaiopensource.com/download/</A> and psgml mode from <A class=docLink href="http://www.lysator.liu.se/projects/about_psgml.html" target=_blank>http://www.lysator.liu.se/projects/about_psgml.html</A>.</P></BLOCKQUOTE><A name=gnu3-CHP-8-SECT-4.3></A>
<H4 class=docSection2Title>8.4.3 Writing XHTML Using nxml Mode</H4>
<P class=docText>James Clark, an XML pioneer, <A name=gnu3-CHP-8-ITERM-2486></A><A name=gnu3-CHP-8-ITERM-2487></A><A name=gnu3-CHP-8-ITERM-2488></A>wrote nxml mode to provide Emacs support for his schema standard RELAX NG. For details on the standard, visit <A class=docLink href="http://www.relaxng.org/" target=_blank>http://www.relaxng.org/</A> or pick up a copy of <SPAN class=docEmphasis>RELAX NG</SPAN> by Eric van der Vlist (O'Reilly). The important thing about nxml mode is that it validates text as you type instead of making validation and debugging separate steps.</P>
<P class=docText>If you did not install TEI Emacs, you can download nxml mode and its schemas from <A class=docLink href="http://thaiopensource.com/download/" target=_blank>http://thaiopensource.com/download/</A>. If you decide to become an active nxml mode user, you may want to join a related Yahoo Group discussion list (see <A class=docLink href="http://groups.yahoo.com/group/emacs-nxml-mode/" target=_blank>http://groups.yahoo.com/group/emacs-nxml-mode/</A>).</P>
<P class=docText>In this section, we change our running HTML example to XHTML, first using a RELAX NG schema and nxml mode. Open <SPAN class=docEmphasis>dickens.html</SPAN>, then enter nxml mode.</P><A name=ch08-23-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>C-x C-f dickens.html Enter M-x nxml-mode Enter</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn15.gif" width=431 height=359> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Editing <SPAN class=docEmphasis>dickens.html</SPAN> in nxml mode.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>nxml mode tells you what schema it is using in the minibuffer. It's smart enough to know that its XHTML schema is best for this purpose.</P>
<P class=docText>The mode line tells us that this file is currently invalid. Emacs highlights errors with red underscores. Let's deal with these errors one at a time.</P><A name=ch08-24-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Move the cursor to the red underscore at the end of the html tag.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn16.gif" width=431 height=359> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The minibuffer describes what's missing.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Editing XHTML with a schema requires a namespace definition in the <TT>&lt;html&gt;</TT> tag. nxml mode knows what we need. This is a good time to use nxml's completion feature to let it supply the details for us. <SPAN class=docEmphBold>C-Enter</SPAN> completes the current tag.</P><A name=ch08-25-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>Space</SPAN> <SPAN class=docEmphBold>xmlns=</SPAN>" <SPAN class=docEmphBold>C-Enter</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn17.gif" width=431 height=359> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs inserts the rest of the namespace declaration.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>The mode line tells us that this file is still invalid. Moving to the underlined address tag gives us a fairly cryptic reason; it says, <TT>Element not allowed in this context</TT>. Let's move down to the closing body tag to see if that error provides any more insight into the problem.</P><A name=ch08-26-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Move to <TT>&lt;/body&gt;</TT>.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn18.gif" width=431 height=359> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The minibuffer says <TT>Missing end-tag "p</TT>" .</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>This message provides a clue. Although HTML authors are not accustomed to adding closing tags to paragraphs, XHTML requires them. Let's insert a closing tag after our paragraph.</P><A name=ch08-27-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Move to the line following the Dickens paragraph and type: <SPAN class=docEmphBold>&lt;/</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn19.gif" width=431 height=359> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs inserts a closing tag.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Note that just typing <SPAN class=docEmphBold>&lt;/</SPAN> was adequate to insert a closing tag for the current element. We don't need to type <SPAN class=docEmphBold>C-Enter</SPAN> to invoke completion. That's because in nxml mode, slash is bound to <SPAN class=docEmphBold>nxml-electric-slash</SPAN>. It automatically completes the nearest open element, another shortcut for us.</P>
<P class=docText>A similar command is <SPAN class=docEmphBold>C-c C-f</SPAN> (for <SPAN class=docEmphBold>nxml-finish-element</SPAN>). With <SPAN class=docEmphBold>C-c C-f</SPAN>, you don't have to type anything; it inserts the relevant closing tag for you.</P>
<P class=docText>Look at the mode line now. It says valid. Using nxml mode, it's not too tough to take an HTML file and change it to valid XHTML.</P>
<P class=docText>Validating text as you type it is a key feature of nxml mode. It's validating against a schema. To specify a different schema, type <SPAN class=docEmphBold>C-c C-s</SPAN> (for <SPAN class=docEmphBold>rng-set-schema-and-validate</SPAN>). The minibuffer prompts for the file where the schema resides. A number of schemas can be found online at <A class=docLink href="http://www.relaxng.org/#schemas" target=_blank>http://www.relaxng.org/#schemas</A>. You can also convert DTDs to schemas using tools listed on that page.</P>
<P class=docText>Your menus vary depending on whether you install nxml mode directly or whether you use TEI's version. TEI provides support for encoded characters using the UniChar menu. It also provides extensive XSLT support. TEI's NXML menu includes some TEI skeletons as well as nxml mode options. Nxml mode installed from <SPAN class=docEmphasis>thaiopensource.org</SPAN> includes an XML menu with options for setting the schema and customizing the mode. <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-8-sect-4.html#gnu3-chp-8-table-7">Table 8-7</A> lists some of the commands available in nxml mode.</P><A name=gnu3-CHP-8-TABLE-7></A>
<H5 class=docTableTitle>Table 8-7. Nxml mode commands</H5>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystrokes</P></TH>
<TH class=thead scope=col>
<P class=docText>Command name</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-complete</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Complete the current tag.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>/</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-electric-slash</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Add a closing tag for the last open element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-n</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>rng-next-error</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the next error.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-l</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>rng-save-schema-location</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Creates (or updates) a file called <SPAN class=docEmphasis>schemas.xml</SPAN> in your home directory. This file associates schemas with files.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-s</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>rng-set-schema-and-validate</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Set the schema and validate against it.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-a</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>rng-auto-set-schema</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Set the schema automatically according to the contents of the file.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-w</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>rng-what-schema</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Show in the minibuffer the current schema associated with this file.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-v</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>rng-validate-mode</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Toggles whether the mode line indicates that the file is valid or invalid.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-u</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-insert-named-char</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert a named character; press <SPAN class=docEmphBold>Tab</SPAN> to see a list.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphasis>(none)</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-insert-xml-declaration</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert an XML declaration at the beginning of the file.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c Tab</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-balanced-close-start-tag-inline</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert the ending tag for the starting tag you are typing, putting the ending tag on the current line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-b</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-balanced-close-start-tag-block</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert the ending tag for the starting tag you are typing, putting the ending tag on a separate line.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-f</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-finish-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Finish the current element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-h</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-mark-paragraph</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Mark the current paragraph.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-}</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-forward-paragraph</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move forward one paragraph.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-{</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-backward-paragraph</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move back one paragraph.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-p</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-backward-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move back one element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-n</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-forward-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move forward one element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-d</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-down-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move down one element (if nested).</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-u</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>nxml-backward-up-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move up one element (if nested).</P></TD></TR></TBODY></TABLE><BR><A name=gnu3-CHP-8-SECT-4.4></A>
<H4 class=docSection2Title>8.4.4 Using psgml Mode</H4>
<P class=docText>Lennart Stafflin's psgml mode has been <A name=gnu3-CHP-8-ITERM-2492></A><A name=gnu3-CHP-8-ITERM-2493></A><A name=gnu3-CHP-8-ITERM-2494></A>around for a while. It is more robust than Emacs's own SGML mode, but, like any add-on, you have to install it in order to use it. Either install TEI Emacs as described earlier or download psgml mode from <A class=docLink href="http://www.lysator.liu.se/projects/about_psgml.html" target=_blank>http://www.lysator.liu.se/projects/about_psgml.html</A> and follow the installation instructions there. TEI Emacs includes a functioning psgml mode, so if you've installed TEI Emacs, your setup work is done.</P>
<P class=docText>psgml mode consists of two parts: sgml-mode for writing SGML and xml-mode for writing XML (and in our case XHTML).</P><A name=ch08-_Toc475745106></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>To start psgml mode to edit our XHTML file, type <SPAN class=docEmphBold>M-x xml-mode</SPAN>.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn20.gif" width=431 height=277> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>XML appears on the mode line and an <TT>*SGML LOG*</TT> window opens. If you are using TEI Emacs, XSLT appears on the mode line along with XML.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>The <TT>*SGML LOG*</TT> window displays messages about this session. (If it doesn't appear immediately, click on the first character in the file.) The log buffer complains that it could not find an external entity called html. This file has been changed to work with the XHTML RELAX NG schema. psgml mode expects it to conform to an XHTML DTD. To get started with the (minimal) work needed to undertake the transformation from a schema-based file to a DTD-based file, we ask psgml to normalize the buffer.</P><A name=ch08-29-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>M-x sgml-normalize</SPAN> or select Normalize from the Modify menu</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn21.gif" width=431 height=277> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>psgml mode eliminates the namespace declaration in the <TT>&lt;html&gt;</TT> tag.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>More needs to be done, however. The first statements in an XHTML file include an XML statement and a DOCTYPE entry that identifies the DTD this document should be validated against. One of the nice things about TEI Emacs is that it includes a variety of DTDs. (Users of standard psgml mode don't have this feature; sorry.<SUP class=docFootnote><A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-8-sect-4.html#gnu3-chp-8-fnote-11">[11]</A></SUP>)</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=gnu3-CHP-8-FNOTE-11>[11]</A></SUP> A straightforward introduction to setting up a complete environment for psgml mode can be found at <A class=docLink href="http://openacs.org/doc/openacs-5-0-0/psgml-mode.html" target=_blank>http://openacs.org/doc/openacs-5-0-0/psgml-mode.html</A>.</P></BLOCKQUOTE><A name=ch08-30-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>At the beginning of the file, select DTD<IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> Insert DTD<IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> XHTML Transitional.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn22.gif" width=431 height=242> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>Emacs inserts the two required elements for us.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>That's all it takes to make this file a well-formed XHTML file. psgml mode allows for validation against the DTD. Let's validate it using <SPAN class=docEmphBold>C-c C-v</SPAN> to make sure it's okay.</P><A name=ch08-31-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Type: <SPAN class=docEmphBold>C-c C-v</SPAN></P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn23.gif" width=431 height=242> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>psgml mode inserts the default validate command in the minibuffer; press <SPAN class=docEmphBold>Enter</SPAN> to run it.</P></TD></TR></TBODY></TABLE><BR><A name=ch08-32-fm2xml></A>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL></COLGROUP>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText>Press <SPAN class=docEmphBold>Enter</SPAN> and type <SPAN class=docEmphBold>y</SPAN> to save the buffer when prompted</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><IMG border=0 alt="" src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/0596006489/figs/ge3_ch08scrn24.gif" width=431 height=277> </P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText>The <TT>*compilation*</TT> buffer indicates (somewhat cryptically) that the document is valid.</P></TD></TR></TBODY></TABLE><BR>
<P class=docText>Of course, typical documents are far more complex than this one. Options on the View menu provide selective hiding and showing of elements, including an option to hide all tags, allowing you to focus on the content of the file instead.</P>
<P class=docText>psgml mode also offers numerous options. If you are running TEI Emacs, you'll find the File Options and User Options submenus on the XML/SGML menu. If you've installed psgml mode standalone, you'll find them on the SGML menu. <A class=docLink href="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/gnu3-chp-8-sect-4.html#gnu3-chp-8-table-8">Table 8-8</A> summarizes some of the psgml commands.</P><A name=gnu3-CHP-8-TABLE-8></A>
<H5 class=docTableTitle>Table 8-8. Bindings in psgml mode</H5>
<TABLE border=1 rules=all cellSpacing=0 cellPadding=4 width="100%">
<COLGROUP>
<COL>
<COL>
<COL></COLGROUP>
<THEAD>
<TR>
<TH class=thead scope=col>
<P class=docText>Keystrokes</P></TH>
<TH class=thead scope=col>
<P class=docText>Command name</P></TH>
<TH class=thead scope=col>
<P class=docText>Action</P></TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-Space</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-mark-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Mark the current element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>M-Tab</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-complete</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Complete the current tag.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-t</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-transpose-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Transpose two elements.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-h</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-mark-current-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Mark the current element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-k</SPAN> <SPAN class=docEmphasis>Modify</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Kill Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-kill-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Delete the current element (and any child elements).</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-u</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Backward Up Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-backward-up-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move up to the parent element for this element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-d</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Down Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-down-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move down to the next child element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-b</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Backward Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-backward-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the previous element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-f</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Forward Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-forward-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the next element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-e</SPAN><SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>End of Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-end-of-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the end of the current element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-M-a</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Beginning of Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-beginning-of-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the beginning of the current element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-w</SPAN> <SPAN class=docEmphasis>SGML</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>What Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-what-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Similar to sgml-position but describes hierarchy in terms of tags versus content (for example, start-tag in title in head in html).</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-v</SPAN> <SPAN class=docEmphasis>SGML</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Validate</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-validate</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert validation command in the minibuffer so you can modify it if necessary before pressing Enter to execute it.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-t</SPAN> <SPAN class=docEmphasis>SGML</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>List Valid Tags</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-list-valid-tags</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>List tags that are valid in the current context.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-q</SPAN> <SPAN class=docEmphasis>Modify</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Fill Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-fill-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Fill element according to the mode's indentation rules.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-o</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Next Trouble Spot</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-next-trouble-spot</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Find the next problem spot and display the problem in the minibuffer.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-n</SPAN> <SPAN class=docEmphasis>Move</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Up Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-up-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Move to the parent element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c Enter</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-split-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Split current element.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-l</SPAN> <SPAN class=docEmphasis>SGML</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Show/Hide Warning Log</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-show-or-clear-log</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Display or delete the <TT>SGML LOG</TT> buffer (menu option name is misleading).</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-k</SPAN> <SPAN class=docEmphasis>Modify</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Kill Markup</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-kill-markup</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Delete current tag.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c /</SPAN> <SPAN class=docEmphasis>Markup</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>End Current Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-insert-end-tag</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Insert closing tag for current tag.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c -</SPAN> <SPAN class=docEmphasis>Modify</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Untag Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-untag-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Delete the current tag pair.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c #</SPAN> <SPAN class=docEmphasis>Modify</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Make Character Reference</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-make-character-reference</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Change character under the cursor to the equivalent entity.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-f C-e</SPAN> <SPAN class=docEmphasis>View</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Fold Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-fold-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Hide the current element and its children if any.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-u C-e</SPAN> <SPAN class=docEmphasis>View</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Unfold Element</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-unfold-element</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Show the current element and its children if any.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-f C-s</SPAN> <SPAN class=docEmphasis>View</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Fold Subelement</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-fold-subelement</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Hide subelements.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-f C-r</SPAN> <SPAN class=docEmphasis>View</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Fold Region</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-fold-region</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Hide the region.</P></TD></TR>
<TR>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>C-c C-u C-a</SPAN> <SPAN class=docEmphasis>View</SPAN> <IMG border=0 src="file:///D:/&#25105;&#30340;&#37239;&#30424;/&#24037;&#20316;&#30446;&#24405;/Now/learning-gnu-emacs-3rd/0596006489/images/ent/u2192.gif"> <SPAN class=docEmphasis>Unfold All</SPAN></P></TD>
<TD class=docTableCell>
<P class=docText><SPAN class=docEmphBold>sgml-unfold-all</SPAN> </P></TD>
<TD class=docTableCell>
<P class=docText>Show all hidden tags and text.</P></TD></TR></TBODY></TABLE>