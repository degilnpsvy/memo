Using Pickaxe 
<P></P>
<P><FONT class=clozed>87-88 Wheareas git blame tells you about the current state of a file, git log -S string searches back through the history of a file&#8217;s diffs for the given string. By searching the actual diffs between revisions, this command can find commits that perform a change in both additions and deletions. </FONT></P>
<P><FONT class=clozed>$ git log -Sinclude --pretty=oneline --abbrev-commit init/version.c </FONT></P>
<P><FONT class=clozed>cd354f1... [PATCH] remove many unneeded #includes of sched.h </FONT></P>
<P><FONT class=clozed>4865ecf... [PATCH] namespaces: utsname: implement utsname namespaces </FONT></P>
<P><FONT class=clozed>63104ee... kbuild: introduce utsrelease.h </FONT></P>
<P><FONT class=clozed>1da177e... Linux-2.6.12-rc2 </FONT></P>
<P><FONT class=clozed>Each of the commits listed on the left (cd354f1, etc.) will either add or delete lines that contain the word include. Be careful, though. If a commit both adds and subtracts exactly the same number of instances of lines with your key phrase, that won&#8217;t be shown. The commit must have a change in the number of additions and deletions in order to count. </FONT></P>
<P><FONT class=clozed>The -S option to git log is called pickaxe. That&#8217;s brute force archeology for you.</FONT>