Creating and Checking out a New Branch 
<P></P>
<P><FONT class=extract>Another fairly common scenario happens when you want to both create a new branch and simultaneously switch to it as well. Git provides a shortcut for this with the -b new-branch option. </FONT></P>
<P>Let&#8217;s start with the same setup as the previous example, except now you must start a new branch instead of checking changes into an existing branch. In other words, you are in the master branch, editing files, and suddenly realize that you would like all of the changes to be committed on an entirely new branch named bug/pr-3. The sequence is as follows: </P>
<P>$ git branch </P>
<P>bug/pr-1 </P>
<P>bug/pr-2 </P>
<P>dev</P>
<P>* master </P>
<P>$ git checkout -b bug/pr-3</P>
<P>M NewStuff </P>
<P>Switched to a new branch "bug/pr-3"</P>
<P>$ git show-branch </P>
<P>! [bug/pr-1] Fix Problem Report 1 </P>
<P>&nbsp;! [bug/pr-2] Added Bob's fixes. </P>
<P>&nbsp; * [bug/pr-3] Added Bob's fixes. </P>
<P>&nbsp;&nbsp; ! [dev] Started developing NewStuff </P>
<P>&nbsp;&nbsp;&nbsp; ! [master] Added Bob's fixes. </P>
<P>----- </P>
<P>&nbsp;&nbsp; + [dev] Started developing NewStuff </P>
<P>&nbsp;&nbsp; + [dev^] Improve the new development </P>
<P>&nbsp;&nbsp; + [dev~2] Start some new development. </P>
<P>+&nbsp;[bug/pr-1] Fix Problem Report 1 </P>
<P>++*++ [bug/pr-2] Added Bob's fixes.</P>
<P><FONT class=extract>Unless some problem prevents a checkout command from completing, the command: </FONT></P>
<P><FONT class=extract>$ git checkout -b new-branch start-point</FONT></P>
<P><FONT class=extract>is exactly the same as the two-command sequence: </FONT></P>
<P><FONT class=extract>$ git branch new-branch start-point </FONT></P>
<P><FONT class=extract>$&nbsp;git checkout new-branch</FONT>