CHAPTER 8 Diffs 
<P></P>
<P>A diff is a compact summary of the differences (hence the name &#8220;diff&#8221;) between two items. For example, given two files, the Unix and Linux diff command compares the files line by line and summarizes the deviations in a diff, as shown in Example 8-1. In the example, initial is one version of some prose and rewrite is a subsequent revision. <FONT class=extract>The -u option produces a unified diff, a standardized format used widely to share modifications.</FONT> </P>
<P>Example 8-1. Simple Unix diff </P>
<P>$ cat initial&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $ cat rewrite </P>
<P>Now is the time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Today is the time </P>
<P>For all good men&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;For all good men </P>
<P>To come to the aid&nbsp;&nbsp;&nbsp; And women </P>
<P>Of their country.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;To come to the aid </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Of their country.</P>
<P>$ diff -u initial rewrite </P>
<P>--- initial 1867-01-02 11:22:33.000000000 -0500 </P>
<P>+++ rewrite 2000-01-02 11:23:45.000000000 -0500 </P>
<P>@@ -1,4 +1,5 @@</P>
<P>-Now is the time </P>
<P>+Today is the time</P>
<P>For all good men </P>
<P>+And women</P>
<P>To come to the aid </P>
<P>Of their country.</P>
<P><FONT class=extract>Let&#8217;s look at the diff in detail. In the header, the original file is denoted by - - - and the new file by +++. The @@ line provides line number context for both file versions. A line prefixed with a minus sign (&#8211;) must be removed from the original file to produce the new file. Conversely, a line with a leading plus sign (+) must be added to the original file to produce the new file. A line that begins with a space is the same in both files and is provided by the -u option as context.</FONT></P>
<P><FONT class=extract>By itself, a diff offers no reason or rationale for a change, nor does it justify the initial or final state. However, a diff offers more than just a digest of how files differ. It provides a formal description of how to transform one file to the other. (You&#8217;ll find such instructions useful when applying or reverting changes.)</FONT> In addition, diff can be extended to show differences among multiple files and entire directory hierarchies.</P>
<P><FONT class=extract>The Unix diff command can compute the differences of all pairs of files found in two directory hierarchies. The command diff -r traverses each hierarchy in tandem, twins files by pathname (say, original/src/main.c and new/src/main.c), and summarizes the differences between each pair. Using diff -r -u produces a set of unified diffs comparing two hierarchies.</FONT></P>
<P>Git has its own diff facility and can likewise produce a digest of differences. The command git diff can compare files much akin to Unix&#8217;s diff command. Moreover, like diff -r, Git can traverse two tree objects and generate a representation of the variances. But git diff also has its own nuances and powerful features tailored to the particular needs of Git users.</P>
<P>Technically, a tree object represents only one directory level in the repository. It contains information on the directory&#8217;s immediate files and immediate subdirectories, but it does not catalog the complete contents of all subdirectories. However, because a tree object references the tree objects for each subdirectory, the tree object at the root of the project effectively represents the entire project at a moment in time. Hence, we can paraphrase and say git diff traverses &#8220;two&#8221; trees.</P>
<P>In this chapter, we&#8217;ll cover some of the basics of git diff and some of its special capabilities. You will learn how to use Git to show editorial changes in your working directory as well as arbitrary changes between any two commits within your project history. You will see how Git&#8217;s diff can help you make well-structured commits during your normal development process and you will also learn how to produce Git patches, which are described in detail in Chapter 14.