Squash Merges </P>
<P>Suppose some_branch had contained not just one new commit, but instead, 5 or 10 or even hundreds of commits. In most systems, merging some_branch into my_branch would involve producing a single diff, applying it as a single patch onto my_branch, and creating one new element in the history. This is called a squash commit because it &#8220;squashes&#8221; all the individual commits into one big change. As far as the history of my_branch is concerned, the history of some_branch would be lost. </P>
<P>In Git, the two branches are treated as equal, so it&#8217;s improper to squash one side or the other. Instead, the entire history of commits on both sides is retained. As users, you can see from Figure 9-10 that you pay for this complexity. If Git had made a squash commit, you wouldn&#8217;t have to see (or think about) a diagram that diverges and then rejoins again. The history of my_branch could have been just a straight line.</P>
<P>Git can make squash commits if desired. Just give the --squash option to git merge or git pull. Beware, however! Squashing commits will upset Git&#8217;s history, and that will complicate future merges because the squashed comments alter the history of commits (see Chapter 10).</P>
<P>The added complexity might appear unfortunate, but it is actually quite worthwhile. For example, this feature means that the git blame and git bisect commands, discussed in Chapter 6, are much more powerful than equivalents in other systems. And as you saw with the recursive merge strategy, Git is able to automate very complicated merges as a result of this added complexity and the resulting detailed history.</P>
<P>Although the merge operation itself treats both parents as equal, you can choose to treat the first parent as special when you go back through the history later. Some commands (e.g., git log and gitk) support the --first-parent option, which follows only the first parent of every merge. The resulting history looks much the same as if you had used -- squash on all your merges.