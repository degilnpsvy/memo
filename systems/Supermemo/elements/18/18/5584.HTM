<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: MyriadPro-SemiboldCond; mso-bidi-font-family: MyriadPro-SemiboldCond; mso-font-kerning: 0pt">Philosophy of Altering History</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">When it comes to manipulating the development history, there are several schools of</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">thought.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">One philosophy might be termed realistic history: every commit is retained and nothing</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is altered.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">One variant is a fine-grained realistic history, where you commit every change as soon</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">as possible, ensuring that each and every step is saved for posterity. Another option is</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">didactic realistic history, where you take your time and commit your best work only at</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">convenient and suitable moments.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Given the opportunity to adjust the history</SPAN><SPAN style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>possibly cleaning up a bad intermediate</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">design decision or rearranging commits into a more logical flow</SPAN><SPAN style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>you can create a more</SPAN></SPAN></P>
<p><SPAN style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>idealistic</SPAN>&#8221;<SPAN lang=EN-US> history.</SPAN></SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As a developer, you may find value in the full, fine-grained realistic history, because it</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">might provide archaeological details on how some good or bad idea developed. A</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">complete narrative may provide insight into the introduction of a bug, or explicate a</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">meticulous bug fix. In fact, an analysis of the history may even yield insight into how</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">a developer or team of developers works and how the development process can be</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">improved.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Many of those details might be lost if a revised history removes intermediate steps. Was</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">a developer able to simply intuit such a good solution? Or did it take several iterations</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">of refinement? What is the root cause of a bug? If the intermediate steps are not captured</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in the commit history, answers to those types of questions may be lost.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">On the other hand, having a clean history showing well-defined steps, each with logical</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">forward progress, can often be a joy to read and a pleasure to work with. There is,</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">moreover, no need to worry about the vagaries of a possibly broken or suboptimal step</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in the repository history. Also, other developers reading the history may thereby learn</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">a better development technique and style.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">So is a detailed realistic history without information loss the best approach? Or is a</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">clean history better? Perhaps an intermediate representation of the development is</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">warranted. Or, with a clever use of Git branches, perhaps you could represent both a</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">fine-grained realistic history and an idealized history in the same repository.</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Git gives you the ability to clean up the actual history and turn it into a more idealized</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or cleaner one before it is published or committed to public record. Whether you choose</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to do so, to keep a detailed record without alteration, or to pick some middle ground</SPAN></P>
<p><SPAN lang=EN-US style="FONT-SIZE: 9.5pt; FONT-FAMILY: Birka; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is entirely up to you and your project policies.</SPAN>