<H3 class=section style="WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">2.7<SPAN class=Apple-converted-space>&nbsp;</SPAN><FONT class=extract><CODE>atof</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atoff</CODE>&#8212;string to double or float</FONT></H3>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><A name=index-atof-8></A><A name=index-atoff-9></A><STRONG><FONT class=extract>Synopsis</FONT></STRONG></P><PRE class=example style="FONT-WEIGHT: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><FONT class=extract>     #include &lt;stdlib.h&gt;
     double atof(const char *<VAR>s</VAR>);
     float atoff(const char *<VAR>s</VAR>);</FONT>
     
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><STRONG>Description</STRONG><BR><CODE>atof</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>converts the initial portion of a string to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atoff</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>converts the initial portion of a string to a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>float</CODE>.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The functions parse the character string<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s</VAR>, locating a substring which can be converted to a floating-point value. The substring must match the format:</P><PRE class=smallexample style="FONT-WEIGHT: normal; FONT-SIZE: smaller; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; LINE-HEIGHT: normal; FONT-STYLE: normal; LETTER-SPACING: normal; FONT-VARIANT: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">      [+|-]<VAR>digits</VAR>[.][<VAR>digits</VAR>][(e|E)[+|-]<VAR>digits</VAR>]
</PRE>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">The substring converted is the longest initial fragment of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>s</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>that has the expected format, beginning with the first non-whitespace character. The substring is empty if<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>str</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is empty, consists entirely of whitespace, or if the first non-whitespace character is something other than<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.</CODE>, or a digit.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><CODE>atof(</CODE><VAR>s</VAR><CODE>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is implemented as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>strtod(</CODE><VAR>s</VAR><CODE>, NULL)</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atoff(</CODE><VAR>s</VAR><CODE>)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is implemented as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>strtof(</CODE><VAR>s</VAR><CODE>, NULL)</CODE>.</FONT></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><FONT class=extract><STRONG>Returns</STRONG><BR><CODE>atof</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the converted substring value, if any, as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE>; or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0.0</CODE>, if no conversion could be performed. If the correct value is out of the range of representable values, plus or minus<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>HUGE_VAL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is returned, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERANGE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is stored in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>errno</CODE>. If the correct value would cause underflow,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0.0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is returned and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ERANGE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is stored in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>errno</CODE>.</FONT></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><FONT class=extract><CODE>atoff</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>obeys the same rules as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atof</CODE>, except that it returns a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>float</CODE>.</FONT></P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px"><BR><STRONG>Portability</STRONG><BR><CODE>atof</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is ANSI C.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atof</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atoi</CODE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>atol</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are subsumed by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>strod</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>strol</CODE>, but are used extensively in existing code. These functions are less reliable, but may be faster if the argument is verified to be in a valid range.</P>
<P style="WORD-SPACING: 0px; FONT: medium Simsun; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); TEXT-INDENT: 0px; WHITE-SPACE: normal; LETTER-SPACING: normal; orphans: auto; widows: auto; -webkit-text-stroke-width: 0px">Supporting OS subroutines required:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>close</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fstat</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>isatty</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>lseek</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>read</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sbrk</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>write</CODE>.