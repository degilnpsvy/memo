Aborting or Restarting a Merge 
<P></P>
<P><FONT class=extract>If you start a merge operation but then decide for some reason that you don&#8217;t want to complete it, Git provides an easy way to abort the operation. Prior to executing the final git commit on the merge commit, use: </FONT></P>
<P><FONT class=extract>$ git reset --hard HEAD </FONT></P>
<P><FONT class=extract>This command restores both your working directory and the index to the state immediately prior to the git merge command.</FONT></P>
<P><FONT class=extract>If you want to abort or discard the merge after it has finished (that is, after it&#8217;s introduced a new merge commit), use the command: </FONT></P>
<P><FONT class=extract>$&nbsp;git reset --hard ORIG_HEAD</FONT></P>
<P><FONT class=extract>Prior to beginning the merge operation, Git saves your original branch HEAD in the ORIG_HEAD ref for just this sort of purpose.</FONT></P>
<P><FONT class=extract>You should be very careful here, though. If you did not start the merge with a clean working directory and index, you could get in trouble and lose any uncommitted changes you have in your directory.</FONT></P>
<P><FONT class=extract>You can initiate a git merge request with a dirty working directory, but if you execute git reset --hard then your dirty state prior to the merge is not fully restored. Instead, the reset loses your dirty state in the working directory area. In other words, you requested a --hard reset to the HEAD state! (See &#8220;Using git reset&#8221; on page 154.) </FONT></P>
<P><FONT class=extract>Starting with Git version 1.6.1, you have another choice. If you have botched a conflict resolution and want to return to the original conflict state before trying to resolve it again, you can use the command git checkout -m.</FONT>