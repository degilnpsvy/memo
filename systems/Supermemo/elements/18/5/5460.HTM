Tree Hierarchies </P>
<P>It&#8217;s nice to have information regarding a single file, as was shown in the previous section, but projects contain complex, deeply nested directories that are refactored and moved around over time. Let&#8217;s see how Git handles this by creating a new subdirectory that contains an identical copy of the hello.txt file: </P>
<P>$ pwd </P>
<P>/tmp/hello </P>
<P>$ mkdir subdir </P>
<P>$ cp hello.txt subdir/ </P>
<P>$ git add subdir/hello.txt </P>
<P>$ git write-tree </P>
<P>492413269336d21fac079d4a4672e55d5d2147ac</P>
<P>$ git cat-file -p 4924132693</P>
<P>100644 blob 3b18e512dba79e4c8300dd08aeb37f8e728b8dad hello.txt</P>
<P>040000 tree 68aba62e560c0ebc3396e8ae9335232cd93a3f60 subdir </P>
<P>The new top-level tree contains two items: the original hello.txt file as well as the new subdir directory, which is of type tree instead of blob. </P>
<P>Notice anything unusual? Look closer at the object name of subdir. It&#8217;s your old friend, 68aba62e560c0ebc3396e8ae9335232cd93a3f60! </P>
<P>What just happened? The new tree for subdir contains only one file, hello.txt, and that file contains the same old &#8220;hello world&#8221; content. So the subdir tree is exactly the same as the older, top-level tree! And of course it has the same SHA1 object name as before.</P>
<P>Let&#8217;s look at the .git/objects directory and see what this most recent change affected: </P>
<P>$ find .git/objects</P>
<P>.git/objects </P>
<P>.git/objects/49 </P>
<P>.git/objects/49/2413269336d21fac079d4a4672e55d5d2147ac </P>
<P>.git/objects/68 </P>
<P>.git/objects/68/aba62e560c0ebc3396e8ae9335232cd93a3f60 </P>
<P>.git/objects/pack </P>
<P>.git/objects/3b </P>
<P>.git/objects/3b/18e512dba79e4c8300dd08aeb37f8e728b8dad </P>
<P>.git/objects/info </P>
<P>There are still only three unique objects: a blob containing &#8220;hello world&#8221;; a tree containing hello.txt, which contains the text &#8220;hello world&#8221; plus a new line; and a second tree that contains another reference to hello.txt along with the first tree.