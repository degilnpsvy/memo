Reference counts 
<P></P>
<P>One of the key functions of a kobject is to serve as a reference counter<BR>for the object in which it is embedded. As long as references to the object<BR>exist, the object (and the code which supports it) must continue to exist.<BR>The low-level functions for manipulating a kobject's reference counts are:</P>
<P><FONT class=clozed>&nbsp;&nbsp;&nbsp; struct kobject *kobject_get(struct kobject *kobj);<BR>&nbsp;&nbsp;&nbsp; void kobject_put(struct kobject *kobj);</FONT></P>
<P><FONT class=clozed>A successful call to kobject_get() will increment the kobject's reference<BR>counter and return the pointer to the kobject.</FONT></P>
<P><FONT class=clozed>When a reference is released, the call to kobject_put() will decrement the<BR>reference count and, possibly, free the object.</FONT>