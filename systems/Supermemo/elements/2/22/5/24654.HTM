Uevents 
<P></P>
<P>After a kobject has been registered with the kobject core, you need to<BR>announce to the world that it has been created.&nbsp; This can be done with a<BR>call to kobject_uevent():</P>
<P>&nbsp;&nbsp;&nbsp;<FONT class=clozed> int kobject_uevent(struct kobject *kobj, enum kobject_action action</FONT>);</P>
<P><FONT class=extract>Use the KOBJ_ADD action for when the kobject is first added to the kernel.<BR>This should be done only after any attributes or children of the kobject<BR>have been initialized properly, as userspace will instantly start to look<BR>for them when this call happens.</FONT></P>
<P><FONT class=extract>When the kobject is removed from the kernel (details on how to do that is<BR>below), the uevent for KOBJ_REMOVE will be automatically created by the<BR>kobject core, so the caller does not have to worry about doing that by<BR>hand.</FONT>