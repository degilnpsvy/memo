<H1 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 20px 0px 10px; FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Lesson 3: SDL Extension Libraries<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="BOX-SIZING: border-box; LINE-HEIGHT: 1; COLOR: rgb(153,153,153); FONT-SIZE: 46px; FONT-WEIGHT: normal">Doing More with More</SMALL></H1>
<H1 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 20px 0px 10px; FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SMALL style="BOX-SIZING: border-box; LINE-HEIGHT: 1; COLOR: rgb(153,153,153); FONT-SIZE: 46px; FONT-WEIGHT: normal">
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Up until now we&#8217;ve only been using BMP images as they&#8217;re the only type supported by the base SDL library, but being restricted to using BMP images isn&#8217;t that great. Fortunately there are a set of SDL extension libraries that add useful features to SDL, such as support for a wide variety of image types through<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_image/">SDL_image</A>. The other available libraries are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_ttf/">SDL_ttf</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which provides TTF rendering support,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_net/">SDL_net</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which provides low level networking and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_mixer/">SDL_mixer</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which provides multi-channel audio playback.</P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=installing-an-extension-library>Installing an Extension Library</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In this lesson we&#8217;ll just need SDL_image but the installation process for all the extension libraries is the same. Download the development library for your system from the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_image/">project page</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and follow the instructions below to get SDL_image set up on your system.</P>
<UL style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN: 0px 0px 10px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Windows</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN>(MinGW or Visual Studio): Merge the extension library&#8217;s files into your existing SDL2 directory. You&#8217;ll also need to copy the SDL2_image, zlib and any image format dlls (such as libpng) over to your executable directory so that they&#8217;re available at runtime</P>
<LI style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN: 0px 0px 10px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Linux</STRONG>: Install from your package manager or by downloading the source and building with CMake.</P>
<LI style="BOX-SIZING: border-box">
<P style="BOX-SIZING: border-box; MARGIN: 0px 0px 10px"><STRONG style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Mac</STRONG>: Download the .dmg from the site and follow the Readme.</P></LI></UL>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To use the libraries you&#8217;ll need to update your includes and build system to link against the new extension library.</P>
<H4 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 10px; TEXT-INDENT: 0px; FONT: 500 18px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=cmake>Cmake</H4>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Grab the appropriate module from<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://github.com/Twinklebear/TwinklebearDev-Lessons/tree/master/cmake">the repo</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and add it to your CMake modules directory (<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cmake/</CODE>). You can then look up the new extension library using the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">find_package</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>method used to find SDL2 and include<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_image.h</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in your source file.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-cmake data-lang="cmake"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>find_package</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>SDL2_image</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>REQUIRED</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>include_directories</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>SDL2_IMAGE_INCLUDE_DIR</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Link this lesson against SDL2 and SDL2_image</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>add_executable</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson3</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>src/main.cpp</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>target_link_libraries</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson3</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>SDL2_LIBRARY</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>SDL2_IMAGE_LIBRARY</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Install target is the same as before</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H4 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 10px; TEXT-INDENT: 0px; FONT: 500 18px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=visual-studio>Visual Studio</H4>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Include<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_image.h</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and add<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL2_image.lib</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to your linker dependencies.</P>
<H4 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 10px; TEXT-INDENT: 0px; FONT: 500 18px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=gcc-or-clang-on-linux-and-mingw-on-windows>GCC or Clang on Linux and MinGW on Windows</H4>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Include<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL2/SDL_image.h</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and add<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">-lSDL2_image</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDLLIB</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable in your makefile.</P>
<H4 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 10px; TEXT-INDENT: 0px; FONT: 500 18px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=clang-on-mac>Clang on Mac</H4>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Include<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL2_image/SDL_image.h</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and add<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">-framework SDL2_image</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>variable in your makefile.</P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=setting-up-tile-properties>Setting up Tile Properties</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In this lesson we&#8217;ll see how to load images with SDL_image along with looking into scaling our textures when they&#8217;re drawn and come up with a method to place tiles based on the window size and the tile size. To do this we&#8217;ll need to define a tile size constant, which we&#8217;ll add below our window constants.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>const</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SCREEN_WIDTH</SPAN>  <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>640</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>const</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SCREEN_HEIGHT</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>480</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//We'll just be using square tiles for now</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>const</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>40</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=loading-textures-with-sdlimage><FONT class=extract>Loading Textures with SDL_image</FONT></H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>SDL_image lets us load multiple types of images along with allowing us to load them directly to an SDL_Texture with<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">IMG_LoadTexture</CODE>. With this function almost all of our<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">loadTexture</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>code can be replaced and now we call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">IMG_LoadTexture</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to load the texture, check for errors and return. We can still use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">logSDLError</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to log errors from the SDL_image library as the</FONT><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_image/docs/SDL_image.html#SEC45"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(42,100,150); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px"><FONT class=extract>IMG_GetError</FONT></CODE></A><FONT class=extract><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is just a<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://hg.libsdl.org/SDL_image/file/fa3faec630de/SDL_image.h#l137"><FONT class=extract>define</FONT></A><FONT class=extract><SPAN class=Apple-converted-space>&nbsp;</SPAN>of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_GetError</CODE>.</FONT></P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><FONT class=extract><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>/**</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* Loads an image into a texture on the rendering device</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param file The image file to load</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param ren The renderer to load the texture onto</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @return the loaded texture, or nullptr if something went wrong.</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>*/</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,226,46)" class=nf>loadTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>const</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>string</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>file</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Renderer</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_LoadTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>file</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>.</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>c_str</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>());</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>==</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>nullptr</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>logSDLError</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cout</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>"LoadTexture"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>texture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=specifying-width-and-height-for-rendering>Specifying Width and Height for Rendering</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">With SDL2 we&#8217;re able to scale textures when they&#8217;re rendered by specifying a width and height for the destination rectangle that differ from the texture&#8217;s width and height. However it&#8217;s also common to draw the textures without any scaling applied and it&#8217;d be a real pain if we had to specify the width and height each time we wanted to draw without scaling. To get around this we&#8217;ll create two versions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderTexture</CODE>. One will take the width and height along with the other parameters while another version will mirror our original and will use the texture&#8217;s width and height for the destination.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To set the texture&#8217;s width and height for drawing we simply write the width and height we want to the destination rect&#8217;s width and height fields instead of getting them from the texture.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>/**</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* Draw an SDL_Texture to an SDL_Renderer at position x, y, with some desired</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* width and height</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param tex The source texture we want to draw</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param ren The renderer we want to draw to</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param x The x coordinate to draw to</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param y The y coordinate to draw to</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param w The width of the texture to draw</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param h The height of the texture to draw</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>*/</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,226,46)" class=nf>renderTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Renderer</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>w</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>h</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Setup the destination rectangle to be at the position we want</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Rect</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>dst</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>dst</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>.</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>dst</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>.</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>dst</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>.</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>w</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>w</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>dst</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>.</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>h</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>h</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_RenderCopy</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>NULL</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>dst</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We&#8217;ll also create a function that provides the old functionality of drawing the texture without any scaling. This function will just get the width and height from the texture then call our new<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderTexture</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>/**</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* Draw an SDL_Texture to an SDL_Renderer at position x, y, preserving</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* the texture's width and height</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param tex The source texture we want to draw</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param ren The renderer we want to draw to</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param x The x coordinate to draw to</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>* @param y The y coordinate to draw to</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>*/</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,226,46)" class=nf>renderTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Renderer</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>w</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>h</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_QueryTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>NULL</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>NULL</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>w</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>h</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>w</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>h</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=initialize-sdlimage-optional>Initialize SDL_image (Optional)</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">When loading an image for the first time SDL_image will automatically initialize the necessary image loading subsystem, however this will cause some delay in loading the image since SDL_image will have to perform its initialization setup first. If you&#8217;d like to initialize SDL_image earlier to avoid the delay when loading an image type for the first time you can do so with<A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_image/docs/SDL_image.html#SEC8"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(42,100,150); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">IMG_Init</CODE></A>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">IMG_Init</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will return a bitmask of all the currently initialized image loaders, so we&#8217;ll perform an and with the flags we passed to see if initialization was successful. <FONT class=extract>Here we only initialize the PNG loader since that&#8217;s all we&#8217;ll need for this lesson. This initialization should be done after initializing SDL.</FONT></P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><FONT class=extract><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>((</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_Init</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_INIT_PNG</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_INIT_PNG</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>!=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_INIT_PNG</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>logSDLError</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cout</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>"IMG_Init"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Quit</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>();</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>1</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We then open a window and renderer the same as we did in lesson 2.</P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=loading-the-textures>Loading the Textures</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Since this lesson is to demonstrate loading PNGs we&#8217;ll be using new images for our background and foreground. We&#8217;ll also demonstrate that PNG transparency is preserved by using a foreground image with a transparent background drawn on top of a tiled background. Grab them both below.</P><FIGURE style="BOX-SIZING: border-box; TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 10px auto; DISPLAY: table; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MAX-WIDTH: 100%; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FIGCAPTION style="BOX-SIZING: border-box; DISPLAY: block"><B style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Background Tile</B></FIGCAPTION><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://github.com/Twinklebear/TwinklebearDev-Lessons/raw/master/res/Lesson3/background.png"><IMG style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px auto; DISPLAY: block; VERTICAL-ALIGN: middle; BORDER-TOP: 0px; BORDER-RIGHT: 0px" src="https://github.com/Twinklebear/TwinklebearDev-Lessons/raw/master/res/Lesson3/background.png"></A></FIGURE><FIGURE style="BOX-SIZING: border-box; TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 10px auto; DISPLAY: table; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MAX-WIDTH: 100%; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><FIGCAPTION style="BOX-SIZING: border-box; DISPLAY: block"><B style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Foreground</B></FIGCAPTION><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://github.com/Twinklebear/TwinklebearDev-Lessons/raw/master/res/Lesson3/image.png"><IMG style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px auto; DISPLAY: block; VERTICAL-ALIGN: middle; BORDER-TOP: 0px; BORDER-RIGHT: 0px" src="https://github.com/Twinklebear/TwinklebearDev-Lessons/raw/master/res/Lesson3/image.png"></A></FIGURE> 
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The images are loaded exactly the same with our<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">loadTexture</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function. Be sure to update the file paths to match your project structure.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>const</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>string</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>resPath</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>getResourcePath</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>"Lesson3"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>background</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>loadTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>resPath</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>+</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>"background.png"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>image</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>loadTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>resPath</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>+</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>"image.png"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Make sure they both loaded ok</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>background</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>==</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>nullptr</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>||</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>image</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>==</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>nullptr</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>background</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>image</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>window</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_Quit</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>();</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Quit</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>();</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>1</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=tiling-the-background>Tiling the Background</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Since our tiles are much smaller now we&#8217;ll need a lot more than 4 to cover the entire screen and typing their positions out by hand would be a real pain. Instead let&#8217;s generate the tile draw positions to fill the screen by using some math!</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We can determine how many tiles each row will need by dividing the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SCREEN_WIDTH</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">TILE_SIZE</CODE>. To determine the number of tiles per column we can do the same thing but for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SCREEN_HEIGHT</CODE>. Since we&#8217;ll be filling a square area of tiles the total number of tiles will be<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">tiles_per_row * tiles_per_col</CODE>. We could use a single for loop to run through all the tiles, or nested for loops to fill each tile in a row for each row. I&#8217;ve chosen to go with a single loop.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In the loop we compute the x and y indices of the tile to determine where it should be placed. Since we&#8217;re drawing row by row in this method the x index will repeat each row, while the y index will increment after each row is filled and we move down to the next row. Thus we can calculate the x index using the absolute tile index modded with the number of tiles per row:<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">x = tile_idx % tiles_per_row</CODE>.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">For example, if we were drawing a 2x2 grid of tiles we&#8217;d expect tile 0 to have the same x index as tile 2, which with this method it will:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">0 % 2 == 0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">2 % 2 == 0</CODE>.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The y index should increase after an entire row of tiles has been placed, so every<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">tiles_per_row</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>tiles. Since we&#8217;re using integers we can take advantage of integer truncation and compute this as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">y = tile_idx / tiles_per_row</CODE>. So on our 2x2 grid example: row 0 will have tiles 0 and 1:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">0/2 == 0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">1/2 == 0</CODE>, and row 1 will have tiles 2 and 3:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">2/2 == 1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">3/2 == 1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>giving the correct y indices.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">All that&#8217;s left to do is convert the indices into the pixel coordinates of the tile, which is done by multiplying the x and y indices by the tile size, and our tiling loop is done!</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Determine how many tiles we'll need to fill the screen</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>xTiles</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SCREEN_WIDTH</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>yTiles</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SCREEN_HEIGHT</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Draw the tiles by calculating their positions</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>for</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>i</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>0</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>i</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>xTiles</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>yTiles</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>++</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>i</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>i</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>%</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>xTiles</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>i</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>xTiles</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>background</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>TILE_SIZE</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=drawing-the-foreground>Drawing the Foreground</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Our foreground image is drawn the same as before, centered in the screen.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>iW</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>iH</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_QueryTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>image</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>NULL</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>NULL</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>iW</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>iH</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SCREEN_WIDTH</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>2</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>-</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>iW</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>2</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SCREEN_HEIGHT</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>2</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>-</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>iH</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>/</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>2</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>image</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>x</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>y</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We&#8217;ll then present the renderer and wait a few seconds before exiting just as we did in Lesson 2.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_RenderPresent</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Delay</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>2000</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=cleaning-up>Cleaning Up</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Clean up is the same as in lesson 2 with one added line to quit SDL_image by calling<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.libsdl.org/projects/SDL_image/docs/SDL_image.html#SEC9"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(42,100,150); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">IMG_Quit</CODE></A>.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>background</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>image</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>window</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>IMG_Quit</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>();</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Quit</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>();</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=end-of-lesson>End of Lesson</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If everything went well you should see this draw to your window.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><IMG style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; MARGIN: 0px auto; DISPLAY: block; VERTICAL-ALIGN: middle; BORDER-TOP: 0px; BORDER-RIGHT: 0px" class=centered src="http://www.willusher.io/assets/img/lesson_3/result.png" width=500><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If you have any issues check your error log and check back through the lesson. Feel free to post any questions you may have below.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">I&#8217;ll see you again soon in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.willusher.io/sdl2%20tutorials/2013/08/20/lesson-4-handling-events">Lesson 4: Handling Events!</A></P></SMALL></H1>