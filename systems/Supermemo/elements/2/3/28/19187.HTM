<H1 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 20px 0px 10px; FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Postscript 1: Easy Cleanup<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="BOX-SIZING: border-box; LINE-HEIGHT: 1; COLOR: rgb(153,153,153); FONT-SIZE: 46px; FONT-WEIGHT: normal">variadical!</SMALL></H1>
<H1 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 20px 0px 10px; FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SMALL style="BOX-SIZING: border-box; LINE-HEIGHT: 1; COLOR: rgb(153,153,153); FONT-SIZE: 46px; FONT-WEIGHT: normal">
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In this quick postscript we&#8217;ll look into a simple way to clean up our various SDL resources with variadic templates and template specialization. This will let us clean up all our resources with a single simple call:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cleanup(texA, texB, renderer, window)</CODE>instead of calling all the corresponding<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Destroy/Free*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions, saving ourselves a lot of typing.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We&#8217;ll do this by creating a variadic function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cleanup</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that will take the list of SDL resources to be free&#8217;d and then define specializations of it for each resource we&#8217;ll be passing, eg. for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Window</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Renderer</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Texture</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and so on.</P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=the-variadic-cleanup-function>The Variadic Cleanup Function</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If you&#8217;re unfamiliar with the C++11&#8217;s<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://en.wikipedia.org/wiki/Variadic_template">varidic templates</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://thbecker.net/articles/rvalue_references/section_01.html">rvalue references and forwarding</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>features it may be useful to do some reading to get some background before continuing on to the implementation. The implementation of our cleanup function however is actually quite simple. We have a single variadic template function that calls one of our specialized cleanup functions and then recurses to iterate through the list of arguments. Since the code for this functionality is so short I&#8217;ve left the detailed explanations in the comments, so be sure to read through them.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#ifndef CLEANUP_H</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#define CLEANUP_H</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#include &lt;utility&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#include &lt;SDL.h&gt;</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>/*</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * Recurse through the list of arguments to clean up, cleaning up</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * the first one in the list each iteration.</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> */</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>template</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>typename</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>T</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>typename</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>...</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>Args</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>T</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>t</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>Args</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;&amp;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>...</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>args</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Cleanup the first item in the list</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>t</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Recurse to clean up the remaining arguments</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>forward</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>Args</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&gt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>args</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)...);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>/*</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * These specializations serve to free the passed argument and also provide the</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * base cases for the recursive call above, eg. when args is only a single item</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * one of the specializations below will be called by</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * cleanup(std::forward&lt;Args&gt;(args)...), ending the recursion</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * We also make it safe to pass nullptrs to handle situations where we</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * don't want to bother finding out which values failed to load (and thus are null)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * but rather just want to clean everything up and let cleanup sort it out</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> */</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>template</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Window</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&gt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Window</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>win</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>!</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>win</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_DestroyWindow</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>win</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>template</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Renderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&gt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Renderer</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>!</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_DestroyRenderer</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>template</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&gt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Texture</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>!</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_DestroyTexture</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>template</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>void</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Surface</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&gt;</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Surface</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>*</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>surf</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>!</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>surf</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_FreeSurface</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>surf</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#endif</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=using-the-variadic-cleanup-function>Using the Variadic Cleanup Function</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To see the usefulness of this cleanup utility let&#8217;s see how it compresses our calls to the various<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Destroy/Free*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions throughout<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.willusher.io/sdl2%20tutorials/2013/08/17/lesson-1-hello-world">Lesson 1</A>. In lesson 1 if we found that our bitmap or texture wasn&#8217;t created successfully we&#8217;d need to destroy the renderer and window before quitting out of SDL and exiting with a failure code. With<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cleanup</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>we can compress these two lines down to a single call.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//We compress these two lines down</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//SDL_DestroyRenderer(ren);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//SDL_DestroyWindow(win);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//to a single cleanup call:</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>win</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">We can also compress the three lines used to free all the resources (texture, renderer and window) at the end of Lesson 1 down into a single<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cleanup</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>call, passing all the resources we want to free.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//We compress these three lines down</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//SDL_DestroyTexture(tex);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//SDL_DestroyRenderer(ren);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//SDL_DestroyWindow(win);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//to a single cleanup call:</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>tex</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>ren</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>win</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cleanup</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>can also be used as a drop-in replacement for the various<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Destroy/Free*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions, although this doesn&#8217;t really give us much benefit as far as compressing lines goes.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//Cleanup can also swap in for direct calls turning</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//SDL_FreeSurface(bmp);</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c1>//into</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cleanup</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>bmp</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>);</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=end-of-postscript>End of Postscript</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">That&#8217;s all for this postscript, try out<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cleanup</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>yourself by converting your code from Lesson 1 to use it instead of calling all the<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Destroy/Free*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>functions manually. If you run into any issues or have any questions please post a comment below.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">I&#8217;ll see you again soon in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.willusher.io/sdl2%20tutorials/2013/08/17/lesson-2-dont-put-everything-in-main">Lesson 2: Don&#8217;t Put Everything in Main</A>!</P></SMALL></H1>