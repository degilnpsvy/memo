<H1 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 20px 0px 10px; FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Lesson 0: CMake<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="BOX-SIZING: border-box; LINE-HEIGHT: 1; COLOR: rgb(153,153,153); FONT-SIZE: 46px; FONT-WEIGHT: normal">Setting Up SDL</SMALL></H1>
<H1 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 20px 0px 10px; FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SMALL style="BOX-SIZING: border-box; LINE-HEIGHT: 1; COLOR: rgb(153,153,153); FONT-SIZE: 46px; FONT-WEIGHT: normal">
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">CMake is really useful for building the lessons since it lets us generate make files or project files for just about any platform and IDE. It also helps with resolving dependencies (such as SDL2), platform specific configurations and much much more. If you&#8217;re unfamiliar with CMake there&#8217;s a nice introduction available on<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.cmake.org/cmake/help/cmake_tutorial.html">their site</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to help you get started.</P>
<BLOCKQUOTE style="BOX-SIZING: border-box; BORDER-LEFT: rgb(238,238,238) 5px solid; PADDING-BOTTOM: 10px; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 20px; PADDING-LEFT: 20px; PADDING-RIGHT: 20px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; PADDING-TOP: 10px; -webkit-text-stroke-width: 0px"><SPAN class=Apple-converted-space>&nbsp;</SPAN><B style="BOX-SIZING: border-box; FONT-WEIGHT: bold">Windows users:</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>Since Windows doesn't have any standardized include or library directories like Linux and OS X CMake can have some trouble resolving dependencies, so we'll need to give it a hand. I've taken the existing FindSDL2 modules for CMake and have modified them a bit to also check for an environment variable named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL2</CODE>. You should create this environment variable and have it point to the root level of the folder containing the SDL2 headers and libraries you downloaded previously.</BLOCKQUOTE>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To lookup SDL2 we&#8217;ll need a module to find the dependency we want. Typically these are included in the CMake distribution but for some newer libraries they may not be integrated yet. In the case of SDL2 we&#8217;ll need to provide our own module to lookup the dependency. This module is available around online and in the lesson<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://github.com/Twinklebear/TwinklebearDev-Lessons/blob/master/cmake/FindSDL2.cmake">repository</A>. For Windows users I recommend using the modified version from the repository since it will also check for your<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>environment variable. The existing FindSDL2.cmake that&#8217;s floating around will work for Linux and Mac but will likely fail to find the libraries on Windows.</P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=the-cmakeliststxt-files-for-our-project>The CMakeLists.txt Files for Our Project</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Our main CMakeLists file needs to do a few things so that we can build our project easily:</P>
<UL style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 0px; TEXT-INDENT: 0px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI style="BOX-SIZING: border-box">Append to the CMake module path so we can find our modified SDL2 modules. 
<LI style="BOX-SIZING: border-box">Set an install directory (called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">BIN_DIR</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>here) that we can reference for installing our executables. 
<LI style="BOX-SIZING: border-box">Find SDL2 and add the SDL2 include directory to the include path. 
<LI style="BOX-SIZING: border-box">Add the Lesson0 subdirectory to find this lesson&#8217;s CMakeLists.txt so that we can build it.</LI></UL>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This CMakeLists.txt file should be in the top level directory of your project folder for the lessons.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-cmake data-lang="cmake"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>cmake_minimum_required</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>VERSION</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>2.6</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>project</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>TwinklebearDevLessons</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Use our modified FindSDL2* modules</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>set</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_MODULE_PATH</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>CMAKE_MODULE_PATH</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"${TwinklebearDevLessons_SOURCE_DIR}/cmake"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Set an output directory for our binaries</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>set</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>BIN_DIR</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>TwinklebearDevLessons_SOURCE_DIR</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>/bin</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Bump up warning levels appropriately for clang, gcc &amp; msvc</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Also set debug/optimization flags depending on the build type. IDE users choose this when</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># selecting the build mode in their IDE</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>CMAKE_CXX_COMPILER_ID</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>STREQUAL</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"GNU"</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>OR</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>CMAKE_CXX_COMPILER_ID</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>STREQUAL</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"Clang"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>set</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_CXX_FLAGS</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"${CMAKE_CXX_FLAGS} -Wall -Wextra -pedantic -std=c++11"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>set</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_CXX_FLAGS_DEBUG</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"${CMAKE_CXX_FLAGS} -g"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>set</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_CXX_FLAGS_RELEASE</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"${CMAKE_CXX_FLAGS} -O2"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>elseif</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>CMAKE_CXX_COMPILER_ID</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>STREQUAL</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"MSVC"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_CXX_FLAGS</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>MATCHES</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"/W[0-4]"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>string</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>REGEX</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>REPLACE</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"/W[0-4]"</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"/W4"</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_CXX_FLAGS</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"${CMAKE_CXX_FLAGS}"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>else</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>()</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>set</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>CMAKE_CXX_FLAGS</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"${CMAKE_CXX_FLAGS} /W4"</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>endif</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>()</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>endif</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>()</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Look up SDL2 and add the include directory to our include path</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>find_package</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>SDL2</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>REQUIRED</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>include_directories</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>SDL2_INCLUDE_DIR</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=c># Look in the Lesson0 subdirectory to find its CMakeLists.txt so we can build the executable</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>add_subdirectory</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson0</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=the-test-program>The Test Program</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The program we&#8217;re building for this lesson is a simple sanity check for SDL. It will<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://wiki.libsdl.org/SDL_Init">initialize</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>all the SDL subsystems, check for any<A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://wiki.libsdl.org/SDL_GetError">errors</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and then<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="https://wiki.libsdl.org/SDL_Quit">quit</A>. Our build system will look for this file under Lesson0/src/main.cpp. If you place it elsewhere you&#8217;ll need to update the file names and subdirectories in the CMakeLists files.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-c-- data-lang="c++"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#include &lt;iostream&gt;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cp>#include &lt;SDL.h&gt;</SPAN>

<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm>/*</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> * Lesson 0: Test to make sure SDL is setup properly</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)" class=cm> */</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(166,226,46)" class=nf>main</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>int</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>argc</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>,</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=kt>char</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>**</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>argv</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>if</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Init</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_INIT_EVERYTHING</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>!=</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>0</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>){</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>cout</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&lt;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>"SDL_Init Error: "</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&lt;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_GetError</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>()</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&lt;&lt;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>std</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>::</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>endl</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
		<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>1</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=n>SDL_Quit</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>();</SPAN>
	<SPAN style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)" class=k>return</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)" class=mi>0</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>;</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>}</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To build our executable for Lesson0 we&#8217;ll need another CMakeLists.txt file within the Lesson0 directory, which our main CMakeLists file will check since we&#8217;ve added the subdirectory to be searched. Here we just add an executable to be built from our source file and tell CMake to link the executable against the SDL2 libraries. We also add an install target to have the executable be installed to our binary directory.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-cmake data-lang="cmake"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>project</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson0</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>add_executable</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson0</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>src/main.cpp</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>target_link_libraries</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson0</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>SDL2_LIBRARY</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN>
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>install</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>(</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>TARGETS</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>Lesson0</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>RUNTIME</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s>DESTINATION</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>${</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>BIN_DIR</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>}</SPAN><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=p>)</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If you&#8217;ve been using the folder hierarchy used in the lessons you should now have something like this.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-text data-lang="text">TwinklebearDevLessons/
    CMakeLists.txt
    Lesson0/
        CMakeLists.txt
        src/
            main.cpp
    cmake/
        FindSDL2.cmake</CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=building-with-cmake>Building With CMake</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To build the project with CMake we&#8217;ll want to make a temporary build directory to store the various build artifacts so we don&#8217;t pollute our source directory with a bunch of junk. From this folder we can then run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cmake -G "Your Generator" ../</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and CMake will generate makefiles or project files for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">Your Generator</CODE>. You can run<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">cmake -H</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to see which generators are available on your system. You can also specify the build type with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">-DCMAKE_BUILD_TYPE=Type</CODE>, passing Debug will use the debug flags we set above and likewise for Release. I recommend building with the debug flags since it&#8217;ll make it easier to track down problems with your debugger. A sample run of building a Unix Makefiles target in debug mode is shown below.</P>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 1px solid; BORDER-LEFT: 1px solid; PADDING-BOTTOM: 8px; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; MARGIN: 0px 2px 2px 0px; PADDING-LEFT: 8px; PADDING-RIGHT: 8px; DISPLAY: block; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; LETTER-SPACING: normal; COLOR: rgb(248,248,242); BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WORD-SPACING: 0px; PADDING-TOP: 8px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" class=highlight><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 9px; LINE-HEIGHT: 1.4285; BACKGROUND-COLOR: transparent; MARGIN: 0px; PADDING-LEFT: 9px; PADDING-RIGHT: 9px; DISPLAY: block; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WORD-WRAP: break-word; WHITE-SPACE: pre-wrap; COLOR: white; FONT-SIZE: 1em; WORD-BREAK: break-all; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 9px; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" class=language-bash data-lang="bash"><SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>$ </SPAN>mkdir build <SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>&amp;&amp;</SPAN> <SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nb>cd </SPAN>build
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>$ </SPAN>cmake -G <SPAN style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)" class=s2>"Unix Makefiles"</SPAN> -DCMAKE_BUILD_TYPE<SPAN style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)" class=o>=</SPAN>Debug ../
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>$ </SPAN>make
<SPAN style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)" class=nv>$ </SPAN>make install</CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">In this example regular Unix Makefiles will be generated in the build directory so the project can now be built with make. Running<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">make install</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will install any targets we&#8217;ve specified (our Lesson0 binary) to their install locations (<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">BIN_DIR</CODE>). Windows users will also need to copy the relevant SDL2.dll to their install directory so that the executables can find it. Be sure to copy the appropriate 32bit or 64bit dll depending on which you built.</P>
<H2 style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; MARGIN-TOP: 20px; TEXT-INDENT: 0px; FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; MARGIN-BOTTOM: 10px; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" id=end-of-lesson-0>End of Lesson 0</H2>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">When we add more programs throughout the lesson series you can simply add the subdirectory with<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">add_subdirectory(Lesson#)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and then re-use the Lesson0 CMakeLists.txt file but replacing the occurances of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">Lesson0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>with<CODE style="BOX-SIZING: border-box; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: 0px; BACKGROUND-COLOR: transparent; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; WHITE-SPACE: nowrap; COLOR: rgb(51,51,51); FONT-SIZE: 26px; BORDER-TOP: medium none; BORDER-RIGHT: medium none; PADDING-TOP: 0px; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">Lesson#</CODE>. When we start adding SDL extension libraries we&#8217;ll have to add some more CMake modules and link targets but it&#8217;s pretty straightforward to setup.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If you&#8217;re having any problems with the lesson please leave a comment below.</P>
<P style="BOX-SIZING: border-box; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 10px; FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(51,51,51); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">I&#8217;ll see you again soon in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202); TEXT-DECORATION: none" href="http://www.willusher.io/sdl2%20tutorials/2014/06/16/postscript-0-properly-finding-resource-paths">Postscript 0: Properly Finding Resource Paths!</A></P></SMALL></H1>