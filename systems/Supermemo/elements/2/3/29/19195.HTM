<HEAD></HEAD>
<BODY>
<H1 style="TEXT-ALIGN: center; MARGIN: 15pt 0cm 7.5pt; BACKGROUND: #000044" align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Setting up SDL 2 on MinGW</SPAN></H1>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000044" align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US><FONT size=3>Last Updated 6/21/14</FONT></SPAN></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><A name=1></A><A href="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/index.php#1"><SPAN style="mso-bookmark: 1"><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #8888ff; FONT-SIZE: 13.5pt" lang=EN-US>1)</SPAN></SPAN><SPAN style="mso-bookmark: 1"></SPAN></A><SPAN style="mso-bookmark: 1"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>First thing you need to do is download SDL headers, libary and binaries. You will find them on the SDL website, specifically on<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://libsdl.org/download-2.0.php"><SPAN style="COLOR: #8888ff">this page</SPAN></A>.<BR><BR>You'll want to download the MinGW development libraries<SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">.</SPAN><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"></P>
<DIV style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px auto; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=tutImg><IMG src="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/mingw_package.png"></DIV>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Other </SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>the gzip archive and there should be a tar archive. Open up the tar archive and the should be a folder called SDL2-2.<I>something</I>.<I>something</I>. Inside of that folder there should be a bunch of folders and files, most importantly<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>i686-w64-mingw32</SPAN></B><SPAN class=apple-converted-space><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>which contains the 32bit library and<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>x86_64-w64-mingw32</SPAN></B><SPAN class=apple-converted-space><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>which contains the 64bit library.<BR><BR></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>This is important:</SPAN></B><SPAN class=apple-converted-space><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>most compilers still compile 32bit binaries by default to maximize compatibility. We will be using the 32bit binaries for this tutorial set. It doesn't matter if you have a 64bit operating system, since we are compiling 32bit binaries we will be using the 32bit library.<BR><BR>Inside of i686-w64-mingw32 are the include, lib, and bin folders which contain everything we need compile and run SDL applications. Copy the contents of i686-w64-mingw32 to any directory you want. I recommend putting it in a folder that you dedicate to holding all your development libraries for MinGW. For these tutorials I'm putting it in a directory I created C:\mingw_dev_lib<BR><BR><A name=2></A><A href="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/index.php#2"><SPAN style="mso-bookmark: 2"><SPAN style="COLOR: #8888ff">2)</SPAN></SPAN><SPAN style="mso-bookmark: 2"></SPAN></A><SPAN style="mso-bookmark: 2"></SPAN>Next you're going to want to get up the path for mingw so you can run mingw commands in any directory. Open up the system menu either by A) right clicking My Computer and selecting Properties or B) going to the Control Panel and selecting the system menu. Once your in the system menu, click advanced system settings<SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">.</SPAN></P>
<DIV style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px auto; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=tutImg><IMG src="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/system.png"></DIV>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">a</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>nd then click environment <SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">variables</SPAN></P>
<DIV style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px auto; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=tutImg><IMG src="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/environment_variables.png"></DIV>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Under</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US> system variables, select the "Path" variable and click <SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">edit.</SPAN></P>
<DIV style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px auto; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=tutImg><IMG src="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/edit_path.png"></DIV>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">What</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US> the path variable does is tell the OS where to look when running an executable. What we want to do is whenever we run the g++ command, the OS should look in the MinGW bin directory where g++.exe is located. If you installed MinGW by itself, the MinGW bin directory should be</SPAN></P>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000022" align=center><FONT size=3><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>C:\MinGW\bin</SPAN><SPAN style="LINE-HEIGHT: 133%; FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 7.5pt" lang=EN-US></SPAN></FONT></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Append it to the long list of paths with a semi-colon after it and click <SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">ok.</SPAN></P>
<DIV style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px auto; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=tutImg><IMG src="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/add_path.png"></DIV>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US> you're using an IDE like Code::Blocks which uses MinGW, you can also set its MinGW bin directory which should be at</SPAN></P>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000022" align=center><FONT size=3><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>C:\Program Files (x86)\CodeBlocks\MinGW\bin</SPAN><SPAN style="LINE-HEIGHT: 133%; FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 7.5pt" lang=EN-US></SPAN></FONT></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Now when ever you run a command that uses a MinGW executable, the OS will know to look in the MinGW bin directory.<BR><BR>If you run your program and it complains that it can't find SDL2.dll, it means you did not set the path correctly.<BR><BR><A name=3></A><A href="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/index.php#3"><SPAN style="mso-bookmark: 3"><SPAN style="COLOR: #8888ff">3)</SPAN></SPAN><SPAN style="mso-bookmark: 3"></SPAN></A><SPAN style="mso-bookmark: 3"></SPAN>Now go download the<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/01_hello_SDL.zip"><SPAN style="COLOR: #8888ff">source for lesson 01</SPAN></A>. Extract the source somewhere. Open up a command window in the directory by holding shift and right <SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">clicking.</SPAN></P>
<DIV style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px auto; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=tutImg><IMG src="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/command.png"></DIV>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><BR style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><SPAN style="TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; DISPLAY: inline !important; FONT: medium monospace; WHITE-SPACE: normal; FLOAT: none; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Now</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US> compile by entering this big old command (This command assumed you have SDL 2 extracted at C:\mingw_dev_lib):</SPAN></P>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000022" align=center><FONT size=3><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>g++ 01_hello_SDL.cpp -IC:\mingw_dev_lib\include\SDL2 -LC:\mingw_dev_lib\lib -w -Wl,-subsystem,windows -lmingw32 -lSDL2main -lSDL2 -o 01_hello_SDL</SPAN><SPAN style="LINE-HEIGHT: 133%; FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 7.5pt" lang=EN-US></SPAN></FONT></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Having to manually punch in this compilation command gets very tedious very quickly. This is why I recommend using Make.<BR><BR><A name=4></A><A href="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/index.php#4"><SPAN style="mso-bookmark: 4"><SPAN style="COLOR: #8888ff">4)</SPAN></SPAN><SPAN style="mso-bookmark: 4"></SPAN></A><SPAN style="mso-bookmark: 4"></SPAN><SPAN class=apple-converted-space>&nbsp;</SPAN>MingGW Make allows you to make build scripts that'll automate the compilation process.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #2222ff" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>From Basic Makefile</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#OBJS specifies which files to compile as part of the project</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>OBJS = 01_hello_SDL.cpp</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#OBJ_NAME specifies the name of our exectuable</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>OBJ_NAME = 01_hello_SDL</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#This is the target that compiles our executable</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>all : $(OBJS)</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-tab-count: 1">&nbsp;&nbsp; </SPAN>g++ $(OBJS) -IC:\mingw_dev_lib\include\SDL2 -LC:\mingw_dev_lib\lib -w -Wl,-subsystem,windows -lmingw32 -lSDL2main -lSDL2 -o $(OBJ_NAME)</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here we have a basic Makefile. At the top we declare and set the "OBJS" macro which specifies which files we're compiling. Then we set the "OBJ_NAME" macro that specifies the name of our executable.<BR><BR>After setting these two macros, we have the "all" target which compiles the program. It's followed by the dependencies which as you can see is the OBJS macro, because obviously you need the source files to compile the program.<BR><BR>After specifying the name of the target and its dependencies, the command to create the target is on the next line.<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>The command to create the target must begin with a tab or Make will reject it</SPAN></B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>.<BR><BR>As you would expect, the command to compile the program is largely the same as the command we would compile it off the command line. A key difference is that we have macros that we insert into the command which makes things like adding new files to the project must easier since you only have to change the macro as opposed to changing the whole command.<BR><BR>In future tutorials, we will be using more libraries. We should probably use more macros to make the process of adding them easier.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #2222ff" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>From Makefile</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#OBJS specifies which files to compile as part of the project</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>OBJS = 01_hello_SDL.cpp</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#CC specifies which compiler we're using</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>CC = g++</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#INCLUDE_PATHS specifies the additional include paths we'll need</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>INCLUDE_PATHS = -IC:\mingw_dev_lib\include\SDL2</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#LIBRARY_PATHS specifies the additional library paths we'll need</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>LIBRARY_PATHS = -LC:\mingw_dev_lib\lib</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#COMPILER_FLAGS specifies the additional compilation options we're using</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US># -w suppresses all warnings</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US># -Wl,-subsystem,windows gets rid of the console window</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>COMPILER_FLAGS = -w -Wl,-subsystem,windows</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#LINKER_FLAGS specifies the libraries we're linking against</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>LINKER_FLAGS = -lmingw32 -lSDL2main -lSDL2</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#OBJ_NAME specifies the name of our exectuable</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>OBJ_NAME = 01_hello_SDL</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>#This is the target that compiles our executable</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>all : $(OBJS)</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-tab-count: 1">&nbsp;&nbsp; </SPAN>$(CC) $(OBJS) $(INCLUDE_PATHS) $(LIBRARY_PATHS) $(COMPILER_FLAGS) $(LINKER_FLAGS) -o $(OBJ_NAME)</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Now our compilation command is much more flexible.<BR><BR>Near the top we have the macros that define the files we're compiling and the compiler we're using.<BR><BR>Next we have the "INCLUDE_PATHS" macro which specifies the additional directories we're getting header files from. As you can see, we're using the include directory from the SDL2 folder we extacted earlier. The "LIBRARY_PATHS" sets the additional library file paths. Notice how there's a<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>-I</SPAN></B><SPAN class=apple-converted-space><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>before every include directory and a<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>-L</SPAN></B><SPAN class=apple-converted-space><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>before every library directory.<BR><BR>The "COMPILER_FLAGS" macro are the additional options we use when compiling. In this case we're disabling all warnings and disabling the console window. The "LINKER_FLAGS" macro specifies which libraries we're linking against. Here we're compiling against 32bit mingw, SDL2, and SDL2main. Notice how there's a<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>-l</SPAN></B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>flag before every library.<BR><BR>Finally at the bottom we have our target compiling using all of our macros. Thanks to macros we can very easily change the macros to add more files and libraries as we need them.<BR><BR>Save this Makefile code to a file named "Makefile" (case sensitive with no file extension) or you can use the one I premade<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/01_hello_SDL/windows/mingw/Makefile"><SPAN style="COLOR: #8888ff">here</SPAN></A>. Open a command line in the directory with the source files and run the command<SPAN class=apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 13.5pt" lang=EN-US>mingw32-make.exe</SPAN></B><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>. Make will search for a file named "Makefile" in the directory Make was called in and run the Makefile that will compile your code.<BR><BR>Now that you have SDL 2 compiling, it time to go onto part 2 of the tutorial.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN lang=EN-US><FONT size=3 face=Calibri>&nbsp;</FONT></SPAN></P></BODY>