<H1 style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 20px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Lesson 6: True Type Fonts with SDL_ttf<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="BOX-SIZING: border-box; FONT-SIZE: 46px; FONT-WEIGHT: normal; COLOR: rgb(153,153,153); LINE-HEIGHT: 1">font-tastic!</SMALL></H1>
<H1 style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 72px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 20px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SMALL style="BOX-SIZING: border-box; FONT-SIZE: 46px; FONT-WEIGHT: normal; COLOR: rgb(153,153,153); LINE-HEIGHT: 1">
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In this lesson we&#8217;ll see how to perform basic True Type font rendering with the SDL_ttf extension library. Setting up the library is identical to what we did in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.willusher.io/sdl2%20tutorials/2013/08/18/lesson-3-sdl-extension-libraries">Lesson 3</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for SDL_image, but just replace &#8220;image&#8221; with &#8220;ttf&#8221; (Windows users should also copy the included freetype dll over). So<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.libsdl.org/projects/SDL_ttf/">download SDL_ttf</A>, take a peek at the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.libsdl.org/projects/SDL_ttf/docs/index.html">documentation</A>, and let&#8217;s get started!</P>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The first thing we&#8217;ll need after the library is a font to render our text with. I made a pretty awful font using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.pentacom.jp/pentacom/bitfontmaker2/">BitFontMaker</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which you can<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="https://github.com/Twinklebear/TwinklebearDev-Lessons/raw/master/res/Lesson6/sample.ttf">download from the repository</A>, or if you have some other font you&#8217;d like to use that&#8217;s fine too. My font only provides the basic ASCII characters, so if you try to render non-ASCII characters they probably won&#8217;t show up. The code for this lesson will build off of what we wrote for Lesson 5, so if you don&#8217;t have that to start from grab it off<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="https://github.com/Twinklebear/TwinklebearDev-Lessons/tree/master/Lesson5">Github</A>, the image being loaded and the clips calculation and drawing will be replaced with what we learn here.</P>
<H2 id=rendering-text style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Rendering Text</H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">SDL_ttf provides a few different ways for rendering text with varying speed/quality trade-offs, along with the ability to render UTF8 and Unicode strings and glyphs. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.libsdl.org/projects/SDL_ttf/docs/SDL_ttf_42.html#SEC42">documentation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides a nice overview of the different rendering methods available, so it&#8217;s worth reading and knowing when you&#8217;d want to use which one depending on your speed/quality requirements. For this lesson we&#8217;ll be using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">TTF_RenderText_Blended</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>since we don&#8217;t really have any time constraints and would like our text to be stylin&#8217;. The various render text functions also take an RGB<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://wiki.libsdl.org/SDL_Color"><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(42,100,150); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_Color</CODE></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which we can use to pick the text color to draw.</P>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Unfortunately SDL_ttf can only render to a surface so we&#8217;ll have to run an additional step after rendering the text to create a texture from it that we can draw with our renderer. Of course we&#8217;ll also need to load a font to use, which is done with<A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.libsdl.org/projects/SDL_ttf/docs/SDL_ttf_14.html#SEC14"><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(42,100,150); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">TTF_OpenFont</CODE></A>, where we can also specify the font size that we want.</P>
<H2 id=writing-our-rendertext-function style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>Writing Our<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 27px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderText</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>Function</FONT></H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>To make this easy for ourselves we&#8217;ll create a function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderText</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>that will take a message, font file containing the TTF font we want to use, the color and size we want and the renderer to load the final texture into. The function will then open the font, render the text, convert it to a texture and return the texture. Since there could be some problems along the way we&#8217;ll also need to check each of our library calls for errors and handle them appropriately, i.e. clean up any resources, log the error and return<CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">nullptr</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>so we know something bad happened. SDL_ttf will report any of its errors through<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">SDL_GetError</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>so we can continue to use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">logSDLError</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for error logging.</FONT></P>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract>With those requirements in mind, let&#8217;s write our<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderText</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function:</FONT></P>
<DIV class=highlight style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(248,248,242); PADDING-BOTTOM: 8px; PADDING-TOP: 8px; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 0px 2px 2px 0px; BORDER-LEFT: 1px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px"><PRE style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE class=language-c-- style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" data-lang="c++"><FONT class=extract><SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">/**</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* Render the message we want to display to a texture for drawing</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* @param message The message we want to display</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* @param fontFile The font we want to use to render the text</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* @param color The color we want the text to be</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* @param fontSize The size we want the font to be</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* @param renderer The renderer to load the texture in</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">* @return An SDL_Texture containing the rendered message, or nullptr if something went wrong</SPAN>
<SPAN class=cm style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">*/</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Texture</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">*</SPAN> <SPAN class=nf style="BOX-SIZING: border-box; COLOR: rgb(166,226,46)">renderText</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">const</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">string</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">message</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">const</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">string</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">fontFile</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Color</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">color</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">int</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">fontSize</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Renderer</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">)</SPAN>
<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">{</SPAN>
	<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//Open the font</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_Font</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">font</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_OpenFont</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">fontFile</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">.</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">c_str</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(),</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">fontSize</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">if</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">font</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">==</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">nullptr</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">){</SPAN>
		<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">logSDLError</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">cout</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"TTF_OpenFont"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
		<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">return</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">nullptr</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
	<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">}</SPAN>	
	<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//We need to first render to a surface as that's what TTF_RenderText</SPAN>
	<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//returns, then load that surface into a texture</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Surface</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">surf</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_RenderText_Blended</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">font</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">message</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">.</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">c_str</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(),</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">color</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">if</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">surf</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">==</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">nullptr</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">){</SPAN>
		<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_CloseFont</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">font</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
		<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">logSDLError</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">cout</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"TTF_RenderText"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
		<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">return</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">nullptr</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
	<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">}</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Texture</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">texture</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_CreateTextureFromSurface</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">surf</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">if</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">texture</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">==</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">nullptr</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">){</SPAN>
		<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">logSDLError</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">cout</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"CreateTexture"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">}</SPAN>
	<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//Clean up the surface and font</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_FreeSurface</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">surf</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_CloseFont</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">font</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">return</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">texture</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">}</SPAN></FONT></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><BR style="BOX-SIZING: border-box"></FONT></P>
<H2 id=performance-warning style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Performance Warning</H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">An important thing to note here is that each time we want to render a message we re-open and close the font, which is ok for this case since we&#8217;re only rendering one message a single time, but if we wanted to render a lot of text and/or render text frequently it would be a much better idea to keep the font open for as long as we needed it. Our version of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderText</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for this more common use case would take a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">TTF_Font*</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instead of the font file name, and wouldn&#8217;t open or close the font, as the font&#8217;s lifetime would be managed separately.</P>
<H2 id=initializing-sdlttf style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Initializing SDL_ttf</H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">As with SDL we need to initialize the library before we can use it. This is done via<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.libsdl.org/projects/SDL_ttf/docs/SDL_ttf_8.html#SEC8"><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(42,100,150); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">TTF_Init</CODE></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which will return 0 on success. To initialize SDL_ttf we just call this function after initializing SDL and check the return value to make sure it went ok.</P>
<DIV class=highlight style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(248,248,242); PADDING-BOTTOM: 8px; PADDING-TOP: 8px; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 0px 2px 2px 0px; BORDER-LEFT: 1px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px"><PRE style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE class=language-c-- style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" data-lang="c++"><SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">if</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_Init</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">()</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">!=</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">0</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">){</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">logSDLError</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">cout</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"TTF_Init"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Quit</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">();</SPAN>
	<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">return</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">1</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">}</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 id=using-rendertext style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 27px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderText</CODE></H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">With our handy<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderText</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function we can render our message with a very simple call. For this lesson I&#8217;ve chosen to render &#8220;TTF fonts are cool!&#8221; in white at a font size of 64 using the terrible font I made earlier. We can then query the width and height the same as for any other texture and compute the x/y coordinates to draw the message centered in the window.</P>
<DIV class=highlight style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(248,248,242); PADDING-BOTTOM: 8px; PADDING-TOP: 8px; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 0px 2px 2px 0px; BORDER-LEFT: 1px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px"><PRE style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE class=language-c-- style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" data-lang="c++"><SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">const</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">std</SPAN><SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">::</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">string</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">resPath</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">getResourcePath</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"Lesson6"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//We'll render the string "TTF fonts are cool!" in white</SPAN>
<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//Color is in RGBA format</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Color</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">color</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">{</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">255</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">255</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">255</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">255</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">};</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Texture</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">*</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">image</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderText</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"TTF fonts are cool!"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">resPath</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">+</SPAN> <SPAN class=s style="BOX-SIZING: border-box; COLOR: rgb(230,219,116)">"sample.ttf"</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">color</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">64</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">if</SPAN> <SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">image</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">==</SPAN> <SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">nullptr</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">){</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">cleanup</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">window</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">TTF_Quit</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">();</SPAN>
	<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_Quit</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">();</SPAN>
	<SPAN class=k style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">return</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">1</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
<SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">}</SPAN>
<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//Get the texture w/h so we can center it in the screen</SPAN>
<SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">int</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">iW</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">iH</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_QueryTexture</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">image</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=nb style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">NULL</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=nb style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">NULL</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">iW</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">&amp;</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">iH</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
<SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">int</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">x</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SCREEN_WIDTH</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">/</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">2</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">-</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">iW</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">/</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">2</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN>
<SPAN class=kt style="BOX-SIZING: border-box; COLOR: rgb(102,217,239)">int</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">y</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">=</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SCREEN_HEIGHT</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">/</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">2</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">-</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">iH</SPAN> <SPAN class=o style="BOX-SIZING: border-box; COLOR: rgb(249,38,114)">/</SPAN> <SPAN class=mi style="BOX-SIZING: border-box; COLOR: rgb(174,129,255)">2</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">;</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<H2 id=drawing-the-text style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Drawing the Text</H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Finally we can draw the texture as we&#8217;ve done before with our<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BOX-SIZING: border-box; FONT-SIZE: 26px; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: nowrap; BORDER-BOTTOM: medium none; COLOR: rgb(51,51,51); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: medium none; PADDING-RIGHT: 0px; BACKGROUND-COLOR: transparent; border-top-left-radius: 4px; border-top-right-radius: 4px; border-bottom-right-radius: 4px; border-bottom-left-radius: 4px">renderTexture</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function.</P>
<DIV class=highlight style="BOX-SIZING: border-box; WORD-WRAP: break-word; BORDER-TOP: 1px solid; BORDER-RIGHT: 1px solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; BORDER-BOTTOM: 1px solid; TEXT-TRANSFORM: none; COLOR: rgb(248,248,242); PADDING-BOTTOM: 8px; PADDING-TOP: 8px; FONT: 24px/42px Monaco, 'Andale Mono', 'Courier New', monospace; PADDING-LEFT: 8px; MARGIN: 0px 2px 2px 0px; BORDER-LEFT: 1px solid; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 8px; BACKGROUND-COLOR: rgb(73,72,62); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px"><PRE style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px"><CODE class=language-c-- style="BOX-SIZING: border-box; WORD-WRAP: break-word; FONT-SIZE: 1em; BORDER-TOP: medium none; FONT-FAMILY: Menlo, Monaco, Consolas, 'Courier New', monospace; BORDER-RIGHT: medium none; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: medium none; WORD-BREAK: break-all; COLOR: white; PADDING-BOTTOM: 9px; PADDING-TOP: 9px; PADDING-LEFT: 9px; MARGIN: 0px; BORDER-LEFT: medium none; DISPLAY: block; LINE-HEIGHT: 1.4285; PADDING-RIGHT: 9px; BACKGROUND-COLOR: transparent; border-top-left-radius: 0px; border-top-right-radius: 0px; border-bottom-right-radius: 0px; border-bottom-left-radius: 0px" data-lang="c++"><SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//Note: This is within the program's main loop</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_RenderClear</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//We can draw our message as we do any other texture, since it's been</SPAN>
<SPAN class=c1 style="BOX-SIZING: border-box; COLOR: rgb(166,166,166)">//rendered to a texture</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderTexture</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">image</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">x</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">,</SPAN> <SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">y</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN>
<SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">SDL_RenderPresent</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">(</SPAN><SPAN class=n style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">renderer</SPAN><SPAN class=p style="BOX-SIZING: border-box; COLOR: rgb(248,248,242)">);</SPAN></CODE></PRE></DIV>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"></P>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">If everything goes well you should see something like this rendered to the screen:</P>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><BR style="BOX-SIZING: border-box"><IMG class=centered style="BOX-SIZING: border-box; BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: middle; BORDER-BOTTOM: 0px; MARGIN: 0px auto; BORDER-LEFT: 0px; DISPLAY: block" src="http://www.willusher.io/assets/img/lesson_6/ttf_fonts_example.png" width=600><BR style="BOX-SIZING: border-box"></P>
<H2 id=end-of-lesson-6 style="BOX-SIZING: border-box; MARGIN-BOTTOM: 10px; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 500 60px/1.1 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN-TOP: 20px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">End of Lesson 6</H2>
<P style="BOX-SIZING: border-box; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(51,51,51); FONT: 28px/40px 'Helvetica Neue', Helvetica, Arial, sans-serif; MARGIN: 0px 0px 10px; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">That&#8217;s it for our quick look at SDL_ttf! Don&#8217;t forget to check out the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(66,139,202)" href="http://www.libsdl.org/projects/SDL_ttf/docs/index.html">documentation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for the library to see what else it&#8217;s capable of. As always, if you run into any issues with the lesson feel free to post a comment below. I&#8217;ll see you again soon in Lesson 7: Taking Advantage of Classes.</P></SMALL></H1>