# filechk is used to check if the content of a generated file is updated.<BR># Sample usage:<BR># define filechk_sample<BR>#&nbsp;echo $KERNELRELEASE<BR># endef<BR># version.h : Makefile<BR>#&nbsp;$(call filechk,sample)<BR># The rule defined shall write to stdout the content of the new file.<BR># The existing file will be compared with the new one.<BR># - If no file exist it is created<BR># - If the content differ the new file is used<BR># - If they are equal no change, and no timestamp update<BR># - stdin is piped in from the first prerequisite ($&lt;) so one has<BR>#&nbsp;&nbsp; to specify a valid file as first prerequisite (often the kbuild file)<BR>define filechk<BR>&nbsp;$(Q)set -e;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;$(kecho) '&nbsp; CHK&nbsp;&nbsp;&nbsp;&nbsp; $@'; \<BR>&nbsp;mkdir -p $(dir $@);&nbsp;&nbsp;&nbsp;\<BR>&nbsp;$(filechk_$(1)) &lt; $&lt; &gt; $@.tmp;&nbsp;&nbsp;\<BR>&nbsp;if [ -r $@ ] &amp;&amp; cmp -s $@ $@.tmp; then \<BR>&nbsp;&nbsp;rm -f $@.tmp;&nbsp;&nbsp;\<BR>&nbsp;else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\<BR>&nbsp;&nbsp;$(kecho) '&nbsp; UPD&nbsp;&nbsp;&nbsp;&nbsp; $@';&nbsp;\<BR>&nbsp;&nbsp;mv -f $@.tmp $@;&nbsp;&nbsp;\<BR>&nbsp;fi<BR>endef