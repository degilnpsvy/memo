# Single targets<BR># ---------------------------------------------------------------------------<BR># Single targets are compatible with:<BR># - build with mixed source and output<BR># - build with separate output dir 'make O=...'<BR># - external modules<BR>#<BR>#&nbsp; target-dir =&gt; where to store outputfile<BR>#&nbsp; build-dir&nbsp; =&gt; directory in kernel source tree to use 
<P></P>
<P>ifeq ($(KBUILD_EXTMOD),)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; build-dir&nbsp; = $(patsubst %/,%,$(dir $@))<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; target-dir = $(dir $@)<BR>else<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; zap-slash=$(filter-out .,$(patsubst %/,%,$(dir $@)))<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; build-dir&nbsp; = $(KBUILD_EXTMOD)$(if $(zap-slash),/$(zap-slash))<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; target-dir = $(if $(KBUILD_EXTMOD),$(dir $&lt;),$(dir $@))<BR>endif</P>
<P>%.s: %.c prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)<BR>%.i: %.c prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)<BR>%.o: %.c prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)<BR>%.lst: %.c prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)<BR>%.s: %.S prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)<BR>%.o: %.S prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)<BR>%.symtypes: %.c prepare scripts FORCE<BR>&nbsp;$(Q)$(MAKE) $(build)=$(build-dir) $(target-dir)$(notdir $@)