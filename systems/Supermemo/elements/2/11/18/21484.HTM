help:<BR>&nbsp;@echo&nbsp; 'Cleaning targets:'<BR>&nbsp;@echo&nbsp; '&nbsp; clean&nbsp;&nbsp;&nbsp; - Remove most generated files but keep the config and'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; enough build support to build external modules'<BR>&nbsp;@echo&nbsp; '&nbsp; mrproper&nbsp;&nbsp; - Remove all generated files + config + various backup files'<BR>&nbsp;@echo&nbsp; '&nbsp; distclean&nbsp;&nbsp; - mrproper + remove editor backup and patch files'<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Configuration targets:'<BR>&nbsp;@$(MAKE) -f $(srctree)/scripts/kconfig/Makefile help<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Other generic targets:'<BR>&nbsp;@echo&nbsp; '&nbsp; all&nbsp;&nbsp;&nbsp; - Build all targets marked with [*]'<BR>&nbsp;@echo&nbsp; '* vmlinux&nbsp;&nbsp; - Build the bare kernel'<BR>&nbsp;@echo&nbsp; '* modules&nbsp;&nbsp; - Build all modules'<BR>&nbsp;@echo&nbsp; '&nbsp; modules_install - Install all modules to INSTALL_MOD_PATH (default: /)'<BR>&nbsp;@echo&nbsp; '&nbsp; firmware_install- Install all firmware to INSTALL_FW_PATH'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (default: $$(INSTALL_MOD_PATH)/lib/firmware)'<BR>&nbsp;@echo&nbsp; '&nbsp; dir/&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Build all files in dir and below'<BR>&nbsp;@echo&nbsp; '&nbsp; dir/file.[oisS] - Build specified target only'<BR>&nbsp;@echo&nbsp; '&nbsp; dir/file.lst&nbsp;&nbsp;&nbsp; - Build specified mixed source/assembly target only'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (requires a recent binutils and recent build (System.map))'<BR>&nbsp;@echo&nbsp; '&nbsp; dir/file.ko&nbsp;&nbsp;&nbsp;&nbsp; - Build module including final link'<BR>&nbsp;@echo&nbsp; '&nbsp; modules_prepare - Set up for building external modules'<BR>&nbsp;@echo&nbsp; '&nbsp; tags/TAGS&nbsp;&nbsp; - Generate tags file for editors'<BR>&nbsp;@echo&nbsp; '&nbsp; cscope&nbsp;&nbsp; - Generate cscope index'<BR>&nbsp;@echo&nbsp; '&nbsp; gtags&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Generate GNU GLOBAL index'<BR>&nbsp;@echo&nbsp; '&nbsp; kernelrelease&nbsp;&nbsp; - Output the release version string (use with make -s)'<BR>&nbsp;@echo&nbsp; '&nbsp; kernelversion&nbsp;&nbsp; - Output the version stored in Makefile (use with make -s)'<BR>&nbsp;@echo&nbsp; '&nbsp; image_name&nbsp;&nbsp; - Output the image name (use with make -s)'<BR>&nbsp;@echo&nbsp; '&nbsp; headers_install - Install sanitised kernel headers to INSTALL_HDR_PATH'; \<BR>&nbsp; echo&nbsp; '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (default: $(INSTALL_HDR_PATH))'; \<BR>&nbsp; echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Static analysers'<BR>&nbsp;@echo&nbsp; '&nbsp; checkstack&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Generate a list of stack hogs'<BR>&nbsp;@echo&nbsp; '&nbsp; namespacecheck&nbsp; - Name space analysis on compiled kernel'<BR>&nbsp;@echo&nbsp; '&nbsp; versioncheck&nbsp;&nbsp;&nbsp; - Sanity check on version.h usage'<BR>&nbsp;@echo&nbsp; '&nbsp; includecheck&nbsp;&nbsp;&nbsp; - Check for duplicate included header files'<BR>&nbsp;@echo&nbsp; '&nbsp; export_report&nbsp;&nbsp; - List the usages of all exported symbols'<BR>&nbsp;@echo&nbsp; '&nbsp; headers_check&nbsp;&nbsp; - Sanity check on exported headers'<BR>&nbsp;@echo&nbsp; '&nbsp; headerdep&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Detect inclusion cycles in headers'<BR>&nbsp;@$(MAKE) -f $(srctree)/scripts/Makefile.help checker-help<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Kernel selftest'<BR>&nbsp;@echo&nbsp; '&nbsp; kselftest&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - Build and run kernel selftest (run as root)'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Build, install, and boot kernel before'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; running kselftest on it'<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Kernel packaging:'<BR>&nbsp;@$(MAKE) $(build)=$(package-dir) help<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Documentation targets:'<BR>&nbsp;@$(MAKE) -f $(srctree)/Documentation/DocBook/Makefile dochelp<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Architecture specific targets ($(SRCARCH)):'<BR>&nbsp;@$(if $(archhelp),$(archhelp),\<BR>&nbsp;&nbsp;echo '&nbsp; No architecture specific help defined for $(SRCARCH)')<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@$(if $(boards), \<BR>&nbsp;&nbsp;$(foreach b, $(boards), \<BR>&nbsp;&nbsp;printf "&nbsp; %-24s - Build for %s\\n" $(b) $(subst _defconfig,,$(b));) \<BR>&nbsp;&nbsp;echo '')<BR>&nbsp;@$(if $(board-dirs), \<BR>&nbsp;&nbsp;$(foreach b, $(board-dirs), \<BR>&nbsp;&nbsp;printf "&nbsp; %-16s - Show %s-specific targets\\n" help-$(b) $(b);) \<BR>&nbsp;&nbsp;printf "&nbsp; %-16s - Show all of the above\\n" help-boards; \<BR>&nbsp;&nbsp;echo '') 
<P></P>
<P>&nbsp;@echo&nbsp; '&nbsp; make V=0|1 [targets] 0 =&gt; quiet build (default), 1 =&gt; verbose build'<BR>&nbsp;@echo&nbsp; '&nbsp; make V=2&nbsp;&nbsp; [targets] 2 =&gt; give reason for rebuild of target'<BR>&nbsp;@echo&nbsp; '&nbsp; make O=dir [targets] Locate all output files in "dir", including .config'<BR>&nbsp;@echo&nbsp; '&nbsp; make C=1&nbsp;&nbsp; [targets] Check all c source with $$CHECK (sparse by default)'<BR>&nbsp;@echo&nbsp; '&nbsp; make C=2&nbsp;&nbsp; [targets] Force check of all c source with $$CHECK'<BR>&nbsp;@echo&nbsp; '&nbsp; make RECORDMCOUNT_WARN=1 [targets] Warn about ignored mcount sections'<BR>&nbsp;@echo&nbsp; '&nbsp; make W=n&nbsp;&nbsp; [targets] Enable extra gcc checks, n=1,2,3 where'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;1: warnings which may be relevant and do not occur too often'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;2: warnings which occur quite often but may still be relevant'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;3: more obscure warnings, can most likely be ignored'<BR>&nbsp;@echo&nbsp; '&nbsp;&nbsp;Multiple levels can be combined with W=12 or W=123'<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; 'Execute "make" or "make all" to build all targets marked with [*] '<BR>&nbsp;@echo&nbsp; 'For further info see the ./README file'</P>
<P><BR>help-board-dirs := $(addprefix help-,$(board-dirs))</P>
<P>help-boards: $(help-board-dirs)</P>
<P>boards-per-dir = $(sort $(notdir $(wildcard $(srctree)/arch/$(SRCARCH)/configs/$*/*_defconfig)))</P>
<P>$(help-board-dirs): help-%:<BR>&nbsp;@echo&nbsp; 'Architecture specific targets ($(SRCARCH) $*):'<BR>&nbsp;@$(if $(boards-per-dir), \<BR>&nbsp;&nbsp;$(foreach b, $(boards-per-dir), \<BR>&nbsp;&nbsp;printf "&nbsp; %-24s - Build for %s\\n" $*/$(b) $(subst _defconfig,,$(b));) \<BR>&nbsp;&nbsp;echo '')