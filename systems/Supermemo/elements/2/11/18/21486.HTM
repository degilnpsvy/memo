###<BR># External module support.<BR># When building external modules the kernel used as basis is considered<BR># read-only, and no consistency checks are made and the make<BR># system is not used on the basis kernel. If updates are required<BR># in the basis kernel ordinary make commands (without M=...) must<BR># be used.<BR>#<BR># The following are the only valid targets when building external<BR># modules.<BR># make M=dir clean&nbsp;&nbsp;&nbsp;&nbsp; Delete all automatically generated files<BR># make M=dir modules&nbsp;&nbsp; Make all modules in specified dir<BR># make M=dir&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Same as 'make M=dir modules'<BR># make M=dir modules_install<BR>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Install the modules built in the module directory<BR>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Assumes install directory is already created
<P></P>
<P># We are always building modules<BR>KBUILD_MODULES := 1<BR>PHONY += crmodverdir<BR>crmodverdir:<BR>&nbsp;$(cmd_crmodverdir)</P>
<P>PHONY += $(objtree)/Module.symvers<BR>$(objtree)/Module.symvers:<BR>&nbsp;@test -e $(objtree)/Module.symvers || ( \<BR>&nbsp;echo; \<BR>&nbsp;echo "&nbsp; WARNING: Symbol version dump $(objtree)/Module.symvers"; \<BR>&nbsp;echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is missing; modules will have no dependencies and modversions."; \<BR>&nbsp;echo )</P>
<P>module-dirs := $(addprefix _module_,$(KBUILD_EXTMOD))<BR>PHONY += $(module-dirs) modules<BR>$(module-dirs): crmodverdir $(objtree)/Module.symvers<BR>&nbsp;$(Q)$(MAKE) $(build)=$(patsubst _module_%,%,$@)</P>
<P>modules: $(module-dirs)<BR>&nbsp;@$(kecho) '&nbsp; Building modules, stage 2.';<BR>&nbsp;$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modpost</P>
<P>PHONY += modules_install<BR>modules_install: _emodinst_ _emodinst_post</P>
<P>install-dir := $(if $(INSTALL_MOD_DIR),$(INSTALL_MOD_DIR),extra)<BR>PHONY += _emodinst_<BR>_emodinst_:<BR>&nbsp;$(Q)mkdir -p $(MODLIB)/$(install-dir)<BR>&nbsp;$(Q)$(MAKE) -f $(srctree)/scripts/Makefile.modinst</P>
<P>PHONY += _emodinst_post<BR>_emodinst_post: _emodinst_<BR>&nbsp;$(call cmd,depmod)</P>
<P>clean-dirs := $(addprefix _clean_,$(KBUILD_EXTMOD))</P>
<P>PHONY += $(clean-dirs) clean<BR>$(clean-dirs):<BR>&nbsp;$(Q)$(MAKE) $(clean)=$(patsubst _clean_%,%,$@)</P>
<P>clean:&nbsp;rm-dirs := $(MODVERDIR)<BR>clean: rm-files := $(KBUILD_EXTMOD)/Module.symvers</P>
<P>help:<BR>&nbsp;@echo&nbsp; '&nbsp; Building external modules.'<BR>&nbsp;@echo&nbsp; '&nbsp; Syntax: make -C path/to/kernel/src M=$$PWD target'<BR>&nbsp;@echo&nbsp; ''<BR>&nbsp;@echo&nbsp; '&nbsp; modules&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - default target, build the module(s)'<BR>&nbsp;@echo&nbsp; '&nbsp; modules_install - install the module'<BR>&nbsp;@echo&nbsp; '&nbsp; clean&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; - remove generated files in module directory only'<BR>&nbsp;@echo&nbsp; ''</P>
<P># Dummies...<BR>PHONY += prepare scripts<BR>prepare: ;<BR>scripts: ;