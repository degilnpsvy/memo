# Scripts to check various things for consistency<BR># ---------------------------------------------------------------------------
<P></P>
<P>PHONY += includecheck versioncheck coccicheck namespacecheck export_report</P>
<P>includecheck:<BR>&nbsp;find $(srctree)/* $(RCS_FIND_IGNORE) \<BR>&nbsp;&nbsp;-name '*.[hcS]' -type f -print | sort \<BR>&nbsp;&nbsp;| xargs $(PERL) -w $(srctree)/scripts/checkincludes.pl</P>
<P>versioncheck:<BR>&nbsp;find $(srctree)/* $(RCS_FIND_IGNORE) \<BR>&nbsp;&nbsp;-name '*.[hcS]' -type f -print | sort \<BR>&nbsp;&nbsp;| xargs $(PERL) -w $(srctree)/scripts/checkversion.pl</P>
<P>coccicheck:<BR>&nbsp;$(Q)$(CONFIG_SHELL) $(srctree)/scripts/$@</P>
<P>namespacecheck:<BR>&nbsp;$(PERL) $(srctree)/scripts/namespace.pl</P>
<P>export_report:<BR>&nbsp;$(PERL) $(srctree)/scripts/export_report.pl</P>
<P>endif #ifeq ($(config-targets),1)<BR>endif #ifeq ($(mixed-targets),1)</P>
<P>PHONY += checkstack kernelrelease kernelversion image_name</P>
<P># UML needs a little special treatment here.&nbsp; It wants to use the host<BR># toolchain, so needs $(SUBARCH) passed to checkstack.pl.&nbsp; Everyone<BR># else wants $(ARCH), including people doing cross-builds, which means<BR># that $(SUBARCH) doesn't work here.<BR>ifeq ($(ARCH), um)<BR>CHECKSTACK_ARCH := $(SUBARCH)<BR>else<BR>CHECKSTACK_ARCH := $(ARCH)<BR>endif<BR>checkstack:<BR>&nbsp;$(OBJDUMP) -d vmlinux $$(find . -name '*.ko') | \<BR>&nbsp;$(PERL) $(src)/scripts/checkstack.pl $(CHECKSTACK_ARCH)