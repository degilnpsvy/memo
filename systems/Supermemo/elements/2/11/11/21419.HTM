# Beautify output<BR># ---------------------------------------------------------------------------<BR>#<BR># Normally, we echo the whole command before executing it. By making<BR># that echo $($(quiet)$(cmd)), we now have the possibility to set<BR># $(quiet) to choose other forms of output instead, e.g.<BR>#<BR>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; quiet_cmd_cc_o_c = Compiling $(RELDIR)/$@<BR>#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cmd_cc_o_c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = $(CC) $(c_flags) -c -o $@ $&lt;<BR>#<BR># If $(quiet) is empty, the whole command will be printed.<BR># If it is set to "quiet_", only the short version will be printed.<BR># If it is set to "silent_", nothing will be printed at all, since<BR># the variable $(silent_cmd_cc_o_c) doesn't exist.<BR>#<BR># A simple variant is to prefix commands with $(Q) - that's useful<BR># for commands that shall be hidden in non-verbose mode.<BR>#<BR>#&nbsp;$(Q)ln $@ :&lt;<BR>#<BR># If KBUILD_VERBOSE equals 0 then the above command will be hidden.<BR># If KBUILD_VERBOSE equals 1 then the above command is displayed.<BR>#<BR># To put more focus on warnings, be less verbose as default<BR># Use 'make V=1' to see the full commands
<P></P>
<P>ifeq ("$(origin V)", "command line")<BR>&nbsp; KBUILD_VERBOSE = $(V)<BR>endif<BR>ifndef KBUILD_VERBOSE<BR>&nbsp; KBUILD_VERBOSE = 0<BR>endif</P>
<P>ifeq ($(KBUILD_VERBOSE),1)<BR>&nbsp; quiet =<BR>&nbsp; Q =<BR>else<BR>&nbsp; quiet=quiet_<BR>&nbsp; Q = @<BR>endif</P>
<P># If the user is running make -s (silent mode), suppress echoing of<BR># commands</P>
<P>ifneq ($(filter 4.%,$(MAKE_VERSION)),)&nbsp;# make-4<BR>ifneq ($(filter %s ,$(firstword x$(MAKEFLAGS))),)<BR>&nbsp; quiet=silent_<BR>endif<BR>else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;# make-3.8x<BR>ifneq ($(filter s% -s%,$(MAKEFLAGS)),)<BR>&nbsp; quiet=silent_<BR>endif<BR>endif</P>
<P>export quiet Q KBUILD_VERBOSE