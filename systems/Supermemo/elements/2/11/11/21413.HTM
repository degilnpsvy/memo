COMPILING the kernel: 
<P></P>
<P>&nbsp;- Make sure you have at least gcc 3.2 available.<BR>&nbsp;&nbsp; For more information, refer to Documentation/Changes.</P>
<P>&nbsp;&nbsp; Please note that you can still run a.out user programs with this kernel.</P>
<P>&nbsp;- Do a "make" to create a compressed kernel image. It is also<BR>&nbsp;&nbsp; possible to do "make install" if you have lilo installed to suit the<BR>&nbsp;&nbsp; kernel makefiles, but you may want to check your particular lilo setup first.</P>
<P>&nbsp;&nbsp; To do the actual install, you have to be root, but none of the normal<BR>&nbsp;&nbsp; build should require that. Don't take the name of root in vain.</P>
<P>&nbsp;- If you configured any of the parts of the kernel as `modules', you<BR>&nbsp;&nbsp; will also have to do "make modules_install".</P>
<P><FONT class=extract>&nbsp;- Verbose kernel compile/build output:</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; Normally, the kernel build system runs in a fairly quiet mode (but not<BR>&nbsp;&nbsp; totally silent).&nbsp; However, sometimes you or other kernel developers need<BR>&nbsp;&nbsp; to see compile, link, or other commands exactly as they are executed.<BR>&nbsp;&nbsp; For this, use "verbose" build mode.&nbsp; This is done by inserting<BR>&nbsp;&nbsp; "V=1" in the "make" command.&nbsp; E.g.:</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp;&nbsp; make V=1 all</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; To have the build system also tell the reason for the rebuild of each<BR>&nbsp;&nbsp; target, use "V=2".&nbsp; The default is "V=0".</FONT></P>
<P><FONT class=extract>&nbsp;- Keep a backup kernel handy in case something goes wrong.&nbsp; This is <BR>&nbsp;&nbsp; especially true for the development releases, since each new release<BR>&nbsp;&nbsp; contains new code which has not been debugged.&nbsp; Make sure you keep a<BR>&nbsp;&nbsp; backup of the modules corresponding to that kernel, as well.&nbsp; If you<BR>&nbsp;&nbsp; are installing a new kernel with the same version number as your<BR>&nbsp;&nbsp; working kernel, make a backup of your modules directory before you<BR>&nbsp;&nbsp; do a "make modules_install".</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; Alternatively, before compiling, use the kernel config option<BR>&nbsp;&nbsp; "LOCALVERSION" to append a unique suffix to the regular kernel version.<BR>&nbsp;&nbsp; LOCALVERSION can be set in the "General Setup" menu.</FONT></P>
<P>&nbsp;- In order to boot your new kernel, you'll need to copy the kernel<BR>&nbsp;&nbsp; image (e.g. .../linux/arch/i386/boot/bzImage after compilation)<BR>&nbsp;&nbsp; to the place where your regular bootable kernel is found. </P>
<P><FONT class=extract>&nbsp;- Booting a kernel directly from a floppy without the assistance of a<BR>&nbsp;&nbsp; bootloader such as LILO, is no longer supported.</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; If you boot Linux from the hard drive, chances are you use LILO, which<BR>&nbsp;&nbsp; uses the kernel image as specified in the file /etc/lilo.conf.&nbsp; The<BR>&nbsp;&nbsp; kernel image file is usually /vmlinuz, /boot/vmlinuz, /bzImage or<BR>&nbsp;&nbsp; /boot/bzImage.&nbsp; To use the new kernel, save a copy of the old image<BR>&nbsp;&nbsp; and copy the new image over the old one.&nbsp; Then, you MUST RERUN LILO<BR>&nbsp;&nbsp; to update the loading map!! If you don't, you won't be able to boot<BR>&nbsp;&nbsp; the new kernel image.</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; Reinstalling LILO is usually a matter of running /sbin/lilo. <BR>&nbsp;&nbsp; You may wish to edit /etc/lilo.conf to specify an entry for your<BR>&nbsp;&nbsp; old kernel image (say, /vmlinux.old) in case the new one does not<BR>&nbsp;&nbsp; work.&nbsp; See the LILO docs for more information. </FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; After reinstalling LILO, you should be all set.&nbsp; Shutdown the system,<BR>&nbsp;&nbsp; reboot, and enjoy!</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp; If you ever need to change the default root device, video mode,<BR>&nbsp;&nbsp; ramdisk size, etc.&nbsp; in the kernel image, use the 'rdev' program (or<BR>&nbsp;&nbsp; alternatively the LILO boot options when appropriate).&nbsp; No need to<BR>&nbsp;&nbsp; recompile the kernel to change these parameters. </FONT></P>
<P>&nbsp;- Reboot with the new kernel and enjoy.