# kbuild supports saving output files in a separate directory.<BR><FONT class=extract># To locate output files in a separate directory two syntaxes are supported.<BR># In both cases the working directory must be the root of the kernel src.<BR># 1) O=<BR># Use "make O=dir/to/store/output/files/"<BR>#<BR># 2) Set KBUILD_OUTPUT<BR># Set the environment variable KBUILD_OUTPUT to point to the directory<BR># where the output files shall be placed.<BR># export KBUILD_OUTPUT=dir/to/store/output/files/<BR># make<BR>#<BR># The O= assignment takes precedence over the KBUILD_OUTPUT environment<BR># variable.</FONT> 
<P></P>
<P># KBUILD_SRC is set on invocation of make in OBJ directory<BR># KBUILD_SRC is not intended to be used by the regular user (for now)<BR>ifeq ($(KBUILD_SRC),)</P>
<P># OK, Make called in directory where kernel src resides<BR># Do we want to locate output files in a separate directory?<BR>ifeq ("$(origin O)", "command line")<BR>&nbsp; KBUILD_OUTPUT := $(O)<BR>endif</P>
<P><FONT class=extract># That's our default target when none is given on the command line<BR>PHONY := _all<BR>_all:</FONT></P>
<P><FONT class=extract># Cancel implicit rules on top Makefile<BR>$(CURDIR)/Makefile Makefile: ;</FONT></P>
<P><FONT class=extract>ifneq ($(KBUILD_OUTPUT),)<BR># Invoke a second make in the output directory, passing relevant variables<BR># check that the output directory actually exists<BR>saved-output := $(KBUILD_OUTPUT)<BR>KBUILD_OUTPUT := $(shell mkdir -p $(KBUILD_OUTPUT) &amp;&amp; cd $(KBUILD_OUTPUT) \<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp; /bin/pwd)<BR>$(if $(KBUILD_OUTPUT),, \<BR>&nbsp;&nbsp;&nbsp;&nbsp; $(error failed to create output directory "$(saved-output)"))</FONT></P>
<P><FONT class=extract>PHONY += $(MAKECMDGOALS) sub-make</FONT></P>
<P><FONT class=extract>$(filter-out _all sub-make $(CURDIR)/Makefile, $(MAKECMDGOALS)) _all: sub-make<BR>&nbsp;@:</FONT></P>
<P><FONT class=extract>sub-make: FORCE<BR>&nbsp;$(Q)$(MAKE) -C $(KBUILD_OUTPUT) KBUILD_SRC=$(CURDIR) \<BR>&nbsp;-f $(CURDIR)/Makefile $(filter-out _all sub-make,$(MAKECMDGOALS))</FONT></P>
<P><FONT class=extract># Leave processing to above invocation of make<BR>skip-makefile := 1<BR>endif # ifneq ($(KBUILD_OUTPUT),)<BR></FONT>endif # ifeq ($(KBUILD_SRC),)