Device Enumeration<BR>~~~~~~~~~~~~~~~~~~<BR><FONT class=extract>As a rule, platform specific (and often board-specific) setup code will<BR>register platform devices: </FONT>
<P></P>
<P><FONT class=extract>&nbsp;int platform_device_register(struct platform_device *pdev);</FONT></P>
<P><FONT class=extract>&nbsp;int platform_add_devices(struct platform_device **pdevs, int ndev);</FONT></P>
<P>The general rule is to register only those devices that actually exist,<BR>but in some cases extra devices might be registered.&nbsp; For example, a kernel<BR>might be configured to work with an external network adapter that might not<BR>be populated on all boards, or likewise to work with an integrated controller<BR>that some boards might not hook up to any peripherals.</P>
<P>In some cases, boot firmware will export tables describing the devices<BR>that are populated on a given board.&nbsp;&nbsp; Without such tables, often the<BR>only way for system setup code to set up the correct devices is to build<BR>a kernel for a specific target board.&nbsp; Such board-specific kernels are<BR>common with embedded and custom systems development.</P>
<P><FONT class=extract>In many cases, the memory and IRQ resources associated with the platform<BR>device are not enough to let the device's driver work.&nbsp; Board setup code<BR>will often provide additional information using the device's platform_data<BR>field to hold additional information.</FONT></P>
<P><FONT class=extract>Embedded systems frequently need one or more clocks for platform devices,<BR>which are normally kept off until they're actively needed (to save power).<BR>System setup also associates those clocks with the device, so that that<BR>calls to clk_get(&amp;pdev-&gt;dev, clock_name) return them as needed.</FONT>