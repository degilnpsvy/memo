<B><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "Futura-CondensedBold","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Futura-CondensedBold; mso-font-kerning: 0pt'>Example program</SPAN></B> 
<P></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Listing 49-2 provides a simple example of the use of </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>mmap() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>to create a shared file mapping. This program begins by mapping the file named in its first command-line argument. It then prints the value of the string lying at the start of the mapped region. Finally, if a second command-line argument is supplied, that string is copied into the shared memory region.</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>The following shell session log demonstrates the use of this program. We begin by creating a 1024-byte file that is populated with zeros:</SPAN></P>
<P><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">$ </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">dd if=/dev/zero of=s.txt bs=1 count=1024</SPAN></B></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>1024+0 records in</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>1024+0 records out</FONT></SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>We then use our program to map the file and copy a string into the mapped region:</SPAN></P>
<P><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">$ </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">./t_mmap s.txt hello</SPAN></B></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>Current string=</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>Copied "hello" to shared memory</FONT></SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>The program displayed nothing for the current string because the initial value of the mapped files began with a null byte (i.e., zero-length string).</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Next, we use our program to again map the file and copy a new string into the mapped region:</SPAN></P>
<P><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">$ </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">./t_mmap s.txt goodbye</SPAN></B></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>Current string=hello</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>Copied "goodbye" to shared memory</FONT></SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Finally, <FONT class=extract>we dump the contents of the file, 8 characters per line, to verify its contents:</FONT></SPAN></P>
<P><FONT face=Calibri><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">$ </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman">od -c -w8 s.txt</SPAN></B></FONT></FONT></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT class=extract face=Calibri>0000000 g o o d b y e nul</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT class=extract face=Calibri>0000010 nul nul nul nul nul nul nul nul</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT class=extract face=Calibri>*</FONT></SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Plain; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT class=extract face=Calibri>0002000</FONT></SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Our trivial program doesn&#8217;t use any mechanism to synchronize access by multiple processes to the mapped file. However, real-world applications typically need to synchronize access to shared mappings. This can be done using a variety of techniques, including semaphores (Chapters 47 and 53) and file locking (Chapter 55).</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>We explain the </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>msync() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>system call used in Listing 49-2 in Section 49.5.</SPAN></P>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "Futura-Heavy","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Futura-Heavy; mso-font-kerning: 0pt'>Listing 49-2: </SPAN></B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "Futura-Book","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Futura-Book; mso-font-kerning: 0pt'>Using </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>mmap() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "Futura-Book","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Futura-Book; mso-font-kerning: 0pt'>to create a shared file mapping</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt'>&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211; </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-font-kerning: 0pt; mso-hansi-font-family: NewBaskervilleEF-Roman"><FONT face=Calibri>mmap/t_mmap.c</FONT></SPAN></B></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>#include &lt;sys/mman.h&gt;</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>#include &lt;fcntl.h&gt;</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>#include "tlpi_hdr.h"</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>#define MEM_SIZE 10</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>int</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>main(int argc, char *argv[])</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>{</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>char *addr;</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int fd;</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if (argc &lt; 2 || strcmp(argv[1], "--help") == 0)</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>usageErr("%s file [new-value]\n", argv[0]);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>fd = open(argv[1], O_RDWR);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if (fd == -1)</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>errExit("open");</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>addr = mmap(NULL, MEM_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if (addr == MAP_FAILED)</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>errExit("mmap");</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if (close(fd) == -1) /* No longer need 'fd' */</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>errExit("close");</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>printf("Current string=%.*s\n", MEM_SIZE, addr);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>/* Secure practice: output at most MEM_SIZE bytes */</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if (argc &gt; 2) { /* Update contents of region */</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if (strlen(argv[2]) &gt;= MEM_SIZE)</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cmdLineErr("'new-value' too large\n");</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>memset(addr, 0, MEM_SIZE); /* Zero out region */</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>strncpy(addr, argv[2], MEM_SIZE - 1);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if (msync(addr, MEM_SIZE, MS_SYNC) == -1)</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>errExit("msync");</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>printf("Copied \"%s\" to shared memory\n", argv[2]);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>}</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>exit(EXIT_SUCCESS);</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>}</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskerville-Roman","serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskerville-Roman; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-Plain'>&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211;&#8211; </SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold; mso-bidi-font-size: 8.5pt; mso-bidi-font-family: TheSansMonoCondensed-Bold; mso-font-kerning: 0pt"><FONT face=Calibri>mmap/t_mmap.c</FONT></SPAN></B>