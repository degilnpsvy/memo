# Documentation/cpuidle/governor.txt&nbsp; 
<P></P>
<P><BR>&nbsp;&nbsp;Supporting multiple CPU idle levels in kernel</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;cpuidle governors</P>
<P>&nbsp;</P>
<P><BR>cpuidle governor is policy routine that decides what idle state to enter at<BR>any given time. cpuidle core uses different callbacks to the governor.</P>
<P>* enable() to enable governor for a particular device<BR>* disable() to disable governor for a particular device<BR>* select() to select an idle state to enter<BR>* reflect() called after returning from the idle state, which can be used<BR>&nbsp; by the governor for some record keeping.</P>
<P>More than one governor can be registered at the same time and<BR>users can switch between drivers using /sysfs interface (when enabled).<BR>More than one governor part is supported for developers to easily experiment<BR>with different governors. By default, most optimal governor based on your<BR>kernel configuration and platform will be selected by cpuidle.</P>
<P>Interfaces:<BR>extern int cpuidle_register_governor(struct cpuidle_governor *gov);<BR>extern void cpuidle_unregister_governor(struct cpuidle_governor *gov);<BR>struct cpuidle_governor