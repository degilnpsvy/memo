# Documentation/ioctl/ioctl-decoding.txt
<P></P>
<P>To decode a hex IOCTL code:</P>
<P></P>
<P>Most architectures use this generic format, but check<BR>include/ARCH/ioctl.h for specifics, e.g. powerpc<BR>uses 3 bits to encode read/write and 13 bits for size.</P>
<P>&nbsp;bits&nbsp;&nbsp;&nbsp; meaning<BR>&nbsp;31-30&nbsp;00 - no parameters: uses _IO macro<BR>&nbsp;10 - read: _IOR<BR>&nbsp;01 - write: _IOW<BR>&nbsp;11 - read/write: _IOWR</P>
<P>&nbsp;29-16&nbsp;size of arguments</P>
<P>&nbsp;15-8&nbsp;ascii character supposedly<BR>&nbsp;unique to each driver</P>
<P>&nbsp;7-0&nbsp;function #</P>
<P><BR>So for example 0x82187201 is a read with arg length of 0x218,<BR>character 'r' function 1. Grepping the source reveals this is:</P>
<P>#define VFAT_IOCTL_READDIR_BOTH&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _IOR('r', 1, struct dirent [2])