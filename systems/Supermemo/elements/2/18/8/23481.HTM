<SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: Futura-Bold, sans-serif"><STRONG>49.5 Synchronizing a Mapped Region:<SPAN class=Apple-converted-space>&nbsp;</SPAN></STRONG></SPAN><B style="FONT-SIZE: medium; FONT-FAMILY: Simsun; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: NewBaskervilleEF-BoldIta, sans-serif">msync()</SPAN></B><SPAN style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: medium Simsun; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></SPAN> 
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">The kernel automatically carries modifications of the contents of a<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>MAP_SHARED<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">mapping through to the underlying file, but, by default, provides no guarantees about when such synchronization will occur. (SUSv3 doesn&#8217;t require an implementation to provide such guarantees.)</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">The<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">system call gives an application explicit control over when a shared mapping is synchronized with the mapped file. Synchronizing a mapping with the underlying file is useful in various scenarios. For example, to ensure data integrity, a database application may call<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">to force data to be written to the disk. Calling<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">also allows an application to ensure that updates to a writable mapping are visible to some other process that performs a<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">read()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">on the file.</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT class=extract face=Calibri>#include &lt;sys/mman.h&gt;</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain">int<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Bold">msync</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain">(void *</SPAN></FONT><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">addr</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>, size_t<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">length</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>, int<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">flags</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>);</FONT></SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif"><FONT class=extract>Returns 0 on success, or &#8211;1 on error</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">The<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">addr<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">and<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">length<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">arguments to<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">specify the starting address and size of the memory region to be synchronized. The address specified in<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">addr<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">must be pagealigned, and<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">len<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">is rounded up to the next multiple of the system page size. (SUSv3 specified that<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">addr must<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">be page-aligned. SUSv4 says that an implementation<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">may</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">require this argument to be page-aligned.)</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">Possible values for the<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">flags<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">argument include one of the following:</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT class=extract face=Calibri>MS_SYNC</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif"><FONT class=extract>Perform a synchronous file write. The call blocks until all modified pages of the memory region have been written to the disk.</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT class=extract face=Calibri>MS_ASYNC</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">Perform an asynchronous file write. The modified pages of the memory region are written to the disk at some later point and are immediately made visible to other processes performing a<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">read()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">on the corresponding file region.</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">Another way of distinguishing these two values is to say that after an<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>MS_SYNC<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">operation, the memory region is synchronized with the disk, while after an<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>MS_ASYNC<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">operation, the memory region is merely synchronized with the kernel buffer cache.</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">If we take no further action after an<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>MS_ASYNC<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">operation, then the modified pages in the memory region will eventually be flushed as part of the automatic buffer flushing performed by the<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">pdflush<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">kernel thread (</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">kupdated<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">in Linux 2.4 and earlier). On Linux, there are two (nonstandard) methods of initiating the output sooner. We can follow the call to<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">with a call to<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">fsync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">(or<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">fdatasync()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">) on the file descriptor corresponding to the mapping. This call will block until the buffer cache is synchronized with the disk. Alternatively, we can initiate asynchronous write out of the pages using the<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">posix_fadvise()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>POSIX_FADV_DONTNEED<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">operation. (The Linux-specific details in these two cases are not specified by SUSv3.)</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">One other value can additionally be specified for<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">flags</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">:</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT class=extract face=Calibri>MS_INVALIDATE</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif"><FONT class=extract>Invalidate cached copies of mapped data. After any modified pages in the memory region have been synchronized with the file, all pages of the memory region that are inconsistent with the underlying file data are marked as invalid. When next referenced, the contents of the pages will be copied from the corresponding locations in the file. As a consequence, any updates that have been made to the file by another process are made visible in the memory region.</FONT></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">Like many other modern UNIX implementations, Linux provides a so-called<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">unified virtual memory<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">system. This means that, where possible, memory mappings and blocks of the buffer cache share the same pages of physical memory. Thus, the views of a file obtained via a mapping and via I/O system calls (</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">read()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">,<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">write()</SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">, and so on) are always consistent, and the only use of<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">is to force the contents of a mapped region to be flushed to disk.</SPAN></FONT></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium Simsun; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">However, a unified virtual memory system is not required by SUSv3 and is not employed on all UNIX implementations. On such systems, a call to<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">is required to make changes to the contents of a mapping visible to other processes that<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">read()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">the file, and the<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-Plain"><FONT face=Calibri>MS_INVALIDATE<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">flag is required to perform the converse action of making writes to the file by another process visible in the mapped region. Multiprocess applications that employ both<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">mmap()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">and I/O system calls to operate on the same file should be designed to make appropriate use of<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-RomanIta, sans-serif">msync()<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: NewBaskervilleEF-Roman, sans-serif">if they are to be portable to systems that don&#8217;t have a unified virtual memory system.</SPAN></FONT>