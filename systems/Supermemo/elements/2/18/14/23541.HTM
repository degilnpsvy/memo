<SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>The two mapping attributes described above (file versus anonymous and private versus shared) can be combined in four different ways, as summarized in Table 49-1.</SPAN></P>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "Futura-Heavy","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Futura-Heavy; mso-font-kerning: 0pt'>Table 49-1: </SPAN></B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "Futura-Book","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Futura-Book; mso-font-kerning: 0pt'>Purposes of various types of memory mappings</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'></SPAN></P>
<DIV align=center>
<TABLE class=MsoNormalTable style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; mso-border-alt: solid windowtext .5pt; mso-yfti-tbllook: 1184; mso-padding-alt: 0cm 5.4pt 0cm 5.4pt; mso-border-insideh: .5pt solid windowtext; mso-border-insidev: .5pt solid windowtext" cellSpacing=0 cellPadding=0 border=1>
<TBODY>
<TR style="mso-yfti-irow: 0; mso-yfti-firstrow: yes">
<TD style="BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt" vAlign=top rowSpan=2>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Bold","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Bold; mso-font-kerning: 0pt'>Visibility of modifications</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD>
<TD style="BORDER-TOP: windowtext 1pt solid; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt" vAlign=top colSpan=2>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Bold","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Bold; mso-font-kerning: 0pt'>Mapping type</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 1">
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Bold","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Bold; mso-font-kerning: 0pt'>File</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Bold","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Bold; mso-font-kerning: 0pt'>Anonymous</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 2">
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Bold","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Bold; mso-font-kerning: 0pt'>Private</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Initializing memory from contents of file</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Memory allocation</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD></TR>
<TR style="mso-yfti-irow: 3; mso-yfti-lastrow: yes">
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: windowtext 1pt solid; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><B><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Bold","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Bold; mso-font-kerning: 0pt'>Shared</SPAN></B><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Memory-mapped I/O; sharing memory between processes (IPC)</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD>
<TD style="BORDER-TOP: #f0f0f0; BORDER-RIGHT: windowtext 1pt solid; BORDER-BOTTOM: windowtext 1pt solid; PADDING-BOTTOM: 0cm; PADDING-TOP: 0cm; PADDING-LEFT: 5.4pt; BORDER-LEFT: #f0f0f0; PADDING-RIGHT: 5.4pt; BACKGROUND-COLOR: transparent; mso-border-alt: solid windowtext .5pt; mso-border-left-alt: solid windowtext .5pt; mso-border-top-alt: solid windowtext .5pt" vAlign=top>
<P><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>Sharing memory between</SPAN></P>
<P><SPAN lang=EN-US style='FONT-SIZE: 16pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>processes (IPC)</SPAN><SPAN lang=EN-US style="FONT-SIZE: 16.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P></TD></TR></TBODY></TABLE></DIV>
<P><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>The four different types of memory mappings are created and used as follows:</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 6.0pt; mso-bidi-font-family: Wingdings; mso-font-kerning: 0pt">&#56256;&#56442; </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>Private file mapping</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>: The contents of the mapping are initialized from a file region. Multiple processes mapping the same file initially share the same physical pages of memory, but the copy-on-write technique is employed, so that changes to the mapping by one process are invisible to other processes. The main use of this type of mapping is to initialize a region of memory from the contents of a file. Some common examples are initializing a process&#8217;s text and initialized data segments from the corresponding parts of a binary executable file or a shared library file.</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 6.0pt; mso-bidi-font-family: Wingdings; mso-font-kerning: 0pt">&#56256;&#56442; </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>Private anonymous mapping</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>: Each call to </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>mmap() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>to create a private anonymous mapping yields a new mapping that is distinct from (i.e., does not share physical pages with) other anonymous mappings created by the same (or a different) process. Although a child process inherits its parent&#8217;s mappings, copy-on-write semantics ensure that, after the </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>fork()</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>, the parent and child don&#8217;t see changes made to the mapping by the other process. The primary purpose of private anonymous mappings is to allocate new (zero-filled) memory for a process (e.g., </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>malloc() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>employs </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>mmap() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>for this purpose when allocating large blocks of memory).</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 6.0pt; mso-bidi-font-family: Wingdings; mso-font-kerning: 0pt">&#56256;&#56442; </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>Shared file mapping</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>: All processes mapping the same region of a file share the same physical pages of memory, which are initialized from a file region. Modifications to the contents of the mapping are carried through to the file. This type of mapping serves two purposes. First, it permits </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>memory-mapped I/O</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>. By this, we mean that a file is loaded into a region of the process&#8217;s virtual memory, and modifications to that memory are automatically written to the file. Thus, memory-mapped I/O provides an alternative to using </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>read() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>and </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>write() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>for performing file I/O. A second purpose of this type of mapping is to allow unrelated processes to share a region of memory in order to perform (fast) IPC in a manner similar to System V shared memory segments (Chapter 48).</SPAN></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: Wingdings; mso-bidi-font-size: 6.0pt; mso-bidi-font-family: Wingdings; mso-font-kerning: 0pt">&#56256;&#56442; </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>Shared anonymous mapping</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>: As with a private anonymous mapping, each call to </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>mmap() </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>to create a shared anonymous mapping creates a new, distinct mapping that doesn&#8217;t share pages with any other mapping. The difference is that the pages of the mapping are not copied-on-write. This means that when a child inherits the mapping after a </SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-RomanIta","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-RomanIta; mso-font-kerning: 0pt'>fork()</SPAN><SPAN lang=EN-US style='FONT-SIZE: 18pt; FONT-FAMILY: "NewBaskervilleEF-Roman","sans-serif"; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: NewBaskervilleEF-Roman; mso-font-kerning: 0pt'>, the parent and child share the same pages of RAM, and changes made to the contents of the mapping by one process are visible to the other process. Shared anonymous mappings allow IPC in a manner similar to System V shared memory segments, but only between related processes.</SPAN>