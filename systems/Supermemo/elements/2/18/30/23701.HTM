Platform drivers<BR>~~~~~~~~~~~~~~~~<BR>Platform drivers follow the standard driver model convention, where<BR>discovery/enumeration is handled outside the drivers, and drivers<BR>provide probe() and remove() methods.&nbsp; They support power management<BR>and shutdown notifications using the standard conventions. 
<P></P>
<P>struct platform_driver {</P>
<P><SPAN class=cloze>[...]</SPAN><BR>};</P>
<P>Note that probe() should in general verify that the specified device hardware<BR>actually exists; sometimes platform setup code can't be sure.&nbsp; The probing<BR>can use device resources, including clocks, and device platform_data.</P>
<P>Platform drivers register themselves the normal way:</P>
<P>&nbsp;int platform_driver_register(struct platform_driver *drv);</P>
<P>Or, in common situations where the device is known not to be hot-pluggable,<BR>the probe() routine can live in an init section to reduce the driver's<BR>runtime memory footprint:</P>
<P>&nbsp;int platform_driver_probe(struct platform_driver *drv,<BR>&nbsp;&nbsp;&nbsp;&nbsp; int (*probe)(struct platform_device *))