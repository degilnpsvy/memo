<H4 id=title-ID0ENHPM class=docSection2Title>Hash Lists</H4>
<P class=docText><A name=iddle2181></A><A name=iddle2195></A><A name=iddle2204></A><A name=iddle2222></A><A name=iddle2224></A><A name=iddle2225></A><A name=iddle2570></A><A name=iddle2575></A><A name=iddle2823></A><A name=iddle3702></A><A name=iddle4648></A><A name="optimal for"></A>The doubly linked list implementation discussed previously is not optimal for cases where you want to implement linked data structures such as hash tables. This is because hash tables need only a list head containing a single pointer. To reduce memory overhead for such applications, the kernel provides hash lists (or <SPAN class=docEmphasis>hlists</SPAN><A name="the same"></A>), a variation of lists. Unlike lists, which use the same structure for the list head and list nodes, <FONT class=extract>hlists have separate definitions:</FONT></P>
<DIV class=docText><PRE><FONT class=extract>struct hlist_head {
  struct hlist_node *first;
};

struct hlist_node {
  struct hlist_node *next, **pprev;
};</FONT></PRE></DIV><BR>
<P class=docText><A name="nodes maintain"></A><FONT class=extract>To suit the scheme of a single-pointer hlist head, the nodes maintain the address of the pointer to the previous node, rather than the pointer itself.</FONT></P>
<P class=docText><A name="tables are"></A><FONT class=extract>Hash tables are implemented using an array of <TT>hlist_head</TT>s. Each <TT>hlist_head</TT> sources a doubly linked list of <TT>hlist_node</TT></FONT><A name=the></A><FONT class=extract>s. A hash function is used to locate the index (or bucket) in the <TT>hlist_head</TT></FONT><A name="When that"></A><FONT class=extract> array. When that is done, you may use hlist helper routines (also defined in <SPAN class=docEmphasis>include/linux/list.h</SPAN></FONT><A name="on the"></A><FONT class=extract>) to operate on the list of <TT>hlist_nodes</TT></FONT><A name="to the"></A><FONT class=extract> linked to the chosen bucket. Look at the implementation of the directory cache (dcache) in <SPAN class=docEmphasis>fs/dcache.c</SPAN> for an example.</FONT></P><A name=ch03lev2sec6></A>