<P class=docText><FONT class=extract>To weave doubly linked lists of data structures, use the functions provided in <SPAN class=docEmphasis>include/linux/list.h.</SPAN></FONT> Essentially, you embed a <TT>struct list_head</TT> inside your data structure:</P>
<DIV class=docText><PRE>#include <LINUX list.h="">

<FONT class=clozed>struct list_head {
  struct list_head *next, *prev;
};

struct mydatastructure {
  struct list_head mylist; /* Embed */
  /* ... */                /* Actual Fields */
};</FONT></LINUX></PRE></DIV><BR>
<P class=docText><TT>mylist</TT> is the link that chains different instances of <TT>mydatastructure</TT>. If you have multiple <TT>list_head</TT>s embedded inside <TT>mydatastructure</TT>, each of them constitutes <A name=iddle2199></A><A name=iddle2351></A><A name=iddle2758></A><A name=iddle2808></A><A name=iddle2809></A><A name=iddle2810></A><A name=iddle2812></A><A name=iddle2813></A><A name=iddle2815></A><A name=iddle2817></A><A name=iddle2821></A><A name=iddle2822></A><A name=iddle2826></A><A name=iddle3166></A>a link that renders <TT>mydatastructure</TT><A name="list library"></A> a member of a new list. You can use the list library to add or delete membership from individual lists.