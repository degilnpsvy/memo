<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle>Device Drivers DMA Management</TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-subsys-virtual-register.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Chapter&nbsp;2.&nbsp;Device drivers infrastructure</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-export-named.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=sect1>
<DIV class=titlepage>
<DIV>
<DIV>
<H2 style="CLEAR: both" class=title><A name=idp44661108></A>Device Drivers DMA Management</H2></DIV></DIV></DIV>
<DIV class=toc>
<DL class=toc>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-export-named.html"><SPAN class=phrase>dma_buf_export_named</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Creates a new dma_buf, and associates an anon file with this buffer, so it can be exported. Also connect the allocator specific data and ops to the buffer. Additionally, provide a name string for exporter; useful in debugging. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-fd.html"><SPAN class=phrase>dma_buf_fd</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; returns a file descriptor for the given dma_buf </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-get.html"><SPAN class=phrase>dma_buf_get</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; returns the dma_buf structure related to an fd </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-put.html"><SPAN class=phrase>dma_buf_put</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; decreases refcount of the buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-attach.html"><SPAN class=phrase>dma_buf_attach</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Add the device to dma_buf's attachments list; optionally, calls <CODE class=function>attach</CODE> of dma_buf_ops to allow device-specific attach functionality </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-detach.html"><SPAN class=phrase>dma_buf_detach</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Remove the given attachment from dmabuf's attachments list; optionally calls <CODE class=function>detach</CODE> of dma_buf_ops for device-specific detach </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-map-attachment.html"><SPAN class=phrase>dma_buf_map_attachment</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Returns the scatterlist table of the attachment; mapped into _device_ address space. Is a wrapper for <CODE class=function>map_dma_buf</CODE> of the dma_buf_ops. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-unmap-attachment.html"><SPAN class=phrase>dma_buf_unmap_attachment</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unmaps and decreases usecount of the buffer;might deallocate the scatterlist associated. Is a wrapper for <CODE class=function>unmap_dma_buf</CODE> of dma_buf_ops. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-begin-cpu-access.html"><SPAN class=phrase>dma_buf_begin_cpu_access</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Must be called before accessing a dma_buf from the cpu in the kernel context. Calls begin_cpu_access to allow exporter-specific preparations. Coherency is only guaranteed in the specified range for the specified access direction. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-end-cpu-access.html"><SPAN class=phrase>dma_buf_end_cpu_access</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Must be called after accessing a dma_buf from the cpu in the kernel context. Calls end_cpu_access to allow exporter-specific actions. Coherency is only guaranteed in the specified range for the specified access direction. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-kmap-atomic.html"><SPAN class=phrase>dma_buf_kmap_atomic</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Map a page of the buffer object into kernel address space. The same restrictions as for kmap_atomic and friends apply. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-kunmap-atomic.html"><SPAN class=phrase>dma_buf_kunmap_atomic</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unmap a page obtained by dma_buf_kmap_atomic. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-kmap.html"><SPAN class=phrase>dma_buf_kmap</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Map a page of the buffer object into kernel address space. The same restrictions as for kmap and friends apply. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-kunmap.html"><SPAN class=phrase>dma_buf_kunmap</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unmap a page obtained by dma_buf_kmap. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-mmap.html"><SPAN class=phrase>dma_buf_mmap</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Setup up a userspace mmap with the given vma </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-vmap.html"><SPAN class=phrase>dma_buf_vmap</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Create virtual mapping for the buffer object into kernel address space. Same restrictions as for vmap and friends apply. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-vunmap.html"><SPAN class=phrase>dma_buf_vunmap</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unmap a vmap obtained by dma_buf_vmap. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-context-alloc.html"><SPAN class=phrase>fence_context_alloc</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate an array of fence contexts </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-signal-locked.html"><SPAN class=phrase>fence_signal_locked</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; signal completion of a fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-signal.html"><SPAN class=phrase>fence_signal</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; signal completion of a fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-wait-timeout.html"><SPAN class=phrase>fence_wait_timeout</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; sleep until the fence gets signaled or until timeout elapses </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-enable-sw-signaling.html"><SPAN class=phrase>fence_enable_sw_signaling</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; enable signaling on fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-add-callback.html"><SPAN class=phrase>fence_add_callback</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add a callback to be called when the fence is signaled </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-remove-callback.html"><SPAN class=phrase>fence_remove_callback</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; remove a callback from the signaling list </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-default-wait.html"><SPAN class=phrase>fence_default_wait</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; default sleep until the fence gets signaled or until timeout elapses </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-init.html"><SPAN class=phrase>fence_init</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Initialize a custom fence. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/re395.html">.//drivers/dma-buf/seqno-fence.c </A></SPAN><SPAN class=refpurpose>&#8212; Document generation inconsistency </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-fence.html"><SPAN class=phrase>struct fence</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; software synchronization primitive </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-fence-cb.html"><SPAN class=phrase>struct fence_cb</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; callback for fence_add_callback </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-fence-ops.html"><SPAN class=phrase>struct fence_ops</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; operations implemented for fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-get.html"><SPAN class=phrase>fence_get</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; increases refcount of the fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-get-rcu.html"><SPAN class=phrase>fence_get_rcu</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; get a fence from a reservation_object_list with rcu read lock </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-put.html"><SPAN class=phrase>fence_put</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; decreases refcount of the fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-is-signaled-locked.html"><SPAN class=phrase>fence_is_signaled_locked</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Return an indication if the fence is signaled yet. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-is-signaled.html"><SPAN class=phrase>fence_is_signaled</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Return an indication if the fence is signaled yet. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-later.html"><SPAN class=phrase>fence_later</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return the chronologically later fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-wait.html"><SPAN class=phrase>fence_wait</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; sleep until the fence gets signaled </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-to-seqno-fence.html"><SPAN class=phrase>to_seqno_fence</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; cast a fence to a seqno_fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-seqno-fence-init.html"><SPAN class=phrase>seqno_fence_init</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; initialize a seqno fence </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/re408.html">.//drivers/dma-buf/reservation.c </A></SPAN><SPAN class=refpurpose>&#8212; Document generation inconsistency </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/re409.html">.//include/linux/reservation.h </A></SPAN><SPAN class=refpurpose>&#8212; Document generation inconsistency </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-alloc-from-coherent.html"><SPAN class=phrase>dma_alloc_from_coherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; try to allocate memory from the per-device coherent area </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-release-from-coherent.html"><SPAN class=phrase>dma_release_from_coherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; try to free the memory allocated from per-device coherent memory pool </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-mmap-from-coherent.html"><SPAN class=phrase>dma_mmap_from_coherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; try to mmap the memory allocated from per-device coherent memory pool to userspace </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dmam-alloc-coherent.html"><SPAN class=phrase>dmam_alloc_coherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Managed <CODE class=function>dma_alloc_coherent</CODE> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dmam-free-coherent.html"><SPAN class=phrase>dmam_free_coherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Managed <CODE class=function>dma_free_coherent</CODE> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dmam-alloc-noncoherent.html"><SPAN class=phrase>dmam_alloc_noncoherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Managed <CODE class=function>dma_alloc_non_coherent</CODE> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dmam-free-noncoherent.html"><SPAN class=phrase>dmam_free_noncoherent</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Managed <CODE class=function>dma_free_noncoherent</CODE> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dmam-declare-coherent-memory.html"><SPAN class=phrase>dmam_declare_coherent_memory</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Managed <CODE class=function>dma_declare_coherent_memory</CODE> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dmam-release-declared-memory.html"><SPAN class=phrase>dmam_release_declared_memory</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Managed <CODE class=function>dma_release_declared_memory</CODE>. </SPAN></DT></DL></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-subsys-virtual-register.html">Prev</A>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=u href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/devdrivers.html">Up</A></TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-dma-buf-export-named.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left><SPAN class=phrase>subsys_virtual_register</SPAN>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=h href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/index.html">Home</A></TD>
<TD vAlign=top width="40%" align=right>&nbsp;<SPAN class=phrase>dma_buf_export_named</SPAN></TD></TR></TBODY></TABLE></DIV>