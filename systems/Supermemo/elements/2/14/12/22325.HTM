<DIV class=sect1>
<DIV class=titlepage>
<DIV>
<DIV>
<H2 style="CLEAR: both" class=title><A name=idp48614908></A>Input core</H2></DIV></DIV></DIV>
<DIV class=toc>
<DL class=toc>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-input-value.html"><SPAN class=phrase>struct input_value</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; input value representation </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-input-dev.html"><SPAN class=phrase>struct input_dev</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; represents an input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-input-handler.html"><SPAN class=phrase>struct input_handler</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; implements one of interfaces for input devices </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-input-handle.html"><SPAN class=phrase>struct input_handle</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; links input device with an input handler </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-set-events-per-packet.html"><SPAN class=phrase>input_set_events_per_packet</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; tell handlers about the driver event rate </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-ff-device.html"><SPAN class=phrase>struct ff_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; force-feedback part of an input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-event.html"><SPAN class=phrase>input_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; report new input event </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-inject-event.html"><SPAN class=phrase>input_inject_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; send input event from input handler </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-alloc-absinfo.html"><SPAN class=phrase>input_alloc_absinfo</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocates array of input_absinfo structs </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-grab-device.html"><SPAN class=phrase>input_grab_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; grabs device for exclusive use </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-release-device.html"><SPAN class=phrase>input_release_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release previously grabbed device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-open-device.html"><SPAN class=phrase>input_open_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; open input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-close-device.html"><SPAN class=phrase>input_close_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; close input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-scancode-to-scalar.html"><SPAN class=phrase>input_scancode_to_scalar</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; converts scancode in <SPAN class=structname>struct input_keymap_entry</SPAN> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-get-keycode.html"><SPAN class=phrase>input_get_keycode</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; retrieve keycode currently mapped to a given scancode </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-set-keycode.html"><SPAN class=phrase>input_set_keycode</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; attribute a keycode to a given scancode </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-reset-device.html"><SPAN class=phrase>input_reset_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; reset/restore the state of input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-allocate-device.html"><SPAN class=phrase>input_allocate_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate memory for new input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-devm-input-allocate-device.html"><SPAN class=phrase>devm_input_allocate_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate managed input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-free-device.html"><SPAN class=phrase>input_free_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; free memory occupied by input_dev structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-set-capability.html"><SPAN class=phrase>input_set_capability</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; mark device as capable of a certain event </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-register-device.html"><SPAN class=phrase>input_register_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register device with input core </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-unregister-device.html"><SPAN class=phrase>input_unregister_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister previously registered device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-register-handler.html"><SPAN class=phrase>input_register_handler</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a new input handler </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-unregister-handler.html"><SPAN class=phrase>input_unregister_handler</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregisters an input handler </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-handler-for-each-handle.html"><SPAN class=phrase>input_handler_for_each_handle</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; handle iterator </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-register-handle.html"><SPAN class=phrase>input_register_handle</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a new input handle </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-unregister-handle.html"><SPAN class=phrase>input_unregister_handle</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister an input handle </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-get-new-minor.html"><SPAN class=phrase>input_get_new_minor</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocates a new input minor number </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-free-minor.html"><SPAN class=phrase>input_free_minor</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release previously allocated minor </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-ff-upload.html"><SPAN class=phrase>input_ff_upload</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; upload effect into force-feedback device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-ff-erase.html"><SPAN class=phrase>input_ff_erase</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; erase a force-feedback effect from device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-ff-event.html"><SPAN class=phrase>input_ff_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; generic handler for force-feedback events </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-ff-create.html"><SPAN class=phrase>input_ff_create</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create force-feedback device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-ff-destroy.html"><SPAN class=phrase>input_ff_destroy</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; frees force feedback portion of input device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-ff-create-memless.html"><SPAN class=phrase>input_ff_create_memless</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create memoryless force-feedback device </SPAN></DT></DL></DIV></DIV>