<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>struct uio_info</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-uio-port.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Userspace IO devices</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/parportdev.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=refentry><A name=API-struct-uio-info></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>struct uio_info &#8212; UIO device capabilities </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2><PRE class=programlisting>struct uio_info {
  struct uio_device * uio_dev;
  const char * name;
  const char * version;
  struct uio_mem mem[MAX_UIO_MAPS];
  struct uio_port port[MAX_UIO_PORT_REGIONS];
  long irq;
  unsigned long irq_flags;
  void * priv;
  irqreturn_t (* handler) (int irq, struct uio_info *dev_info);
  int (* mmap) (struct uio_info *info, struct vm_area_struct *vma);
  int (* open) (struct uio_info *info, struct inode *inode);
  int (* release) (struct uio_info *info, struct inode *inode);
  int (* irqcontrol) (struct uio_info *info, s32 irq_on);
};  </PRE></DIV>
<DIV class=refsect1><A name=idp45372508></A>
<H2>Members</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term>uio_dev</SPAN> 
<DD>
<P>the UIO device this info belongs to </P>
<DT><SPAN class=term>name</SPAN> 
<DD>
<P>device name </P>
<DT><SPAN class=term>version</SPAN> 
<DD>
<P>device driver version </P>
<DT><SPAN class=term>mem[MAX_UIO_MAPS]</SPAN> 
<DD>
<P>list of mappable memory regions, size==0 for end of list </P>
<DT><SPAN class=term>port[MAX_UIO_PORT_REGIONS]</SPAN> 
<DD>
<P>list of port regions, size==0 for end of list </P>
<DT><SPAN class=term>irq</SPAN> 
<DD>
<P>interrupt number or UIO_IRQ_CUSTOM </P>
<DT><SPAN class=term>irq_flags</SPAN> 
<DD>
<P>flags for <CODE class=function>request_irq</CODE> </P>
<DT><SPAN class=term>priv</SPAN> 
<DD>
<P>optional private data </P>
<DT><SPAN class=term>handler</SPAN> 
<DD>
<P>the device's irq handler </P>
<DT><SPAN class=term>mmap</SPAN> 
<DD>
<P>mmap operation for this uio device </P>
<DT><SPAN class=term>open</SPAN> 
<DD>
<P>open operation for this uio device </P>
<DT><SPAN class=term>release</SPAN> 
<DD>
<P>release operation for this uio device </P>
<DT><SPAN class=term>irqcontrol</SPAN> 
<DD>
<P>disable/enable irqs when 0/1 is written to /dev/uioX </P></DD></DL></DIV></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-uio-port.html">Prev</A>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=u href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s07.html">Up</A></TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/parportdev.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left><SPAN class=phrase>struct uio_port</SPAN>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=h href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/index.html">Home</A></TD>
<TD vAlign=top width="40%" align=right>&nbsp;Chapter&nbsp;3.&nbsp;Parallel Port Devices</TD></TR></TBODY></TABLE></DIV>