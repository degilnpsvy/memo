<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>input_register_device</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-set-capability.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Input core</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-unregister-device.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=refentry><A name=API-input-register-device></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>input_register_device &#8212; register device with input core </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>int <B class=fsfunc>input_register_device </B>(</CODE></TD>
<TD>struct input_dev * <VAR class=pdparam>dev</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp48864116></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>dev</CODE></EM></SPAN> 
<DD>
<P>device to be registered </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp48865716></A>
<H2>Description</H2>
<P>This function registers device with input core. The device must be allocated with <CODE class=function>input_allocate_device</CODE> and all it's capabilities set up before registering. If function fails the device must be freed with <CODE class=function>input_free_device</CODE>. Once device has been successfully registered it can be unregistered with <CODE class=function>input_unregister_device</CODE>; <CODE class=function>input_free_device</CODE> should not be called in this case. </P>
<P>Note that this function is also used to register managed input devices (ones allocated with <CODE class=function>devm_input_allocate_device</CODE>). Such managed input devices need not be explicitly unregistered or freed, their tear down is controlled by the devres infrastructure. It is also worth noting that tear down of managed input devices is internally a 2-step process: registered managed input device is first unregistered, but stays in memory and can still handle <CODE class=function>input_event</CODE> calls (although events will not be delivered anywhere). The freeing of managed input device will happen later, when devres stack is unwound to the point where device allocation was made. </P></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-set-capability.html">Prev</A>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=u href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/input_subsystem.html#idp48614908">Up</A></TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-input-unregister-device.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left><SPAN class=phrase>input_set_capability</SPAN>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=h href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/index.html">Home</A></TD>
<TD vAlign=top width="40%" align=right>&nbsp;<SPAN class=phrase>input_unregister_device</SPAN></TD></TR></TBODY></TABLE></DIV>