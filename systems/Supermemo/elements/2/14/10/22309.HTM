<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>fb_find_mode</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fb-delete-videomode.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Frame Buffer Video Mode Database</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fb-var-to-videomode.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=refentry><A name=API-fb-find-mode></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>fb_find_mode &#8212; finds a valid video mode </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>int <B class=fsfunc>fb_find_mode </B>(</CODE></TD>
<TD>struct fb_var_screeninfo * <VAR class=pdparam>var</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>struct fb_info * <VAR class=pdparam>info</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>const char * <VAR class=pdparam>mode_option</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>const struct fb_videomode * <VAR class=pdparam>db</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>unsigned int <VAR class=pdparam>dbsize</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>const struct fb_videomode * <VAR class=pdparam>default_mode</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>unsigned int <VAR class=pdparam>default_bpp</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp48491596></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>var</CODE></EM></SPAN> 
<DD>
<P>frame buffer user defined part of display </P>
<DT><SPAN class=term><EM class=parameter><CODE>info</CODE></EM></SPAN> 
<DD>
<P>frame buffer info structure </P>
<DT><SPAN class=term><EM class=parameter><CODE>mode_option</CODE></EM></SPAN> 
<DD>
<P>string video mode to find </P>
<DT><SPAN class=term><EM class=parameter><CODE>db</CODE></EM></SPAN> 
<DD>
<P>video mode database </P>
<DT><SPAN class=term><EM class=parameter><CODE>dbsize</CODE></EM></SPAN> 
<DD>
<P>size of <EM class=parameter><CODE>db</CODE></EM> </P>
<DT><SPAN class=term><EM class=parameter><CODE>default_mode</CODE></EM></SPAN> 
<DD>
<P>default video mode to fall back to </P>
<DT><SPAN class=term><EM class=parameter><CODE>default_bpp</CODE></EM></SPAN> 
<DD>
<P>default color depth in bits per pixel </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp48499716></A>
<H2>Description</H2>
<P>Finds a suitable video mode, starting with the specified mode in <EM class=parameter><CODE>mode_option</CODE></EM> with fallback to <EM class=parameter><CODE>default_mode</CODE></EM>. If <EM class=parameter><CODE>default_mode</CODE></EM> fails, all modes in the video mode database will be tried. </P>
<P>Valid mode specifiers for <EM class=parameter><CODE>mode_option</CODE></EM>: </P>
<P>&lt;xres&gt;x&lt;yres&gt;[M][R][-&lt;bpp&gt;][@&lt;refresh&gt;][i][m] or &lt;name&gt;[-&lt;bpp&gt;][@&lt;refresh&gt;] </P>
<P>with &lt;xres&gt;, &lt;yres&gt;, &lt;bpp&gt; and &lt;refresh&gt; decimal numbers and &lt;name&gt; a string. </P>
<P>If 'M' is present after yres (and before refresh/bpp if present), the function will compute the timings using VESA(tm) Coordinated Video Timings (CVT). If 'R' is present after 'M', will compute with reduced blanking (for flatpanels). If 'i' is present, compute interlaced mode. If 'm' is present, add margins equal to 1.8% of xres rounded down to 8 pixels, and 1.8% of yres. The char 'i' and 'm' must be after 'M' and 'R'. Example: </P>
<P>1024x768MR-8<EM class=parameter><CODE>60m</CODE></EM> - Reduced blank with margins at 60Hz. </P></DIV>
<DIV class=refsect1><A name=idp48503828></A>
<H2>NOTE</H2>
<P>The passed struct <EM class=parameter><CODE>var</CODE></EM> is _not_ cleared! This allows you to supply values for e.g. the grayscale and accel_flags fields. </P>
<P>Returns zero for failure, 1 if using specified <EM class=parameter><CODE>mode_option</CODE></EM>, 2 if using specified <EM class=parameter><CODE>mode_option</CODE></EM> with an ignored refresh rate, 3 if default mode is used, 4 if fall back to any valid mode. </P></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fb-delete-videomode.html">Prev</A>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=u href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch07s03.html">Up</A></TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fb-var-to-videomode.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left><SPAN class=phrase>fb_delete_videomode</SPAN>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=h href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/index.html">Home</A></TD>
<TD vAlign=top width="40%" align=right>&nbsp;<SPAN class=phrase>fb_var_to_videomode</SPAN></TD></TR></TBODY></TABLE></DIV>