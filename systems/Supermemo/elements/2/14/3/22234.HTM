<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>fence_add_callback</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-enable-sw-signaling.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Device Drivers DMA Management</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-remove-callback.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=refentry><A name=API-fence-add-callback></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>fence_add_callback &#8212; add a callback to be called when the fence is signaled </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>int <B class=fsfunc>fence_add_callback </B>(</CODE></TD>
<TD>struct fence * <VAR class=pdparam>fence</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>struct fence_cb * <VAR class=pdparam>cb</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>fence_func_t <VAR class=pdparam>func</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp44869812></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>fence</CODE></EM></SPAN> 
<DD>
<P>[in] the fence to wait on </P>
<DT><SPAN class=term><EM class=parameter><CODE>cb</CODE></EM></SPAN> 
<DD>
<P>[in] the callback to register </P>
<DT><SPAN class=term><EM class=parameter><CODE>func</CODE></EM></SPAN> 
<DD>
<P>[in] the function to call </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp44873484></A>
<H2>Description</H2>
<P>cb will be initialized by fence_add_callback, no initialization by the caller is required. Any number of callbacks can be registered to a fence, but a callback can only be registered to one fence at a time. </P>
<P>Note that the callback can be called from an atomic context. If fence is already signaled, this function will return -ENOENT (and *not* call the callback) </P>
<P>Add a software callback to the fence. Same restrictions apply to refcount as it does to fence_wait, however the caller doesn't need to </P></DIV>
<DIV class=refsect1><A name=idp44874892></A>
<H2>keep a refcount to fence afterwards</H2>
<P>when software access is enabled, the creator of the fence is required to keep the fence alive until after it signals with fence_signal. The callback itself can be called from irq context. </P></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-enable-sw-signaling.html">Prev</A>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=u href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s03.html">Up</A></TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-remove-callback.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left><SPAN class=phrase>fence_enable_sw_signaling</SPAN>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=h href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/index.html">Home</A></TD>
<TD vAlign=top width="40%" align=right>&nbsp;<SPAN class=phrase>fence_remove_callback</SPAN></TD></TR></TBODY></TABLE></DIV>