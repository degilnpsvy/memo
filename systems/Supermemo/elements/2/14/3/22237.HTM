<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>fence_init</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-default-wait.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Device Drivers DMA Management</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/re395.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=refentry><A name=API-fence-init></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>fence_init &#8212; Initialize a custom fence. </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>void <B class=fsfunc>fence_init </B>(</CODE></TD>
<TD>struct fence * <VAR class=pdparam>fence</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>const struct fence_ops * <VAR class=pdparam>ops</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>spinlock_t * <VAR class=pdparam>lock</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>unsigned <VAR class=pdparam>context</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>unsigned <VAR class=pdparam>seqno</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp44901876></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>fence</CODE></EM></SPAN> 
<DD>
<P>[in] the fence to initialize </P>
<DT><SPAN class=term><EM class=parameter><CODE>ops</CODE></EM></SPAN> 
<DD>
<P>[in] the fence_ops for operations on this fence </P>
<DT><SPAN class=term><EM class=parameter><CODE>lock</CODE></EM></SPAN> 
<DD>
<P>[in] the irqsafe spinlock to use for locking this fence </P>
<DT><SPAN class=term><EM class=parameter><CODE>context</CODE></EM></SPAN> 
<DD>
<P>[in] the execution context this fence is run on </P>
<DT><SPAN class=term><EM class=parameter><CODE>seqno</CODE></EM></SPAN> 
<DD>
<P>[in] a linear increasing sequence number for this context </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp44907700></A>
<H2>Description</H2>
<P>Initializes an allocated fence, the caller doesn't have to keep its refcount after committing with this fence, but it will need to hold a refcount again if fence_ops.enable_signaling gets called. This can be used for other implementing other types of fence. </P>
<P>context and seqno are used for easy comparison between fences, allowing to check which fence is later by simply using fence_later. </P></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-fence-default-wait.html">Prev</A>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=u href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s03.html">Up</A></TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/re395.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left><SPAN class=phrase>fence_default_wait</SPAN>&nbsp;</TD>
<TD width="20%" align=middle><A accessKey=h href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/index.html">Home</A></TD>
<TD vAlign=top width="40%" align=right>&nbsp; .//drivers/dma-buf/seqno-fence.c </TD></TR></TBODY></TABLE></DIV>