Programming Interface<BR>~~~~~~~~~~~~~~~~~~~~~<BR><FONT class=extract>The device class structure looks like: </FONT>
<P></P>
<P><BR><FONT class=extract>typedef int (*devclass_add)(struct device *);<BR>typedef void (*devclass_remove)(struct device *);</FONT></P>
<P>See the kerneldoc for the struct class.</P>
<P><FONT class=extract>A typical device class definition would look like: </FONT></P>
<P><FONT class=extract>struct device_class input_devclass = {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .name&nbsp;&nbsp;= "input",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .add_device&nbsp;= input_add_device,<BR>&nbsp;.remove_device&nbsp;= input_remove_device,<BR>};</FONT></P>
<P><FONT class=extract>Each device class structure should be exported in a header file so it<BR>can be used by drivers, extensions and interfaces.</FONT></P>
<P><FONT class=extract>Device classes are registered and unregistered with the core using: </FONT></P>
<P><FONT class=extract>int devclass_register(struct device_class * cls);<BR>void devclass_unregister(struct device_class * cls);</FONT>