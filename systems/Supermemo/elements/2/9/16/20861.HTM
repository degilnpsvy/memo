Menu dependencies<BR>----------------- 
<P></P>
<P>Dependencies define the visibility of a menu entry and can also reduce<BR>the input range of tristate symbols. The tristate logic used in the<BR>expressions uses one more state than normal boolean logic to express the<BR>module state. <FONT class=extract>Dependency expressions have the following syntax:</FONT></P>
<P><FONT class=extract>&lt;expr&gt; ::= &lt;symbol&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (1)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;symbol&gt; '=' &lt;symbol&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (2)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;symbol&gt; '!=' &lt;symbol&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (3)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '(' &lt;expr&gt; ')'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (4)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; '!' &lt;expr&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (5)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;expr&gt; '&amp;&amp;' &lt;expr&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (6)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;expr&gt; '||' &lt;expr&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (7)</FONT></P>
<P><FONT class=extract>Expressions are listed in decreasing order of precedence. </FONT></P>
<P><FONT class=extract>(1) Convert the symbol into an expression. Boolean and tristate symbols<BR>&nbsp;&nbsp;&nbsp; are simply converted into the respective expression values. All<BR>&nbsp;&nbsp;&nbsp; other symbol types result in 'n'.<BR>(2) If the values of both symbols are equal, it returns 'y',<BR>&nbsp;&nbsp;&nbsp; otherwise 'n'.<BR>(3) If the values of both symbols are equal, it returns 'n',<BR>&nbsp;&nbsp;&nbsp; otherwise 'y'.<BR>(4) Returns the value of the expression. Used to override precedence.<BR>(5) Returns the result of (2-/expr/).<BR>(6) Returns the result of min(/expr/, /expr/).<BR>(7) Returns the result of max(/expr/, /expr/).</FONT></P>
<P><FONT class=extract>An expression can have a value of 'n', 'm' or 'y' (or 0, 1, 2<BR>respectively for calculations). A menu entry becomes visible when its<BR>expression evaluates to 'm' or 'y'.</FONT></P>
<P><FONT class=extract>There are two types of symbols: constant and non-constant symbols.<BR>Non-constant symbols are the most common ones and are defined with the<BR>'config' statement. Non-constant symbols consist entirely of alphanumeric<BR>characters or underscores.<BR>Constant symbols are only part of expressions. Constant symbols are<BR>always surrounded by single or double quotes. Within the quote, any<BR>other character is allowed and the quotes can be escaped using '\'.</FONT>