Menu structure<BR>-------------- 
<P></P>
<P><FONT class=extract>The position of a menu entry in the tree is determined in two ways. First<BR>it can be specified explicitly:</FONT></P>
<P><FONT class=extract>menu "Network device support"<BR>&nbsp;depends on NET</FONT></P>
<P><FONT class=extract>config NETDEVICES<BR>&nbsp;...</FONT></P>
<P><FONT class=extract>endmenu</FONT></P>
<P><FONT class=extract>All entries within the "menu" ... "endmenu" block become a submenu of<BR>"Network device support". All subentries inherit the dependencies from<BR>the menu entry, e.g. this means the dependency "NET" is added to the<BR>dependency list of the config option NETDEVICES.</FONT></P>
<P><FONT class=extract>The other way to generate the menu structure is done by analyzing the<BR>dependencies. If a menu entry somehow depends on the previous entry, it<BR>can be made a submenu of it. First, the previous (parent) symbol must<BR>be part of the dependency list and then one of these two conditions<BR>must be true:<BR>- the child entry must become invisible, if the parent is set to 'n'<BR>- the child entry must only be visible, if the parent is visible</FONT></P>
<P><FONT class=extract>config MODULES<BR>&nbsp;bool "Enable loadable module support"</FONT></P>
<P><FONT class=extract>config MODVERSIONS<BR>&nbsp;bool "Set version information on all module symbols"<BR>&nbsp;depends on MODULES</FONT></P>
<P><FONT class=extract>comment "module support disabled"<BR>&nbsp;depends on !MODULES</FONT></P>
<P><FONT class=extract>MODVERSIONS directly depends on MODULES, this means it's only visible if<BR>MODULES is different from 'n'. The comment on the other hand is always<BR>visible when MODULES is visible (the (empty) dependency of MODULES is<BR>also part of the comment dependencies).</FONT>