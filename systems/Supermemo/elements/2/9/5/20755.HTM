<HEAD></HEAD>
<BODY>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 26pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; COLOR: black; mso-bidi-font-size: 16.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt">CHAPTER 3 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 72pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; COLOR: black; mso-bidi-font-size: 24.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt">Char Drivers</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The goal of this chapter is to write a complete char device driver. We develop a character driver because this class is suitable for most simple hardware devices. Char drivers are also easier to understand than block drivers or network drivers (which we get to in later chapters). Our ultimate aim is to write a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">modularized </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">char driver, but we won&#8217;t talk about modularization issues in this chapter.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Throughout the chapter, we present code fragments extracted from a real device driver: </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(Simple Character Utility for Loading Localities). </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is a char driver that acts on a memory area as though it were a device. In this chapter, because of that peculiarity of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, we use the word </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">device </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">interchangeably with </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>the memory area used by </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8221;<SPAN lang=EN-US></SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The advantage of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is that it isn&#8217;t hardware dependent. </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">just acts on some memory, allocated from the kernel. Anyone can compile and run </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is portable across the computer architectures on which Linux runs. On the other hand, the device doesn&#8217;t do anything </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>useful</SPAN>&#8221;<SPAN lang=EN-US> other than demonstrate the interface between the kernel and char drivers and allow the user to run some tests.</SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; COLOR: black; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt">The Design of scull</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The first step of driver writing is defining the capabilities (the mechanism) the driver will offer to user programs. Since our </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>device</SPAN>&#8221;<SPAN lang=EN-US> is part of the computer&#8217;s memory, we&#8217;re free to do what we want with it. It can be a sequential or random-access device, one device or many, and so on.</SPAN></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">To make </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">useful as a template for writing real drivers for real devices, we&#8217;ll show you how to implement several device abstractions on top of the computer memory, each with a different personality.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">source implements the following devices. Each kind of device implemented by the module is referred to as a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">type</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; COLOR: black; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>scull0 to scull3</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Four devices, each consisting of a memory area that is both global and persistent. Global means that if the device is opened multiple times, the data contained within the device is shared by all the file descriptors that opened it. Persistent means that if the device is closed and reopened, data isn&#8217;t lost. This device can be fun to work with, because it can be accessed and tested using conventional commands, such as </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cp</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cat</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and shell I/O redirection.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>scullpipe0 to scullpipe3</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Four FIFO (first-in-first-out) devices, which act like pipes. One process reads what another process writes. If multiple processes read the same device, they contend for data. The internals of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scullpipe </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">will show how blocking and nonblocking </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">can be implemented without having to resort to interrupts.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Although real drivers synchronize with their devices using hardware interrupts, the topic of blocking and nonblocking operations is an important one and is separate from interrupt handling (covered in Chapter 10).</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>scullsingle</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>scullpriv</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>sculluid</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>scullwuid</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">These devices are similar to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull0 </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">but with some limitations on when an </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is permitted. The first (</SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scullsingle</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) allows only one process at a time to use the driver, whereas </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scullpriv </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is private to each virtual console (or X terminal session), because processes on each console/terminal get different memory areas. </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sculluid </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scullwuid </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">can be opened multiple times, but only by one user at a time; the former returns an error of </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Device Busy</SPAN>&#8221;<SPAN lang=EN-US> if another user is locking the device, whereas the latter implements blocking </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. These variations of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">would appear to be confusing policy and mechanism, but they are worth looking at, because some real-life devices require this sort of management.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Each of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">devices demonstrates different features of a driver and presents different difficulties. This chapter covers the internals of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull0 </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull3</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">; the more advanced devices are covered in Chapter 6. </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scullpipe </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is described in the section </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>A Blocking I/O Example,</SPAN>&#8221;<SPAN lang=EN-US> and the others are described in </SPAN>&#8220;<SPAN lang=EN-US>Access Control on a Device File.</SPAN>&#8221;<SPAN lang=EN-US></SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka-Italic"><FONT class=extract>Major and Minor Numbers</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Char devices are accessed through names in the filesystem. Those names are called special files or device files or simply nodes of the filesystem tree; they are conventionally located in the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">directory. Special files for char drivers are identified by a </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>c</SPAN>&#8221; <SPAN lang=EN-US>in the first column of the output of </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ls </SPAN></I><I><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8211;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">l</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Block devices appear in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">as well, but they are identified by a </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>b.</SPAN>&#8221;<SPAN lang=EN-US> The focus of this chapter is on char devices, but much of the following information applies to block devices as well.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If you issue the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ls </SPAN></I><I><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8211;</SPAN></I><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">l </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command, you&#8217;ll see two numbers (separated by a comma) in the device file entries before the date of the last modification, where the file length normally appears. These numbers are the major and minor device number for the particular device. The following listing shows a few devices as they appear on a typical system. Their major numbers are 1, 4, 7, and 10, while the minors are 1, 3, 5, 64, 65, and 129.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw-rw-rw- 1 root root 1, 3 Apr 11 2002 null</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw------- 1 root root 10, 1 Apr 11 2002 psaux</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw------- 1 root root 4, 1 Oct 28 03:04 tty1</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw-rw-rw- 1 root tty 4, 64 Apr 11 2002 ttys0</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw-rw---- 1 root uucp 4, 65 Apr 11 2002 ttyS1</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw--w---- 1 vcsa tty 7, 1 Apr 11 2002 vcs1</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw--w---- 1 vcsa tty 7, 129 Apr 11 2002 vcsa1</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: 'Batang','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>crw-rw-rw- 1 root root 1, 5 Apr 11 2002 zero</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Traditionally, the major number identifies the driver associated with the device. For example, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev/null </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev/zero </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are both managed by driver 1, whereas virtual consoles and serial terminals are managed by driver 4; similarly, both </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">vcs1 </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">vcsa1 </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">devices are managed by driver 7. Modern Linux kernels allow multiple drivers to share major numbers, but most devices that you will see are still organized on the one-major-one-driver principle.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The minor number is used by the kernel to determine exactly which device is being referred to. Depending on how your driver is written (as we will see below), you can either get a direct pointer to your device from the kernel, or you can use the minor number yourself as an index into a local array of devices. Either way, the kernel itself knows almost nothing about minor numbers beyond the fact that they refer to devices implemented by your driver.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>The Internal Representation of Device Numbers</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Within the kernel, the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">type (defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/types.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) is used to hold device numbers</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>both the major and minor parts. As of Version 2.6.0 of the kernel, </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is a 32-bit quantity with 12 bits set aside for the major number and 20 for the minor number. Your code should, of course, never make any assumptions about the internal organization of device numbers; it should, instead, make use of a set of macros found in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/kdev_t.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. To obtain the major or minor parts of a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, use:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>MAJOR(dev_t dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>MINOR(dev_t dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If, instead, you have the major and minor numbers and need to turn them into a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, use:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>MKDEV(int major, int minor);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Note that the 2.6 kernel can accommodate a vast number of devices, while previous kernel versions were limited to 255 major and 255 minor numbers. One assumes that the wider range will be sufficient for quite some time, but the computing field is littered with erroneous assumptions of that nature. So you should expect that the format of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">could change again in the future; if you write your drivers carefully, however, these changes will not be a problem. </SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>Allocating and Freeing Device Numbers</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">One of the first things your driver will need to do when setting up a char device is to obtain one or more device numbers to work with. The necessary function for this task is </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev_region</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, which is declared in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/fs.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int register_chrdev_region(dev_t first, unsigned int count, char *name);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Here, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">first </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the beginning device number of the range you would like to allocate. The minor number portion of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">first </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is often </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, but there is no requirement to that effect. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the total number of contiguous device numbers you are requesting. Note that, if </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is large, the range you request could spill over to the next major number; but everything will still work properly as long as the number range you request is available. Finally, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the name of the device that should be associated with this number range; it will appear in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/proc/devices </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and sysfs.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As with most kernel functions, the return value from </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">will be </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">if the allocation was successfully performed. In case of error, a negative error code will be returned, and you will not have access to the requested region.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">works well if you know ahead of time exactly which device numbers you want. Often, however, you will not know which major numbers your device will use; there is a constant effort within the Linux kernel development community to move over to the use of dynamicly-allocated device numbers. The kernel will happily allocate a major number for you on the fly, but you must request this allocation by using a different function:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int alloc_chrdev_region(dev_t *dev, unsigned int firstminor, unsigned int count, char *name);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">With this function, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is an output-only parameter that will, on successful completion, hold the first number in your allocated range. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">firstminor </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should be the requested first minor number to use; it is usually </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">parameters work like those given to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">request_chrdev_region</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Regardless of how you allocate your device numbers, you should free them when they are no longer in use. Device numbers are freed with:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void unregister_chrdev_region(dev_t first, unsigned int count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The usual place to call </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">unregister_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">would be in your module&#8217;s cleanup function.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The above functions allocate device numbers for your driver&#8217;s use, but they do not tell the kernel anything about what you will actually do with those numbers. Before a user-space program can access one of those device numbers, your driver needs to connect them to its internal functions that implement the device&#8217;s operations. We will describe how this connection is accomplished shortly, but there are a couple of necessary digressions to take care of first.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>Dynamic Allocation of Major Numbers</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Some major device numbers are statically assigned to the most common devices. A list of those devices can be found in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">Documentation/devices.txt </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">within the kernel source tree. The chances of a static number having already been assigned for the use of your new driver are small, however, and new numbers are not being assigned. So, as a driver writer, you have a choice: you can simply pick a number that appears to be unused, or you can allocate major numbers in a dynamic manner. Picking a number may work as long as the only user of your driver is you; once your driver is more widely deployed, a randomly picked major number will lead to conflicts and trouble.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Thus, for new drivers, we strongly suggest that you use dynamic allocation to obtain your major device number, rather than choosing a number randomly from the ones that are currently free. In other words, your drivers should almost certainly be using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">alloc_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">rather than </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev_region</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The disadvantage of dynamic assignment is that you can&#8217;t create the device nodes in advance, because the major number assigned to your module will vary. For normal use of the driver, this is hardly a problem, because once the number has been assigned, you can read it from </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/proc/devices</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">*(</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> * Even better device information can usually be obtained from sysfs, generally mounted on </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/sys </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">on 2.6-based systems. Getting </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to export information via sysfs is beyond the scope of this chapter, however; we&#8217;ll return to this topic in Chapter 14.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">To load a driver using a dynamic major number, therefore, the invocation of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">insmod </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">can be replaced by a simple script that, after calling </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">insmod</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, reads </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/proc/devices </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in order to create the special file(s).</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">A typical </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/proc/devices </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">file looks like the following:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>Character devices:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>1 mem</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>2 pty</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>3 ttyp</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>4 ttyS</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>6 lp</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>7 vcs</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>10 misc</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>13 input</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>14 sound</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>&nbsp;</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>&nbsp;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>21 sg</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>180 usb</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>Block devices:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>2 fd</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>8 sd</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>11 sr</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>65 sd</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>66 sd</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The script to load a module that has been assigned a dynamic number can, therefore, be written using a tool such as </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">awk </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to retrieve information from </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/proc/devices </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in order to create the files in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The following script, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_load</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, is part of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">distribution. The user of a driver that is distributed in the form of a module can invoke such a script from the system&#8217;s </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">rc.local </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">file or call it manually whenever the module is needed.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#!/bin/sh</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>module="scull"</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>device="scull"</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>mode="664"</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract># invoke insmod with all arguments we got</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract># and use a pathname, as newer modutils don't look in . by default</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/sbin/insmod ./$module.ko $* || exit 1</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract># remove stale nodes</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>rm -f /dev/${device}[0-3]</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>major=$(awk "\\$2= =\"$module\" {print \\$1}" /proc/devices)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>mknod /dev/${device}0 c $major 0</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>mknod /dev/${device}1 c $major 1</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>mknod /dev/${device}2 c $major 2</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>mknod /dev/${device}3 c $major 3</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract># give appropriate group/permissions, and change the group.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract># Not all distributions have staff, some have "wheel" instead.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>group="staff"</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>grep -q '^staff:' /etc/group || group="wheel"</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>chgrp $group /dev/${device}[0-3]</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt 10.5pt; mso-layout-grid-align: none; mso-para-margin-left: 1.0gd" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>chmod $mode /dev/${device}[0-3]</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The script can be adapted for another driver by redefining the variables and adjusting the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">mknod </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">lines. The script just shown creates four devices because four is the default in the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">sources.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The last few lines of the script may seem obscure: why change the group and mode of a device? The reason is that the script must be run by the superuser, so newly created special files are owned by root. The permission bits default so that only root has write access, while anyone can get read access. Normally, a device node requires a different access policy, so in some way or another access rights must be changed.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The default in our script is to give access to a group of users, but your needs may vary. In the section </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Access Control on a Device File</SPAN>&#8221;<SPAN lang=EN-US> in Chapter 6, the code for </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sculluid </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">demonstrates how the driver can enforce its own kind of authorization for device access.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">A </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_unload </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">script is also available to clean up the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">directory and remove the module.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As an alternative to using a pair of scripts for loading and unloading, you could write an init script, ready to be placed in the directory your distribution uses for these scripts.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">*(</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> * The Linux Standard Base specifies that init scripts should be placed in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/etc/init.d</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, but some distributions still place them elsewhere. In addition, if your script is to be run at boot time, you need to make a link to it from the appropriate run-level directory (i.e., </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">.../rc3.d</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">).</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As part of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">source, we offer a fairly complete and configurable example of an init script, called </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull.init</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">; it accepts the conventional arguments</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">start</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">stop</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">restart</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>and performs the role of both </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_load </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_unload</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If repeatedly creating and destroying </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">nodes sounds like overkill, there is a useful workaround. If you are loading and unloading only a single driver, you can just use </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">rmmod </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">insmod </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">after the first time you create the special files with your script: dynamic numbers are not randomized,</SPAN><SPAN style="FONT-SIZE: 12.5pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8224;<SPAN lang=EN-US>(</SPAN></SPAN><SPAN style="FONT-SIZE: 13pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8224;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Though certain kernel developers have threatened to do exactly that in the future.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">)</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and you can count on the same number being chosen each time if you don&#8217;t load any other (dynamic) modules. Avoiding lengthy scripts is useful during development. But this trick, clearly, doesn&#8217;t scale to more than one driver at a time.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The best way to assign major numbers, in our opinion, is by defaulting to dynamic allocation while leaving yourself the option of specifying the major number at load time, or even at compile time. The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">implementation works in this way; it uses a global variable, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_major</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, to hold the chosen number (there is also a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_minor </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">for the minor number). The variable is initialized to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">SCULL_MAJOR</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull.h</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. </SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The default value of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">SCULL_MAJOR </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in the distributed source is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, which means </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>use dynamic assignment.</SPAN>&#8221;<SPAN lang=EN-US> The user can accept the default or choose a particular major number, either by modifying the macro before compiling or by specifying a value for </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_major </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">on the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">insmod </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command line. Finally, by using the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_load </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">script, the user can pass arguments to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">insmod </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">on </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_load</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8217;s command line.</SPAN><SPAN style="FONT-SIZE: 12.5pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8225;<SPAN lang=EN-US>(</SPAN></SPAN><SPAN style="FONT-SIZE: 13pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8225;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> The init script </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull.init </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">doesn&#8217;t accept driver options on the command line, but it supports a configuration file, because it&#8217;s designed for automatic use at boot and shutdown time.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">)</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Here&#8217;s the code we use in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8217;s source to get a major number:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (scull_major) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev = MKDEV(scull_major, scull_minor);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>result = register_chrdev_region(dev, scull_nr_devs, "scull");</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>} else {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>result = alloc_chrdev_region(&amp;dev, scull_minor, scull_nr_devs,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>"scull");</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>scull_major = MAJOR(dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (result &lt; 0) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>printk(KERN_WARNING "scull: can't get major %d\n", scull_major);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return result;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Almost all of the sample drivers used in this book use similar code for their major number assignment.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight"><FONT class=extract>Some Important Data Structures</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As you can imagine, device number registration is just the first of many tasks that driver code must carry out. We will soon look at other important driver components, but one other digression is needed first. Most of the fundamental driver operations involve three important kernel data structures, called </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">inode</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. A basic familiarity with these structures is required to be able to do much of anything interesting, so we will now take a quick look at each of them before getting into the details of how to implement the fundamental driver operations.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight"><FONT class=extract>File Operations</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">So far, we have reserved some device numbers for our use, but we have not yet connected any of our driver&#8217;s operations to those numbers. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is how a char driver sets up this connection. The structure, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/fs.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, is a collection of function pointers. Each open file (represented internally by a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure, which we will examine shortly) is associated with its own set of functions (by including a field called </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">f_op </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that points to a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure). The operations are mostly in charge of implementing the system calls and are therefore, named </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and so on. We can consider the file to be an </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>object</SPAN>&#8221;<SPAN lang=EN-US> and the functions operating on it to be its </SPAN>&#8220;<SPAN lang=EN-US>methods,</SPAN>&#8221;<SPAN lang=EN-US> using object-oriented programming terminology to denote actions declared by an object to act on itself. This is the first sign of object-oriented programming we see in the Linux kernel, and we&#8217;ll see more in later chapters.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Conventionally, a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure or a pointer to one is called </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">fops </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(or some variation thereof). Each field in the structure must point to the function in the driver that implements a specific operation, or be left </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">for unsupported operations. The exact behavior of the kernel when a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">pointer is specified is different for each function, as the list later in this section shows.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The following list introduces all the operations that an application can invoke on a device. We&#8217;ve tried to keep the list brief so it can be used as a reference, merely summarizing each operation and the default kernel behavior when a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">pointer is used.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As you read through the list of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods, you will note that a number of parameters include the string </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">__user</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. This annotation is a form of documentation, noting that a pointer is a user-space address that cannot be directly dereferenced. For normal compilation, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">__user </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">has no effect, but it can be used by external checking software to find misuse of user-space addresses.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The rest of the chapter, after describing some other important data structures, explains the role of the most important operations and offers hints, caveats, and real code examples. We defer discussion of the more complex operations to later chapters, because we aren&#8217;t ready to dig into topics such as memory management, blocking operations, and asynchronous notification quite yet.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct module *owner</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The first </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">field is not an</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> operation at all; it is a pointer to the module that </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>owns</SPAN>&#8221;<SPAN lang=EN-US> the structure. This field is used to prevent the module from being unloaded while its operations are in use. Almost all the time, it is simply initialized to </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">THIS_MODULE</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, a macro defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/module.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>loff_t (*llseek) (struct file *, loff_t, int);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">llseek </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is used to change the current read/write position in a file, and the new position is returned as a (positive) return value. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">loff_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">parameter is a </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>long offset</SPAN>&#8221;<SPAN lang=EN-US> and is at least 64 bits wide even on 32-bit platforms. Errors are signaled by a negative return value. If this function pointer is </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, seek calls will modify the position counter in the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure (described in the section </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>The file Structure</SPAN>&#8221;<SPAN lang=EN-US>) in potentially unpredictable ways.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Used to retrieve data from the device. A null pointer in this position causes the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call to fail with </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-EINVAL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Invalid argument</SPAN>&#8221;<SPAN lang=EN-US>). A nonnegative return value represents the number of bytes successfully read (the return value is a </SPAN>&#8220;<SPAN lang=EN-US>signed size</SPAN>&#8221;<SPAN lang=EN-US> type, usually the native integer type for the target platform).</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*aio_read)(struct kiocb *, char __user *, size_t, loff_t);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Initiates an asynchronous read</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>a read operation that might not complete before the function returns. If this method is </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, all operations will be processed (synchronously) by </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">instead.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Sends data to the device. If </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-EINVAL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is returned to the program calling the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call. The return value, if nonnegative, represents the number of bytes successfully written.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*aio_write)(struct kiocb *, const char __user *, size_t, loff_t *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Initiates an asynchronous write operation on the device.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*readdir) (struct file *, void *, filldir_t);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This field should be </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">for device files; it is used for reading directories and is useful only for filesystems.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned int (*poll) (struct file *, struct poll_table_struct *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">poll </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is the back end of three system calls: </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">poll, epoll, </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">select</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, all of which are used to query whether a read or write to one or more file descriptors would block. The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">poll </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method should return a bit mask indicating whether nonblocking reads or writes are possible, and, possibly, provide the kernel with information that can be used to put the calling process to sleep until I/O becomes possible. If a driver leaves its </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">poll </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the device is assumed to be both readable and writable without blocking.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*ioctl) (struct inode *, struct file *, unsigned int, unsigned long);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ioctl </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call offers a way to issue device-specific commands (such as formatting a track of a floppy disk, which is neither reading nor writing). Additionally, a few </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ioctl </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">commands are recognized by the kernel without referring to the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">fops </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">table. If the device doesn&#8217;t provide an </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ioctl </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method, the system call returns an error for any request that isn&#8217;t predefined (</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-ENOTTY</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>No such ioctl for device</SPAN>&#8221;<SPAN lang=EN-US>).</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*mmap) (struct file *, struct vm_area_struct *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">mmap </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is used to request a mapping of device memory to a process&#8217;s address space. If this method is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">mmap </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call returns </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-ENODEV</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*open) (struct inode *, struct file *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Though this is always the first operation performed on the device file, the driver is not required to declare a corresponding method. If this entry is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, opening the device always succeeds, but your driver isn&#8217;t notified.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*flush) (struct file *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">flush </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">operation is invoked when a process closes its copy of a file descriptor for a device; it should execute (and wait for) any outstanding operations on the device. This must not be confused with the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fsync </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">operation requested by user programs. Currently, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">flush </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is used in very few drivers; the SCSI tape driver uses it, for example, to ensure that all data written makes it to the tape before the device is closed. If </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">flush </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the kernel simply ignores the user application request.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*release) (struct inode *, struct file *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This operation is invoked when the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is being released. Like </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">can be </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">*(</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> * Note that </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">isn&#8217;t invoked every time a process calls </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Whenever a </SPAN><SPAN lang=EN-US style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 7.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT size=3>file </FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is shared (for example, after a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fork </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dup</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">), </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">won&#8217;t be invoked until all copies are closed. If you need to flush pending data when any copy is closed, you should implement the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">flush </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">)</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*fsync) (struct file *, struct dentry *, int);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This method is the back end of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fsync </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call, which a user calls to flush any pending data. If this pointer is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the system call returns </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-EINVAL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*aio_fsync)(struct kiocb *, int);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This is the asynchronous version of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fsync </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*fasync) (int, struct file *, int);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This operation is used to notify the device of a change in its </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">FASYNC </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">flag. Asynchronous notification is an advanced topic and is described in Chapter 6. The field can be </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">if the driver doesn&#8217;t support asynchronous notification.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*lock) (struct file *, int, struct file_lock *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">lock </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is used to implement file locking; locking is an indispensable feature for regular files but is almost never implemented by device drivers.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*readv) (struct file *, const struct iovec *, unsigned long, loff_t *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*writev) (struct file *, const struct iovec *, unsigned long, loff_t *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">These methods implement scatter/gather read and write operations. Applications occasionally need to do a single read or write operation involving multiple memory areas; these system calls allow them to do so without forcing extra copy operations on the data. If these function pointers are left </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods are called (perhaps more than once) instead.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*sendfile)(struct file *, loff_t *, size_t, read_actor_t, void *);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This method implements the read side of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sendfile </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call, which moves the data from one file descriptor to another with a minimum of copying. It is used, for example, by a web server that needs to send the contents of a file out a network connection. Device drivers usually leave </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sendfile </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sendpage </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the other half of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sendfile</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">; it is called by the kernel to send data, one page at a time, to the corresponding file. Device drivers do not usually implement </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">sendpage</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>long, unsigned long, unsigned long);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The purpose of this method is to find a suitable location in the process&#8217;s address space to map in a memory segment on the underlying device. This task is normally performed by the memory management code; this method exists to allow drivers to enforce any alignment requirements a particular device may have. Most drivers can leave this method </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*check_flags)(int)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This method allows a module to check the flags passed to an </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fcntl(F_SETFL...) </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">call.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int (*dir_notify)(struct file *, unsigned long);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This method is invoked when an application uses </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fcntl </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to request directory change notifications. It is useful only to filesystems; drivers need not implement </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dir_notify</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">device driver implements only the most important device methods. Its </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is initialized as follows:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file_operations scull_fops = {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.owner = THIS_MODULE,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.llseek = scull_llseek,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.read = scull_read,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.write = scull_write,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.ioctl = scull_ioctl,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.open = scull_open,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>.release = scull_release,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>};</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>This declaration uses the standard C tagged structure initialization syntax. This syntax is preferred because it makes drivers more portable across changes in the definitions of the structures and, arguably, makes the code more compact and readable.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Tagged initialization allows the reordering of structure members; in some cases, substantial performance improvements have been realized by placing pointers to frequently accessed members in the same hardware cache line.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>The file Structure</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/fs.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, is the second most important data structure used in device drivers. Note that a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">has nothing to do with the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">FILE </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">pointers of user-space programs. A </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">FILE </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is defined in the C library and never appears in kernel code. A </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, on the other hand, is a kernel structure that never appears in user programs.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure represents an </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open file</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. (It is not specific to device drivers; every open file in the system has an associated </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in kernel space.) It is created by the kernel on </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and is passed to any function that operates on the file, until the last </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. After all instances of the file are closed, the kernel releases the data structure.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">In the kernel sources, a pointer to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is usually called either </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>file pointer</SPAN>&#8221;<SPAN lang=EN-US>). We&#8217;ll consistently call the pointer </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to prevent ambiguities with the structure itself. Thus, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">refers to the structure and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to a pointer to the structure.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The most important fields of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are shown here. As in the previous section, the list can be skipped on a first reading. However, later in this chapter, when we face some real C code, we&#8217;ll discuss the fields in more detail.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>mode_t f_mode;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The file mode identifies the file as either readable or writable (or both), by means of the bits </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">FMODE_READ </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">FMODE_WRITE</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. You might want to check this field for read/write permission in your </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ioctl </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">function, but you don&#8217;t need to check permissions for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, because the kernel checks before invoking your method. An attempt to read or write when the file has not been opened for that type of access is rejected without the driver even knowing about it.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>loff_t f_pos;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The current reading or writing position. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">loff_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is a 64-bit value on all platforms (</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">long long </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">gcc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">terminology). The driver can read this value if it needs to know the current position in the file but should not normally change it; </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should update a position using the pointer they receive as the last argument instead of acting on </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp-&gt;f_pos </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">directly. The one exception to this rule is in the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">llseek </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method, the purpose of which is to change the file position. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">unsigned int f_flags;</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">These are the file flags, such as </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">O_RDONLY</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">O_NONBLOCK</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">O_SYNC</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. A driver should check the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">O_NONBLOCK </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">flag to see if nonblocking operation has been requested (we discuss nonblocking I/O in the section </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Blocking and Nonblocking Operations</SPAN>&#8221; <SPAN lang=EN-US>in Chapter 1); the other flags are seldom used. In particular, read/write permission should be checked using </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">f_mode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">rather than </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">f_flags</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. All the flags are defined in the header </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/fcntl.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file_operations *f_op;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The operations associated with the file. The kernel assigns the pointer as part of its implementation of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and then reads it when it needs to dispatch any operations.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The value in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp-&gt;f_op </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is never saved by the kernel for later reference; this means that you can change the file operations associated with your file, and the new methods will be effective after you return to the caller. For example, the code for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">associated with major number 1 (</SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev/null</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/dev/zero</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and so on) substitutes the operations in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp-&gt;f_op </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">depending on the minor number being opened. This practice allows the implementation of several behaviors under the same major number without introducing overhead at each system call. The ability to replace the file operations is the kernel equivalent of </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>method overriding</SPAN>&#8221; <SPAN lang=EN-US>in object-oriented programming.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void *private_data;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call sets this pointer to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">before calling the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method for the driver. You are free to make its own use of the field or to ignore it; you can use the field to point to allocated data, but then you must remember to free that memory in the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method before the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is destroyed by the kernel. </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">private_data </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is a useful resource for preserving state information across system calls and is used by most of our sample modules.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct dentry *f_dentry;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The directory entry (</SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dentry</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) structure associated with the file. Device driver writers normally need not concern themselves with dentry structures, other than to access the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure as </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp-&gt;f_dentry-&gt;d_inode</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The real structure has a few more fields, but they aren&#8217;t useful to device drivers. We can safely ignore those fields, because drivers never create </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures; they only access structures created elsewhere.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>The inode Structure</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">inode </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is used by the kernel internally to represent files. Therefore, it is different from the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure that represents an open file descriptor. There can be numerous </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures representing multiple open descriptors on a single file, but they all point to a single </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure contains a great deal of information about the file. As a general rule, only two fields of this structure are of interest for writing driver code:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev_t i_rdev;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>For inodes that represent device files, this field contains the actual device number.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct cdev *i_cdev;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the kernel&#8217;s internal structure that represents char devices; this field contains a pointer to that structure when the inode refers to a char device file.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The type of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">i_rdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">changed over the course of the 2.5 development series, breaking a lot of drivers. As a way of encouraging more portable programming, the kernel developers have added two macros that can be used to obtain the major and minor number from an inode:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned int iminor(struct inode *inode);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned int imajor(struct inode *inode);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">In the interest of not being caught by the next change, these macros should be used instead of manipulating </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">i_rdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">directly.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>Char Device Registration</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As we mentioned, the kernel uses structures of type </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to represent char devices internally. Before the kernel invokes your device&#8217;s operations, you must allocate and register one or more of these structures.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">*(</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> * There is an older mechanism that avoids the use of </SPAN><SPAN lang=EN-US style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 7.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT size=3>cdev </FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures (which we discuss in the section </SPAN><SPAN style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>The Older Way</SPAN>&#8221;<SPAN lang=EN-US>). New code should use the newer technique, however.</SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">To do so, your code should include </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/cdev.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, where the structure and its associated helper functions are defined.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">There are two ways of allocating and initializing one of these structures. If you wish to obtain a standalone </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure at runtime, you may do so with code such as:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct cdev *my_cdev = cdev_alloc( );</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>my_cdev-&gt;ops = &amp;my_fops;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Chances are, however, that you will want to embed the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure within a device-specific structure of your own; that is what </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">does. In that case, you should initialize the structure that you have already allocated with:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void cdev_init(struct cdev *cdev, struct file_operations *fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Either way, there is one other </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">field that you need to initialize. Like the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">has an </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">owner </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">field that should be set to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">THIS_MODULE</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Once the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is set up, the final step is to tell the kernel about it with a call to:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int cdev_add(struct cdev *dev, dev_t num, unsigned int count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Here, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">num </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the first device number to which this device responds, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the number of device numbers that should be associated with the device. Often </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is one, but there are situations where it makes sense to have more than one device number correspond to a specific device. Consider, for example, the SCSI tape driver, which allows user space to select operating modes (such as density) by assigning multiple minor numbers to each physical device.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">There are a couple of important things to keep in mind when using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cdev_add</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. The first is that this call can fail. If it returns a negative error code, your device has not been added to the system. It almost always succeeds, however, and that brings up the other point: as soon as </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cdev_add </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">returns, your device is </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>live</SPAN>&#8221;<SPAN lang=EN-US> and its operations can be called by the kernel. You should not call </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cdev_add </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">until your driver is completely ready to handle operations on the device.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>To remove a char device from the system, call:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void cdev_del(struct cdev *dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Clearly, you should not access the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure after passing it to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cdev_del</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>Device Registration in scull</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Internally, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">represents each device with a structure of type </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct scull_dev</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. This structure is defined as:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_dev {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_qset *data; /* Pointer to first quantum set */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int quantum; /* the current quantum size */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int qset; /* the current array size */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long size; /* amount of data stored here */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned int access_key; /* used by sculluid and scullpriv */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct semaphore sem; /* mutual exclusion semaphore */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct cdev cdev; /* Char device structure */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>};</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">We discuss the various fields in this structure as we come to them, but for now, we call attention to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that interfaces our device to the kernel. This structure must be initialized and added to the system as described above; the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">code that handles this task is:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>static void scull_setup_cdev(struct scull_dev *dev, int index)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int err, devno = MKDEV(scull_major, scull_minor + index);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>cdev_init(&amp;dev-&gt;cdev, &amp;scull_fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;cdev.owner = THIS_MODULE;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;cdev.ops = &amp;scull_fops;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>err = cdev_add (&amp;dev-&gt;cdev, devno, 1);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* Fail gracefully if need be */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (err)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>printk(KERN_NOTICE "Error %d adding scull%d", err, index);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Since the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is embedded within </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct scull_dev</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cdev_init </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">must be called to perform the initialization of that structure.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>The Older Way</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If you dig through much driver code in the 2.6 kernel, you may notice that quite a few char drivers do not use the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">interface that we have just described. What you are seeing is older code that has not yet been upgraded to the 2.6 interface. Since that code works as it is, this upgrade may not happen for a long time. For completeness, we describe the older char device registration interface, but new code should not use it; this mechanism will likely go away in a future kernel.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The classic way to register a char device driver is with:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int register_chrdev(unsigned int major, const char *name,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file_operations *fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Here, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">major </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the major number of interest, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the name of the driver (it appears in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">/proc/devices</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">), and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">fops </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the default </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure. A call to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">registers minor numbers 0</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8211;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">255 for the given </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">major</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and sets up a default </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure for each. Drivers using this interface must be prepared to handle </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">calls on all 256 minor numbers (whether they correspond to real devices or not), and they cannot use major or minor numbers greater than 255.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If you use </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the proper function to remove your device(s) from the system is:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int unregister_chrdev(unsigned int major, const char *name);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">major </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">must be the same as those passed to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, or the call will fail.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt"><FONT class=extract>open and release</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Now that we&#8217;ve taken a quick look at the fields, we start using them in real </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">functions.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt"><FONT class=extract>The open Method</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is provided for a driver to do any initialization in preparation for later operations. In most drivers, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should perform the following tasks:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Check for device-specific errors (such as device-not-ready or similar hardware problems)</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Initialize the device if it is being opened for the first time</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Update the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">f_op </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">pointer, if necessary</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Allocate and fill any data structure to be put in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">filp-&gt;private_data</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The first order of business, however, is usually to identify which device is being opened. Remember that the prototype for the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>int (*open)(struct inode *inode, struct file *filp);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">inode </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">argument has the information we need in the form of its </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">i_cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">field, which contains the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure we set up before. The only problem is that we do not normally want the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure itself, we want the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull_dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure that contains that </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure. The C language lets programmers play all sorts of tricks to make that kind of conversion; programming such tricks is error prone, however, and leads to code that is difficult for others to read and understand. Fortunately, in this case, the kernel hackers have done the tricky stuff for us, in the form of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">container_of </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">macro, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">&lt;linux/kernel.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>container_of(pointer, container_type, container_field);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This macro takes a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">pointer </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to a field of type </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">container_field</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, within a structure of type </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">container_type</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and returns a pointer to the containing structure. In </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull_open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, this macro is used to find the appropriate device structure:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>struct scull_dev *dev; /* device information */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>dev = container_of(inode-&gt;i_cdev, struct scull_dev, cdev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>filp-&gt;private_data = dev; /* for other methods */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Once it has found the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull_dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">stores a pointer to it in the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">private_data </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">field of the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure for easier access in the future.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The other way to identify the device being opened is to look at the minor number stored in the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure. If you register your device with </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">register_chrdev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, you must use this technique. Be sure to use </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">iminor </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to obtain the minor number from the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure, and make sure that it corresponds to a device that your driver is actually prepared to handle.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The (slightly simplified) code for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int scull_open(struct inode *inode, struct file *filp)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_dev *dev; /* device information */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev = container_of(inode-&gt;i_cdev, struct scull_dev, cdev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>filp-&gt;private_data = dev; /* for other methods */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* now trim to 0 the length of the device if open was write-only */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if ( (filp-&gt;f_flags &amp; O_ACCMODE) = = O_WRONLY) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>scull_trim(dev); /* ignore errors */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return 0; /* success */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The code looks pretty sparse, because it doesn&#8217;t do any particular device handling when </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is called. It doesn&#8217;t need to, because the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">device is global and persistent by design. Specifically, there&#8217;s no action such as </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>initializing the device on first open,</SPAN>&#8221;<SPAN lang=EN-US> because we don&#8217;t keep an open count for </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The only real operation performed on the device is truncating it to a length of 0 when the device is opened for writing. This is performed because, by design, overwriting a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">device with a shorter file results in a shorter device data area. This is similar to the way opening a regular file for writing truncates it to zero length. The operation does nothing if the device is opened for reading.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">We&#8217;ll see later how a real initialization works when we look at the code for the other </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">personalities.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>The release Method</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The role of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is the reverse of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Sometimes you&#8217;ll find that the method implementation is called </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-SemiLightI; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLightI; mso-font-kerning: 0pt"><FONT face=Calibri>device</FONT></SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">_close </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">instead of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: TheSansMonoCondensed-SemiLightI; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLightI; mso-font-kerning: 0pt"><FONT face=Calibri>device</FONT></SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">_release</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Either way, the device method should perform the following tasks:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Deallocate anything that </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">allocated in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp-&gt;private_data</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Shut down the device on last close</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The basic form of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">has no hardware to shut down, so the code required is minimal:</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">*(</SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> * The other flavors of the device are closed by different functions because </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">substituted a different </SPAN><SPAN lang=EN-US style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 7.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT size=3>filp-&gt;f_op </FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 13pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">for each device. We&#8217;ll discuss these as we introduce each flavor.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12.5pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 7.5pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">)</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int scull_release(struct inode *inode, struct file *filp)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return 0;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">You may be wondering what happens when a device file is closed more times than it is opened. After all, the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dup </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fork </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system calls create copies of open files without calling </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">; each of those copies is then closed at program termination. For example, most programs don&#8217;t open their </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">stdin </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">file (or device), but all of them end up closing it. How does a driver know when an open device file has </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">really </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">been closed?</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The answer is simple: not every </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call causes the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method to be invoked. Only the calls that actually release the device data structure invoke the method</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>hence its name. The kernel keeps a counter of how many times a </SPAN></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure is being used. Neither </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fork </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">nor </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dup </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">creates a new </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure (only </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">does that); they just increment the counter in the existing structure. The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call executes the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method only when the counter for the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure drops to </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, which happens when the structure is destroyed. This relationship between the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method and the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call guarantees that your driver sees only one </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">call for each </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">open</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Note that the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">flush </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">is </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">called every time an application calls </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. However, very few drivers implement </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">flush</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, because usually there&#8217;s nothing to perform at close time unless </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">release </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is involved.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">As you may imagine, the previous discussion applies even when the application terminates without explicitly closing its open files: the kernel automatically closes any file at process exit time by internally using the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">close </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>scull&#8217;s Memory Usage</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Before introducing the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">operations, we&#8217;d better look at how and why </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">performs memory allocation. </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>How</SPAN>&#8221;<SPAN lang=EN-US> is needed to thoroughly understand the code, and </SPAN>&#8220;<SPAN lang=EN-US>why</SPAN>&#8221;<SPAN lang=EN-US> demonstrates the kind of choices a driver writer needs to make, although </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is definitely not typical as a device.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This section deals only with the memory allocation policy in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and doesn&#8217;t show the hardware management skills you need to write real drivers. These skills are introduced in Chapters 9 and 10. Therefore, you can skip this section if you&#8217;re not interested in understanding the inner workings of the memory-oriented </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">driver.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The region of memory used by </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, also called a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">device</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, is variable in length. The more you write, the more it grows; trimming is performed by overwriting the device with a shorter file.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">driver introduces two core functions used to manage memory in the Linux kernel. These functions, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/slab.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, are:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void *kmalloc(size_t size, int flags);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void kfree(void *ptr);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">A call to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kmalloc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">attempts to allocate </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">size </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">bytes of memory; the return value is a pointer to that memory or </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">if the allocation fails. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">flags </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">argument is used to describe how the memory should be allocated; we examine those flags in detail in Chapter 8. For now, we always use </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">GFP_KERNEL</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Allocated memory should be freed with </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kfree</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. You should never pass anything to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kfree </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that was not obtained from </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kmalloc</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. It is, however, legal to pass a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">NULL </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">pointer to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kfree</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kmalloc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is not the most efficient way to allocate large areas of memory (see Chapter 8), so the implementation chosen for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is not a particularly smart one. The source code for a smart implementation would be more difficult to read, and the aim of this section is to show </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, not memory management. That&#8217;s why the code just uses </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kmalloc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kfree </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">without resorting to allocation of whole pages, although that approach would be more efficient.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">On the flip side, we didn&#8217;t want to limit the size of the </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>device</SPAN>&#8221;<SPAN lang=EN-US> area, for both a philosophical reason and a practical one. Philosophically, it&#8217;s always a bad idea to put arbitrary limits on data items being managed. Practically, </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">can be used to temporarily eat up your system&#8217;s memory in order to run tests under low-memory conditions. Running such tests might help you understand the system&#8217;s internals. You can use the command </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cp /dev/zero /dev/scull0 </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to eat all the real RAM with </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and you can use the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dd </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">utility to choose how much data is copied to the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">device. In </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, each device is a linked list of pointers, each of which points to a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure. Each such structure can refer, by default, to at most four million bytes, through an array of intermediate pointers. The released source uses an array of 1000 pointers to areas of 4000 bytes. We call each memory area a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">quantum </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and the array (or its length) a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">quantum set</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. A </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">device and its memory areas are shown in Figure 3-1.</SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt; mso-no-proof: yes"><?xml:namespace prefix = "v" /><v:shapetype id=_x0000_t75 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><?xml:namespace prefix = "o" /><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype><v:shape id=&#22270;&#29255;_x0020_1 style="HEIGHT: 289.5pt; WIDTH: 451.5pt; VISIBILITY: visible; mso-wrap-style: square" o:spid="_x0000_i1026" type="#_x0000_t75"><v:imagedata src="file:///C:\Users\DONPOP~1\AppData\Local\Temp\msohtmlclip1\01\clip_image001.emz" o:title=""><FONT class=extract></FONT></v:imagedata></v:shape></SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>Figure 3-1. The layout of a scull device</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The chosen numbers are such that writing a single byte in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">consumes 8000 or 12,000 thousand bytes of memory: 4000 for the quantum and 4000 or 8000 for the quantum set (according to whether a pointer is represented in 32 bits or 64 bits on the target platform). If, instead, you write a huge amount of data, the overhead of the linked list is not too bad. There is only one list element for every four megabytes of data, and the maximum size of the device is limited by the computer&#8217;s memory size. Choosing the appropriate values for the quantum and the quantum set is a question of policy, rather than mechanism, and the optimal sizes depend on how the device is used. Thus, the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">driver should not force the use of any particular values for the quantum and quantum set sizes. In </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the user can change the values in charge in several ways: by changing the macros </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">SCULL_QUANTUM </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">SCULL_QSET </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull.h </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">at compile time, by setting the integer values </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_quantum </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_qset </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">at module load time, or by changing both the current and default values using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ioctl </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">at runtime. Using a macro and an integer value to allow both compile-time and load-time configuration is reminiscent of how the major number is selected. We use this technique for whatever value in the driver is arbitrary or related to policy.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The only question left is how the default numbers have been chosen. In this particular case, the problem is finding the best balance between the waste of memory resulting from half-filled quanta and quantum sets and the overhead of allocation, deallocation, and pointer chaining that occurs if quanta and sets are small. Additionally, the internal design of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kmalloc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should be taken into account. (We won&#8217;t pursue the point now, though; the innards of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">kmalloc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are explored in Chapter 8.) The choice of default numbers comes from the assumption that massive amounts of data are likely to be written to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">while testing it, although normal use of the device will most likely transfer just a few kilobytes of data.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">We have already seen the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">scull_dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure that represents our device internally. That structure&#8217;s </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">quantum </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">qset </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">fields hold the device&#8217;s quantum and quantum set sizes, respectively. The actual data, however, is tracked by a different structure, which we call </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct scull_qset</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_qset {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void **data;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_qset *next;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>};</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The next code fragment shows in practice how </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct scull_dev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct scull_qset </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are used to hold data. The function </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_trim </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is in charge of freeing the whole data area and is invoked by </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_open </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">when the file is opened for writing. It simply walks through the list and frees any quantum and quantum set it finds.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int scull_trim(struct scull_dev *dev)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_qset *next, *dptr;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int qset = dev-&gt;qset; /* "dev" is not-null */</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int i;</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>&nbsp;</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>&nbsp;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>for (dptr = dev-&gt;data; dptr; dptr = next) { /* all the list items */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (dptr-&gt;data) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>for (i = 0; i &lt; qset; i++)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>kfree(dptr-&gt;data[i]);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>kfree(dptr-&gt;data);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dptr-&gt;data = NULL;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>next = dptr-&gt;next;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>kfree(dptr);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;size = 0;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;quantum = scull_quantum;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;qset = scull_qset;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;data = NULL;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return 0;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_trim </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is also used in the module cleanup function to return memory used by </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to the system.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight"><FONT class=extract>read and write</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods both perform a similar task, that is, copying data from and to application code. Therefore, their prototypes are pretty similar, and it&#8217;s worth introducing them at the same time:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t read(struct file *filp, char __user *buff,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>size_t count, loff_t *offp);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t write(struct file *filp, const char __user *buff,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>size_t count, loff_t *offp);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">For both methods, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the file pointer and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the size of the requested data transfer. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">buff </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">argument points to the user buffer holding the data to be written or the empty buffer where the newly read data should be placed. Finally, </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">offp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is a pointer to a </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>long offset type</SPAN>&#8221;<SPAN lang=EN-US> object that indicates the file position the user is accessing. The return value is a </SPAN>&#8220;<SPAN lang=EN-US>signed size type</SPAN>&#8221;<SPAN lang=EN-US>; its use is discussed later.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Let us repeat that the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">buff </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">argument to the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods is a user-space pointer. Therefore, it cannot be directly dereferenced by kernel code. There are a few reasons for this restriction:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Depending on which architecture your driver is running on, and how the kernel was configured, the user-space pointer may not be valid while running in kernel mode at all. There may be no mapping for that address, or it could point to some other, random data.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> Even if the pointer does mean the same thing in kernel space, user-space memory is paged, and the memory in question might not be resident in RAM when the system call is made. Attempting to reference the user-space memory directly could generate a page fault, which is something that kernel code is not allowed to do. The result would be an </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>oops,</SPAN>&#8221;<SPAN lang=EN-US> which would result in the death of the process that made the system call.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> The pointer in question has been supplied by a user program, which could be buggy or malicious. If your driver ever blindly dereferences a user-supplied pointer, it provides an open doorway allowing a user-space program to access or overwrite memory anywhere in the system. If you do not wish to be responsible for compromising the security of your users&#8217; systems, you cannot ever dereference a user-space pointer directly.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Obviously, your driver must be able to access the user-space buffer in order to get its job done. This access must always be performed by special, kernel-supplied functions, however, in order to be safe. We introduce some of those functions (which are defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;asm/uaccess.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) here, and the rest in the section </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Using the ioctl Argument</SPAN>&#8221; <SPAN lang=EN-US>in Chapter 1; they use some special, architecture-dependent magic to ensure that data transfers between kernel and user space happen in a safe and correct way.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The code for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">needs to copy a whole segment of data to or from the user address space. This capability is offered by the following kernel functions, which copy an arbitrary array of bytes and sit at the heart of most </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">implementations:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long copy_to_user(void __user *to,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>const void *from,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long copy_from_user(void *to,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>const void __user *from,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Although these functions behave like normal </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">memcpy </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">functions, a little extra care must be used when accessing user space from kernel code. The user pages being addressed might not be currently present in memory, and the virtual memory subsystem can put the process to sleep while the page is being transferred into place.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>This happens, for example, when the page must be retrieved from swap space. The net result for the driver writer is that any function that accesses user space must be reentrant, must be able to execute concurrently with other driver functions, and, in particular, must be in a position where it can legally sleep. We return to this subject in Chapter 5.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The role of the two functions is not limited to copying data to and from user-space: they also check whether the user space pointer is valid. If the pointer is invalid, no copy is performed; if an invalid address is encountered during the copy, on the other hand, only part of the data is copied. In both cases, the return value is the amount of memory still to be copied. The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">code looks for this error return, and returns </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-EFAULT </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to the user if it&#8217;s not </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The topic of user-space access and invalid user space pointers is somewhat advanced and is discussed in Chapter 6. However, it&#8217;s worth noting that if you don&#8217;t need to check the user-space pointer you can invoke </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">__copy_to_user </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">__copy_from_user </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">instead. This is useful, for example, if you know you already checked the argument. Be careful, however; if, in fact, you do </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">not </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">check a user-space pointer that you pass to these functions, then you can create kernel crashes and/or security holes. As far as the actual device methods are concerned, the task of the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method is to copy data from the device to user space (using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">copy_to_user</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">), while the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method must copy data from user space to the device (using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">copy_from_user</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">). Each </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call requests transfer of a specific number of bytes, but the driver is free to transfer less data</SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8212;<SPAN lang=EN-US>the exact rules are slightly different for reading and writing and are described later in this chapter.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Whatever the amount of data the methods transfer, they should generally update the file position at </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">*offp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to represent the current file position after successful completion of the system call. The kernel then propagates the file position change back into the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure when appropriate. The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">pread </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">pwrite </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system calls have different semantics, however; they operate from a given file offset and do not change the file position as seen by any other system calls. These calls pass in a pointer to the user-supplied position, and discard the changes that your driver makes.</SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Figure 3-2 represents how a typical </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">implementation uses its arguments.</SPAN></FONT></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt; mso-no-proof: yes"><v:shape id=&#22270;&#29255;_x0020_3 style="HEIGHT: 333pt; WIDTH: 530.25pt; VISIBILITY: visible; mso-wrap-style: square" o:spid="_x0000_i1025" type="#_x0000_t75"><v:imagedata src="file:///C:\Users\DONPOP~1\AppData\Local\Temp\msohtmlclip1\01\clip_image003.emz" o:title=""><FONT class=extract></FONT></v:imagedata></v:shape></SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt"><FONT class=extract>Figure 3-2. The arguments to read</FONT></SPAN></I></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Both the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods return a negative value if an error occurs. A return value greater than or equal to 0, instead, tells the calling program how many bytes have been successfully transferred. If some data is transferred correctly and then an error happens, the return value must be the count of bytes successfully transferred, and the error does not get reported until the next time the function is called. Implementing this convention requires, of course, that your driver remember that the error has occurred so that it can return the error status in the future.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Although kernel functions return a negative number to signal an error, and the value of the number indicates the kind of error that occurred (as introduced in Chapter 2), programs that run in user space always see </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8211;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">1 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">as the error return value. They need to access the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">errno </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">variable to find out what happened. The user-space behavior is dictated by the POSIX standard, but that standard does not make requirements on how the kernel operates internally.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka"><FONT class=extract>The read Method</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The return value for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is interpreted by the calling application program:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> If the value equals the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">argument passed to the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call, the requested number of bytes has been transferred. This is the optimal case.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> If the value is positive, but smaller than </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, only part of the data has been transferred. This may happen for a number of reasons, depending on the device. Most often, the application program retries the read. For instance, if you read using the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fread </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">function, the library function reissues the system call until completion of the requested data transfer.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> If the value is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, end-of-file was reached (and no data was read).</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> A negative value means there was an error. The value specifies what the error was, according to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/errno.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Typical values returned on error include </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight; mso-ascii-font-family: TheSansMonoCondensed-SemiLight"><FONT face=Calibri>&#8211;</FONT></SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">EINTR </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(interrupted system call) or </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">-EFAULT </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(bad address).</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">What is missing from the preceding list is the case of </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>there is no data, but it may arrive later.</SPAN>&#8221;<SPAN lang=EN-US> In this case, the </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">system call should block. We&#8217;ll deal with blocking input in Chapter 6.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">code takes advantage of these rules. In particular, it takes advantage of the partial-read rule. Each invocation of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull_read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">deals only with a single data quantum, without implementing a loop to gather all the data; this makes the code shorter and easier to read. If the reading program really wants more data, it reiterates the call. If the standard I/O library (i.e., </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">fread</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">) is used to read the device, the application won&#8217;t even notice the quantization of the data transfer.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If the current read position is greater than the device size, the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method of </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">returns </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0 </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to signal that there&#8217;s no data available (in other words, we&#8217;re at end-of-file). This situation can happen if process A is reading the device while process B opens it for writing, thus truncating the device to a length of 0. Process A suddenly finds itself past end-of-file, and the next </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">call returns </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Here is the code for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(ignore the calls to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">down_interruptible </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">up </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">for now; we will get to them in the next chapter):</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t scull_read(struct file *filp, char __user *buf, size_t count,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>loff_t *f_pos)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_dev *dev = filp-&gt;private_data;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct scull_qset *dptr; /* the first listitem */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int quantum = dev-&gt;quantum, qset = dev-&gt;qset;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int itemsize = quantum * qset; /* how many bytes in the listitem */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int item, s_pos, q_pos, rest;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t retval = 0;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (down_interruptible(&amp;dev-&gt;sem))</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return -ERESTARTSYS;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (*f_pos &gt;= dev-&gt;size)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>goto out;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (*f_pos + count &gt; dev-&gt;size)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>count = dev-&gt;size - *f_pos;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* find listitem, qset index, and offset in the quantum */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>item = (long)*f_pos / itemsize;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>rest = (long)*f_pos % itemsize;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>s_pos = rest / quantum; q_pos = rest % quantum;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* follow the list up to the right position (defined elsewhere) */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dptr = scull_follow(dev, item);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (dptr = = NULL || !dptr-&gt;data || ! dptr-&gt;data[s_pos])</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>goto out; /* don't fill holes */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* read only up to the end of this quantum */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (count &gt; quantum - q_pos)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>count = quantum - q_pos;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (copy_to_user(buf, dptr-&gt;data[s_pos] + q_pos, count)) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>retval = -EFAULT;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>goto out;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>*f_pos += count;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>retval = count;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>out:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>up(&amp;dev-&gt;sem);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return retval;</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt"><FONT class=extract>The write Method</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">write</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, like </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">read</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, can transfer less data than was requested, according to the following rules for the return value:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> If the value equals </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">count</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, the requested number of bytes has been transferred.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> If the value is positive, but smaller than </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">count</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, only part of the data has been transferred. The program will most likely retry writing the rest of the data.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> If the value is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">0</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, nothing was written. This result is not an error, and there is no reason to return an error code. Once again, the standard library retries the call to </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">write</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. We&#8217;ll examine the exact meaning of this case in Chapter 6, where blocking </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is introduced.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: &#23435;&#20307;; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: &#23435;&#20307;; mso-font-kerning: 0pt">&#8226;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"> A negative value means an error occurred; as for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">read</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, valid error values are those defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">&lt;linux/errno.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Unfortunately, there may still be misbehaving programs that issue an error message and abort when a partial transfer is performed. This happens because some programmers are accustomed to seeing </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">calls that either fail or succeed completely, which is actually what happens most of the time and should be supported by devices as well. This limitation in the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">implementation could be fixed, but we didn&#8217;t want to complicate the code more than necessary.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">code for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">deals with a single quantum at a time, as the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">method does:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>ssize_t scull_write(struct file *filp, const char __user *buf, size_t count,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>loff_t *f_pos)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>struct scull_dev *dev = filp-&gt;private_data;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>struct scull_qset *dptr;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>int quantum = dev-&gt;quantum, qset = dev-&gt;qset;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>int itemsize = quantum * qset;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>int item, s_pos, q_pos, rest;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>ssize_t retval = -ENOMEM; /* value used in "goto out" statements */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>if (down_interruptible(&amp;dev-&gt;sem))</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>return -ERESTARTSYS;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>/* find listitem, qset index and offset in the quantum */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>item = (long)*f_pos / itemsize;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>rest = (long)*f_pos % itemsize;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>s_pos = rest / quantum; q_pos = rest % quantum;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>/* follow the list up to the right position */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>dptr = scull_follow(dev, item);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>if (dptr = = NULL)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>goto out;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>if (!dptr-&gt;data) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>dptr-&gt;data = kmalloc(qset * sizeof(char *), GFP_KERNEL);</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt; mso-hansi-font-family: Myriad-CnSemibold"><FONT class=extract>if (!dptr-&gt;data)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>goto out;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>memset(dptr-&gt;data, 0, qset * sizeof(char *));</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (!dptr-&gt;data[s_pos]) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dptr-&gt;data[s_pos] = kmalloc(quantum, GFP_KERNEL);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (!dptr-&gt;data[s_pos])</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>goto out;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* write only up to the end of this quantum */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (count &gt; quantum - q_pos)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>count = quantum - q_pos;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (copy_from_user(dptr-&gt;data[s_pos]+q_pos, buf, count)) {</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>retval = -EFAULT;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>goto out;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>*f_pos += count;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>retval = count;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>/* update the size */</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>if (dev-&gt;size &lt; *f_pos)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev-&gt;size = *f_pos;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>out:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>up(&amp;dev-&gt;sem);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>return retval;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>}</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 24pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight"><FONT class=extract>readv and writev</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Unix systems have long supported two system calls named </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">readv </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">writev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. These </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>vector</SPAN>&#8221;<SPAN lang=EN-US> versions of </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">take an array of structures, each of which contains a pointer to a buffer and a length value. A </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">readv </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">call would then be expected to read the indicated amount into each buffer in turn. </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">writev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, instead, would gather together the contents of each buffer and put them out as a single write operation.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">If your driver does not supply methods to handle the vector operations, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">readv </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">writev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">are implemented with multiple calls to your </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">methods. In many situations, however, greater efficiency is acheived by implementing </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">readv </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">writev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">directly.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The prototypes for the vector operations are:</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*readv) (struct file *filp, const struct iovec *iov,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long count, loff_t *ppos);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>ssize_t (*writev) (struct file *filp, const struct iovec *iov,</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long count, loff_t *ppos);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Here, the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">filp </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">ppos </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">arguments are the same as for </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iovec </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">&lt;linux/uio.h&gt;</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, looks like:</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct iovec</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>{</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void _ _user *iov_base;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>__kernel_size_t iov_len;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>};</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Each </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iovec </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">describes one chunk of data to be transferred; it starts at </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iov_base </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">(in user space) and is </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iov_len </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">bytes long. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">count </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">parameter tells the method how many </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iovec </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures there are. These structures are created by the application, but the kernel copies them into kernel space before calling the driver.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The simplest implementation of the vectored operations would be a straightforward loop that just passes the address and length out of each </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iovec </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">to the driver&#8217;s </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">function. Often, however, efficient and correct behavior requires that the driver do something smarter. For example, a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">writev </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">on a tape drive should write the contents of all the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">iovec </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures as a single record on the tape.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Many drivers, however, gain no benefit from implementing these methods themselves. Therefore, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">omits them. The kernel emulates them with </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">read </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">write</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and the end result is the same.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight"><FONT class=extract>Playing with the New Devices</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Once you are equipped with the four methods just described, the driver can be compiled and tested; it retains any data you write to it until you overwrite it with new data. The device acts like a data buffer whose length is limited only by the amount of real RAM available. You can try using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cp</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">dd</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and input/output redirection to test out the driver.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">free </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">command can be used to see how the amount of free memory shrinks and expands according to how much data is written into </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">scull</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">To get more confident with reading and writing one quantum at a time, you can add a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">printk </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">at an appropriate point in the driver and watch what happens while an application reads or writes large chunks of data. Alternatively, use the </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">strace </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">utility to monitor the system calls issued by a program, together with their return values. Tracing a </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">cp </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">or an </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">ls -l &gt; /dev/scull0 </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">shows quantized reads and writes. Monitoring (and debugging) techniques are presented in detail in Chapter 4</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight"><FONT class=extract>Quick Reference</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This chapter introduced the following symbols and header files. The list of the fields in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is not repeated here.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/types.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev_t</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the type used to represent device numbers within the kernel.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int MAJOR(dev_t dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int MINOR(dev_t dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Macros that extract the major and minor numbers from a device number.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev_t MKDEV(unsigned int major, unsigned int minor);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Macro that builds a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">data item from the major and minor numbers.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/fs.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>filesystem</SPAN>&#8221;<SPAN lang=EN-US> header is the header required for writing device drivers. Many important functions and data structures are declared in here.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int register_chrdev_region(dev_t first, unsigned int count, char *name)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int alloc_chrdev_region(dev_t *dev, unsigned int firstminor, unsigned int</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>count, char *name)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void unregister_chrdev_region(dev_t first, unsigned int count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Functions that allow a driver to allocate and free ranges of device numbers.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should be used when the desired major number is known in advance; for dynamic allocation, use </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">alloc_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">instead.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int register_chrdev(unsigned int major, const char *name, struct file_operations *fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The old (pre-2.6) char device registration routine. It is emulated in the 2.6 kernel but should not be used for new code. If the major number is not 0, it is used unchanged; otherwise a dynamic number is assigned for this device.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int unregister_chrdev(unsigned int major, const char *name);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Function that undoes a registration made with </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Both </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">major </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">string must contain the same values that were used to register the driver.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file_operations;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct inode;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Three important data structures used by most device drivers. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure holds a char driver&#8217;s methods; </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">represents an open file, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">represents a file on disk.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/cdev.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct cdev *cdev_alloc(void);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void cdev_init(struct cdev *dev, struct file_operations *fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int cdev_add(struct cdev *dev, dev_t num, unsigned int count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void cdev_del(struct cdev *dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Functions for the management of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures, which represent char devices within the kernel.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/kernel.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>container_of(pointer, type, field);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>A convenience macro that may be used to obtain a pointer to a structure from a pointer to some other structure contained within it.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;asm/uaccess.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>This include file declares functions used by kernel code to move data to and from user space.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long copy_from_user (void *to, const void *from, unsigned long count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long copy_to_user (void *to, const void *from, unsigned long count);</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Copy data between user space and kernel space.</SPAN><SPAN lang=EN-US style="FONT-SIZE: 15.5pt; mso-bidi-font-size: 11.0pt"></SPAN></FONT></P></BODY>