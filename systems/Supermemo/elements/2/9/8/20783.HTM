<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 28pt; FONT-FAMILY: 'Myriad-CnSemibold','serif'; mso-bidi-font-size: 18.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight">Quick Reference</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This chapter introduced the following symbols and header files. The list of the fields in </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is not repeated here.</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/types.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev_t</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is the type used to represent device numbers within the kernel.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int MAJOR(dev_t dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int MINOR(dev_t dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Macros that extract the major and minor numbers from a device number.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>dev_t MKDEV(unsigned int major, unsigned int minor);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Macro that builds a </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">dev_t </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">data item from the major and minor numbers.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/fs.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The </SPAN><SPAN style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>filesystem</SPAN>&#8221;<SPAN lang=EN-US> header is the header required for writing device drivers. Many important functions and data structures are declared in here.</SPAN></SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int register_chrdev_region(dev_t first, unsigned int count, char *name)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int alloc_chrdev_region(dev_t *dev, unsigned int firstminor, unsigned int</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>count, char *name)</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void unregister_chrdev_region(dev_t first, unsigned int count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Functions that allow a driver to allocate and free ranges of device numbers.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">should be used when the desired major number is known in advance; for dynamic allocation, use </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">alloc_chrdev_region </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">instead.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int register_chrdev(unsigned int major, const char *name, struct file_operations *fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>The old (pre-2.6) char device registration routine. It is emulated in the 2.6 kernel but should not be used for new code. If the major number is not 0, it is used unchanged; otherwise a dynamic number is assigned for this device.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int unregister_chrdev(unsigned int major, const char *name);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Function that undoes a registration made with </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">register_chrdev</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">. Both </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">major </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">and the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">name </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">string must contain the same values that were used to register the driver.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file_operations;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct file;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct inode;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Three important data structures used by most device drivers. The </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">file_operations </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structure holds a char driver&#8217;s methods; </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct file </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">represents an open file, and </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">struct inode </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">represents a file on disk.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/cdev.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>struct cdev *cdev_alloc(void);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void cdev_init(struct cdev *dev, struct file_operations *fops);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>int cdev_add(struct cdev *dev, dev_t num, unsigned int count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>void cdev_del(struct cdev *dev);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Functions for the management of </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">cdev </SPAN><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">structures, which represent char devices within the kernel.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;linux/kernel.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>container_of(pointer, type, field);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>A convenience macro that may be used to obtain a pointer to a structure from a pointer to some other structure contained within it.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>#include &lt;asm/uaccess.h&gt;</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>This include file declares functions used by kernel code to move data to and from user space.</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long copy_from_user (void *to, const void *from, unsigned long count);</FONT></SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt"><FONT class=extract>unsigned long copy_to_user (void *to, const void *from, unsigned long count);</FONT></SPAN></P>
<P class=MsoNormal style="MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 15pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><FONT class=extract>Copy data between user space and kernel space.</FONT></SPAN>