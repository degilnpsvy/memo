<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Myriad-CnSemibold','serif'; FONT-SIZE: 24pt; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: Birka" lang=EN-US>The file Structure</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct file</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, defined in </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>&lt;linux/fs.h&gt;</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, is the second most important data structure used in device drivers. Note that a </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>has nothing to do with the </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>FILE </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>pointers of user-space programs. A </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>FILE </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>is defined in the C library and never appears in kernel code. A </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct file</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, on the other hand, is a kernel structure that never appears in user programs.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>structure represents an </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open file</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. (It is not specific to device drivers; every open file in the system has an associated </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>in kernel space.) It is created by the kernel on </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>and is passed to any function that operates on the file, until the last </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>close</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. After all instances of the file are closed, the kernel releases the data structure.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>In the kernel sources, a pointer to </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>is usually called either </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>or </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>(</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>file pointer</SPAN>&#8221;<SPAN lang=EN-US>). We&#8217;ll consistently call the pointer </SPAN></SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>to prevent ambiguities with the structure itself. Thus, </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>refers to the structure and </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>to a pointer to the structure.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The most important fields of </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>are shown here. As in the previous section, the list can be skipped on a first reading. However, later in this chapter, when we face some real C code, we&#8217;ll discuss the fields in more detail.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>mode_t f_mode;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The file mode identifies the file as either readable or writable (or both), by means of the bits </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>FMODE_READ </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>and </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>FMODE_WRITE</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. You might want to check this field for read/write permission in your </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>or </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>ioctl </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>function, but you don&#8217;t need to check permissions for </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>read </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>and </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>write</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, because the kernel checks before invoking your method. An attempt to read or write when the file has not been opened for that type of access is rejected without the driver even knowing about it.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>loff_t f_pos;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The current reading or writing position. </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>loff_t </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>is a 64-bit value on all platforms (</SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>long long </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>in </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>gcc </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>terminology). The driver can read this value if it needs to know the current position in the file but should not normally change it; </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>read </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>and </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>write </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>should update a position using the pointer they receive as the last argument instead of acting on </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp-&gt;f_pos </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>directly. The one exception to this rule is in the </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>llseek </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>method, the purpose of which is to change the file position. </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>unsigned int f_flags;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>These are the file flags, such as </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>O_RDONLY</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>O_NONBLOCK</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, and </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>O_SYNC</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. A driver should check the </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>O_NONBLOCK </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>flag to see if nonblocking operation has been requested (we discuss nonblocking I/O in the section </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>Blocking and Nonblocking Operations</SPAN>&#8221; <SPAN lang=EN-US>in Chapter 1); the other flags are seldom used. In particular, read/write permission should be checked using </SPAN></SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>f_mode </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>rather than </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>f_flags</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. All the flags are defined in the header </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>&lt;linux/fcntl.h&gt;</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct file_operations *f_op;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The operations associated with the file. The kernel assigns the pointer as part of its implementation of </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>and then reads it when it needs to dispatch any operations.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The value in </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp-&gt;f_op </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>is never saved by the kernel for later reference; this means that you can change the file operations associated with your file, and the new methods will be effective after you return to the caller. For example, the code for </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>associated with major number 1 (</SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>/dev/null</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>/dev/zero</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, and so on) substitutes the operations in </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp-&gt;f_op </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>depending on the minor number being opened. This practice allows the implementation of several behaviors under the same major number without introducing overhead at each system call. The ability to replace the file operations is the kernel equivalent of </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>method overriding</SPAN>&#8221; <SPAN lang=EN-US>in object-oriented programming.</SPAN></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>void *private_data;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>system call sets this pointer to </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>NULL </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>before calling the </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>method for the driver. You are free to make its own use of the field or to ignore it; you can use the field to point to allocated data, but then you must remember to free that memory in the </SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>release </SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>method before the </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>structure is destroyed by the kernel. </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>private_data </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>is a useful resource for preserving state information across system calls and is used by most of our sample modules.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct dentry *f_dentry;</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The directory entry (</SPAN><I><SPAN style="FONT-FAMILY: 'Birka-Italic','serif'; FONT-SIZE: 16pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>dentry</SPAN></I><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>) structure associated with the file. Device driver writers normally need not concern themselves with dentry structures, other than to access the </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>inode </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>structure as </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>filp-&gt;f_dentry-&gt;d_inode</SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>.</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The real structure has a few more fields, but they aren&#8217;t useful to device drivers. We can safely ignore those fields, because drivers never create </SPAN><SPAN style="FONT-FAMILY: 'TheSansMonoCondensed-SemiLight','serif'; FONT-SIZE: 14pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>file </SPAN><SPAN style="FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; FONT-SIZE: 15pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>structures; they only access structures created elsewhere.</SPAN>