kbuild.txt<BR>&nbsp;- developer information on kbuild 
<P></P>
<P>This file contains some assistance for using "make *config".</P>
<P></P>
<P>Use "make help" to list all of the possible configuration targets.</P>
<P>The xconfig ('qconf') and menuconfig ('mconf') programs also<BR>have embedded help text.&nbsp; Be sure to check it for navigation,<BR>search, and other general help text.</P>
<P>======================================================================<BR>General<BR>--------------------------------------------------</P>
<P><FONT class=extract>New kernel releases often introduce new config symbols.&nbsp; Often more<BR>important, new kernel releases may rename config symbols.&nbsp; When<BR>this happens, using a previously working .config file and running<BR>"make oldconfig" won't necessarily produce a working new kernel<BR>for you, so you may find that you need to see what NEW kernel<BR>symbols have been introduced.</FONT></P>
<P><FONT class=extract>To see a list of new config symbols when using "make oldconfig", use</FONT></P>
<P><FONT class=extract>&nbsp;cp user/some/old.config .config<BR>&nbsp;make listnewconfig</FONT></P>
<P><FONT class=extract>and the config program will list any new symbols, one per line.</FONT></P>
<P><FONT class=extract>&nbsp;scripts/diffconfig .config.old .config | less</FONT></P>
<P>______________________________________________________________________<BR><FONT class=extract>Environment variables for '*config'</FONT></P>
<P><FONT class=extract>KCONFIG_CONFIG<BR>--------------------------------------------------<BR>This environment variable can be used to specify a default kernel config<BR>file name to override the default name of ".config".</FONT></P>
<P><FONT class=extract>KCONFIG_OVERWRITECONFIG<BR>--------------------------------------------------<BR>If you set KCONFIG_OVERWRITECONFIG in the environment, Kconfig will not<BR>break symlinks when .config is a symlink to somewhere else.</FONT></P>
<P><FONT class=extract>CONFIG_<BR>--------------------------------------------------<BR>If you set CONFIG_ in the environment, Kconfig will prefix all symbols<BR>with its value when saving the configuration, instead of using the default,<BR>"CONFIG_".</FONT></P>
<P>______________________________________________________________________<BR><FONT class=extract>Environment variables for '{allyes/allmod/allno/rand}config'</FONT></P>
<P><FONT class=extract>KCONFIG_ALLCONFIG<BR>--------------------------------------------------<BR>(partially based on lkml email from/by Rob Landley, re: miniconfig)<BR>--------------------------------------------------<BR>The allyesconfig/allmodconfig/allnoconfig/randconfig variants can also<BR>use the environment variable KCONFIG_ALLCONFIG as a flag or a filename<BR>that contains config symbols that the user requires to be set to a<BR>specific value.&nbsp; If KCONFIG_ALLCONFIG is used without a filename where<BR>KCONFIG_ALLCONFIG == "" or KCONFIG_ALLCONFIG == "1", "make *config"<BR>checks for a file named "all{yes/mod/no/def/random}.config"<BR>(corresponding to the *config command that was used) for symbol values<BR>that are to be forced.&nbsp; If this file is not found, it checks for a<BR>file named "all.config" to contain forced values.</FONT></P>
<P><FONT class=extract>This enables you to create "miniature" config (miniconfig) or custom<BR>config files containing just the config symbols that you are interested<BR>in.&nbsp; Then the kernel config system generates the full .config file,<BR>including symbols of your miniconfig file.</FONT></P>
<P><FONT class=extract>This 'KCONFIG_ALLCONFIG' file is a config file which contains<BR>(usually a subset of all) preset config symbols.&nbsp; These variable<BR>settings are still subject to normal dependency checks.</FONT></P>
<P><FONT class=extract>Examples:<BR>&nbsp;KCONFIG_ALLCONFIG=custom-notebook.config make allnoconfig<BR>or<BR>&nbsp;KCONFIG_ALLCONFIG=mini.config make allnoconfig<BR>or<BR>&nbsp;make KCONFIG_ALLCONFIG=mini.config allnoconfig</FONT></P>
<P><FONT class=extract>These examples will disable most options (allnoconfig) but enable or<BR>disable the options that are explicitly listed in the specified<BR>mini-config files.</FONT></P>
<P>______________________________________________________________________<BR><FONT class=extract>Environment variables for 'randconfig'</FONT></P>
<P><FONT class=extract>KCONFIG_SEED<BR>--------------------------------------------------<BR>You can set this to the integer value used to seed the RNG, if you want<BR>to somehow debug the behaviour of the kconfig parser/frontends.<BR>If not set, the current time will be used.</FONT></P>
<P><FONT class=extract>KCONFIG_PROBABILITY<BR>--------------------------------------------------<BR>This variable can be used to skew the probabilities. This variable can<BR>be unset or empty, or set to three different formats:<BR>&nbsp;KCONFIG_PROBABILITY&nbsp;&nbsp;&nbsp;&nbsp; y:n split&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y:m:n split<BR>&nbsp;-----------------------------------------------------------------<BR>&nbsp;unset or empty&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 50&nbsp; : 50&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 33&nbsp; : 33&nbsp; : 34<BR>&nbsp;N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N&nbsp; : 100-N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N/2 : N/2 : 100-N<BR>&nbsp;&nbsp;&nbsp; [1] N:M&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N+M : 100-(N+M)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N&nbsp; :&nbsp; M&nbsp; : 100-(N+M)<BR>&nbsp;&nbsp;&nbsp; [2] N:M:L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N&nbsp; : 100-N&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; M&nbsp; :&nbsp; L&nbsp; : 100-(M+L)</FONT></P>
<P><FONT class=extract>where N, M and L are integers (in base 10) in the range [0,100], and so<BR>that:<BR>&nbsp;&nbsp;&nbsp; [1] N+M is in the range [0,100]<BR>&nbsp;&nbsp;&nbsp; [2] M+L is in the range [0,100]</FONT></P>
<P><FONT class=extract>Examples:<BR>&nbsp;KCONFIG_PROBABILITY=10<BR>&nbsp;&nbsp;10% of booleans will be set to 'y', 90% to 'n'<BR>&nbsp;&nbsp;5% of tristates will be set to 'y', 5% to 'm', 90% to 'n'<BR>&nbsp;KCONFIG_PROBABILITY=15:25<BR>&nbsp;&nbsp;40% of booleans will be set to 'y', 60% to 'n'<BR>&nbsp;&nbsp;15% of tristates will be set to 'y', 25% to 'm', 60% to 'n'<BR>&nbsp;KCONFIG_PROBABILITY=10:15:15<BR>&nbsp;&nbsp;10% of booleans will be set to 'y', 90% to 'n'<BR>&nbsp;&nbsp;15% of tristates will be set to 'y', 15% to 'm', 70% to 'n'</FONT></P>
<P>______________________________________________________________________<BR><FONT class=extract>Environment variables for 'silentoldconfig'</FONT></P>
<P><FONT class=extract>KCONFIG_NOSILENTUPDATE<BR>--------------------------------------------------<BR>If this variable has a non-blank value, it prevents silent kernel<BR>config updates (requires explicit updates).</FONT></P>
<P><FONT class=extract>KCONFIG_AUTOCONFIG<BR>--------------------------------------------------<BR>This environment variable can be set to specify the path &amp; name of the<BR>"auto.conf" file.&nbsp; Its default value is "include/config/auto.conf".</FONT></P>
<P><FONT class=extract>KCONFIG_TRISTATE<BR>--------------------------------------------------<BR>This environment variable can be set to specify the path &amp; name of the<BR>"tristate.conf" file.&nbsp; Its default value is "include/config/tristate.conf".</FONT></P>
<P><FONT class=extract>KCONFIG_AUTOHEADER<BR>--------------------------------------------------<BR>This environment variable can be set to specify the path &amp; name of the<BR>"autoconf.h" (header) file.<BR>Its default value is "include/generated/autoconf.h".</FONT></P>
<P><BR>======================================================================<BR><FONT class=extract>menuconfig<BR>--------------------------------------------------</FONT></P>
<P><FONT class=extract>SEARCHING for CONFIG symbols</FONT></P>
<P><FONT class=extract>Searching in menuconfig:</FONT></P>
<P><FONT class=extract>&nbsp;The Search function searches for kernel configuration symbol<BR>&nbsp;names, so you have to know something close to what you are<BR>&nbsp;looking for.</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;/hotplug<BR>&nbsp;&nbsp;This lists all config symbols that contain "hotplug",<BR>&nbsp;&nbsp;e.g., HOTPLUG_CPU, MEMORY_HOTPLUG.</FONT></P>
<P><FONT class=extract>&nbsp;For search help, enter / followed TAB-TAB-TAB (to highlight<BR>&nbsp;&lt;Help&gt;) and Enter.&nbsp; This will tell you that you can also use<BR>&nbsp;regular expressions (regexes) in the search string, so if you<BR>&nbsp;are not interested in MEMORY_HOTPLUG, you could try</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;/^hotplug</FONT></P>
<P><FONT class=extract>&nbsp;When searching, symbols are sorted thus:<BR>&nbsp;&nbsp; - first, exact matches, sorted alphabetically (an exact match<BR>&nbsp;&nbsp;&nbsp;&nbsp; is when the search matches the complete symbol name);<BR>&nbsp;&nbsp; - then, other matches, sorted alphabetically.<BR>&nbsp;For example: ^ATH.K matches:<BR>&nbsp;&nbsp;&nbsp;&nbsp; ATH5K ATH9K ATH5K_AHB ATH5K_DEBUG [...] ATH6KL ATH6KL_DEBUG<BR>&nbsp;&nbsp;&nbsp;&nbsp; [...] ATH9K_AHB ATH9K_BTCOEX_SUPPORT ATH9K_COMMON [...]<BR>&nbsp;of which only ATH5K and ATH9K match exactly and so are sorted<BR>&nbsp;first (and in alphabetical order), then come all other symbols,<BR>&nbsp;sorted in alphabetical order.</FONT></P>
<P><FONT class=extract>______________________________________________________________________<BR>User interface options for 'menuconfig'</FONT></P>
<P><FONT class=extract>MENUCONFIG_COLOR<BR>--------------------------------------------------<BR>It is possible to select different color themes using the variable<BR>MENUCONFIG_COLOR.&nbsp; To select a theme use:</FONT></P>
<P><FONT class=extract>&nbsp;make MENUCONFIG_COLOR=&lt;theme&gt; menuconfig</FONT></P>
<P><FONT class=extract>Available themes are:<BR>&nbsp; mono&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; =&gt; selects colors suitable for monochrome displays<BR>&nbsp; blackbg&nbsp;&nbsp;&nbsp; =&gt; selects a color scheme with black background<BR>&nbsp; classic&nbsp;&nbsp;&nbsp; =&gt; theme with blue background. The classic look<BR>&nbsp; bluetitle&nbsp; =&gt; a LCD friendly version of classic. (default)</FONT></P>
<P><FONT class=extract>MENUCONFIG_MODE<BR>--------------------------------------------------<BR>This mode shows all sub-menus in one large tree.</FONT></P>
<P><FONT class=extract>Example:<BR>&nbsp;make MENUCONFIG_MODE=single_menu menuconfig</FONT></P>
<P><BR>======================================================================<BR><FONT class=extract>xconfig<BR>--------------------------------------------------</FONT></P>
<P><FONT class=extract>Searching in xconfig:</FONT></P>
<P><FONT class=extract>&nbsp;The Search function searches for kernel configuration symbol<BR>&nbsp;names, so you have to know something close to what you are<BR>&nbsp;looking for.</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;Ctrl-F hotplug<BR>&nbsp;or<BR>&nbsp;&nbsp;Menu: File, Search, hotplug</FONT></P>
<P><FONT class=extract>&nbsp;lists all config symbol entries that contain "hotplug" in<BR>&nbsp;the symbol name.&nbsp; In this Search dialog, you may change the<BR>&nbsp;config setting for any of the entries that are not grayed out.<BR>&nbsp;You can also enter a different search string without having<BR>&nbsp;to return to the main menu.</FONT></P>
<P><BR>======================================================================<BR>gconfig<BR>--------------------------------------------------</P>
<P>Searching in gconfig:</P>
<P>&nbsp;None (gconfig isn't maintained as well as xconfig or menuconfig);<BR>&nbsp;however, gconfig does have a few more viewing choices than<BR>&nbsp;xconfig does.</P>
<P>###