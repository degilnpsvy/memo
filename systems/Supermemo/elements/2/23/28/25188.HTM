/**<BR>&nbsp;* kobject_add - the main kobject add function<BR>&nbsp;* @kobj: the kobject to add<BR>&nbsp;* @parent: pointer to the parent of the kobject.<BR>&nbsp;* @fmt: format to name the kobject with.<BR>&nbsp;*<BR>&nbsp;* The kobject name is set and added to the kobject hierarchy in this<BR>&nbsp;* function.<BR>&nbsp;*<BR><FONT class=extract>&nbsp;* If @parent is set, then the parent of the @kobj will be set to it.<BR>&nbsp;* If @parent is NULL, then the parent of the @kobj will be set to the<BR>&nbsp;* kobject associated with the kset assigned to this kobject.&nbsp; If no kset<BR>&nbsp;* is assigned to the kobject, then the kobject will be located in the<BR>&nbsp;* root of the sysfs tree.</FONT><BR>&nbsp;*<BR><FONT class=extract>&nbsp;* If this function returns an error, kobject_put() must be called to<BR>&nbsp;* properly clean up the memory associated with the object.<BR>&nbsp;* Under no instance should the kobject that is passed to this function<BR>&nbsp;* be directly freed with a call to kfree(), that can leak memory.</FONT><BR>&nbsp;*<BR><FONT class=extract>&nbsp;* Note, no "add" uevent will be created with this call, the caller should set<BR>&nbsp;* up all of the necessary sysfs files for the object and then call<BR>&nbsp;* kobject_uevent() with the UEVENT_ADD parameter to ensure that<BR>&nbsp;* userspace is properly notified of this kobject's creation.</FONT><BR>&nbsp;*/<BR>int kobject_add(struct kobject *kobj, struct kobject *parent,<BR>&nbsp;&nbsp;const char *fmt, ...)<BR>{<BR>&nbsp;va_list args;<BR>&nbsp;int retval; 
<P></P>
<P>&nbsp;if (!kobj)<BR>&nbsp;&nbsp;return -EINVAL;</P>
<P>&nbsp;if (!kobj-&gt;state_initialized) {<BR>&nbsp;&nbsp;printk(KERN_ERR "kobject '%s' (%p): tried to add an "<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "uninitialized object, something is seriously wrong.\n",<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kobject_name(kobj), kobj);<BR>&nbsp;&nbsp;dump_stack();<BR>&nbsp;&nbsp;return -EINVAL;<BR>&nbsp;}<BR>&nbsp;va_start(args, fmt);<BR>&nbsp;retval = <FONT class=clozed>kobject_add_varg</FONT>(kobj, parent, fmt, args);<BR>&nbsp;va_end(args);</P>
<P>&nbsp;return retval;<BR>}<BR>EXPORT_SYMBOL(kobject_add);