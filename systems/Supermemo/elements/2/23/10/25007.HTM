<I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Birka">/proc</SPAN></I> 
<P></P>
<P><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Birka"><FONT face=&#24494;&#36719;&#38597;&#40657;>The </FONT><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Birka">/proc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast">filesystem is seen by the kernel developers as a bit of an uncontrolled mess that has gone far beyond its original purpose (which was to provide information about the processes running in the system). The recommended way of making information available in new code is via sysfs. As suggested, working with sysfs requires an understanding of the Linux device model, however, and we do not get to that until Chapter 14. Meanwhile, files under </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: 'Birka-Italic','serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt; mso-hansi-font-family: Birka">/proc </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 16pt; FONT-FAMILY: '&#24494;&#36719;&#38597;&#40657;','sans-serif'; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: &#23435;&#20307;; mso-fareast-theme-font: minor-fareast">are slightly easier to create, and they are entirely suitable for debugging purposes, so we cover them here.</SPAN></SPAN>