Cygwin aims to provide a complete<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128); TEXT-DECORATION: none" class=mw-redirect title=Posix href="http://en.wikipedia.org/wiki/Posix">POSIX</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>layer that provides emulations of several system calls and libraries that exist on Linux, Unix, and the BSD variants. The POSIX layer runs on top of Windows, sacrificing performance where necessary for compatibility. Accordingly, this approach requires Windows programs written with Cygwin to run on top of a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128); TEXT-DECORATION: none" title=Copyleft href="http://en.wikipedia.org/wiki/Copyleft">copylefted</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>compatibility library that must be distributed with the program, along with the program's source code. MinGW aims to provide native functionality and performance via direct Windows API calls. MinGW does not require a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128); TEXT-DECORATION: none" title="Compatibility layer" href="http://en.wikipedia.org/wiki/Compatibility_layer">compatibility layer</A><SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128); TEXT-DECORATION: none" class=mw-redirect title="Microsoft Dynamic Link Library" href="http://en.wikipedia.org/wiki/Microsoft_Dynamic_Link_Library">DLL</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>but remains closed-source.