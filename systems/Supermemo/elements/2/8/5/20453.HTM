<P style="MARGIN: 0.5em 0px"><FONT class=extract>Intel's first<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT><A title=IA-32 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/IA-32"><FONT class=extract>IA-32</FONT></A><FONT class=extract><SPAN class=Apple-converted-space>&nbsp;</SPAN>SIMD effort was the<SPAN class=Apple-converted-space>&nbsp;</SPAN></FONT><A title="MMX (instruction set)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/MMX_(instruction_set)"><FONT class=extract>MMX</FONT></A><FONT class=extract><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction set.</FONT> MMX had two main problems: it re-used existing <A title="Floating point" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Floating_point">floating point</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>registers making the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Central processing unit" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Central_processing_unit">CPU</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>unable to work on both<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Floating point" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Floating_point">floating point</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and SIMD data at the same time, and it only worked on<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Integers class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Integers">integers</A>. SSE floating point instructions operate on a new independent register set (the XMM registers), and it adds a few integer instructions that work on MMX registers.</P>
<P style="MARGIN: 0.5em 0px">SSE was subsequently expanded by Intel to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=SSE2 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/SSE2">SSE2</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=SSE3 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/SSE3">SSE3</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=SSSE3 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/SSSE3">SSSE3</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=SSE4 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/SSE4">SSE4</A>. Because it supports floating point math, it had a wider application than MMX and became more popular. The addition of integer support in SSE2 made MMX largely redundant, though further performance increases can be attained in some situations by using MMX in parallel with SSE operations.