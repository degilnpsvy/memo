<FONT class=extract>struct input_dev __must_check *input_allocate_device(void);<BR>struct input_dev __must_check *devm_input_allocate_device(struct device *);<BR>void input_free_device(struct input_dev *dev);</FONT>
<P></P>
<P><FONT class=extract>static inline struct input_dev *input_get_device(struct input_dev *dev)<BR>{<BR>&nbsp;return dev ? to_input_dev(get_device(&amp;dev-&gt;dev)) : NULL;<BR>}</FONT></P>
<P><FONT class=extract>static inline void input_put_device(struct input_dev *dev)<BR>{<BR>&nbsp;if (dev)<BR>&nbsp;&nbsp;put_device(&amp;dev-&gt;dev);<BR>}</FONT></P>
<P><FONT class=extract>static inline void *input_get_drvdata(struct input_dev *dev)<BR>{<BR>&nbsp;return dev_get_drvdata(&amp;dev-&gt;dev);<BR>}</FONT></P>
<P><FONT class=extract>static inline void input_set_drvdata(struct input_dev *dev, void *data)<BR>{<BR>&nbsp;dev_set_drvdata(&amp;dev-&gt;dev, data);<BR>}</FONT></P>
<P>int __must_check input_register_device(struct input_dev *);<BR>void input_unregister_device(struct input_dev *);</P>
<P>void input_reset_device(struct input_dev *);</P>
<P>int __must_check input_register_handler(struct input_handler *);<BR>void input_unregister_handler(struct input_handler *);</P>
<P>int __must_check input_get_new_minor(int legacy_base, unsigned int legacy_num,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool allow_dynamic);<BR>void input_free_minor(unsigned int minor);</P>
<P>int input_handler_for_each_handle(struct input_handler *, void *data,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int (*fn)(struct input_handle *, void *));</P>
<P>int input_register_handle(struct input_handle *);<BR>void input_unregister_handle(struct input_handle *);</P>
<P>int input_grab_device(struct input_handle *);<BR>void input_release_device(struct input_handle *);</P>
<P>int input_open_device(struct input_handle *);<BR>void input_close_device(struct input_handle *);</P>
<P>int input_flush_device(struct input_handle *handle, struct file *file);