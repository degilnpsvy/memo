/**<BR>&nbsp;* struct ff_device - force-feedback part of an input device<BR>&nbsp;* @upload: Called to upload an new effect into device<BR>&nbsp;* @erase: Called to erase an effect from device<BR>&nbsp;* @playback: Called to request device to start playing specified effect<BR>&nbsp;* @set_gain: Called to set specified gain<BR>&nbsp;* @set_autocenter: Called to auto-center device<BR>&nbsp;* @destroy: called by input core when parent input device is being<BR>&nbsp;*&nbsp;destroyed<BR>&nbsp;* @private: driver-specific data, will be freed automatically<BR>&nbsp;* @ffbit: bitmap of force feedback capabilities truly supported by<BR>&nbsp;*&nbsp;device (not emulated like ones in input_dev-&gt;ffbit)<BR>&nbsp;* @mutex: mutex for serializing access to the device<BR>&nbsp;* @max_effects: maximum number of effects supported by device<BR>&nbsp;* @effects: pointer to an array of effects currently loaded into device<BR>&nbsp;* @effect_owners: array of effect owners; when file handle owning<BR>&nbsp;*&nbsp;an effect gets closed the effect is automatically erased<BR>&nbsp;*<BR>&nbsp;* Every force-feedback device must implement upload() and playback()<BR>&nbsp;* methods; erase() is optional. set_gain() and set_autocenter() need<BR>&nbsp;* only be implemented if driver sets up FF_GAIN and FF_AUTOCENTER<BR>&nbsp;* bits.<BR>&nbsp;*<BR>&nbsp;* Note that playback(), set_gain() and set_autocenter() are called with<BR>&nbsp;* dev-&gt;event_lock spinlock held and interrupts off and thus may not<BR>&nbsp;* sleep.<BR>&nbsp;*/<BR>struct ff_device {<BR>&nbsp;int (*upload)(struct input_dev *dev, struct ff_effect *effect,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct ff_effect *old);<BR>&nbsp;int (*erase)(struct input_dev *dev, int effect_id);
<P></P>
<P>&nbsp;int (*playback)(struct input_dev *dev, int effect_id, int value);<BR>&nbsp;void (*set_gain)(struct input_dev *dev, u16 gain);<BR>&nbsp;void (*set_autocenter)(struct input_dev *dev, u16 magnitude);</P>
<P>&nbsp;void (*destroy)(struct ff_device *);</P>
<P>&nbsp;void *private;</P>
<P>&nbsp;unsigned long ffbit[BITS_TO_LONGS(FF_CNT)];</P>
<P>&nbsp;struct mutex mutex;</P>
<P>&nbsp;int max_effects;<BR>&nbsp;struct ff_effect *effects;<BR>&nbsp;struct file *effect_owners[];<BR>};</P>
<P>int input_ff_create(struct input_dev *dev, unsigned int max_effects);<BR>void input_ff_destroy(struct input_dev *dev);</P>
<P>int input_ff_event(struct input_dev *dev, unsigned int type, unsigned int code, int value);</P>
<P>int input_ff_upload(struct input_dev *dev, struct ff_effect *effect, struct file *file);<BR>int input_ff_erase(struct input_dev *dev, int effect_id, struct file *file);</P>
<P>int input_ff_create_memless(struct input_dev *dev, void *data,<BR>&nbsp;&nbsp;int (*play_effect)(struct input_dev *, void *, struct ff_effect *));