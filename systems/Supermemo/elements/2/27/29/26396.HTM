<H1 lang=en id=firstHeading class=firstHeading style='OVERFLOW: visible; FONT-SIZE: 1.8em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(162,169,177) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0.25em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>Lambda calculus</H1>
<DIV id=bodyContent class=mw-body-content style="FONT-SIZE: 0.87em; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(34,34,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; Z-INDEX: 0; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px">
<DIV id=siteSub style="FONT-SIZE: 12px; DISPLAY: block">From Wikipedia, the free encyclopedia</DIV>
<DIV id=contentSub style="FONT-SIZE: 11px; WIDTH: auto; COLOR: rgb(84,84,84); MARGIN: 0px 0px 1.4em 1em; LINE-HEIGHT: 1.2em"></DIV>
<DIV id=jump-to-nav class=mw-jump style="OVERFLOW: hidden; MARGIN-BOTTOM: 1.4em; HEIGHT: 0px; ZOOM: 1; MARGIN-TOP: -1.4em; user-select: none"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#mw-head"></A><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#p-search"></A></DIV>
<DIV lang=en id=mw-content-text class=mw-content-ltr style="DIRECTION: ltr" dir=ltr>
<P style="MARGIN: 0.5em 0px"><B>Lambda calculus</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(also written as<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>&#955;-calculus</B>) is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Formal system" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Formal_system">formal system</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Mathematical logic" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mathematical_logic">mathematical logic</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for expressing<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Computability style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Computability">computation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>based on function<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Abstraction (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstraction_(computer_science)">abstraction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Function application" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Function_application">application</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>using variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Name binding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Name_binding">binding</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Substitution (algebra)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Substitution_(algebra)">substitution</A>. It is a universal<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Model of computation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Model_of_computation">model of computation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can be used to simulate any single-taped<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Turing machine" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Turing_machine">Turing machine</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and was first introduced by mathematician<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Alonzo Church" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Alonzo_Church">Alonzo Church</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the 1930s as part of an investigation into the foundations of mathematics.</P>
<P style="MARGIN: 0.5em 0px">Lambda calculus consists of constructing lambda terms and performing reduction operations on them. In the simplest form of lambda calculus, terms are built using only the following rules:</P>
<TABLE class=wikitable style="FONT-SIZE: 14px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: rgb(162,169,177) 1px solid; COLOR: rgb(0,0,0); MARGIN: 1em 0px; BORDER-LEFT: rgb(162,169,177) 1px solid; BACKGROUND-COLOR: rgb(248,249,250)">
<TBODY>
<TR>
<TH style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em; BACKGROUND-COLOR: rgb(234,236,240)">Syntax</TH>
<TH style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em; BACKGROUND-COLOR: rgb(234,236,240)">Name</TH>
<TH style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em; BACKGROUND-COLOR: rgb(234,236,240)">Description</TH></TR>
<TR>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">a</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Variable</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">A character or string representing a parameter or mathematical/logical value</TD></TR>
<TR>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">(&#955;x.M)</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Abstraction</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Function definition (M is a lambda term). The variable x becomes bound in the expression.</TD></TR>
<TR>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">(M N)</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Application</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Applying a function to an argument. M and N are lambda terms.</TD></TR></TBODY></TABLE>
<P style="MARGIN: 0.5em 0px">producing expressions such as:<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>(&#955;x.&#955;y.(&#955;z.(&#955;x.z x) (&#955;y.z y)) (x y))</I>. Parentheses can be dropped if the expression is unambiguous. For some applications, terms for logical and mathematical constants and operations may be included.</P>
<P style="MARGIN: 0.5em 0px">The reduction operations include:</P>
<TABLE class=wikitable style="FONT-SIZE: 14px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-COLLAPSE: collapse; BORDER-BOTTOM: rgb(162,169,177) 1px solid; COLOR: rgb(0,0,0); MARGIN: 1em 0px; BORDER-LEFT: rgb(162,169,177) 1px solid; BACKGROUND-COLOR: rgb(248,249,250)">
<TBODY>
<TR>
<TH style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em; BACKGROUND-COLOR: rgb(234,236,240)">Operation</TH>
<TH style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em; BACKGROUND-COLOR: rgb(234,236,240)">Name</TH>
<TH style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em; BACKGROUND-COLOR: rgb(234,236,240)">Description</TH></TR>
<TR>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">((&#955;x.M) E) &#8594; (M[x:=E])</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">&#946;-reduction</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Substituting the bound variable by the argument expression in the body of the abstraction</TD></TR>
<TR>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">(&#955;x.M[x]) &#8594; (&#955;y.M[y])</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">&#945;-conversion</TD>
<TD style="BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; BORDER-LEFT: rgb(162,169,177) 1px solid; PADDING-RIGHT: 0.4em">Renaming the bound (formal) variables in the expression. Used to avoid<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Name collision" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Name_collision">name collisions</A>.</TD></TR></TBODY></TABLE>
<P style="MARGIN: 0.5em 0px">If<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Reduction strategy (lambda calculus)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Reduction_strategy_(lambda_calculus)">repeated application</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of the reduction steps eventually terminates then by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church-Rosser theorem" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church-Rosser_theorem">Church-Rosser theorem</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>it will produce a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Beta normal form" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Beta_normal_form">beta normal form</A>,</P>
<P style="MARGIN: 0.5em 0px"></P>
<DIV id=toc class=toc style="FONT-SIZE: 13px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; ZOOM: 1; PADDING-BOTTOM: 7px; PADDING-TOP: 7px; PADDING-LEFT: 7px; BORDER-LEFT: rgb(162,169,177) 1px solid; DISPLAY: table; PADDING-RIGHT: 7px; BACKGROUND-COLOR: rgb(248,249,250)">
<DIV id=toctitle style="DIRECTION: ltr; TEXT-ALIGN: center">
<H2 style="OVERFLOW: hidden; FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: sans-serif; BORDER-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; BORDER-LEFT: 0px; DISPLAY: inline; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px">Contents</H2><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=toctoggle style="FONT-SIZE: 12px; user-select: none">&nbsp;[<A role=button tabIndex=0 id=togglelink style="CURSOR: pointer; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)">hide</A>]&nbsp;</SPAN></DIV>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-1 tocsection-1" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Explanation_and_applications"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Explanation and applications</SPAN></A></LI>
<LI class="toclevel-1 tocsection-2" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#History"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">History</SPAN></A></LI>
<LI class="toclevel-1 tocsection-3" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Informal_description"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Informal description</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-4" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Motivation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Motivation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-5" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#The_lambda_calculus"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">The lambda calculus</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-3 tocsection-6" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Lambda_terms"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Lambda terms</SPAN></A></LI>
<LI class="toclevel-3 tocsection-7" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Functions_that_operate_on_functions"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Functions that operate on functions</SPAN></A></LI>
<LI class="toclevel-3 tocsection-8" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Alpha_equivalence"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Alpha equivalence</SPAN></A></LI>
<LI class="toclevel-3 tocsection-9" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Free_variables"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2.4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Free variables</SPAN></A></LI>
<LI class="toclevel-3 tocsection-10" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Capture-avoiding_substitutions"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2.5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Capture-avoiding substitutions</SPAN></A></LI>
<LI class="toclevel-3 tocsection-11" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Beta_reduction"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2.6</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Beta reduction</SPAN></A></LI></UL></LI></UL></LI>
<LI class="toclevel-1 tocsection-12" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Formal_definition"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Formal definition</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-13" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Definition"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Definition</SPAN></A></LI>
<LI class="toclevel-2 tocsection-14" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Notation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Notation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-15" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Free_and_bound_variables"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Free and bound variables</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-16" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Reduction"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Reduction</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-17" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#.CE.B1-conversion"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">&#945;-conversion</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-3 tocsection-18" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Substitution"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5.1.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Substitution</SPAN></A></LI></UL></LI>
<LI class="toclevel-2 tocsection-19" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#.CE.B2-reduction"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">&#946;-reduction</SPAN></A></LI>
<LI class="toclevel-2 tocsection-20" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#.CE.B7-conversion"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">&#951;-conversion</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-21" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Normal_forms_and_confluence"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">6</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Normal forms and confluence</SPAN></A></LI>
<LI class="toclevel-1 tocsection-22" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Encoding_datatypes"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Encoding datatypes</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-23" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Arithmetic_in_lambda_calculus"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Arithmetic in lambda calculus</SPAN></A></LI>
<LI class="toclevel-2 tocsection-24" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Logic_and_predicates"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Logic and predicates</SPAN></A></LI>
<LI class="toclevel-2 tocsection-25" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Pairs"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Pairs</SPAN></A></LI>
<LI class="toclevel-2 tocsection-26" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Recursion_and_fixed_points"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Recursion and fixed points</SPAN></A></LI>
<LI class="toclevel-2 tocsection-27" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Standard_terms"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Standard terms</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-28" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Typed_lambda_calculus"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">8</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Typed lambda calculus</SPAN></A></LI>
<LI class="toclevel-1 tocsection-29" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Computable_functions_and_lambda_calculus"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">9</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Computable functions and lambda calculus</SPAN></A></LI>
<LI class="toclevel-1 tocsection-30" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Undecidability_of_equivalence"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">10</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Undecidability of equivalence</SPAN></A></LI>
<LI class="toclevel-1 tocsection-31" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Lambda_calculus_and_programming_languages"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">11</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Lambda calculus and programming languages</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-32" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Anonymous_functions"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">11.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Anonymous functions</SPAN></A></LI>
<LI class="toclevel-2 tocsection-33" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Reduction_strategies"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">11.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Reduction strategies</SPAN></A></LI>
<LI class="toclevel-2 tocsection-34" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#A_note_about_complexity"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">11.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">A note about complexity</SPAN></A></LI>
<LI class="toclevel-2 tocsection-35" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Parallelism_and_concurrency"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">11.4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Parallelism and concurrency</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-36" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Semantics"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">12</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Semantics</SPAN></A></LI>
<LI class="toclevel-1 tocsection-37" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#See_also"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">13</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">See also</SPAN></A></LI>
<LI class="toclevel-1 tocsection-38" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Further_reading"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">14</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Further reading</SPAN></A></LI>
<LI class="toclevel-1 tocsection-39" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#External_links"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">15</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">External links</SPAN></A></LI>
<LI class="toclevel-1 tocsection-40" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#References"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">16</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">References</SPAN></A></LI></UL></DIV>
<P style="MARGIN: 0.5em 0px"></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Explanation_and_applications class=mw-headline>Explanation and applications</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Explanation and applications" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=1">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">Lambda calculus is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Turing completeness" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Turing_completeness">Turing complete</A>, that is, it is a universal<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Model of computation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Model_of_computation">model of computation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can be used to simulate any single-taped<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Turing machine" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Turing_machine">Turing machine</A>.<SUP id=cite_ref-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-1">[1]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Its namesake, the Greek letter lambda (&#955;), is used in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>lambda expressions</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>lambda terms</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>to denote<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Free variables and bound variables" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Free_variables_and_bound_variables">binding</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>a variable in a function.</P>
<P style="MARGIN: 0.5em 0px">Lambda calculus may be<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>typed</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>untyped</I>. In typed lambda calculus, functions can be applied only if they are capable of accepting the given input's "type" of data.</P>
<P style="MARGIN: 0.5em 0px">Lambda calculus has applications in many different areas in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Mathematics style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mathematics">mathematics</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Philosophy style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Philosophy">philosophy</A>,<SUP id=cite_ref-2 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-2">[2]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Linguistics style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Linguistics">linguistics</A>,<SUP id=cite_ref-3 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-3">[3]</A></SUP><SUP id=cite_ref-4 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-4">[4]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Computer science" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Computer_science">computer science</A>.<SUP id=cite_ref-5 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-5">[5]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Lambda calculus has played an important role in the development of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Programming language theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Programming_language_theory">theory of programming languages</A>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Functional programming language" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_programming_language">Functional programming languages</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>implement the lambda calculus. Lambda calculus also is a current research topic in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Category theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Category_theory">Category theory</A>.<SUP id=cite_ref-6 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-6">[6]</A></SUP></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=History class=mw-headline>History</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: History" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=2">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The lambda calculus was introduced by mathematician<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Alonzo Church" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Alonzo_Church">Alonzo Church</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the 1930s as part of an investigation into the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Foundations of mathematics" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Foundations_of_mathematics">foundations of mathematics</A>.<SUP id=cite_ref-7 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-7">[7]</A></SUP><SUP id=cite_ref-8 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-8">[8]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>The original system was shown to be<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Consistency style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Consistency">logically inconsistent</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in 1935 when<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Stephen Kleene" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Stephen_Kleene">Stephen Kleene</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="J. B. Rosser" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/J._B._Rosser">J. B. Rosser</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>developed the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Kleene&#8211;Rosser paradox" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Kleene%E2%80%93Rosser_paradox">Kleene&#8211;Rosser paradox</A>.<SUP id=cite_ref-9 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-9">[9]</A></SUP><SUP id=cite_ref-10 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-10">[10]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">Subsequently, in 1936 Church isolated and published just the portion relevant to computation, what is now called the untyped lambda calculus.<SUP id=cite_ref-11 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-11">[11]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>In 1940, he also introduced a computationally weaker, but logically consistent system, known as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Simply typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Simply_typed_lambda_calculus">simply typed lambda calculus</A>.<SUP id=cite_ref-12 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-12">[12]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">Until the 1960s when its relation to programming languages was clarified, the &#955;-calculus was only a formalism. Thanks to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Richard Montague" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Richard_Montague">Richard Montague</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and other linguists' applications in the semantics of natural language, the &#955;-calculus has begun to enjoy a respectable place in linguistics<SUP id=cite_ref-mm-linguistics_13-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-mm-linguistics-13">[13]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and computer science, too.<SUP id=cite_ref-14 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-14">[14]</A></SUP></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Informal_description class=mw-headline>Informal description</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Informal description" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=3">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<TABLE role=presentation class="plainlinks metadata ambox ambox-style ambox-No_footnotes" style="FONT-SIZE: 14px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BACKGROUND: rgb(251,251,251); BORDER-BOTTOM: rgb(162,169,177) 1px solid; MARGIN: 0px 124px; BORDER-LEFT: rgb(255,204,51) 10px solid; border-image: initial">
<TBODY>
<TR>
<TD class=mbox-image style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 2px; TEXT-ALIGN: center; PADDING-TOP: 2px; PADDING-LEFT: 0.5em; BORDER-LEFT: medium none; PADDING-RIGHT: 0px">
<DIV style="WIDTH: 52px"><IMG style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: middle; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" alt="" src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/40px-Text_document_with_red_question_mark.svg.png" width=40 height=40 data-file-height="48" data-file-width="48" srcset="//upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/60px-Text_document_with_red_question_mark.svg.png 1.5x, //upload.wikimedia.org/wikipedia/commons/thumb/a/a4/Text_document_with_red_question_mark.svg/80px-Text_document_with_red_question_mark.svg.png 2x"></DIV></TD>
<TD class=mbox-text style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 910px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.25em; PADDING-LEFT: 0.5em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.5em"><SPAN class=mbox-text-span>This section includes a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:Citing sources" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Citing_sources">list of references</A>, related reading or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:External links" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:External_links">external links</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>but its sources remain unclear because it lacks<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:Citing sources" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Citing_sources#Inline_citations">inline citations</A></B>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=hide-when-compact>Please help to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:WikiProject Fact and Reference Check" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Fact_and_Reference_Check">improve</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>this section by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:When to cite" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:When_to_cite">introducing</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>more precise citations.</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="FONT-SIZE: 11px"><I>(September 2013)</I></SMALL><SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL class=hide-when-compact style="FONT-SIZE: 11px"><I>(<A title="Help:Maintenance template removal" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Help:Maintenance_template_removal">Learn how and when to remove this template message</A>)</I></SMALL></SPAN></TD></TR></TBODY></TABLE>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Motivation class=mw-headline>Motivation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Motivation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=4">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px"><A title="Computable function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Computable_function">Computable functions</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>are a fundamental concept within computer science and mathematics. The &#955;-calculus provides a simple<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Semantics style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Semantics#Computer_science">semantics</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for computation, enabling properties of computation to be studied formally. The &#955;-calculus incorporates two simplifications that make this semantics simple. The first simplification is that the &#955;-calculus treats functions "anonymously", without giving them explicit names. For example, the function</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \operatorname {square\_sum} (x,y)=x^{2}+y^{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3.17ex; BORDER-RIGHT: 0px; WIDTH: 27.94ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle \operatorname {square\_sum} (x,y)=x^{2}+y^{2}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6020e0858d923aa15ab308584dac8af2d003b879"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">can be rewritten in<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>anonymous form</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>as</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (x,y)\mapsto x^{2}+y^{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3.17ex; BORDER-RIGHT: 0px; WIDTH: 16.49ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle (x,y)\mapsto x^{2}+y^{2}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/89bf7c479bc1935d1ddd0519cde149591d0e541b"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">(read as "the pair of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class="texhtml mvar" style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; FONT-STYLE: italic; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none">x</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class="texhtml mvar" style="FONT-SIZE: 16px; FONT-FAMILY: &quot;Nimbus Roman No9 L&quot;, &quot;Times New Roman&quot;, Times, serif; WHITE-SPACE: nowrap; FONT-STYLE: italic; LINE-HEIGHT: 1; font-feature-settings: 'lnum' 1, 'tnum' 1, 'kern' 0; font-variant-numeric: lining-nums tabular-nums; font-kerning: none">y</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Map (disambiguation)" class=mw-disambig style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Map_(disambiguation)#Mathematics_and_programming">mapped</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle x^{2}+y^{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 7.48ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle x^{2}+y^{2}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/2acda359ee232e747298436227bc8bee4ef82203"></SPAN>"). Similarly,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \operatorname {id} (x)=x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 9.58ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\operatorname {id} (x)=x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/e64f26d868eb6952a36c600035ede967568c973f"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">can be rewritten in anonymous form as</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\mapsto x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.84ex; BORDER-RIGHT: 0px; WIDTH: 6.3ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x \mapsto x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/033c0ae81eaf4c65cbb0759d7aa2c4f434c00f02"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">where the input is simply mapped to itself.</P>
<P style="MARGIN: 0.5em 0px">The second simplification is that the &#955;-calculus only uses functions of a single input. An ordinary function that requires two inputs, for instance the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle \operatorname {square\_sum} }</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 11.97ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle \operatorname {square\_sum} }" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b1452ce7cbdc7fd26d4b880eddf9b28d0c4965a7"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>function, can be reworked into an equivalent function that accepts a single input, and as output returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>another</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>function, that in turn accepts a single input. For example,</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (x,y)\mapsto x^{2}+y^{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3.17ex; BORDER-RIGHT: 0px; WIDTH: 16.49ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle (x,y)\mapsto x^{2}+y^{2}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/89bf7c479bc1935d1ddd0519cde149591d0e541b"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">can be reworked into</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\mapsto (y\mapsto x^{2}+y^{2})}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3.17ex; BORDER-RIGHT: 0px; WIDTH: 19.07ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle x\mapsto (y\mapsto x^{2}+y^{2})}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/012fc8f19ed14bf232ee8deefe4ae84dc507875d"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">This method, known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Currying style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Currying">currying</A>, transforms a function that takes multiple arguments into a chain of functions each with a single argument.</P>
<P style="MARGIN: 0.5em 0px"><A title="Function application" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Function_application">Function application</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle \operatorname {square\_sum} }</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 11.97ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle \operatorname {square\_sum} }" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b1452ce7cbdc7fd26d4b880eddf9b28d0c4965a7"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>function to the arguments (5, 2), yields at once</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle ((x,y)\mapsto x^{2}+y^{2})(5,2)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3ex; BORDER-RIGHT: 0px; WIDTH: 23.54ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle ((x,y)\mapsto x^{2}+y^{2})(5,2)}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/928ef499250ddf3fae99e9a0e7e81bd4aa57e3b9"></SPAN></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle =5^{2}+2^{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 9.78ex; VERTICAL-ALIGN: -0.5ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle =5^{2}+2^{2}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/80c505b7a93daffe13a057837fb7071280cda48f"></SPAN></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle =29}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 4.81ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle =29}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d026d595296c5d7351c05ffd86b0ffec19fe88b1"></SPAN>,</DD></DL>
<P style="MARGIN: 0.5em 0px">whereas evaluation of the curried version requires one more step</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle ((x\mapsto (y\mapsto x^{2}+y^{2}))(5))(2)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3ex; BORDER-RIGHT: 0px; WIDTH: 28.73ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle ((x\mapsto (y\mapsto x^{2}+y^{2}))(5))(2)}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/92ca3db9d1b9d16d70e4475d161a44451c367c25"></SPAN></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle =(y\mapsto 5^{2}+y^{2})(2)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3.17ex; BORDER-RIGHT: 0px; WIDTH: 19.4ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle =(y\mapsto 5^{2}+y^{2})(2)}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/9e02299d716372384546a46e1ad5cdc117f32949"></SPAN></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle =5^{2}+2^{2}}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 9.78ex; VERTICAL-ALIGN: -0.5ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle =5^{2}+2^{2}}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/80c505b7a93daffe13a057837fb7071280cda48f"></SPAN></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\textstyle =29}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 4.81ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\textstyle =29}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d026d595296c5d7351c05ffd86b0ffec19fe88b1"></SPAN></DD></DL>
<P style="MARGIN: 0.5em 0px">to arrive at the same result.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=The_lambda_calculus class=mw-headline>The lambda calculus</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: The lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=5">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The lambda calculus consists of a language of<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>lambda terms</B>, which is defined by a certain formal syntax, and a set of transformation rules, which allow manipulation of the lambda terms. These transformation rules can be viewed as an equational theory or as an<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Operational definition" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Operational_definition">operational definition</A>.</P>
<P style="MARGIN: 0.5em 0px">As described above, all functions in the lambda calculus are anonymous functions, having no names. They only accept one input variable, with currying used to implement functions with several variables.</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Lambda_terms class=mw-headline>Lambda terms</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Lambda terms" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=6">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">The syntax of the lambda calculus defines some expressions as valid lambda calculus expressions and some as invalid, just as some strings of characters are valid<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="C (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C_(programming_language)">C</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>programs and some are not. A valid lambda calculus expression is called a "lambda term".</P>
<P style="MARGIN: 0.5em 0px">The following three rules give an<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Inductive definition" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inductive_definition">inductive definition</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can be applied to build all syntactically valid lambda terms:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">a variable,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN>, is itself a valid lambda term</LI>
<LI style="MARGIN-BOTTOM: 0.1em">if<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a lambda term, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a variable, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.t)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 6.43ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.t)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/3579b47df6ceca7844a6718b01aea766d97f4e91"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a lambda term (called a<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>lambda abstraction</B>);</LI>
<LI style="MARGIN-BOTTOM: 0.1em">if<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.1ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=s src="https://wikimedia.org/api/rest_v1/media/math/render/svg/01d131dfd7673938b947072a13a9744fe997e632"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>are lambda terms, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (ts)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 3.78ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=(ts) src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ad2a42597440bcc79cb3ee2756583a2eb7c6852f"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a lambda term (called an<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>application</B>).</LI></UL>
<P style="MARGIN: 0.5em 0px">Nothing else is a lambda term. Thus a lambda term is valid if and only if it can be obtained by repeated application of these three rules. However, some parentheses can be omitted according to certain rules. For example, the outermost parentheses are usually not written. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Notation">Notation</A></I>, below.</P>
<P style="MARGIN: 0.5em 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>lambda abstraction</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 4.6ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.t" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6c340da553f36c8832a4a6aff7d235dd2acb760a"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a definition of an anonymous function that is capable of taking a single input<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and substituting it into the expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN>. It thus defines an anonymous function that takes<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN>. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x^{2}+2}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 10.17ex; VERTICAL-ALIGN: -0.5ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x^{2}+2" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/775066d410c7fa3072ddad801ac74ad2f0d51bc8"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a lambda abstraction for the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle f(x)=x^{2}+2}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 3.17ex; BORDER-RIGHT: 0px; WIDTH: 13.99ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=f(x)=x^{2}+2 src="https://wikimedia.org/api/rest_v1/media/math/render/svg/36b2fad9afa6bfc8ab4f81a413ebf4e9ba7f9117"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>using the term<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x^{2}+2}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 6.42ex; VERTICAL-ALIGN: -0.5ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x^{2}+2 src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a4c90c2a3ab4bc8c2b353d3dc65962bc35020469"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN>. The definition of a function with a lambda abstraction merely "sets up" the function but does not invoke it. The abstraction<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Free variables and bound variables" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Free_variables_and_bound_variables">binds</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the term<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN>.</P>
<P style="MARGIN: 0.5em 0px">An<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>application</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle ts}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.95ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=ts src="https://wikimedia.org/api/rest_v1/media/math/render/svg/8dec908a9ec2ef3b707b0231f786c20c9f061aaf"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>represents the application of a function<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>to an input<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.1ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=s src="https://wikimedia.org/api/rest_v1/media/math/render/svg/01d131dfd7673938b947072a13a9744fe997e632"></SPAN>, that is, it represents the act of calling function<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>on input<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.1ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=s src="https://wikimedia.org/api/rest_v1/media/math/render/svg/01d131dfd7673938b947072a13a9744fe997e632"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>to produce<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t(s)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 3.78ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t(s) src="https://wikimedia.org/api/rest_v1/media/math/render/svg/abde739dff178e6e78929b3ce6870ec81e3f2d98"></SPAN>.</P>
<P style="MARGIN: 0.5em 0px">There is no concept in lambda calculus of variable declaration. In a definition such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x+y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 9.1ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x+y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d2d683052bfe9bfd6b91fa645a2d5210d596a969"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>(i.e.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle f(x)=x+y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 12.92ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=f(x)=x+y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/62f1b4363757a5a6b04d28f679be66ccdcc958cc"></SPAN>), the lambda calculus treats<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>as a variable that is not yet defined. The lambda abstraction<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x+y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 9.1ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x+y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/d2d683052bfe9bfd6b91fa645a2d5210d596a969"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is syntactically valid, and represents a function that adds its input to the yet-unknown<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN>.</P>
<P style="MARGIN: 0.5em 0px">Bracketing may be used and may be needed to disambiguate terms. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.((\lambda x.x)x)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 13.84ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.((\lambda x.x)x)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/7aa284718745826bd142338fc1e6110582f46583"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.(\lambda x.x))x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 13.84ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.(\lambda x.x))x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/70591fccd68750f2742e11104d56e124f0a2106f"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>denote different terms (although they coincidentally reduce to the same value). Here the first example defines a function that defines a function and returns the result of applying x to the child-function (apply function then return), while the second example defines a function that returns a function for any input and then returns it on application of x (return function then apply).</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Functions_that_operate_on_functions class=mw-headline>Functions that operate on functions</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Functions that operate on functions" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=7">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">In lambda calculus, functions are taken to be '<A title="First-class object" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/First-class_object">first class values</A>', so functions may be used as the inputs, or be returned as outputs from other functions.</P>
<P style="MARGIN: 0.5em 0px">For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 5.09ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/537ec33b43915b93dec1c98e433ec7a68bcab6a3"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>represents the identity function,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\mapsto x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.84ex; BORDER-RIGHT: 0px; WIDTH: 6.3ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x \mapsto x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/033c0ae81eaf4c65cbb0759d7aa2c4f434c00f02"></SPAN>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.x)y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 8.08ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.x)y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b0843fde0f55684a922242d745e75e0764bf9b85"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>represents the identity function applied to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN>. Further,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.y)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 6.74ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.y)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/8a6b3722955a98e2eb07402e0380da6d7739a5da"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>represents the<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>constant function</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\mapsto y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 6.13ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle x\mapsto y}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/eb2452f2d32e5424f3db361de033fd49a73f9dcc"></SPAN>, the function that always returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN>, no matter the input. In lambda calculus, function application is regarded as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Operator associativity" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Operator_associativity">left-associative</A>, so that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle stx}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 3.29ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=stx src="https://wikimedia.org/api/rest_v1/media/math/render/svg/473aae76f793dd8a9acac4583cfea7af033751c0"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>means<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (st)x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 5.12ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=(st)x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/37df60654b0c688f880a89e008bd71eb6cb4fd2e"></SPAN>.</P>
<P style="MARGIN: 0.5em 0px">There are several notions of "equivalence" and "reduction" that allow lambda terms to be "reduced" to "equivalent" lambda terms.</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Alpha_equivalence class=mw-headline>Alpha equivalence</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Alpha equivalence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=8">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">A basic form of equivalence, definable on lambda terms, is alpha equivalence. It captures the intuition that the particular choice of a bound variable, in a lambda abstraction, does not (usually) matter. For instance,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 5.09ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/537ec33b43915b93dec1c98e433ec7a68bcab6a3"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda y.y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 4.74ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda y.y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6491d675717cbe434705e447484c1e267743c672"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>are alpha-equivalent lambda terms, and they both represent the same function (the identity function). The terms<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN>are not alpha-equivalent, because they are not bound in a lambda abstraction. In many presentations, it is usual to identify alpha-equivalent lambda terms.</P>
<P style="MARGIN: 0.5em 0px">The following definitions are necessary in order to be able to define beta reduction:</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Free_variables class=mw-headline>Free variables</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Free variables" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=9">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>free variables</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>of a term are those variables not bound by a lambda abstraction. The set of free variables of an expression is defined inductively:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">The free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>are just<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN></LI>
<LI style="MARGIN-BOTTOM: 0.1em">The set of free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 4.6ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.t" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/6c340da553f36c8832a4a6aff7d235dd2acb760a"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the set of free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN>, but with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>removed</LI>
<LI style="MARGIN-BOTTOM: 0.1em">The set of free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle ts}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.95ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=ts src="https://wikimedia.org/api/rest_v1/media/math/render/svg/8dec908a9ec2ef3b707b0231f786c20c9f061aaf"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the union of the set of free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and the set of free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.1ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=s src="https://wikimedia.org/api/rest_v1/media/math/render/svg/01d131dfd7673938b947072a13a9744fe997e632"></SPAN>.</LI></UL>
<P style="MARGIN: 0.5em 0px">For example, the lambda term representing the identity<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 5.09ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/537ec33b43915b93dec1c98e433ec7a68bcab6a3"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>has no free variables, but the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.yx}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 6.25ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="{\displaystyle \lambda x.yx}" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/00b13f7b499f19ada754e7eff1dd71dd0b5a137b"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>has a single free variable,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN>.</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Capture-avoiding_substitutions class=mw-headline>Capture-avoiding substitutions</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Capture-avoiding substitutions" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=10">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">Suppose<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.1ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=s src="https://wikimedia.org/api/rest_v1/media/math/render/svg/01d131dfd7673938b947072a13a9744fe997e632"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle r}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.05ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=r src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>are lambda terms and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>are variables. The notation<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t[x:=r]}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 8.33ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t[x:=r] src="https://wikimedia.org/api/rest_v1/media/math/render/svg/18e1a37baab228f8a6915d5f6b1cf94c48188a2a"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>indicates substitution of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle r}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.05ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=r src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.34ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x src="https://wikimedia.org/api/rest_v1/media/math/render/svg/87f9e315fd7e2ba406057a97300593c4802b53e4"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 0.85ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t src="https://wikimedia.org/api/rest_v1/media/math/render/svg/65658b7b223af9e1acc877d848888ecdb4466560"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>in a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>capture-avoiding</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>manner. This is defined so that:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x[x:=r]=r}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 12.98ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=x[x:=r]=r src="https://wikimedia.org/api/rest_v1/media/math/render/svg/a98397a18314ee549647b4a8188bdd8cd9aeeb06"></SPAN>;</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y[x:=r]=y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 12.92ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y[x:=r]=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/73a06cf30eebb08fa1a25325aef90862146b8a3c"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>if<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\neq y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 5.61ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x\neq y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f51b711ca7f932963cdb268b0817dc72d6258733"></SPAN>;</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (ts)[x:=r]=(t[x:=r])(s[x:=r])}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 34.94ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=(ts)[x:=r]=(t[x:=r])(s[x:=r]) src="https://wikimedia.org/api/rest_v1/media/math/render/svg/19a85d67b6031ec73bee53a3ec57a971d1c5edd1"></SPAN>;</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.t)[x:=r]=\lambda x.t}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 21.62ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.t)[x:=r]=\lambda x.t" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0fbf8f743c1f6d8b4a62c0323dc85e62081bb72a"></SPAN>;</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda y.t)[x:=r]=\lambda y.(t[x:=r])}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 30.58ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda y.t)[x:=r]=\lambda y.(t[x:=r])" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/1a6558832c6a9e5771c8570c9997f31dba2195db"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>if<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle x\neq y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 5.61ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="x\neq y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/f51b711ca7f932963cdb268b0817dc72d6258733"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not in the free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle r}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.05ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=r src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538"></SPAN>. The variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is said to be "fresh" for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle r}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.05ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=r src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538"></SPAN>.</LI></UL>
<P style="MARGIN: 0.5em 0px">For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.x)[y:=y]=\lambda x.(x[y:=y])=\lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 39.97ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.x)[y:=y]=\lambda x.(x[y:=y])=\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/592caa8aa08c98d5217f7dfec3edcb5cb3521fac"></SPAN>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle ((\lambda x.y)x)[x:=y]=((\lambda x.y)[x:=y])(x[x:=y])=(\lambda x.y)y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 58.55ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="((\lambda x.y)x)[x:=y]=((\lambda x.y)[x:=y])(x[x:=y])=(\lambda x.y)y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/3b294b29a663f2b54d066505b5ddafdaab77d635"></SPAN>.</P>
<P style="MARGIN: 0.5em 0px">The freshness condition (requiring that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2ex; BORDER-RIGHT: 0px; WIDTH: 1.16ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=y src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b8a6208ec717213d4317e666f1ae872e00620a0d"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not in the free variables of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle r}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.05ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=r src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0d1ecb613aa2984f0576f70f86650b7c2a132538"></SPAN>) is crucial in order to ensure that substitution does not change the meaning of functions. For example, a substitution is made that ignores the freshness condition:<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.y)[y:=x]=\lambda x.(y[y:=x])=\lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 39.97ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.y)[y:=x]=\lambda x.(y[y:=x])=\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/28dca32bd1aaa04013520bfac21bba12df0744a5"></SPAN>. This substitution turns the constant function<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 4.91ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/88b2e10a12e276198f384ca3f5da934bdfaedc07"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>into the identity<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 5.09ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/537ec33b43915b93dec1c98e433ec7a68bcab6a3"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>by substitution.</P>
<P style="MARGIN: 0.5em 0px">In general, failure to meet the freshness condition can be remedied by alpha-renaming with a suitable fresh variable. For example, switching back to our correct notion of substitution, in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.y)[y:=x]}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 14.33ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.y)[y:=x]" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/0e113a57c201a6477f5bad7a114f70fe6a378858"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>the lambda abstraction can be renamed with a fresh variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle z}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.09ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=z src="https://wikimedia.org/api/rest_v1/media/math/render/svg/bf368e72c009decd9b6686ee84a375632e11de98"></SPAN>, to obtain<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda z.y)[y:=x]=\lambda z.(y[y:=x])=\lambda z.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 39.25ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda z.y)[y:=x]=\lambda z.(y[y:=x])=\lambda z.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/7275d0fbddf5e54be2666eb5cb6b7baacaf00d24"></SPAN>, and the meaning of the function is preserved by substitution.</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Beta_reduction class=mw-headline>Beta reduction</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Beta reduction" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=11">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">The beta reduction rule states that an application of the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.t)s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 7.53ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.t)s" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/56eb16cb15bc2d59d009c0b86ecd37e9ce6f7991"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>reduces to the term<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t[x:=s]}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 8.37ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t[x:=s] src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c69396d99d4f60dbe54641cf62b9864b0a2251e1"></SPAN>. The notation<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.t)s\to t[x:=s]}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 19.52ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.t)s\to t[x:=s]" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/8b3ec6af9a3a97d2362dd9473b3b00f414b5323e"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used to indicate that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.t)s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 7.53ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.t)s" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/56eb16cb15bc2d59d009c0b86ecd37e9ce6f7991"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>beta reduces to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle t[x:=s]}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 8.37ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=t[x:=s] src="https://wikimedia.org/api/rest_v1/media/math/render/svg/c69396d99d4f60dbe54641cf62b9864b0a2251e1"></SPAN>. For example, for every<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 1.67ex; BORDER-RIGHT: 0px; WIDTH: 1.1ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt=s src="https://wikimedia.org/api/rest_v1/media/math/render/svg/01d131dfd7673938b947072a13a9744fe997e632"></SPAN>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.x)s\to x[x:=s]=s}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 24.71ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.x)s\to x[x:=s]=s" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/02262c02953e5da0468ebf98f4b38327229bd4c9"></SPAN>. This demonstrates that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.x}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 5.09ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.x" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/537ec33b43915b93dec1c98e433ec7a68bcab6a3"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>really is the identity. Similarly,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.y)s\to y[x:=s]=y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 24.43ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.y)s\to y[x:=s]=y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/de42f8231c1e95fb1556e6aee11c40d0000ea008"></SPAN>, which demonstrates that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda x.y}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.5ex; BORDER-RIGHT: 0px; WIDTH: 4.91ex; VERTICAL-ALIGN: -0.67ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda x.y" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/88b2e10a12e276198f384ca3f5da934bdfaedc07"></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a constant function.</P>
<P style="MARGIN: 0.5em 0px">The lambda calculus may be seen as an idealised version of a functional programming language, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Haskell (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Haskell_(programming_language)">Haskell</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Standard ML" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Standard_ML">Standard ML</A>. Under this view, beta reduction corresponds to a computational step. This step can be repeated by additional beta conversions until there are no more applications left to reduce. In the untyped lambda calculus, as presented here, this reduction process may not terminate. For instance, consider the term<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \Omega =(\lambda x.xx)(\lambda x.xx)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 21.31ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\Omega =(\lambda x.xx)(\lambda x.xx)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/3bfe87ff478d8ea96e37b17523c091fa9812a4ee"></SPAN>. Here<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle (\lambda x.xx)(\lambda x.xx)\to (xx)[x:=\lambda x.xx]=(x[x:=\lambda x.xx])(x[x:=\lambda x.xx])=(\lambda x.xx)(\lambda x.xx)}</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.84ex; BORDER-RIGHT: 0px; WIDTH: 92.29ex; VERTICAL-ALIGN: -0.83ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="(\lambda x.xx)(\lambda x.xx)\to (xx)[x:=\lambda x.xx]=(x[x:=\lambda x.xx])(x[x:=\lambda x.xx])=(\lambda x.xx)(\lambda x.xx)" src="https://wikimedia.org/api/rest_v1/media/math/render/svg/ba84bd0baf6c5c33e59226aa42474b36e3046231"></SPAN>. That is, the term reduces to itself in a single beta reduction, and therefore the reduction process will never terminate.</P>
<P style="MARGIN: 0.5em 0px">Another aspect of the untyped lambda calculus is that it does not distinguish between different kinds of data. For instance, it may be desirable to write a function that only operates on numbers. However, in the untyped lambda calculus, there is no way to prevent a function from being applied to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Truth value" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Truth_value">truth values</A>, strings, or other non-number objects.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Formal_definition class=mw-headline>Formal definition</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Formal definition" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=12">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main article:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lambda calculus definition" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus_definition">Lambda calculus definition</A></DIV>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Definition class=mw-headline>Definition</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Definition" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=13">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Lambda expressions are composed of:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">variables v<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">1</SUB>, v<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">2</SUB>, ..., v<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">n</SUB>, ...</LI>
<LI style="MARGIN-BOTTOM: 0.1em">the abstraction symbols lambda '&#955;' and dot '.'</LI>
<LI style="MARGIN-BOTTOM: 0.1em">parentheses ( )</LI></UL>
<P style="MARGIN: 0.5em 0px">The set of lambda expressions, &#923;, can be<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Recursive definition" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursive_definition">defined inductively</A>:</P>
<OL style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 3.2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">If x is a variable, then x &#8712; &#923;</LI>
<LI style="MARGIN-BOTTOM: 0.1em">If x is a variable and M &#8712; &#923;, then (&#955;x.M) &#8712; &#923;</LI>
<LI style="MARGIN-BOTTOM: 0.1em">If M, N &#8712; &#923;, then (M N) &#8712; &#923;</LI></OL>
<P style="MARGIN: 0.5em 0px">Instances of rule 2 are known as abstractions and instances of rule 3 are known as applications.<SUP id=cite_ref-15 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-15">[15]</A></SUP></P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Notation class=mw-headline>Notation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Notation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=14">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">To keep the notation of lambda expressions uncluttered, the following conventions are usually applied:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Outermost parentheses are dropped: M N instead of (M N)</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Applications are assumed to be left associative: M N P may be written instead of ((M N) P)<SUP id=cite_ref-16 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-16">[16]</A></SUP></LI>
<LI style="MARGIN-BOTTOM: 0.1em">The body of an abstraction extends<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Regular expression" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Regular_expression#Lazy_matching">as far right as possible</A>: &#955;x.M N means &#955;x.(M N) and not (&#955;x.M) N</LI>
<LI style="MARGIN-BOTTOM: 0.1em">A sequence of abstractions is contracted: &#955;x.&#955;y.&#955;z.N is abbreviated as &#955;xyz.N<SUP id=cite_ref-Selinger_17-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-Selinger-17">[17]</A></SUP><SUP id=cite_ref-18 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-18">[18]</A></SUP></LI></UL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Free_and_bound_variables class=mw-headline>Free and bound variables</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Free and bound variables" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=15">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The abstraction operator, &#955;, is said to bind its variable wherever it occurs in the body of the abstraction. Variables that fall within the scope of an abstraction are said to be<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>bound</I>. All other variables are called<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>free</I>. For example, in the following expression y is a bound variable and x is free:<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>y</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I></TT>. Also note that a variable is bound by its "nearest" abstraction. In the following example the single occurrence of x in the expression is bound by the second lambda:<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.<I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>x</I>.<I>z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)</TT></P>
<P style="MARGIN: 0.5em 0px">The set of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>free variables</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>of a lambda expression, M, is denoted as FV(M) and is defined by recursion on the structure of the terms, as follows:</P>
<OL style="PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 3.2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">FV(x) = {x}, where x is a variable</LI>
<LI style="MARGIN-BOTTOM: 0.1em">FV(&#955;x.M) = FV(M) \ {x}</LI>
<LI style="MARGIN-BOTTOM: 0.1em">FV(M N) = FV(M) &#8746; FV(N)<SUP id=cite_ref-BarendregtBarendsen_19-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-BarendregtBarendsen-19">[19]</A></SUP></LI></OL>
<P style="MARGIN: 0.5em 0px">An expression that contains no free variables is said to be<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>closed</I>. Closed lambda expressions are also known as combinators and are equivalent to terms in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Combinatory logic" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Combinatory_logic">combinatory logic</A>.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Reduction class=mw-headline>Reduction</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Reduction" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=16">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The meaning of lambda expressions is defined by how expressions can be reduced.<SUP id=cite_ref-20 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-20">[20]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">There are three kinds of reduction:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><B>&#945;-conversion</B>: changing bound variables (<B>alpha</B>);</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><B>&#946;-reduction</B>: applying functions to their arguments (<B>beta</B>);</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><B>&#951;-conversion</B>: which captures a notion of extensionality (<B>eta</B>).</LI></UL>
<P style="MARGIN: 0.5em 0px">We also speak of the resulting equivalences: two expressions are<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>&#946;-equivalent</I>, if they can be &#946;-converted into the same expression, and &#945;/&#951;-equivalence are defined similarly.</P>
<P style="MARGIN: 0.5em 0px">The term<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>redex</I>, short for<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>reducible expression</I>, refers to subterms that can be reduced by one of the reduction rules. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.M) N</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a beta-redex in expressing the substitution of N for x in M; if<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not free in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">M</TT>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.M<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is also an eta-redex. The expression to which a redex reduces is called its reduct; using the previous example, the reducts of these expressions are respectively<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">M[<I>x</I>:=N]</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">M</TT>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=.CE.B1-conversion class=mw-headline>&#945;-conversion</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: &#945;-conversion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=17">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Alpha-conversion, sometimes known as alpha-renaming,<SUP id=cite_ref-21 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-21">[21]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>allows bound variable names to be changed. For example, alpha-conversion of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.<I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>might yield<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>y</I>.<I>y</I></TT>. Terms that differ only by alpha-conversion are called<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>&#945;-equivalent</I>. Frequently, in uses of lambda calculus, &#945;-equivalent terms are considered to be equivalent.</P>
<P style="MARGIN: 0.5em 0px">The precise rules for alpha-conversion are not completely trivial. First, when alpha-converting an abstraction, the only variable occurrences that are renamed are those that are bound to the same abstraction. For example, an alpha-conversion of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.&#955;<I>x</I>.<I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>could result in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>y</I>.&#955;<I>x</I>.<I>x</I></TT>, but it could<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>not</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>result in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>y</I>.&#955;<I>x</I>.<I>y</I></TT>. The latter has a different meaning from the original.</P>
<P style="MARGIN: 0.5em 0px">Second, alpha-conversion is not possible if it would result in a variable getting captured by a different abstraction. For example, if we replace<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>with<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>y</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.&#955;<I>y</I>.<I>x</I></TT>, we get<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>y</I>.&#955;<I>y</I>.<I>y</I></TT>, which is not at all the same.</P>
<P style="MARGIN: 0.5em 0px">In programming languages with static scope, alpha-conversion can be used to make<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Name resolution (programming languages)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Name_resolution_(programming_languages)">name resolution</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>simpler by ensuring that no variable name<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Variable shadowing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Variable_shadowing">masks</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>a name in a containing<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Scope (programming)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Scope_(programming)">scope</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Name resolution (programming languages)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Name_resolution_(programming_languages)#Alpha_renaming_to_make_name_resolution_trivial">alpha renaming to make name resolution trivial</A>).</P>
<P style="MARGIN: 0.5em 0px">In the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="De Bruijn index" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/De_Bruijn_index">De Bruijn index</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>notation, any two alpha-equivalent terms are literally identical.</P>
<H4 style="OVERFLOW: hidden; FONT-SIZE: 14px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Substitution class=mw-headline>Substitution</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Substitution" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=18">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H4>
<P style="MARGIN: 0.5em 0px">Substitution, written<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace"><I>E</I>[<I>V</I>&nbsp;:=<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>R</I>]</SPAN>, is the process of replacing all free occurrences of the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace"><I>V</I></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace"><I>E</I></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>with expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace"><I>R</I></SPAN>. Substitution on terms of the &#955;-calculus is defined by recursion on the structure of terms, as follows (note: x and y are only variables while M and N are any &#955; expression).</P><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250)"><I>x</I>[<I>x</I> := N]       &#8801; N
<I>y</I>[<I>x</I> := N]       &#8801; <I>y</I>, if <I>x</I> &#8800; <I>y</I>
(M<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">1</SUB> M<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">2</SUB>)[<I>x</I> := N] &#8801; (M<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">1</SUB>[<I>x</I> := N]) (M<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">2</SUB>[<I>x</I> := N])
(&#955;<I>x</I>.M)[<I>x</I> := N]  &#8801; &#955;<I>x</I>.M
(&#955;<I>y</I>.M)[<I>x</I> := N]  &#8801; &#955;<I>y</I>.(M[<I>x</I> := N]), if <I>x</I> &#8800; <I>y</I>, <I>provided</I> <I>y</I> &#8713; FV(N)
</PRE>
<P style="MARGIN: 0.5em 0px">To substitute into a lambda abstraction, it is sometimes necessary to &#945;-convert the expression. For example, it is not correct for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace">(&#955;<I>x</I>.<I>y</I>)[<I>y</I>&nbsp;:=<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>]</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>to result in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace">(&#955;<I>x</I>.<I>x</I>)</SPAN>, because the substituted<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace"><I>x</I></SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>was supposed to be free but ended up being bound. The correct substitution in this case is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN style="FONT-FAMILY: monospace, monospace">(&#955;<I>z</I>.<I>x</I>)</SPAN>, up to &#945;-equivalence. Notice that substitution is defined uniquely up to &#945;-equivalence.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=.CE.B2-reduction class=mw-headline>&#946;-reduction</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: &#946;-reduction" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=19">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Beta-reduction captures the idea of function application. Beta-reduction is defined in terms of substitution: the beta-reduction of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&nbsp;((&#955;<I>V</I>.<I>E</I>)<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>E&#8242;</I>)&nbsp;</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>E</I>[<I>V</I>&nbsp;:=<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>E&#8242;</I>]</TT>.</P>
<P style="MARGIN: 0.5em 0px">For example, assuming some encoding of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">2, 7, &#215;</TT>, we have the following &#946;-reduction:<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">((&#955;<I>n</I>.<I>n</I>&#215;2) 7)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">7&#215;2</TT>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=.CE.B7-conversion class=mw-headline>&#951;-conversion</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: &#951;-conversion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=20">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Eta-conversion expresses the idea of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Extensionality style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Extensionality">extensionality</A>, which in this context is that two functions are the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="If and only if" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/If_and_only_if">if and only if</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>they give the same result for all arguments. Eta-conversion converts between<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>whenever<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not appear free in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Normal_forms_and_confluence class=mw-headline>Normal forms and confluence</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Normal forms and confluence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=21">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main article:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Normalization property (abstract rewriting)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Normalization_property_(abstract_rewriting)">Normalization property (abstract rewriting)</A></DIV>
<P style="MARGIN: 0.5em 0px">For the untyped lambda calculus, &#946;-reduction as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Rewrite system" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Rewrite_system">rewriting rule</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is neither<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Strongly normalising" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Strongly_normalising">strongly normalising</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>nor<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Weakly normalising" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Weakly_normalising">weakly normalising</A>.</P>
<P style="MARGIN: 0.5em 0px">However, it can be shown that &#946;-reduction is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Confluence (abstract rewriting)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Confluence_(abstract_rewriting)">confluent</A>. (Of course, we are working up to &#945;-conversion, i.e. we consider two normal forms to be equal, if it is possible to &#945;-convert one into the other.)</P>
<P style="MARGIN: 0.5em 0px">Therefore, both strongly normalising terms and weakly normalising terms have a unique normal form. For strongly normalising terms, any reduction strategy is guaranteed to yield the normal form, whereas for weakly normalising terms, some reduction strategies may fail to find it.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Encoding_datatypes class=mw-headline>Encoding datatypes</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Encoding datatypes" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=22">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main articles:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_encoding">Church encoding</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Mogensen&#8211;Scott encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mogensen%E2%80%93Scott_encoding">Mogensen&#8211;Scott encoding</A></DIV>
<P style="MARGIN: 0.5em 0px">The basic lambda calculus may be used to model booleans,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Arithmetic style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Arithmetic">arithmetic</A>, data structures and recursion, as illustrated in the following sub-sections.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Arithmetic_in_lambda_calculus class=mw-headline>Arithmetic in lambda calculus</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Arithmetic in lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=23">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">There are several possible ways to define the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Natural number" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Natural_number">natural numbers</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in lambda calculus, but by far the most common are the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church numeral" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_numeral">Church numerals</A>, which can be defined as follows:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">0&nbsp;:= &#955;<I>f</I>.&#955;<I>x</I>.<I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">1&nbsp;:= &#955;<I>f</I>.&#955;<I>x</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">2&nbsp;:= &#955;<I>f</I>.&#955;<I>x</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">3&nbsp;:= &#955;<I>f</I>.&#955;<I>x</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>))</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">and so on. Or using the alternative syntax presented above in<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Notation">Notation</A></I>:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">0&nbsp;:= &#955;<I>fx</I>.<I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">1&nbsp;:= &#955;<I>fx</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">2&nbsp;:= &#955;<I>fx</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">3&nbsp;:= &#955;<I>fx</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>))</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">A Church numeral is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Higher-order function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Higher-order_function">higher-order function</A>&#8212;it takes a single-argument function<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>, and returns another single-argument function. The Church numeral<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a function that takes a function<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>as argument and returns the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT>-th composition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>, i.e. the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>composed with itself<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>times. This is denoted<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I><SUP style="FONT-SIZE: 11px; LINE-HEIGHT: 1">(<I>n</I>)</SUP></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and is in fact the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT>-th power of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>(considered as an operator);<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I><SUP style="FONT-SIZE: 11px; LINE-HEIGHT: 1">(0)</SUP></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is defined to be the identity function. Such repeated compositions (of a single function<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>) obey the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Laws of exponents" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Laws_of_exponents">laws of exponents</A>, which is why these numerals can be used for arithmetic. (In Church's original lambda calculus, the formal parameter of a lambda expression was required to occur at least once in the function body, which made the above definition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">0</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>impossible.)</P>
<P style="MARGIN: 0.5em 0px">We can define a successor function, which takes a number<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>+ 1</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>by adding another application of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>,where '(mf)x' means the function 'f' is applied 'm' times on 'x':</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">SUCC&nbsp;:= &#955;<I>n</I>.&#955;<I>f</I>.&#955;<I>x</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">Because the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I></TT>-th composition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>composed with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT>-th composition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>gives the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I>+<I>n</I></TT>-th composition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>f</I></TT>, addition can be defined as follows:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PLUS&nbsp;:= &#955;<I>m</I>.&#955;<I>n</I>.&#955;<I>f</I>.&#955;<I>x</I>.<I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)</TT></DD></DL>
<P style="MARGIN: 0.5em 0px"><TT style="FONT-FAMILY: monospace, Courier">PLUS</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be thought of as a function taking two natural numbers as arguments and returning a natural number; it can be verified that</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PLUS 2 3</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">and</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">5</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">are &#946;-equivalent lambda expressions. Since adding<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to a number<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be accomplished by adding 1<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>times, an equivalent definition is:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PLUS&nbsp;:= &#955;<I>m</I>.&#955;<I>n</I>.<I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>SUCC<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n&#8201;</I></TT><SUP id=cite_ref-22 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-22">[22]</A></SUP></DD></DL>
<P style="MARGIN: 0.5em 0px">Similarly, multiplication can be defined as</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">MULT&nbsp;:= &#955;<I>m</I>.&#955;<I>n</I>.&#955;<I>f</I>.<I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I>)</TT><SUP id=cite_ref-Selinger_17-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-Selinger-17">[17]</A></SUP></DD></DL>
<P style="MARGIN: 0.5em 0px">Alternatively</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">MULT&nbsp;:= &#955;<I>m</I>.&#955;<I>n</I>.<I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(PLUS<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I>) 0</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">since multiplying<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the same as repeating the add<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>function<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>times and then applying it to zero. Exponentiation has a rather simple rendering in Church numerals, namely</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">POW&nbsp;:= &#955;<I>b</I>.&#955;<I>e</I>.<I>e</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>b</I></TT></DD></DL>
<P style="MARGIN: 0.5em 0px">The predecessor function defined by<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">PRED<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>=<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8722; 1</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>for a positive integer<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">PRED 0 = 0</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is considerably more difficult. The formula</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PRED&nbsp;:= &#955;<I>n</I>.&#955;<I>f</I>.&#955;<I>x</I>.<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>g</I>.&#955;<I>h</I>.<I>h</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I>)) (&#955;<I>u</I>.<I>x</I>) (&#955;<I>u</I>.<I>u</I>)</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">can be validated by showing inductively that if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>T</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>denotes<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>g</I>.&#955;<I>h</I>.<I>h</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I>))</TT>, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">T<SUP style="FONT-SIZE: 11px; LINE-HEIGHT: 1">(<I>n</I>)</SUP>(&#955;<I>u</I>.<I>x</I>) = (&#955;<I>h</I>.<I>h</I>(<I>f</I><SUP style="FONT-SIZE: 11px; LINE-HEIGHT: 1">(<I>n</I>&#8722;1)</SUP>(<I>x</I>)))</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>for<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&gt; 0</TT>. Two other definitions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">PRED</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>are given below, one using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Logic_and_predicates">conditionals</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and the other using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Pairs">pairs</A>. With the predecessor function, subtraction is straightforward. Defining</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">SUB&nbsp;:= &#955;<I>m</I>.&#955;<I>n</I>.<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>PRED<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>m</I></TT>,</DD></DL>
<P style="MARGIN: 0.5em 0px"><TT style="FONT-FAMILY: monospace, Courier">SUB<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>yields<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8722;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>when<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&gt;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">0</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>otherwise.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Logic_and_predicates class=mw-headline>Logic and predicates</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Logic and predicates" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=24">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">By convention, the following two definitions (known as Church booleans) are used for the boolean values<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">TRUE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT>:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">TRUE&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.<I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">FALSE&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.<I>y</I></TT>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">(Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is equivalent to the Church numeral zero defined above)</DD></DL></DD></DL>
<P style="MARGIN: 0.5em 0px">Then, with these two &#955;-terms, we can define some logic operators (these are just possible formulations; other expressions are equally correct):</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">AND&nbsp;:= &#955;<I>p</I>.&#955;<I>q</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>q</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>p</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">OR&nbsp;:= &#955;<I>p</I>.&#955;<I>q</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>q</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">NOT&nbsp;:= &#955;<I>p</I>.p FALSE TRUE</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">IFTHENELSE&nbsp;:= &#955;<I>p</I>.&#955;<I>a</I>.&#955;<I>b</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>a</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>b</I></TT></DD></DL>
<P style="MARGIN: 0.5em 0px">We are now able to compute some logic functions, for example:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">AND TRUE FALSE</TT>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">&#8801; (&#955;<I>p</I>.&#955;<I>q</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>q</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>p</I>) TRUE FALSE &#8594;<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">&#946;</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>TRUE FALSE TRUE</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">&#8801; (&#955;<I>x</I>.&#955;<I>y</I>.<I>x</I>) FALSE TRUE &#8594;<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">&#946;</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>FALSE</TT></DD></DL></DD></DL>
<P style="MARGIN: 0.5em 0px">and we see that<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">AND TRUE FALSE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is equivalent to<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT>.</P>
<P style="MARGIN: 0.5em 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>predicate</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a function that returns a boolean value. The most fundamental predicate is<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">ISZERO</TT>, which returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">TRUE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>if its argument is the Church numeral<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">0</TT>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>if its argument is any other Church numeral:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">ISZERO&nbsp;:= &#955;<I>n</I>.<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>x</I>.FALSE) TRUE</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">The following predicate tests whether the first argument is less-than-or-equal-to the second:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">LEQ&nbsp;:= &#955;<I>m</I>.&#955;<I>n</I>.ISZERO (SUB<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I>)</TT>,</DD></DL>
<P style="MARGIN: 0.5em 0px">and since<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>=<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I></TT>, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">LEQ<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>m</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">LEQ<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>m</I></TT>, it is straightforward to build a predicate for numerical equality.</P>
<P style="MARGIN: 0.5em 0px">The availability of predicates and the above definition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">TRUE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>make it convenient to write "if-then-else" expressions in lambda calculus. For example, the predecessor function can be defined as:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PRED&nbsp;:= &#955;<I>n</I>.<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>g</I>.&#955;<I>k</I>.ISZERO (<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>1)<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>k</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(PLUS (<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>k</I>) 1)) (&#955;<I>v</I>.0) 0</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">which can be verified by showing inductively that<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>g</I>.&#955;<I>k</I>.ISZERO (<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>1)<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>k</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(PLUS (<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>k</I>) 1)) (&#955;<I>v</I>.0)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the add<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8722; 1 function for<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>n</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&gt; 0.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Pairs class=mw-headline>Pairs</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Pairs" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=25">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">A pair (2-tuple) can be defined in terms of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">TRUE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT>, by using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church encoding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church_encoding#Church_pairs">Church encoding for pairs</A>. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">PAIR</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>encapsulates the pair (<TT style="FONT-FAMILY: monospace, Courier"><I>x</I></TT>,<TT style="FONT-FAMILY: monospace, Courier"><I>y</I></TT>),<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FIRST</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the first element of the pair, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">SECOND</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the second.</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PAIR&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.&#955;<I>f</I>.<I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">FIRST&nbsp;:= &#955;<I>p</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>TRUE</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">SECOND&nbsp;:= &#955;<I>p</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>FALSE</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">NIL&nbsp;:= &#955;<I>x</I>.TRUE</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">NULL&nbsp;:= &#955;<I>p</I>.<I>p</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>x</I>.&#955;<I>y</I>.FALSE)</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">A linked list can be defined as either NIL for the empty list, or the<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">PAIR</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>of an element and a smaller list. The predicate<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">NULL</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>tests for the value<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">NIL</TT>. (Alternatively, with<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">NIL&nbsp;:= FALSE</TT>, the construct<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>l</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(&#955;<I>h</I>.&#955;<I>t</I>.&#955;<I>z</I>.deal_with_head_<I>h</I>_and_tail_<I>t</I>) (deal_with_nil)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>obviates the need for an explicit NULL test).</P>
<P style="MARGIN: 0.5em 0px">As an example of the use of pairs, the shift-and-increment function that maps<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(<I>m</I>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(<I>n</I>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>+ 1)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be defined as</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">&#934;&nbsp;:= &#955;<I>x</I>.PAIR (SECOND<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>) (SUCC (SECOND<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>))</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">which allows us to give perhaps the most transparent version of the predecessor function:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">PRED&nbsp;:= &#955;<I>n</I>.FIRST (<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#934; (PAIR 0 0)).</TT></DD></DL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Recursion_and_fixed_points class=mw-headline>Recursion and fixed points</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Recursion and fixed points" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=26">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main article:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Fixed-point combinator" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fixed-point_combinator">Fixed-point combinator</A></DIV>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em; MARGIN-TOP: -0.5em">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="SKI combinator calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/SKI_combinator_calculus#Self-application_and_recursion">SKI combinator calculus &#167;&nbsp;Self-application_and_recursion</A></DIV>
<P style="MARGIN: 0.5em 0px"><A title=Recursion style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursion">Recursion</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the definition of a function using the function itself. Lambda calculus cannot express this as directly as some other notations: all functions are anonymous in lambda calculus, so we can't refer to a value which is yet to be defined, inside the lambda term defining that same value. However, recursion can still be achieved by arranging for a lambda expression to receive itself as its argument value, for example in&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>E</I></TT>.</P>
<P style="MARGIN: 0.5em 0px">Consider the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Factorial style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Factorial">factorial</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>function<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">F(<I>n</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>recursively defined by</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">F(<I>n</I>) = 1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; F(<I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8722; 1)</TT>.</DD></DL>
<P style="MARGIN: 0.5em 0px">In the lambda expression which is to represent this function, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>parameter</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(typically the first one) will be assumed to receive the lambda expression itself as its value, so that calling it &#8211; applying it to an argument &#8211; will amount to recursion. Thus to achieve recursion, the intended-as-self-referencing argument (called<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>r</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>here) must always be passed to itself within the function body, at a call point:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">G&nbsp;:= &#955;<I>r</I>. &#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; (<I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>n</I>&#8722;1)))</TT>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">with&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= F<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= G<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8194;to hold, so&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= G</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8194;and</DD></DL></DD></DL></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">F&nbsp;:= G G = (&#955;<I>x</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>) G</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">The self-application achieves replication here, passing the function's lambda expression on to the next invocation as an argument value, making it available to be referenced and called there.</P>
<P style="MARGIN: 0.5em 0px">This solves it but requires re-writing each recursive call as self-application. We would like to have a generic solution, without a need for any re-writes:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">G&nbsp;:= &#955;<I>r</I>. &#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; (<I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>n</I>&#8722;1)))</TT>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">with&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= F<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= G<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8194;to hold, so&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= G<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>=: FIX G</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8194;and</DD></DL></DD></DL></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">F&nbsp;:= FIX G</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8194;where&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FIX<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I>&nbsp;:= (<I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>where<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>=<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>r</I>) =<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(FIX<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I>)</TT>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">so that&#8194;<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FIX G = G (FIX G) = (&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; ((FIX G) (<I>n</I>&#8722;1))))</TT></DD></DL></DD></DL></DD></DL>
<P style="MARGIN: 0.5em 0px">Given a lambda term with first argument representing recursive call (e.g.<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">G</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>here), the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>fixed-point</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>combinator<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FIX</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>will return a self-replicating lambda expression representing the recursive function (here,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">F</TT>). The function does not need to be explicitly passed to itself at any point, for the self-replication is arranged in advance, when it is created, to be done each time it is called. Thus the original lambda expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(FIX G)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is re-created inside itself, at call-point, achieving<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Self-reference style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Self-reference">self-reference</A>.</P>
<P style="MARGIN: 0.5em 0px">In fact, there are many possible definitions for this<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FIX</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>operator, the simplest of them being:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier"><B>Y</B>&nbsp;:= &#955;<I>g</I>.(&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)) (&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>))</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">In the lambda calculus,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I></TT>&#8201; is a fixed-point of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>g</I></TT>, as it expands to:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier"><B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>h</I>.(&#955;<I>x</I>.<I>h</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)) (&#955;<I>x</I>.<I>h</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)))<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)) (&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier"><I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>((&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)) (&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier"><I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>g</I>)</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">Now, to perform our recursive call to the factorial function, we would simply call<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G)<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I></TT>,&nbsp; where<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the number we are calculating the factorial of. Given<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 4, for example, this gives:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">(<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) 4</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">G (<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) 4</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>r</I>.&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; (<I>r</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>n</I>&#8722;1)))) (<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) 4</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (<I>n</I>&#8722;1)))) 4</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">1, if 4 = 0; else 4 &#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (4&#8722;1))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (G (<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (4&#8722;1))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; ((&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (<I>n</I>&#8722;1)))) (4&#8722;1))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (1, if 3 = 0; else 3 &#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (3&#8722;1)))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (G (<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (3&#8722;1)))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; ((&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (<I>n</I>&#8722;1)))) (3&#8722;1)))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (1, if 2 = 0; else 2 &#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (2&#8722;1))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; (G (<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (2&#8722;1))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; ((&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (<I>n</I>&#8722;1)))) (2&#8722;1))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; (1, if 1 = 0; else 1 &#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (1&#8722;1)))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; (1 &#215; (G (<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (1&#8722;1)))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; (1 &#215; ((&#955;<I>n</I>.(1, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>= 0; else<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (<I>n</I>&#8722;1)))) (1&#8722;1)))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; (1 &#215; (1, if 0 = 0; else 0 &#215; ((<B>Y</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>G) (0&#8722;1))))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">4 &#215; (3 &#215; (2 &#215; (1 &#215; (1))))</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><TT style="FONT-FAMILY: monospace, Courier">24</TT></DD></DL>
<P style="MARGIN: 0.5em 0px">Every recursively defined function can be seen as a fixed point of some suitably defined function closing over the recursive call with an extra argument, and therefore, using<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>Y</B></TT>, every recursively defined function can be expressed as a lambda expression. In particular, we can now cleanly define the subtraction, multiplication and comparison predicate of natural numbers recursively.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Standard_terms class=mw-headline>Standard terms</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Standard terms" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=27">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Certain terms have commonly accepted names:</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=I></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>I</B>&nbsp;:= &#955;<I>x</I>.<I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=K></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>K</B>&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.<I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=S></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>S</B>&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.&#955;<I>z</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I>)</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=B></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>B</B>&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.&#955;<I>z</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I>)</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=C></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>C</B>&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.&#955;<I>z</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>z</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=W></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>W</B>&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=U></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>U</B>&nbsp;:= &#955;<I>x</I>.&#955;<I>y</I>.<I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I>)</TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=omega></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#969;</B>&nbsp;:= &#955;<I>x</I>.<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=Omega></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#937;</B>&nbsp;:=<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>&#969;</B><SPAN class=Apple-converted-space>&nbsp;</SPAN><B>&#969;</B></TT></DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px"><SPAN id=Y></SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>Y</B>&nbsp;:= &#955;<I>g</I>.(&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>)) (&#955;<I>x</I>.<I>g</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>))</TT></DD></DL>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Typed_lambda_calculus class=mw-headline>Typed lambda calculus</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=28">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main article:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Typed_lambda_calculus">Typed lambda calculus</A></DIV>
<TABLE role=presentation class="plainlinks metadata ambox ambox-style" style="FONT-SIZE: 14px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BACKGROUND: rgb(251,251,251); BORDER-BOTTOM: rgb(162,169,177) 1px solid; MARGIN: 0px 124px; BORDER-LEFT: rgb(255,204,51) 10px solid; border-image: initial">
<TBODY>
<TR>
<TD class=mbox-image style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 2px; TEXT-ALIGN: center; PADDING-TOP: 2px; PADDING-LEFT: 0.5em; BORDER-LEFT: medium none; PADDING-RIGHT: 0px">
<DIV style="WIDTH: 52px"><IMG style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: middle; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" alt="" src="https://upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/40px-Edit-clear.svg.png" width=40 height=40 data-file-height="48" data-file-width="48" srcset="//upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/60px-Edit-clear.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/f/f2/Edit-clear.svg/80px-Edit-clear.svg.png 2x"></DIV></TD>
<TD class=mbox-text style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 910px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.25em; PADDING-LEFT: 0.5em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.5em"><SPAN class=mbox-text-span><B>This article should include a summary of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Typed lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Typed_lambda_calculus">typed lambda calculus</A>.</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:Summary style" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Summary_style">Wikipedia:Summary style</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for information on how to incorporate it into this article's main text.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="FONT-SIZE: 11px"><I>(August 2009)</I></SMALL></SPAN></TD></TR></TBODY></TABLE>
<P style="MARGIN: 0.5em 0px">A<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>typed lambda calculus</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a typed<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Formalism (mathematics)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Formalism_(mathematics)">formalism</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that uses the lambda-symbol (<SPAN class=mwe-math-element style="MAX-WIDTH: 100%; OVERFLOW-X: auto"><SPAN class="mwe-math-mathml-inline mwe-math-mathml-a11y" style="OVERFLOW: hidden; FONT-SIZE: 16px; CLIP: rect(1px 1px 1px 1px); HEIGHT: 1px; WIDTH: 1px; POSITION: absolute; DISPLAY: none; opacity: 0"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><annotation encoding="application/x-tex">{\displaystyle \lambda }</annotation></semantics></math></SPAN><IMG aria-hidden=true class=mwe-math-fallback-image-inline style="BORDER-TOP: 0px; HEIGHT: 2.17ex; BORDER-RIGHT: 0px; WIDTH: 1.36ex; VERTICAL-ALIGN: -0.33ex; BORDER-BOTTOM: 0px; MARGIN: 0px; BORDER-LEFT: 0px; DISPLAY: inline-block" alt="\lambda " src="https://wikimedia.org/api/rest_v1/media/math/render/svg/b43d0ea3c9c025af1be9128e62a18fa74bedda2a"></SPAN>) to denote anonymous function abstraction. In this context, types are usually objects of a syntactic nature that are assigned to lambda terms; the exact nature of a type depends on the calculus considered (see kinds below). From a certain point of view, typed lambda calculi can be seen as refinements of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Untyped lambda calculus" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Untyped_lambda_calculus">untyped lambda calculus</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>but from another point of view, they can also be considered the more fundamental theory and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>untyped lambda calculus</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>a special case with only one type.<SUP id=cite_ref-23 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-23">[23]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">Typed lambda calculi are foundational<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Programming languages" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Programming_languages">programming languages</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and are the base of typed<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Functional programming languages" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_programming_languages">functional programming languages</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="ML programming language" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/ML_programming_language">ML</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Haskell (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Haskell_(programming_language)">Haskell</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and, more indirectly, typed<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Imperative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Imperative_programming">imperative programming languages</A>. Typed lambda calculi play an important role in the design of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Type systems" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Type_systems">type systems</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for programming languages; here typability usually captures desirable properties of the program, e.g. the program will not cause a memory access violation.</P>
<P style="MARGIN: 0.5em 0px">Typed lambda calculi are closely related to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Mathematical logic" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mathematical_logic">mathematical logic</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Proof theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Proof_theory">proof theory</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>via the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Curry&#8211;Howard isomorphism" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Curry%E2%80%93Howard_isomorphism">Curry&#8211;Howard isomorphism</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and they can be considered as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Internal language" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Internal_language">internal language</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of classes of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Category theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Category_theory">categories</A>, e.g. the simply typed lambda calculus is the language of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Cartesian closed category" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Cartesian_closed_category">Cartesian closed categories</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(CCCs).</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Computable_functions_and_lambda_calculus class=mw-headline>Computable functions and lambda calculus</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Computable functions and lambda calculus" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=29">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">A function<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>F</I>:<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>N</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594;<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>N</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>of natural numbers is a computable function if and only if there exists a lambda expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>such that for every pair of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>N</B>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>F</I>(<I>x</I>)=<I>y</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>if and only if<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>f</I><TT style="FONT-FAMILY: monospace, Courier"><I>x</I></TT>&nbsp;=<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">&#946;</SUB>&nbsp;<TT style="FONT-FAMILY: monospace, Courier"><I>y</I></TT>,&nbsp; where<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>y</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>are the Church numerals corresponding to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>x</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>y</I>, respectively and =<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">&#946;</SUB><SPAN class=Apple-converted-space>&nbsp;</SPAN>meaning equivalence with beta reduction. This is one of the many ways to define computability; see the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church-Turing thesis" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church-Turing_thesis">Church-Turing thesis</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for a discussion of other approaches and their equivalence.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Undecidability_of_equivalence class=mw-headline>Undecidability of equivalence</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Undecidability of equivalence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=30">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">There is no algorithm that takes as input two lambda expressions and outputs<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">TRUE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">FALSE</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>depending on whether or not the two expressions are equivalent. This was historically the first problem for which undecidability could be proven. As is common for a proof of undecidability, the proof shows that no computable function can decide the equivalence.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church's thesis" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church%27s_thesis">Church's thesis</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is then invoked to show that no algorithm can do so.</P>
<P style="MARGIN: 0.5em 0px">Church's proof first reduces the problem to determining whether a given lambda expression has a<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>normal form</I>. A normal form is an equivalent expression that cannot be reduced any further under the rules imposed by the form. Then he assumes that this predicate is computable, and can hence be expressed in lambda calculus. Building on earlier work by Kleene and constructing a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="G&#246;del numbering" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/G%C3%B6del_numbering">G&#246;del numbering</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for lambda expressions, he constructs a lambda expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>e</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>that closely follows the proof of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="G&#246;del's incompleteness theorems" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems">G&#246;del's first incompleteness theorem</A>. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>e</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is applied to its own G&#246;del number, a contradiction results.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Lambda_calculus_and_programming_languages class=mw-headline>Lambda calculus and programming languages</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Lambda calculus and programming languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=31">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">As pointed out by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Peter Landin" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Peter_Landin">Peter Landin</A>'s 1965 paper<SPAN class=Apple-converted-space>&nbsp;</SPAN><CITE><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(102,51,102); PADDING-RIGHT: 13px" href="http://portal.acm.org/citation.cfm?id=363749&amp;coll=portal&amp;dl=ACM" rel=nofollow>A Correspondence between ALGOL 60 and Church's Lambda-notation</A></CITE>, sequential<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Procedural programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Procedural_programming">procedural programming languages</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be understood in terms of the lambda calculus, which provides the basic mechanisms for procedural abstraction and procedure (subprogram) application.</P>
<P style="MARGIN: 0.5em 0px">Lambda calculus<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Reification (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Reification_(computer_science)">reifies</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>"functions" and makes them first-class objects, which raises implementation complexity when it is implemented.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Anonymous_functions class=mw-headline>Anonymous functions</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Anonymous functions" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=32">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main article:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Anonymous function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Anonymous_function">Anonymous function</A></DIV>
<P style="MARGIN: 0.5em 0px">For example, in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lisp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_(programming_language)">Lisp</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>the 'square' function can be expressed as a lambda expression as follows:</P>
<DIV class="mw-highlight mw-content-ltr" style="BACKGROUND: rgb(248,248,248); unicode-bidi: embed; DIRECTION: ltr" dir=ltr><PRE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; WHITE-SPACE: pre-wrap; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1em; PADDING-TOP: 1em; PADDING-LEFT: 1em; BORDER-LEFT: rgb(234,236,240) 1px solid; LINE-HEIGHT: 1.3em; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,249,250); tab-size: 4"><SPAN class=p>(</SPAN><SPAN class=k style="FONT-WEIGHT: bold; COLOR: rgb(0,128,0)">lambda</SPAN> <SPAN class=p>(</SPAN><SPAN class=nv style="COLOR: rgb(25,23,124)">x</SPAN><SPAN class=p>)</SPAN> <SPAN class=p>(</SPAN><SPAN class=nb style="COLOR: rgb(0,128,0)">*</SPAN> <SPAN class=nv style="COLOR: rgb(25,23,124)">x</SPAN> <SPAN class=nv style="COLOR: rgb(25,23,124)">x</SPAN><SPAN class=p>))</SPAN>
</PRE></DIV>
<P style="MARGIN: 0.5em 0px">The above example is an expression that evaluates to a first-class function. The symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">lambda</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>creates an anonymous function, given a list of parameter names,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">(x)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8212; just a single argument in this case, and an expression that is evaluated as the body of the function,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">(* x x)</CODE>. Anonymous functions are sometimes called lambda expressions.</P>
<P style="MARGIN: 0.5em 0px">For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Pascal (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)">Pascal</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and many other imperative languages have long supported passing<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Subprograms class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Subprograms">subprograms</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Arguments class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Arguments">arguments</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to other subprograms through the mechanism of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Function pointers" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Function_pointers">function pointers</A>. However, function pointers are not a sufficient condition for functions to be<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="First-class function" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/First-class_function">first class</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>datatypes, because a function is a first class datatype if and only if new instances of the function can be created at run-time. And this run-time creation of functions is supported in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Smalltalk style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=JavaScript style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</A>, and more recently in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Scala (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Scala_(programming_language)">Scala</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Eiffel (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Eiffel_(programming_language)">Eiffel</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>("agents"),<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="C Sharp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C#</A>("delegates") and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=C++11 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C%2B%2B11">C++11</A>, among others.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Reduction_strategies class=mw-headline>Reduction strategies</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Reduction strategies" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=33">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">For more details on this topic, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Evaluation strategy" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Evaluation_strategy">Evaluation strategy</A>.</DIV>
<P style="MARGIN: 0.5em 0px">Whether a term is normalising or not, and how much work needs to be done in normalising it if it is, depends to a large extent on the reduction strategy used. The distinction between reduction strategies relates to the distinction in functional programming languages between<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Eager evaluation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Eager_evaluation">eager evaluation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lazy evaluation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lazy_evaluation">lazy evaluation</A>.</P>
<DL style="MARGIN-BOTTOM: 0.5em; MARGIN-TOP: 0.2em">
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Full beta reductions</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">Any redex can be reduced at any time. This means essentially the lack of any particular reduction strategy&#8212;with regard to reducibility, "all bets are off".</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Applicative order</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">The rightmost, innermost redex is always reduced first. Intuitively this means a function's arguments are always reduced before the function itself. Applicative order always attempts to apply functions to normal forms, even when this is not possible.</DD>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">Most programming languages (including Lisp, ML and imperative languages like C and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Java programming language" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Java_programming_language">Java</A>) are described as "strict", meaning that functions applied to non-normalising arguments are non-normalising. This is done essentially using applicative order, call by value reduction (<A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#Call_by_value">see below</A>), but usually called "eager evaluation".</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Normal order</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">The leftmost, outermost redex is always reduced first. That is, whenever possible the arguments are substituted into the body of an abstraction before the arguments are reduced.</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Call by name</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">As normal order, but no reductions are performed inside abstractions. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">&#955;<I>x</I>.(&#955;<I>x</I>.<I>x</I>)<I>x</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is in normal form according to this strategy, although it contains the redex<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>x</I>)<I>x</I></TT>.</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Call by value</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">Only the outermost redexes are reduced: a redex is reduced only when its right hand side has reduced to a value (variable or lambda abstraction).</DD>
<DT style="MARGIN-BOTTOM: 0.1em; FONT-WEIGHT: bold">Call by need</DT>
<DD style="MARGIN-BOTTOM: 0.1em; MARGIN-LEFT: 1.6em; MARGIN-RIGHT: 0px">As normal order, but function applications that would duplicate terms instead name the argument, which is then reduced only "when it is needed". Called in practical contexts "lazy evaluation". In implementations this "name" takes the form of a pointer, with the redex represented by a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Thunk (functional programming)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Thunk_(functional_programming)">thunk</A>.</DD></DL>
<P style="MARGIN: 0.5em 0px">Applicative order is not a normalising strategy. The usual counterexample is as follows: define<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#937;</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>= &#969;&#969;</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>where<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#969;</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>= &#955;<I>x</I>.<I>xx</I></TT>. This entire expression contains only one redex, namely the whole expression; its reduct is again<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#937;</B></TT>. Since this is the only available reduction,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#937;</B></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>has no normal form (under any evaluation strategy). Using applicative order, the expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>KI&#937;</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>= (&#955;<I>x</I>.&#955;<I>y</I>.<I>x</I>) (&#955;<I>x</I>.<I>x</I>)<B>&#937;</B></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is reduced by first reducing<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#937;</B></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>to normal form (since it is the rightmost redex), but since<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>&#937;</B></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>has no normal form, applicative order fails to find a normal form for<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>KI&#937;</B></TT>.</P>
<P style="MARGIN: 0.5em 0px">In contrast, normal order is so called because it always finds a normalising reduction, if one exists. In the above example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><B>KI&#937;</B></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>reduces under normal order to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>I</I>, a normal form. A drawback is that redexes in the arguments may be copied, resulting in duplicated computation (for example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>xx</I>) ((&#955;<I>x</I>.<I>x</I>)<I>y</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>reduces to<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">((&#955;<I>x</I>.<I>x</I>)<I>y</I>) ((&#955;<I>x</I>.<I>x</I>)<I>y</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>using this strategy; now there are two redexes, so full evaluation needs two more steps, but if the argument had been reduced first, there would now be none).</P>
<P style="MARGIN: 0.5em 0px">The positive tradeoff of using applicative order is that it does not cause unnecessary computation, if all arguments are used, because it never substitutes arguments containing redexes and hence never needs to copy them (which would duplicate work). In the above example, in applicative order<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>xx</I>) ((&#955;<I>x</I>.<I>x</I>)<I>y</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>reduces first to<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>xx</I>)<I>y</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>and then to the normal order<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>yy</I></TT>, taking two steps instead of three.</P>
<P style="MARGIN: 0.5em 0px">Most<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>purely</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>functional programming languages (notably<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Miranda (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Miranda_(programming_language)">Miranda</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and its descendents, including Haskell), and the proof languages of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Automated theorem prover" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Automated_theorem_prover">theorem provers</A>, use<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>lazy evaluation</I>, which is essentially the same as call by need. This is like normal order reduction, but call by need manages to avoid the duplication of work inherent in normal order reduction using<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>sharing</I>. In the example given above,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">(&#955;<I>x</I>.<I>xx</I>) ((&#955;<I>x</I>.<I>x</I>)<I>y</I>)</TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>reduces to<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier">((&#955;<I>x</I>.<I>x</I>)<I>y</I>) ((&#955;<I>x</I>.<I>x</I>)<I>y</I>)</TT>, which has two redexes, but in call by need they are represented using the same object rather than copied, so when one is reduced the other is too.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=A_note_about_complexity class=mw-headline>A note about complexity</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: A note about complexity" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=34">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">While the idea of beta reduction seems simple enough, it is not an atomic step, in that it must have a non-trivial cost when estimating<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Computational complexity theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Computational_complexity_theory">computational complexity</A>.<SUP id=cite_ref-24 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-24">[24]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>To be precise, one must somehow find the location of all of the occurrences of the bound variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>V</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the expression<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>E</I></TT>, implying a time cost, or one must keep track of these locations in some way, implying a space cost. A na&#239;ve search for the locations of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>V</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>E</I></TT><SPAN class=Apple-converted-space>&nbsp;</SPAN>is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Big O notation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Big_O_notation"><I>O</I>(<I>n</I>)</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the length<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>n</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>of<SPAN class=Apple-converted-space>&nbsp;</SPAN><TT style="FONT-FAMILY: monospace, Courier"><I>E</I></TT>. This has led to the study of systems that use<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Explicit substitution" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Explicit_substitution">explicit substitution</A>. Sinot's<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Director string" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Director_string">director strings</A><SUP id=cite_ref-25 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lambda_calculus#cite_note-25">[25]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>offer a way of tracking the locations of free variables in expressions.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Parallelism_and_concurrency class=mw-headline>Parallelism and concurrency</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Parallelism and concurrency" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=35">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Church&#8211;Rosser theorem" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Church%E2%80%93Rosser_theorem">Church&#8211;Rosser</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>property of the lambda calculus means that evaluation (&#946;-reduction) can be carried out in<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>any order</I>, even in parallel. This means that various<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Evaluation strategy" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Evaluation_strategy#Nondeterministic_strategies">nondeterministic evaluation strategies</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>are relevant. However, the lambda calculus does not offer any explicit constructs for<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Parallel computing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Parallel_computing">parallelism</A>. One can add constructs such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Futures and promises" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Futures_and_promises">Futures</A>to the lambda calculus. Other<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Process calculi" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Process_calculi">process calculi</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>have been developed for describing communication and concurrency.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Semantics class=mw-headline>Semantics</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Semantics" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Lambda_calculus&amp;action=edit&amp;section=36">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The fact that lambda calculus terms act as functions on other lambda calculus terms, and even on themselves, led to questions about the semantics of the lambda calculus. Could a sensible meaning be assigned to lambda calculus terms? The natural semantics was to find a set<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>isomorphic to the function space<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594;<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I>, of functions on itself. However, no nontrivial such<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>can exist, by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Cardinality style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Cardinality">cardinality</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>constraints because the set of all functions from<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>has greater cardinality than<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I>, unless<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Singleton set" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Singleton_set">singleton set</A>.</P>
<P style="MARGIN: 0.5em 0px">In the 1970s,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Dana Scott" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dana_Scott">Dana Scott</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>showed that, if only<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Scott continuity" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Scott_continuity">continuous functions</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>were considered, a set or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Domain theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Domain_theory">domain</A><SPAN class=Apple-converted-space>&nbsp;</SPAN><I>D</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>with the required property could be found, thus providing a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Model theory" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Model_theory">model</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for the lambda calculus.</P>
<P style="MARGIN: 0.5em 0px">This work also formed the basis for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Denotational semantics" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Denotational_semantics">denotational semantics</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of programming languages.</P></DIV></DIV>