<H1 lang=en id=firstHeading class=firstHeading style='OVERFLOW: visible; FONT-SIZE: 1.8em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(162,169,177) 1px solid; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; FONT-STYLE: normal; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0.25em; ORPHANS: 2; WIDOWS: 2; LETTER-SPACING: normal; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px'>Object-oriented programming</H1>
<DIV id=bodyContent class=mw-body-content style="FONT-SIZE: 0.87em; FONT-FAMILY: sans-serif; WHITE-SPACE: normal; WORD-SPACING: 0px; POSITION: relative; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(34,34,34); FONT-STYLE: normal; ORPHANS: 2; WIDOWS: 2; Z-INDEX: 0; LETTER-SPACING: normal; LINE-HEIGHT: 1.6; TEXT-INDENT: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px">
<DIV id=siteSub style="FONT-SIZE: 12px; DISPLAY: block">From Wikipedia, the free encyclopedia</DIV>
<DIV id=contentSub style="FONT-SIZE: 11px; WIDTH: auto; COLOR: rgb(84,84,84); MARGIN: 0px 0px 1.4em 1em; LINE-HEIGHT: 1.2em"></DIV>
<DIV id=jump-to-nav class=mw-jump style="OVERFLOW: hidden; MARGIN-BOTTOM: 1.4em; HEIGHT: 0px; ZOOM: 1; MARGIN-TOP: -1.4em; user-select: none"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#mw-head"></A><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#p-search"></A></DIV>
<DIV lang=en id=mw-content-text class=mw-content-ltr style="DIRECTION: ltr" dir=ltr>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">"Object-oriented" redirects here. For other meanings of object-oriented, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-orientation (disambiguation)" class="mw-redirect mw-disambig" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-orientation_(disambiguation)">Object-orientation</A>.</DIV>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em; MARGIN-TOP: -0.5em">"Object-oriented programming language" redirects here. For a list of object-oriented programming languages, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="List of object-oriented programming languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages">List of object-oriented programming languages</A>.</DIV>
<TABLE class="vertical-navbox nowraplinks" style="FONT-SIZE: 12px; BORDER-TOP: rgb(170,170,170) 1px solid; BORDER-RIGHT: rgb(170,170,170) 1px solid; WIDTH: 22em; BACKGROUND: rgb(249,249,249); BORDER-BOTTOM: rgb(170,170,170) 1px solid; FLOAT: right; PADDING-BOTTOM: 0.2em; TEXT-ALIGN: center; PADDING-TOP: 0.2em; PADDING-LEFT: 0.2em; CLEAR: right; MARGIN: 0px 0px 1em 1em; BORDER-SPACING: 0.4em 0px; BORDER-LEFT: rgb(170,170,170) 1px solid; LINE-HEIGHT: 1.4em; PADDING-RIGHT: 0.2em">
<TBODY>
<TR>
<TH style="FONT-SIZE: 17px; PADDING-BOTTOM: 0.2em; PADDING-TOP: 0.2em; PADDING-LEFT: 0.4em; LINE-HEIGHT: 1.2em; PADDING-RIGHT: 0.4em"><A title="Programming paradigm" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Programming_paradigm">Programming paradigms</A></TH></TR>
<TR>
<TD style="PADDING-BOTTOM: 0.4em; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0.1em; PADDING-RIGHT: 0.1em">
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Action language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Action_language">Action</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Agent-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Agent-oriented_programming">Agent-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Array programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Array_programming">Array-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Automata-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Automata-based_programming">Automata-based</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Concurrent computing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Concurrent_computing">Concurrent computing</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Relativistic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Relativistic_programming">Relativistic programming</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Data-driven programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data-driven_programming">Data-driven</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Declarative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Declarative_programming">Declarative</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Imperative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Imperative_programming">Imperative</A>)
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Constraint programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Constraint_programming">Constraint</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Constraint logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Constraint_logic_programming">Constraint logic</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Concurrent constraint logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Concurrent_constraint_logic_programming">Concurrent constraint logic</A></LI></UL></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Dataflow programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dataflow_programming">Dataflow</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Flow-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Flow-based_programming">Flow-based</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em">Cell-oriented (<A title=Spreadsheet style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Spreadsheet">spreadsheets</A>)</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Reactive programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Reactive_programming">Reactive</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Functional programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_programming">Functional</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Functional logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_logic_programming">Functional logic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Purely functional programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Purely_functional_programming">Purely functional</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Logic_programming">Logic</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Abductive logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abductive_logic_programming">Abductive logic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Answer set programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Answer_set_programming">Answer set</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Concurrent logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Concurrent_logic_programming">Concurrent logic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Functional logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_logic_programming">Functional logic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Inductive logic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inductive_logic_programming">Inductive logic</A></LI></UL></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Dynamic programming language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dynamic_programming_language">Dynamic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="End-user development" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/End-user_development">End-user programming</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Event-driven programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Event-driven_programming">Event-driven</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Service-oriented architecture" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Service-oriented_architecture">Service-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Time-driven programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Time-driven_programming">Time-driven</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Expression-oriented programming language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Expression-oriented_programming_language">Expression-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Feature-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Feature-oriented_programming">Feature-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Function-level programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Function-level_programming">Function-level</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Value-level programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Value-level_programming">Value-level</A>)</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Generic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Generic_programming">Generic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Imperative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Imperative_programming">Imperative</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Declarative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Declarative_programming">Declarative</A>)
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Literate programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Literate_programming">Literate</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Procedural programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Procedural_programming">Procedural</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Inductive programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inductive_programming">Inductive programming</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Language-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Language-oriented_programming">Language-oriented</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Natural language programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Natural_language_programming">Natural language programming</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Service-oriented modeling" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Service-oriented_modeling#Discipline-specific_modeling">Discipline-specific</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Domain-specific language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Domain-specific_language">Domain-specific</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Grammar-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Grammar-oriented_programming">Grammar-oriented</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Dialect (computing)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dialect_(computing)">Dialecting</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Intentional programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Intentional_programming">Intentional</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title=Metaprogramming style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Metaprogramming">Metaprogramming</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Automatic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Automatic_programming">Automatic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Reflection (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Reflection_(computer_programming)">Reflective</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Attribute-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Attribute-oriented_programming">Attribute-oriented</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title=Homoiconicity style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Homoiconicity">Homoiconic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Macro (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Macro_(computer_science)">Macro</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Template metaprogramming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Template_metaprogramming">Template</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Policy-based design" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Policy-based_design">Policy-based</A></LI></UL></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Non-structured programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Non-structured_programming">Non-structured</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Structured programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Structured_programming">Structured</A>)
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Array programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Array_programming">Array</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Nondeterministic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Nondeterministic_programming">Nondeterministic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Parallel computing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Parallel_computing">Parallel computing</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Process-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Process-oriented_programming">Process-oriented</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Tacit programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Tacit_programming">Point-free style</A>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Concatenative programming language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Concatenative_programming_language">Concatenative</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Semantic-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Semantic-oriented_programming">Semantic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Structured programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Structured_programming">Structured</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Non-structured programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Non-structured_programming">Non-structured</A>)
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Block (programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Block_(programming)">Block-structured</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Modular programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Modular_programming">Modular</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Monolithic application" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Monolithic_application">Monolithic</A>)</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><STRONG class=selflink style="WHITE-SPACE: nowrap; FONT-WEIGHT: 700">Object-oriented</STRONG>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Actor model" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Actor_model">Actor-based</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Class-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class-based_programming">Class-based</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Concurrent object-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Concurrent_object-oriented_programming">Concurrent</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Prototype-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype-based_programming">Prototype-based</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em">By<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Separation of concerns" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Separation_of_concerns">separation of concerns</A>:
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Aspect-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Aspect-oriented_programming">Aspect-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Role-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Role-oriented_programming">Role-oriented</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Subject-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Subject-oriented_programming">Subject-oriented</A></LI></UL></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Recursion (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursion_(computer_science)">Recursive</A></LI></UL></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Value-level programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Value-level_programming">Value-level</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Function-level programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Function-level_programming">Function-level</A>)</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Probabilistic programming language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Probabilistic_programming_language">Probabilistic</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Concept programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Concept_programming">Concept</A></LI></UL></TD></TR>
<TR>
<TD style="FONT-SIZE: 14px; TEXT-ALIGN: right">
<DIV class="plainlinks hlist navbar mini" style="FONT-SIZE: 12px; FONT-WEIGHT: normal; DISPLAY: inline">
<UL style="LIST-STYLE-TYPE: disc; WHITE-SPACE: nowrap; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); DISPLAY: inline; PADDING-RIGHT: 0px">
<LI class=nv-view style="WORD-SPACING: -0.12em; MARGIN: 0px; DISPLAY: inline"><A title="Template:Programming paradigms" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Template:Programming_paradigms"><ABBR title="View this template" style="CURSOR: inherit; TEXT-DECORATION: none; FONT-VARIANT: small-caps; BORDER-BOTTOM: medium none">v</ABBR></A></LI>
<LI class=nv-talk style="WORD-SPACING: -0.12em; MARGIN: 0px; DISPLAY: inline"><A title="Template talk:Programming paradigms" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Template_talk:Programming_paradigms"><ABBR title="Discuss this template" style="CURSOR: inherit; TEXT-DECORATION: none; FONT-VARIANT: small-caps; BORDER-BOTTOM: medium none">t</ABBR></A></LI>
<LI class=nv-edit style="WORD-SPACING: -0.12em; MARGIN: 0px; DISPLAY: inline"><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(102,51,102); PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 0px !important; PADDING-RIGHT: 0px !important" href="https://en.wikipedia.org/w/index.php?title=Template:Programming_paradigms&amp;action=edit"><ABBR title="Edit this template" style="CURSOR: inherit; TEXT-DECORATION: none; FONT-VARIANT: small-caps; BORDER-BOTTOM: medium none">e</ABBR></A></LI></UL></DIV></TD></TR></TBODY></TABLE>
<P style="MARGIN: 0.5em 0px"><B>Object-oriented programming</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<B>OOP</B>) is a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Programming paradigm" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Programming_paradigm">programming paradigm</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>based on the concept of "<A title="Object (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_(computer_science)">objects</A>", which may contain<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Data style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data">data</A>, in the form of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Field (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Field_(computer_science)">fields</A>, often known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>attributes;</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>and code, in the form of procedures, often known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A title="Method (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Method_(computer_science)">methods</A>.</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>A feature of objects is that an object's procedures can access and often modify the data fields of the object with which they are associated (objects have a notion of "<A title="This (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/This_(computer_programming)">this</A>" or "self"). In OOP, computer programs are designed by making them out of objects that interact with one another.<SUP id=cite_ref-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-1">[1]</A></SUP><SUP id=cite_ref-2 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-2">[2]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>There is significant diversity of OOP languages, but the most popular ones are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Class-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class-based_programming">class-based</A>, meaning that objects are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Instance (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Instance_(computer_science)">instances</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Class (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class_(computer_science)">classes</A>, which typically also determine their<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_type">type</A>.</P>
<P style="MARGIN: 0.5em 0px">Many of the most widely used programming languages (such as C++, Delphi, Java, Python etc.) are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Multi-paradigm programming language" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Multi-paradigm_programming_language">multi-paradigm programming languages</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that support object-oriented programming to a greater or lesser degree, typically in combination with<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Imperative programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Imperative_programming">imperative</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Procedural programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Procedural_programming">procedural programming</A>. Significant object-oriented languages include<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Java (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Java_(programming_language)">Java</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=C++ style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C%2B%2B">C++</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="C Sharp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C#</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Python (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=PHP style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/PHP">PHP</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ruby (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ruby_(programming_language)">Ruby</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Perl style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Perl">Perl</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object Pascal" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_Pascal">Object Pascal</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Objective-C style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Objective-C">Objective-C</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Dart (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dart_(programming_language)">Dart</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Swift (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Swift_(programming_language)">Swift</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Scala (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Scala_(programming_language)">Scala</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lisp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_(programming_language)">Common Lisp</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Smalltalk style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</A>.</P>
<P style="MARGIN: 0.5em 0px"></P>
<DIV id=toc class=toc style="FONT-SIZE: 13px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BORDER-BOTTOM: rgb(162,169,177) 1px solid; ZOOM: 1; PADDING-BOTTOM: 7px; PADDING-TOP: 7px; PADDING-LEFT: 7px; BORDER-LEFT: rgb(162,169,177) 1px solid; DISPLAY: table; PADDING-RIGHT: 7px; BACKGROUND-COLOR: rgb(248,249,250)">
<DIV id=toctitle style="DIRECTION: ltr; TEXT-ALIGN: center">
<H2 style="OVERFLOW: hidden; FONT-SIZE: 13px; BORDER-TOP: 0px; FONT-FAMILY: sans-serif; BORDER-RIGHT: 0px; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; BORDER-LEFT: 0px; DISPLAY: inline; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px">Contents</H2><SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=toctoggle style="FONT-SIZE: 12px; user-select: none">&nbsp;[<A role=button tabIndex=0 id=togglelink style="CURSOR: pointer; TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(6,69,173)">hide</A>]&nbsp;</SPAN></DIV>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-1 tocsection-1" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Features"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Features</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-2" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Shared_with_non-OOP_predecessor_languages"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Shared with non-OOP predecessor languages</SPAN></A></LI>
<LI class="toclevel-2 tocsection-3" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Objects_and_classes"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Objects and classes</SPAN></A></LI>
<LI class="toclevel-2 tocsection-4" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Dynamic_dispatch.2Fmessage_passing"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Dynamic dispatch/message passing</SPAN></A></LI>
<LI class="toclevel-2 tocsection-5" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Encapsulation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Encapsulation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-6" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Composition.2C_inheritance.2C_and_delegation"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Composition, inheritance, and delegation</SPAN></A></LI>
<LI class="toclevel-2 tocsection-7" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Polymorphism"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.6</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Polymorphism</SPAN></A></LI>
<LI class="toclevel-2 tocsection-8" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Open_recursion"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">1.7</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Open recursion</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-9" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#History"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">History</SPAN></A></LI>
<LI class="toclevel-1 tocsection-10" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#OOP_languages"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">OOP languages</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-11" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#OOP_in_dynamic_languages"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">OOP in dynamic languages</SPAN></A></LI>
<LI class="toclevel-2 tocsection-12" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#OOP_in_a_network_protocol"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">3.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">OOP in a network protocol</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-13" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Design_patterns"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Design patterns</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-14" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Inheritance_and_behavioral_subtyping"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Inheritance and behavioral subtyping</SPAN></A></LI>
<LI class="toclevel-2 tocsection-15" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Gang_of_Four_design_patterns"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Gang of Four design patterns</SPAN></A></LI>
<LI class="toclevel-2 tocsection-16" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Object-orientation_and_databases"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.3</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Object-orientation and databases</SPAN></A></LI>
<LI class="toclevel-2 tocsection-17" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Real-world_modeling_and_relationships"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.4</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Real-world modeling and relationships</SPAN></A></LI>
<LI class="toclevel-2 tocsection-18" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#OOP_and_control_flow"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">OOP and control flow</SPAN></A></LI>
<LI class="toclevel-2 tocsection-19" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Responsibility-_vs._data-driven_design"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.6</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Responsibility- vs. data-driven design</SPAN></A></LI>
<LI class="toclevel-2 tocsection-20" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#SOLID_and_GRASP_guidelines"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">4.7</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">SOLID and GRASP guidelines</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-21" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Criticism"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">5</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Criticism</SPAN></A></LI>
<LI class="toclevel-1 tocsection-22" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Formal_semantics"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">6</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Formal semantics</SPAN></A></LI>
<LI class="toclevel-1 tocsection-23" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#See_also"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">See also</SPAN></A>
<UL style="LIST-STYLE-TYPE: none; PADDING-BOTTOM: 0px; TEXT-ALIGN: left; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0px 0px 0px 2em; LIST-STYLE-IMAGE: none; PADDING-RIGHT: 0px">
<LI class="toclevel-2 tocsection-24" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Systems"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.1</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Systems</SPAN></A></LI>
<LI class="toclevel-2 tocsection-25" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Modeling_languages"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">7.2</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Modeling languages</SPAN></A></LI></UL></LI>
<LI class="toclevel-1 tocsection-26" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#References"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">8</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">References</SPAN></A></LI>
<LI class="toclevel-1 tocsection-27" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Further_reading"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">9</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">Further reading</SPAN></A></LI>
<LI class="toclevel-1 tocsection-28" style="MARGIN-BOTTOM: 0.1em"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#External_links"><SPAN class=tocnumber style="TEXT-DECORATION: ; COLOR: rgb(34,34,34); PADDING-LEFT: 0px; DISPLAY: table-cell; PADDING-RIGHT: 0.5em">10</SPAN><SPAN class=toctext style="TEXT-DECORATION: ; DISPLAY: table-cell">External links</SPAN></A></LI></UL></DIV>
<P style="MARGIN: 0.5em 0px"></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Features class=mw-headline>Features</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Features" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=1">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">Object-oriented Programming uses objects, but not all of the associated techniques and structures are supported directly in languages that claim to support OOP. The features listed below are, however, common among languages considered strongly class- and object-oriented (or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Multi-paradigm class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Multi-paradigm">multi-paradigm</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>with OOP support), with notable exceptions mentioned.<SUP id=cite_ref-ArmstrongQuarks_3-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-ArmstrongQuarks-3">[3]</A></SUP><SUP id=cite_ref-4 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-4">[4]</A></SUP><SUP id=cite_ref-5 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-5">[5]</A></SUP><SUP id=cite_ref-pierce_6-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-pierce-6">[6]</A></SUP></P>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Comparison of programming languages (object-oriented programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Comparison_of_programming_languages_(object-oriented_programming)">Comparison of programming languages (object-oriented programming)</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="List of object-oriented programming terms" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/List_of_object-oriented_programming_terms">List of object-oriented programming terms</A></DIV>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Shared_with_non-OOP_predecessor_languages class=mw-headline>Shared with non-OOP predecessor languages</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Shared with non-OOP predecessor languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=2">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Object-oriented programming languages typically share low-level features with high-level<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Procedural programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Procedural_programming">procedural programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>languages (which were invented first). The fundamental tools that can be used to construct a program include:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Variable (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Variable_(computer_science)">Variables</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can store information formatted in a small number of built-in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_type">data types</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Integer (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Integer_(computer_science)">integers</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and alphanumeric<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Character (computing)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Character_(computing)">characters</A>. This may include<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data structures" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_structures">data structures</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="String (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/String_(computer_science)">strings</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="List (abstract data type)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/List_(abstract_data_type)">lists</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Hash table" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Hash_table">hash tables</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that are either built-in or result from combining variables using<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Pointer (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Pointer_(computer_programming)">memory pointers</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em">Procedures &#8211; also known as functions, methods, routines, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Subroutine style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Subroutine">subroutines</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8211; that take input, generate output, and manipulate data. Modern languages include<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Structured programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Structured_programming">structured programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>constructs like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Loop (computing)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Loop_(computing)">loops</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Conditional (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Conditional_(computer_programming)">conditionals</A>.</LI></UL>
<P style="MARGIN: 0.5em 0px"><A title="Modular programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Modular_programming">Modular programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>support provides the ability to group procedures into files and modules for organizational purposes. Modules are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Namespace style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Namespace">namespaced</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>so code in one module will not be accidentally confused with the same procedure or variable name in another file or module.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Objects_and_classes class=mw-headline>Objects and classes</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Objects and classes" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=3">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Languages that support object-oriented programming typically use<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Inheritance (object-oriented programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)">inheritance</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for code reuse and extensibility in the form of either<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Class-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class-based_programming">classes</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Prototype-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype-based_programming">prototypes</A>. Those that use classes support two main concepts:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Class (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class_(computer_science)">Classes</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8211; the definitions for the data format and available procedures for a given type or class of object; may also contain data and procedures (known as class methods) themselves, i.e. classes contains the data members and member functions</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Object (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_(computer_science)">Objects</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8211; instances of classes</LI></UL>
<P style="MARGIN: 0.5em 0px">Objects sometimes correspond to things found in the real world. For example, a graphics program may have objects such as "circle", "square", "menu". An online shopping system might have objects such as "shopping cart", "customer", and "product".<SUP id=cite_ref-7 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-7">[7]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Sometimes objects represent more abstract entities, like an object that represents an open file, or an object that provides the service of translating measurements from U.S. customary to metric.</P>
<P style="MARGIN: 0.5em 0px">Each object is said to be an<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Instance (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Instance_(computer_science)">instance</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of a particular class (for example, an object with its name field set to "Mary" might be an instance of class Employee). Procedures in object-oriented programming are known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Method (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Method_(computer_science)">methods</A>; variables are also known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Field (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Field_(computer_science)">fields</A>, members, attributes, or properties. This leads to the following terms:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Class variable" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class_variable">Class variables</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8211; belong to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>class as a whole</I>; there is only one copy of each one</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Instance variable" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Instance_variable">Instance variables</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>or attributes &#8211; data that belongs to individual<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>objects</I>; every object has its own copy of each one</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Member variable" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Member_variable">Member variables</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8211; refers to both the class and instance variables that are defined by a particular class</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Class methods &#8211; belong to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>class as a whole</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>and have access only to class variables and inputs from the procedure call</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Instance methods &#8211; belong to<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>individual objects</I>, and have access to instance variables for the specific object they are called on, inputs, and class variables</LI></UL>
<P style="MARGIN: 0.5em 0px">Objects are accessed somewhat like variables with complex internal structure, and in many languages are effectively<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Pointer (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Pointer_(computer_programming)">pointers</A>, serving as actual references to a single instance of said object in memory within a heap or stack. They provide a layer of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Abstraction (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstraction_(computer_science)">abstraction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>which can be used to separate internal from external code. External code can use an object by calling a specific instance method with a certain set of input parameters, read an instance variable, or write to an instance variable. Objects are created by calling a special type of method in the class known as a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Constructor (object-oriented programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Constructor_(object-oriented_programming)">constructor</A>. A program may create many instances of the same class as it runs, which operate independently. This is an easy way for the same procedures to be used on different sets of data.</P>
<P style="MARGIN: 0.5em 0px">Object-oriented programming that uses classes is sometimes called<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Class-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class-based_programming">class-based programming</A>, while<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Prototype-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype-based_programming">prototype-based programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not typically use classes. As a result, a significantly different yet analogous terminology is used to define the concepts of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>object</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>instance</I>.</P>
<P style="MARGIN: 0.5em 0px">In some languages classes and objects can be composed using other concepts like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Trait (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Trait_(computer_programming)">traits</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Mixin style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mixin">mixins</A>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Dynamic_dispatch.2Fmessage_passing class=mw-headline>Dynamic dispatch/message passing</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Dynamic dispatch/message passing" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=4">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">It is the responsibility of the object, not any external code, to select the procedural code to execute in response to a method call, typically by looking up the method at run time in a table associated with the object. This feature is known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Dynamic dispatch" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dynamic_dispatch">dynamic dispatch</A>, and distinguishes an object from an<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Abstract data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstract_data_type">abstract data type</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or module), which has a fixed (static) implementation of the operations for all instances. If there are multiple methods that might be run for a given name, it is known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Multiple dispatch" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Multiple_dispatch">multiple dispatch</A>.</P>
<P style="MARGIN: 0.5em 0px">A method call is also known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>message passing</I>. It is conceptualized as a message (the name of the method and its input parameters) being passed to the object for dispatch.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Encapsulation class=mw-headline>Encapsulation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Encapsulation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=5">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Encapsulation is an Object Oriented Programming concept that binds together the data and functions that manipulate the data, and that keeps both safe from outside interference and misuse. Data encapsulation led to the important OOP concept of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Information hiding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Information_hiding">data hiding</A>.</P>
<P style="MARGIN: 0.5em 0px">If a class does not allow calling code to access internal object data and permits access through methods only, this is a strong form of abstraction or information hiding known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Encapsulation (object-oriented programming)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Encapsulation_(object-oriented_programming)">encapsulation</A>. Some languages (Java, for example) let classes enforce access restrictions explicitly, for example denoting internal data with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">private</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>keyword and designating methods intended for use by code outside the class with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">public</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>keyword. Methods may also be designed public, private, or intermediate levels such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">protected</CODE>(which allows access from the same class and its subclasses, but not objects of a different class). In other languages (like Python) this is enforced only by convention (for example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">private</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>methods may have names that start with an<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Underscore style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Underscore">underscore</A>). Encapsulation prevents external code from being concerned with the internal workings of an object. This facilitates<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Code refactoring" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Code_refactoring">code refactoring</A>, for example allowing the author of the class to change how objects of that class represent their data internally without changing any external code (as long as "public" method calls work the same way). It also encourages programmers to put all the code that is concerned with a certain set of data in the same class, which organizes it for easy comprehension by other programmers. Encapsulation is a technique that encourages<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Coupling (computer programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Coupling_(computer_programming)">decoupling</A>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Composition.2C_inheritance.2C_and_delegation class=mw-headline>Composition, inheritance, and delegation</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Composition, inheritance, and delegation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=6">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">Objects can contain other objects in their instance variables; this is known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object composition" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_composition">object composition</A>. For example, an object in the Employee class might contain (point to) an object in the Address class, in addition to its own instance variables like "first_name" and "position". Object composition is used to represent "has-a" relationships: every employee has an address, so every Employee object has a place to store an Address object.</P>
<P style="MARGIN: 0.5em 0px">Languages that support classes almost always support<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Inheritance (object-oriented programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)">inheritance</A>. This allows classes to be arranged in a hierarchy that represents "is-a-type-of" relationships. For example, class Employee might inherit from class Person. All the data and methods available to the parent class also appear in the child class with the same names. For example, class Person might define variables "first_name" and "last_name" with method "make_full_name()". These will also be available in class Employee, which might add the variables "position" and "salary". This technique allows easy re-use of the same procedures and data definitions, in addition to potentially mirroring real-world relationships in an intuitive way. Rather than utilizing database tables and programming subroutines, the developer utilizes objects the user may be more familiar with: objects from their application domain.<SUP id=cite_ref-8 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-8">[8]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">Subclasses can override the methods defined by superclasses.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Multiple inheritance" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Multiple_inheritance">Multiple inheritance</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is allowed in some languages, though this can make resolving overrides complicated. Some languages have special support for<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Mixin style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mixin">mixins</A>, though in any language with multiple inheritance, a mixin is simply a class that does not represent an is-a-type-of relationship. Mixins are typically used to add the same methods to multiple classes. For example, class UnicodeConversionMixin might provide a method unicode_to_ascii() when included in class FileReader and class WebPageScraper, which don't share a common parent.</P>
<P style="MARGIN: 0.5em 0px"><A title="Abstract class" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstract_class">Abstract classes</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>cannot be instantiated into objects; they exist only for the purpose of inheritance into other "concrete" classes which can be instantiated. In Java, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px"><A title="Final (Java)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Final_(Java)">final</A></CODE>keyword can be used to prevent a class from being subclassed.</P>
<P style="MARGIN: 0.5em 0px">The doctrine of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Composition over inheritance" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Composition_over_inheritance">composition over inheritance</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>advocates implementing has-a relationships using composition instead of inheritance. For example, instead of inheriting from class Person, class Employee could give each Employee object an internal Person object, which it then has the opportunity to hide from external code even if class Person has many public attributes or methods. Some languages, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Go (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Go_(programming_language)">Go</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>do not support inheritance at all.</P>
<P style="MARGIN: 0.5em 0px">The "<A title="Open/closed principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Open/closed_principle">open/closed principle</A>" advocates that classes and functions "should be open for extension, but closed for modification".</P>
<P style="MARGIN: 0.5em 0px"><A title="Delegation (programming)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Delegation_(programming)">Delegation</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is another language feature that can be used as an alternative to inheritance.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Polymorphism class=mw-headline>Polymorphism</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Polymorphism" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=7">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px"><A title=Subtyping style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Subtyping">Subtyping</A>, a form of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Polymorphism (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Polymorphism_(computer_science)">polymorphism</A>, is when calling code can be agnostic as to whether an object belongs to a parent class or one of its descendants. For example, a function might call "make_full_name()" on an object, which will work whether the object is of class Person or class Employee. This is another type of abstraction which simplifies code external to the class hierarchy and enables strong<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Separation of concerns" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Separation_of_concerns">separation of concerns</A>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Open_recursion class=mw-headline>Open recursion</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Open recursion" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=8">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In languages that support<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Open recursion" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Open_recursion">open recursion</A>, object methods can call other methods on the same object (including themselves), typically using a special variable or keyword called<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">this</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="BORDER-TOP: rgb(234,236,240) 1px solid; FONT-FAMILY: monospace, Courier; BORDER-RIGHT: rgb(234,236,240) 1px solid; BORDER-BOTTOM: rgb(234,236,240) 1px solid; COLOR: rgb(0,0,0); PADDING-BOTTOM: 1px; PADDING-TOP: 1px; PADDING-LEFT: 4px; BORDER-LEFT: rgb(234,236,240) 1px solid; PADDING-RIGHT: 4px; BACKGROUND-COLOR: rgb(248,249,250); border-radius: 2px">self</CODE>. This variable is<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A title="Name binding" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Name_binding">late-bound</A></I>; it allows a method defined in one class to invoke another method that is defined later, in some subclass thereof.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=History class=mw-headline>History</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: History" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=9">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">Terminology invoking "objects" and "oriented" in the modern sense of object-oriented programming made its first appearance at<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=MIT class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/MIT">MIT</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in the late 1950s and early 1960s. In the environment of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Artificial intelligence" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Artificial_intelligence">artificial intelligence</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>group, as early as 1960, "object" could refer to identified items (<A title="Lisp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_(programming_language)">LISP</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>atoms) with properties (attributes);<SUP id=cite_ref-9 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-9">[9]</A></SUP><SUP id=cite_ref-10 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-10">[10]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Alan Kay" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>was later to cite a detailed understanding of LISP internals as a strong influence on his thinking in 1966.<SUP id=cite_ref-alanKayOnOO_11-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-alanKayOnOO-11">[11]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Another early MIT example was<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Sketchpad style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Sketchpad">Sketchpad</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>created by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ivan Sutherland" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ivan_Sutherland">Ivan Sutherland</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in 1960&#8211;61; in the glossary of the 1963 technical report based on his dissertation about Sketchpad, Sutherland defined notions of "object" and "instance" (with the class concept covered by "master" or "definition"), albeit specialized to graphical interaction.<SUP id=cite_ref-12 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-12">[12]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Also, an MIT<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=ALGOL style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/ALGOL">ALGOL</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>version, AED-0, established a direct link between data structures ("plexes", in that dialect) and procedures, prefiguring what were later termed "messages", "methods", and "member functions".<SUP id=cite_ref-simuladev_13-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-simuladev-13">[13]</A></SUP><SUP id=cite_ref-14 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-14">[14]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">The formal programming concept of objects was introduced in the mid-1960s with<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Simula style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Simula">Simula</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>67, a major revision of Simula I, a programming language designed for<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Discrete event simulation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Discrete_event_simulation">discrete event simulation</A>, created by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ole-Johan Dahl" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ole-Johan_Dahl">Ole-Johan Dahl</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Kristen Nygaard" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Kristen_Nygaard">Kristen Nygaard</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Norwegian Computing Center" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Norwegian_Computing_Center">Norwegian Computing Center</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Oslo style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Oslo">Oslo</A>.<SUP id=cite_ref-15 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-15">[15]</A></SUP><SUP class="noprint Inline-Template" style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title=Wikipedia:Verifiability style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Verifiability"><SPAN title="The material near this tag failed verification of its source citation(s). (June 2016)">not in citation given</SPAN></A></I>]</SUP><SUP class="noprint Inline-Template Template-Fact" style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title="Wikipedia:Citation needed" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Citation_needed"><SPAN title="This claim needs references to reliable sources. (June 2016)">citation needed</SPAN></A></I>]</SUP><SUP id=cite_ref-16 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-16">[16]</A></SUP><SUP class="noprint Inline-Template" style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title=Wikipedia:Verifiability style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Verifiability"><SPAN title="The material near this tag failed verification of its source citation(s). (June 2016)">not in citation given</SPAN></A></I>]</SUP><SUP class="noprint Inline-Template Template-Fact" style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title="Wikipedia:Citation needed" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Citation_needed"><SPAN title="This claim needs references to reliable sources. (June 2016)">citation needed</SPAN></A></I>]</SUP><SUP id=cite_ref-17 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-17">[17]</A></SUP><SUP id=cite_ref-18 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-18">[18]</A></SUP><SUP id=cite_ref-19 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-19">[19]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">Simula 67 was influenced by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=SIMSCRIPT style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/SIMSCRIPT">SIMSCRIPT</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Tony Hoare" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Tony_Hoare">C.A.R. "Tony" Hoare's</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>proposed "record classes".<SUP id=cite_ref-simuladev_13-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-simuladev-13">[13]</A></SUP><SUP id=cite_ref-20 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-20">[20]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Simula introduced the notion of classes and instances or objects (as well as subclasses, virtual procedures, coroutines, and discrete event simulation) as part of an explicit programming paradigm. The language also used automatic<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Garbage collection (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)">garbage collection</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that had been invented earlier for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Functional programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_programming">functional programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>language<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lisp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_(programming_language)">Lisp</A>. Simula was used for physical modeling, such as models to study and improve the movement of ships and their content through cargo ports. The ideas of Simula 67 influenced many later languages, including Smalltalk, derivatives of LISP (<A title=CLOS class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/CLOS">CLOS</A>),<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object Pascal" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_Pascal">Object Pascal</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=C++ style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C%2B%2B">C++</A>.</P>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Smalltalk style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>language, which was developed at<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Xerox PARC" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Xerox_PARC">Xerox PARC</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Alan Kay" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Alan_Kay">Alan Kay</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and others) in the 1970s, introduced the term<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>object-oriented programming</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>to represent the pervasive use of objects and messages as the basis for computation. Smalltalk creators were influenced by the ideas introduced in Simula 67, but Smalltalk was designed to be a fully dynamic system in which classes could be created and modified dynamically rather than statically as in Simula 67.<SUP id=cite_ref-st_21-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-st-21">[21]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Smalltalk and with it OOP were introduced to a wider audience by the August 1981 issue of<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A title="Byte (magazine)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Byte_(magazine)">Byte Magazine</A></I>.</P>
<P style="MARGIN: 0.5em 0px">In the 1970s, Kay's Smalltalk work had influenced the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lisp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_(programming_language)#Language_innovations">Lisp community</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to incorporate<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lisp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_(programming_language)#Object_systems">object-based techniques</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that were introduced to developers via the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lisp machine" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lisp_machine">Lisp machine</A>. Experimentation with various extensions to Lisp (such as LOOPS and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Flavors (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Flavors_(programming_language)">Flavors</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>introducing<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Multiple inheritance" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Multiple_inheritance">multiple inheritance</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Mixins class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mixins">mixins</A>) eventually led to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Common Lisp Object System" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Common_Lisp_Object_System">Common Lisp Object System</A>, which integrates functional programming and object-oriented programming and allows extension via a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Meta-object protocol" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Meta-object_protocol">Meta-object protocol</A>. In the 1980s, there were a few attempts to design processor architectures that included hardware support for objects in memory but these were not successful. Examples include the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Intel iAPX 432" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Intel_iAPX_432">Intel iAPX 432</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Linn Products" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Linn_Products">Linn Smart</A><SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Rekursiv style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Rekursiv">Rekursiv</A>.</P>
<P style="MARGIN: 0.5em 0px">In 1985,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Bertrand Meyer" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Bertrand_Meyer">Bertrand Meyer</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>produced the first design of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Eiffel (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Eiffel_(programming_language)">Eiffel language</A>. Focused on software quality, Eiffel is among the purely object-oriented languages, but differs in the sense that the language itself is not only a programming language, but a notation supporting the entire software lifecycle. Meyer described the Eiffel software development method, based on a small number of key ideas from software engineering and computer science, in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-Oriented Software Construction" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-Oriented_Software_Construction">Object-Oriented Software Construction</A>. Essential to the quality focus of Eiffel is Meyer's reliability mechanism,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Design by Contract" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Design_by_Contract">Design by Contract</A>, which is an integral part of both the method and language.</P>
<P style="MARGIN: 0.5em 0px">Object-oriented programming developed as the dominant programming methodology in the early and mid 1990s when programming languages supporting the techniques became widely available. These included Visual<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=FoxPro style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/FoxPro">FoxPro</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>3.0,<SUP id=cite_ref-22 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-22">[22]</A></SUP><SUP id=cite_ref-23 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-23">[23]</A></SUP><SUP id=cite_ref-24 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-24">[24]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=C++ style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C%2B%2B">C++</A>,<SUP id=cite_ref-25 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-25">[25]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Embarcadero Delphi" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Embarcadero_Delphi">Delphi</A><SUP class="noprint Inline-Template Template-Fact" style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; LINE-HEIGHT: 1">[<I><A title="Wikipedia:Citation needed" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Citation_needed"><SPAN title="This claim needs references to reliable sources. (February 2010)">citation needed</SPAN></A></I>]</SUP>. Its dominance was further enhanced by the rising popularity of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Graphical user interface" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Graphical_user_interface">graphical user interfaces</A>, which rely heavily upon object-oriented programming techniques. An example of a closely related dynamic GUI library and OOP language can be found in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Cocoa (software)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Cocoa_(software)">Cocoa</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>frameworks on<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Mac OS X" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mac_OS_X">Mac OS X</A>, written in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Objective-C style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Objective-C">Objective-C</A>, an object-oriented, dynamic messaging extension to C based on Smalltalk. OOP toolkits also enhanced the popularity of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Event-driven programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Event-driven_programming">event-driven programming</A>(although this concept is not limited to OOP).</P>
<P style="MARGIN: 0.5em 0px">At<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="ETH Z&#252;rich" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/ETH_Z%C3%BCrich">ETH Z&#252;rich</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Niklaus Wirth" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Niklaus_Wirth">Niklaus Wirth</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and his colleagues had also been investigating such topics as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data abstraction" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_abstraction">data abstraction</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Modularity (programming)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Modularity_(programming)">modular programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(although this had been in common use in the 1960s or earlier).<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Modula-2 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Modula-2">Modula-2</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(1978) included both, and their succeeding design,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Oberon (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)">Oberon</A>, included a distinctive approach to object orientation, classes, and such.</P>
<P style="MARGIN: 0.5em 0px">Object-oriented features have been added to many previously existing languages, including<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ada (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ada_(programming_language)">Ada</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=BASIC style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/BASIC">BASIC</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Fortran style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fortran">Fortran</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Pascal (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)">Pascal</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=COBOL style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/COBOL">COBOL</A>. Adding these features to languages that were not initially designed for them often led to problems with compatibility and maintainability of code.</P>
<P style="MARGIN: 0.5em 0px">More recently, a number of languages have emerged that are primarily object-oriented, but that are also compatible with procedural methodology. Two such languages are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Python (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ruby programming language" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ruby_programming_language">Ruby</A>. Probably the most commercially important recent object-oriented languages are<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Java (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Java_(programming_language)">Java</A>, developed by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Sun Microsystems" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</A>, as well as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="C Sharp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C#</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Visual Basic.NET" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Visual_Basic.NET">Visual Basic.NET</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(VB.NET), both designed for Microsoft's<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=".NET Framework" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/.NET_Framework">.NET</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>platform. Each of these two frameworks shows, in its own way, the benefit of using OOP by creating an abstraction from implementation. VB.NET and C# support cross-language inheritance, allowing classes defined in one language to subclass classes defined in the other language.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=OOP_languages class=mw-headline>OOP languages</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: OOP languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=10">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<TABLE role=presentation class="plainlinks metadata ambox ambox-content ambox-Unreferenced" style="FONT-SIZE: 14px; BORDER-TOP: rgb(162,169,177) 1px solid; BORDER-RIGHT: rgb(162,169,177) 1px solid; BACKGROUND: rgb(251,251,251); BORDER-BOTTOM: rgb(162,169,177) 1px solid; MARGIN: 0px 124px; BORDER-LEFT: rgb(242,133,0) 10px solid; border-image: initial">
<TBODY>
<TR>
<TD class=mbox-image style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 2px; TEXT-ALIGN: center; PADDING-TOP: 2px; PADDING-LEFT: 0.5em; BORDER-LEFT: medium none; PADDING-RIGHT: 0px">
<DIV style="WIDTH: 52px"><A class=image style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/File:Question_book-new.svg"><IMG style="BORDER-TOP: 0px; BORDER-RIGHT: 0px; VERTICAL-ALIGN: middle; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px" alt="" src="https://upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/50px-Question_book-new.svg.png" width=50 height=39 data-file-height="399" data-file-width="512" srcset="//upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/75px-Question_book-new.svg.png 1.5x, //upload.wikimedia.org/wikipedia/en/thumb/9/99/Question_book-new.svg/100px-Question_book-new.svg.png 2x"></A></DIV></TD>
<TD class=mbox-text style="BORDER-TOP: medium none; BORDER-RIGHT: medium none; WIDTH: 910px; BORDER-BOTTOM: medium none; PADDING-BOTTOM: 0.25em; PADDING-TOP: 0.25em; PADDING-LEFT: 0.5em; BORDER-LEFT: medium none; PADDING-RIGHT: 0.5em"><SPAN class=mbox-text-span>This section<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>does not<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wikipedia:Citing sources" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Citing_sources">cite</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>any<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Wikipedia:Verifiability style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Verifiability">sources</A></B>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=hide-when-compact>Please help<SPAN class=Apple-converted-space>&nbsp;</SPAN><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(102,51,102); PADDING-BOTTOM: 0px !important; PADDING-TOP: 0px !important; PADDING-LEFT: 0px !important; PADDING-RIGHT: 0px !important" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit">improve this section</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Help:Introduction to referencing with Wiki Markup/1" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Help:Introduction_to_referencing_with_Wiki_Markup/1">adding citations to reliable sources</A>. Unsourced material may be challenged and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Wikipedia:Verifiability style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wikipedia:Verifiability#Burden_of_evidence">removed</A>.</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL style="FONT-SIZE: 11px"><I>(August 2009)</I></SMALL><SPAN class=Apple-converted-space>&nbsp;</SPAN><SMALL class=hide-when-compact style="FONT-SIZE: 11px"><I>(<A title="Help:Maintenance template removal" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Help:Maintenance_template_removal">Learn how and when to remove this template message</A>)</I></SMALL></SPAN></TD></TR></TBODY></TABLE>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="List of object-oriented programming languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/List_of_object-oriented_programming_languages">List of object-oriented programming languages</A></DIV>
<P style="MARGIN: 0.5em 0px"><A title=Simula style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Simula">Simula</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(1967) is generally accepted as being the first language with the primary features of an object-oriented language. It was created for making<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Computer simulation" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Computer_simulation">simulation programs</A>, in which what came to be called objects were the most important information representation.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Smalltalk style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(1972 to 1980) is another early example, and the one with which much of the theory of OOP was developed. Concerning the degree of object orientation, the following distinctions can be made:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Languages called "pure" OO languages, because everything in them is treated consistently as an object, from primitives such as characters and punctuation, all the way up to whole classes, prototypes, blocks, modules, etc. They were designed specifically to facilitate, even enforce, OO methods. Examples:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Python (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ruby (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ruby_(programming_language)">Ruby</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Scala (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Scala_(programming_language)">Scala</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Smalltalk style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Eiffel (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Eiffel_(programming_language)">Eiffel</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Emerald (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Emerald_(programming_language)">Emerald</A>,<SUP id=cite_ref-26 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-26">[26]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="JADE (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/JADE_(programming_language)">JADE</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Self (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Self_(programming_language)">Self</A>.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Languages designed mainly for OO programming, but with some procedural elements. Examples:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Java (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Java_(programming_language)">Java</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=C++ style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C%2B%2B">C++</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="C Sharp (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C_Sharp_(programming_language)">C#</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object Pascal" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_Pascal">Delphi/Object Pascal</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=VB.NET class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/VB.NET">VB.NET</A>.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Languages that are historically<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Procedural programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Procedural_programming">procedural languages</A>, but have been extended with some OO features. Examples:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=PHP style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/PHP">PHP</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Perl style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Perl">Perl</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Visual Basic" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Visual_Basic">Visual Basic</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(derived from BASIC),<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=MATLAB style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/MATLAB">MATLAB</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="COBOL 2002" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/COBOL_2002">COBOL 2002</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Fortran 2003" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Fortran_2003">Fortran 2003</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=ABAP style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/ABAP">ABAP</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ada (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ada_(programming_language)">Ada 95</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Pascal (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Pascal_(programming_language)">Pascal</A>.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Languages with most of the features of objects (classes, methods, inheritance), but in a distinctly original form. Examples:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Oberon (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Oberon_(programming_language)">Oberon</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(Oberon-1 or Oberon-2).</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Languages with<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Abstract data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstract_data_type">abstract data type</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>support which may be used to resemble OO programming, but without all features of object-orientation. This includes<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Object-based class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-based">object-<I>based</I></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Prototype-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype-based_programming">prototype-based</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>languages. Examples:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=JavaScript style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lua (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lua_(programming_language)">Lua</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Modula-2 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Modula-2">Modula-2</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="CLU (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/CLU_(programming_language)">CLU</A>.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Chameleon languages that support multiple paradigms, including OO.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Tcl style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Tcl">Tcl</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>stands out among these for TclOO, a hybrid object system that supports both<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Prototype-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype-based_programming">prototype-based programming</A>and class-based OO.</LI></UL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=OOP_in_dynamic_languages class=mw-headline>OOP in dynamic languages</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: OOP in dynamic languages" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=11">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">In recent years, object-oriented programming has become especially popular in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Dynamic programming language" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dynamic_programming_language">dynamic programming languages</A>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Python (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Python_(programming_language)">Python</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Windows PowerShell" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Windows_PowerShell">PowerShell</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ruby (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ruby_(programming_language)">Ruby</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Groovy (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Groovy_(programming_language)">Groovy</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>are dynamic languages built on OOP principles, while<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Perl style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Perl">Perl</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=PHP style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/PHP">PHP</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>have been adding object-oriented features since Perl 5 and PHP 4, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=ColdFusion class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/ColdFusion">ColdFusion</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>since version 6.</P>
<P style="MARGIN: 0.5em 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Document Object Model" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Document_Object_Model">Document Object Model</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=HTML style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/HTML">HTML</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=XHTML style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/XHTML">XHTML</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=XML style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/XML">XML</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>documents on the Internet has bindings to the popular<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=JavaScript style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</A>/<A title=ECMAScript style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/ECMAScript">ECMAScript</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>language. JavaScript is perhaps the best known<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Prototype-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype-based_programming">prototype-based programming</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>language, which employs cloning from prototypes rather than inheriting from a class (contrast to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Class-based programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Class-based_programming">class-based programming</A>). Another scripting language that takes this approach is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lua (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lua_(programming_language)">Lua</A>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=OOP_in_a_network_protocol class=mw-headline>OOP in a network protocol</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: OOP in a network protocol" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=12">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">The messages that flow between computers to request services in a client-server environment can be designed as the linearizations of objects defined by class objects known to both the client and the server. For example, a simple linearized object would consist of a length field, a code point identifying the class, and a data value. A more complex example would be a command consisting of the length and code point of the command and values consisting of linearized objects representing the command's parameters. Each such command must be directed by the server to an object whose class (or superclass) recognizes the command and is able to provide the requested service. Clients and servers are best modeled as complex object-oriented structures.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Distributed Data Management Architecture" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Distributed_Data_Management_Architecture">Distributed Data Management Architecture</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(DDM) took this approach and used class objects to define objects at four levels of a formal hierarchy:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em">Fields defining the data values that form messages, such as their length, codepoint and data values.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Objects and collections of objects similar to what would be found in a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Smalltalk style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Smalltalk">Smalltalk</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>program for messages and parameters.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">Managers similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="AS/400 object" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/AS/400_object">AS/400 objects</A>, such as a directory to files and files consisting of metadata and records. Managers conceptually provide memory and processing resources for their contained objects.</LI>
<LI style="MARGIN-BOTTOM: 0.1em">A client or server consisting of all the managers necessary to implement a full processing environment, supporting such aspects as directory services, security and concurrency control.</LI></UL>
<P style="MARGIN: 0.5em 0px">The initial version of DDM defined distributed file services. It was later extended to be the foundation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=DRDA style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/DRDA">Distributed Relational Database Architecture</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(DRDA).</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Design_patterns class=mw-headline>Design patterns</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Design patterns" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=13">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">Challenges of object-oriented design are addressed by several methodologies. Most common is known as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Design Patterns (book)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Design_Patterns_(book)">design patterns codified by Gamma<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>et al.</I></A>. More broadly, the term "<A title="Design pattern (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Design_pattern_(computer_science)">design patterns</A>" can be used to refer to any general, repeatable solution to a commonly occurring problem in software design. Some of these commonly occurring problems have implications and solutions particular to object-oriented development.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Inheritance_and_behavioral_subtyping class=mw-headline>Inheritance and behavioral subtyping</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Inheritance and behavioral subtyping" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=14">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-oriented design" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_design">Object-oriented design</A></DIV>
<P style="MARGIN: 0.5em 0px">It is intuitive to assume that inheritance creates a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Program semantics" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Program_semantics">semantic</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>"<A title="Is a" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Is_a">is a</A>" relationship, and thus to infer that objects instantiated from subclasses can always be<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>safely</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>used instead of those instantiated from the superclass. This intuition is unfortunately false in most OOP languages, in particular in all those that allow<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Mutable class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mutable">mutable</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>objects.<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Subtype polymorphism" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Subtype_polymorphism">Subtype polymorphism</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>as enforced by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Type checker" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Type_checker">type checker</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in OOP languages (with mutable objects) cannot guarantee<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Behavioral subtyping" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Behavioral_subtyping">behavioral subtyping</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>in any context. Behavioral subtyping is undecidable in general, so it cannot be implemented by a program (compiler). Class or object hierarchies must be carefully designed, considering possible incorrect uses that cannot be detected syntactically. This issue is known as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Liskov substitution principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Liskov_substitution_principle">Liskov substitution principle</A>.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Gang_of_Four_design_patterns class=mw-headline>Gang of Four design patterns</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Gang of Four design patterns" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=15">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main article:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Design pattern (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Design_pattern_(computer_science)">Design pattern (computer science)</A></DIV>
<P style="MARGIN: 0.5em 0px"><I><A title="Design Patterns (book)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Design_Patterns_(book)">Design Patterns: Elements of Reusable Object-Oriented Software</A></I><SPAN class=Apple-converted-space>&nbsp;</SPAN>is an influential book published in 1995 by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Erich Gamma" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Erich_Gamma">Erich Gamma</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Richard Helm" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Richard_Helm">Richard Helm</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ralph Johnson (computer scientist)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ralph_Johnson_(computer_scientist)">Ralph Johnson</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="John Vlissides" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/John_Vlissides">John Vlissides</A>, often referred to humorously as the "Gang of Four". Along with exploring the capabilities and pitfalls of object-oriented programming, it describes 23 common programming problems and patterns for solving them. As of April 2007, the book was in its 36th printing.</P>
<P style="MARGIN: 0.5em 0px">The book describes the following patterns:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><I><A title="Creational pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Creational_pattern">Creational patterns</A></I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(5):<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Factory method pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Factory_method_pattern">Factory method pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Abstract factory pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstract_factory_pattern">Abstract factory pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Singleton pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Singleton_pattern">Singleton pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Builder pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Builder_pattern">Builder pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Prototype pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Prototype_pattern">Prototype pattern</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><I><A title="Structural pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Structural_pattern">Structural patterns</A></I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(7):<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Adapter pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Adapter_pattern">Adapter pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Bridge pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Bridge_pattern">Bridge pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Composite pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Composite_pattern">Composite pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Decorator pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Decorator_pattern">Decorator pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Facade pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Facade_pattern">Facade pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Flyweight pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Flyweight_pattern">Flyweight pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Proxy pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Proxy_pattern">Proxy pattern</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><I><A title="Behavioral pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Behavioral_pattern">Behavioral patterns</A></I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(11):<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Chain-of-responsibility pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Chain-of-responsibility_pattern">Chain-of-responsibility pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Command pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Command_pattern">Command pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Interpreter pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Interpreter_pattern">Interpreter pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Iterator pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Iterator_pattern">Iterator pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Mediator pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Mediator_pattern">Mediator pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Memento pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Memento_pattern">Memento pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Observer pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Observer_pattern">Observer pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="State pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/State_pattern">State pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Strategy pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Strategy_pattern">Strategy pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Template method pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Template_method_pattern">Template method pattern</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Visitor pattern" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Visitor_pattern">Visitor pattern</A></LI></UL>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Object-orientation_and_databases class=mw-headline>Object-orientation and databases</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Object-orientation and databases" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=16">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">Main articles:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-relational impedance mismatch" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-relational_impedance_mismatch">Object-relational impedance mismatch</A>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-relational mapping" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-relational_mapping">Object-relational mapping</A>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object database" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_database">Object database</A></DIV>
<P style="MARGIN: 0.5em 0px">Both object-oriented programming and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Relational database management systems" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Relational_database_management_systems">relational database management systems</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(RDBMSs) are extremely common in software today. Since<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Relational database" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Relational_database">relational databases</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>don't store objects directly (though some RDBMSs have object-oriented features to approximate this), there is a general need to bridge the two worlds. The problem of bridging object-oriented programming accesses and data patterns with relational databases is known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-relational impedance mismatch" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-relational_impedance_mismatch">object-relational impedance mismatch</A>. There are a number of approaches to cope with this problem, but no general solution without downsides.<SUP id=cite_ref-RDMDBobjectmis_27-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-RDMDBobjectmis-27">[27]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>One of the most common approaches is<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-relational mapping" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-relational_mapping">object-relational mapping</A>, as found in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Integrated development environment" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Integrated_development_environment">IDE</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>languages such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Visual FoxPro" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Visual_FoxPro">Visual FoxPro</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and libraries such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Java Data Objects" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Java_Data_Objects">Java Data Objects</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Ruby on Rails" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Ruby_on_Rails">Ruby on Rails</A>' ActiveRecord.</P>
<P style="MARGIN: 0.5em 0px">There are also<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object database" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object_database">object databases</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that can be used to replace RDBMSs, but these have not been as technically and commercially successful as RDBMSs.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Real-world_modeling_and_relationships class=mw-headline>Real-world modeling and relationships</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Real-world modeling and relationships" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=17">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">OOP can be used to associate real-world objects and processes with digital counterparts. However, not everyone agrees that OOP facilitates direct real-world mapping (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Object-oriented programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#Criticism">Criticism</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>section) or that real-world mapping is even a worthy goal;<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Bertrand Meyer" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Bertrand_Meyer">Bertrand Meyer</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>argues in<SPAN class=Apple-converted-space>&nbsp;</SPAN><I><A title="Object-Oriented Software Construction" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-Oriented_Software_Construction">Object-Oriented Software Construction</A></I><SUP id=cite_ref-Meyer230_28-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-Meyer230-28">[28]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>that a program is not a model of the world but a model of some part of the world; "Reality is a cousin twice removed". At the same time, some principal limitations of OOP have been noted.<SUP id=cite_ref-29 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-29">[29]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>For example, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Circle-ellipse problem" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Circle-ellipse_problem">circle-ellipse problem</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is difficult to handle using OOP's concept of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Inheritance (object-oriented programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)">inheritance</A>.</P>
<P style="MARGIN: 0.5em 0px">However,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Niklaus Wirth" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Niklaus_Wirth">Niklaus Wirth</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(who popularized the adage now known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Wirth's law" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Wirth%27s_law">Wirth's law</A>: "Software is getting slower more rapidly than hardware becomes faster") said of OOP in his paper, "Good Ideas through the Looking Glass", "This paradigm closely reflects the structure of systems 'in the real world', and it is therefore well suited to model complex systems with complex behaviours"<SUP id=cite_ref-30 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-30">[30]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(contrast<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="KISS principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/KISS_principle">KISS principle</A>).</P>
<P style="MARGIN: 0.5em 0px"><A title="Steve Yegge" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Steve_Yegge">Steve Yegge</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and others noted that natural languages lack the OOP approach of strictly prioritizing<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>things</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(objects/<A title=Noun style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Noun">nouns</A>) before<SPAN class=Apple-converted-space>&nbsp;</SPAN><I>actions</I><SPAN class=Apple-converted-space>&nbsp;</SPAN>(methods/<A title=Verb style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Verb">verbs</A>).<SUP id=cite_ref-executioniKoN_31-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-executioniKoN-31">[31]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>This problem may cause OOP to suffer more convoluted solutions than procedural programming.<SUP id=cite_ref-executioniKoN2_32-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-executioniKoN2-32">[32]</A></SUP></P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=OOP_and_control_flow class=mw-headline>OOP and control flow</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: OOP and control flow" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=18">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px">OOP was developed to increase the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Code reuse" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Code_reuse">reusability</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Software maintenance" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Software_maintenance">maintainability</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of source code.<SUP id=cite_ref-realisticcodereuse_33-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-realisticcodereuse-33">[33]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Transparent representation of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Control flow" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Control_flow">control flow</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>had no priority and was meant to be handled by a compiler. With the increasing relevance of parallel hardware and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Thread (computer science)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Thread_(computer_science)">multithreaded coding</A>, developing transparent control flow becomes more important, something hard to achieve with OOP.<SUP id=cite_ref-flaws_34-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-flaws-34">[34]</A></SUP><SUP id=cite_ref-multithreadingisaverb_35-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-multithreadingisaverb-35">[35]</A></SUP><SUP id=cite_ref-multicore_36-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-multicore-36">[36]</A></SUP><SUP id=cite_ref-37 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-37">[37]</A></SUP></P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=Responsibility-_vs._data-driven_design class=mw-headline>Responsibility- vs. data-driven design</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Responsibility- vs. data-driven design" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=19">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px"><A title="Responsibility-driven design" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Responsibility-driven_design">Responsibility-driven design</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>defines classes in terms of a contract, that is, a class should be defined around a responsibility and the information that it shares. This is contrasted by Wirfs-Brock and Wilkerson with<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data-driven design" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data-driven_design">data-driven design</A>, where classes are defined around the data-structures that must be held. The authors hold that responsibility-driven design is preferable.</P>
<H3 style="OVERFLOW: hidden; FONT-SIZE: 1.2em; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: 0px; FONT-WEIGHT: bold; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0.5em; MARGIN: 0.3em 0px 0px; LINE-HEIGHT: 1.6"><SPAN id=SOLID_and_GRASP_guidelines class=mw-headline>SOLID and GRASP guidelines</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: SOLID and GRASP guidelines" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=20">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H3>
<P style="MARGIN: 0.5em 0px"><A title="SOLID (object-oriented design)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)">SOLID</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a mnemonic invented by Michael Feathers that stands for and advocates five programming practices:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Single responsibility principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Single_responsibility_principle">Single responsibility principle</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Open/closed principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Open/closed_principle">Open/closed principle</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Liskov substitution principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Liskov_substitution_principle">Liskov substitution principle</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Interface segregation principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Interface_segregation_principle">Interface segregation principle</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Dependency inversion principle" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">Dependency inversion principle</A></LI></UL>
<P style="MARGIN: 0.5em 0px"><A title="GRASP (object-oriented design)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/GRASP_(object-oriented_design)">GRASP</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(General Responsibility Assignment Software Patterns) is another set of guidelines advocated by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Craig Larman" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Craig_Larman">Craig Larman</A>.</P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Criticism class=mw-headline>Criticism</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Criticism" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=21">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<P style="MARGIN: 0.5em 0px">The OOP paradigm has been criticised for a number of reasons, including not meeting its stated goals of reusability and modularity,<SUP id=cite_ref-badprop_38-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-badprop-38">[38]</A></SUP><SUP id=cite_ref-armstrongjoe_39-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-armstrongjoe-39">[39]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and for overemphasizing one aspect of software design and modeling (data/objects) at the expense of other important aspects (computation/algorithms).<SUP id=cite_ref-stepanov_40-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-stepanov-40">[40]</A></SUP><SUP id=cite_ref-hickey_41-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-hickey-41">[41]</A></SUP></P>
<P style="MARGIN: 0.5em 0px"><A title="Luca Cardelli" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Luca_Cardelli">Luca Cardelli</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>has claimed that OOP code is "intrinsically less efficient" than procedural code, that OOP can take longer to compile, and that OOP languages have "extremely poor modularity properties with respect to class extension and modification", and tend to be extremely complex.<SUP id=cite_ref-badprop_38-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-badprop-38">[38]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>The latter point is reiterated by<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Joe Armstrong (programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Joe_Armstrong_(programming)">Joe Armstrong</A>, the principal inventor of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Erlang (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Erlang_(programming_language)">Erlang</A>, who is quoted as saying:<SUP id=cite_ref-armstrongjoe_39-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-armstrongjoe-39">[39]</A></SUP></P>
<BLOCKQUOTE class=templatequote style="OVERFLOW: hidden; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 40px; MARGIN: 1em 0px; PADDING-RIGHT: 40px">
<P style="MARGIN: 0.5em 0px">The problem with object-oriented languages is they've got all this implicit environment that they carry around with them. You wanted a banana but what you got was a gorilla holding the banana and the entire jungle.</P></BLOCKQUOTE>
<P style="MARGIN: 0.5em 0px">A study by Potok et al. has shown no significant difference in productivity between OOP and procedural approaches.<SUP id=cite_ref-42 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-42">[42]</A></SUP></P>
<P style="MARGIN: 0.5em 0px"><A title="Christopher J. Date" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Christopher_J._Date">Christopher J. Date</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>stated that critical comparison of OOP to other technologies, relational in particular, is difficult because of lack of an agreed-upon and rigorous definition of OOP;<SUP id=cite_ref-DatePage650_43-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-DatePage650-43">[43]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>however, Date and Darwen have proposed a theoretical foundation on OOP that uses OOP as a kind of customizable<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_type">type system</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to support<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=RDBMS class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/RDBMS">RDBMS</A>.<SUP id=cite_ref-ThirdManifesto_44-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-ThirdManifesto-44">[44]</A></SUP></P>
<P style="MARGIN: 0.5em 0px">In an article Lawrence Krubner claimed that compared to other languages (LISP dialects, functional languages, etc.) OOP languages have no unique strengths, and inflict a heavy burden of unneeded complexity.<SUP id=cite_ref-lawrence_45-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-lawrence-45">[45]</A></SUP></P>
<P style="MARGIN: 0.5em 0px"><A title="Alexander Stepanov" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Alexander_Stepanov">Alexander Stepanov</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>compares object orientation unfavourably to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Generic programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Generic_programming">generic programming</A>:<SUP id=cite_ref-stepanov_40-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-stepanov-40">[40]</A></SUP></P>
<BLOCKQUOTE class=templatequote style="OVERFLOW: hidden; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 40px; MARGIN: 1em 0px; PADDING-RIGHT: 40px">
<P style="MARGIN: 0.5em 0px">I find OOP technically unsound. It attempts to decompose the world in terms of interfaces that vary on a single type. To deal with the real problems you need multisorted algebras&nbsp;&#8212; families of interfaces that span multiple types. I find OOP philosophically unsound. It claims that everything is an object. Even if it is true it is not very interesting&nbsp;&#8212; saying that everything is an object is saying nothing at all.</P></BLOCKQUOTE>
<P style="MARGIN: 0.5em 0px"><A title="Paul Graham (computer programmer)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Paul_Graham_(computer_programmer)">Paul Graham</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>has suggested that OOP's popularity within large companies is due to "large (and frequently changing) groups of mediocre programmers". According to Graham, the discipline imposed by OOP prevents any one programmer from "doing too much damage".<SUP id=cite_ref-graham_46-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-graham-46">[46]</A></SUP></P>
<P style="MARGIN: 0.5em 0px"><A title="Steve Yegge" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Steve_Yegge">Steve Yegge</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>noted that, as opposed to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Functional programming" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Functional_programming">functional programming</A>:<SUP id=cite_ref-yegge_47-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-yegge-47">[47]</A></SUP></P>
<BLOCKQUOTE class=templatequote style="OVERFLOW: hidden; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 40px; MARGIN: 1em 0px; PADDING-RIGHT: 40px">
<P style="MARGIN: 0.5em 0px">Object Oriented Programming puts the Nouns first and foremost. Why would you go to such lengths to put one part of speech on a pedestal? Why should one kind of concept take precedence over another? It's not as if OOP has suddenly made verbs less important in the way we actually think. It's a strangely skewed perspective.</P></BLOCKQUOTE>
<P style="MARGIN: 0.5em 0px"><A title="Rich Hickey" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Rich_Hickey">Rich Hickey</A>, creator of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Clojure style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Clojure">Clojure</A>, described object systems as overly simplistic models of the real world. He emphasized the inability of OOP to model time properly, which is getting increasingly problematic as software systems become more concurrent.<SUP id=cite_ref-hickey_41-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-hickey-41">[41]</A></SUP></P>
<P style="MARGIN: 0.5em 0px"><A title="Eric S. Raymond" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Eric_S._Raymond">Eric S. Raymond</A>, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Unix style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Unix">Unix</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>programmer and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Open-source software" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Open-source_software">open-source software</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>advocate, has been critical of claims that present object-oriented programming as the "One True Solution", and has written that object-oriented programming languages tend to encourage thickly layered programs that destroy transparency.<SUP id=cite_ref-Eric_S._Raymond_2003_48-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-Eric_S._Raymond_2003-48">[48]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Raymond compares this unfavourably to the approach taken with Unix and the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="C (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/C_(programming_language)">C programming language</A>.<SUP id=cite_ref-Eric_S._Raymond_2003_48-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-Eric_S._Raymond_2003-48">[48]</A></SUP></P>
<P style="MARGIN: 0.5em 0px"><A title="Rob Pike" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Rob_Pike">Rob Pike</A>, a programmer involved in the creation of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=UTF-8 style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/UTF-8">UTF-8</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Go (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Go_(programming_language)">Go</A>, has called object-oriented programming "the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Roman numerals" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Roman_numerals">Roman numerals</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>of computing"<SUP id=cite_ref-49 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-49">[49]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and has said that OOP languages frequently shift the focus from<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data structure" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_structure">data structures</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title=Algorithm style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Algorithm">algorithms</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Data_type">types</A>.<SUP id=cite_ref-50 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-50">[50]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>Furthermore, he cites an instance of a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Java (programming language)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Java_(programming_language)">Java</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>professor whose "idiomatic" solution to a problem was to create six new classes, rather than to simply use a<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Lookup table" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Lookup_table">lookup table</A>.<SUP id=cite_ref-51 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-51">[51]</A></SUP></P>
<H2 style='OVERFLOW: hidden; FONT-SIZE: 1.5em; FONT-FAMILY: "Linux Libertine", Georgia, Times, serif; BACKGROUND: none transparent scroll repeat 0% 0%; BORDER-BOTTOM: rgb(162,169,177) 1px solid; FONT-WEIGHT: normal; COLOR: rgb(0,0,0); PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 1em 0px 0.25em; LINE-HEIGHT: 1.3; PADDING-RIGHT: 0px'><SPAN id=Formal_semantics class=mw-headline>Formal semantics</SPAN><SPAN class=mw-editsection style="FONT-SIZE: small; FONT-FAMILY: sans-serif; VERTICAL-ALIGN: baseline; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; MARGIN-LEFT: 1em; DISPLAY: inline-block; LINE-HEIGHT: 1em; user-select: none"><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-RIGHT: 0.25em">[</SPAN><A title="Edit section: Formal semantics" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/w/index.php?title=Object-oriented_programming&amp;action=edit&amp;section=22">edit</A><SPAN class=mw-editsection-bracket style="COLOR: rgb(85,85,85); MARGIN-LEFT: 0.25em">]</SPAN></SPAN></H2>
<DIV role=note class=hatnote style="MARGIN-BOTTOM: 0.5em; FONT-STYLE: italic; PADDING-LEFT: 1.6em">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Formal semantics of programming languages" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Formal_semantics_of_programming_languages">Formal semantics of programming languages</A></DIV>
<P style="MARGIN: 0.5em 0px">Objects are the run-time entities in an object-oriented system. They may represent a person, a place, a bank account, a table of data, or any item that the program has to handle.</P>
<P style="MARGIN: 0.5em 0px">There have been several attempts at formalizing the concepts used in object-oriented programming. The following concepts and constructs have been used as interpretations of OOP concepts:</P>
<UL style="LIST-STYLE-TYPE: disc; PADDING-BOTTOM: 0px; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN: 0.3em 0px 0px 1.6em; LIST-STYLE-IMAGE: url(data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20version%3D%221.1%22%20width%3D%225%22%20height%3D%2213%22%3E%0A%3Ccircle%20cx%3D%222.5%22%20cy%3D%229.5%22%20r%3D%222.5%22%20fill%3D%22%2300528c%22%2F%3E%0A%3C%2Fsvg%3E%0A); PADDING-RIGHT: 0px">
<LI style="MARGIN-BOTTOM: 0.1em"><A title=F-Coalgebra class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/F-Coalgebra">co algebraic data types</A><SUP id=cite_ref-poll97_52-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-poll97-52">[52]</A></SUP></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Abstract data type" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Abstract_data_type">abstract data types</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(which have<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Existential types" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Existential_types">existential types</A>) allow the definition of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Module (programming)" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Module_(programming)">modules</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>but these do not support<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Dynamic dispatch" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Dynamic_dispatch">dynamic dispatch</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Recursive type" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Recursive_type">recursive types</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em">encapsulated state</LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Inheritance (object-oriented programming)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Inheritance_(object-oriented_programming)">inheritance</A></LI>
<LI style="MARGIN-BOTTOM: 0.1em"><A title="Record (computer science)" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Record_(computer_science)">records</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>are basis for understanding objects if<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Function literal" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Function_literal">function literals</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be stored in fields (like in functional programming languages), but the actual calculi need be considerably more complex to incorporate essential features of OOP. Several extensions of<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="System F-sub" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/System_F-sub">System F<SUB style="FONT-SIZE: 11px; LINE-HEIGHT: 1">&lt;:</SUB></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>that deal with mutable objects have been studied;<SUP id=cite_ref-AbadiCardelli_53-0 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-AbadiCardelli-53">[53]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>these allow both<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Subtype polymorphism" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Subtype_polymorphism">subtype polymorphism</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Parametric polymorphism" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Parametric_polymorphism">parametric polymorphism</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(generics)</LI></UL>
<P style="MARGIN: 0.5em 0px">Attempts to find a consensus definition or theory behind objects have not proven very successful (however, see Abadi &amp; Cardelli,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A class="external text" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(102,51,102); PADDING-RIGHT: 13px" href="http://portal.acm.org/citation.cfm?id=547964&amp;dl=ACM&amp;coll=portal" rel=nofollow><I>A Theory of Objects</I></A><SUP id=cite_ref-AbadiCardelli_53-1 class=reference style="FONT-SIZE: 11px; WHITE-SPACE: nowrap; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Object-oriented_programming#cite_note-AbadiCardelli-53">[53]</A></SUP><SPAN class=Apple-converted-space>&nbsp;</SPAN>for formal definitions of many OOP concepts and constructs), and often diverge widely. For example, some definitions focus on mental activities, and some on program structuring. One of the simpler definitions is that OOP is the act of using "map" data structures or arrays that can contain functions and pointers to other maps, all with some<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Syntactic sugar" style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="https://en.wikipedia.org/wiki/Syntactic_sugar">syntactic and scoping sugar</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>on top. Inheritance can be performed by cloning the maps (sometimes called "prototyping").</P></DIV></DIV>