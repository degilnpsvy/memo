<DIV class=refnamediv>
<TABLE width="100%">
<TBODY>
<TR>
<TD vAlign=top>
<H2><SPAN class=refentrytitle>GObject</SPAN></H2>
<P>GObject &#8212; The base object type</P></TD>
<TD class=gallery_image vAlign=top align=right></TD></TR></TBODY></TABLE></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.functions></A>
<H2>Functions</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=functions_return width=150>
<COL class=functions_name></COLGROUP>
<TBODY>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GObjectGetPropertyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectGetPropertyFunc">*GObjectGetPropertyFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GObjectSetPropertyFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectSetPropertyFunc">*GObjectSetPropertyFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GObjectFinalizeFunc&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectFinalizeFunc">*GObjectFinalizeFunc</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_IS_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-TYPE-IS-OBJECT:CAPS">G_TYPE_IS_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT:CAPS">G_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_OBJECT() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-IS-OBJECT:CAPS">G_IS_OBJECT</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS:CAPS">G_OBJECT_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_IS_OBJECT_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-IS-OBJECT-CLASS:CAPS">G_IS_OBJECT_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_GET_CLASS() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-GET-CLASS:CAPS">G_OBJECT_GET_CLASS</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-TYPE:CAPS">G_OBJECT_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_TYPE_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-TYPE-NAME:CAPS">G_OBJECT_TYPE_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_CLASS_TYPE() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS-TYPE:CAPS">G_OBJECT_CLASS_TYPE</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_CLASS_NAME() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS-NAME:CAPS">G_OBJECT_CLASS_NAME</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property">g_object_class_install_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_class_install_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-properties">g_object_class_install_properties</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_class_find_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-find-property">g_object_class_find_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A title=g_object_class_list_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-list-properties">g_object_class_list_properties</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_class_override_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-override-property">g_object_class_override_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_interface_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-interface-install-property">g_object_interface_install_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_interface_find_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-interface-find-property">g_object_interface_find_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;** </TD>
<TD class=function_name><A title=g_object_interface_list_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-interface-list-properties">g_object_interface_list_properties</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new">g_object_new</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_newv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-newv">g_object_newv</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref">g_object_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink">g_object_ref_sink</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=g_set_object() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-set-object">g_set_object</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_clear_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-clear-object">g_clear_object</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_object_is_floating&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-is-floating">g_object_is_floating</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_force_floating&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-force-floating">g_object_force_floating</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify">*GWeakNotify</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_weak_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-ref">g_object_weak_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_weak_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-unref">g_object_weak_unref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer">g_object_add_weak_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_remove_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-remove-weak-pointer">g_object_remove_weak_pointer</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><SPAN class=c_punctuation>(</SPAN><A title=GToggleNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GToggleNotify">*GToggleNotify</A><SPAN class=c_punctuation>)</SPAN>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref">g_object_add_toggle_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_remove_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-remove-toggle-ref">g_object_remove_toggle_ref</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_connect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-connect">g_object_connect</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_disconnect&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-disconnect">g_object_disconnect</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set">g_object_set</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get">g_object_get</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify">g_object_notify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec">g_object_notify_by_pspec</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify">g_object_freeze_notify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_thaw_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-thaw-notify">g_object_thaw_notify</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_get_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-data">g_object_get_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data">g_object_set_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_data_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data-full">g_object_set_data_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_steal_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-data">g_object_steal_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_dup_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-dup-data">g_object_dup_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_object_replace_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-replace-data">g_object_replace_data</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata">g_object_get_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata">g_object_set_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_qdata_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata-full">g_object_set_qdata_full</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_steal_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-qdata">g_object_steal_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_object_dup_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-dup-qdata">g_object_dup_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A> </TD>
<TD class=function_name><A title=g_object_replace_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-replace-qdata">g_object_replace_qdata</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-property">g_object_set_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_get_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-property">g_object_get_property</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;* </TD>
<TD class=function_name><A title=g_object_new_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new-valist">g_object_new_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_set_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-valist">g_object_set_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_get_valist&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-valist">g_object_get_valist</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_watch_closure&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-watch-closure">g_object_watch_closure</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_object_run_dispose&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-run-dispose">g_object_run_dispose</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_OBJECT_WARN_INVALID_PROPERTY_ID() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-WARN-INVALID-PROPERTY-ID:CAPS">G_OBJECT_WARN_INVALID_PROPERTY_ID</A><SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_weak_ref_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-init">g_weak_ref_init</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_weak_ref_clear&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-clear">g_weak_ref_clear</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A> </TD>
<TD class=function_name><A title=g_weak_ref_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-get">g_weak_ref_get</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR>
<TR>
<TD class=function_type><SPAN class=returnvalue>void</SPAN> </TD>
<TD class=function_name><A title=g_weak_ref_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-set">g_weak_ref_set</A>&nbsp;<SPAN class=c_punctuation>()</SPAN> </TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.signals></A>
<H2>Signals</H2>
<DIV class=informaltable>
<TABLE class=informaltable border=0>
<COLGROUP>
<COL class=signals_return width=150>
<COL class=signals_name width=300>
<COL class=signals_flags width=200></COLGROUP>
<TBODY>
<TR>
<TD class=signal_type><SPAN class=returnvalue>void</SPAN></TD>
<TD class=signal_name><A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify">notify</A></TD>
<TD class=signal_flags><A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-NO-HOOKS:CAPS">No Hooks</A></TD></TR></TBODY></TABLE></DIV></DIV><A name=GObject></A>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.other></A>
<H2>Types and Values</H2>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=name width=150>
<COL class=description></COLGROUP>
<TBODY>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-struct">GObject</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass">GObjectClass</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GObjectConstructParam" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectConstructParam">GObjectConstructParam</A></TD></TR>
<TR>
<TD class=datatype_keyword>struct</TD>
<TD class=function_name><A title="struct GParameter" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GParameter">GParameter</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GInitiallyUnowned class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned">GInitiallyUnowned</A></TD></TR>
<TR>
<TD class=typedef_keyword>typedef</TD>
<TD class=function_name><A title=GInitiallyUnownedClass class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnownedClass">GInitiallyUnownedClass</A></TD></TR>
<TR>
<TD class=define_keyword>#define</TD>
<TD class=function_name><A title=G_TYPE_INITIALLY_UNOWNED class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-TYPE-INITIALLY-UNOWNED:CAPS">G_TYPE_INITIALLY_UNOWNED</A></TD></TR>
<TR>
<TD class=datatype_keyword>&nbsp;</TD>
<TD class=function_name><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef">GWeakRef</A></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.object-hierarchy></A>
<H2>Object Hierarchy</H2><PRE class=screen>    GObject
    <SPAN class=lineart>&#9500;&#9472;&#9472;</SPAN> <A title=GBinding class=link href="https://developer.gnome.org/gobject/stable/GBinding.html">GBinding</A>
    <SPAN class=lineart>&#9584;&#9472;&#9472;</SPAN> <A title=GTypeModule class=link href="https://developer.gnome.org/gobject/stable/GTypeModule.html">GTypeModule</A>
</PRE></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.includes></A>
<H2>Includes</H2><PRE class=synopsis>#include &lt;glib-object.h&gt;
</PRE></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.description></A>
<H2>Description</H2>
<P>GObject is the fundamental type providing the common attributes and methods for all object types in GTK+, Pango and other libraries based on GObject. The GObject class provides methods for object construction and destruction, property access methods, and signal support. Signals are described in detail <A title=Signals class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html">here</A>.</P>
<P>For a tutorial on implementing a new GObject class, see <A title="How to define and implement a new GObject" class=link href="https://developer.gnome.org/gobject/stable/howto-gobject.html">How to define and implement a new GObject</A>. For a list of naming conventions for GObjects and their methods, see the <A title=Conventions class=link href="https://developer.gnome.org/gobject/stable/gtype-conventions.html">GType conventions</A>. For the high-level concepts behind GObject, read <A title="Instantiable classed types: objects" class=link href="https://developer.gnome.org/gobject/stable/gtype-instantiable-classed.html">Instantiable classed types: Objects</A>.</P>
<DIV class=refsect3><A name=floating-ref></A>
<H4>Floating references</H4>
<P>GInitiallyUnowned is derived from GObject. The only difference between the two is that the initial reference of a GInitiallyUnowned is flagged as a "floating" reference. This means that it is not specifically claimed to be "owned" by any code portion. The main motivation for providing floating references is C convenience. In particular, it allows code to be written as:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>container <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>create_container</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
<SPAN class=function>container_add_child</SPAN> <SPAN class="gtkdoc opt">(</SPAN>container<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function>create_child</SPAN><SPAN class="gtkdoc opt">());</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>If <CODE class=function>container_add_child()</CODE> calls <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A> on the passed-in child, no reference of the newly created child is leaked. Without floating references, <CODE class=function>container_add_child()</CODE> can only <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> the new child, so to implement this code without reference leaks, it would have to be written as:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>Child <SPAN class="gtkdoc opt">*</SPAN>child<SPAN class="gtkdoc opt">;</SPAN>
container <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>create_container</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
child <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function>create_child</SPAN> <SPAN class="gtkdoc opt">();</SPAN>
<SPAN class=function>container_add_child</SPAN> <SPAN class="gtkdoc opt">(</SPAN>container<SPAN class="gtkdoc opt">,</SPAN> child<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>child<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>The floating reference can be converted into an ordinary reference by calling <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A>. For already sunken objects (objects that don't have a floating reference anymore), <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A> is equivalent to <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> and returns a new reference.</P>
<P>Since floating references are useful almost exclusively for C convenience, language bindings that provide automated reference and memory ownership maintenance (such as smart pointers or garbage collection) should not expose floating references in their API.</P>
<P>Some object implementations may need to save an objects floating state across certain code portions (an example is <A href="http://developer.gnome.org/gtk4/GtkMenu.html#GtkMenu-struct"><SPAN class=type>GtkMenu</SPAN></A>), to achieve this, the following sequence can be used:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc slc">// save floating state</SPAN>
gboolean was_floating <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-is-floating">g_object_is_floating</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink">g_object_ref_sink</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc slc">// protected code portion</SPAN>

<SPAN class="gtkdoc opt">...</SPAN>

<SPAN class="gtkdoc slc">// restore floating state</SPAN>
<SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>was_floating<SPAN class="gtkdoc opt">)</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-force-floating">g_object_force_floating</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=keyword>else</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">);</SPAN> <SPAN class="gtkdoc slc">// release previously acquired reference</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.functions_details></A>
<H2>Functions</H2>
<DIV class=refsect2><A name=GObjectGetPropertyFunc></A>
<H3>GObjectGetPropertyFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GObjectGetPropertyFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                           <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>get_property</CODE></EM> function of <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectGetPropertyFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the numeric id under which the property was registered with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>a <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> to return the property value in</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> describing the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GObjectSetPropertyFunc></A>
<H3>GObjectSetPropertyFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GObjectSetPropertyFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                           <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>,
                           <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>set_property</CODE></EM> function of <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectSetPropertyFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the numeric id under which the property was registered with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the new value for the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> describing the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GObjectFinalizeFunc></A>
<H3>GObjectFinalizeFunc&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GObjectFinalizeFunc<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>The type of the <EM class=parameter><CODE>finalize</CODE></EM> function of <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectFinalizeFunc.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> being finalized</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-IS-OBJECT:CAPS></A>
<H3>G_TYPE_IS_OBJECT()</H3><PRE class=programlisting>#define G_TYPE_IS_OBJECT(type)      (G_TYPE_FUNDAMENTAL (type) == G_TYPE_OBJECT)
</PRE>
<P>Check if the passed in type id is a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> or derived from it.</P>
<DIV class=refsect3><A name=G-TYPE-IS-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>type</P></TD>
<TD class=parameter_description>
<P>Type id to check</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-TYPE-IS-OBJECT.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A>, indicating whether <EM class=parameter><CODE>type</CODE></EM> is a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT:CAPS></A>
<H3>G_OBJECT()</H3><PRE class=programlisting>#define G_OBJECT(object)            (G_TYPE_CHECK_INSTANCE_CAST ((object), G_TYPE_OBJECT, GObject))
</PRE>
<P>Casts a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> or derived pointer into a (GObject*) pointer. Depending on the current debugging level, this function may invoke certain runtime checks to identify invalid casts.</P>
<DIV class=refsect3><A name=G-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Object which is subject to casting.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-OBJECT:CAPS></A>
<H3>G_IS_OBJECT()</H3><PRE class=programlisting>#define G_IS_OBJECT(object)         (G_TYPE_CHECK_INSTANCE_FUNDAMENTAL_TYPE ((object), G_TYPE_OBJECT))
</PRE>
<P>Checks whether a valid <A title="struct GTypeInstance" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInstance"><SPAN class=type>GTypeInstance</SPAN></A> pointer is of type <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P>
<DIV class=refsect3><A name=G-IS-OBJECT.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Instance to check for being a <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A>.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-CLASS:CAPS></A>
<H3>G_OBJECT_CLASS()</H3><PRE class=programlisting>#define G_OBJECT_CLASS(class)       (G_TYPE_CHECK_CLASS_CAST ((class), G_TYPE_OBJECT, GObjectClass))
</PRE>
<P>Casts a derived <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> structure into a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> structure.</P>
<DIV class=refsect3><A name=G-OBJECT-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-IS-OBJECT-CLASS:CAPS></A>
<H3>G_IS_OBJECT_CLASS()</H3><PRE class=programlisting>#define G_IS_OBJECT_CLASS(class)    (G_TYPE_CHECK_CLASS_TYPE ((class), G_TYPE_OBJECT))
</PRE>
<P>Checks whether <EM class=parameter><CODE>class</CODE></EM> "is a" valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> structure of type <A title=G_TYPE_OBJECT class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#G-TYPE-OBJECT:CAPS"><CODE class=literal>G_TYPE_OBJECT</CODE></A> or derived.</P>
<DIV class=refsect3><A name=G-IS-OBJECT-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-GET-CLASS:CAPS></A>
<H3>G_OBJECT_GET_CLASS()</H3><PRE class=programlisting>#define G_OBJECT_GET_CLASS(object)  (G_TYPE_INSTANCE_GET_CLASS ((object), G_TYPE_OBJECT, GObjectClass))
</PRE>
<P>Get the class structure associated to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance.</P>
<DIV class=refsect3><A name=G-OBJECT-GET-CLASS.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-GET-CLASS.returns></A>
<H4>Returns</H4>
<P>pointer to object class structure.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-TYPE:CAPS></A>
<H3>G_OBJECT_TYPE()</H3><PRE class=programlisting>#define G_OBJECT_TYPE(object)       (G_TYPE_FROM_INSTANCE (object))
</PRE>
<P>Get the type id of an object.</P>
<DIV class=refsect3><A name=G-OBJECT-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Object to return the type id for.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-TYPE.returns></A>
<H4>Returns</H4>
<P>Type id of <EM class=parameter><CODE>object</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-TYPE-NAME:CAPS></A>
<H3>G_OBJECT_TYPE_NAME()</H3><PRE class=programlisting>#define G_OBJECT_TYPE_NAME(object)  (g_type_name (G_OBJECT_TYPE (object)))
</PRE>
<P>Get the name of an object's type.</P>
<DIV class=refsect3><A name=G-OBJECT-TYPE-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>Object to return the type name for.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-TYPE-NAME.returns></A>
<H4>Returns</H4>
<P>Type name of <EM class=parameter><CODE>object</CODE></EM> . The string is owned by the type system and should not be freed.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-CLASS-TYPE:CAPS></A>
<H3>G_OBJECT_CLASS_TYPE()</H3><PRE class=programlisting>#define G_OBJECT_CLASS_TYPE(class)  (G_TYPE_FROM_CLASS (class))
</PRE>
<P>Get the type id of a class structure.</P>
<DIV class=refsect3><A name=G-OBJECT-CLASS-TYPE.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-CLASS-TYPE.returns></A>
<H4>Returns</H4>
<P>Type id of <EM class=parameter><CODE>class</CODE></EM> .</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-CLASS-NAME:CAPS></A>
<H3>G_OBJECT_CLASS_NAME()</H3><PRE class=programlisting>#define G_OBJECT_CLASS_NAME(class)  (g_type_name (G_OBJECT_CLASS_TYPE (class)))
</PRE>
<P>Return the name of a class structure's type.</P>
<DIV class=refsect3><A name=G-OBJECT-CLASS-NAME.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>class</P></TD>
<TD class=parameter_description>
<P>a valid <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=G-OBJECT-CLASS-NAME.returns></A>
<H4>Returns</H4>
<P>Type name of <EM class=parameter><CODE>class</CODE></EM> . The string is owned by the type system and should not be freed.</P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-install-property></A>
<H3>g_object_class_install_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_class_install_property (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                                 <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Installs a new property.</P>
<P>All properties should be installed during the class initializer. It is possible to install properties after that, but doing so is not recommend, and specifically, is not guaranteed to be thread-safe vs. use of properties on the same type on other threads.</P>
<P>Note that it is possible to redefine a property in a derived class, by installing a property with the same name. This can be useful at times, e.g. to change the range of allowed values or the default value.</P>
<DIV class=refsect3><A name=g-object-class-install-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the id for the new property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the new property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-install-properties></A>
<H3>g_object_class_install_properties&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_class_install_properties (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_pspecs</CODE></EM>,
                                   <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> **pspecs</CODE></EM>);</PRE>
<P>Installs new properties from an array of <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A>.</P>
<P>All properties should be installed during the class initializer. It is possible to install properties after that, but doing so is not recommend, and specifically, is not guaranteed to be thread-safe vs. use of properties on the same type on other threads.</P>
<P>The property id of each property is the index of each <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> in the <EM class=parameter><CODE>pspecs</CODE></EM> array.</P>
<P>The property id of 0 is treated specially by <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> and it should not be used to store a <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>.</P>
<P>This function should be used if you plan to use a static array of <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> and <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A>. For instance, this class initialization:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">enum</SPAN> <SPAN class="gtkdoc opt">{</SPAN>
  PROP_0<SPAN class="gtkdoc opt">,</SPAN> PROP_FOO<SPAN class="gtkdoc opt">,</SPAN> PROP_BAR<SPAN class="gtkdoc opt">,</SPAN> N_PROPERTIES
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">static</SPAN> GParamSpec <SPAN class="gtkdoc opt">*</SPAN>obj_properties<SPAN class="gtkdoc opt">[</SPAN>N_PROPERTIES<SPAN class="gtkdoc opt">] = {</SPAN> NULL<SPAN class="gtkdoc opt">, };</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_object_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObjectClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GObjectClass <SPAN class="gtkdoc opt">*</SPAN>gobject_class <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT-CLASS:CAPS">G_OBJECT_CLASS</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>klass<SPAN class="gtkdoc opt">);</SPAN>

  obj_properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">] =</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-int">g_param_spec_int</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                      <SPAN class="gtkdoc opt">-</SPAN><SPAN class=number>1</SPAN><SPAN class="gtkdoc opt">,</SPAN> G_MAXINT<SPAN class="gtkdoc opt">,</SPAN>
                      <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                      G_PARAM_READWRITE<SPAN class="gtkdoc opt">);</SPAN>

  obj_properties<SPAN class="gtkdoc opt">[</SPAN>PROP_BAR<SPAN class="gtkdoc opt">] =</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-string">g_param_spec_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"bar"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Bar"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Bar"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                         NULL<SPAN class="gtkdoc opt">,</SPAN>
                         G_PARAM_READWRITE<SPAN class="gtkdoc opt">);</SPAN>

  gobject_class<SPAN class="gtkdoc opt">-&gt;</SPAN>set_property <SPAN class="gtkdoc opt">=</SPAN> my_object_set_property<SPAN class="gtkdoc opt">;</SPAN>
  gobject_class<SPAN class="gtkdoc opt">-&gt;</SPAN>get_property <SPAN class="gtkdoc opt">=</SPAN> my_object_get_property<SPAN class="gtkdoc opt">;</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-properties">g_object_class_install_properties</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gobject_class<SPAN class="gtkdoc opt">,</SPAN>
                                     N_PROPERTIES<SPAN class="gtkdoc opt">,</SPAN>
                                     obj_properties<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>allows calling <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A> to notify of property changes:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>my_object_set_foo</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObject <SPAN class="gtkdoc opt">*</SPAN>self<SPAN class="gtkdoc opt">,</SPAN> gint foo<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">-&gt;</SPAN>foo <SPAN class="gtkdoc opt">!=</SPAN> foo<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class="gtkdoc opt">{</SPAN>
      self<SPAN class="gtkdoc opt">-&gt;</SPAN>foo <SPAN class="gtkdoc opt">=</SPAN> foo<SPAN class="gtkdoc opt">;</SPAN>
      <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec">g_object_notify_by_pspec</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#G-OBJECT:CAPS">G_OBJECT</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">),</SPAN> obj_properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">]);</SPAN>
    <SPAN class="gtkdoc opt">}</SPAN>
 <SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-object-class-install-properties.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_pspecs</P></TD>
<TD class=parameter_description>
<P>the length of the <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspecs</P></TD>
<TD class=parameter_description>
<P>the <A href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpecs</SPAN></A> array defining the new properties. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_pspecs]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-find-property></A>
<H3>g_object_class_find_property&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_object_class_find_property (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>);</PRE>
<P>Looks up the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for a property of a class.</P>
<DIV class=refsect3><A name=g-object-class-find-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of the property to look up</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-class-find-property.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the property, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if the class doesn't have a property of that name. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-list-properties></A>
<H3>g_object_class_list_properties&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;**
g_object_class_list_properties (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_properties</CODE></EM>);</PRE>
<P>Get an array of <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>* for all properties of a class.</P>
<DIV class=refsect3><A name=g-object-class-list-properties.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_properties</P></TD>
<TD class=parameter_description>
<P>return location for the length of the returned array. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-class-list-properties.returns></A>
<H4>Returns</H4>
<P>an array of <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>* which should be freed after use. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_properties][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-class-override-property></A>
<H3>g_object_class_override_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_class_override_property (<EM class=parameter><CODE><A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A> *oclass</CODE></EM>,
                                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> property_id</CODE></EM>,
                                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *name</CODE></EM>);</PRE>
<P>Registers <EM class=parameter><CODE>property_id</CODE></EM> as referring to a property with the name <EM class=parameter><CODE>name</CODE></EM> in a parent class or in an interface implemented by <EM class=parameter><CODE>oclass</CODE></EM> . This allows this class to "override" a property implementation in a parent class or to provide the implementation of a property from an interface.</P>
<P>Internally, overriding is implemented by creating a property of type <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A>; generally operations that query the properties of the object class, such as <A title=g_object_class_find_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-find-property"><CODE class=function>g_object_class_find_property()</CODE></A> or <A title=g_object_class_list_properties&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-list-properties"><CODE class=function>g_object_class_list_properties()</CODE></A> will return the overridden property. However, in one case, the <EM class=parameter><CODE>construct_properties</CODE></EM> argument of the <EM class=parameter><CODE>constructor</CODE></EM> virtual function, the <A title="struct GParamSpecOverride" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecOverride"><SPAN class=type>GParamSpecOverride</SPAN></A> is passed instead, so that the <EM class=parameter><CODE>param_id</CODE></EM> field of the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> will be correct. For virtually all uses, this makes no difference. If you need to get the overridden property, you can call <A title=g_param_spec_get_redirect_target&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#g-param-spec-get-redirect-target"><CODE class=function>g_param_spec_get_redirect_target()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-class-override-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>oclass</P></TD>
<TD class=parameter_description>
<P>a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the new property ID</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>name</P></TD>
<TD class=parameter_description>
<P>the name of a property registered in a parent class or in an interface of this class.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-interface-install-property></A>
<H3>g_object_interface_install_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_interface_install_property (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                                     <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Add a property to an interface; this is only useful for interfaces that are added to GObject-derived types. Adding a property to an interface forces all objects classes with that interface to have a compatible property. The compatible property could be a newly created <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>, but normally <A title=g_object_class_override_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-override-property"><CODE class=function>g_object_class_override_property()</CODE></A> will be used so that the object class only needs to provide an implementation and inherits the property description, default value, bounds, and so forth from the interface property.</P>
<P>This function is meant to be called from the interface's default vtable initialization function (the <EM class=parameter><CODE>class_init</CODE></EM> member of <A title="struct GTypeInfo" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeInfo"><SPAN class=type>GTypeInfo</SPAN></A>.) It must not be called after after <EM class=parameter><CODE>class_init</CODE></EM> has been called for any object types implementing this interface.</P>
<DIV class=refsect3><A name=g-object-interface-install-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>any interface vtable for the interface, or the default vtable for the interface. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the new property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-interface-find-property></A>
<H3>g_object_interface_find_property&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;*
g_object_interface_find_property (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>);</PRE>
<P>Find the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> with the given name for an interface. Generally, the interface vtable passed in as <EM class=parameter><CODE>g_iface</CODE></EM> will be the default vtable from <A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref"><CODE class=function>g_type_default_interface_ref()</CODE></A>, or, if you know the interface has already been loaded, <A title=g_type_default_interface_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-peek"><CODE class=function>g_type_default_interface_peek()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-interface-find-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>any interface vtable for the interface, or the default vtable for the interface. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>name of a property to lookup.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-interface-find-property.returns></A>
<H4>Returns</H4>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> for the property of the interface with the name <EM class=parameter><CODE>property_name</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no such property exists. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-interface-list-properties></A>
<H3>g_object_interface_list_properties&nbsp;()</H3><PRE class=programlisting><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=returnvalue>GParamSpec</SPAN></A>&nbsp;**
g_object_interface_list_properties (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> g_iface</CODE></EM>,
                                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> *n_properties_p</CODE></EM>);</PRE>
<P>Lists the properties of an interface.Generally, the interface vtable passed in as <EM class=parameter><CODE>g_iface</CODE></EM> will be the default vtable from <A title=g_type_default_interface_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-ref"><CODE class=function>g_type_default_interface_ref()</CODE></A>, or, if you know the interface has already been loaded, <A title=g_type_default_interface_peek&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#g-type-default-interface-peek"><CODE class=function>g_type_default_interface_peek()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-interface-list-properties.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>g_iface</P></TD>
<TD class=parameter_description>
<P>any interface vtable for the interface, or the default vtable for the interface. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.TypeInterface]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>n_properties_p</P></TD>
<TD class=parameter_description>
<P>location to store number of properties returned. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for returning results. Default is transfer full."><SPAN class=acronym>out</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-interface-list-properties.returns></A>
<H4>Returns</H4>
<P>a pointer to an array of pointers to <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> structures. The paramspecs are owned by GLib, but the array should be freed with <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> when you are done with it. </P>
<P><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_properties_p][<ACRONYM title="Free data container after the code is done."><SPAN class=acronym>transfer container</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-4.html#api-index-2.4">2.4</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-new></A>
<H3>g_object_new&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_new (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Creates a new instance of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype and sets its properties.</P>
<P>Construction parameters (see <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT</SPAN></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT-ONLY:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT_ONLY</SPAN></A>) which are not explicitly specified are set to their default values.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-new.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P>the type id of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype to instantiate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>the name of the first property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>the value of the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-new.returns></A>
<H4>Returns</H4>
<P>(transfer full) (type GObject.Object) : a new instance of <EM class=parameter><CODE>object_type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-newv></A>
<H3>g_object_newv&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_newv (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
               <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#guint"><SPAN class=type>guint</SPAN></A> n_parameters</CODE></EM>,
               <EM class=parameter><CODE><A title="struct GParameter" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GParameter"><SPAN class=type>GParameter</SPAN></A> *parameters</CODE></EM>);</PRE>
<P>Creates a new instance of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype and sets its properties.</P>
<P>Construction parameters (see <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT</SPAN></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT-ONLY:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT_ONLY</SPAN></A>) which are not explicitly specified are set to their default values.</P>
<P><SPAN class=annotation>[<ACRONYM title="Rename the original symbol's name to SYMBOL."><SPAN class=acronym>rename-to</SPAN></ACRONYM> g_object_new]</SPAN></P>
<DIV class=refsect3><A name=g-object-newv.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P>the type id of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype to instantiate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>n_parameters</P></TD>
<TD class=parameter_description>
<P>the length of the <EM class=parameter><CODE>parameters</CODE></EM> array</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>parameters</P></TD>
<TD class=parameter_description>
<P>an array of <A title="struct GParameter" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GParameter"><SPAN class=type>GParameter</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter points to an array of items."><SPAN class=acronym>array</SPAN></ACRONYM> length=n_parameters]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-newv.returns></A>
<H4>Returns</H4>
<P>a new instance of <EM class=parameter><CODE>object_type</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-ref></A>
<H3>g_object_ref&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_ref (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Increases the reference count of <EM class=parameter><CODE>object</CODE></EM> .</P>
<DIV class=refsect3><A name=g-object-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-ref.returns></A>
<H4>Returns</H4>
<P>the same <EM class=parameter><CODE>object</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-unref></A>
<H3>g_object_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_unref (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Decreases the reference count of <EM class=parameter><CODE>object</CODE></EM> . When its reference count drops to 0, the object is finalized (i.e. its memory is freed).</P>
<P>If the pointer to the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> may be reused in future (for example, if it is an instance variable of another object), it is recommended to clear the pointer to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> rather than retain a dangling pointer to a potentially invalid <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> instance. Use <A title=g_clear_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-clear-object"><CODE class=function>g_clear_object()</CODE></A> for this.</P>
<DIV class=refsect3><A name=g-object-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-ref-sink></A>
<H3>g_object_ref_sink&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_ref_sink (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Increase the reference count of <EM class=parameter><CODE>object</CODE></EM> , and possibly remove the <A title="Floating references" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#floating-ref">floating</A> reference, if <EM class=parameter><CODE>object</CODE></EM> has a floating reference.</P>
<P>In other words, if the object is floating, then this call "assumes ownership" of the floating reference, converting it to a normal reference by clearing the floating flag while leaving the reference count unchanged. If the object is not floating, then this call adds a new normal reference increasing the reference count by one.</P>
<DIV class=refsect3><A name=g-object-ref-sink.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-ref-sink.returns></A>
<H4>Returns</H4>
<P><EM class=parameter><CODE>object</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-set-object></A>
<H3>g_set_object()</H3><PRE class=programlisting>#define             g_set_object(object_ptr, new_object)</PRE>
<P>Updates a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> pointer to refer to <EM class=parameter><CODE>new_object</CODE></EM> . It increments the reference count of <EM class=parameter><CODE>new_object</CODE></EM> (if non-<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), decrements the reference count of the current value of <EM class=parameter><CODE>object_ptr</CODE></EM> (if non-<A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), and assigns <EM class=parameter><CODE>new_object</CODE></EM> to <EM class=parameter><CODE>object_ptr</CODE></EM> . The assignment is not atomic.</P>
<P><EM class=parameter><CODE>object_ptr</CODE></EM> must not be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>A macro is also included that allows this function to be used without pointer casts. The function itself is static inline, so its address may vary between compilation units.</P>
<P>One convenient usage of this function is in implementing property setters:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>foo_set_bar</SPAN> <SPAN class="gtkdoc opt">(</SPAN>Foo <SPAN class="gtkdoc opt">*</SPAN>foo<SPAN class="gtkdoc opt">,</SPAN>
             Bar <SPAN class="gtkdoc opt">*</SPAN>new_bar<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-if-fail">g_return_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function>IS_FOO</SPAN> <SPAN class="gtkdoc opt">(</SPAN>foo<SPAN class="gtkdoc opt">));</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Warnings-and-Assertions.html#g-return-if-fail">g_return_if_fail</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>new_bar <SPAN class="gtkdoc opt">==</SPAN> NULL <SPAN class="gtkdoc opt">||</SPAN> <SPAN class=function>IS_BAR</SPAN> <SPAN class="gtkdoc opt">(</SPAN>new_bar<SPAN class="gtkdoc opt">));</SPAN>

  <SPAN class=keyword>if</SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-set-object">g_set_object</A></SPAN> <SPAN class="gtkdoc opt">(&amp;</SPAN>foo<SPAN class="gtkdoc opt">-&gt;</SPAN>bar<SPAN class="gtkdoc opt">,</SPAN> new_bar<SPAN class="gtkdoc opt">))</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify">g_object_notify</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>foo<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"bar"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-set-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_ptr</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> reference</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>new_object</P></TD>
<TD class=parameter_description>
<P>a pointer to the new <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to assign to it, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> to clear the pointer. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>][<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-set-object.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the value of <EM class=parameter><CODE>object_ptr</CODE></EM> changed, <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-44.html#api-index-2.44">2.44</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-clear-object></A>
<H3>g_clear_object&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_clear_object (<EM class=parameter><CODE>volatile <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> **object_ptr</CODE></EM>);</PRE>
<P>Clears a reference to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>.</P>
<P><EM class=parameter><CODE>object_ptr</CODE></EM> must not be <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>If the reference is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> then this function does nothing. Otherwise, the reference count of the object is decreased and the pointer is set to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>A macro is also included that allows this function to be used without pointer casts.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-clear-object.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_ptr</P></TD>
<TD class=parameter_description>
<P>a pointer to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> reference</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-28.html#api-index-2.28">2.28</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-is-floating></A>
<H3>g_object_is_floating&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_object_is_floating (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Checks whether <EM class=parameter><CODE>object</CODE></EM> has a <A title="Floating references" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#floating-ref">floating</A> reference.</P>
<DIV class=refsect3><A name=g-object-is-floating.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-is-floating.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if <EM class=parameter><CODE>object</CODE></EM> has a floating reference</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-force-floating></A>
<H3>g_object_force_floating&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_force_floating (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>This function is intended for <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> implementations to re-enforce a <A title="Floating references" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#floating-ref">floating</A> object reference. Doing this is seldom required: all <A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned"><SPAN class=type>GInitiallyUnowneds</SPAN></A> are created with a floating reference which usually just needs to be sunken by calling <A title=g_object_ref_sink&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref-sink"><CODE class=function>g_object_ref_sink()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-force-floating.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-10.html#api-index-2.10">2.10</A></P></DIV>
<HR>

<DIV class=refsect2><A name=GWeakNotify></A>
<H3>GWeakNotify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GWeakNotify<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *where_the_object_was</CODE></EM>);</PRE>
<P>A <A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> function can be added to an object as a callback that gets triggered when the object is finalized. Since the object is already being finalized when the <A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> is called, there's not much you could do with the object, apart from e.g. using its address as hash-index or the like.</P>
<DIV class=refsect3><A name=GWeakNotify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data that was provided when the weak reference was established</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>where_the_object_was</P></TD>
<TD class=parameter_description>
<P>the object being finalized</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-weak-ref></A>
<H3>g_object_weak_ref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_weak_ref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE><A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> notify</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Adds a weak reference callback to an object. Weak references are used for notification when an object is finalized. They are called "weak references" because they allow you to safely hold a pointer to an object without calling <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> (<A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> adds a strong reference, that is, forces the object to stay alive).</P>
<P>Note that the weak references created by this method are not thread-safe: they cannot safely be used in one thread if the object's last <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> might happen in another thread. Use <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> if thread-safety is required.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-weak-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to reference weakly</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>callback to invoke before the object is freed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>extra data to pass to notify</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-weak-unref></A>
<H3>g_object_weak_unref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_weak_unref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE><A title=GWeakNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakNotify"><SPAN class=type>GWeakNotify</SPAN></A> notify</CODE></EM>,
                     <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes a weak reference callback to an object.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-weak-unref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to remove a weak reference from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>callback to search for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to search for</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-add-weak-pointer></A>
<H3>g_object_add_weak_pointer&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_add_weak_pointer (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                           <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *weak_pointer_location</CODE></EM>);</PRE>
<P>Adds a weak reference from weak_pointer to <EM class=parameter><CODE>object</CODE></EM> to indicate that the pointer located at <EM class=parameter><CODE>weak_pointer_location</CODE></EM> is only valid during the lifetime of <EM class=parameter><CODE>object</CODE></EM> . When the <EM class=parameter><CODE>object</CODE></EM> is finalized, <EM class=parameter><CODE>weak_pointer</CODE></EM> will be set to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>Note that as with <A title=g_object_weak_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-ref"><CODE class=function>g_object_weak_ref()</CODE></A>, the weak references created by this method are not thread-safe: they cannot safely be used in one thread if the object's last <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> might happen in another thread. Use <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> if thread-safety is required.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-add-weak-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The object that should be weak referenced.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>weak_pointer_location</P></TD>
<TD class=parameter_description>
<P>The memory address of a pointer. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>][not optional]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-remove-weak-pointer></A>
<H3>g_object_remove_weak_pointer&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_remove_weak_pointer (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                              <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> *weak_pointer_location</CODE></EM>);</PRE>
<P>Removes a weak reference from <EM class=parameter><CODE>object</CODE></EM> that was previously added using <A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer"><CODE class=function>g_object_add_weak_pointer()</CODE></A>. The <EM class=parameter><CODE>weak_pointer_location</CODE></EM> has to match the one used with <A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer"><CODE class=function>g_object_add_weak_pointer()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-remove-weak-pointer.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The object that is weak referenced.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>weak_pointer_location</P></TD>
<TD class=parameter_description>
<P>The memory address of a pointer. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>][not optional]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GToggleNotify></A>
<H3>GToggleNotify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
<SPAN class=c_punctuation>(</SPAN>*GToggleNotify<SPAN class=c_punctuation>)</SPAN> (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                  <EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                  <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=type>gboolean</SPAN></A> is_last_ref</CODE></EM>);</PRE>
<P>A callback function used for notification when the state of a toggle reference changes. See <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A>.</P>
<DIV class=refsect3><A name=GToggleNotify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>Callback data passed to <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The object on which <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A> was called.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>is_last_ref</P></TD>
<TD class=parameter_description>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the toggle reference is now the last reference to the object. <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> if the toggle reference was the last reference and there are now other references.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-add-toggle-ref></A>
<H3>g_object_add_toggle_ref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_add_toggle_ref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                         <EM class=parameter><CODE><A title=GToggleNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GToggleNotify"><SPAN class=type>GToggleNotify</SPAN></A> notify</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Increases the reference count of the object by one and sets a callback to be called when all other references to the object are dropped, or when this is already the last reference to the object and another reference is established.</P>
<P>This functionality is intended for binding <EM class=parameter><CODE>object</CODE></EM> to a proxy object managed by another memory manager. This is done with two paired references: the strong reference added by <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A> and a reverse reference to the proxy object which is either a strong reference or weak reference.</P>
<P>The setup is that when there are no other references to <EM class=parameter><CODE>object</CODE></EM> , only a weak reference is held in the reverse direction from <EM class=parameter><CODE>object</CODE></EM> to the proxy object, but when there are other references held to <EM class=parameter><CODE>object</CODE></EM> , a strong reference is held. The <EM class=parameter><CODE>notify</CODE></EM> callback is called when the reference from <EM class=parameter><CODE>object</CODE></EM> to the proxy object should be "toggled" from strong to weak (<EM class=parameter><CODE>is_last_ref</CODE></EM> true) or weak to strong (<EM class=parameter><CODE>is_last_ref</CODE></EM> false).</P>
<P>Since a (normal) reference must be held to the object before calling <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A>, the initial state of the reverse link is always strong.</P>
<P>Multiple toggle references may be added to the same gobject, however if there are multiple toggle references to an object, none of them will ever be notified until all but one are removed. For this reason, you should only ever use a toggle reference if there is important state in the proxy object.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-add-toggle-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>a function to call when this reference is the last reference to the object, or is no longer the last reference.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>notify</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-8.html#api-index-2.8">2.8</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-remove-toggle-ref></A>
<H3>g_object_remove_toggle_ref&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_remove_toggle_ref (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                            <EM class=parameter><CODE><A title=GToggleNotify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GToggleNotify"><SPAN class=type>GToggleNotify</SPAN></A> notify</CODE></EM>,
                            <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Removes a reference added with <A title=g_object_add_toggle_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-toggle-ref"><CODE class=function>g_object_add_toggle_ref()</CODE></A>. The reference count of the object is decreased by one.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-remove-toggle-ref.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>notify</P></TD>
<TD class=parameter_description>
<P>a function to call when this reference is the last reference to the object, or is no longer the last reference.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to pass to <EM class=parameter><CODE>notify</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-8.html#api-index-2.8">2.8</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-connect></A>
<H3>g_object_connect&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_connect (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
                  <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_spec</CODE></EM>,
                  <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>A convenience function to connect multiple signals at once.</P>
<P>The signal specs expected by this function have the form "modifier::signal_name", where modifier can be one of the following:</P>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: disc">
<LI class=listitem>
<DIV class=itemizedlist>
<UL class=itemizedlist style="LIST-STYLE-TYPE: circle">
<LI class=listitem>
<P>signal: equivalent to g_signal_connect_data (..., NULL, 0)</P></LI></UL></DIV></LI>
<LI class=listitem>
<P>object-signal, object_signal: equivalent to g_signal_connect_object (..., 0)</P></LI>
<LI class=listitem>
<P>swapped-signal, swapped_signal: equivalent to g_signal_connect_data (..., NULL, G_CONNECT_SWAPPED)</P></LI>
<LI class=listitem>
<P>swapped_object_signal, swapped-object-signal: equivalent to g_signal_connect_object (..., G_CONNECT_SWAPPED)</P></LI>
<LI class=listitem>
<P>signal_after, signal-after: equivalent to g_signal_connect_data (..., NULL, G_CONNECT_AFTER)</P></LI>
<LI class=listitem>
<P>object_signal_after, object-signal-after: equivalent to g_signal_connect_object (..., G_CONNECT_AFTER)</P></LI>
<LI class=listitem>
<P>swapped_signal_after, swapped-signal-after: equivalent to g_signal_connect_data (..., NULL, G_CONNECT_SWAPPED | G_CONNECT_AFTER)</P></LI>
<LI class=listitem>
<P>swapped_object_signal_after, swapped-object-signal-after: equivalent to g_signal_connect_object (..., G_CONNECT_SWAPPED | G_CONNECT_AFTER)</P></LI></UL></DIV>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>menu<SPAN class="gtkdoc opt">-&gt;</SPAN>toplevel <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-connect">g_object_connect</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new">g_object_new</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>GTK_TYPE_WINDOW<SPAN class="gtkdoc opt">,</SPAN>
						   <SPAN class=string>"type"</SPAN><SPAN class="gtkdoc opt">,</SPAN> GTK_WINDOW_POPUP<SPAN class="gtkdoc opt">,</SPAN>
						   <SPAN class=string>"child"</SPAN><SPAN class="gtkdoc opt">,</SPAN> menu<SPAN class="gtkdoc opt">,</SPAN>
						   NULL<SPAN class="gtkdoc opt">),</SPAN>
				     <SPAN class=string>"signal::event"</SPAN><SPAN class="gtkdoc opt">,</SPAN> gtk_menu_window_event<SPAN class="gtkdoc opt">,</SPAN> menu<SPAN class="gtkdoc opt">,</SPAN>
				     <SPAN class=string>"signal::size_request"</SPAN><SPAN class="gtkdoc opt">,</SPAN> gtk_menu_window_size_request<SPAN class="gtkdoc opt">,</SPAN> menu<SPAN class="gtkdoc opt">,</SPAN>
				     <SPAN class=string>"signal::destroy"</SPAN><SPAN class="gtkdoc opt">,</SPAN> gtk_widget_destroyed<SPAN class="gtkdoc opt">, &amp;</SPAN>menu<SPAN class="gtkdoc opt">-&gt;</SPAN>toplevel<SPAN class="gtkdoc opt">,</SPAN>
				     NULL<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-connect.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_spec</P></TD>
<TD class=parameter_description>
<P>the spec for the first signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> for the first signal, followed by data for the first signal, followed optionally by more signal spec/callback/data triples, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-connect.returns></A>
<H4>Returns</H4>
<P><EM class=parameter><CODE>object</CODE></EM> . </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>][<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-disconnect></A>
<H3>g_object_disconnect&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_disconnect (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *signal_spec</CODE></EM>,
                     <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>A convenience function to disconnect multiple signals at once.</P>
<P>The signal specs expected by this function have the form "any_signal", which means to disconnect any signal with matching callback and data, or "any_signal::signal_name", which only disconnects the signal named "signal_name".</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-disconnect.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>signal_spec</P></TD>
<TD class=parameter_description>
<P>the spec for the first signal</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P><A title=GCallback&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GCallback"><SPAN class=type>GCallback</SPAN></A> for the first signal, followed by data for the first signal, followed optionally by more signal spec/callback/data triples, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set></A>
<H3>g_object_set&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Sets properties on an object.</P>
<P>Note that the "notify" signals are queued and only emitted (in reverse order) after all properties have been set. See <A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify"><CODE class=function>g_object_freeze_notify()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>value for the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get></A>
<H3>g_object_get&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_get (<EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>,
              <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
              <EM class=parameter><CODE>...</CODE></EM>);</PRE>
<P>Gets properties of an object.</P>
<P>In general, a copy is made of the property contents and the caller is responsible for freeing the memory in the appropriate manner for the type, for instance by calling <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> or <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A>.</P>
<P>Here is an example of using <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A> to get the contents of three properties: an integer, a string and an object:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting>gint intval<SPAN class="gtkdoc opt">;</SPAN>
gchar <SPAN class="gtkdoc opt">*</SPAN>strval<SPAN class="gtkdoc opt">;</SPAN>
GObject <SPAN class="gtkdoc opt">*</SPAN>objval<SPAN class="gtkdoc opt">;</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get">g_object_get</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>my_object<SPAN class="gtkdoc opt">,</SPAN>
              <SPAN class=string>"int-property"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>intval<SPAN class="gtkdoc opt">,</SPAN>
              <SPAN class=string>"str-property"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>strval<SPAN class="gtkdoc opt">,</SPAN>
              <SPAN class=string>"obj-property"</SPAN><SPAN class="gtkdoc opt">, &amp;</SPAN>objval<SPAN class="gtkdoc opt">,</SPAN>
              NULL<SPAN class="gtkdoc opt">);</SPAN>

<SPAN class="gtkdoc slc">// Do something with intval, strval, objval</SPAN>

<SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>strval<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref">g_object_unref</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>objval<SPAN class="gtkdoc opt">);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-get.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to get</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>...</P></TD>
<TD class=parameter_description>
<P>return location for the first property, followed optionally by more name/return location pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-notify></A>
<H3>g_object_notify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_notify (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                 <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>);</PRE>
<P>Emits a "notify" signal for the property <EM class=parameter><CODE>property_name</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> .</P>
<P>When possible, eg. when signaling a property change from within the class that registered the property, you should use <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A> instead.</P>
<P>Note that emission of the notify signal may be blocked with <A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify"><CODE class=function>g_object_freeze_notify()</CODE></A>. In this case, the signal emissions are queued and will be emitted (in reverse order) when <A title=g_object_thaw_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-thaw-notify"><CODE class=function>g_object_thaw_notify()</CODE></A> is called.</P>
<DIV class=refsect3><A name=g-object-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of a property installed on the class of <EM class=parameter><CODE>object</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-notify-by-pspec></A>
<H3>g_object_notify_by_pspec&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_notify_by_pspec (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                          <EM class=parameter><CODE><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec</CODE></EM>);</PRE>
<P>Emits a "notify" signal for the property specified by <EM class=parameter><CODE>pspec</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> .</P>
<P>This function omits the property name lookup, hence it is faster than <A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify"><CODE class=function>g_object_notify()</CODE></A>.</P>
<P>One way to avoid using <A title=g_object_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify"><CODE class=function>g_object_notify()</CODE></A> from within the class that registered the properties, and using <A title=g_object_notify_by_pspec&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec"><CODE class=function>g_object_notify_by_pspec()</CODE></A> instead, is to store the GParamSpec used with <A title=g_object_class_install_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property"><CODE class=function>g_object_class_install_property()</CODE></A> inside a static array, e.g.:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">enum</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  PROP_0<SPAN class="gtkdoc opt">,</SPAN>
  PROP_FOO<SPAN class="gtkdoc opt">,</SPAN>
  PROP_LAST
<SPAN class="gtkdoc opt">};</SPAN>

<SPAN class="gtkdoc kwb">static</SPAN> GParamSpec <SPAN class="gtkdoc opt">*</SPAN>properties<SPAN class="gtkdoc opt">[</SPAN>PROP_LAST<SPAN class="gtkdoc opt">];</SPAN>

<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>my_object_class_init</SPAN> <SPAN class="gtkdoc opt">(</SPAN>MyObjectClass <SPAN class="gtkdoc opt">*</SPAN>klass<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">] =</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-int">g_param_spec_int</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"Foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"The foo"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                           <SPAN class=number>0</SPAN><SPAN class="gtkdoc opt">,</SPAN> <SPAN class=number>100</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                           <SPAN class=number>50</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                                           G_PARAM_READWRITE<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-class-install-property">g_object_class_install_property</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gobject_class<SPAN class="gtkdoc opt">,</SPAN>
                                   PROP_FOO<SPAN class="gtkdoc opt">,</SPAN>
                                   properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">]);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<P>and then notify a change on the "foo" property with:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-notify-by-pspec">g_object_notify_by_pspec</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>self<SPAN class="gtkdoc opt">,</SPAN> properties<SPAN class="gtkdoc opt">[</SPAN>PROP_FOO<SPAN class="gtkdoc opt">]);</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P></P>
<DIV class=refsect3><A name=g-object-notify-by-pspec.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of a property installed on the class of <EM class=parameter><CODE>object</CODE></EM> .</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-26.html#api-index-2.26">2.26</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-freeze-notify></A>
<H3>g_object_freeze_notify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_freeze_notify (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>Increases the freeze count on <EM class=parameter><CODE>object</CODE></EM> . If the freeze count is non-zero, the emission of "notify" signals on <EM class=parameter><CODE>object</CODE></EM> is stopped. The signals are queued until the freeze count is decreased to zero. Duplicate notifications are squashed so that at most one <A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify"><SPAN class=type>&#8220;notify&#8221;</SPAN></A> signal is emitted for each property modified while the object is frozen.</P>
<P>This is necessary for accessors that modify multiple properties to prevent premature notification while the object is still being modified.</P>
<DIV class=refsect3><A name=g-object-freeze-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-thaw-notify></A>
<H3>g_object_thaw_notify&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_thaw_notify (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>Reverts the effect of a previous call to <A title=g_object_freeze_notify&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-freeze-notify"><CODE class=function>g_object_freeze_notify()</CODE></A>. The freeze count is decreased on <EM class=parameter><CODE>object</CODE></EM> and when it reaches zero, queued "notify" signals are emitted.</P>
<P>Duplicate notifications for each property are squashed so that at most one <A title="The &#8220;notify&#8221; signal" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject-notify"><SPAN class=type>&#8220;notify&#8221;</SPAN></A> signal is emitted for each property, in the reverse order in which they have been queued.</P>
<P>It is an error to call this function when the freeze count is zero.</P>
<DIV class=refsect3><A name=g-object-thaw-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-data></A>
<H3>g_object_get_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_get_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>);</PRE>
<P>Gets a named field from the objects table of associations (see <A title=g_object_set_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data"><CODE class=function>g_object_set_data()</CODE></A>).</P>
<DIV class=refsect3><A name=g-object-get-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key for that association</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-get-data.returns></A>
<H4>Returns</H4>
<P>the data if found, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no such data exists. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-data></A>
<H3>g_object_set_data&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>Each object carries around a table of associations from strings to pointers. This function lets you set an association.</P>
<P>If the object already had an association with that name, the old association will be destroyed.</P>
<DIV class=refsect3><A name=g-object-set-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to associate with that key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-data-full></A>
<H3>g_object_set_data_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_data_full (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                        <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>);</PRE>
<P>Like <A title=g_object_set_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-data"><CODE class=function>g_object_set_data()</CODE></A> except it adds notification for when the association is destroyed, either by setting it to a different value or when the object is destroyed.</P>
<P>Note that the <EM class=parameter><CODE>destroy</CODE></EM> callback is not called if <EM class=parameter><CODE>data</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-data-full.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>data to associate with that key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>function to call when the association is destroyed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-steal-data></A>
<H3>g_object_steal_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_steal_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>);</PRE>
<P>Remove a specified datum from the object's data associations, without invoking the association's destroy handler.</P>
<DIV class=refsect3><A name=g-object-steal-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> containing the associations</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>name of the key</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-steal-data.returns></A>
<H4>Returns</H4>
<P>the data if found, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if no such data exists. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-dup-data></A>
<H3>g_object_dup_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_dup_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                   <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Keyed-Data-Lists.html#GDuplicateFunc"><SPAN class=type>GDuplicateFunc</SPAN></A> dup_func</CODE></EM>,
                   <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>This is a variant of <A title=g_object_get_data&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-data"><CODE class=function>g_object_get_data()</CODE></A> which returns a 'duplicate' of the value. <EM class=parameter><CODE>dup_func</CODE></EM> defines the meaning of 'duplicate' in this context, it could e.g. take a reference on a ref-counted object.</P>
<P>If the <EM class=parameter><CODE>key</CODE></EM> is not set on the object then <EM class=parameter><CODE>dup_func</CODE></EM> will be called with a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> argument.</P>
<P>Note that <EM class=parameter><CODE>dup_func</CODE></EM> is called while user data of <EM class=parameter><CODE>object</CODE></EM> is locked.</P>
<P>This function can be useful to avoid races when multiple threads are using object data on the same key on the same object.</P>
<DIV class=refsect3><A name=g-object-dup-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a string, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dup_func</P></TD>
<TD class=parameter_description>
<P>function to dup the value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>passed as user_data to <EM class=parameter><CODE>dup_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-dup-data.returns></A>
<H4>Returns</H4>
<P>the result of calling <EM class=parameter><CODE>dup_func</CODE></EM> on the value associated with <EM class=parameter><CODE>key</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if not set. If <EM class=parameter><CODE>dup_func</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the value is returned unmodified.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-replace-data></A>
<H3>g_object_replace_data&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_object_replace_data (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *key</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> oldval</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> newval</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>,
                       <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> *old_destroy</CODE></EM>);</PRE>
<P>Compares the user data for the key <EM class=parameter><CODE>key</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> with <EM class=parameter><CODE>oldval</CODE></EM> , and if they are the same, replaces <EM class=parameter><CODE>oldval</CODE></EM> with <EM class=parameter><CODE>newval</CODE></EM> .</P>
<P>This is like a typical atomic compare-and-exchange operation, for user data on an object.</P>
<P>If the previous value was replaced then ownership of the old value (<EM class=parameter><CODE>oldval</CODE></EM> ) is passed to the caller, including the registered destroy notify for it (passed out in <EM class=parameter><CODE>old_destroy</CODE></EM> ). Its up to the caller to free this as he wishes, which may or may not include using <EM class=parameter><CODE>old_destroy</CODE></EM> as sometimes replacement should not destroy the object in the normal way.</P>
<DIV class=refsect3><A name=g-object-replace-data.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>key</P></TD>
<TD class=parameter_description>
<P>a string, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>oldval</P></TD>
<TD class=parameter_description>
<P>the old value to compare against. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>newval</P></TD>
<TD class=parameter_description>
<P>the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>a destroy notify for the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>old_destroy</P></TD>
<TD class=parameter_description>
<P>destroy notify for the existing value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-replace-data.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the existing value for <EM class=parameter><CODE>key</CODE></EM> was replaced by <EM class=parameter><CODE>newval</CODE></EM> , <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-qdata></A>
<H3>g_object_get_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_get_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>This function gets back user data pointers stored via <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-get-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to get a stored user data pointer from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-get-qdata.returns></A>
<H4>Returns</H4>
<P>The user data pointer set, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Don't free data after the code is done."><SPAN class=acronym>transfer none</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-qdata></A>
<H3>g_object_set_qdata&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>);</PRE>
<P>This sets an opaque, named pointer on an object. The name is specified through a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> (retrived e.g. via <A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-quark-from-static-string"><CODE class=function>g_quark_from_static_string()</CODE></A>), and the pointer can be gotten back from the <EM class=parameter><CODE>object</CODE></EM> with <A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata"><CODE class=function>g_object_get_qdata()</CODE></A> until the <EM class=parameter><CODE>object</CODE></EM> is finalized. Setting a previously set user data pointer, overrides (frees) the old pointer set, using <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><SPAN class=type>NULL</SPAN></A> as pointer essentially removes the data stored.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to set store a user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>An opaque user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-qdata-full></A>
<H3>g_object_set_qdata_full&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_qdata_full (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> data</CODE></EM>,
                         <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>);</PRE>
<P>This function works like <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A>, but in addition, a void (*destroy) (gpointer) function may be specified which is called with <EM class=parameter><CODE>data</CODE></EM> as argument when the <EM class=parameter><CODE>object</CODE></EM> is finalized, or the data is being overwritten by a call to <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A> with the same <EM class=parameter><CODE>quark</CODE></EM> .</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-qdata-full.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to set store a user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>data</P></TD>
<TD class=parameter_description>
<P>An opaque user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>Function to invoke with <EM class=parameter><CODE>data</CODE></EM> as argument, when <EM class=parameter><CODE>data</CODE></EM> needs to be freed</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-steal-qdata></A>
<H3>g_object_steal_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_steal_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                      <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>);</PRE>
<P>This function gets back user data pointers stored via <A title=g_object_set_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata"><CODE class=function>g_object_set_qdata()</CODE></A> and removes the <EM class=parameter><CODE>data</CODE></EM> from object without invoking its <CODE class=function>destroy()</CODE> function (if any was set). Usually, calling this function is only required to update user data pointers with a destroy notifier, for example:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class="gtkdoc kwb">void</SPAN>
<SPAN class=function>object_add_to_user_list</SPAN> <SPAN class="gtkdoc opt">(</SPAN>GObject     <SPAN class="gtkdoc opt">*</SPAN>object<SPAN class="gtkdoc opt">,</SPAN>
                         <SPAN class="gtkdoc kwb">const</SPAN> gchar <SPAN class="gtkdoc opt">*</SPAN>new_string<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  <SPAN class="gtkdoc slc">// the quark, naming the object data</SPAN>
  GQuark quark_string_list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Quarks.html#g-quark-from-static-string">g_quark_from_static_string</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN><SPAN class=string>"my-string-list"</SPAN><SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class="gtkdoc slc">// retrive the old string list</SPAN>
  GList <SPAN class="gtkdoc opt">*</SPAN>list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-qdata">g_object_steal_qdata</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">,</SPAN> quark_string_list<SPAN class="gtkdoc opt">);</SPAN>

  <SPAN class="gtkdoc slc">// prepend new string</SPAN>
  list <SPAN class="gtkdoc opt">=</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#g-list-prepend">g_list_prepend</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-String-Utility-Functions.html#g-strdup">g_strdup</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>new_string<SPAN class="gtkdoc opt">));</SPAN>
  <SPAN class="gtkdoc slc">// this changed 'list', so we need to set it again</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata-full">g_object_set_qdata_full</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>object<SPAN class="gtkdoc opt">,</SPAN> quark_string_list<SPAN class="gtkdoc opt">,</SPAN> list<SPAN class="gtkdoc opt">,</SPAN> free_string_list<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN>
<SPAN class="gtkdoc kwb">static void</SPAN>
<SPAN class=function>free_string_list</SPAN> <SPAN class="gtkdoc opt">(</SPAN>gpointer data<SPAN class="gtkdoc opt">)</SPAN>
<SPAN class="gtkdoc opt">{</SPAN>
  GList <SPAN class="gtkdoc opt">*</SPAN>node<SPAN class="gtkdoc opt">, *</SPAN>list <SPAN class="gtkdoc opt">=</SPAN> data<SPAN class="gtkdoc opt">;</SPAN>

  <SPAN class=keyword>for</SPAN> <SPAN class="gtkdoc opt">(</SPAN>node <SPAN class="gtkdoc opt">=</SPAN> list<SPAN class="gtkdoc opt">;</SPAN> node<SPAN class="gtkdoc opt">;</SPAN> node <SPAN class="gtkdoc opt">=</SPAN> node<SPAN class="gtkdoc opt">-&gt;</SPAN>next<SPAN class="gtkdoc opt">)</SPAN>
    <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free">g_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>node<SPAN class="gtkdoc opt">-&gt;</SPAN>data<SPAN class="gtkdoc opt">);</SPAN>
  <SPAN class=function><A href="https://developer.gnome.org/gobject/glib-Doubly-Linked-Lists.html#g-list-free">g_list_free</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>list<SPAN class="gtkdoc opt">);</SPAN>
<SPAN class="gtkdoc opt">}</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>Using <A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata"><CODE class=function>g_object_get_qdata()</CODE></A> in the above example, instead of <A title=g_object_steal_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-steal-qdata"><CODE class=function>g_object_steal_qdata()</CODE></A> would have left the destroy function set, and thus the partial string list would have been freed upon <A title=g_object_set_qdata_full&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-set-qdata-full"><CODE class=function>g_object_set_qdata_full()</CODE></A>.</P>
<DIV class=refsect3><A name=g-object-steal-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>The GObject to get a stored user data pointer from</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>A <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-steal-qdata.returns></A>
<H4>Returns</H4>
<P>The user data pointer set, or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>]</SPAN></P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-dup-qdata></A>
<H3>g_object_dup_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_object_dup_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Keyed-Data-Lists.html#GDuplicateFunc"><SPAN class=type>GDuplicateFunc</SPAN></A> dup_func</CODE></EM>,
                    <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> user_data</CODE></EM>);</PRE>
<P>This is a variant of <A title=g_object_get_qdata&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-qdata"><CODE class=function>g_object_get_qdata()</CODE></A> which returns a 'duplicate' of the value. <EM class=parameter><CODE>dup_func</CODE></EM> defines the meaning of 'duplicate' in this context, it could e.g. take a reference on a ref-counted object.</P>
<P>If the <EM class=parameter><CODE>quark</CODE></EM> is not set on the object then <EM class=parameter><CODE>dup_func</CODE></EM> will be called with a <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> argument.</P>
<P>Note that <EM class=parameter><CODE>dup_func</CODE></EM> is called while user data of <EM class=parameter><CODE>object</CODE></EM> is locked.</P>
<P>This function can be useful to avoid races when multiple threads are using object data on the same key on the same object.</P>
<DIV class=refsect3><A name=g-object-dup-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>dup_func</P></TD>
<TD class=parameter_description>
<P>function to dup the value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>passed as user_data to <EM class=parameter><CODE>dup_func</CODE></EM> . </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-dup-qdata.returns></A>
<H4>Returns</H4>
<P>the result of calling <EM class=parameter><CODE>dup_func</CODE></EM> on the value associated with <EM class=parameter><CODE>quark</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if not set. If <EM class=parameter><CODE>dup_func</CODE></EM> is <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>, the value is returned unmodified.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-replace-qdata></A>
<H3>g_object_replace_qdata&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gboolean"><SPAN class=returnvalue>gboolean</SPAN></A>
g_object_replace_qdata (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A> quark</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> oldval</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> newval</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> destroy</CODE></EM>,
                        <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Datasets.html#GDestroyNotify"><SPAN class=type>GDestroyNotify</SPAN></A> *old_destroy</CODE></EM>);</PRE>
<P>Compares the user data for the key <EM class=parameter><CODE>quark</CODE></EM> on <EM class=parameter><CODE>object</CODE></EM> with <EM class=parameter><CODE>oldval</CODE></EM> , and if they are the same, replaces <EM class=parameter><CODE>oldval</CODE></EM> with <EM class=parameter><CODE>newval</CODE></EM> .</P>
<P>This is like a typical atomic compare-and-exchange operation, for user data on an object.</P>
<P>If the previous value was replaced then ownership of the old value (<EM class=parameter><CODE>oldval</CODE></EM> ) is passed to the caller, including the registered destroy notify for it (passed out in <EM class=parameter><CODE>old_destroy</CODE></EM> ). Its up to the caller to free this as he wishes, which may or may not include using <EM class=parameter><CODE>old_destroy</CODE></EM> as sometimes replacement should not destroy the object in the normal way.</P>
<DIV class=refsect3><A name=g-object-replace-qdata.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> to store user data on</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>quark</P></TD>
<TD class=parameter_description>
<P>a <A href="https://developer.gnome.org/gobject/glib-Quarks.html#GQuark"><SPAN class=type>GQuark</SPAN></A>, naming the user data pointer</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>oldval</P></TD>
<TD class=parameter_description>
<P>the old value to compare against. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>newval</P></TD>
<TD class=parameter_description>
<P>the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>destroy</P></TD>
<TD class=parameter_description>
<P>a destroy notify for the new value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>old_destroy</P></TD>
<TD class=parameter_description>
<P>destroy notify for the existing value. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-replace-qdata.returns></A>
<H4>Returns</H4>
<P><A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#TRUE:CAPS"><CODE class=literal>TRUE</CODE></A> if the existing value for <EM class=parameter><CODE>quark</CODE></EM> was replaced by <EM class=parameter><CODE>newval</CODE></EM> , <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#FALSE:CAPS"><CODE class=literal>FALSE</CODE></A> otherwise.</P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-34.html#api-index-2.34">2.34</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-property></A>
<H3>g_object_set_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_property (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>,
                       <EM class=parameter><CODE>const <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Sets a property on an object.</P>
<DIV class=refsect3><A name=g-object-set-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of the property to set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>the value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-property></A>
<H3>g_object_get_property&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_get_property (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                       <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *property_name</CODE></EM>,
                       <EM class=parameter><CODE><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> *value</CODE></EM>);</PRE>
<P>Gets a property of an object. <EM class=parameter><CODE>value</CODE></EM> must have been initialized to the expected type of the property (or a type to which the expected type can be transformed) using <A title=g_value_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-init"><CODE class=function>g_value_init()</CODE></A>.</P>
<P>In general, a copy is made of the property contents and the caller is responsible for freeing the memory by calling <A title=g_value_unset&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#g-value-unset"><CODE class=function>g_value_unset()</CODE></A>.</P>
<P>Note that <A title=g_object_get_property&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get-property"><CODE class=function>g_object_get_property()</CODE></A> is really intended for language bindings, <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A> is much more convenient for C programming.</P>
<DIV class=refsect3><A name=g-object-get-property.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_name</P></TD>
<TD class=parameter_description>
<P>the name of the property to get</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>value</P></TD>
<TD class=parameter_description>
<P>return location for the property value</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-new-valist></A>
<H3>g_object_new_valist&nbsp;()</H3><PRE class=programlisting><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=returnvalue>GObject</SPAN></A>&nbsp;*
g_object_new_valist (<EM class=parameter><CODE><A title=GType class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GType"><SPAN class=type>GType</SPAN></A> object_type</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Creates a new instance of a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype and sets its properties.</P>
<P>Construction parameters (see <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT</SPAN></A>, <A class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#G-PARAM-CONSTRUCT-ONLY:CAPS"><SPAN class=type>G_PARAM_CONSTRUCT_ONLY</SPAN></A>) which are not explicitly specified are set to their default values.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-new-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object_type</P></TD>
<TD class=parameter_description>
<P>the type id of the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> subtype to instantiate</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>the name of the first property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>the value of the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-object-new-valist.returns></A>
<H4>Returns</H4>
<P>a new instance of <EM class=parameter><CODE>object_type</CODE></EM> </P></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-set-valist></A>
<H3>g_object_set_valist&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_set_valist (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Sets properties on an object.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-set-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to set</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>value for the first property, followed optionally by more name/value pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-get-valist></A>
<H3>g_object_get_valist&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_get_valist (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                     <EM class=parameter><CODE>const <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A> *first_property_name</CODE></EM>,
                     <EM class=parameter><CODE><SPAN class=type>va_list</SPAN> var_args</CODE></EM>);</PRE>
<P>Gets properties of an object.</P>
<P>In general, a copy is made of the property contents and the caller is responsible for freeing the memory in the appropriate manner for the type, for instance by calling <A href="https://developer.gnome.org/gobject/glib-Memory-Allocation.html#g-free"><CODE class=function>g_free()</CODE></A> or <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A>.</P>
<P>See <A title=g_object_get&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-get"><CODE class=function>g_object_get()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-object-get-valist.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>first_property_name</P></TD>
<TD class=parameter_description>
<P>name of the first property to get</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>var_args</P></TD>
<TD class=parameter_description>
<P>return location for the first property, followed optionally by more name/return location pairs, followed by <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-watch-closure></A>
<H3>g_object_watch_closure&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_watch_closure (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>,
                        <EM class=parameter><CODE><A title="struct GClosure" class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#GClosure"><SPAN class=type>GClosure</SPAN></A> *closure</CODE></EM>);</PRE>
<P>This function essentially limits the life time of the <EM class=parameter><CODE>closure</CODE></EM> to the life time of the object. That is, when the object is finalized, the <EM class=parameter><CODE>closure</CODE></EM> is invalidated by calling <A title=g_closure_invalidate&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#g-closure-invalidate"><CODE class=function>g_closure_invalidate()</CODE></A> on it, in order to prevent invocations of the closure with a finalized (nonexisting) object. Also, <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> and <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A> are added as marshal guards to the <EM class=parameter><CODE>closure</CODE></EM> , to ensure that an extra reference count is held on <EM class=parameter><CODE>object</CODE></EM> during invocation of the <EM class=parameter><CODE>closure</CODE></EM> . Usually, this function will be called on closures that use this <EM class=parameter><CODE>object</CODE></EM> as closure data.</P>
<DIV class=refsect3><A name=g-object-watch-closure.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>GObject restricting lifetime of <EM class=parameter><CODE>closure</CODE></EM> </P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>closure</P></TD>
<TD class=parameter_description>
<P>GClosure to watch</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-object-run-dispose></A>
<H3>g_object_run_dispose&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_object_run_dispose (<EM class=parameter><CODE><A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> *object</CODE></EM>);</PRE>
<P>Releases all references to other objects. This can be used to break reference cycles.</P>
<P>This function should only be called from object system implementations.</P>
<DIV class=refsect3><A name=g-object-run-dispose.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A></P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=G-OBJECT-WARN-INVALID-PROPERTY-ID:CAPS></A>
<H3>G_OBJECT_WARN_INVALID_PROPERTY_ID()</H3><PRE class=programlisting>#define             G_OBJECT_WARN_INVALID_PROPERTY_ID(object, property_id, pspec)</PRE>
<P>This macro should be used to emit a standard warning about unexpected properties in <CODE class=function>set_property()</CODE> and <CODE class=function>get_property()</CODE> implementations.</P>
<DIV class=refsect3><A name=G-OBJECT-WARN-INVALID-PROPERTY-ID.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> on which <CODE class=function>set_property()</CODE> or <CODE class=function>get_property()</CODE> was called</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>property_id</P></TD>
<TD class=parameter_description>
<P>the numeric id of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of the property</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-init></A>
<H3>g_weak_ref_init&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_weak_ref_init (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>,
                 <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Initialise a non-statically-allocated <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A>.</P>
<P>This function also calls <A title=g_weak_ref_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-set"><CODE class=function>g_weak_ref_set()</CODE></A> with <EM class=parameter><CODE>object</CODE></EM> on the freshly-initialised weak reference.</P>
<P>This function should always be matched with a call to <A title=g_weak_ref_clear&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-clear"><CODE class=function>g_weak_ref_clear()</CODE></A>. It is not necessary to use this function for a <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> in static storage because it will already be properly initialised. Just use <A title=g_weak_ref_set&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-set"><CODE class=function>g_weak_ref_set()</CODE></A> directly.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-init.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>uninitialized or empty location for a weak reference. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>]</SPAN></TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-clear></A>
<H3>g_weak_ref_clear&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_weak_ref_clear (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>);</PRE>
<P>Frees resources associated with a non-statically-allocated <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A>. After this call, the <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> is left in an undefined state.</P>
<P>You should only call this on a <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> that previously had <A title=g_weak_ref_init&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-weak-ref-init"><CODE class=function>g_weak_ref_init()</CODE></A> called on it.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-clear.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>location of a weak reference, which may be empty. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-get></A>
<H3>g_weak_ref_get&nbsp;()</H3><PRE class=programlisting><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=returnvalue>gpointer</SPAN></A>
g_weak_ref_get (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>);</PRE>
<P>If <EM class=parameter><CODE>weak_ref</CODE></EM> is not empty, atomically acquire a strong reference to the object it points to, and return that reference.</P>
<P>This function is needed because of the potential race between taking the pointer value and <A title=g_object_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-ref"><CODE class=function>g_object_ref()</CODE></A> on it, if the object was losing its last reference at the same time in a different thread.</P>
<P>The caller should release the resulting reference in the usual way, by using <A title=g_object_unref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-unref"><CODE class=function>g_object_unref()</CODE></A>.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-get.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>location of a weak reference to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Parameter for input and for returning results. Default is transfer full."><SPAN class=acronym>inout</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<DIV class=refsect3><A name=g-weak-ref-get.returns></A>
<H4>Returns</H4>
<P>the object pointed to by <EM class=parameter><CODE>weak_ref</CODE></EM> , or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A> if it was empty. </P>
<P><SPAN class=annotation>[<ACRONYM title="Free data after the code is done."><SPAN class=acronym>transfer full</SPAN></ACRONYM>][<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object]</SPAN></P></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV>
<HR>

<DIV class=refsect2><A name=g-weak-ref-set></A>
<H3>g_weak_ref_set&nbsp;()</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
g_weak_ref_set (<EM class=parameter><CODE><A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> *weak_ref</CODE></EM>,
                <EM class=parameter><CODE><A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A> object</CODE></EM>);</PRE>
<P>Change the object to which <EM class=parameter><CODE>weak_ref</CODE></EM> points, or set it to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>.</P>
<P>You must own a strong reference on <EM class=parameter><CODE>object</CODE></EM> while calling this function.</P>
<P><SPAN class=annotation>[<ACRONYM title="Exposed in C code, not necessarily available in other languages."><SPAN class=acronym>skip</SPAN></ACRONYM>]</SPAN></P>
<DIV class=refsect3><A name=g-weak-ref-set.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>weak_ref</P></TD>
<TD class=parameter_description>
<P>location for a weak reference</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>object</P></TD>
<TD class=parameter_description>
<P>a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> or <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. </P></TD>
<TD class=parameter_annotations><SPAN class=annotation>[<ACRONYM title="Override the parsed C type with given type."><SPAN class=acronym>type</SPAN></ACRONYM> GObject.Object][<ACRONYM title="NULL may be passed as the value in, out, in-out; or as a return value."><SPAN class=acronym>nullable</SPAN></ACRONYM>]</SPAN></TD></TR></TBODY></TABLE></DIV></DIV>
<P class=since>Since: <A class=link href="https://developer.gnome.org/gobject/stable/api-index-2-32.html#api-index-2.32">2.32</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.other_details></A>
<H2>Types and Values</H2>
<DIV class=refsect2><A name=GObject-struct></A>
<H3>struct GObject</H3><PRE class=programlisting>struct GObject;</PRE>
<P>All the fields in the GObject structure are private to the <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A> implementation and should never be accessed directly.</P></DIV>
<HR>

<DIV class=refsect2><A name=GObjectClass></A>
<H3>struct GObjectClass</H3><PRE class=programlisting>struct GObjectClass {
  GTypeClass   g_type_class;

  /* seldom overidden */
  GObject*   (*constructor)     (GType                  type,
                                 guint                  n_construct_properties,
                                 GObjectConstructParam *construct_properties);
  /* overridable methods */
  void       (*set_property)		(GObject        *object,
                                         guint           property_id,
                                         const GValue   *value,
                                         GParamSpec     *pspec);
  void       (*get_property)		(GObject        *object,
                                         guint           property_id,
                                         GValue         *value,
                                         GParamSpec     *pspec);
  void       (*dispose)			(GObject        *object);
  void       (*finalize)		(GObject        *object);
  /* seldom overidden */
  void       (*dispatch_properties_changed) (GObject      *object,
					     guint	   n_pspecs,
					     GParamSpec  **pspecs);
  /* signals */
  void	     (*notify)			(GObject&nbsp;*object,
					 GParamSpec&nbsp;*pspec);

  /* called when done constructing */
  void	     (*constructed)		(GObject&nbsp;*object);
};
</PRE>
<P>The class structure for the GObject type.</P>
<P>&lt;example&gt; &lt;title&gt;Implementing singletons using a constructor&lt;/title&gt; &lt;programlisting&gt; static MySingleton *the_singleton = NULL;</P>
<P>static GObject* my_singleton_constructor (GType type, guint n_construct_params, GObjectConstructParam *construct_params) { GObject *object;</P>
<P>if (!the_singleton) { object = G_OBJECT_CLASS (parent_class)-&gt;constructor (type, n_construct_params, construct_params); the_singleton = MY_SINGLETON (object); } else object = g_object_ref (G_OBJECT (the_singleton));</P>
<P>return object; } &lt;/programlisting&gt;&lt;/example&gt;</P>
<DIV class=refsect3><A name=GObjectClass.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GTypeClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-Type-Information.html#GTypeClass"><SPAN class=type>GTypeClass</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GObjectClass.g-type-class></A>g_type_class</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parent class</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.constructor></A>constructor</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the <EM class=parameter><CODE>constructor</CODE></EM> function is called by <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> to complete the object initialization after all the construction properties are set. The first thing a <EM class=parameter><CODE>constructor</CODE></EM> implementation must do is chain up to the <EM class=parameter><CODE>constructor</CODE></EM> of the parent class. Overriding <EM class=parameter><CODE>constructor</CODE></EM> should be rarely needed, e.g. to handle construct properties, or to implement singletons.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.set-property></A>set_property</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the generic setter for all properties of this type. Should be overridden for every type with properties. If implementations of <EM class=parameter><CODE>set_property</CODE></EM> don't emit property change notification explicitly, this will be done implicitly by the type system. However, if the notify signal is emitted explicitly, the type system will not emit it a second time.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.get-property></A>get_property</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the generic getter for all properties of this type. Should be overridden for every type with properties.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.dispose></A>dispose</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the <EM class=parameter><CODE>dispose</CODE></EM> function is supposed to drop all references to other objects, but keep the instance otherwise intact, so that client method invocations still work. It may be run multiple times (due to reference loops). Before returning, <EM class=parameter><CODE>dispose</CODE></EM> should chain up to the <EM class=parameter><CODE>dispose</CODE></EM> method of the parent class.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.finalize></A>finalize</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>instance finalization function, should finish the finalization of the instance begun in <EM class=parameter><CODE>dispose</CODE></EM> and chain up to the <EM class=parameter><CODE>finalize</CODE></EM> method of the parent class.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.dispatch-properties-changed></A>dispatch_properties_changed</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>emits property change notification for a bunch of properties. Overriding <EM class=parameter><CODE>dispatch_properties_changed</CODE></EM> should be rarely needed.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.notify></A>notify</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the class closure for the notify signal</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><EM class=structfield><CODE><A name=GObjectClass.constructed></A>constructed</CODE></EM>&nbsp;()</P></TD>
<TD class=struct_member_description>
<P>the <EM class=parameter><CODE>constructed</CODE></EM> function is called by <A title=g_object_new&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-new"><CODE class=function>g_object_new()</CODE></A> as the final step of the object creation process. At the point of the call, all construction properties have been set on the object. The purpose of this call is to allow for object initialisation steps that can only be performed after construction properties have been set. <EM class=parameter><CODE>constructed</CODE></EM> implementors should chain up to the <EM class=parameter><CODE>constructed</CODE></EM> call of their parent class to allow it to complete its initialisation.</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GObjectConstructParam></A>
<H3>struct GObjectConstructParam</H3><PRE class=programlisting>struct GObjectConstructParam {
  GParamSpec *pspec;
  GValue     *value;
};
</PRE>
<P>The GObjectConstructParam struct is an auxiliary structure used to hand <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>/<A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A> pairs to the <EM class=parameter><CODE>constructor</CODE></EM> of a <A title="struct GObjectClass" class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass"><SPAN class=type>GObjectClass</SPAN></A>.</P>
<DIV class=refsect3><A name=GObjectConstructParam.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P><A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GObjectConstructParam.pspec></A>pspec</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of the construct parameter</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GObjectConstructParam.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the value to set the parameter to</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GParameter></A>
<H3>struct GParameter</H3><PRE class=programlisting>struct GParameter {
  const gchar *name;
  GValue       value;
};
</PRE>
<P>The GParameter struct is an auxiliary structure used to hand parameter name/value pairs to <A title=g_object_newv&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-newv"><CODE class=function>g_object_newv()</CODE></A>.</P>
<DIV class=refsect3><A name=GParameter.members></A>
<H4>Members</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=struct_members_name width=300>
<COL class=struct_members_description>
<COL class=struct_members_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=struct_member_name>
<P>const&nbsp;<A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gchar"><SPAN class=type>gchar</SPAN></A>&nbsp;*<EM class=structfield><CODE><A name=GParameter.name></A>name</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parameter name</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR>
<TR>
<TD class=struct_member_name>
<P><A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>&nbsp;<EM class=structfield><CODE><A name=GParameter.value></A>value</CODE></EM>;</P></TD>
<TD class=struct_member_description>
<P>the parameter value</P></TD>
<TD class=struct_member_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>

<DIV class=refsect2><A name=GInitiallyUnowned></A>
<H3>GInitiallyUnowned</H3><PRE class=programlisting>typedef struct _GObject                  GInitiallyUnowned;
</PRE>
<P>All the fields in the GInitiallyUnowned structure are private to the <A title=GInitiallyUnowned class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned"><SPAN class=type>GInitiallyUnowned</SPAN></A> implementation and should never be accessed directly.</P></DIV>
<HR>

<DIV class=refsect2><A name=GInitiallyUnownedClass></A>
<H3>GInitiallyUnownedClass</H3><PRE class=programlisting>typedef struct _GObjectClass             GInitiallyUnownedClass;
</PRE>
<P>The class structure for the GInitiallyUnowned type.</P></DIV>
<HR>

<DIV class=refsect2><A name=G-TYPE-INITIALLY-UNOWNED:CAPS></A>
<H3>G_TYPE_INITIALLY_UNOWNED</H3><PRE class=programlisting>#define G_TYPE_INITIALLY_UNOWNED	      (g_initially_unowned_get_type())
</PRE>
<P>The type for <A title=GInitiallyUnowned class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GInitiallyUnowned"><SPAN class=type>GInitiallyUnowned</SPAN></A>.</P></DIV>
<HR>

<DIV class=refsect2><A name=GWeakRef></A>
<H3>GWeakRef</H3><PRE class=programlisting>typedef struct {
} GWeakRef;
</PRE>
<P>A structure containing a weak reference to a <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>. It can either be empty (i.e. point to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>), or point to an object for as long as at least one "strong" reference to that object exists. Before the object's <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass.dispose"><SPAN class=type>GObjectClass.dispose</SPAN></A> method is called, every <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> associated with becomes empty (i.e. points to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>).</P>
<P>Like <A title=GValue class=link href="https://developer.gnome.org/gobject/stable/gobject-Generic-values.html#GValue"><SPAN class=type>GValue</SPAN></A>, <A title=GWeakRef class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRef</SPAN></A> can be statically allocated, stack- or heap-allocated, or embedded in larger structures.</P>
<P>Unlike <A title=g_object_weak_ref&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-weak-ref"><CODE class=function>g_object_weak_ref()</CODE></A> and <A title=g_object_add_weak_pointer&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#g-object-add-weak-pointer"><CODE class=function>g_object_add_weak_pointer()</CODE></A>, this weak reference is thread-safe: converting a weak pointer to a reference is atomic with respect to invalidation of weak pointers to destroyed objects.</P>
<P>If the object's <A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObjectClass.dispose"><SPAN class=type>GObjectClass.dispose</SPAN></A> method results in additional references to the object being held, any <A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRefs</SPAN></A> taken before it was disposed will continue to point to <A href="https://developer.gnome.org/gobject/glib-Standard-Macros.html#NULL:CAPS"><CODE class=literal>NULL</CODE></A>. If <A href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GWeakRef"><SPAN class=type>GWeakRefs</SPAN></A> are taken after the object is disposed and re-referenced, they will continue to point to it until its refcount goes back to zero, at which point they too will be invalidated.</P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.signal-details></A>
<H2>Signal Details</H2>
<DIV class=refsect2><A name=GObject-notify></A>
<H3>The <CODE class=literal>&#8220;notify&#8221;</CODE> signal</H3><PRE class=programlisting><SPAN class=returnvalue>void</SPAN>
user_function (<A class=link href="https://developer.gnome.org/gobject/stable/gobject-The-Base-Object-Type.html#GObject"><SPAN class=type>GObject</SPAN></A>    *gobject,
               <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> *pspec,
               <A href="https://developer.gnome.org/gobject/glib-Basic-Types.html#gpointer"><SPAN class=type>gpointer</SPAN></A>    user_data)</PRE>
<P>The notify signal is emitted on an object when one of its properties has been changed. Note that getting this signal doesn't guarantee that the value of the property has actually changed, it may also be emitted when the setter for the property is called to reinstate the previous value.</P>
<P>This signal is typically used to obtain change notification for a single property, by specifying the property name as a detail in the <A title=g_signal_connect() class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect"><CODE class=function>g_signal_connect()</CODE></A> call, like this:</P>
<DIV class=informalexample>
<TABLE class=listing_frame cellSpacing=0 cellPadding=0 border=0>
<TBODY>
<TR>
<TD class=listing_code><PRE class=programlisting><SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#g-signal-connect">g_signal_connect</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>text_view<SPAN class="gtkdoc opt">-&gt;</SPAN>buffer<SPAN class="gtkdoc opt">,</SPAN> <SPAN class=string>"notify::paste-target-list"</SPAN><SPAN class="gtkdoc opt">,</SPAN>
                  <SPAN class=function><A href="https://developer.gnome.org/gobject/stable/gobject-Closures.html#G-CALLBACK:CAPS">G_CALLBACK</A></SPAN> <SPAN class="gtkdoc opt">(</SPAN>gtk_text_view_target_list_notify<SPAN class="gtkdoc opt">),</SPAN>
                  text_view<SPAN class="gtkdoc opt">)</SPAN></PRE></TD></TR></TBODY></TABLE></DIV>
<P>It is important to note that you must use canonical parameter names as detail strings for the notify signal.</P>
<DIV class=refsect3><A name=GObject-notify.parameters></A>
<H4>Parameters</H4>
<DIV class=informaltable>
<TABLE class=informaltable width="100%" border=0>
<COLGROUP>
<COL class=parameters_name width=150>
<COL class=parameters_description>
<COL class=parameters_annotations width=200></COLGROUP>
<TBODY>
<TR>
<TD class=parameter_name>
<P>gobject</P></TD>
<TD class=parameter_description>
<P>the object which received the signal.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>pspec</P></TD>
<TD class=parameter_description>
<P>the <A title="struct GParamSpec" class=link href="https://developer.gnome.org/gobject/stable/gobject-GParamSpec.html#GParamSpec"><SPAN class=type>GParamSpec</SPAN></A> of the property which changed.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR>
<TR>
<TD class=parameter_name>
<P>user_data</P></TD>
<TD class=parameter_description>
<P>user data set when the signal handler was connected.</P></TD>
<TD class=parameter_annotations>&nbsp;</TD></TR></TBODY></TABLE></DIV></DIV>
<P>Flags: <A class=link href="https://developer.gnome.org/gobject/stable/gobject-Signals.html#G-SIGNAL-NO-HOOKS:CAPS">No Hooks</A></P></DIV></DIV>
<DIV class=refsect1><A name=gobject-The-Base-Object-Type.see-also></A>
<H2>See Also</H2>
<P><A title="struct GParamSpecObject" class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#GParamSpecObject"><SPAN class=type>GParamSpecObject</SPAN></A>, <A title=g_param_spec_object&nbsp;() class=link href="https://developer.gnome.org/gobject/stable/gobject-Standard-Parameter-and-Value-Types.html#g-param-spec-object"><CODE class=function>g_param_spec_object()</CODE></A></P></DIV>