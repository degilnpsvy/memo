#ifndef ioread16be<BR>#define ioread16be ioread16be<BR>static inline u16 ioread16be(const volatile void __iomem *addr)<BR>{<BR>&nbsp;return __be16_to_cpu(__raw_readw(addr));<BR>}<BR>#endif 
<P></P>
<P>#ifndef ioread32be<BR>#define ioread32be ioread32be<BR>static inline u32 ioread32be(const volatile void __iomem *addr)<BR>{<BR>&nbsp;return __be32_to_cpu(__raw_readl(addr));<BR>}<BR>#endif</P>
<P>#ifndef iowrite16be<BR>#define iowrite16be iowrite16be<BR>static inline void iowrite16be(u16 value, void volatile __iomem *addr)<BR>{<BR>&nbsp;__raw_writew(__cpu_to_be16(value), addr);<BR>}<BR>#endif</P>
<P>#ifndef iowrite32be<BR>#define iowrite32be iowrite32be<BR>static inline void iowrite32be(u32 value, volatile void __iomem *addr)<BR>{<BR>&nbsp;__raw_writel(__cpu_to_be32(value), addr);<BR>}<BR>#endif