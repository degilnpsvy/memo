<SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">waits for a currently executing interrupt handler, if any, to complete. Be aware that if the thread calling </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">disable_irq </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">holds any resources (such as spinlocks) that the interrupt handler needs, the system can deadlock. </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">disable_irq_nosync </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">differs from </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">disable_irq </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">in that it returns immediately. Thus, using </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">disable_irq_nosync </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is a little faster but may leave your driver open to race conditions.</SPAN>
<P></P><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><PRE><A class=hl href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#460" name=460>460</A><SPAN class=c>/**
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#461" name=461>461</A> *	disable_irq - disable an irq and wait for completion
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#462" name=462>462</A> *	@irq: Interrupt to disable
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#463" name=463>463</A> *
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#464" name=464>464</A> *	Disable the selected interrupt line.  Enables and Disables are
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#465" name=465>465</A> *	nested.
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#466" name=466>466</A> *	This function waits for any pending IRQ handlers for this interrupt
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#467" name=467>467</A> *	to complete before returning. If you use this function while
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#468" name=468>468</A> *	holding a resource the IRQ handler may need you will deadlock.
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#469" name=469>469</A> *
<A class=hl href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#470" name=470>470</A> *	This function may be called - with care - from IRQ context.
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#471" name=471>471</A> */</SPAN>
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#472" name=472>472</A><B>void</B> <A class=xf name=disable_irq></A><A class=xf href="http://172.29.26.110:8080/source/s?refs=disable_irq&amp;project=Linux-v4.7">disable_irq</A>(<B>unsigned</B> <B>int</B> <A class=xa name=irq></A><A class=xa href="http://172.29.26.110:8080/source/s?refs=irq&amp;project=Linux-v4.7">irq</A>)
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#473" name=473>473</A>{
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#474" name=474>474</A>	<B>if</B> (!<A class=d href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#__disable_irq_nosync">__disable_irq_nosync</A>(<A href="http://172.29.26.110:8080/source/s?defs=irq&amp;project=Linux-v4.7">irq</A>))
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#475" name=475>475</A>		<A href="http://172.29.26.110:8080/source/s?defs=synchronize_irq&amp;project=Linux-v4.7">synchronize_irq</A>(<A href="http://172.29.26.110:8080/source/s?defs=irq&amp;project=Linux-v4.7">irq</A>);
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#476" name=476>476</A>}
<A class=l href="http://172.29.26.110:8080/source/xref/Linux-v4.7/kernel/irq/manage.c#477" name=477>477</A><A href="http://172.29.26.110:8080/source/s?defs=EXPORT_SYMBOL&amp;project=Linux-v4.7">EXPORT_SYMBOL</A>(<A class=xv name=disable_irq></A><A class=xv href="http://172.29.26.110:8080/source/s?refs=disable_irq&amp;project=Linux-v4.7">disable_irq</A>);</PRE></SPAN>