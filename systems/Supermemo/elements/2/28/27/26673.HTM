<HEADER class=entry-header>&nbsp;
<H1 class=entry-title>PERF&#24615;&#33021;&#29942;&#39048;&#35786;&#26029;</H1>
<DIV class=entry-meta><SPAN class=sep>&#21457;&#34920;&#20110; </SPAN><A title="&#19979;&#21320; 10:24" href="http://mnstory.net/2014/12/perf-performance-analysis/" rel=bookmark><TIME class=entry-date datetime="2014-12-17T22:24:40+00:00">2014 &#24180; 12 &#26376; 17 &#26085;</TIME></A> </DIV></HEADER>
<DIV class=entry-content>
<H2>&#20840;&#23616;&#23450;&#20301;&#21040;&#36827;&#31243;</H2>
<P>&#36825;&#20010;&#26041;&#27861;&#27604;&#36739;&#22810;&#65292;&#20363;&#22914;&#29992;top, iostat, vmstat&#31561;&#37117;&#21487;&#20197;&#30830;&#35748;&#32791;&#36164;&#28304;&#22810;&#30340;&#36827;&#31243;&#12290;</P>
<P>perf top&#21487;&#20197;&#20840;&#23616;&#26597;&#30475;&#32791;CPU&#30340;&#36827;&#31243;&#65306;<BR>host-fcaa14023719/root@47:49 /sf/w&gt; perf top<BR><A title="perf top" class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-top.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-top.png"></A><BR>&#26377;&#20010;&#22823;&#20307;&#30340;&#20102;&#35299;&#65292;&#36825;&#19968;&#27493;&#19968;&#33324;&#29992;&#19981;&#19978;&#65292;&#22240;&#20026;&#25105;&#20204;&#38024;&#23545;&#30340;&#37117;&#26159;&#26576;&#19968;&#20855;&#20307;&#36827;&#31243;&#12290;<BR><SPAN id=more-353></SPAN></P>
<H2>&#30830;&#35748;&#22823;&#20307;&#20855;&#20307;&#36827;&#31243;&#24615;&#33021;&#28040;&#32791;&#28857;</H2>
<P>host-fcaa14023719/root@24:43 /sf/w&gt; perf stat -p `pidof dataplane.fw`<BR><A title="perf stat" class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-stat.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-stat.png"></A></P>
<DIV class=monospaced>Performance counter stats for process id '21378':
<P></P>
<P>task-clock CPU&#21033;&#29992;&#29575;&#65292;2&#20010;CPU&#30340;&#65292;&#36825;&#37324;&#21344;&#20102;1.999/2&#65292;&#35828;&#26126;&#26159;CPU bound<BR>context-switches &#36816;&#34892;&#36807;&#31243;&#20013;&#21457;&#29983;&#36827;&#31243;&#20999;&#25442;&#27425;&#25968;<BR>cpu-migrations &#21457;&#29983;&#20102;&#22810;&#23569;&#27425;CPU&#36801;&#31227;&#65292;&#20363;&#22914;&#20174;CPU 0 &#36801;&#31227;&#21040; CPU 1<BR>page-faults &#39029;&#38169;&#35823;&#65292;&#36825;&#20040;&#23569;&#65292;&#35777;&#26126;&#20869;&#23384;&#26041;&#38754;OK<BR>cycles &#22788;&#29702;&#22120;&#26102;&#38047;&#21608;&#26399;<BR>instructions &#24635;&#20849;&#25191;&#34892;&#30340;&#25351;&#20196;&#25968;&#30446;&#65292;&#21518;&#38754;&#26159;&#24179;&#22343;&#19968;&#20010;&#26102;&#38047;&#21608;&#26399;&#25191;&#34892;1.22&#26465;&#25351;&#20196;&#65292;&#24212;&#35813;&#25191;&#34892;&#30340;&#36234;&#22810;&#36234;&#22909;<BR>branches &#20998;&#25903;&#25968;&#27604;&#36739;&#22810;<BR>branch-misses &#19981;&#36807;&#20998;&#25903;&#39044;&#27979;&#36824;&#26159;&#27604;&#36739;&#20934;&#30340; </P></DIV>
<P>&#40664;&#35748;stat&#30340;&#21015;&#20986;&#39033;&#27604;&#36739;&#23569;&#65292;&#36824;&#21487;&#20197;&#26597;&#30475;&#20854;&#20182;&#27809;&#26377;&#21015;&#20986;&#26469;&#30340;event&#65292;&#36890;&#36807;perf list&#21487;&#20197;&#26597;&#30475;&#25152;&#26377;perf&#25903;&#25345;&#30340;event:</P>
<DIV class=monospaced>host-fcaa14023719/root@36:30 /sf/w&gt; perf list
<P></P>
<P>List of pre-defined events (to be used in -e):<BR>cpu-cycles OR cycles [Hardware event]<BR>instructions [Hardware event]<BR>cache-references [Hardware event]<BR>cache-misses [Hardware event]<BR>branch-instructions OR branches [Hardware event]<BR>branch-misses [Hardware event]<BR>bus-cycles [Hardware event]<BR>stalled-cycles-frontend OR idle-cycles-frontend [Hardware event]<BR>stalled-cycles-backend OR idle-cycles-backend [Hardware event]<BR>ref-cycles [Hardware event]</P>
<P>cpu-clock [Software event]<BR>task-clock [Software event]<BR>page-faults OR faults [Software event]<BR>context-switches OR cs [Software event]<BR>cpu-migrations OR migrations [Software event]<BR>minor-faults [Software event]<BR>major-faults [Software event]<BR>alignment-faults [Software event]<BR>emulation-faults [Software event]<BR>skb:kfree_skb [Tracepoint event]<BR>skb:consume_skb [Tracepoint event]<BR>skb:skb_copy_datagram_iovec [Tracepoint event]<BR>net:net_dev_xmit [Tracepoint event]<BR>net:net_dev_queue [Tracepoint event]<BR>net:netif_receive_skb [Tracepoint event]<BR>net:netif_rx [Tracepoint event]<BR>napi:napi_poll [Tracepoint event]<BR>sock:sock_rcvqueue_full [Tracepoint event]<BR>sock:sock_exceed_buf_limit [Tracepoint event]<BR>udp:udp_fail_queue_rcv_skb [Tracepoint event] </P></DIV>
<P>&#21487;&#20197;&#36890;&#36807;perf stat -e xxx &#26597;&#30475;&#25351;&#23450;&#30340;event<BR>&#20363;&#22914;&#65292;&#25105;&#20204;&#30340;&#26159;&#32593;&#32476;&#31243;&#24207;&#65292;&#25105;&#32479;&#35745;10&#31186;&#38047;&#20043;&#20869;&#65292;napi:napi_poll&#21644;&#25152;&#26377;net:&#24320;&#22836;&#30340;event&#21457;&#29983;&#30340;&#27425;&#25968;</P>
<DIV class=monospaced>host-fcaa14023719/root@23:43 /sf/w&gt; perf stat -e napi:napi_poll -e net:* -p `pidof dataplane.fw` sleep 10
<P></P>
<P>Performance counter stats for process id '21378':<BR>2,289 napi:napi_poll [100.00%]<BR>1,823 net:net_dev_xmit [100.00%]<BR>1,823 net:net_dev_queue [100.00%]<BR>2,299 net:netif_receive_skb [100.00%]<BR>2,299 net:netif_rx<BR>10.000498670 seconds time elapsed </P></DIV>
<H2>&#26597;&#30475;&#21160;&#24577;&#28040;&#32791;</H2>
<P>perf top&#21487;&#20197;&#26597;&#30475;&#21160;&#24577;&#28040;&#32791;&#65292;&#21487;&#20197;&#32467;&#21512;-e&#21482;&#26597;&#30475;&#26576;&#20123;event&#65292;&#20063;&#21487;&#20197;&#32467;&#21512;-p&#26597;&#30475;&#26576;&#19968;&#20855;&#20307;&#36827;&#31243;&#12290;<BR>&#20363;&#22914;&#65306;<BR>host-fcaa14023719/root@04:02 /sf/w&gt; perf top -e napi:napi_poll -e net:* -p `pidof dataplane.fw`<BR><A title="available samples" class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/available-samples.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/available-samples.png"></A></P>
<P>&#22914;&#26524;&#19981;&#25351;&#23450;-e&#65292;&#21487;&#20197;&#30475;&#20855;&#20307;&#20989;&#25968;&#32423;&#21035;&#30340;CPU&#28040;&#32791;&#65306;<BR>host-fcaa14023719/root@09:21 /sf/w&gt; perf top -p `pidof dataplane.fw`<BR><A title="perf top p" class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-top-p.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-top-p.png"></A></P>
<P>&#22914;&#26524;&#24819;&#35201;&#26597;&#30475;&#20869;&#26680;&#25351;&#20196;&#30340;&#28040;&#32791;&#65292;&#38656;&#35201;&#20351;&#29992;-k&#25351;&#23450;&#26410;&#21387;&#32553;&#30340;vmlinux&#36335;&#24452;&#65292;&#20363;&#22914;&#65306;<BR>&gt; perf top -k core/vmp-4.0.00_B-201411081718.vmlinux -C 1</P>
<H2>&#26597;&#30475;&#25351;&#20196;&#32423;&#21035;&#24615;&#33021;&#28040;&#32791;</H2>
<P>&#22312;perf top&#37324;&#25353;enter&#36827;&#20837;&#21344;&#29992;&#36739;&#39640;&#30340;&#20989;&#25968;&#65292;&#21487;&#20197;&#26597;&#30475;&#20855;&#20307;&#25351;&#20196;&#32423;&#21035;&#30340;CPU&#24615;&#33021;&#25439;&#32791;&#12290;<BR>&#20363;&#22914;nmd_e1000_clean_rx_irq&#20989;&#25968;&#65292;&#26174;&#31034;&#28040;&#32791;&#20026;&#65306;<BR><A title=nmd_e1000_clean_rx_irq class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/nmd_e1000_clean_rx_irq.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/nmd_e1000_clean_rx_irq.png"></A></P>
<P>&#36825;&#37324;&#30475;&#21040;&#30340;&#26159;&#27719;&#32534;&#25351;&#20196;&#65292;&#21487;&#20197;&#23558;&#20351;&#29992;-g&#32534;&#35793;&#30340;&#21487;&#25191;&#34892;&#25991;&#20214;objdump&#20986;&#26469;&#65288;&#22914;&#26524;&#20043;&#21069;&#27809;&#26377;-g&#32534;&#35793;&#65292;&#21487;&#20197;&#29992;&#21516;&#26679;&#28304;&#30721;&#37325;&#26032;&#32534;&#35793;&#20063;&#21487;&#20197;&#65307;&#22914;&#26524;&#28304;&#30721;&#20063;&#20462;&#25913;&#20102;&#65292;&#37027;&#21482;&#33021;objdump&#20986;&#27809;&#26377;&#20195;&#30721;&#23545;&#29031;&#30340;&#29256;&#26412;&#65289;&#65292;&#20351;&#29992; objdump -Sl dataplane &gt; dataplane.asm &#26469;&#24471;&#21040;&#27719;&#32534;&#25991;&#20214;&#12290;<BR>&#22312;&#27719;&#32534;&#23450;&#20301;&#21040;&#36825;&#26465;&#25351;&#20196;&#65288;&#19979;&#38754;&#36825;&#20010;&#24182;&#38750;&#21407;&#22987;&#20195;&#30721;&#23545;&#29031;&#65292;&#25152;&#20197;&#21644;perf top&#20986;&#26469;&#30340;&#32454;&#24494;&#24046;&#21035;&#65289;&#65306;<BR><A title=code-asm class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/code-asm.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/code-asm.png"></A><BR>&#28982;&#21518;&#20998;&#26512;&#20195;&#30721;&#65306;</P>
<P>while (staterr &amp; E1000_RXD_STAT_DD) {<BR>if (*work_done &gt;= work_to_do)<BR>break;<BR>(*work_done)++;<BR>rmb(); /* read descriptor and rx_buffer_info after status DD */</P>
<P>&#36825;&#37324;&#24212;&#35813;&#26159;while&#37324;work_done&#25351;&#38024;&#35775;&#38382;&#23548;&#33268;cache miss&#65292;&#20462;&#25913;&#65292;&#23558;&#20854;&#20462;&#25913;&#20026;&#35775;&#38382;&#26632;&#21464;&#37327;&#65292;&#26368;&#21518;&#20877;&#36171;&#20540;&#65288;&#24403;&#28982;&#65292;PERF&#23450;&#20301;&#24182;&#19981;&#19968;&#23450;&#20934;&#30830;&#65292;&#20063;&#26377;&#21487;&#33021;&#26159;rmb&#30340;lfence&#23548;&#33268;CPU&#32791;&#26102;&#22686;&#21152;&#65289;&#12290;<BR>while (staterr &amp; E1000_RXD_STAT_DD) {<BR>if (work_done &gt;= work_to_do)<BR>break;<BR>++work_done;<BR>rmb(); /* read descriptor and rx_buffer_info after status DD */</P>
<P>&#20462;&#25913;&#21518;&#20877;&#27979;&#35797;&#65292;&#30475;&#26032;&#33021;&#29942;&#39048;&#26159;&#21542;&#21435;&#38500;&#20102;&#12290;</P>
<H2>&#24615;&#33021;&#32479;&#35745;</H2>
<P>stat&#21487;&#20197;&#32479;&#35745;&#20449;&#24687;&#65292;&#22914;&#26524;&#24819;&#35201;&#23558;&#32479;&#35745;&#20449;&#24687;&#35760;&#24405;&#19979;&#26469;&#65292;&#20351;&#29992;record&#21363;&#21487;&#65292;&#20363;&#22914;&#65306;</P>
<DIV class=monospaced>host-001e67a1aaf9/root@35:28 /sf/w&gt; perf record -p `pidof dataplane.fw` sleep 20<BR>[ perf record: Woken up 19 times to write data ]<BR>[ perf record: Captured and wrote 4.895 MB perf.data (~213845 samples) ] </DIV>
<P>&#25968;&#25454;&#35760;&#24405;&#21040;&#20102;perf.data&#25991;&#20214;&#65292;&#21518;&#32493;&#20320;&#21487;&#20197;&#20351;&#29992;perf report&#26597;&#30475;perf.data<BR>host-001e67a1aaf9/root@37:22 /sf/w&gt; perf report<BR><A title=perf-report class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-report.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-report.png"></A></P>
<P>&#22914;&#26524;&#24819;&#30475;&#35843;&#29992;&#20851;&#31995;&#22270;&#65292;&#21487;&#20197;&#22312;record&#30340;&#26102;&#20505;&#65292;&#28155;&#21152;-g&#21442;&#25968;&#65306;<BR>host-001e67a1aaf9/root@41:41 /sf/w&gt; perf record -g -p `pidof dataplane.fw` sleep 20<BR>&#22312;report&#30340;&#26102;&#20505;&#65292;&#28155;&#21152;--stdio&#65306;<BR><A title=stdio class=fancybox href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/stdio.png" rel=fancybox><IMG class=size-full src="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/stdio.png"></A><BR>&#20351;&#29992;-G&#21487;&#20197;&#23558;&#35843;&#29992;&#20851;&#31995;&#20498;&#36716;&#12290;</P>
<H2>&#29305;&#23450;&#21151;&#33021;</H2>
<P>perf&#37324;&#38754;&#26377;&#19968;&#20123;&#29305;&#23450;&#21151;&#33021;&#65292;&#20363;&#22914;&#65292;&#38024;&#23545;KVM&#30340;&#12290;</P>
<P>KVM&#32479;&#35745;&#21516;&#26102;&#25351;&#20986;&#36890;&#29992;&#21151;&#33021;&#65292;&#20363;&#22914;&#65306;</P>
<DIV class=monospaced>Sangfor:VMP/host-000c29de4c3f /sf # perf stat -e "kvm:*" -a sleep 20s
<P></P>
<P>Performance counter stats for 'sleep 20s':</P>
<P>141,212 kvm:kvm_entry [100.00%]<BR>54,106 kvm:kvm_pio [100.00%]<BR>53 kvm:kvm_cpuid [100.00%]<BR>10,337 kvm:kvm_apic [100.00%]<BR>141,351 kvm:kvm_exit [100.00%]<BR>10,453 kvm:kvm_inj_virq [100.00%]<BR>23,168 kvm:kvm_page_fault [100.00%]<BR>19,445 kvm:kvm_pic_set_irq [100.00%]<BR>1,090 kvm:kvm_apic_ipi [100.00%]<BR>7,173 kvm:kvm_apic_accept_irq [100.00%]<BR>7,079 kvm:kvm_eoi [100.00%]<BR>12,257 kvm:kvm_emulate_insn [100.00%]<BR>1,901 kvm:vcpu_match_mmio [100.00%]<BR>4,641 kvm:kvm_userspace_exit [100.00%]<BR>19,515 kvm:kvm_set_irq [100.00%]<BR>19,524 kvm:kvm_ioapic_set_irq [100.00%]<BR>6,099 kvm:kvm_ack_irq [100.00%]<BR>13,520 kvm:kvm_mmio [100.00%]<BR>6,992 kvm:kvm_fpu [100.00%]</P>
<P>20.001550218 seconds time elapsed </P></DIV>
<P>&#20294;&#26377;&#20123;&#21333;&#29420;&#21629;&#20196;&#65292;&#20363;&#22914;&#32479;&#35745;&#65306;</P>
<DIV class=monospaced>host-fcaa14023719/root@32:09 /sf/w&gt; perf kvm stat record -p `pidof kvm` sleep 20<BR>[ perf record: Woken up 292 times to write data ]<BR>[ perf record: Captured and wrote 721.554 MB perf.data.guest (~31525169 samples) ]<BR>Warning:<BR>Processed 9126450 events and lost 29 chunks!
<P></P>
<P>Check IO/CPU overload!</P>
<P>Sangfor:VMP/host-000c29de4c3f /sf # perf kvm stat report ?</P>
<P>usage: perf kvm stat report [<BR>]</OPTIONS></P>
<P>--event <REPORT event=""><BR>event for reporting: vmexit(&#40664;&#35748;), mmio, ioport //&#21487;&#20197;&#26597;&#30475;&#36825;&#19977;&#31181;<BR>--vcpu <N>vcpu id to report<BR>-k, --key <SORT-KEY>key for sorting: sample(sort by samples number) time (sort by avg time) </SORT-KEY></N></REPORT></P></DIV>
<P>&#20363;&#22914;&#26597;&#30475;&#25152;&#26377;vmexit&#20998;&#24067;&#65306;</P>
<DIV class=monospaced>host-fcaa14023719/root@37:25 /sf/w&gt; perf kvm stat report --event=vmexit<BR>Analyze events for all VCPUs:
<P></P>
<P>VM-EXIT Samples Samples% Time% Avg time<BR>CR_ACCESS 3507291 90.17% 85.20% 1.43us ( +- 26.74% )<BR>IO_INSTRUCTION 379470 9.76% 14.71% 2.28us ( +- 0.78% )<BR>EXTERNAL_INTERRUPT 1566 0.04% 0.05% 2.05us ( +- 1.27% )<BR>EPT_VIOLATION 1091 0.03% 0.04% 2.02us ( +- 2.31% )<BR>PENDING_INTERRUPT 117 0.00% 0.00% 1.58us ( +- 1.81% )<BR>CPUID 10 0.00% 0.00% 0.81us ( +- 11.51% )<BR>EXCEPTION_NMI 1 0.00% 0.00% 5.02us ( +- -nan% )<BR>MSR_READ 1 0.00% 0.00% 1.42us ( +- -nan% )</P>
<P>Total Samples:3889547, Total events handled time:5881732.52us. </P></DIV>
<P>&#21487;&#20197;&#30475;&#20986;&#65292;CR_ACCESS&#21644;IO&#25351;&#20196;&#36864;&#20986;&#36739;&#22810;&#12290;</P>
<P>&#20877;&#35814;&#32454;&#26597;&#30475;PIO&#36864;&#20986;&#20998;&#24067;&#65306;</P>
<DIV class=monospaced>host-fcaa14023719/root@34:39 /sf/w&gt; perf kvm stat report --event=ioport<BR>Analyze events for all VCPUs:
<P></P>
<P>IO Port Access Samples Samples% Time% Avg time </P>
<P>0xb008:PIN 183932 48.87% 17.39% 0.63us ( +- 0.02% )<BR>0x177:PIN 183587 48.78% 60.22% 2.17us ( +- 0.26% )<BR>0x376:PIN 3112 0.83% 1.13% 2.42us ( +- 1.24% )<BR>0x170:PIN 3109 0.83% 18.93% 40.33us ( +- 0.12% )<BR>0x170:POUT 768 0.20% 0.22% 1.86us ( +- 3.05% )<BR>0x376:POUT 347 0.09% 0.10% 1.92us ( +- 1.31% )<BR>0x171:POUT 173 0.05% 0.04% 1.46us ( +- 0.41% )</P>
<P>Total Samples:376358, Total events handled time:662365.35us. </P></DIV>
<P>&#21487;&#20197;&#21457;&#29616;0xb008(ACPI timer),0x177(&#30913;&#30424;&#35835;&#20889;)&#36864;&#20986;&#27604;&#36739;&#22810;&#12290;</P>
<P><A href="http://mnstory.net/wp-content/uploads/2014/12/perf-performance-analysis/perf-performance-analysis.pdf" target=_bank>PDF&#19979;&#36733;</A></P></DIV>