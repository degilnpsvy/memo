<H3 id=-100000 class=docSection1Title>Looking at the Sources</H3>
<P class=docText><A name="The frame"></A>The frame buffer core layer and low-level frame buffer drivers reside in the <SPAN class=docEmphasis>drivers/video/</SPAN><A name="buffer structures"></A> directory. Generic frame buffer structures are defined in <SPAN class=docEmphasis>include/linux/fb.h</SPAN><A name="headers stay"></A>, whereas chipset-specific headers stay inside <SPAN class=docEmphasis>include/video/.</SPAN> The fbmem driver, <SPAN class=docEmphasis>drivers/video/fbmem.c</SPAN>, creates the <SPAN class=docEmphasis>/dev/fbX</SPAN><A name="frame buffer"></A> character devices and is the front end for handling frame buffer ioctl commands issued by user applications.</P>
<P class=docText>The intelfb driver, <SPAN class=docEmphasis>drivers/video/intelfb/*</SPAN><A name="for several"></A>, is the low-level frame buffer driver for several Intel graphics controllers such as the one integrated with the 855 GME North Bridge. The radeonfb driver, <SPAN class=docEmphasis>drivers/video/aty/*</SPAN><A name="graphics hardware"></A>, is the frame buffer driver for Radeon Mobility AGP graphics hardware from ATI technologies. The source files, <SPAN class=docEmphasis>drivers/video/*fb.c</SPAN><A name="including those"></A>, are all frame buffer drivers for graphics controllers, including those integrated into several SoCs. You can use <SPAN class=docEmphasis>drivers/video/skeletonfb.c</SPAN><A name="frame buffer"></A> as the starting point if you are writing a custom low-level frame buffer driver. Look at <SPAN class=docEmphasis>Documentation/fb/*</SPAN><A name="on the"></A> for more documentation on the frame buffer layer.</P>
<P class=docText><A name="page of"></A>The home page of the Linux frame buffer project is <A class=docLink href="http://www.linux-fbdev.org/" target=_blank>www.linux-fbdev.org</A><A name="This website"></A>. This website contains HOWTOs, links to frame buffer drivers and utilities, and pointers to related web pages.</P>
<P class=docText><A name="frame buffer"></A>Console drivers, both frame buffer-based and otherwise, live inside <SPAN class=docEmphasis>drivers/video/console/.</SPAN><A name="find out"></A> To find out how <TT>printk()</TT><A name="console drivers"></A> logs kernel messages to an internal buffer and calls console drivers, look at <SPAN class=docEmphasis>kernel/printk.c</SPAN>.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch12lev1sec8.html#ch12tab02">Table 12.2</A><A name="used in"></A> contains the main data structures used in this chapter and their location in the source tree. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch12lev1sec8.html#ch12tab03">Table 12.3</A><A name="in this"></A> lists the main kernel programming interfaces that you used in this chapter with the location of their definitions.</P>
<P class=docText></P><A name=ch12tab02></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 12.2. Summary of Data Structures</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=150>
<COL width=150>
<COL width=250></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Data Structure</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_info</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/fb.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Central data structure used by low-level frame buffer drivers</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_ops</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/fb.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="by low"></A>Contains addresses of all entry points provided by low-level frame buffer drivers</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_var_screeninfo</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/fb.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name=and></A>Contains variable information pertaining to video hardware such as the X-resolution, Y-resolution, and <TT>HYSNC/VSYNC</TT> durations</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_fix_screeninfo</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/fb.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="video hardware"></A>Fixed information about video hardware such as the start address of the frame buffer</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_cmap</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/fb.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="color map"></A>The RGB color map for a frame buffer device</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>console</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/console.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="Representation of"></A>Representation of a top-level console driver</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>consw</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/console.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="a bottom"></A>Representation of a bottom-level console driver</TD></TR></TBODY></TABLE></P><BR><A name=ch12tab03></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle><A name="Summary of"></A>Table 12.3. Summary of Kernel Programming Interfaces</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=175>
<COL width=150>
<COL width=225></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Kernel Interface</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>register_framebuffer()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/video/fbmem.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers a low-level frame buffer device.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>unregister_framebuffer()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/video/fbmem.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Releases a low-level frame buffer device.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>framebuffer_alloc()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/video/fbsysfs.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates memory for an <TT>fb_info</TT> structure.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>framebuffer_release()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/video/fbsysfs.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Reverse of <TT>framebuffer_alloc()</TT>.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_alloc_cmap()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/video/fbcmap.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates color map.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_dealloc_cmap()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/video/fbcmap.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Frees color map.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>dma_alloc_coherent()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates and maps a coherent DMA buffer. See <TT>pci_alloc_consistent()</TT> in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10.html#ch10">Chapter 10</A>.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>dma_free_coherent()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Frees a coherent DMA buffer. See <TT>pci_free_consistent()</TT> in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10.html#ch10">Chapter 10</A>.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>register_console()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>kernel/printk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers a top-level console driver.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>unregister_console()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>kernel/printk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Unregisters a top-level console driver.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>register_con_driver() take_over_console()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/char/vt.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers/binds a bottom-level console driver.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>unregister_con_driver() give_up_console()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/char/vt.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Unregisters/unbinds a bottom-level console driver.</TD></TR></TBODY></TABLE>