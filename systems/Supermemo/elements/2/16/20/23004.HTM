<H3 id=-100000 class=docSection1Title>Before Starting</H3>
<P class=docText><A name="Linux has"></A>Linux has trekked many a terrain and is now state of the art, so you can use it as a vehicle to understand operating system concepts, processor architectures, and even industry domains. When you learn a technique used by a device driver subsystem, look one level deeper and probe the underlying reasons behind that design choice.</P>
<P class=docText><A name="explicitly stated"></A>Wherever not explicitly stated, the text assumes the 32-bit x86 architecture. The book is, however, mindful of the fact that you are more likely to write device drivers for embedded devices than for conventional PC-compatible systems. The chapter on serial drivers, for example, examines two devices: a touch controller on a PC derivative and a UART on a cell phone. Or the chapter on I<SUP>2</SUP><A name="device drivers"></A>C device drivers looks at an EEPROM on a PC system and a Real Time Clock on an embedded device. The book also teaches you about the core infrastructure that the kernel provides for most driver classes, which hides architecture dependencies from device drivers.</P>
<P class=docText><A name="of the"></A>Device driver debugging techniques are discussed near the end of the book in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch21.html#ch21">Chapter 21</A><A name="worthwhile to"></A>, so you might find it worthwhile to forward to that chapter as you develop drivers while reading the book.</P>
<P class=docText><A name="changes across"></A>This book is based on the 2.6 kernel, which has substantial changes across the board from 2.4, touching all major subsystems. Hopefully, you have installed a 2.6-based Linux on your system by now and started experimenting with the kernel sources. Each chapter takes the liberty of profusely pointing you to relevant kernel source files for two main reasons:</P>
<DIV style="FONT-WEIGHT: bold">
<OL class=docList type=1>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList><A name="kernel is"></A>Because each driver subsystem in the kernel is tens of thousands of lines long, it's only possible to take a relatively simplistic view in a book. Looking at real drivers in the sources along with the example code in this book will give you the bigger picture.</P></DIV>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList><A name="in on"></A>Before developing a driver, it's a good idea to zero in on an existing driver in the <SPAN class=docEmphasis>drivers/</SPAN><A name="that is"></A> directory that is similar to your requirement and make that your starting point.</P></DIV></LI></OL></DIV>
<P class=docText><A name="kernel by"></A>So, to derive maximum benefit from this book, familiarize yourself with the kernel by frequently browsing the source tree and staring hard at the code. And in tandem with your code explorations, follow the goings-on in the kernel mailing list.