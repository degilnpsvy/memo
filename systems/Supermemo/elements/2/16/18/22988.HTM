Guidelines for console driver writers:<BR>===================================== 
<P></P>
<P>In order for binding to and unbinding from the console to properly work,<BR>console drivers must follow these guidelines:</P>
<P>1. All drivers, except system drivers, must call either register_con_driver()<BR>&nbsp;&nbsp; or take_over_console(). register_con_driver() will just add the driver to<BR>&nbsp;&nbsp; the console's internal list. It won't take over the<BR>&nbsp;&nbsp; console. take_over_console(), as it name implies, will also take over (or<BR>&nbsp;&nbsp; bind to) the console.</P>
<P>2. All resources allocated during con-&gt;con_init() must be released in<BR>&nbsp;&nbsp; con-&gt;con_deinit().</P>
<P>3. All resources allocated in con-&gt;con_startup() must be released when the<BR>&nbsp;&nbsp; driver, which was previously bound, becomes unbound.&nbsp; The console layer<BR>&nbsp;&nbsp; does not have a complementary call to con-&gt;con_startup() so it's up to the<BR>&nbsp;&nbsp; driver to check when it's legal to release these resources. Calling<BR>&nbsp;&nbsp; con_is_bound() in con-&gt;con_deinit() will help.&nbsp; If the call returned<BR>&nbsp;&nbsp; false(), then it's safe to release the resources.&nbsp; This balance has to be<BR>&nbsp;&nbsp; ensured because con-&gt;con_startup() can be called again when a request to<BR>&nbsp;&nbsp; rebind the driver to the console arrives.</P>
<P>4. Upon exit of the driver, ensure that the driver is totally unbound. If the<BR>&nbsp;&nbsp; condition is satisfied, then the driver must call unregister_con_driver()<BR>&nbsp;&nbsp; or give_up_console().</P>
<P>5. unregister_con_driver() can also be called on conditions which make it<BR>&nbsp;&nbsp; impossible for the driver to service console requests.&nbsp; This can happen<BR>&nbsp;&nbsp; with the framebuffer console that suddenly lost all of its drivers.</P>
<P>The current crop of console drivers should still work correctly, but binding<BR>and unbinding them may cause problems. With minimal fixes, these drivers can<BR>be made to work correctly.