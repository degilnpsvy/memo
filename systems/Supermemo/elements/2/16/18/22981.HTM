# Documentation/stable_kernel_rules.txt 
<P></P>
<P>Everything you ever wanted to know about Linux -stable releases.</P>
<P></P>
<P>Rules on what kind of patches are accepted, and which ones are not, into the<BR>"-stable" tree:</P>
<P>&nbsp;- It must be obviously correct and tested.<BR>&nbsp;- It cannot be bigger than 100 lines, with context.<BR>&nbsp;- It must fix only one thing.<BR>&nbsp;- It must fix a real bug that bothers people (not a, "This could be a<BR>&nbsp;&nbsp; problem..." type thing).<BR>&nbsp;- It must fix a problem that causes a build error (but not for things<BR>&nbsp;&nbsp; marked CONFIG_BROKEN), an oops, a hang, data corruption, a real<BR>&nbsp;&nbsp; security issue, or some "oh, that's not good" issue.&nbsp; In short, something<BR>&nbsp;&nbsp; critical.<BR>&nbsp;- Serious issues as reported by a user of a distribution kernel may also<BR>&nbsp;&nbsp; be considered if they fix a notable performance or interactivity issue.<BR>&nbsp;&nbsp; As these fixes are not as obvious and have a higher risk of a subtle<BR>&nbsp;&nbsp; regression they should only be submitted by a distribution kernel<BR>&nbsp;&nbsp; maintainer and include an addendum linking to a bugzilla entry if it<BR>&nbsp;&nbsp; exists and additional information on the user-visible impact.<BR>&nbsp;- New device IDs and quirks are also accepted.<BR>&nbsp;- No "theoretical race condition" issues, unless an explanation of how the<BR>&nbsp;&nbsp; race can be exploited is also provided.<BR>&nbsp;- It cannot contain any "trivial" fixes in it (spelling changes,<BR>&nbsp;&nbsp; whitespace cleanups, etc).<BR>&nbsp;- It must follow the Documentation/SubmittingPatches rules.<BR>&nbsp;- It or an equivalent fix must already exist in Linus' tree (upstream).</P>
<P><BR>Procedure for submitting patches to the -stable tree:</P>
<P>&nbsp;- If the patch covers files in net/ or drivers/net please follow netdev stable<BR>&nbsp;&nbsp; submission guidelines as described in<BR>&nbsp;&nbsp; Documentation/networking/netdev-FAQ.txt<BR>&nbsp;- Send the patch, after verifying that it follows the above rules, to<BR>&nbsp;&nbsp; <A href="mailto:stable@vger.kernel.org">stable@vger.kernel.org</A>.&nbsp; You must note the upstream commit ID in the<BR>&nbsp;&nbsp; changelog of your submission, as well as the kernel version you wish<BR>&nbsp;&nbsp; it to be applied to.<BR>&nbsp;- To have the patch automatically included in the stable tree, add the tag<BR>&nbsp;&nbsp;&nbsp;&nbsp; Cc: <A href="mailto:stable@vger.kernel.org">stable@vger.kernel.org</A><BR>&nbsp;&nbsp; in the sign-off area. Once the patch is merged it will be applied to<BR>&nbsp;&nbsp; the stable tree without anything else needing to be done by the author<BR>&nbsp;&nbsp; or subsystem maintainer.<BR>&nbsp;- If the patch requires other patches as prerequisites which can be<BR>&nbsp;&nbsp; cherry-picked than this can be specified in the following format in<BR>&nbsp;&nbsp; the sign-off area:</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp; Cc: &lt;<A href="mailto:stable@vger.kernel.org">stable@vger.kernel.org</A>&gt; # 3.3.x: a1f84a3: sched: Check for idle<BR>&nbsp;&nbsp;&nbsp;&nbsp; Cc: &lt;<A href="mailto:stable@vger.kernel.org">stable@vger.kernel.org</A>&gt; # 3.3.x: 1b9508f: sched: Rate-limit newidle<BR>&nbsp;&nbsp;&nbsp;&nbsp; Cc: &lt;<A href="mailto:stable@vger.kernel.org">stable@vger.kernel.org</A>&gt; # 3.3.x: fd21073: sched: Fix affinity logic<BR>&nbsp;&nbsp;&nbsp;&nbsp; Cc: &lt;<A href="mailto:stable@vger.kernel.org">stable@vger.kernel.org</A>&gt; # 3.3.x<BR>&nbsp;&nbsp;&nbsp; Signed-off-by: Ingo Molnar &lt;<A href="mailto:mingo@elte.hu">mingo@elte.hu</A>&gt;</P>
<P>&nbsp;&nbsp; The tag sequence has the meaning of:<BR>&nbsp;&nbsp;&nbsp;&nbsp; git cherry-pick a1f84a3<BR>&nbsp;&nbsp;&nbsp;&nbsp; git cherry-pick 1b9508f<BR>&nbsp;&nbsp;&nbsp;&nbsp; git cherry-pick fd21073<BR>&nbsp;&nbsp;&nbsp;&nbsp; git cherry-pick &lt;this commit&gt;</P>
<P>&nbsp;- The sender will receive an ACK when the patch has been accepted into the<BR>&nbsp;&nbsp; queue, or a NAK if the patch is rejected.&nbsp; This response might take a few<BR>&nbsp;&nbsp; days, according to the developer's schedules.<BR>&nbsp;- If accepted, the patch will be added to the -stable queue, for review by<BR>&nbsp;&nbsp; other developers and by the relevant subsystem maintainer.<BR>&nbsp;- Security patches should not be sent to this alias, but instead to the<BR>&nbsp;&nbsp; documented <A href="mailto:security@kernel.org">security@kernel.org</A> address.</P>
<P><BR>Review cycle:</P>
<P>&nbsp;- When the -stable maintainers decide for a review cycle, the patches will be<BR>&nbsp;&nbsp; sent to the review committee, and the maintainer of the affected area of<BR>&nbsp;&nbsp; the patch (unless the submitter is the maintainer of the area) and CC: to<BR>&nbsp;&nbsp; the linux-kernel mailing list.<BR>&nbsp;- The review committee has 48 hours in which to ACK or NAK the patch.<BR>&nbsp;- If the patch is rejected by a member of the committee, or linux-kernel<BR>&nbsp;&nbsp; members object to the patch, bringing up issues that the maintainers and<BR>&nbsp;&nbsp; members did not realize, the patch will be dropped from the queue.<BR>&nbsp;- At the end of the review cycle, the ACKed patches will be added to the<BR>&nbsp;&nbsp; latest -stable release, and a new -stable release will happen.<BR>&nbsp;- Security patches will be accepted into the -stable tree directly from the<BR>&nbsp;&nbsp; security kernel team, and not go through the normal review cycle.<BR>&nbsp;&nbsp; Contact the kernel security team for more details on this procedure.</P>
<P>Trees:</P>
<P>&nbsp;- The queues of patches, for both completed versions and in progress<BR>&nbsp;&nbsp; versions can be found at:<BR>&nbsp;<A href="http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git">http://git.kernel.org/?p=linux/kernel/git/stable/stable-queue.git</A><BR>&nbsp;- The finalized and tagged releases of all stable kernels can be found<BR>&nbsp;&nbsp; in separate branches per version at:<BR>&nbsp;<A href="http://git.kernel.org/?p=linux/kernel/git/stable/linux-stable.git">http://git.kernel.org/?p=linux/kernel/git/stable/linux-stable.git</A></P>
<P><BR>Review committee:</P>
<P>&nbsp;- This is made up of a number of kernel developers who have volunteered for<BR>&nbsp;&nbsp; this task, and a few that haven't.