# Documentation/virtual/kvm/devices/arm-vgic.txt
<P></P>
<P>ARM Virtual Generic Interrupt Controller (VGIC)<BR>===============================================</P>
<P></P>
<P>Device types supported:<BR>&nbsp; KVM_DEV_TYPE_ARM_VGIC_V2&nbsp;&nbsp;&nbsp;&nbsp; ARM Generic Interrupt Controller v2.0</P>
<P>Only one VGIC instance may be instantiated through either this API or the<BR>legacy KVM_CREATE_IRQCHIP api.&nbsp; The created VGIC will act as the VM interrupt<BR>controller, requiring emulated user-space devices to inject interrupts to the<BR>VGIC instead of directly to CPUs.</P>
<P>Groups:<BR>&nbsp; KVM_DEV_ARM_VGIC_GRP_ADDR<BR>&nbsp; Attributes:<BR>&nbsp;&nbsp;&nbsp; KVM_VGIC_V2_ADDR_TYPE_DIST (rw, 64-bit)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Base address in the guest physical address space of the GIC distributor<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; register mappings.</P>
<P>&nbsp;&nbsp;&nbsp; KVM_VGIC_V2_ADDR_TYPE_CPU (rw, 64-bit)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Base address in the guest physical address space of the GIC virtual cpu<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; interface register mappings.</P>
<P>&nbsp; KVM_DEV_ARM_VGIC_GRP_DIST_REGS<BR>&nbsp; Attributes:<BR>&nbsp;&nbsp;&nbsp; The attr field of kvm_device_attr encodes two values:<BR>&nbsp;&nbsp;&nbsp; bits:&nbsp;&nbsp;&nbsp;&nbsp; | 63&nbsp;&nbsp; ....&nbsp; 40 | 39 ..&nbsp; 32&nbsp; |&nbsp; 31&nbsp;&nbsp; ....&nbsp;&nbsp;&nbsp; 0 |<BR>&nbsp;&nbsp;&nbsp; values:&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp; reserved&nbsp;&nbsp; |&nbsp;&nbsp; cpu id&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; offset&nbsp;&nbsp;&nbsp;&nbsp; |</P>
<P>&nbsp;&nbsp;&nbsp; All distributor regs are (rw, 32-bit)</P>
<P>&nbsp;&nbsp;&nbsp; The offset is relative to the "Distributor base address" as defined in the<BR>&nbsp;&nbsp;&nbsp; GICv2 specs.&nbsp; Getting or setting such a register has the same effect as<BR>&nbsp;&nbsp;&nbsp; reading or writing the register on the actual hardware from the cpu<BR>&nbsp;&nbsp;&nbsp; specified with cpu id field.&nbsp; Note that most distributor fields are not<BR>&nbsp;&nbsp;&nbsp; banked, but return the same value regardless of the cpu id used to access<BR>&nbsp;&nbsp;&nbsp; the register.<BR>&nbsp; Limitations:<BR>&nbsp;&nbsp;&nbsp; - Priorities are not implemented, and registers are RAZ/WI<BR>&nbsp; Errors:<BR>&nbsp;&nbsp;&nbsp; -ENODEV: Getting or setting this register is not yet supported<BR>&nbsp;&nbsp;&nbsp; -EBUSY: One or more VCPUs are running</P>
<P>&nbsp; KVM_DEV_ARM_VGIC_GRP_CPU_REGS<BR>&nbsp; Attributes:<BR>&nbsp;&nbsp;&nbsp; The attr field of kvm_device_attr encodes two values:<BR>&nbsp;&nbsp;&nbsp; bits:&nbsp;&nbsp;&nbsp;&nbsp; | 63&nbsp;&nbsp; ....&nbsp; 40 | 39 ..&nbsp; 32&nbsp; |&nbsp; 31&nbsp;&nbsp; ....&nbsp;&nbsp;&nbsp; 0 |<BR>&nbsp;&nbsp;&nbsp; values:&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp; reserved&nbsp;&nbsp; |&nbsp;&nbsp; cpu id&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; offset&nbsp;&nbsp;&nbsp;&nbsp; |</P>
<P>&nbsp;&nbsp;&nbsp; All CPU interface regs are (rw, 32-bit)</P>
<P>&nbsp;&nbsp;&nbsp; The offset specifies the offset from the "CPU interface base address" as<BR>&nbsp;&nbsp;&nbsp; defined in the GICv2 specs.&nbsp; Getting or setting such a register has the<BR>&nbsp;&nbsp;&nbsp; same effect as reading or writing the register on the actual hardware.</P>
<P>&nbsp;&nbsp;&nbsp; The Active Priorities Registers APRn are implementation defined, so we set a<BR>&nbsp;&nbsp;&nbsp; fixed format for our implementation that fits with the model of a "GICv2<BR>&nbsp;&nbsp;&nbsp; implementation without the security extensions" which we present to the<BR>&nbsp;&nbsp;&nbsp; guest.&nbsp; This interface always exposes four register APR[0-3] describing the<BR>&nbsp;&nbsp;&nbsp; maximum possible 128 preemption levels.&nbsp; The semantics of the register<BR>&nbsp;&nbsp;&nbsp; indicate if any interrupts in a given preemption level are in the active<BR>&nbsp;&nbsp;&nbsp; state by setting the corresponding bit.</P>
<P>&nbsp;&nbsp;&nbsp; Thus, preemption level X has one or more active interrupts if and only if:</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; APRn[X mod 32] == 0b1,&nbsp; where n = X / 32</P>
<P>&nbsp;&nbsp;&nbsp; Bits for undefined preemption levels are RAZ/WI.</P>
<P>&nbsp; Limitations:<BR>&nbsp;&nbsp;&nbsp; - Priorities are not implemented, and registers are RAZ/WI<BR>&nbsp; Errors:<BR>&nbsp;&nbsp;&nbsp; -ENODEV: Getting or setting this register is not yet supported<BR>&nbsp;&nbsp;&nbsp; -EBUSY: One or more VCPUs are running</P>
<P>&nbsp; KVM_DEV_ARM_VGIC_GRP_NR_IRQS<BR>&nbsp; Attributes:<BR>&nbsp;&nbsp;&nbsp; A value describing the number of interrupts (SGI, PPI and SPI) for<BR>&nbsp;&nbsp;&nbsp; this GIC instance, ranging from 64 to 1024, in increments of 32.</P>
<P>&nbsp; Errors:<BR>&nbsp;&nbsp;&nbsp; -EINVAL: Value set is out of the expected range<BR>&nbsp;&nbsp;&nbsp; -EBUSY: Value has already be set, or GIC has already been initialized<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; with default values.