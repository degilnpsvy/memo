The volatile storage class was originally meant for memory-mapped I/O<BR>registers.&nbsp; Within the kernel, register accesses, too, should be protected<BR>by locks, but one also does not want the compiler "optimizing" register<BR>accesses within a critical section.&nbsp; But, within the kernel, <FONT class=clozed>I/O memory<BR>accesses are always done through accessor functions; accessing I/O memory<BR>directly through pointers is frowned upon and does not work on all<BR>architectures.&nbsp; Those accessors are written to prevent unwanted<BR>optimization</FONT>, so, once again, volatile is unnecessary.