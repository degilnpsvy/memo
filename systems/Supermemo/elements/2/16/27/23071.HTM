<H3 id=-100000 class=docSection1Title>The PCI Family</H3>
<P class=docText><A name="is a"></A>PCI is a high-speed bus used for communication between the CPU and I/O devices. The PCI specification enables transfer of 32 bits of data in parallel at 33MHz or 66MHz, yielding a peak throughput of 266MBps.</P>
<P class=docText><A name="form factor"></A>CardBus is a derivative of PCI and has the form factor of a PC Card. CardBus cards are also 32-bits wide and run at 33MHz. Even though CardBus and PCMCIA cards use the same 68-pin connectors, CardBus devices support 32 data lines compared to 16 for PCMCIA by multiplexing address and data lines as done in the PCI bus.</P>
<P class=docText><A name="adaptation of"></A>Mini PCI, also a 33MHz 32-bit bus, is another adaptation of PCI found in small-footprint computers such as laptops. A PCI card can talk via a Mini PCI slot using a compatible connector.</P>
<P class=docText><A name="bus width"></A>An extension to PCI called PCI Extended (or PCI-X) expands the bus width to 64 bits, frequency to 133MHz, and the throughput to about 1GBps. PCI-X 2.0 is the current version of the standard.</P>
<P class=docText><A name="of the"></A>PCI Express (PCIe or PCI-E) is the present generation of the PCI family. Unlike the parallel PCI bus, PCIe uses a serial protocol to transfer data. PCIe supports a maximum of 32 serial <SPAN class=docEmphasis>links.</SPAN><A name="a throughput"></A> Each PCIe link (in the commonly used version 1.1 of the specification) yields a throughput of 250MBps in each transfer direction, thus producing a maximum PCIe data rate of 8GBps in each direction. PCIe 2.0 is the current version of the standard and supports higher data rates.</P>
<P class=docText><A name=iddle2035></A><A name=iddle3433></A><A name=iddle3436></A><A name=iddle3442></A><A name=iddle3940></A><A name="faster and"></A>Serial communication is faster and cheaper than parallel data transfer due to the absence of factors such as signal interference, so the industry trend is to move from parallel buses to serial technologies. PCIe and its adaptations aim to replace PCI and its derivatives, and this shift is also part of the methodology change from parallel to serial communication. Several I/O interfaces discussed in this book, such as RS-232, USB, FireWire, SATA, Ethernet, Fibre Channel, and InfiniBand, are serial communication architectures.</P>
<P class=docText><A name="equivalent in"></A>The CardBus equivalent in the PCIe family is the Express Card. Express Cards directly connect to the system bus via a PCIe link or USB 2.0 (discussed in the next chapter), and circumvent middlemen such as CardBus controllers. Mini PCI's cousin in the PCIe family is PCI Express Mini Card.</P>
<P class=docText><A name="Recent laptops"></A>Recent laptops support Express Card slots instead of (or in addition to) CardBus, and PCI Express Mini Card slots in place of Mini PCI. The former two have smaller footprints and higher speeds compared to the latter two.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10.html#ch10tab01">Table 10.1</A><A name="important relatives"></A> summarizes the important relatives of PCI. From the kernel's perspective, all these technologies are compatible with one another. A kernel PCI driver will work with all related technologies mentioned previously; so even though we base example code in this chapter on a CardBus card, the concepts apply to other PCI derivatives, too.</P><A name=ch10tab01></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle><A name="and Cousins"></A>Table 10.1. PCI's Siblings, Children, and Cousins</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=150>
<COL width=200>
<COL width=200></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Bus Name</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Characteristics</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Form Factor</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left>PCI</TD>
<TD class=docTableCell vAlign=top align=left>32-bit bus at 33MHz or 66MHz; yields up to 266MBps.</TD>
<TD class=docTableCell vAlign=top align=left>Internal slot in desktops and servers.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>Mini PCI</TD>
<TD class=docTableCell vAlign=top align=left>32-bit bus at 33MHz.</TD>
<TD class=docTableCell vAlign=top align=left>Internal slot in laptops.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>CardBus</TD>
<TD class=docTableCell vAlign=top align=left>32-bit bus at 33MHz.</TD>
<TD class=docTableCell vAlign=top align=left>External PC card slot in laptops. Compatible with PCI.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>PCI Extended (PCI-X)</TD>
<TD class=docTableCell vAlign=top align=left>64-bit bus at 133 MHz, yielding up to 1GBps.</TD>
<TD class=docTableCell vAlign=top align=left><A name="PCI card"></A>Internal slot in desktops and servers. Wider than PCI, but a PCI card can be plugged into a PCI-X slot.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>PCI Express (PCIe)</TD>
<TD class=docTableCell vAlign=top align=left><A name="transfer direction"></A>250MBps per PCIe link in each transfer direction, yielding a maximum throughput of 8GBps in each direction.</TD>
<TD class=docTableCell vAlign=top align=left><A name="a serial"></A>Replaces the internal PCI slot in newer systems. PCIe is a serial protocol unlike native PCI, which is parallel.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>PCI Express Mini Card</TD>
<TD class=docTableCell vAlign=top align=left><A name="based on"></A>250MBps in each direction if the interface is based on a PCIe link; 60MBps if the interface is based on USB 2.0.</TD>
<TD class=docTableCell vAlign=top align=left><A name="form factor"></A>Replaces Mini PCI as the internal slot in newer laptops. Smaller form factor than Mini PCI.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>Express Card</TD>
<TD class=docTableCell vAlign=top align=left><A name="if the"></A>250MBps in each direction if the interface is based on a PCIe link; 60MBps if the interface is based on USB 2.0.</TD>
<TD class=docTableCell vAlign=top align=left><A name="slot in"></A>Thin external slot in newer laptops that replaces CardBus. Interfaces with the system bus via PCIe or USB 2.0.</TD></TR></TBODY></TABLE></P><BR>
<P class=docText><A name="Solutions based"></A>Solutions based on the PCI family are available for a vast spectrum of hardware domains:</P>
<UL>
<LI>
<P class=docList><A name="such as"></A>Networking technologies such as Gigabit Ethernet, WiFi, ATM, Token Ring, and ISDN.</P></LI>
<LI>
<P class=docList><A name="adapters for"></A>Host adapters for storage technologies, such as SCSI.</P></LI>
<LI>
<P class=docList>Host controllers for I/O buses such as USB, FireWire, IDE, I<SUP>2</SUP><A name="the PCI"></A>C, and PCMCIA. On PC-compatible systems, these host controllers function as bridges between the PCI controller on the South Bridge and the bus technology they source. Verify this by running <SPAN class=docEmphasis>lspci</SPAN> (discussed later).</P></LI>
<LI>
<P class=docList>Graphics, video streaming, and data capture.</P></LI>
<LI>
<P class=docList>Serial port and parallel port cards.</P></LI>
<LI>
<P class=docList>Sound cards.</P></LI>
<LI>
<P class=docList><A name="game ports"></A>Devices such as Watchdogs, EDAC-capable memory controllers, and game ports.</P></LI></UL>
<P class=docText><A name=iddle3410></A><A name=iddle3438></A><A name=iddle3440></A><A name=iddle3460></A><A name=iddle4106></A><A name="a system"></A>For the driver developer, the PCI family offers an attractive advantage: a system of automatic device configuration. Unlike drivers for the older ISA generation, PCI drivers need not implement complex probing logic. During boot, the BIOS-type boot firmware (or the kernel itself if so configured) walks the PCI bus and assigns resources such as interrupt levels and I/O base addresses. The device driver gleans this assignment by peeking at a memory region called the PCI configuration space. PCI devices possess 256 bytes of configuration memory. The top 64 bytes of the configuration space is standardized and holds registers that contain details such as the status, interrupt line, and I/O base addresses. PCIe and PCI-X 2.0 offer an extended configuration space of 4KB. We will learn how to operate on the PCI configuration space later.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10.html#ch10fig01">Figure 10.1</A><A name="the South"></A> shows PCI in a PC-compatible system. Components integrated into the South Bridge such as controller silicon for USB, IDE, I<SUP>2</SUP><A name="contain an"></A>C, LPC, and Ethernet reside off the PCI bus. Some of these controllers contain an internal PCI-to-PCI bridge to source a dedicated PCI bus for the respective I/O technology. The South <A name=iddle1057></A><A name=iddle2864></A><A name=iddle3408></A><A name="an external"></A>Bridge additionally contains an external PCI bus to connect I/O peripherals such as CardBus controllers and WiFi chipsets. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10.html#ch10fig01">Figure 10.1</A><A name="PCI address"></A> also shows PCI address tuples corresponding to each connected subsystem. This will get clearer when we learn about PCI addressing next.</P><A name=ch10fig01></A>
<P>
<CENTER>
<H5 class=docFigureTitle><A name="Figure "></A>Figure 10.1. PCI inside a PC South Bridge.</H5>
<P class=docText><IMG border=0 alt="" src="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/ZTVyMWQ5OHB0Z2lzMC8vbWMzNWE5NC9yMzZnMjdhZ3AuaWNzaTAxLzFmMGhpZ2Y-.jpg" width=500 height=516></P></CENTER>