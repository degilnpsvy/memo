<H3 id=-100000 class=docSection1Title>Looking at the Sources</H3>
<P class=docText><A name="PCI core"></A>PCI core and bus access routines live in <SPAN class=docEmphasis>drivers/pci/.</SPAN><A name="a list"></A> To obtain a list of helper routines offered by the PCI subsystem, search for <TT>EXPORT_SYMBOL</TT><A name="this directory"></A> inside this directory. For definitions and prototypes related to the PCI layer, look at <SPAN class=docEmphasis>include/linux/pci*.h</SPAN>.</P>
<P class=docText><A name=under></A>You can spot several PCI device drivers in subdirectories under <SPAN class=docEmphasis>drivers/net/</SPAN>, <SPAN class=docEmphasis>drivers/scsi/</SPAN>, and <SPAN class=docEmphasis>drivers/video/.</SPAN><A name="grep the"></A> To locate all PCI drivers, recursively grep the <SPAN class=docEmphasis>drivers/</SPAN> tree for <TT>pci_register_driver()</TT>.</P>
<P class=docText><A name="to develop"></A>If you do not find a good starting point to develop a custom PCI network driver, begin with the skeletal PCI network driver <SPAN class=docEmphasis>drivers/net/pci-skeleton.c.</SPAN><A name=at></A> For a brief tutorial on PCI programming, look at <SPAN class=docEmphasis>Documentation/pci.txt.</SPAN> For a description of the PCI DMA API, read <SPAN class=docEmphasis>Documentation/DMA-mapping.txt</SPAN>.</P>
<P class=docText><A name=iddle1815></A><A name=iddle2461></A><A name=iddle2462></A><A name=iddle3412></A><A name=iddle3434></A><A name=iddle3445></A><A name=iddle3449></A><A name=iddle3452></A><A name=iddle3456></A><A name=iddle3464></A><A name=iddle3471></A><A name=iddle3473></A><A name=iddle3475></A><A name=iddle3479></A><A name=iddle3481></A><A name=iddle3483></A><A name=iddle3485></A><A name=iddle3487></A><A name=iddle3488></A><A name=iddle3494></A><A name=iddle3496></A><A name=iddle3498></A><A name=iddle3878></A><A name=iddle4010></A><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10lev1sec7.html#ch10tab04">Table 10.4</A> summarizes the main data structures used in this chapter. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch10lev1sec7.html#ch10tab05">Table 10.5</A><A name="this chapter"></A> lists the main kernel programming interfaces that you used in this chapter along with the location of their definitions.</P><A name=ch10tab04></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle><A name="Data Structures"></A>Table 10.4. Summary of Data Structures</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=125>
<COL width=225>
<COL width=200></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Data Structure</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_dev</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/pci.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="a PCI"></A>Representation of a PCI device</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_driver</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/pci.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="Representation of"></A>Representation of a PCI driver</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_device_id</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/mod_devicetable.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="a PCI"></A>Identity of a PCI card</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>dma_addr_t</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-your-arch/types.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="address of"></A>Bus address of a DMA buffer</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>scatterlist</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-your-arch/scatterlist.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Scatter-gather list of DMA buffers</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>sk_buff</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/skbuff.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Main networking data structure (see <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch15.html#ch15">Chapter 15</A> for more explanations)</TD></TR></TBODY></TABLE></P><BR><A name=ch10tab05></A>
<P>
<TABLE cellSpacing=0 cellPadding=4 rules=rows frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 10.5. Summary of Kernel Programming Interfaces</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=200>
<COL width=150>
<COL width=200></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Kernel Interface</TH>
<TH class="docTableCell thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>pci_read_config_byte()
pci_read_config_word()
pci_read_config_dword()
pci_write_config_byte()
pci_write_config_word()
pci_write_config_dword()</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/pci.h</SPAN> <SPAN class=docEmphasis>drivers/pci/access.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Routines to operate on the PCI configuration space.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>pci_resource_start()
pci_resource_len()
pci_resource_end()
pci_resource_flags()</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/pci.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="obtain the"></A>These routines operate on PCI I/O and memory regions to obtain the base address, length, end address, and control flags.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_request_region()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/pci/pci.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Reserves PCI I/O or memory regions.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>ioremap()
ioremap_nocache()
pci_iomap()</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-your-arch/io.h</SPAN> 
<P class=docText><SPAN class=docEmphasis>arch/your-arch/mm/ioremap.c</SPAN></P><SPAN class=docEmphasis>lib/iomap.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Obtains CPU access to device memory.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_set_dma_mask()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/pci/pci.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="may DMA"></A>If this function returns success, you may DMA to any address within the mask specified as argument.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_alloc_consistent()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/pci-dma-compat.h</SPAN> <SPAN class=docEmphasis>include/asm-your-arch/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Obtains a cache-coherent DMA buffermapping.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><A name=iddle3453></A><A name=iddle3454></A><A name=iddle3455></A><A name=iddle3457></A><A name=iddle3462></A><A name=iddle3467></A><A name=iddle3469></A><A name=iddle3477></A><A name=iddle3489></A><A name=iddle3490></A><A name=iddle3491></A><A name=iddle3492></A><TT>pci_free_consistent()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/pci-dma-compat.h</SPAN> <SPAN class=docEmphasis>include/asm-your-arch/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Unmaps a cache-coherent DMA buffer.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_map_single()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/pci-dma-compat.h</SPAN> <SPAN class=docEmphasis>include/asm-your-arch/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Obtains a streaming DMA buffer mapping.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_unmap_single()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/pci-dma-compat.h</SPAN> <SPAN class=docEmphasis>include/asm-your-arch/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Unmaps a streaming DMA buffer.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_dma_sync_single()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/pci-dma-compat.h</SPAN> <SPAN class=docEmphasis>include/asm-your-arch/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="can reliably"></A>Synchronizes a streaming DMA buffer so that the CPU can reliably operate on it.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>pci_map_sg()
pci_unmap_sg()
pci_dma_sync_sg()</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/asm-generic/pci-dma-compat.h</SPAN> <SPAN class=docEmphasis>include/asm-your-arch/dma-mapping.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Maps/unmaps/synchronizes a scatter-gather list of streaming DMA buffers.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_register_driver()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/pci.h</SPAN> <SPAN class=docEmphasis>drivers/pci/pci-driver.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers a driver with the PCI core.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_unregister_driver()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/pci/pci-driver.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Unregisters a driver from the PCI core.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_enable_device()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/pci/pci.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="regions for"></A>Asks low-level PCI code to enable I/O and memory regions for this device.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_disable_device()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/pci/pci.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Reverse of <TT>pci_enable_device()</TT>.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>pci_set_master()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>drivers/pci/pci.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Sets the device in DMA bus-mastering mode.</TD></TR></TBODY></TABLE>