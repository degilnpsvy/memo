<H3 id=-100000 class=docSection1Title>PCMCIA Core</H3>
<P class=docText><A name="Card Services"></A>Card Services is the main constituent of the PCMCIA core. It offers a set of services to client drivers and host controller drivers. It contains a kernel thread called <SPAN class=docEmphasis>pccardd</SPAN><A name="for socket"></A> that polls for socket-related events. Pccardd notifies the Driver Services event handler (discussed in the next section) when the host controller reports events such as card insertion and card removal.</P>
<P class=docText><A name="component of"></A>Another component of the PCMCIA core is a library that manipulates the <SPAN class=docEmphasis>Card Information Structure</SPAN> (CIS) that is part of PCMCIA cards. PCMCIA/CF cards have two memory spaces: <SPAN class=docEmphasis>Attribute</SPAN> memory and <SPAN class=docEmphasis>Common</SPAN><A name="memory of"></A> memory. Attribute memory contains the CIS and card configuration registers. Attribute memory of a PCMCIA IDE disk, for example, contains its CIS and registers that specify the sector count and the cylinder number. Common memory in this case contains the memory array that holds disk data. The PCMCIA core offers CIS manipulation routines such as <TT>pccard_get_first_tuple()</TT>, <TT>pccard_get_next_tuple()</TT>, and <TT>pccard_parse_tuple()</TT> to client drivers. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch09lev1sec6.html#ch09ex02">Listing 9.2</A><A name="of these"></A> uses the assistance of some of these functions.</P>
<P class=docText><A name="via sysfs"></A>The PCMCIA core passes CIS information to user space via sysfs and udev. Utilities such as pccardctl, part of the pcmciautils package, depend on sysfs and udev for their operation. This simplifies the earlier design approach that relied on a custom infrastructure when these facilities were absent in the kernel.