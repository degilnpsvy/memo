<H3 id=-100000 class=docSection1Title>Host Controller Drivers</H3>
<P class=docText><A name="Whereas the"></A>Whereas the generic card driver (XX) is responsible for handling interrupts generated by the card function (say, receive interrupts when a PCMCIA network card receives data packets), the host controller driver is responsible for handling bus-specific interrupts triggered by events such as card insertion and ejection.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch09lev1sec1.html#ch09fig02">Figure 9.2</A><A name="block diagram"></A> shows the block diagram of an embedded device designed around an embedded controller that has built-in PCMCIA support. Even if you are using a controller supported by the kernel PCMCIA layer, you might need to tweak the host controller driver (for example, to configure GPIO lines used for detecting card insertion events or switching power to the socket) depending on your board's design. If you are <A name=iddle1155></A><A name=iddle1369></A><A name=iddle1372></A><A name=iddle1456></A><A name=iddle1529></A><A name=iddle1856></A><A name=iddle2605></A><A name=iddle2633></A><A name=iddle2794></A><A name=iddle3401></A><A name=iddle3502></A><A name=iddle3503></A><A name=iddle3505></A><A name=iddle3506></A><A name=iddle3508></A><A name=iddle3520></A><A name="the kernel"></A>porting the kernel to a StrongARM-based handheld, for example, tailor <SPAN class=docEmphasis>drivers/pcmcia/sa1100_assabet.c</SPAN> to suit your hardware.</P>
<P class=docText><A name="controller device"></A>This chapter does not cover the implementation of host controller device drivers.