<H3 id=-100000 class=docSection1Title>Debugging</H3>
<P class=docText><A name="To effectively"></A>To effectively debug PCMCIA/CF client drivers, you need to see debug messages emitted by the PCMCIA core. For this, enable <TT>CONFIG_PCMCIA_DEBUG</TT> (<SPAN class=docEmphasis>Bus options</SPAN> <IMG alt="rightwards double arrow" src="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/U2192.GIF"> <SPAN class=docEmphasis>PCCARD support</SPAN> <IMG alt="rightwards double arrow" src="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/U2192.GIF"> <SPAN class=docEmphasis>Enable PCCARD debugging</SPAN><A name="Verbosity levels"></A>) during kernel configuration. Verbosity levels of the debug output can be controlled either via the <TT>pcmcia_core.pc_debug</TT><A name="argument or"></A> kernel command-line argument or using the <TT>pc_debug</TT> module insertion parameter.</P>
<P class=docText><A name=iddle2885></A><A name=iddle3526></A><A name="the process"></A>Information about PC Card client drivers is available in the process filesystem entry, <SPAN class=docEmphasis>/proc/bus/pccard/drivers</SPAN>. Look at <SPAN class=docEmphasis>/sys/bus/pcmcia/devices/*</SPAN><A name="and card"></A> for card-specific information such as manufacturer and card IDs. Take a look inside <SPAN class=docEmphasis>/proc/bus/pci/</SPAN><A name="your system"></A> to know more about your PCMCIA host controller if your system uses a PCI-to-PCMCIA bridge. <SPAN class=docEmphasis>/proc/interrupts</SPAN><A name="used by"></A> lists IRQs active on your system, including those used by the PCMCIA layer.</P>
<P class=docText>There is a mailing list dedicated to Linux-PCMCIA at <A class=docLink href="http://lists.infradead.org/mailman/listinfo/linux-pcmcia" target=_blank>http://lists.infradead.org/mailman/listinfo/linux-pcmcia</A>.