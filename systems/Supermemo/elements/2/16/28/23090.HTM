<H3 id=-100000 class=docSection1Title>Linux-Video Subsystem</H3>
<P class=docText><A name=iddle2804></A><A name="The concept"></A>The concept of frame buffers is central to video on Linux, so let's first find out what that offers.</P>
<P class=docText><A name="adapters can"></A>Because video adapters can be based on different hardware architectures, the implementation of higher kernel layers and applications might need to vary across video cards. This results in nonuniform schemes to handle different video cards. The ensuing nonportability and extra code necessitate greater investment and maintenance. The frame buffer concept solves this problem by describing a general abstraction and specifying a programming interface that allows applications and higher kernel layers to be written in a platform-independent manner. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch12lev1sec2.html#ch12fig04">Figure 12.4</A><A name="you the"></A> shows you the frame buffer advantage.</P><A name=ch12fig04></A>
<P>
<CENTER>
<H5 class=docFigureTitle>Figure 12.4. The frame buffer advantage.</H5>
<P class=docText><IMG border=0 alt="" src="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/ZTVyMWQ5OHB0Z2lzMC8vbWMzNWE5NC9yMzZnMjdhZ3AuaWNzaTAxLzRmMmhpZ2Y-.jpg" width=450 height=356></P></CENTER>
<P></P><BR>
<P class=docText><A name="independent of"></A>The kernel's frame buffer interface thus allows applications to be independent of the vagaries of the underlying graphics hardware. Applications run unchanged over diverse types of video hardware if they and the display drivers conform to the frame buffer interface. As you will soon find out, the common frame buffer programming interface also brings hardware independence to kernel layers, such as the frame buffer console driver.</P><A name=ch12note01></A>
<DIV class=docNote>
<P>
<P class=docText><A name="and movie"></A>Today, several applications, such as web browsers and movie players, work directly over the frame buffer interface. Such applications can do graphics without help from a windowing system.</P>
<P class=docText><A name="the frame"></A>The X Windows server (Xfbdev) is capable of working over the frame buffer interface, as shown in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch12lev1sec2.html#ch12fig05">Figure 12.5</A>.</P><A name=ch12fig05></A>
<P>
<CENTER>
<H5 class=docFigureTitle>Figure 12.5. Linux-Video subsystem.</H5>
<P class=docText>
<DIV class=st1><A href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/ZTVyMWQ5OHB0Z2lzMC8vbWMzNWE5NC9yMzZnMjdhZy5wX2xjc2kwMXQvNTJoZmlnaWFm.jpg" target=_blank>[View full size image]</A></DIV><IMG border=0 alt="" src="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/ZTVyMWQ5OHB0Z2lzMC8vbWMzNWE5NC9yMzZnMjdhZ3AuaWNzaTAxLzVmMmhpZ2Y-.jpg" width=500 height=459>
<P></P></CENTER>
<P></P><BR>
<P></P></DIV><BR>
<P class=docText>The Linux-Video subsystem shown in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch12lev1sec2.html#ch12fig05">Figure 12.5</A><A name="and console"></A> is a collection of low-level display drivers, middle-level frame buffer and console layers, a high-level virtual terminal driver, user mode drivers part of X Windows, and utilities to configure display parameters. Let's trace the figure top down:</P>
<UL>
<LI>
<P class=docList><A name="video cards"></A>The X Windows GUI has two options for operating over video cards. It can use either a suitable built-in user-space driver for the card or work over the frame buffer subsystem.</P></LI>
<LI>
<P class=docList><A name="function over"></A>Text mode consoles function over the virtual terminal character driver. Virtual terminals, introduced in the section "<A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch06lev1sec3.html#ch06lev1sec3">TTY Drivers</A>" in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch06.html#ch06">Chapter 6</A><A name="that you"></A>, "Serial Drivers," are full-screen text-based terminals that you get when you logon in text mode. Like X Windows, text consoles have two operational choices. They can either work over a card-specific console driver, or use the generic frame buffer console driver (<SPAN class=docEmphasis>fbcon</SPAN><A name="if the"></A>) if the kernel supports a low-level frame buffer driver for the card in question.</P></LI></UL>