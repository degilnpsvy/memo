<H3 id=-100000 class=docSection1Title>Enumeration</H3>
<P class=docText><A name=iddle1993></A><A name=iddle2660></A><A name=iddle4236></A><A name=iddle4427></A><A name=iddle4438></A><A name="The life"></A>The life of a hotplugged USB device starts with a process called <SPAN class=docEmphasis>enumeration</SPAN><A name="the host"></A> by which the host learns about the device's capabilities and configures it. The hub driver is the component in the Linux-USB subsystem responsible for enumeration. Let's look at the sequence of steps that achieve device enumeration when you plug in a USB pen drive into a host computer:</P><A name=ch11pro01></A>
<TABLE class=docText border=0>
<TBODY>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>1. </B></DIV></TD>
<TD>
<DIV class=docText>The root hub reports a change in the port's current due to the device attachment. The hub driver detects this status change, called a <TT>USB_PORT_STAT_C_CONNECTION</TT> in Linux-USB terminology, and awakens khubd.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>2. </B></DIV></TD>
<TD>
<DIV class=docText>Khubd deciphers the identity of the USB port subjected to the status change. In this case, it's the port where you plugged in the pen drive.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>3. </B></DIV></TD>
<TD>
<DIV class=docText>Next, khubd chooses a device address between 1 and 127 and assigns it to the pen drive's bulk endpoint using a control URB attached to endpoint <TT>0</TT>.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>4. </B></DIV></TD>
<TD>
<DIV class=docText>Khubd uses the above control URB attached to endpoint <TT>0</TT> to obtain the device descriptor from the pen drive. It then requests the device's configuration descriptors and selects a suitable one. In the case of the pen drive, only a single configuration descriptor is on offer.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>5. </B></DIV></TD>
<TD>
<DIV class=docText>Khubd requests the USB core to bind a matching client driver to the inserted device.<BR><BR></DIV></TD></TR></TBODY></TABLE>
<P class=docText><A name="enumeration is"></A>When enumeration is complete and the device is bound to a driver, khubd invokes the associated client driver's <TT>probe()</TT> method. In this case, khubd calls <TT>storage_probe()</TT> defined in <SPAN class=docEmphasis>drivers/usb/storage/usb.c.</SPAN><A name="for normal"></A> From this point on, the mass storage driver is responsible for normal device operation.