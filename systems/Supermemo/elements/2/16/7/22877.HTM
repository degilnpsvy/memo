# Documentation/sysctl/net.txt&nbsp;&nbsp;&nbsp; 
<P></P>
<P>Documentation for /proc/sys/net/*&nbsp;kernel version 2.4.0-test11-pre4<BR>&nbsp;(c) 1999&nbsp;&nbsp;Terrehon Bowden &lt;<A href="mailto:terrehon@pacbell.net">terrehon@pacbell.net</A>&gt;<BR>&nbsp;&nbsp;&nbsp;&nbsp;Bodo Bauer &lt;<A href="mailto:bb@ricochet.net">bb@ricochet.net</A>&gt;<BR>&nbsp;(c) 2000&nbsp;&nbsp;Jorge Nerin &lt;<A href="mailto:comandante@zaralinux.com">comandante@zaralinux.com</A>&gt;<BR>&nbsp;(c) 2009&nbsp;&nbsp;Shen Feng &lt;<A href="mailto:shen@cn.fujitsu.com">shen@cn.fujitsu.com</A>&gt;</P>
<P></P>
<P>For general info and legal blurb, please look in README.</P>
<P>==============================================================</P>
<P>This file contains the documentation for the sysctl files in<BR>/proc/sys/net and is valid for Linux kernel version 2.4.0-test11-pre4.</P>
<P>The interface&nbsp; to&nbsp; the&nbsp; networking&nbsp; parts&nbsp; of&nbsp; the&nbsp; kernel&nbsp; is&nbsp; located&nbsp; in<BR>/proc/sys/net. The following table shows all possible subdirectories.You may<BR>see only some of them, depending on your kernel's configuration.</P>
<P><BR>Table : Subdirectories in /proc/sys/net<BR>..............................................................................<BR>&nbsp;Directory Content&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Directory&nbsp; Content<BR>&nbsp;core&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; General parameter&nbsp;&nbsp; appletalk&nbsp; Appletalk protocol<BR>&nbsp;unix&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Unix domain sockets netrom&nbsp;&nbsp;&nbsp;&nbsp; NET/ROM<BR>&nbsp;802&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; E802 protocol&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ax25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AX25<BR>&nbsp;ethernet&nbsp; Ethernet protocol&nbsp;&nbsp; rose&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X.25 PLP layer<BR>&nbsp;ipv4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IP version 4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X.25 protocol<BR>&nbsp;ipx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IPX&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; token-ring IBM token ring<BR>&nbsp;bridge&nbsp;&nbsp;&nbsp; Bridging&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; decnet&nbsp;&nbsp;&nbsp;&nbsp; DEC net<BR>&nbsp;ipv6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IP version 6<BR>..............................................................................</P>
<P>1. /proc/sys/net/core - Network core options<BR>-------------------------------------------------------</P>
<P>bpf_jit_enable<BR>--------------</P>
<P>This enables Berkeley Packet Filter Just in Time compiler.<BR>Currently supported on x86_64 architecture, bpf_jit provides a framework<BR>to speed packet filtering, the one used by tcpdump/libpcap for example.<BR>Values :<BR>&nbsp;0 - disable the JIT (default value)<BR>&nbsp;1 - enable the JIT<BR>&nbsp;2 - enable the JIT and ask the compiler to emit traces on kernel log.</P>
<P>dev_weight<BR>--------------</P>
<P>The maximum number of packets that kernel can handle on a NAPI interrupt,<BR>it's a Per-CPU variable.<BR>Default: 64</P>
<P>rmem_default<BR>------------</P>
<P>The default setting of the socket receive buffer in bytes.</P>
<P>rmem_max<BR>--------</P>
<P>The maximum receive socket buffer size in bytes.</P>
<P>wmem_default<BR>------------</P>
<P>The default setting (in bytes) of the socket send buffer.</P>
<P>wmem_max<BR>--------</P>
<P>The maximum send socket buffer size in bytes.</P>
<P>message_burst and message_cost<BR>------------------------------</P>
<P>These parameters&nbsp; are used to limit the warning messages written to the kernel<BR>log from&nbsp; the&nbsp; networking&nbsp; code.&nbsp; They&nbsp; enforce&nbsp; a&nbsp; rate&nbsp; limit&nbsp; to&nbsp; make&nbsp; a<BR>denial-of-service attack&nbsp; impossible. A higher message_cost factor, results in<BR>fewer messages that will be written. Message_burst controls when messages will<BR>be dropped.&nbsp; The&nbsp; default&nbsp; settings&nbsp; limit&nbsp; warning messages to one every five<BR>seconds.</P>
<P>warnings<BR>--------</P>
<P>This controls console messages from the networking stack that can occur because<BR>of problems on the network like duplicate address or bad checksums. Normally,<BR>this should be enabled, but if the problem persists the messages can be<BR>disabled.</P>
<P>netdev_budget<BR>-------------</P>
<P>Maximum number of packets taken from all interfaces in one polling cycle (NAPI<BR>poll). In one polling cycle interfaces which are registered to polling are<BR>probed in a round-robin manner. The limit of packets in one such probe can be<BR>set per-device via sysfs class/net/&lt;device&gt;/weight .</P>
<P>netdev_max_backlog<BR>------------------</P>
<P>Maximum number&nbsp; of&nbsp; packets,&nbsp; queued&nbsp; on&nbsp; the&nbsp; INPUT&nbsp; side, when the interface<BR>receives packets faster than kernel can process them.</P>
<P>netdev_tstamp_prequeue<BR>----------------------</P>
<P>If set to 0, RX packet timestamps can be sampled after RPS processing, when<BR>the target CPU processes packets. It might give some delay on timestamps, but<BR>permit to distribute the load on several cpus.</P>
<P>If set to 1 (default), timestamps are sampled as soon as possible, before<BR>queueing.</P>
<P>optmem_max<BR>----------</P>
<P>Maximum ancillary buffer size allowed per socket. Ancillary data is a sequence<BR>of struct cmsghdr structures with appended data.</P>
<P>2. /proc/sys/net/unix - Parameters for Unix domain sockets<BR>-------------------------------------------------------</P>
<P>There is only one file in this directory.<BR>unix_dgram_qlen limits the max number of datagrams queued in Unix domain<BR>socket's buffer. It will not take effect unless PF_UNIX flag is specified.</P>
<P><BR>3. /proc/sys/net/ipv4 - IPV4 settings<BR>-------------------------------------------------------<BR>Please see: Documentation/networking/ip-sysctl.txt and ipvs-sysctl.txt for<BR>descriptions of these entries.</P>
<P><BR>4. Appletalk<BR>-------------------------------------------------------</P>
<P>The /proc/sys/net/appletalk&nbsp; directory&nbsp; holds the Appletalk configuration data<BR>when Appletalk is loaded. The configurable parameters are:</P>
<P>aarp-expiry-time<BR>----------------</P>
<P>The amount&nbsp; of&nbsp; time&nbsp; we keep an ARP entry before expiring it. Used to age out<BR>old hosts.</P>
<P>aarp-resolve-time<BR>-----------------</P>
<P>The amount of time we will spend trying to resolve an Appletalk address.</P>
<P>aarp-retransmit-limit<BR>---------------------</P>
<P>The number of times we will retransmit a query before giving up.</P>
<P>aarp-tick-time<BR>--------------</P>
<P>Controls the rate at which expires are checked.</P>
<P>The directory&nbsp; /proc/net/appletalk&nbsp; holds the list of active Appletalk sockets<BR>on a machine.</P>
<P>The fields&nbsp; indicate&nbsp; the DDP type, the local address (in network:node format)<BR>the remote&nbsp; address,&nbsp; the&nbsp; size of the transmit pending queue, the size of the<BR>received queue&nbsp; (bytes waiting for applications to read) the state and the uid<BR>owning the socket.</P>
<P>/proc/net/atalk_iface lists&nbsp; all&nbsp; the&nbsp; interfaces&nbsp; configured for appletalk.It<BR>shows the&nbsp; name&nbsp; of the interface, its Appletalk address, the network range on<BR>that address&nbsp; (or&nbsp; network number for phase 1 networks), and the status of the<BR>interface.</P>
<P>/proc/net/atalk_route lists&nbsp; each&nbsp; known&nbsp; network&nbsp; route.&nbsp; It lists the target<BR>(network) that the route leads to, the router (may be directly connected), the<BR>route flags, and the device the route is using.</P>
<P><BR>5. IPX<BR>-------------------------------------------------------</P>
<P>The IPX protocol has no tunable values in proc/sys/net.</P>
<P>The IPX&nbsp; protocol&nbsp; does,&nbsp; however,&nbsp; provide&nbsp; proc/net/ipx. This lists each IPX<BR>socket giving&nbsp; the&nbsp; local&nbsp; and&nbsp; remote&nbsp; addresses&nbsp; in&nbsp; Novell&nbsp; format (that is<BR>network:node:port). In&nbsp; accordance&nbsp; with&nbsp; the&nbsp; strange&nbsp; Novell&nbsp; tradition,<BR>everything but the port is in hex. Not_Connected is displayed for sockets that<BR>are not&nbsp; tied to a specific remote address. The Tx and Rx queue sizes indicate<BR>the number&nbsp; of&nbsp; bytes&nbsp; pending&nbsp; for&nbsp; transmission&nbsp; and&nbsp; reception.&nbsp; The&nbsp; state<BR>indicates the&nbsp; state&nbsp; the&nbsp; socket&nbsp; is&nbsp; in and the uid is the owning uid of the<BR>socket.</P>
<P>The /proc/net/ipx_interface&nbsp; file lists all IPX interfaces. For each interface<BR>it gives&nbsp; the network number, the node number, and indicates if the network is<BR>the primary&nbsp; network.&nbsp; It&nbsp; also&nbsp; indicates&nbsp; which&nbsp; device&nbsp; it&nbsp; is bound to (or<BR>Internal for&nbsp; internal&nbsp; networks)&nbsp; and&nbsp; the&nbsp; Frame&nbsp; Type if appropriate. Linux<BR>supports 802.3,&nbsp; 802.2,&nbsp; 802.2&nbsp; SNAP&nbsp; and DIX (Blue Book) ethernet framing for<BR>IPX.</P>
<P>The /proc/net/ipx_route&nbsp; table&nbsp; holds&nbsp; a list of IPX routes. For each route it<BR>gives the&nbsp; destination&nbsp; network, the router node (or Directly) and the network<BR>address of the router (or Connected) for internal networks.