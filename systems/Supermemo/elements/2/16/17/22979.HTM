# Documentation/namespaces/compatibility-list.txt
<P></P>
<P>&nbsp;Namespaces compatibility list</P>
<P></P>
<P>This document contains the information about the problems user<BR>may have when creating tasks living in different namespaces.</P>
<P>Here's the summary. This matrix shows the known problems, that<BR>occur when tasks share some namespace (the columns) while living<BR>in different other namespaces (the rows):</P>
<P>&nbsp;UTS&nbsp;IPC&nbsp;VFS&nbsp;PID&nbsp;User&nbsp;Net<BR>UTS&nbsp; X<BR>IPC&nbsp;&nbsp; X&nbsp; 1<BR>VFS&nbsp;&nbsp;&nbsp; X<BR>PID&nbsp;&nbsp; 1&nbsp; 1&nbsp; X<BR>User&nbsp;&nbsp; 2&nbsp; 2&nbsp;&nbsp; X<BR>Net&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; X</P>
<P>1. Both the IPC and the PID namespaces provide IDs to address<BR>&nbsp;&nbsp; object inside the kernel. E.g. semaphore with IPCID or<BR>&nbsp;&nbsp; process group with pid.</P>
<P>&nbsp;&nbsp; In both cases, tasks shouldn't try exposing this ID to some<BR>&nbsp;&nbsp; other task living in a different namespace via a shared filesystem<BR>&nbsp;&nbsp; or IPC shmem/message. The fact is that this ID is only valid<BR>&nbsp;&nbsp; within the namespace it was obtained in and may refer to some<BR>&nbsp;&nbsp; other object in another namespace.</P>
<P>2. Intentionally, two equal user IDs in different user namespaces<BR>&nbsp;&nbsp; should not be equal from the VFS point of view. In other<BR>&nbsp;&nbsp; words, user 10 in one user namespace shouldn't have the same<BR>&nbsp;&nbsp; access permissions to files, belonging to user 10 in another<BR>&nbsp;&nbsp; namespace.</P>
<P>&nbsp;&nbsp; The same is true for the IPC namespaces being shared - two users<BR>&nbsp;&nbsp; from different user namespaces should not access the same IPC objects<BR>&nbsp;&nbsp; even having equal UIDs.</P>
<P>&nbsp;&nbsp; But currently this is not so.</P>
<P>&nbsp;