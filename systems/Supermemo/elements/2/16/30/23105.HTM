<H3 id=-100000 class=docSection1Title>Linux Block I/O Layer</H3>
<P class=docText><A name=iddle1241></A><A name=iddle1265></A><A name=iddle2071></A><A name=iddle4578></A><A name=iddle4592></A><A name="The block"></A>The block I/O layer was considerably overhauled between the 2.4 and 2.6 kernel releases. The motivation for the redesign was that the block layer, more than other kernel subsystems, has the potential to impact overall system performance.</P>
<P class=docText><A name="look at"></A>Let's take a look at <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch14lev1sec2.html#ch14fig02">Figure 14.2</A><A name="learn the"></A> to learn the workings of the Linux block I/O layer. The storage media contains files residing in a filesystem, such as EXT3 or Reiserfs. User applications invoke I/O system calls to access these files. The resulting filesystem operations pass through the generic <SPAN class=docEmphasis>Virtual File System</SPAN><A name="speeds up"></A> (VFS) layer before entering the individual filesystem driver. The buffer cache speeds up filesystem access to block devices by caching disk blocks. If a block is found in the buffer cache, the time required to access the disk to read the block is saved. Data destined for each block device is lined up in a request queue. The filesystem driver populates the request queue belonging to the desired block device, whereas the block driver receives and consumes requests from the corresponding queue. In between, <SPAN class=docEmphasis>I/O schedulers</SPAN><A name="as to"></A> manipulate the request queue so as to minimize disk access latencies and maximize throughput.</P><A name=ch14fig02></A>
<P>
<CENTER>
<H5 class=docFigureTitle>Figure 14.2. Block I/O on Linux.</H5>
<P class=docText><IMG border=0 alt="" src="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/images/ZTVyMWQ5OHB0Z2lzMC8vbWMzNWE5NC9yMzZnMjdhZ3AuaWNzaTAxLzJmNGhpZ2Y-.jpg" width=500 height=522></P></CENTER>
<P></P><BR>
<P class=docText>Let's next examine the different I/O schedulers available on Linux.