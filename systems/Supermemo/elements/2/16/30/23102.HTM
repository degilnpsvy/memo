<H3 id=-100000 class=docSection1Title>Looking at the Sources</H3>
<P class=docText><A name="The sound"></A>The sound core, audio buses, architectures, and the obsolete OSS suite all have their own separate subdirectories under <SPAN class=docEmphasis>sound/</SPAN><A name="interface implementation"></A>. For the AC'97 interface implementation, look inside <SPAN class=docEmphasis>sound/pci/ac97/</SPAN><A name="an example"></A>. For an example I<SUP>2</SUP>S-based audio driver, look at <SPAN class=docEmphasis>sound/soc/at91/at91-ssc.c</SPAN>, the audio driver for Atmel's AT91-series ARM-based embedded SoCs. Use <SPAN class=docEmphasis>sound/drivers/dummy.c</SPAN><A name="driver if"></A> as a starting point for developing your custom ALSA driver if you cannot find a closer match.</P>
<P class=docText><SPAN class=docEmphasis>Documentation/sound/*</SPAN><A name="OSS drivers"></A> contains information on ALSA and OSS drivers. <SPAN class=docEmphasis>Documentation/sound/alsa/DocBook/</SPAN><A name="guide is"></A> contains a DocBook on writing ALSA drivers. An ALSA configuration guide is available in <SPAN class=docEmphasis>Documentation/sound/alsa/ALSA-Configuration.txt</SPAN>. The Sound-HOWTO, downloadable from <A class=docLink href="http://tldp.org/HOWTO/Sound-HOWTO/" target=_blank>http://tldp.org/HOWTO/Sound-HOWTO/</A><A name="Linux support"></A>, answers several frequently asked questions pertaining to Linux support for audio devices.</P>
<P class=docText><SPAN class=docEmphasis>Madplay</SPAN><A name="You can"></A> is a software MP3 decoder and player that is both ALSA- and OSS-aware. You can look at its sources for tips on user-space audio programming.</P>
<P class=docText><A name="for basic"></A>Two no-frills OSS tools for basic playback and recording are <SPAN class=docEmphasis>rawplay</SPAN> and <SPAN class=docEmphasis>rawrec</SPAN><A name="are downloadable"></A>, whose sources are downloadable from <A class=docLink href="http://rawrec.sourceforge.net/" target=_blank>http://rawrec.sourceforge.net/</A>.</P>
<P class=docText><A name="You can"></A>You can find the home page of the Linux-ALSA project at <A class=docLink href="http://www.alsa-project.org/" target=_blank>www.alsa-project.org</A><A name="find the"></A>. Here, you will find the latest news on ALSA drivers, details on the ALSA programming API, and information on subscribing to related mailing lists. Sources of alsa-utils <A name=iddle1163></A><A name=iddle1166></A><A name=iddle4037></A><A name=iddle4039></A><A name=iddle4041></A><A name=iddle4043></A><A name=iddle4044></A><A name=iddle4046></A><A name=iddle4052></A><A name=iddle4056></A><A name=iddle4060></A><A name=iddle4062></A><A name=iddle4064></A><A name=iddle4066></A><A name=iddle4067></A><A name=iddle4069></A><A name=iddle4070></A><A name=iddle4071></A><A name="downloadable from"></A>and alsa-lib, downloadable from this page, can aid you while developing ALSA-aware applications.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch13lev1sec5.html#ch13tab02">Table 13.2</A><A name="and their"></A> contains the main data structures used in this chapter and their location in the source tree. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch13lev1sec5.html#ch13tab03">Table 13.3</A><A name="interfaces that"></A> lists the main kernel programming interfaces that you used in this chapter along with the location of their definitions.</P><A name=ch13tab02></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 13.2. Summary of Data Structures</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=150>
<COL width=150>
<COL width=250></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Data Structure</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_card</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/sound/core.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Representation of a sound card</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/sound/pcm.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>An instance of a PCM object</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_ops</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/sound/pcm.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Used to connect operations with a PCM object</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_substream</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/sound/pcm.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Information about the current audio stream</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_runtime</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/sound/pcm.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Runtime details of the audio stream</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_kcontrol_new</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/sound/control.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Representation of an ALSA control element</TD></TR></TBODY></TABLE></P><BR><A name=ch13tab03></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 13.3. Summary of Kernel Programming Interfaces</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=150>
<COL width=150>
<COL width=250></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Kernel Interface</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_card_new()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/init.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Instantiates an <TT>snd_card</TT> structure</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_card_free()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/init.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Frees an instantiated <TT>snd_card</TT></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_card_register()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/init.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers a sound card with the ALSA framework</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_lib_preallocate_pages_for_all()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/pcm_memory.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Preallocates buffers for a sound card</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_lib_malloc_pages()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/pcm_memory.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates DMA buffers for a sound card</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_new()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/pcm.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Creates an instance of a PCM object</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_pcm_set_ops()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/pcm_lib.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Connects playback or capture operations with a PCM object</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_ctl_add()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/control.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Associates a mixer control element with a sound card</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_ctl_new1()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/control.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates an <TT>snd_kcontrol</TT> structure and initializes it with supplied control operations</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>snd_card_proc_new()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>sound/core/info.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Creates a <SPAN class=docEmphasis>/proc</SPAN> entry and assigns it to a card instance</TD></TR></TBODY></TABLE>