<P class=docText>Whether from kernel space or from user space, it's difficult to get more precise control over timeouts than the granularity of <TT>HZ</TT><A name="because process"></A> because process time slices are updated by the kernel scheduler only during timer ticks. Also, even if your process is scheduled to run after the specified timeout, the scheduler can decide to pick another process from the run queue based on priorities.<SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch02lev1sec4.html#ch02fn03">[3]</A></SUP></P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=ch02fn03>[3]</A></SUP><A name="properties have"></A> These scheduler properties have changed with the advent of the CFS scheduler in the 2.6.23 kernel. Linux process schedulers are discussed in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19.html#ch19">Chapter 19</A><A name="User Space"></A>, "Drivers in User Space."</P></BLOCKQUOTE>