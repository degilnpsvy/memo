<H4 id=title-ID0EP5OM class=docSection2Title>Real Time Clock</H4>
<P class=docText><A name="tracks absolute"></A>The RTC tracks absolute time in nonvolatile memory. On x86 PCs, RTC registers constitute the top few locations of a small chunk of battery-powered<SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch02lev1sec4.html#ch02fn04">[4]</A></SUP> <SPAN class=docEmphasis><A name="metal oxide"></A><FONT class=extract>complementary metal oxide semiconductor</FONT></SPAN><FONT class=extract> (CMOS)</FONT> memory. Look at <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch05lev1sec2.html#ch05fig01">Figure 5.1</A> in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch05.html#ch05">Chapter 5</A><A name="PC architecture"></A>, "Character Drivers," for the location of the CMOS in the legacy PC architecture. On embedded <A name=iddle1835></A><A name=iddle2143></A><A name=iddle2843></A><A name=iddle3011></A><A name=iddle4257></A><A name=iddle4572></A><A name=iddle4625></A><A name=iddle4669></A><A name="to the"></A>systems, the RTC might be internal to the processor, or externally connected via the I<SUP>2</SUP>C or SPI buses discussed in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch08.html#ch08">Chapter 8</A>, "The Inter-Integrated Circuit Protocol."</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=ch02fn04>[4]</A></SUP><A name="the life"></A> RTC batteries last for many years and usually outlive the life span of computers, so you should never have to replace them.</P></BLOCKQUOTE>
<P class=docText><A name="do the"></A>You may use the RTC to do the following:</P><A name=ch08pro01></A>
<UL class=doclist start="">
<LI>Read and set the absolute clock, and generate interrupts during clock updates.<BR><BR>
<LI>Generate periodic interrupts with frequencies ranging from 2HZ to 8192HZ.<BR><BR>
<LI>Set alarms<BR><BR></LI></UL>
<P class=docText><A name=or></A><FONT class=extract>Many applications need the concept of absolute time or <SPAN class=docEmphasis>wall time.</SPAN> Because <TT>jiffies</TT></FONT><A name="relative to"></A><FONT class=extract> is relative to the time when the system booted, it does not contain wall time. The kernel maintains wall time in a variable called <TT>xtime</TT>. During boot, <TT>xtime</TT></FONT><A name="When the"></A><FONT class=extract> is initialized to the current wall time by reading the RTC. When the system halts, the wall time is written back to the RTC. You can use <TT>do_gettimeofday()</TT></FONT><A name="to read"></A><FONT class=extract> to read wall time with the highest resolution supported by the hardware:</FONT></P>
<DIV class=docText><PRE><FONT class=extract>#include <LINUX time.h="">
static struct timeval curr_time;
do_gettimeofday(&amp;curr_time);
my_timestamp = cpu_to_le32(curr_time.tv_sec); /* Record timestamp */</FONT></LINUX></PRE></DIV><BR>
<P class=docText><A name="also a"></A><FONT class=extract>There are also a bunch of functions available to user-space code to access wall time. They include the following:</FONT></P>
<UL>
<LI>
<P class=docList><FONT class=extract><TT>time</TT><TT>()</TT></FONT><A name="returns the"></A><FONT class=extract>, which returns the calendar time, or the number of seconds since Epoch (00:00:00 on January 1, 1970)</FONT></P>
<LI>
<P class=docList><FONT class=extract><TT>localtime()</TT>, which returns the calendar time in broken-down format</FONT></P>
<LI>
<P class=docList><FONT class=extract><TT>mktime()</TT>, which does the reverse of <TT>localtime()</TT></FONT></P>
<LI>
<P class=docList><TT><FONT class=extract>gettimeofday()</FONT></TT><A name="your platform"></A><FONT class=extract>, which returns the calendar time with microsecond precision if your platform supports it</FONT></P></LI></UL>
<P class=docText><A name="RTC from"></A><FONT class=extract>Another way to use the RTC from user space is via the character device, <SPAN class=docEmphasis>/dev/rtc.</SPAN></FONT><A name="at a"></A><FONT class=extract> Only one process is allowed to access this device at a time.</FONT></P>
<P class=docText><A name=in></A>We discuss more about RTC drivers in <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch05.html#ch05">Chapter 5</A> and <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch08.html#ch08">Chapter 8</A>. In <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19.html#ch19">Chapter 19</A>, we develop an example user application that uses <SPAN class=docEmphasis>/dev/rtc</SPAN> to perform periodic work with microsecond precision.