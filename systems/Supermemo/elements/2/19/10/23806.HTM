struct platform_device *platform_device_register_simple(<BR>&nbsp;&nbsp;&nbsp;const char *name, int id,<BR>&nbsp;&nbsp;&nbsp;struct resource *res, unsigned int nres); 
<P></P>
<P>You can use platform_device_register_simple() as a one-step call to allocate<BR>and register a device.<PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#114" name=114>114</A><SPAN class=c>/**
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#115" name=115>115</A> * platform_device_register_simple - add a platform-level device and its resources
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#116" name=116>116</A> * @name: base name of the device we're adding
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#117" name=117>117</A> * @id: instance id
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#118" name=118>118</A> * @res: set of resources that needs to be allocated for the device
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#119" name=119>119</A> * @num: number of resources
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#120" name=120>120</A> *
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#121" name=121>121</A> * This function creates a simple platform device that requires minimal
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#122" name=122>122</A> * resource and memory management. Canned release function freeing memory
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#123" name=123>123</A> * allocated for the device allows drivers using such devices to be
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#124" name=124>124</A> * unloaded without waiting for the last reference to the device to be
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#125" name=125>125</A> * dropped.
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#126" name=126>126</A> *
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#127" name=127>127</A> * This interface is primarily intended for use with legacy drivers which
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#128" name=128>128</A> * probe hardware directly.  Because such drivers create sysfs device nodes
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#129" name=129>129</A> * themselves, rather than letting system infrastructure handle such device
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#130" name=130>130</A> * enumeration tasks, they don't fully conform to the Linux driver model.
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#131" name=131>131</A> * In particular, when such drivers are built as modules, they can't be
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#132" name=132>132</A> * "hotplugged".
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#133" name=133>133</A> *
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#134" name=134>134</A> * Returns &amp;struct platform_device pointer on success, or ERR_PTR() on error.
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#135" name=135>135</A> */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#136" name=136>136</A><B>static</B> <B>inline</B> <B>struct</B> <A class=d href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#platform_device">platform_device</A> *<A class=xf name=platform_device_register_simple></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=platform_device_register_simple&amp;project=linux-4.5">platform_device_register_simple</A>(
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#137" name=137>137</A>		<B>const</B> <B>char</B> *<A href="http://172.21.12.145:8080/source/s?defs=name&amp;project=linux-4.5">name</A>, <B>int</B> <A href="http://172.21.12.145:8080/source/s?defs=id&amp;project=linux-4.5">id</A>,
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#138" name=138>138</A>		<B>const</B> <B>struct</B> <A class=d href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#resource">resource</A> *<A href="http://172.21.12.145:8080/source/s?defs=res&amp;project=linux-4.5">res</A>, <B>unsigned</B> <B>int</B> <A href="http://172.21.12.145:8080/source/s?defs=num&amp;project=linux-4.5">num</A>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#139" name=139>139</A>{
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#140" name=140>140</A>	<B>return</B> <A class=d href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#platform_device_register_resndata">platform_device_register_resndata</A>(<A href="http://172.21.12.145:8080/source/s?defs=NULL&amp;project=linux-4.5">NULL</A>, <A href="http://172.21.12.145:8080/source/s?defs=name&amp;project=linux-4.5">name</A>, <A href="http://172.21.12.145:8080/source/s?defs=id&amp;project=linux-4.5">id</A>,
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#141" name=141>141</A>			<A href="http://172.21.12.145:8080/source/s?defs=res&amp;project=linux-4.5">res</A>, <A href="http://172.21.12.145:8080/source/s?defs=num&amp;project=linux-4.5">num</A>, <A href="http://172.21.12.145:8080/source/s?defs=NULL&amp;project=linux-4.5">NULL</A>, 0);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.5/include/linux/platform_device.h#142" name=142>142</A>}</PRE>