<P class=docText><FONT class=extract>System timers interrupt the processor (or "pop") at programmable frequencies. This frequency, or the number of timer ticks per second, is contained in the kernel variable <TT>HZ</TT>.</FONT> <FONT class=extract>Choosing a value for <TT>HZ</TT> is a trade-off. A large <TT>HZ</TT></FONT><A name="hence better"></A><FONT class=extract> results in finer timer granularity, and hence better scheduling resolution. However, bigger values of <TT>HZ</TT></FONT><A name="more cycles"></A><FONT class=extract> also result in larger overhead and higher power consumption, because more cycles are burnt in the timer interrupt context.</FONT></P><A name=ch02note01></A>
<DIV class=docNote>
<P>
<P class=docText>The value of <TT>HZ</TT> is architecture-dependent. On x86 systems, <TT>HZ</TT><A name="kernels by"></A> used to be set to 100 in 2.4 kernels by default. With 2.6, this value changed to 1000, but with 2.6.13, it was lowered to 250. On ARM-based platforms, 2.6 kernels set <TT>HZ</TT><A name=for></A> to 100. With current kernels, you can choose a value for <TT>HZ</TT><A name="build time"></A> at build time through the configuration menu. The default setting for this option depends on your distribution.</P>
<P class=docText><FONT class=extract>The 2.6.21 kernel introduced support for a tickless kernel (<TT>CONFIG_NO_HZ</TT></FONT><A name="system implementation"></A><FONT class=extract>), which dynamically triggers timer interrupts depending on system load.</FONT> The tickless system implementation is outside the scope of this chapter.</P></DIV>