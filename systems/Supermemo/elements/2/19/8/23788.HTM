Bus-specific drivers should include a generic struct device_driver in<BR>the definition of the bus-specific driver. Like this: 
<P></P>
<P><SPAN class=cloze>[...]</SPAN>; </P>
<P>A definition that included bus-specific fields would look like<BR>(using the eepro100 driver again):</P>
<P>static struct pci_driver eepro100_driver = {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .id_table&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = eepro100_pci_tbl,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .driver&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = {<BR>&nbsp;&nbsp;.name&nbsp;&nbsp;= "eepro100",<BR>&nbsp;&nbsp;.bus&nbsp;&nbsp;= &amp;pci_bus_type,<BR>&nbsp;&nbsp;.probe&nbsp;&nbsp;= eepro100_probe,<BR>&nbsp;&nbsp;.remove&nbsp;&nbsp;= eepro100_remove,<BR>&nbsp;&nbsp;.suspend&nbsp;= eepro100_suspend,<BR>&nbsp;&nbsp;.resume&nbsp;&nbsp;= eepro100_resume,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },<BR>};</P>
<P>Some may find the syntax of embedded struct initialization awkward or<BR>even a bit ugly. So far, it's the best way we've found to do what we want...