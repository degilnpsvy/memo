<H4 id=title-ID0EUQPM class=docSection2Title>Checking HLT Instruction</H4>
<P class=docText><A name="of hardware"></A>Because the Linux kernel is supported on a variety of hardware platforms, the boot code checks for architecture-dependent bugs. Verifying the sanity of the <SPAN class=docEmphasis>halt</SPAN> (HLT) instruction is one such check.</P>
<P class=docText><A name="processors puts"></A><FONT class=extract>The HLT instruction supported by x86 processors puts the CPU into a low-power sleep mode that continues until the next hardware interrupt occurs.</FONT> The kernel uses the HLT instruction when it wants to put the CPU in the idle state (see function <TT>cpu_idle()</TT> defined in <SPAN class=docEmphasis>arch/x86/kernel/process_32.c</SPAN>).</P>
<P class=docText>For problematic CPUs, the <TT>no-hlt</TT><A name=If></A> kernel command-line argument can be used to disable the HLT instruction. If <TT>no-hlt</TT><A name="than keep"></A> is turned on, the kernel busy-waits while it's idle, rather than keep the CPU cool by putting it in the HLT state.</P>
<P class=docText><A name="startup code"></A><FONT class=extract>The preceding boot message is generated when the startup code in <SPAN class=docEmphasis>init/main.c</SPAN> calls <TT>check_bugs()</TT></FONT><A name=in></A><FONT class=extract> defined in <SPAN class=docEmphasis>include/asm-your-arch/bugs.h</SPAN>.</FONT>