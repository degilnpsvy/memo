# target-arm/arm_ldst.h: 
<P></P>
<P>#ifndef ARM_LDST_H<BR>#define ARM_LDST_H</P>
<P>#include "exec/cpu_ldst.h"<BR>#include "qemu/bswap.h"</P>
<P>/* Load an instruction and return it in the standard little-endian order */<BR>static inline uint32_t arm_ldl_code(CPUARMState *env, target_ulong addr,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool do_swap)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint32_t insn = cpu_ldl_code(env, addr);<BR>&nbsp;&nbsp;&nbsp; if (do_swap) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return bswap32(insn);<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return insn;<BR>}</P>
<P>/* Ditto, for a halfword (Thumb) instruction */<BR>static inline uint16_t arm_lduw_code(CPUARMState *env, target_ulong addr,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bool do_swap)<BR>{<BR>&nbsp;&nbsp;&nbsp; uint16_t insn = cpu_lduw_code(env, addr);<BR>&nbsp;&nbsp;&nbsp; if (do_swap) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return bswap16(insn);<BR>&nbsp;&nbsp;&nbsp; }<BR>&nbsp;&nbsp;&nbsp; return insn;<BR>}</P>
<P>#endif