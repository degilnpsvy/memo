<H3><SPAN class=mw-headline>Byte </SPAN></H3>
<TABLE border=1>
<TBODY>
<TR>
<TD><TT>tcg_gen_bswap16_tl(ret, arg1);</TT> </TD>
<TD><A title=http://en.wikipedia.org/wiki/Endianness class="external text" href="http://en.wikipedia.org/wiki/Endianness" rel=nofollow>Byte swap a 16bit register</A> </TD>
<TD>ret = ((arg1 &amp; 0xff00) &gt;&gt; 8) | ((arg1 &amp; 0xff) &lt;&lt; 8) </TD></TR>
<TR>
<TD><TT>tcg_gen_bswap32_tl(ret, arg1);</TT> </TD>
<TD><A title=http://en.wikipedia.org/wiki/Endianness class="external text" href="http://en.wikipedia.org/wiki/Endianness" rel=nofollow>Byte swap a 32bit register</A> </TD>
<TD>ret = ...see bswap16 and extend to 32bits... </TD></TR>
<TR>
<TD><TT>tcg_gen_bswap64_tl(ret, arg1);</TT> </TD>
<TD><A title=http://en.wikipedia.org/wiki/Endianness class="external text" href="http://en.wikipedia.org/wiki/Endianness" rel=nofollow>Byte swap a 64bit register</A> </TD>
<TD>ret = ...see bswap32 and extend to 64bits... </TD></TR>
<TR>
<TD><TT>tcg_gen_ext8s_tl(ret, arg1);</TT> </TD>
<TD>Sign extend an 8bit register </TD>
<TD>ret = (int8_t)arg1 </TD></TR>
<TR>
<TD><TT>tcg_gen_ext8u_tl(ret, arg1);</TT> </TD>
<TD>Zero extend an 8bit register </TD>
<TD>ret = (uint8_t)arg1 </TD></TR>
<TR>
<TD><TT>tcg_gen_ext16s_tl(ret, arg1);</TT> </TD>
<TD>Sign extend an 16bit register </TD>
<TD>ret = (int16_t)arg1 </TD></TR>
<TR>
<TD><TT>tcg_gen_ext16u_tl(ret, arg1);</TT> </TD>
<TD>Zero extend an 16bit register </TD>
<TD>ret = (uint16_t)arg1 </TD></TR>
<TR>
<TD><TT>tcg_gen_ext32s_tl(ret, arg1);</TT> </TD>
<TD>Sign extend an 32bit register </TD>
<TD>ret = (int32_t)arg1 </TD></TR>
<TR>
<TD><TT>tcg_gen_ext32u_tl(ret, arg1);</TT> </TD>
<TD>Zero extend an 32bit register </TD>
<TD>ret = (uint32_t)arg1 </TD></TR></TBODY></TABLE>