CPUArchState *cpu_copy(CPUArchState *env); 
<P></P>
<P>/* Flags for use in ENV-&gt;INTERRUPT_PENDING.</P>
<P>&nbsp;&nbsp; The numbers assigned here are non-sequential in order to preserve<BR>&nbsp;&nbsp; binary compatibility with the vmstate dump.&nbsp; Bit 0 (0x0001) was<BR>&nbsp;&nbsp; previously used for CPU_INTERRUPT_EXIT, and is cleared when loading<BR>&nbsp;&nbsp; the vmstate dump.&nbsp; */</P>
<P>/* External hardware interrupt pending.&nbsp; This is typically used for<BR>&nbsp;&nbsp; interrupts from devices.&nbsp; */<BR>#define CPU_INTERRUPT_HARD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x0002</P>
<P>/* Exit the current TB.&nbsp; This is typically used when some system-level device<BR>&nbsp;&nbsp; makes some change to the memory mapping.&nbsp; E.g. the a20 line change.&nbsp; */<BR>#define CPU_INTERRUPT_EXITTB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x0004</P>
<P>/* Halt the CPU.&nbsp; */<BR>#define CPU_INTERRUPT_HALT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x0020</P>
<P>/* Debug event pending.&nbsp; */<BR>#define CPU_INTERRUPT_DEBUG&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x0080</P>
<P>/* Reset signal.&nbsp; */<BR>#define CPU_INTERRUPT_RESET&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0x0400</P>
<P>/* Several target-specific external hardware interrupts.&nbsp; Each target/cpu.h<BR>&nbsp;&nbsp; should define proper names based on these defines.&nbsp; */<BR>#define CPU_INTERRUPT_TGT_EXT_0&nbsp;&nbsp; 0x0008<BR>#define CPU_INTERRUPT_TGT_EXT_1&nbsp;&nbsp; 0x0010<BR>#define CPU_INTERRUPT_TGT_EXT_2&nbsp;&nbsp; 0x0040<BR>#define CPU_INTERRUPT_TGT_EXT_3&nbsp;&nbsp; 0x0200<BR>#define CPU_INTERRUPT_TGT_EXT_4&nbsp;&nbsp; 0x1000</P>
<P>/* Several target-specific internal interrupts.&nbsp; These differ from the<BR>&nbsp;&nbsp; preceding target-specific interrupts in that they are intended to<BR>&nbsp;&nbsp; originate from within the cpu itself, typically in response to some<BR>&nbsp;&nbsp; instruction being executed.&nbsp; These, therefore, are not masked while<BR>&nbsp;&nbsp; single-stepping within the debugger.&nbsp; */<BR>#define CPU_INTERRUPT_TGT_INT_0&nbsp;&nbsp; 0x0100<BR>#define CPU_INTERRUPT_TGT_INT_1&nbsp;&nbsp; 0x0800<BR>#define CPU_INTERRUPT_TGT_INT_2&nbsp;&nbsp; 0x2000</P>
<P>/* First unused bit: 0x4000.&nbsp; */</P>
<P>/* The set of all bits that should be masked when single-stepping.&nbsp; */<BR>#define CPU_INTERRUPT_SSTEP_MASK \<BR>&nbsp;&nbsp;&nbsp; (CPU_INTERRUPT_HARD&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \<BR>&nbsp;&nbsp;&nbsp;&nbsp; | CPU_INTERRUPT_TGT_EXT_0&nbsp;&nbsp; \<BR>&nbsp;&nbsp;&nbsp;&nbsp; | CPU_INTERRUPT_TGT_EXT_1&nbsp;&nbsp; \<BR>&nbsp;&nbsp;&nbsp;&nbsp; | CPU_INTERRUPT_TGT_EXT_2&nbsp;&nbsp; \<BR>&nbsp;&nbsp;&nbsp;&nbsp; | CPU_INTERRUPT_TGT_EXT_3&nbsp;&nbsp; \<BR>&nbsp;&nbsp;&nbsp;&nbsp; | CPU_INTERRUPT_TGT_EXT_4)