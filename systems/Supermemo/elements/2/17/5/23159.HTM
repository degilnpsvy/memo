<H3 id=-100000 class=docSection1Title>Looking at the Sources</H3>
<P class=docText><A name=iddle2048></A><A name=iddle2324></A><A name=iddle2366></A><A name=iddle2450></A><A name=iddle2458></A><A name=iddle2460></A><A name=iddle3013></A><A name=iddle3017></A><A name=iddle3081></A><A name=iddle3130></A><A name=iddle3353></A><A name=iddle3356></A><A name=iddle3361></A><A name=iddle3879></A><A name=iddle3880></A><A name=iddle3882></A><A name=iddle3993></A><A name=iddle4103></A><A name=iddle4460></A><A name=iddle4470></A><A name=iddle4477></A><A name=iddle4534></A><A name=iddle4545></A><A name=iddle4549></A><A name=iddle4563></A><A name="The Linux"></A>The Linux scheduler lives in <SPAN class=docEmphasis>kernel/sched.c.</SPAN><A name="generic implementation"></A> The SCSI generic implementation is in <SPAN class=docEmphasis>drivers/scsi/sg.c</SPAN>, and <SPAN class=docEmphasis>drivers/usb/core/devio.c</SPAN><A name="user space"></A> is responsible for supporting user space USB drivers. The i2c-dev driver that enables support for user mode I<SUP>2</SUP><A name=in></A>C programming resides in <SPAN class=docEmphasis>drivers/i2c/i2c-dev.c</SPAN>.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec8.html#ch19tab01">Table 19.1</A> contains the main data structures used in this chapter, and <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec8.html#ch19tab02">Table 19.2</A><A name="driver development"></A> lists the functions that we used to aid user mode driver development.</P><A name=ch19tab01></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 19.1. Summary of Data Structures</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=150>
<COL width=100>
<COL width=300></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Data Structure</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location (User Space)</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>sched_param</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>/usr/include/bits/sched.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Information related to scheduling priorities.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>fb_var_screeninfo</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>/usr/include/linux/fb.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="frame buffers"></A>Used to operate on frame buffers. Contains variable screen information such as resolution and pixclock. See <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch11.html#ch11">Chapter 11</A> for more details.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>sg_io_hdr_t</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>/usr/include/scsi/sg.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Information to manage SCSI generic devices.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>usb_dev_handle
usb_bus
usb_device</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left>Header files in the libusb package.</TD>
<TD class=docTableCell vAlign=top align=left><A name="user space"></A>Structures to operate on USB devices from user space.</TD></TR></TBODY></TABLE></P><BR><A name=ch19tab02></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 19.2. Summary of User-Space Functions</H5></CAPTION>
<COLGROUP span=2 align=left>
<COL width=250>
<COL width=300></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>User-Space Function</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>sched_getparam()</TT></TD>
<TD class=docTableCell vAlign=top align=left><A name="a given"></A>Obtains scheduling parameters associated with a given process</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>sched_setscheduler()</TT></TD>
<TD class=docTableCell vAlign=top align=left>Sets scheduling parameters associated with a given process</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>mlockall()</TT></TD>
<TD class=docTableCell vAlign=top align=left><A name="and thus"></A>Locks pages of the calling process in memory and thus avoids page faults</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>ioperm()</TT></TD>
<TD class=docTableCell vAlign=top align=left>Controls access permissions to the first <TT>0x3FF</TT> I/O ports</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>iopl()</TT></TD>
<TD class=docTableCell vAlign=top align=left>Controls access privileges to all I/O ports</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>outb()/outw()/outl()</TT></TD>
<TD class=docTableCell vAlign=top align=left>Outputs a byte/word/long to a specified port</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>inb()/inw()/inl()</TT></TD>
<TD class=docTableCell vAlign=top align=left>Inputs a byte/word/long from a specified port</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>mmap()</TT></TD>
<TD class=docTableCell vAlign=top align=left><A name="region with"></A>Associates a file or a device address region with a chunk of user virtual memory</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>msync()</TT></TD>
<TD class=docTableCell vAlign=top align=left><A name="Flushes changes"></A>Flushes changes made to an mmap-ed memory area</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>munmap()</TT></TD>
<TD class=docTableCell vAlign=top align=left>Reverse of <TT>mmap()</TT></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>usb_init()
usb_find_buses()
usb_find_devices()
usb_open()
usb_control_msg()
usb_close()</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left><A name=iddle2300></A><A name=iddle2307></A><A name=iddle4461></A><A name=iddle4466></A><A name=iddle4488></A><A name=iddle4489></A><A name=iddle4499></A><A name=iddle4502></A><A name="by the"></A>Functions provided by the libusb library to help you operate over usbfs</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<DIV class=docText><PRE>i2c_smbus_read_byte_data()
i2c_smbus_write_word_data()</PRE></DIV><BR></TD>
<TD class=docTableCell vAlign=top align=left>User-space I<SUP>2</SUP><A name="as part"></A>C/SMBus data access routines available as part of the lm-sensors package</TD></TR></TBODY></TABLE>