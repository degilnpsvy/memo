<H2 id=title-ID0EQJAO class=docChapterTitle>Chapter 19. Drivers in User Space</H2><A name=ch19fe01></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=none width="98%" border=1>
<TBODY>
<TR>
<TD>
<H4 id=title-ID0EVJAO class=docSection2Title><A name="In This"></A><FONT size=5>In This Chapter</FONT></H4></TD></TR>
<TR>
<TD>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=none frame=void>
<COLGROUP span=2 align=left><FONT size=5>
<COL width=400>
<COL width=50></FONT></COLGROUP>
<THEAD><FONT size=5></FONT></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec1.html#ch19lev1sec1"><FONT size=5>Process Scheduling and Response Times</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec1.html#ch19lev1sec1"><FONT size=5>553</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec2.html#ch19lev1sec2"><FONT size=5>Accessing I/O Regions</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec2.html#ch19lev1sec2"><FONT size=5>558</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec3.html#ch19lev1sec3"><FONT size=5>Accessing Memory Regions</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec3.html#ch19lev1sec3"><FONT size=5>562</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec4.html#ch19lev1sec4"><FONT size=5>User Mode SCSI</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec4.html#ch19lev1sec4"><FONT size=5>565</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec5.html#ch19lev1sec5"><FONT size=5>User Mode USB</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec5.html#ch19lev1sec5"><FONT size=5>567</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec6.html#ch19lev1sec6"><FONT size=5>User Mode I<SUP>2</SUP>C</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec6.html#ch19lev1sec6"><FONT size=5>571</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec7.html#ch19lev1sec7"><FONT size=5>UIO</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec7.html#ch19lev1sec7"><FONT size=5>573</FONT></A></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left>
<UL>
<LI>
<P class=docList><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec8.html#ch19lev1sec8"><FONT size=5>Looking at the Sources</FONT></A></P></LI></UL></TD>
<TD class=docTableCell vAlign=top align=left><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch19lev1sec8.html#ch19lev1sec8"><FONT size=5>574</FONT></A></TD></TR></TBODY></TABLE></P><BR></TD></TR></TBODY></TABLE></P>
<P class=docText><FONT size=5></FONT></P><A name=ch19sb01></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD>
<P class=docText><A name=iddle4550></A><A name="drivers prefer"></A><FONT size=5>Most device drivers prefer to lead a privileged life inside the kernel, but some are at home in the indeterministic world outside. Several kernel subsystems, such as SCSI, USB, and I<SUP>2</SUP></FONT><A name="support for"></A><FONT size=5>C, offer some level of support for user mode drivers, so you might be able to control those devices without writing a single line of kernel code.</FONT></P>
<P class=docText><A name="the inclement"></A><FONT size=5>In spite of the inclement weather in user land, user mode drivers enjoy certain advantages. They are easy to develop and debug. You won't have to reboot the system every time you dereference a dangling pointer. Some user mode drivers will even work across operating systems if the device subsystem enjoys the services of a standard user-space programming library. Here are some rules of thumb to help decide whether your driver should reside in user space:</FONT></P>
<UL>
<LI>
<P class=docList><A name="should probably"></A><FONT size=5>Apply the possibility test. What can be done in user space should probably stay in user space.</FONT></P>
<LI>
<P class=docList><A name="talk to"></A><FONT size=5>If you have to talk to a large number of slow devices and if performance requirements are modest, explore the possibility of implementing the drivers in user space. If you have time-critical performance requirements, stay inside the kernel.</FONT></P>
<LI>
<P class=docList><A name="kernel APIs"></A><FONT size=5>If your code needs the services of kernel APIs, access to kernel variables, or is intertwined with interrupt handling, it has a strong case for being in kernel space.</FONT></P>
<LI>
<P class=docList><A name="code does"></A><FONT size=5>If much of what your code does can be construed as policy, user land might be its logical residence.</FONT></P>
<LI>
<P class=docList><A name="invoke your"></A><FONT size=5>If the rest of the kernel needs to invoke your code's services, it's a candidate for staying inside the kernel.</FONT></P>
<LI>
<P class=docList><FONT size=5>You can't easily do floating-point arithmetic inside the kernel. <SPAN class=docEmphasis>Floating-point unit</SPAN> (FPU) instructions can, however, be used from user space.</FONT></P></LI></UL>
<P class=docText><A name="Many important"></A><FONT size=5>That said, you can't accomplish too much from user space. Many important device classes, such as storage media and network adapters, cannot be driven from user land. But even when a kernel driver is the appropriate solution, it's a good idea to model and test as much code as you can in user space before moving it to kernel space. The testing cycle is faster, and it's easier to traverse all possible code paths and ensure that they are clean.</FONT></P>
<P class=docText><A name="In this"></A><FONT size=5>In this chapter, the term <SPAN class=docEmphasis>user space driver</SPAN> (or <SPAN class=docEmphasis>user mode driver</SPAN></FONT><A name="in a"></A><FONT size=5>) is used in a generic sense that does not strictly conform to the semantics of a driver implied thus far in the book. An application is considered to be a user mode driver if it's a candidate for being implemented inside the kernel, too.</FONT></P>
<P class=docText><A name="subsystem that"></A><FONT size=5>The 2.6 kernel overhauled a subsystem that is of special interest to user space drivers. The new process scheduler offers huge response-time benefits to user mode code, so let's start with that.</FONT></P></TD></TR></TBODY></TABLE>