<H3 id=title-IDALUYKH class=docSection1Title>14.6. Chapter Summary</H3>
<UL>
<LI>
<P class=docList>Linux kernel debugging presents many complexities, especially in a cross-development environment. Understanding how to navigate these complexities is the key to successful kernel debugging.</P></LI>
<LI>
<P class=docList>KGDB is a very useful kernel-level <TT>gdb</TT> stub that enables direct symbolic source-level debugging inside the Linux kernel and device drivers. It uses the <TT>gdb</TT> remote protocol to communicate to your host-based cross-gdb.</P></LI>
<LI>
<P class=docList>Understanding (and minimizing) compiler optimizations helps make sense of seemingly strange debugger behavior when stepping through compiler-optimized code.</P></LI>
<LI>
<P class=docList><TT>gdb</TT> supports user-defined commands, which can be very useful for automating tedious debugging tasks such as iterating kernel linked lists and accessing complex variables.</P></LI>
<LI>
<P class=docList>Kernel-loadable modules present their own challenges to source-level debugging. The module's initialization routine can be debugged by placing a breakpoint in <TT>module.c</TT> at the call to <TT>module-&gt;init()</TT>.</P></LI>
<LI>
<P class=docList><TT>printk</TT> and the Magic SysReq key provide additional tools to help isolate problems during kernel development and debugging.</P></LI>
<LI>
<P class=docList>Hardware-assisted debugging via a JTAG probe enables debugging Flash or ROM resident code where other debugging methods can be cumbersome or otherwise impossible.</P></LI>
<LI>
<P class=docList>Enabling <TT>CONFIG_SERIAL_TEXT_DEBUG</TT> on architectures where this feature is supported is a powerful tool for debugging a new kernel port.</P></LI>
<LI>
<P class=docList>Examining the <TT>printk log_buf</TT> often leads to the cause of a silent kernel crash on boot.</P></LI>
<LI>
<P class=docList><TT>KGDB</TT> passes control to <TT>gdb</TT> on a kernel panic, enabling you to examine a backtrace and isolate the cause of the kernel panic.</P></LI></UL><A name=ch14lev2sec16></A>
<H4 id=title-IDARWYKH class=docSection2Title>14.6.1. Suggestions for Additional Reading</H4>
<BLOCKQUOTE>
<P class=docText><SPAN class=docEmphasis>Linux Kernel Development</SPAN>, 2nd Edition <BR>Robert Love <BR>Novell Press, 2005</P></BLOCKQUOTE>
<BLOCKQUOTE>
<P class=docText><SPAN class=docEmphasis>The Linux Kernel Primer</SPAN> <BR>Claudia Salzberg Rodriguez et al. <BR>Prentice Hall, 2005</P></BLOCKQUOTE>
<BLOCKQUOTE>
<P class=docText>"Using the GNU Compiler Collection" <BR>Richard M. Stallman and the GCC Developer Community <BR>GNU Press, a division of Free Software Foundation <BR><A class=docLink href="http://gcc.gnu.org/onlinedocs/" target=_blank>http://gcc.gnu.org/onlinedocs/</A></P></BLOCKQUOTE>
<BLOCKQUOTE>
<P class=docText>KGDB Sourceforge home page <BR><A class=docLink href="http://sourceforge.net/projects/KGDB" target=_blank>http://sourceforge.net/projects/KGDB</A></P></BLOCKQUOTE>
<BLOCKQUOTE>
<P class=docText>Debugging with GDB <BR>Richard Stallman, Roland Pesch, Stan Shebs, et al. <BR>Free Software Foundation <BR><A class=docLink href="http://www.gnu.org/software/gdb/documentation/" target=_blank>www.gnu.org/software/gdb/documentation/</A></P></BLOCKQUOTE>
<BLOCKQUOTE>
<P class=docText>Tool Interface Standards <BR>DWARF Debugging Information Format Specification <BR>Version 2.0 <BR>TIS Committee, May 1995</P></BLOCKQUOTE>