# Documentation/kernel-parameters.txt
<P></P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Kernel Parameters<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ~~~~~~~~~~~~~~~~~</P>
<P></P>
<P>The following is a consolidated list of the kernel parameters as implemented<BR>(mostly) by the __setup() macro and sorted into English Dictionary order<BR>(defined as ignoring all punctuation and sorting digits before letters in a<BR>case insensitive manner), and with descriptions where known.</P>
<P>Module parameters for loadable modules are specified only as the<BR>parameter name with optional '=' and value as appropriate, such as:</P>
<P>&nbsp;modprobe usbcore blinkenlights=1</P>
<P>Module parameters for modules that are built into the kernel image<BR>are specified on the kernel command line with the module name plus<BR>'.' plus parameter name, with '=' and value if appropriate, such as:</P>
<P>&nbsp;usbcore.blinkenlights=1</P>
<P>Hyphens (dashes) and underscores are equivalent in parameter names, so<BR>&nbsp;log_buf_len=1M print-fatal-signals=1<BR>can also be entered as<BR>&nbsp;log-buf-len=1M print_fatal_signals=1</P>
<P><BR>This document may not be entirely up to date and comprehensive. The command<BR>"modinfo -p ${modulename}" shows a current list of all parameters of a loadable<BR>module. Loadable modules, after being loaded into the running kernel, also<BR>reveal their parameters in /sys/module/${modulename}/parameters/. Some of these<BR>parameters may be changed at runtime by the command<BR>"echo -n ${value} &gt; /sys/module/${modulename}/parameters/${parm}".</P>
<P>The parameters listed below are only valid if certain kernel build options were<BR>enabled and if respective hardware is present. The text in square brackets at<BR>the beginning of each description states the restrictions within which a<BR>parameter is applicable:</P>
<P>&nbsp;ACPI&nbsp;ACPI support is enabled.<BR>&nbsp;AGP&nbsp;AGP (Accelerated Graphics Port) is enabled.<BR>&nbsp;ALSA&nbsp;ALSA sound support is enabled.<BR>&nbsp;APIC&nbsp;APIC support is enabled.<BR>&nbsp;APM&nbsp;Advanced Power Management support is enabled.<BR>&nbsp;ARM&nbsp;ARM architecture is enabled.<BR>&nbsp;AVR32&nbsp;AVR32 architecture is enabled.<BR>&nbsp;AX25&nbsp;Appropriate AX.25 support is enabled.<BR>&nbsp;BLACKFIN Blackfin architecture is enabled.<BR>&nbsp;CLK&nbsp;Common clock infrastructure is enabled.<BR>&nbsp;CMA&nbsp;Contiguous Memory Area support is enabled.<BR>&nbsp;DRM&nbsp;Direct Rendering Management support is enabled.<BR>&nbsp;DYNAMIC_DEBUG Build in debug messages and enable them at runtime<BR>&nbsp;EDD&nbsp;BIOS Enhanced Disk Drive Services (EDD) is enabled<BR>&nbsp;EFI&nbsp;EFI Partitioning (GPT) is enabled<BR>&nbsp;EIDE&nbsp;EIDE/ATAPI support is enabled.<BR>&nbsp;EVM&nbsp;Extended Verification Module<BR>&nbsp;FB&nbsp;The frame buffer device is enabled.<BR>&nbsp;FTRACE&nbsp;Function tracing enabled.<BR>&nbsp;GCOV&nbsp;GCOV profiling is enabled.<BR>&nbsp;HW&nbsp;Appropriate hardware is enabled.<BR>&nbsp;IA-64&nbsp;IA-64 architecture is enabled.<BR>&nbsp;IMA&nbsp;&nbsp;&nbsp;&nbsp; Integrity measurement architecture is enabled.<BR>&nbsp;IOSCHED&nbsp;More than one I/O scheduler is enabled.<BR>&nbsp;IP_PNP&nbsp;IP DHCP, BOOTP, or RARP is enabled.<BR>&nbsp;IPV6&nbsp;IPv6 support is enabled.<BR>&nbsp;ISAPNP&nbsp;ISA PnP code is enabled.<BR>&nbsp;ISDN&nbsp;Appropriate ISDN support is enabled.<BR>&nbsp;JOY&nbsp;Appropriate joystick support is enabled.<BR>&nbsp;KGDB&nbsp;Kernel debugger support is enabled.<BR>&nbsp;KVM&nbsp;Kernel Virtual Machine support is enabled.<BR>&nbsp;LIBATA&nbsp; Libata driver is enabled<BR>&nbsp;LP&nbsp;Printer support is enabled.<BR>&nbsp;LOOP&nbsp;Loopback device support is enabled.<BR>&nbsp;M68k&nbsp;M68k architecture is enabled.<BR>&nbsp;&nbsp;&nbsp;These options have more detailed description inside of<BR>&nbsp;&nbsp;&nbsp;Documentation/m68k/kernel-options.txt.<BR>&nbsp;MDA&nbsp;MDA console support is enabled.<BR>&nbsp;MIPS&nbsp;MIPS architecture is enabled.<BR>&nbsp;MOUSE&nbsp;Appropriate mouse support is enabled.<BR>&nbsp;MSI&nbsp;Message Signaled Interrupts (PCI).<BR>&nbsp;MTD&nbsp;MTD (Memory Technology Device) support is enabled.<BR>&nbsp;NET&nbsp;Appropriate network support is enabled.<BR>&nbsp;NUMA&nbsp;NUMA support is enabled.<BR>&nbsp;NFS&nbsp;Appropriate NFS support is enabled.<BR>&nbsp;OSS&nbsp;OSS sound support is enabled.<BR>&nbsp;PV_OPS&nbsp;A paravirtualized kernel is enabled.<BR>&nbsp;PARIDE&nbsp;The ParIDE (parallel port IDE) subsystem is enabled.<BR>&nbsp;PARISC&nbsp;The PA-RISC architecture is enabled.<BR>&nbsp;PCI&nbsp;PCI bus support is enabled.<BR>&nbsp;PCIE&nbsp;PCI Express support is enabled.<BR>&nbsp;PCMCIA&nbsp;The PCMCIA subsystem is enabled.<BR>&nbsp;PNP&nbsp;Plug &amp; Play support is enabled.<BR>&nbsp;PPC&nbsp;PowerPC architecture is enabled.<BR>&nbsp;PPT&nbsp;Parallel port support is enabled.<BR>&nbsp;PS2&nbsp;Appropriate PS/2 support is enabled.<BR>&nbsp;RAM&nbsp;RAM disk support is enabled.<BR>&nbsp;S390&nbsp;S390 architecture is enabled.<BR>&nbsp;SCSI&nbsp;Appropriate SCSI support is enabled.<BR>&nbsp;&nbsp;&nbsp;A lot of drivers have their options described inside<BR>&nbsp;&nbsp;&nbsp;the Documentation/scsi/ sub-directory.<BR>&nbsp;SECURITY Different security models are enabled.<BR>&nbsp;SELINUX SELinux support is enabled.<BR>&nbsp;APPARMOR AppArmor support is enabled.<BR>&nbsp;SERIAL&nbsp;Serial support is enabled.<BR>&nbsp;SH&nbsp;SuperH architecture is enabled.<BR>&nbsp;SMP&nbsp;The kernel is an SMP kernel.<BR>&nbsp;SPARC&nbsp;Sparc architecture is enabled.<BR>&nbsp;SWSUSP&nbsp;Software suspend (hibernation) is enabled.<BR>&nbsp;SUSPEND&nbsp;System suspend states are enabled.<BR>&nbsp;TPM&nbsp;TPM drivers are enabled.<BR>&nbsp;TS&nbsp;Appropriate touchscreen support is enabled.<BR>&nbsp;UMS&nbsp;USB Mass Storage support is enabled.<BR>&nbsp;USB&nbsp;USB support is enabled.<BR>&nbsp;USBHID&nbsp;USB Human Interface Device support is enabled.<BR>&nbsp;V4L&nbsp;Video For Linux support is enabled.<BR>&nbsp;VMMIO&nbsp;&nbsp; Driver for memory mapped virtio devices is enabled.<BR>&nbsp;VGA&nbsp;The VGA console has been enabled.<BR>&nbsp;VT&nbsp;Virtual terminal support is enabled.<BR>&nbsp;WDT&nbsp;Watchdog support is enabled.<BR>&nbsp;XT&nbsp;IBM PC/XT MFM hard disk support is enabled.<BR>&nbsp;X86-32&nbsp;X86-32, aka i386 architecture is enabled.<BR>&nbsp;X86-64&nbsp;X86-64 architecture is enabled.<BR>&nbsp;&nbsp;&nbsp;More X86-64 boot options can be found in<BR>&nbsp;&nbsp;&nbsp;Documentation/x86/x86_64/boot-options.txt .<BR>&nbsp;X86&nbsp;Either 32-bit or 64-bit x86 (same as X86-32+X86-64)<BR>&nbsp;XEN&nbsp;Xen support is enabled</P>
<P>In addition, the following text indicates that the option:</P>
<P>&nbsp;BUGS=&nbsp;Relates to possible processor bugs on the said processor.<BR>&nbsp;KNL&nbsp;Is a kernel start-up parameter.<BR>&nbsp;BOOT&nbsp;Is a boot loader parameter.</P>
<P>Parameters denoted with BOOT are actually interpreted by the boot<BR>loader, and have no meaning to the kernel directly.<BR>Do not modify the syntax of boot loader parameters without extreme<BR>need or coordination with &lt;Documentation/x86/boot.txt&gt;.</P>
<P>There are also arch-specific kernel-parameters not documented here.<BR>See for example &lt;Documentation/x86/x86_64/boot-options.txt&gt;.</P>
<P>Note that ALL kernel parameters listed below are CASE SENSITIVE, and that<BR>a trailing = on the name of any parameter states that that parameter will<BR>be entered as an environment variable, whereas its absence indicates that<BR>it will appear as a kernel argument readable via /proc/cmdline by programs<BR>running once the system is up.</P>
<P>The number of kernel parameters is not limited, but the length of the<BR>complete command line (parameters including spaces etc.) is limited to<BR>a fixed number of characters. This limit depends on the architecture<BR>and is between 256 and 4096 characters. It is defined in the file<BR>./include/asm/setup.h as COMMAND_LINE_SIZE.</P>
<P>Finally, the [KMG] suffix is commonly described after a number of kernel<BR>parameter values. These 'K', 'M', and 'G' letters represent the _binary_<BR>multipliers 'Kilo', 'Mega', and 'Giga', equalling 2^10, 2^20, and 2^30<BR>bytes respectively. Such letter suffixes can also be entirely omitted.</P>
<P><BR>&nbsp;acpi=&nbsp;&nbsp;[HW,ACPI,X86]<BR>&nbsp;&nbsp;&nbsp;Advanced Configuration and Power Interface<BR>&nbsp;&nbsp;&nbsp;Format: { force | off | strict | noirq | rsdt }<BR>&nbsp;&nbsp;&nbsp;force -- enable ACPI if default was off<BR>&nbsp;&nbsp;&nbsp;off -- disable ACPI if default was on<BR>&nbsp;&nbsp;&nbsp;noirq -- do not use ACPI for IRQ routing<BR>&nbsp;&nbsp;&nbsp;strict -- Be less tolerant of platforms that are not<BR>&nbsp;&nbsp;&nbsp;&nbsp;strictly ACPI specification compliant.<BR>&nbsp;&nbsp;&nbsp;rsdt -- prefer RSDT over (default) XSDT<BR>&nbsp;&nbsp;&nbsp;copy_dsdt -- copy DSDT to memory</P>
<P>&nbsp;&nbsp;&nbsp;See also Documentation/power/runtime_pm.txt, pci=noacpi</P>
<P>&nbsp;acpi_rsdp=&nbsp;[ACPI,EFI,KEXEC]<BR>&nbsp;&nbsp;&nbsp;Pass the RSDP address to the kernel, mostly used<BR>&nbsp;&nbsp;&nbsp;on machines running EFI runtime service to boot the<BR>&nbsp;&nbsp;&nbsp;second kernel for kdump.</P>
<P>&nbsp;acpi_apic_instance=&nbsp;[ACPI, IOAPIC]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;int&gt;<BR>&nbsp;&nbsp;&nbsp;2: use 2nd APIC table, if available<BR>&nbsp;&nbsp;&nbsp;1,0: use 1st APIC table<BR>&nbsp;&nbsp;&nbsp;default: 0</P>
<P>&nbsp;acpi_backlight=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;acpi_backlight=vendor<BR>&nbsp;&nbsp;&nbsp;acpi_backlight=video<BR>&nbsp;&nbsp;&nbsp;If set to vendor, prefer vendor specific driver<BR>&nbsp;&nbsp;&nbsp;(e.g. thinkpad_acpi, sony_acpi, etc.) instead<BR>&nbsp;&nbsp;&nbsp;of the ACPI video.ko driver.</P>
<P>&nbsp;acpi.debug_layer=&nbsp;[HW,ACPI,ACPI_DEBUG]<BR>&nbsp;acpi.debug_level=&nbsp;[HW,ACPI,ACPI_DEBUG]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;int&gt;<BR>&nbsp;&nbsp;&nbsp;CONFIG_ACPI_DEBUG must be enabled to produce any ACPI<BR>&nbsp;&nbsp;&nbsp;debug output.&nbsp; Bits in debug_layer correspond to a<BR>&nbsp;&nbsp;&nbsp;_COMPONENT in an ACPI source file, e.g.,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; #define _COMPONENT ACPI_PCI_COMPONENT<BR>&nbsp;&nbsp;&nbsp;Bits in debug_level correspond to a level in<BR>&nbsp;&nbsp;&nbsp;ACPI_DEBUG_PRINT statements, e.g.,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ACPI_DEBUG_PRINT((ACPI_DB_INFO, ...<BR>&nbsp;&nbsp;&nbsp;The debug_level mask defaults to "info".&nbsp; See<BR>&nbsp;&nbsp;&nbsp;Documentation/acpi/debug.txt for more information about<BR>&nbsp;&nbsp;&nbsp;debug layers and levels.</P>
<P>&nbsp;&nbsp;&nbsp;Enable processor driver info messages:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acpi.debug_layer=0x20000000<BR>&nbsp;&nbsp;&nbsp;Enable PCI/PCI interrupt routing info messages:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acpi.debug_layer=0x400000<BR>&nbsp;&nbsp;&nbsp;Enable AML "Debug" output, i.e., stores to the Debug<BR>&nbsp;&nbsp;&nbsp;object while interpreting AML:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acpi.debug_layer=0xffffffff acpi.debug_level=0x2<BR>&nbsp;&nbsp;&nbsp;Enable all messages related to ACPI hardware:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; acpi.debug_layer=0x2 acpi.debug_level=0xffffffff</P>
<P>&nbsp;&nbsp;&nbsp;Some values produce so much output that the system is<BR>&nbsp;&nbsp;&nbsp;unusable.&nbsp; The "log_buf_len" parameter may be useful<BR>&nbsp;&nbsp;&nbsp;if you need to capture more output.</P>
<P>&nbsp;acpi_irq_balance [HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;ACPI will balance active IRQs<BR>&nbsp;&nbsp;&nbsp;default in APIC mode</P>
<P>&nbsp;acpi_irq_nobalance [HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;ACPI will not move active IRQs (default)<BR>&nbsp;&nbsp;&nbsp;default in PIC mode</P>
<P>&nbsp;acpi_irq_isa=&nbsp;[HW,ACPI] If irq_balance, mark listed IRQs used by ISA<BR>&nbsp;&nbsp;&nbsp;Format: &lt;irq&gt;,&lt;irq&gt;...</P>
<P>&nbsp;acpi_irq_pci=&nbsp;[HW,ACPI] If irq_balance, clear listed IRQs for<BR>&nbsp;&nbsp;&nbsp;use by PCI<BR>&nbsp;&nbsp;&nbsp;Format: &lt;irq&gt;,&lt;irq&gt;...</P>
<P>&nbsp;acpi_no_auto_ssdt&nbsp;[HW,ACPI] Disable automatic loading of SSDT</P>
<P>&nbsp;acpi_os_name=&nbsp;[HW,ACPI] Tell ACPI BIOS the name of the OS<BR>&nbsp;&nbsp;&nbsp;Format: To spoof as Windows 98: ="Microsoft Windows"</P>
<P>&nbsp;acpi_osi=&nbsp;[HW,ACPI] Modify list of supported OS interface strings<BR>&nbsp;&nbsp;&nbsp;acpi_osi="string1"&nbsp;# add string1 -- only one string<BR>&nbsp;&nbsp;&nbsp;acpi_osi="!string2"&nbsp;# remove built-in string2<BR>&nbsp;&nbsp;&nbsp;acpi_osi=&nbsp;&nbsp;# disable all strings</P>
<P>&nbsp;acpi_pm_good&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;Override the pmtimer bug detection: force the kernel<BR>&nbsp;&nbsp;&nbsp;to assume that this machine's pmtimer latches its value<BR>&nbsp;&nbsp;&nbsp;and always returns good values.</P>
<P>&nbsp;acpi_sci=&nbsp;[HW,ACPI] ACPI System Control Interrupt trigger mode<BR>&nbsp;&nbsp;&nbsp;Format: { level | edge | high | low }</P>
<P>&nbsp;acpi_serialize&nbsp;[HW,ACPI] force serialization of AML methods</P>
<P>&nbsp;acpi_skip_timer_override [HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;Recognize and ignore IRQ0/pin2 Interrupt Override.<BR>&nbsp;&nbsp;&nbsp;For broken nForce2 BIOS resulting in XT-PIC timer.</P>
<P>&nbsp;acpi_sleep=&nbsp;[HW,ACPI] Sleep options<BR>&nbsp;&nbsp;&nbsp;Format: { s3_bios, s3_mode, s3_beep, s4_nohwsig,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; old_ordering, nonvs, sci_force_enable }<BR>&nbsp;&nbsp;&nbsp;See Documentation/power/video.txt for information on<BR>&nbsp;&nbsp;&nbsp;s3_bios and s3_mode.<BR>&nbsp;&nbsp;&nbsp;s3_beep is for debugging; it makes the PC's speaker beep<BR>&nbsp;&nbsp;&nbsp;as soon as the kernel's real-mode entry point is called.<BR>&nbsp;&nbsp;&nbsp;s4_nohwsig prevents ACPI hardware signature from being<BR>&nbsp;&nbsp;&nbsp;used during resume from hibernation.<BR>&nbsp;&nbsp;&nbsp;old_ordering causes the ACPI 1.0 ordering of the _PTS<BR>&nbsp;&nbsp;&nbsp;control method, with respect to putting devices into<BR>&nbsp;&nbsp;&nbsp;low power states, to be enforced (the ACPI 2.0 ordering<BR>&nbsp;&nbsp;&nbsp;of _PTS is used by default).<BR>&nbsp;&nbsp;&nbsp;nonvs prevents the kernel from saving/restoring the<BR>&nbsp;&nbsp;&nbsp;ACPI NVS memory during suspend/hibernation and resume.<BR>&nbsp;&nbsp;&nbsp;sci_force_enable causes the kernel to set SCI_EN directly<BR>&nbsp;&nbsp;&nbsp;on resume from S1/S3 (which is against the ACPI spec,<BR>&nbsp;&nbsp;&nbsp;but some broken systems don't work without it).</P>
<P>&nbsp;acpi_use_timer_override [HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;Use timer override. For some broken Nvidia NF5 boards<BR>&nbsp;&nbsp;&nbsp;that require a timer override, but don't have HPET</P>
<P>&nbsp;acpi_enforce_resources=&nbsp;[ACPI]<BR>&nbsp;&nbsp;&nbsp;{ strict | lax | no }<BR>&nbsp;&nbsp;&nbsp;Check for resource conflicts between native drivers<BR>&nbsp;&nbsp;&nbsp;and ACPI OperationRegions (SystemIO and SystemMemory<BR>&nbsp;&nbsp;&nbsp;only). IO ports and memory declared in ACPI might be<BR>&nbsp;&nbsp;&nbsp;used by the ACPI subsystem in arbitrary AML code and<BR>&nbsp;&nbsp;&nbsp;can interfere with legacy drivers.<BR>&nbsp;&nbsp;&nbsp;strict (default): access to resources claimed by ACPI<BR>&nbsp;&nbsp;&nbsp;is denied; legacy drivers trying to access reserved<BR>&nbsp;&nbsp;&nbsp;resources will fail to bind to device using them.<BR>&nbsp;&nbsp;&nbsp;lax: access to resources claimed by ACPI is allowed;<BR>&nbsp;&nbsp;&nbsp;legacy drivers trying to access reserved resources<BR>&nbsp;&nbsp;&nbsp;will bind successfully but a warning message is logged.<BR>&nbsp;&nbsp;&nbsp;no: ACPI OperationRegions are not marked as reserved,<BR>&nbsp;&nbsp;&nbsp;no further checks are performed.</P>
<P>&nbsp;add_efi_memmap&nbsp;[EFI; X86] Include EFI memory map in<BR>&nbsp;&nbsp;&nbsp;kernel's map of available physical RAM.</P>
<P>&nbsp;agp=&nbsp;&nbsp;[AGP]<BR>&nbsp;&nbsp;&nbsp;{ off | try_unsupported }<BR>&nbsp;&nbsp;&nbsp;off: disable AGP support<BR>&nbsp;&nbsp;&nbsp;try_unsupported: try to drive unsupported chipsets<BR>&nbsp;&nbsp;&nbsp;&nbsp;(may crash computer or cause data corruption)</P>
<P>&nbsp;ALSA&nbsp;&nbsp;[HW,ALSA]<BR>&nbsp;&nbsp;&nbsp;See Documentation/sound/alsa/alsa-parameters.txt</P>
<P>&nbsp;alignment=&nbsp;[KNL,ARM]<BR>&nbsp;&nbsp;&nbsp;Allow the default userspace alignment fault handler<BR>&nbsp;&nbsp;&nbsp;behaviour to be specified.&nbsp; Bit 0 enables warnings,<BR>&nbsp;&nbsp;&nbsp;bit 1 enables fixups, and bit 2 sends a segfault.</P>
<P>&nbsp;align_va_addr=&nbsp;[X86-64]<BR>&nbsp;&nbsp;&nbsp;Align virtual addresses by clearing slice [14:12] when<BR>&nbsp;&nbsp;&nbsp;allocating a VMA at process creation time. This option<BR>&nbsp;&nbsp;&nbsp;gives you up to 3% performance improvement on AMD F15h<BR>&nbsp;&nbsp;&nbsp;machines (where it is enabled by default) for a<BR>&nbsp;&nbsp;&nbsp;CPU-intensive style benchmark, and it can vary highly in<BR>&nbsp;&nbsp;&nbsp;a microbenchmark depending on workload and compiler.</P>
<P>&nbsp;&nbsp;&nbsp;32: only for 32-bit processes<BR>&nbsp;&nbsp;&nbsp;64: only for 64-bit processes<BR>&nbsp;&nbsp;&nbsp;on: enable for both 32- and 64-bit processes<BR>&nbsp;&nbsp;&nbsp;off: disable for both 32- and 64-bit processes</P>
<P>&nbsp;alloc_snapshot&nbsp;[FTRACE]<BR>&nbsp;&nbsp;&nbsp;Allocate the ftrace snapshot buffer on boot up when the<BR>&nbsp;&nbsp;&nbsp;main buffer is allocated. This is handy if debugging<BR>&nbsp;&nbsp;&nbsp;and you need to use tracing_snapshot() on boot up, and<BR>&nbsp;&nbsp;&nbsp;do not want to use tracing_snapshot_alloc() as it needs<BR>&nbsp;&nbsp;&nbsp;to be done where GFP_KERNEL allocations are allowed.</P>
<P>&nbsp;amd_iommu=&nbsp;[HW,X86-64]<BR>&nbsp;&nbsp;&nbsp;Pass parameters to the AMD IOMMU driver in the system.<BR>&nbsp;&nbsp;&nbsp;Possible values are:<BR>&nbsp;&nbsp;&nbsp;fullflush - enable flushing of IO/TLB entries when<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; they are unmapped. Otherwise they are<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flushed before they will be reused, which<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; is a lot of faster<BR>&nbsp;&nbsp;&nbsp;off&nbsp;&nbsp; - do not initialize any AMD IOMMU found in<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the system<BR>&nbsp;&nbsp;&nbsp;force_isolation - Force device isolation for all<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; devices. The IOMMU driver is not<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; allowed anymore to lift isolation<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; requirements as needed. This option<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; does not override iommu=pt</P>
<P>&nbsp;amd_iommu_dump=&nbsp;[HW,X86-64]<BR>&nbsp;&nbsp;&nbsp;Enable AMD IOMMU driver option to dump the ACPI table<BR>&nbsp;&nbsp;&nbsp;for AMD IOMMU. With this option enabled, AMD IOMMU<BR>&nbsp;&nbsp;&nbsp;driver will print ACPI tables for AMD IOMMU during<BR>&nbsp;&nbsp;&nbsp;IOMMU initialization.</P>
<P>&nbsp;amijoy.map=&nbsp;[HW,JOY] Amiga joystick support<BR>&nbsp;&nbsp;&nbsp;Map of devices attached to JOY0DAT and JOY1DAT<BR>&nbsp;&nbsp;&nbsp;Format: &lt;a&gt;,&lt;b&gt;<BR>&nbsp;&nbsp;&nbsp;See also Documentation/input/joystick.txt</P>
<P>&nbsp;analog.map=&nbsp;[HW,JOY] Analog joystick and gamepad support<BR>&nbsp;&nbsp;&nbsp;Specifies type or capabilities of an analog joystick<BR>&nbsp;&nbsp;&nbsp;connected to one of 16 gameports<BR>&nbsp;&nbsp;&nbsp;Format: &lt;type1&gt;,&lt;type2&gt;,..&lt;type16&gt;</P>
<P>&nbsp;apc=&nbsp;&nbsp;[HW,SPARC]<BR>&nbsp;&nbsp;&nbsp;Power management functions (SPARCstation-4/5 + deriv.)<BR>&nbsp;&nbsp;&nbsp;Format: noidle<BR>&nbsp;&nbsp;&nbsp;Disable APC CPU standby support. SPARCstation-Fox does<BR>&nbsp;&nbsp;&nbsp;not play well with APC CPU idle - disable it if you have<BR>&nbsp;&nbsp;&nbsp;APC and your system crashes randomly.</P>
<P>&nbsp;apic=&nbsp;&nbsp;[APIC,X86-32] Advanced Programmable Interrupt Controller<BR>&nbsp;&nbsp;&nbsp;Change the output verbosity whilst booting<BR>&nbsp;&nbsp;&nbsp;Format: { quiet (default) | verbose | debug }<BR>&nbsp;&nbsp;&nbsp;Change the amount of debugging information output<BR>&nbsp;&nbsp;&nbsp;when initialising the APIC and IO-APIC components.</P>
<P>&nbsp;autoconf=&nbsp;[IPV6]<BR>&nbsp;&nbsp;&nbsp;See Documentation/networking/ipv6.txt.</P>
<P>&nbsp;show_lapic=&nbsp;[APIC,X86] Advanced Programmable Interrupt Controller<BR>&nbsp;&nbsp;&nbsp;Limit apic dumping. The parameter defines the maximal<BR>&nbsp;&nbsp;&nbsp;number of local apics being dumped. Also it is possible<BR>&nbsp;&nbsp;&nbsp;to set it to "all" by meaning -- no limit here.<BR>&nbsp;&nbsp;&nbsp;Format: { 1 (default) | 2 | ... | all }.<BR>&nbsp;&nbsp;&nbsp;The parameter valid if only apic=debug or<BR>&nbsp;&nbsp;&nbsp;apic=verbose is specified.<BR>&nbsp;&nbsp;&nbsp;Example: apic=debug show_lapic=all</P>
<P>&nbsp;apm=&nbsp;&nbsp;[APM] Advanced Power Management<BR>&nbsp;&nbsp;&nbsp;See header of arch/x86/kernel/apm_32.c.</P>
<P>&nbsp;arcrimi=&nbsp;[HW,NET] ARCnet - "RIM I" (entirely mem-mapped) cards<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;,&lt;irq&gt;,&lt;nodeID&gt;</P>
<P>&nbsp;ataflop=&nbsp;[HW,M68k]</P>
<P>&nbsp;atarimouse=&nbsp;[HW,MOUSE] Atari Mouse</P>
<P>&nbsp;atkbd.extra=&nbsp;[HW] Enable extra LEDs and keys on IBM RapidAccess,<BR>&nbsp;&nbsp;&nbsp;EzKey and similar keyboards</P>
<P>&nbsp;atkbd.reset=&nbsp;[HW] Reset keyboard during initialization</P>
<P>&nbsp;atkbd.set=&nbsp;[HW] Select keyboard code set<BR>&nbsp;&nbsp;&nbsp;Format: &lt;int&gt; (2 = AT (default), 3 = PS/2)</P>
<P>&nbsp;atkbd.scroll=&nbsp;[HW] Enable scroll wheel on MS Office and similar<BR>&nbsp;&nbsp;&nbsp;keyboards</P>
<P>&nbsp;atkbd.softraw=&nbsp;[HW] Choose between synthetic and real raw mode<BR>&nbsp;&nbsp;&nbsp;Format: &lt;bool&gt; (0 = real, 1 = synthetic (default))</P>
<P>&nbsp;atkbd.softrepeat= [HW]<BR>&nbsp;&nbsp;&nbsp;Use software keyboard repeat</P>
<P>&nbsp;baycom_epp=&nbsp;[HW,AX25]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;,&lt;mode&gt;</P>
<P>&nbsp;baycom_par=&nbsp;[HW,AX25] BayCom Parallel Port AX.25 Modem<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;,&lt;mode&gt;<BR>&nbsp;&nbsp;&nbsp;See header of drivers/net/hamradio/baycom_par.c.</P>
<P>&nbsp;baycom_ser_fdx=&nbsp;[HW,AX25]<BR>&nbsp;&nbsp;&nbsp;BayCom Serial Port AX.25 Modem (Full Duplex Mode)<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt;[,&lt;baud&gt;]<BR>&nbsp;&nbsp;&nbsp;See header of drivers/net/hamradio/baycom_ser_fdx.c.</P>
<P>&nbsp;baycom_ser_hdx=&nbsp;[HW,AX25]<BR>&nbsp;&nbsp;&nbsp;BayCom Serial Port AX.25 Modem (Half Duplex Mode)<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;,&lt;irq&gt;,&lt;mode&gt;<BR>&nbsp;&nbsp;&nbsp;See header of drivers/net/hamradio/baycom_ser_hdx.c.</P>
<P>&nbsp;boot_delay=&nbsp;Milliseconds to delay each printk during boot.<BR>&nbsp;&nbsp;&nbsp;Values larger than 10 seconds (10000) are changed to<BR>&nbsp;&nbsp;&nbsp;no delay (0).<BR>&nbsp;&nbsp;&nbsp;Format: integer</P>
<P>&nbsp;bootmem_debug&nbsp;[KNL] Enable bootmem allocator debug messages.</P>
<P>&nbsp;bttv.card=&nbsp;[HW,V4L] bttv (bt848 + bt878 based grabber cards)<BR>&nbsp;bttv.radio=&nbsp;Most important insmod options are available as<BR>&nbsp;&nbsp;&nbsp;kernel args too.<BR>&nbsp;bttv.pll=&nbsp;See Documentation/video4linux/bttv/Insmod-options<BR>&nbsp;bttv.tuner=</P>
<P>&nbsp;bulk_remove=off&nbsp;[PPC]&nbsp; This parameter disables the use of the pSeries<BR>&nbsp;&nbsp;&nbsp;firmware feature for flushing multiple hpte entries<BR>&nbsp;&nbsp;&nbsp;at a time.</P>
<P>&nbsp;c101=&nbsp;&nbsp;[NET] Moxa C101 synchronous serial card</P>
<P>&nbsp;cachesize=&nbsp;[BUGS=X86-32] Override level 2 CPU cache size detection.<BR>&nbsp;&nbsp;&nbsp;Sometimes CPU hardware bugs make them report the cache<BR>&nbsp;&nbsp;&nbsp;size incorrectly. The kernel will attempt work arounds<BR>&nbsp;&nbsp;&nbsp;to fix known problems, but for some CPUs it is not<BR>&nbsp;&nbsp;&nbsp;possible to determine what the correct size should be.<BR>&nbsp;&nbsp;&nbsp;This option provides an override for these situations.</P>
<P>&nbsp;ccw_timeout_log [S390]<BR>&nbsp;&nbsp;&nbsp;See Documentation/s390/CommonIO for details.</P>
<P>&nbsp;cgroup_disable= [KNL] Disable a particular controller<BR>&nbsp;&nbsp;&nbsp;Format: {name of the controller(s) to disable}<BR>&nbsp;&nbsp;&nbsp;&nbsp;{Currently supported controllers - "memory"}</P>
<P>&nbsp;checkreqprot&nbsp;[SELINUX] Set initial checkreqprot flag value.<BR>&nbsp;&nbsp;&nbsp;Format: { "0" | "1" }<BR>&nbsp;&nbsp;&nbsp;See security/selinux/Kconfig help text.<BR>&nbsp;&nbsp;&nbsp;0 -- check protection applied by kernel (includes<BR>&nbsp;&nbsp;&nbsp;&nbsp;any implied execute protection).<BR>&nbsp;&nbsp;&nbsp;1 -- check protection requested by application.<BR>&nbsp;&nbsp;&nbsp;Default value is set via a kernel config option.<BR>&nbsp;&nbsp;&nbsp;Value can be changed at runtime via<BR>&nbsp;&nbsp;&nbsp;&nbsp;/selinux/checkreqprot.</P>
<P>&nbsp;cio_ignore=&nbsp;[S390]<BR>&nbsp;&nbsp;&nbsp;See Documentation/s390/CommonIO for details.<BR>&nbsp;clk_ignore_unused<BR>&nbsp;&nbsp;&nbsp;[CLK]<BR>&nbsp;&nbsp;&nbsp;Keep all clocks already enabled by bootloader on,<BR>&nbsp;&nbsp;&nbsp;even if no driver has claimed them. This is useful<BR>&nbsp;&nbsp;&nbsp;for debug and development, but should not be<BR>&nbsp;&nbsp;&nbsp;needed on a platform with proper driver support.<BR>&nbsp;&nbsp;&nbsp;For more information, see Documentation/clk.txt.</P>
<P>&nbsp;clock=&nbsp;&nbsp;[BUGS=X86-32, HW] gettimeofday clocksource override.<BR>&nbsp;&nbsp;&nbsp;[Deprecated]<BR>&nbsp;&nbsp;&nbsp;Forces specified clocksource (if available) to be used<BR>&nbsp;&nbsp;&nbsp;when calculating gettimeofday(). If specified<BR>&nbsp;&nbsp;&nbsp;clocksource is not available, it defaults to PIT.<BR>&nbsp;&nbsp;&nbsp;Format: { pit | tsc | cyclone | pmtmr }</P>
<P>&nbsp;clocksource=&nbsp;Override the default clocksource<BR>&nbsp;&nbsp;&nbsp;Format: &lt;string&gt;<BR>&nbsp;&nbsp;&nbsp;Override the default clocksource and use the clocksource<BR>&nbsp;&nbsp;&nbsp;with the name specified.<BR>&nbsp;&nbsp;&nbsp;Some clocksource names to choose from, depending on<BR>&nbsp;&nbsp;&nbsp;the platform:<BR>&nbsp;&nbsp;&nbsp;[all] jiffies (this is the base, fallback clocksource)<BR>&nbsp;&nbsp;&nbsp;[ACPI] acpi_pm<BR>&nbsp;&nbsp;&nbsp;[ARM] imx_timer1,OSTS,netx_timer,mpu_timer2,<BR>&nbsp;&nbsp;&nbsp;&nbsp;pxa_timer,timer3,32k_counter,timer0_1<BR>&nbsp;&nbsp;&nbsp;[AVR32] avr32<BR>&nbsp;&nbsp;&nbsp;[X86-32] pit,hpet,tsc;<BR>&nbsp;&nbsp;&nbsp;&nbsp;scx200_hrt on Geode; cyclone on IBM x440<BR>&nbsp;&nbsp;&nbsp;[MIPS] MIPS<BR>&nbsp;&nbsp;&nbsp;[PARISC] cr16<BR>&nbsp;&nbsp;&nbsp;[S390] tod<BR>&nbsp;&nbsp;&nbsp;[SH] SuperH<BR>&nbsp;&nbsp;&nbsp;[SPARC64] tick<BR>&nbsp;&nbsp;&nbsp;[X86-64] hpet,tsc</P>
<P>&nbsp;clearcpuid=BITNUM [X86]<BR>&nbsp;&nbsp;&nbsp;Disable CPUID feature X for the kernel. See<BR>&nbsp;&nbsp;&nbsp;arch/x86/include/asm/cpufeature.h for the valid bit<BR>&nbsp;&nbsp;&nbsp;numbers. Note the Linux specific bits are not necessarily<BR>&nbsp;&nbsp;&nbsp;stable over kernel options, but the vendor specific<BR>&nbsp;&nbsp;&nbsp;ones should be.<BR>&nbsp;&nbsp;&nbsp;Also note that user programs calling CPUID directly<BR>&nbsp;&nbsp;&nbsp;or using the feature without checking anything<BR>&nbsp;&nbsp;&nbsp;will still see it. This just prevents it from<BR>&nbsp;&nbsp;&nbsp;being used by the kernel or shown in /proc/cpuinfo.<BR>&nbsp;&nbsp;&nbsp;Also note the kernel might malfunction if you disable<BR>&nbsp;&nbsp;&nbsp;some critical bits.</P>
<P>&nbsp;cma=nn[MG]&nbsp;[ARM,KNL]<BR>&nbsp;&nbsp;&nbsp;Sets the size of kernel global memory area for contiguous<BR>&nbsp;&nbsp;&nbsp;memory allocations. For more information, see<BR>&nbsp;&nbsp;&nbsp;include/linux/dma-contiguous.h</P>
<P>&nbsp;cmo_free_hint=&nbsp;[PPC] Format: { yes | no }<BR>&nbsp;&nbsp;&nbsp;Specify whether pages are marked as being inactive<BR>&nbsp;&nbsp;&nbsp;when they are freed.&nbsp; This is used in CMO environments<BR>&nbsp;&nbsp;&nbsp;to determine OS memory pressure for page stealing by<BR>&nbsp;&nbsp;&nbsp;a hypervisor.<BR>&nbsp;&nbsp;&nbsp;Default: yes</P>
<P>&nbsp;coherent_pool=nn[KMG]&nbsp;[ARM,KNL]<BR>&nbsp;&nbsp;&nbsp;Sets the size of memory pool for coherent, atomic dma<BR>&nbsp;&nbsp;&nbsp;allocations, by default set to 256K.</P>
<P>&nbsp;code_bytes&nbsp;[X86] How many bytes of object code to print<BR>&nbsp;&nbsp;&nbsp;in an oops report.<BR>&nbsp;&nbsp;&nbsp;Range: 0 - 8192<BR>&nbsp;&nbsp;&nbsp;Default: 64</P>
<P>&nbsp;com20020=&nbsp;[HW,NET] ARCnet - COM20020 chipset<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&lt;io&gt;[,&lt;irq&gt;[,&lt;nodeID&gt;[,&lt;backplane&gt;[,&lt;ckp&gt;[,&lt;timeout&gt;]]]]]</P>
<P>&nbsp;com90io=&nbsp;[HW,NET] ARCnet - COM90xx chipset (IO-mapped buffers)<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;[,&lt;irq&gt;]</P>
<P>&nbsp;com90xx=&nbsp;[HW,NET]<BR>&nbsp;&nbsp;&nbsp;ARCnet - COM90xx chipset (memory-mapped buffers)<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;[,&lt;irq&gt;[,&lt;memstart&gt;]]</P>
<P>&nbsp;condev=&nbsp;&nbsp;[HW,S390] console device<BR>&nbsp;conmode=</P>
<P>&nbsp;console=&nbsp;[KNL] Output console device and options.</P>
<P>&nbsp;&nbsp;tty&lt;n&gt;&nbsp;Use the virtual console device &lt;n&gt;.</P>
<P>&nbsp;&nbsp;ttyS&lt;n&gt;[,options]<BR>&nbsp;&nbsp;ttyUSB0[,options]<BR>&nbsp;&nbsp;&nbsp;Use the specified serial port.&nbsp; The options are of<BR>&nbsp;&nbsp;&nbsp;the form "bbbbpnf", where "bbbb" is the baud rate,<BR>&nbsp;&nbsp;&nbsp;"p" is parity ("n", "o", or "e"), "n" is number of<BR>&nbsp;&nbsp;&nbsp;bits, and "f" is flow control ("r" for RTS or<BR>&nbsp;&nbsp;&nbsp;omit it).&nbsp; Default is "9600n8".</P>
<P>&nbsp;&nbsp;&nbsp;See Documentation/serial-console.txt for more<BR>&nbsp;&nbsp;&nbsp;information.&nbsp; See<BR>&nbsp;&nbsp;&nbsp;Documentation/networking/netconsole.txt for an<BR>&nbsp;&nbsp;&nbsp;alternative.</P>
<P>&nbsp;&nbsp;uart[8250],io,&lt;addr&gt;[,options]<BR>&nbsp;&nbsp;uart[8250],mmio,&lt;addr&gt;[,options]<BR>&nbsp;&nbsp;&nbsp;Start an early, polled-mode console on the 8250/16550<BR>&nbsp;&nbsp;&nbsp;UART at the specified I/O port or MMIO address,<BR>&nbsp;&nbsp;&nbsp;switching to the matching ttyS device later.&nbsp; The<BR>&nbsp;&nbsp;&nbsp;options are the same as for ttyS, above.<BR>&nbsp;&nbsp;hvc&lt;n&gt;&nbsp;Use the hypervisor console device &lt;n&gt;. This is for<BR>&nbsp;&nbsp;&nbsp;both Xen and PowerPC hypervisors.</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If the device connected to the port is not a TTY but a braille<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; device, prepend "brl," before the device type, for instance<BR>&nbsp;&nbsp;&nbsp;console=brl,ttyS0<BR>&nbsp;&nbsp;For now, only VisioBraille is supported.</P>
<P>&nbsp;consoleblank=&nbsp;[KNL] The console blank (screen saver) timeout in<BR>&nbsp;&nbsp;&nbsp;seconds. Defaults to 10*60 = 10mins. A value of 0<BR>&nbsp;&nbsp;&nbsp;disables the blank timer.</P>
<P>&nbsp;coredump_filter=<BR>&nbsp;&nbsp;&nbsp;[KNL] Change the default value for<BR>&nbsp;&nbsp;&nbsp;/proc/&lt;pid&gt;/coredump_filter.<BR>&nbsp;&nbsp;&nbsp;See also Documentation/filesystems/proc.txt.</P>
<P>&nbsp;cpuidle.off=1&nbsp;[CPU_IDLE]<BR>&nbsp;&nbsp;&nbsp;disable the cpuidle sub-system</P>
<P>&nbsp;cpcihp_generic=&nbsp;[HW,PCI] Generic port I/O CompactPCI driver<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&lt;first_slot&gt;,&lt;last_slot&gt;,&lt;port&gt;,&lt;enum_bit&gt;[,&lt;debug&gt;]</P>
<P>&nbsp;crashkernel=size[KMG][@offset[KMG]]<BR>&nbsp;&nbsp;&nbsp;[KNL] Using kexec, Linux can switch to a 'crash kernel'<BR>&nbsp;&nbsp;&nbsp;upon panic. This parameter reserves the physical<BR>&nbsp;&nbsp;&nbsp;memory region [offset, offset + size] for that kernel<BR>&nbsp;&nbsp;&nbsp;image. If <A href="mailto:'@offset'">'@offset'</A> is omitted, then a suitable offset<BR>&nbsp;&nbsp;&nbsp;is selected automatically. Check<BR>&nbsp;&nbsp;&nbsp;Documentation/kdump/kdump.txt for further details.</P>
<P>&nbsp;crashkernel=range1:size1[,range2:size2,...][@offset]<BR>&nbsp;&nbsp;&nbsp;[KNL] Same as above, but depends on the memory<BR>&nbsp;&nbsp;&nbsp;in the running system. The syntax of range is<BR>&nbsp;&nbsp;&nbsp;start-[end] where start and end are both<BR>&nbsp;&nbsp;&nbsp;a memory unit (amount[KMG]). See also<BR>&nbsp;&nbsp;&nbsp;Documentation/kdump/kdump.txt for an example.</P>
<P>&nbsp;crashkernel=size[KMG],high<BR>&nbsp;&nbsp;&nbsp;[KNL, x86_64] range could be above 4G. Allow kernel<BR>&nbsp;&nbsp;&nbsp;to allocate physical memory region from top, so could<BR>&nbsp;&nbsp;&nbsp;be above 4G if system have more than 4G ram installed.<BR>&nbsp;&nbsp;&nbsp;Otherwise memory region will be allocated below 4G, if<BR>&nbsp;&nbsp;&nbsp;available.<BR>&nbsp;&nbsp;&nbsp;It will be ignored if crashkernel=X is specified.<BR>&nbsp;crashkernel=size[KMG],low<BR>&nbsp;&nbsp;&nbsp;[KNL, x86_64] range under 4G. When crashkernel=X,high<BR>&nbsp;&nbsp;&nbsp;is passed, kernel could allocate physical memory region<BR>&nbsp;&nbsp;&nbsp;above 4G, that cause second kernel crash on system<BR>&nbsp;&nbsp;&nbsp;that require some amount of low memory, e.g. swiotlb<BR>&nbsp;&nbsp;&nbsp;requires at least 64M+32K low memory.&nbsp; Kernel would<BR>&nbsp;&nbsp;&nbsp;try to allocate 72M below 4G automatically.<BR>&nbsp;&nbsp;&nbsp;This one let user to specify own low range under 4G<BR>&nbsp;&nbsp;&nbsp;for second kernel instead.<BR>&nbsp;&nbsp;&nbsp;0: to disable low allocation.<BR>&nbsp;&nbsp;&nbsp;It will be ignored when crashkernel=X,high is not used<BR>&nbsp;&nbsp;&nbsp;or memory reserved is below 4G.</P>
<P>&nbsp;cs89x0_dma=&nbsp;[HW,NET]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;dma&gt;</P>
<P>&nbsp;cs89x0_media=&nbsp;[HW,NET]<BR>&nbsp;&nbsp;&nbsp;Format: { rj45 | aui | bnc }</P>
<P>&nbsp;dasd=&nbsp;&nbsp;[HW,NET]<BR>&nbsp;&nbsp;&nbsp;See header of drivers/s390/block/dasd_devmap.c.</P>
<P>&nbsp;db9.dev[2|3]=&nbsp;[HW,JOY] Multisystem joystick support via parallel port<BR>&nbsp;&nbsp;&nbsp;(one device per port)<BR>&nbsp;&nbsp;&nbsp;Format: &lt;port#&gt;,&lt;type&gt;<BR>&nbsp;&nbsp;&nbsp;See also Documentation/input/joystick-parport.txt</P>
<P>&nbsp;ddebug_query=&nbsp;&nbsp; [KNL,DYNAMIC_DEBUG] Enable debug messages at early boot<BR>&nbsp;&nbsp;&nbsp;time. See Documentation/dynamic-debug-howto.txt for<BR>&nbsp;&nbsp;&nbsp;details.&nbsp; Deprecated, see dyndbg.</P>
<P>&nbsp;debug&nbsp;&nbsp;[KNL] Enable kernel debugging (events log level).</P>
<P>&nbsp;debug_locks_verbose=<BR>&nbsp;&nbsp;&nbsp;[KNL] verbose self-tests<BR>&nbsp;&nbsp;&nbsp;Format=&lt;0|1&gt;<BR>&nbsp;&nbsp;&nbsp;Print debugging info while doing the locking API<BR>&nbsp;&nbsp;&nbsp;self-tests.<BR>&nbsp;&nbsp;&nbsp;We default to 0 (no extra messages), setting it to<BR>&nbsp;&nbsp;&nbsp;1 will print _a lot_ more information - normally<BR>&nbsp;&nbsp;&nbsp;only useful to kernel developers.</P>
<P>&nbsp;debug_objects&nbsp;[KNL] Enable object debugging</P>
<P>&nbsp;no_debug_objects<BR>&nbsp;&nbsp;&nbsp;[KNL] Disable object debugging</P>
<P>&nbsp;debug_guardpage_minorder=<BR>&nbsp;&nbsp;&nbsp;[KNL] When CONFIG_DEBUG_PAGEALLOC is set, this<BR>&nbsp;&nbsp;&nbsp;parameter allows control of the order of pages that will<BR>&nbsp;&nbsp;&nbsp;be intentionally kept free (and hence protected) by the<BR>&nbsp;&nbsp;&nbsp;buddy allocator. Bigger value increase the probability<BR>&nbsp;&nbsp;&nbsp;of catching random memory corruption, but reduce the<BR>&nbsp;&nbsp;&nbsp;amount of memory for normal system use. The maximum<BR>&nbsp;&nbsp;&nbsp;possible value is MAX_ORDER/2.&nbsp; Setting this parameter<BR>&nbsp;&nbsp;&nbsp;to 1 or 2 should be enough to identify most random<BR>&nbsp;&nbsp;&nbsp;memory corruption problems caused by bugs in kernel or<BR>&nbsp;&nbsp;&nbsp;driver code when a CPU writes to (or reads from) a<BR>&nbsp;&nbsp;&nbsp;random memory location. Note that there exists a class<BR>&nbsp;&nbsp;&nbsp;of memory corruptions problems caused by buggy H/W or<BR>&nbsp;&nbsp;&nbsp;F/W or by drivers badly programing DMA (basically when<BR>&nbsp;&nbsp;&nbsp;memory is written at bus level and the CPU MMU is<BR>&nbsp;&nbsp;&nbsp;bypassed) which are not detectable by<BR>&nbsp;&nbsp;&nbsp;CONFIG_DEBUG_PAGEALLOC, hence this option will not help<BR>&nbsp;&nbsp;&nbsp;tracking down these problems.</P>
<P>&nbsp;debugpat&nbsp;[X86] Enable PAT debugging</P>
<P>&nbsp;decnet.addr=&nbsp;[HW,NET]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;area&gt;[,&lt;node&gt;]<BR>&nbsp;&nbsp;&nbsp;See also Documentation/networking/decnet.txt.</P>
<P>&nbsp;default_hugepagesz=<BR>&nbsp;&nbsp;&nbsp;[same as hugepagesz=] The size of the default<BR>&nbsp;&nbsp;&nbsp;HugeTLB page size. This is the size represented by<BR>&nbsp;&nbsp;&nbsp;the legacy /proc/ hugepages APIs, used for SHM, and<BR>&nbsp;&nbsp;&nbsp;default size when mounting hugetlbfs filesystems.<BR>&nbsp;&nbsp;&nbsp;Defaults to the default architecture's huge page size<BR>&nbsp;&nbsp;&nbsp;if not specified.</P>
<P>&nbsp;dhash_entries=&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Set number of hash buckets for dentry cache.</P>
<P>&nbsp;digi=&nbsp;&nbsp;[HW,SERIAL]<BR>&nbsp;&nbsp;&nbsp;IO parameters + enable/disable command.</P>
<P>&nbsp;digiepca=&nbsp;[HW,SERIAL]<BR>&nbsp;&nbsp;&nbsp;See drivers/char/README.epca and<BR>&nbsp;&nbsp;&nbsp;Documentation/serial/digiepca.txt.</P>
<P>&nbsp;disable=&nbsp;[IPV6]<BR>&nbsp;&nbsp;&nbsp;See Documentation/networking/ipv6.txt.</P>
<P>&nbsp;disable_ddw&nbsp;&nbsp;&nbsp;&nbsp; [PPC/PSERIES]<BR>&nbsp;&nbsp;&nbsp;Disable Dynamic DMA Window support. Use this if<BR>&nbsp;&nbsp;&nbsp;to workaround buggy firmware.</P>
<P>&nbsp;disable_ipv6=&nbsp;[IPV6]<BR>&nbsp;&nbsp;&nbsp;See Documentation/networking/ipv6.txt.</P>
<P>&nbsp;disable_mtrr_cleanup [X86]<BR>&nbsp;&nbsp;&nbsp;The kernel tries to adjust MTRR layout from continuous<BR>&nbsp;&nbsp;&nbsp;to discrete, to make X server driver able to add WB<BR>&nbsp;&nbsp;&nbsp;entry later. This parameter disables that.</P>
<P>&nbsp;disable_mtrr_trim [X86, Intel and AMD only]<BR>&nbsp;&nbsp;&nbsp;By default the kernel will trim any uncacheable<BR>&nbsp;&nbsp;&nbsp;memory out of your available memory pool based on<BR>&nbsp;&nbsp;&nbsp;MTRR settings.&nbsp; This parameter disables that behavior,<BR>&nbsp;&nbsp;&nbsp;possibly causing your machine to run very slowly.</P>
<P>&nbsp;disable_timer_pin_1 [X86]<BR>&nbsp;&nbsp;&nbsp;Disable PIN 1 of APIC timer<BR>&nbsp;&nbsp;&nbsp;Can be useful to work around chipset bugs.</P>
<P>&nbsp;dma_debug=off&nbsp;If the kernel is compiled with DMA_API_DEBUG support,<BR>&nbsp;&nbsp;&nbsp;this option disables the debugging code at boot.</P>
<P>&nbsp;dma_debug_entries=&lt;number&gt;<BR>&nbsp;&nbsp;&nbsp;This option allows to tune the number of preallocated<BR>&nbsp;&nbsp;&nbsp;entries for DMA-API debugging code. One entry is<BR>&nbsp;&nbsp;&nbsp;required per DMA-API allocation. Use this if the<BR>&nbsp;&nbsp;&nbsp;DMA-API debugging code disables itself because the<BR>&nbsp;&nbsp;&nbsp;architectural default is too low.</P>
<P>&nbsp;dma_debug_driver=&lt;driver_name&gt;<BR>&nbsp;&nbsp;&nbsp;With this option the DMA-API debugging driver<BR>&nbsp;&nbsp;&nbsp;filter feature can be enabled at boot time. Just<BR>&nbsp;&nbsp;&nbsp;pass the driver to filter for as the parameter.<BR>&nbsp;&nbsp;&nbsp;The filter can be disabled or changed to another<BR>&nbsp;&nbsp;&nbsp;driver later using sysfs.</P>
<P>&nbsp;drm_kms_helper.edid_firmware=[&lt;connector&gt;:]&lt;file&gt;<BR>&nbsp;&nbsp;&nbsp;Broken monitors, graphic adapters and KVMs may<BR>&nbsp;&nbsp;&nbsp;send no or incorrect EDID data sets. This parameter<BR>&nbsp;&nbsp;&nbsp;allows to specify an EDID data set in the<BR>&nbsp;&nbsp;&nbsp;/lib/firmware directory that is used instead.<BR>&nbsp;&nbsp;&nbsp;Generic built-in EDID data sets are used, if one of<BR>&nbsp;&nbsp;&nbsp;edid/1024x768.bin, edid/1280x1024.bin,<BR>&nbsp;&nbsp;&nbsp;edid/1680x1050.bin, or edid/1920x1080.bin is given<BR>&nbsp;&nbsp;&nbsp;and no file with the same name exists. Details and<BR>&nbsp;&nbsp;&nbsp;instructions how to build your own EDID data are<BR>&nbsp;&nbsp;&nbsp;available in Documentation/EDID/HOWTO.txt. An EDID<BR>&nbsp;&nbsp;&nbsp;data set will only be used for a particular connector,<BR>&nbsp;&nbsp;&nbsp;if its name and a colon are prepended to the EDID<BR>&nbsp;&nbsp;&nbsp;name.</P>
<P>&nbsp;dscc4.setup=&nbsp;[NET]</P>
<P>&nbsp;dyndbg[="val"]&nbsp;&nbsp;[KNL,DYNAMIC_DEBUG]<BR>&nbsp;module.dyndbg[="val"]<BR>&nbsp;&nbsp;&nbsp;Enable debug messages at boot time.&nbsp; See<BR>&nbsp;&nbsp;&nbsp;Documentation/dynamic-debug-howto.txt for details.</P>
<P>&nbsp;earlycon=&nbsp;[KNL] Output early console device and options.<BR>&nbsp;&nbsp;uart[8250],io,&lt;addr&gt;[,options]<BR>&nbsp;&nbsp;uart[8250],mmio,&lt;addr&gt;[,options]<BR>&nbsp;&nbsp;uart[8250],mmio32,&lt;addr&gt;[,options]<BR>&nbsp;&nbsp;&nbsp;Start an early, polled-mode console on the 8250/16550<BR>&nbsp;&nbsp;&nbsp;UART at the specified I/O port or MMIO address.<BR>&nbsp;&nbsp;&nbsp;MMIO inter-register address stride is either 8-bit<BR>&nbsp;&nbsp;&nbsp;(mmio) or 32-bit (mmio32).<BR>&nbsp;&nbsp;&nbsp;The options are the same as for ttyS, above.</P>
<P>&nbsp;earlyprintk=&nbsp;[X86,SH,BLACKFIN,ARM]<BR>&nbsp;&nbsp;&nbsp;earlyprintk=vga<BR>&nbsp;&nbsp;&nbsp;earlyprintk=xen<BR>&nbsp;&nbsp;&nbsp;earlyprintk=serial[,ttySn[,baudrate]]<BR>&nbsp;&nbsp;&nbsp;earlyprintk=serial[,0x...[,baudrate]]<BR>&nbsp;&nbsp;&nbsp;earlyprintk=ttySn[,baudrate]<BR>&nbsp;&nbsp;&nbsp;earlyprintk=dbgp[debugController#]</P>
<P>&nbsp;&nbsp;&nbsp;earlyprintk is useful when the kernel crashes before<BR>&nbsp;&nbsp;&nbsp;the normal console is initialized. It is not enabled by<BR>&nbsp;&nbsp;&nbsp;default because it has some cosmetic problems.</P>
<P>&nbsp;&nbsp;&nbsp;Append ",keep" to not disable it when the real console<BR>&nbsp;&nbsp;&nbsp;takes over.</P>
<P>&nbsp;&nbsp;&nbsp;Only vga or serial or usb debug port at a time.</P>
<P>&nbsp;&nbsp;&nbsp;Currently only ttyS0 and ttyS1 may be specified by<BR>&nbsp;&nbsp;&nbsp;name.&nbsp; Other I/O ports may be explicitly specified<BR>&nbsp;&nbsp;&nbsp;on some architectures (x86 and arm at least) by<BR>&nbsp;&nbsp;&nbsp;replacing ttySn with an I/O port address, like this:<BR>&nbsp;&nbsp;&nbsp;&nbsp;earlyprintk=serial,0x1008,115200<BR>&nbsp;&nbsp;&nbsp;You can find the port for a given device in<BR>&nbsp;&nbsp;&nbsp;/proc/tty/driver/serial:<BR>&nbsp;&nbsp;&nbsp;&nbsp;2: uart:ST16650V2 port:00001008 irq:18 ...</P>
<P>&nbsp;&nbsp;&nbsp;Interaction with the standard serial driver is not<BR>&nbsp;&nbsp;&nbsp;very good.</P>
<P>&nbsp;&nbsp;&nbsp;The VGA output is eventually overwritten by the real<BR>&nbsp;&nbsp;&nbsp;console.</P>
<P>&nbsp;&nbsp;&nbsp;The xen output can only be used by Xen PV guests.</P>
<P>&nbsp;ekgdboc=&nbsp;[X86,KGDB] Allow early kernel console debugging<BR>&nbsp;&nbsp;&nbsp;ekgdboc=kbd</P>
<P>&nbsp;&nbsp;&nbsp;This is designed to be used in conjunction with<BR>&nbsp;&nbsp;&nbsp;the boot argument: earlyprintk=vga</P>
<P>&nbsp;edd=&nbsp;&nbsp;[EDD]<BR>&nbsp;&nbsp;&nbsp;Format: {"off" | "on" | "skip[mbr]"}</P>
<P>&nbsp;efi_no_storage_paranoia [EFI; X86]<BR>&nbsp;&nbsp;&nbsp;Using this parameter you can use more than 50% of<BR>&nbsp;&nbsp;&nbsp;your efi variable storage. Use this parameter only if<BR>&nbsp;&nbsp;&nbsp;you are really sure that your UEFI does sane gc and<BR>&nbsp;&nbsp;&nbsp;fulfills the spec otherwise your board may brick.</P>
<P>&nbsp;eisa_irq_edge=&nbsp;[PARISC,HW]<BR>&nbsp;&nbsp;&nbsp;See header of drivers/parisc/eisa.c.</P>
<P>&nbsp;elanfreq=&nbsp;[X86-32]<BR>&nbsp;&nbsp;&nbsp;See comment before function elanfreq_setup() in<BR>&nbsp;&nbsp;&nbsp;arch/x86/kernel/cpu/cpufreq/elanfreq.c.</P>
<P>&nbsp;elevator=&nbsp;[IOSCHED]<BR>&nbsp;&nbsp;&nbsp;Format: {"cfq" | "deadline" | "noop"}<BR>&nbsp;&nbsp;&nbsp;See Documentation/block/cfq-iosched.txt and<BR>&nbsp;&nbsp;&nbsp;Documentation/block/deadline-iosched.txt for details.</P>
<P>&nbsp;elfcorehdr=[size[KMG]@]offset[KMG] [IA64,PPC,SH,X86,S390]<BR>&nbsp;&nbsp;&nbsp;Specifies physical address of start of kernel core<BR>&nbsp;&nbsp;&nbsp;image elf header and optionally the size. Generally<BR>&nbsp;&nbsp;&nbsp;kexec loader will pass this option to capture kernel.<BR>&nbsp;&nbsp;&nbsp;See Documentation/kdump/kdump.txt for details.</P>
<P>&nbsp;enable_mtrr_cleanup [X86]<BR>&nbsp;&nbsp;&nbsp;The kernel tries to adjust MTRR layout from continuous<BR>&nbsp;&nbsp;&nbsp;to discrete, to make X server driver able to add WB<BR>&nbsp;&nbsp;&nbsp;entry later. This parameter enables that.</P>
<P>&nbsp;enable_timer_pin_1 [X86]<BR>&nbsp;&nbsp;&nbsp;Enable PIN 1 of APIC timer<BR>&nbsp;&nbsp;&nbsp;Can be useful to work around chipset bugs<BR>&nbsp;&nbsp;&nbsp;(in particular on some ATI chipsets).<BR>&nbsp;&nbsp;&nbsp;The kernel tries to set a reasonable default.</P>
<P>&nbsp;enforcing&nbsp;[SELINUX] Set initial enforcing status.<BR>&nbsp;&nbsp;&nbsp;Format: {"0" | "1"}<BR>&nbsp;&nbsp;&nbsp;See security/selinux/Kconfig help text.<BR>&nbsp;&nbsp;&nbsp;0 -- permissive (log only, no denials).<BR>&nbsp;&nbsp;&nbsp;1 -- enforcing (deny and log).<BR>&nbsp;&nbsp;&nbsp;Default value is 0.<BR>&nbsp;&nbsp;&nbsp;Value can be changed at runtime via /selinux/enforce.</P>
<P>&nbsp;erst_disable&nbsp;[ACPI]<BR>&nbsp;&nbsp;&nbsp;Disable Error Record Serialization Table (ERST)<BR>&nbsp;&nbsp;&nbsp;support.</P>
<P>&nbsp;ether=&nbsp;&nbsp;[HW,NET] Ethernet cards parameters<BR>&nbsp;&nbsp;&nbsp;This option is obsoleted by the "netdev=" option, which<BR>&nbsp;&nbsp;&nbsp;has equivalent usage. See its documentation for details.</P>
<P>&nbsp;evm=&nbsp;&nbsp;[EVM]<BR>&nbsp;&nbsp;&nbsp;Format: { "fix" }<BR>&nbsp;&nbsp;&nbsp;Permit 'security.evm' to be updated regardless of<BR>&nbsp;&nbsp;&nbsp;current integrity status.</P>
<P>&nbsp;failslab=<BR>&nbsp;fail_page_alloc=<BR>&nbsp;fail_make_request=[KNL]<BR>&nbsp;&nbsp;&nbsp;General fault injection mechanism.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;interval&gt;,&lt;probability&gt;,&lt;space&gt;,&lt;times&gt;<BR>&nbsp;&nbsp;&nbsp;See also Documentation/fault-injection/.</P>
<P>&nbsp;floppy=&nbsp;&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/floppy.txt.</P>
<P>&nbsp;force_pal_cache_flush<BR>&nbsp;&nbsp;&nbsp;[IA-64] Avoid check_sal_cache_flush which may hang on<BR>&nbsp;&nbsp;&nbsp;buggy SAL_CACHE_FLUSH implementations. Using this<BR>&nbsp;&nbsp;&nbsp;parameter will force ia64_sal_cache_flush to call<BR>&nbsp;&nbsp;&nbsp;ia64_pal_cache_flush instead of SAL_CACHE_FLUSH.</P>
<P>&nbsp;ftrace=[tracer]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] will set and start the specified tracer<BR>&nbsp;&nbsp;&nbsp;as early as possible in order to facilitate early<BR>&nbsp;&nbsp;&nbsp;boot debugging.</P>
<P>&nbsp;ftrace_dump_on_oops[=orig_cpu]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] will dump the trace buffers on oops.<BR>&nbsp;&nbsp;&nbsp;If no parameter is passed, ftrace will dump<BR>&nbsp;&nbsp;&nbsp;buffers of all CPUs, but if you pass orig_cpu, it will<BR>&nbsp;&nbsp;&nbsp;dump only the buffer of the CPU that triggered the<BR>&nbsp;&nbsp;&nbsp;oops.</P>
<P>&nbsp;ftrace_filter=[function-list]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] Limit the functions traced by the function<BR>&nbsp;&nbsp;&nbsp;tracer at boot up. function-list is a comma separated<BR>&nbsp;&nbsp;&nbsp;list of functions. This list can be changed at run<BR>&nbsp;&nbsp;&nbsp;time by the set_ftrace_filter file in the debugfs<BR>&nbsp;&nbsp;&nbsp;tracing directory.</P>
<P>&nbsp;ftrace_notrace=[function-list]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] Do not trace the functions specified in<BR>&nbsp;&nbsp;&nbsp;function-list. This list can be changed at run time<BR>&nbsp;&nbsp;&nbsp;by the set_ftrace_notrace file in the debugfs<BR>&nbsp;&nbsp;&nbsp;tracing directory.</P>
<P>&nbsp;ftrace_graph_filter=[function-list]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] Limit the top level callers functions traced<BR>&nbsp;&nbsp;&nbsp;by the function graph tracer at boot up.<BR>&nbsp;&nbsp;&nbsp;function-list is a comma separated list of functions<BR>&nbsp;&nbsp;&nbsp;that can be changed at run time by the<BR>&nbsp;&nbsp;&nbsp;set_graph_function file in the debugfs tracing directory.</P>
<P>&nbsp;gamecon.map[2|3]=<BR>&nbsp;&nbsp;&nbsp;[HW,JOY] Multisystem joystick and NES/SNES/PSX pad<BR>&nbsp;&nbsp;&nbsp;support via parallel port (up to 5 devices per port)<BR>&nbsp;&nbsp;&nbsp;Format: &lt;port#&gt;,&lt;pad1&gt;,&lt;pad2&gt;,&lt;pad3&gt;,&lt;pad4&gt;,&lt;pad5&gt;<BR>&nbsp;&nbsp;&nbsp;See also Documentation/input/joystick-parport.txt</P>
<P>&nbsp;gamma=&nbsp;&nbsp;[HW,DRM]</P>
<P>&nbsp;gart_fix_e820=&nbsp; [X86_64] disable the fix e820 for K8 GART<BR>&nbsp;&nbsp;&nbsp;Format: off | on<BR>&nbsp;&nbsp;&nbsp;default: on</P>
<P>&nbsp;gcov_persist=&nbsp;[GCOV] When non-zero (default), profiling data for<BR>&nbsp;&nbsp;&nbsp;kernel modules is saved and remains accessible via<BR>&nbsp;&nbsp;&nbsp;debugfs, even when the module is unloaded/reloaded.<BR>&nbsp;&nbsp;&nbsp;When zero, profiling data is discarded and associated<BR>&nbsp;&nbsp;&nbsp;debugfs files are removed at module unload time.</P>
<P>&nbsp;gpt&nbsp;&nbsp;[EFI] Forces disk with valid GPT signature but<BR>&nbsp;&nbsp;&nbsp;invalid Protective MBR to be treated as GPT.</P>
<P>&nbsp;grcan.enable0=&nbsp;[HW] Configuration of physical interface 0. Determines<BR>&nbsp;&nbsp;&nbsp;the "Enable 0" bit of the configuration register.<BR>&nbsp;&nbsp;&nbsp;Format: 0 | 1<BR>&nbsp;&nbsp;&nbsp;Default: 0<BR>&nbsp;grcan.enable1=&nbsp;[HW] Configuration of physical interface 1. Determines<BR>&nbsp;&nbsp;&nbsp;the "Enable 0" bit of the configuration register.<BR>&nbsp;&nbsp;&nbsp;Format: 0 | 1<BR>&nbsp;&nbsp;&nbsp;Default: 0<BR>&nbsp;grcan.select=&nbsp;[HW] Select which physical interface to use.<BR>&nbsp;&nbsp;&nbsp;Format: 0 | 1<BR>&nbsp;&nbsp;&nbsp;Default: 0<BR>&nbsp;grcan.txsize=&nbsp;[HW] Sets the size of the tx buffer.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;unsigned int&gt; such that (txsize &amp; ~0x1fffc0) == 0.<BR>&nbsp;&nbsp;&nbsp;Default: 1024<BR>&nbsp;grcan.rxsize=&nbsp;[HW] Sets the size of the rx buffer.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;unsigned int&gt; such that (rxsize &amp; ~0x1fffc0) == 0.<BR>&nbsp;&nbsp;&nbsp;Default: 1024</P>
<P>&nbsp;hashdist=&nbsp;[KNL,NUMA] Large hashes allocated during boot<BR>&nbsp;&nbsp;&nbsp;are distributed across NUMA nodes.&nbsp; Defaults on<BR>&nbsp;&nbsp;&nbsp;for 64-bit NUMA, off otherwise.<BR>&nbsp;&nbsp;&nbsp;Format: 0 | 1 (for off | on)</P>
<P>&nbsp;hcl=&nbsp;&nbsp;[IA-64] SGI's Hardware Graph compatibility layer</P>
<P>&nbsp;hd=&nbsp;&nbsp;[EIDE] (E)IDE hard drive subsystem geometry<BR>&nbsp;&nbsp;&nbsp;Format: &lt;cyl&gt;,&lt;head&gt;,&lt;sect&gt;</P>
<P>&nbsp;hest_disable&nbsp;[ACPI]<BR>&nbsp;&nbsp;&nbsp;Disable Hardware Error Source Table (HEST) support;<BR>&nbsp;&nbsp;&nbsp;corresponding firmware-first mode error processing<BR>&nbsp;&nbsp;&nbsp;logic will be disabled.</P>
<P>&nbsp;highmem=nn[KMG]&nbsp;[KNL,BOOT] forces the highmem zone to have an exact<BR>&nbsp;&nbsp;&nbsp;size of &lt;nn&gt;. This works even on boxes that have no<BR>&nbsp;&nbsp;&nbsp;highmem otherwise. This also works to reduce highmem<BR>&nbsp;&nbsp;&nbsp;size on bigger boxes.</P>
<P>&nbsp;highres=&nbsp;[KNL] Enable/disable high resolution timer mode.<BR>&nbsp;&nbsp;&nbsp;Valid parameters: "on", "off"<BR>&nbsp;&nbsp;&nbsp;Default: "on"</P>
<P>&nbsp;hisax=&nbsp;&nbsp;[HW,ISDN]<BR>&nbsp;&nbsp;&nbsp;See Documentation/isdn/README.HiSax.</P>
<P>&nbsp;hlt&nbsp;&nbsp;[BUGS=ARM,SH]</P>
<P>&nbsp;hpet=&nbsp;&nbsp;[X86-32,HPET] option to control HPET usage<BR>&nbsp;&nbsp;&nbsp;Format: { enable (default) | disable | force |<BR>&nbsp;&nbsp;&nbsp;&nbsp;verbose }<BR>&nbsp;&nbsp;&nbsp;disable: disable HPET and use PIT instead<BR>&nbsp;&nbsp;&nbsp;force: allow force enabled of undocumented chips (ICH4,<BR>&nbsp;&nbsp;&nbsp;&nbsp;VIA, nVidia)<BR>&nbsp;&nbsp;&nbsp;verbose: show contents of HPET registers during setup</P>
<P>&nbsp;hugepages=&nbsp;[HW,X86-32,IA-64] HugeTLB pages to allocate at boot.<BR>&nbsp;hugepagesz=&nbsp;[HW,IA-64,PPC,X86-64] The size of the HugeTLB pages.<BR>&nbsp;&nbsp;&nbsp;On x86-64 and powerpc, this option can be specified<BR>&nbsp;&nbsp;&nbsp;multiple times interleaved with hugepages= to reserve<BR>&nbsp;&nbsp;&nbsp;huge pages of different sizes. Valid pages sizes on<BR>&nbsp;&nbsp;&nbsp;x86-64 are 2M (when the CPU supports "pse") and 1G<BR>&nbsp;&nbsp;&nbsp;(when the CPU supports the "pdpe1gb" cpuinfo flag)<BR>&nbsp;&nbsp;&nbsp;Note that 1GB pages can only be allocated at boot time<BR>&nbsp;&nbsp;&nbsp;using hugepages= and not freed afterwards.</P>
<P>&nbsp;hvc_iucv=&nbsp;[S390] Number of z/VM IUCV hypervisor console (HVC)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; terminal devices. Valid values: 0..8<BR>&nbsp;hvc_iucv_allow=&nbsp;[S390] Comma-separated list of z/VM user IDs.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If specified, z/VM IUCV HVC accepts connections<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; from listed z/VM user IDs only.</P>
<P>&nbsp;hwthread_map=&nbsp;[METAG] Comma-separated list of Linux cpu id to<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hardware thread id mappings.<BR>&nbsp;&nbsp;&nbsp;&nbsp;Format: &lt;cpu&gt;:&lt;hwthread&gt;</P>
<P>&nbsp;keep_bootcon&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Do not unregister boot console at start. This is only<BR>&nbsp;&nbsp;&nbsp;useful for debugging when something happens in the window<BR>&nbsp;&nbsp;&nbsp;between unregistering the boot console and initializing<BR>&nbsp;&nbsp;&nbsp;the real console.</P>
<P>&nbsp;i2c_bus=&nbsp;[HW] Override the default board specific I2C bus speed<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; or register an additional I2C bus that is not<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; registered from board initialization code.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Format:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;bus_id&gt;,&lt;clkrate&gt;</P>
<P>&nbsp;i8042.debug&nbsp;[HW] Toggle i8042 debug mode<BR>&nbsp;i8042.direct&nbsp;[HW] Put keyboard port into non-translated mode<BR>&nbsp;i8042.dumbkbd&nbsp;[HW] Pretend that controller can only read data from<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; keyboard and cannot control its state<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (Don't attempt to blink the leds)<BR>&nbsp;i8042.noaux&nbsp;[HW] Don't check for auxiliary (== mouse) port<BR>&nbsp;i8042.nokbd&nbsp;[HW] Don't check/create keyboard port<BR>&nbsp;i8042.noloop&nbsp;[HW] Disable the AUX Loopback command while probing<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for the AUX port<BR>&nbsp;i8042.nomux&nbsp;[HW] Don't check presence of an active multiplexing<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; controller<BR>&nbsp;i8042.nopnp&nbsp;[HW] Don't use ACPIPnP / PnPBIOS to discover KBD/AUX<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; controllers<BR>&nbsp;i8042.notimeout&nbsp;[HW] Ignore timeout condition signalled by controller<BR>&nbsp;i8042.reset&nbsp;[HW] Reset the controller during init and cleanup<BR>&nbsp;i8042.unlock&nbsp;[HW] Unlock (ignore) the keylock<BR>&nbsp;i8042.kbdreset&nbsp; [HW] Reset device connected to KBD port</P>
<P>&nbsp;i810=&nbsp;&nbsp;[HW,DRM]</P>
<P>&nbsp;i8k.ignore_dmi&nbsp;[HW] Continue probing hardware even if DMI data<BR>&nbsp;&nbsp;&nbsp;indicates that the driver is running on unsupported<BR>&nbsp;&nbsp;&nbsp;hardware.<BR>&nbsp;i8k.force&nbsp;[HW] Activate i8k driver even if SMM BIOS signature<BR>&nbsp;&nbsp;&nbsp;does not match list of supported models.<BR>&nbsp;i8k.power_status<BR>&nbsp;&nbsp;&nbsp;[HW] Report power status in /proc/i8k<BR>&nbsp;&nbsp;&nbsp;(disabled by default)<BR>&nbsp;i8k.restricted&nbsp;[HW] Allow controlling fans only if SYS_ADMIN<BR>&nbsp;&nbsp;&nbsp;capability is set.</P>
<P>&nbsp;i915.invert_brightness=<BR>&nbsp;&nbsp;&nbsp;[DRM] Invert the sense of the variable that is used to<BR>&nbsp;&nbsp;&nbsp;set the brightness of the panel backlight. Normally a<BR>&nbsp;&nbsp;&nbsp;brightness value of 0 indicates backlight switched off,<BR>&nbsp;&nbsp;&nbsp;and the maximum of the brightness value sets the backlight<BR>&nbsp;&nbsp;&nbsp;to maximum brightness. If this parameter is set to 0<BR>&nbsp;&nbsp;&nbsp;(default) and the machine requires it, or this parameter<BR>&nbsp;&nbsp;&nbsp;is set to 1, a brightness value of 0 sets the backlight<BR>&nbsp;&nbsp;&nbsp;to maximum brightness, and the maximum of the brightness<BR>&nbsp;&nbsp;&nbsp;value switches the backlight off.<BR>&nbsp;&nbsp;&nbsp;-1 -- never invert brightness<BR>&nbsp;&nbsp;&nbsp; 0 -- machine default<BR>&nbsp;&nbsp;&nbsp; 1 -- force brightness inversion</P>
<P>&nbsp;icn=&nbsp;&nbsp;[HW,ISDN]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;[,&lt;membase&gt;[,&lt;icn_id&gt;[,&lt;icn_id2&gt;]]]</P>
<P>&nbsp;ide-core.nodma=&nbsp;[HW] (E)IDE subsystem<BR>&nbsp;&nbsp;&nbsp;Format: =0.0 to prevent dma on hda, =0.1 hdb =1.0 hdc<BR>&nbsp;&nbsp;&nbsp;.vlb_clock .pci_clock .noflush .nohpa .noprobe .nowerr<BR>&nbsp;&nbsp;&nbsp;.cdrom .chs .ignore_cable are additional options<BR>&nbsp;&nbsp;&nbsp;See Documentation/ide/ide.txt.</P>
<P>&nbsp;ide-pci-generic.all-generic-ide [HW] (E)IDE subsystem<BR>&nbsp;&nbsp;&nbsp;Claim all unknown PCI IDE storage controllers.</P>
<P>&nbsp;idle=&nbsp;&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;Format: idle=poll, idle=halt, idle=nomwait<BR>&nbsp;&nbsp;&nbsp;Poll forces a polling idle loop that can slightly<BR>&nbsp;&nbsp;&nbsp;improve the performance of waking up a idle CPU, but<BR>&nbsp;&nbsp;&nbsp;will use a lot of power and make the system run hot.<BR>&nbsp;&nbsp;&nbsp;Not recommended.<BR>&nbsp;&nbsp;&nbsp;idle=halt: Halt is forced to be used for CPU idle.<BR>&nbsp;&nbsp;&nbsp;In such case C2/C3 won't be used again.<BR>&nbsp;&nbsp;&nbsp;idle=nomwait: Disable mwait for CPU C-states</P>
<P>&nbsp;ignore_loglevel&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Ignore loglevel setting - this will print /all/<BR>&nbsp;&nbsp;&nbsp;kernel messages to the console. Useful for debugging.<BR>&nbsp;&nbsp;&nbsp;We also add it as printk module parameter, so users<BR>&nbsp;&nbsp;&nbsp;could change it dynamically, usually by<BR>&nbsp;&nbsp;&nbsp;/sys/module/printk/parameters/ignore_loglevel.</P>
<P>&nbsp;ihash_entries=&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Set number of hash buckets for inode cache.</P>
<P>&nbsp;ima_appraise=&nbsp;[IMA] appraise integrity measurements<BR>&nbsp;&nbsp;&nbsp;Format: { "off" | "enforce" | "fix" }<BR>&nbsp;&nbsp;&nbsp;default: "enforce"</P>
<P>&nbsp;ima_appraise_tcb [IMA]<BR>&nbsp;&nbsp;&nbsp;The builtin appraise policy appraises all files<BR>&nbsp;&nbsp;&nbsp;owned by uid=0.</P>
<P>&nbsp;ima_audit=&nbsp;[IMA]<BR>&nbsp;&nbsp;&nbsp;Format: { "0" | "1" }<BR>&nbsp;&nbsp;&nbsp;0 -- integrity auditing messages. (Default)<BR>&nbsp;&nbsp;&nbsp;1 -- enable informational integrity auditing messages.</P>
<P>&nbsp;ima_hash=&nbsp;[IMA]<BR>&nbsp;&nbsp;&nbsp;Format: { "sha1" | "md5" }<BR>&nbsp;&nbsp;&nbsp;default: "sha1"</P>
<P>&nbsp;ima_tcb&nbsp;&nbsp;[IMA]<BR>&nbsp;&nbsp;&nbsp;Load a policy which meets the needs of the Trusted<BR>&nbsp;&nbsp;&nbsp;Computing Base.&nbsp; This means IMA will measure all<BR>&nbsp;&nbsp;&nbsp;programs exec'd, files mmap'd for exec, and all files<BR>&nbsp;&nbsp;&nbsp;opened for read by uid=0.</P>
<P>&nbsp;init=&nbsp;&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;full_path&gt;<BR>&nbsp;&nbsp;&nbsp;Run specified binary instead of /sbin/init as init<BR>&nbsp;&nbsp;&nbsp;process.</P>
<P>&nbsp;initcall_debug&nbsp;[KNL] Trace initcalls as they are executed.&nbsp; Useful<BR>&nbsp;&nbsp;&nbsp;for working out where the kernel is dying during<BR>&nbsp;&nbsp;&nbsp;startup.</P>
<P>&nbsp;initrd=&nbsp;&nbsp;[BOOT] Specify the location of the initial ramdisk</P>
<P>&nbsp;inport.irq=&nbsp;[HW] Inport (ATI XL and Microsoft) busmouse driver<BR>&nbsp;&nbsp;&nbsp;Format: &lt;irq&gt;</P>
<P>&nbsp;intel_iommu=&nbsp;[DMAR] Intel IOMMU driver (DMAR) option<BR>&nbsp;&nbsp;on<BR>&nbsp;&nbsp;&nbsp;Enable intel iommu driver.<BR>&nbsp;&nbsp;off<BR>&nbsp;&nbsp;&nbsp;Disable intel iommu driver.<BR>&nbsp;&nbsp;igfx_off [Default Off]<BR>&nbsp;&nbsp;&nbsp;By default, gfx is mapped as normal device. If a gfx<BR>&nbsp;&nbsp;&nbsp;device has a dedicated DMAR unit, the DMAR unit is<BR>&nbsp;&nbsp;&nbsp;bypassed by not enabling DMAR with this option. In<BR>&nbsp;&nbsp;&nbsp;this case, gfx device will use physical address for<BR>&nbsp;&nbsp;&nbsp;DMA.<BR>&nbsp;&nbsp;forcedac [x86_64]<BR>&nbsp;&nbsp;&nbsp;With this option iommu will not optimize to look<BR>&nbsp;&nbsp;&nbsp;for io virtual address below 32-bit forcing dual<BR>&nbsp;&nbsp;&nbsp;address cycle on pci bus for cards supporting greater<BR>&nbsp;&nbsp;&nbsp;than 32-bit addressing. The default is to look<BR>&nbsp;&nbsp;&nbsp;for translation below 32-bit and if not available<BR>&nbsp;&nbsp;&nbsp;then look in the higher range.<BR>&nbsp;&nbsp;strict [Default Off]<BR>&nbsp;&nbsp;&nbsp;With this option on every unmap_single operation will<BR>&nbsp;&nbsp;&nbsp;result in a hardware IOTLB flush operation as opposed<BR>&nbsp;&nbsp;&nbsp;to batching them for performance.<BR>&nbsp;&nbsp;sp_off [Default Off]<BR>&nbsp;&nbsp;&nbsp;By default, super page will be supported if Intel IOMMU<BR>&nbsp;&nbsp;&nbsp;has the capability. With this option, super page will<BR>&nbsp;&nbsp;&nbsp;not be supported.</P>
<P>&nbsp;intel_idle.max_cstate=&nbsp;[KNL,HW,ACPI,X86]<BR>&nbsp;&nbsp;&nbsp;0&nbsp;disables intel_idle and fall back on acpi_idle.<BR>&nbsp;&nbsp;&nbsp;1 to 6&nbsp;specify maximum depth of C-state.</P>
<P>&nbsp;intel_pstate=&nbsp; [X86]<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; disable<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Do not enable intel_pstate as the default<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; scaling driver for the supported processors</P>
<P>&nbsp;intremap=&nbsp;[X86-64, Intel-IOMMU]<BR>&nbsp;&nbsp;&nbsp;on&nbsp;enable Interrupt Remapping (default)<BR>&nbsp;&nbsp;&nbsp;off&nbsp;disable Interrupt Remapping<BR>&nbsp;&nbsp;&nbsp;nosid&nbsp;disable Source ID checking<BR>&nbsp;&nbsp;&nbsp;no_x2apic_optout<BR>&nbsp;&nbsp;&nbsp;&nbsp;BIOS x2APIC opt-out request will be ignored</P>
<P>&nbsp;iomem=&nbsp;&nbsp;Disable strict checking of access to MMIO memory<BR>&nbsp;&nbsp;strict&nbsp;regions from userspace.<BR>&nbsp;&nbsp;relaxed</P>
<P>&nbsp;iommu=&nbsp;&nbsp;[x86]<BR>&nbsp;&nbsp;off<BR>&nbsp;&nbsp;force<BR>&nbsp;&nbsp;noforce<BR>&nbsp;&nbsp;biomerge<BR>&nbsp;&nbsp;panic<BR>&nbsp;&nbsp;nopanic<BR>&nbsp;&nbsp;merge<BR>&nbsp;&nbsp;nomerge<BR>&nbsp;&nbsp;forcesac<BR>&nbsp;&nbsp;soft<BR>&nbsp;&nbsp;pt&nbsp;&nbsp;[x86, IA-64]</P>
<P><BR>&nbsp;io7=&nbsp;&nbsp;[HW] IO7 for Marvel based alpha systems<BR>&nbsp;&nbsp;&nbsp;See comment before marvel_specify_io7 in<BR>&nbsp;&nbsp;&nbsp;arch/alpha/kernel/core_marvel.c.</P>
<P>&nbsp;io_delay=&nbsp;[X86] I/O delay method<BR>&nbsp;&nbsp;0x80<BR>&nbsp;&nbsp;&nbsp;Standard port 0x80 based delay<BR>&nbsp;&nbsp;0xed<BR>&nbsp;&nbsp;&nbsp;Alternate port 0xed based delay (needed on some systems)<BR>&nbsp;&nbsp;udelay<BR>&nbsp;&nbsp;&nbsp;Simple two microseconds delay<BR>&nbsp;&nbsp;none<BR>&nbsp;&nbsp;&nbsp;No delay</P>
<P>&nbsp;ip=&nbsp;&nbsp;[IP_PNP]<BR>&nbsp;&nbsp;&nbsp;See Documentation/filesystems/nfs/nfsroot.txt.</P>
<P>&nbsp;ip2=&nbsp;&nbsp;[HW] Set IO/IRQ pairs for up to 4 IntelliPort boards<BR>&nbsp;&nbsp;&nbsp;See comment before ip2_setup() in<BR>&nbsp;&nbsp;&nbsp;drivers/char/ip2/ip2base.c.</P>
<P>&nbsp;irqaffinity=&nbsp;[SMP] Set the default irq affinity mask<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt;,...,&lt;cpu number&gt;<BR>&nbsp;&nbsp;&nbsp;or<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt;-&lt;cpu number&gt;<BR>&nbsp;&nbsp;&nbsp;(must be a positive range in ascending order)<BR>&nbsp;&nbsp;&nbsp;or a mixture<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt;,...,&lt;cpu number&gt;-&lt;cpu number&gt;</P>
<P>&nbsp;irqfixup&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;When an interrupt is not handled search all handlers<BR>&nbsp;&nbsp;&nbsp;for it. Intended to get systems with badly broken<BR>&nbsp;&nbsp;&nbsp;firmware running.</P>
<P>&nbsp;irqpoll&nbsp;&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;When an interrupt is not handled search all handlers<BR>&nbsp;&nbsp;&nbsp;for it. Also check all handlers each timer<BR>&nbsp;&nbsp;&nbsp;interrupt. Intended to get systems with badly broken<BR>&nbsp;&nbsp;&nbsp;firmware running.</P>
<P>&nbsp;isapnp=&nbsp;&nbsp;[ISAPNP]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;RDP&gt;,&lt;reset&gt;,&lt;pci_scan&gt;,&lt;verbosity&gt;</P>
<P>&nbsp;isolcpus=&nbsp;[KNL,SMP] Isolate CPUs from the general scheduler.<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt;,...,&lt;cpu number&gt;<BR>&nbsp;&nbsp;&nbsp;or<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt;-&lt;cpu number&gt;<BR>&nbsp;&nbsp;&nbsp;(must be a positive range in ascending order)<BR>&nbsp;&nbsp;&nbsp;or a mixture<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt;,...,&lt;cpu number&gt;-&lt;cpu number&gt;</P>
<P>&nbsp;&nbsp;&nbsp;This option can be used to specify one or more CPUs<BR>&nbsp;&nbsp;&nbsp;to isolate from the general SMP balancing and scheduling<BR>&nbsp;&nbsp;&nbsp;algorithms. You can move a process onto or off an<BR>&nbsp;&nbsp;&nbsp;"isolated" CPU via the CPU affinity syscalls or cpuset.<BR>&nbsp;&nbsp;&nbsp;&lt;cpu number&gt; begins at 0 and the maximum value is<BR>&nbsp;&nbsp;&nbsp;"number of CPUs in system - 1".</P>
<P>&nbsp;&nbsp;&nbsp;This option is the preferred way to isolate CPUs. The<BR>&nbsp;&nbsp;&nbsp;alternative -- manually setting the CPU mask of all<BR>&nbsp;&nbsp;&nbsp;tasks in the system -- can cause problems and<BR>&nbsp;&nbsp;&nbsp;suboptimal load balancer performance.</P>
<P>&nbsp;iucv=&nbsp;&nbsp;[HW,NET]</P>
<P>&nbsp;ivrs_ioapic&nbsp;[HW,X86_64]<BR>&nbsp;&nbsp;&nbsp;Provide an override to the IOAPIC-ID&lt;-&gt;DEVICE-ID<BR>&nbsp;&nbsp;&nbsp;mapping provided in the IVRS ACPI table. For<BR>&nbsp;&nbsp;&nbsp;example, to map IOAPIC-ID decimal 10 to<BR>&nbsp;&nbsp;&nbsp;PCI device 00:14.0 write the parameter as:<BR>&nbsp;&nbsp;&nbsp;&nbsp;ivrs_ioapic[10]=00:14.0</P>
<P>&nbsp;ivrs_hpet&nbsp;[HW,X86_64]<BR>&nbsp;&nbsp;&nbsp;Provide an override to the HPET-ID&lt;-&gt;DEVICE-ID<BR>&nbsp;&nbsp;&nbsp;mapping provided in the IVRS ACPI table. For<BR>&nbsp;&nbsp;&nbsp;example, to map HPET-ID decimal 0 to<BR>&nbsp;&nbsp;&nbsp;PCI device 00:14.0 write the parameter as:<BR>&nbsp;&nbsp;&nbsp;&nbsp;ivrs_hpet[0]=00:14.0</P>
<P>&nbsp;js=&nbsp;&nbsp;[HW,JOY] Analog joystick<BR>&nbsp;&nbsp;&nbsp;See Documentation/input/joystick.txt.</P>
<P>&nbsp;keepinitrd&nbsp;[HW,ARM]</P>
<P>&nbsp;kernelcore=nn[KMG]&nbsp;[KNL,X86,IA-64,PPC] This parameter<BR>&nbsp;&nbsp;&nbsp;specifies the amount of memory usable by the kernel<BR>&nbsp;&nbsp;&nbsp;for non-movable allocations.&nbsp; The requested amount is<BR>&nbsp;&nbsp;&nbsp;spread evenly throughout all nodes in the system. The<BR>&nbsp;&nbsp;&nbsp;remaining memory in each node is used for Movable<BR>&nbsp;&nbsp;&nbsp;pages. In the event, a node is too small to have both<BR>&nbsp;&nbsp;&nbsp;kernelcore and Movable pages, kernelcore pages will<BR>&nbsp;&nbsp;&nbsp;take priority and other nodes will have a larger number<BR>&nbsp;&nbsp;&nbsp;of kernelcore pages.&nbsp; The Movable zone is used for the<BR>&nbsp;&nbsp;&nbsp;allocation of pages that may be reclaimed or moved<BR>&nbsp;&nbsp;&nbsp;by the page migration subsystem.&nbsp; This means that<BR>&nbsp;&nbsp;&nbsp;HugeTLB pages may not be allocated from this zone.<BR>&nbsp;&nbsp;&nbsp;Note that allocations like PTEs-from-HighMem still<BR>&nbsp;&nbsp;&nbsp;use the HighMem zone if it exists, and the Normal<BR>&nbsp;&nbsp;&nbsp;zone if it does not.</P>
<P>&nbsp;kgdbdbgp=&nbsp;[KGDB,HW] kgdb over EHCI usb debug port.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;Controller#&gt;[,poll interval]<BR>&nbsp;&nbsp;&nbsp;The controller # is the number of the ehci usb debug<BR>&nbsp;&nbsp;&nbsp;port as it is probed via PCI.&nbsp; The poll interval is<BR>&nbsp;&nbsp;&nbsp;optional and is the number seconds in between<BR>&nbsp;&nbsp;&nbsp;each poll cycle to the debug port in case you need<BR>&nbsp;&nbsp;&nbsp;the functionality for interrupting the kernel with<BR>&nbsp;&nbsp;&nbsp;gdb or control-c on the dbgp connection.&nbsp; When<BR>&nbsp;&nbsp;&nbsp;not using this parameter you use sysrq-g to break into<BR>&nbsp;&nbsp;&nbsp;the kernel debugger.</P>
<P>&nbsp;kgdboc=&nbsp;&nbsp;[KGDB,HW] kgdb over consoles.<BR>&nbsp;&nbsp;&nbsp;Requires a tty driver that supports console polling,<BR>&nbsp;&nbsp;&nbsp;or a supported polling keyboard driver (non-usb).<BR>&nbsp;&nbsp;&nbsp; Serial only format: &lt;serial_device&gt;[,baud]<BR>&nbsp;&nbsp;&nbsp; keyboard only format: kbd<BR>&nbsp;&nbsp;&nbsp; keyboard and serial format: kbd,&lt;serial_device&gt;[,baud]<BR>&nbsp;&nbsp;&nbsp;Optional Kernel mode setting:<BR>&nbsp;&nbsp;&nbsp; kms, kbd format: kms,kbd<BR>&nbsp;&nbsp;&nbsp; kms, kbd and serial format: kms,kbd,&lt;ser_dev&gt;[,baud]</P>
<P>&nbsp;kgdbwait&nbsp;[KGDB] Stop kernel execution and enter the<BR>&nbsp;&nbsp;&nbsp;kernel debugger at the earliest opportunity.</P>
<P>&nbsp;kmac=&nbsp;&nbsp;[MIPS] korina ethernet MAC address.<BR>&nbsp;&nbsp;&nbsp;Configure the RouterBoard 532 series on-chip<BR>&nbsp;&nbsp;&nbsp;Ethernet adapter MAC address.</P>
<P>&nbsp;kmemleak=&nbsp;[KNL] Boot-time kmemleak enable/disable<BR>&nbsp;&nbsp;&nbsp;Valid arguments: on, off<BR>&nbsp;&nbsp;&nbsp;Default: on</P>
<P>&nbsp;kstack=N&nbsp;[X86] Print N words from the kernel stack<BR>&nbsp;&nbsp;&nbsp;in oops dumps.</P>
<P>&nbsp;kvm.ignore_msrs=[KVM] Ignore guest accesses to unhandled MSRs.<BR>&nbsp;&nbsp;&nbsp;Default is 0 (don't ignore, but inject #GP)</P>
<P>&nbsp;kvm.mmu_audit=&nbsp;[KVM] This is a R/W parameter which allows audit<BR>&nbsp;&nbsp;&nbsp;KVM MMU at runtime.<BR>&nbsp;&nbsp;&nbsp;Default is 0 (off)</P>
<P>&nbsp;kvm-amd.nested=&nbsp;[KVM,AMD] Allow nested virtualization in KVM/SVM.<BR>&nbsp;&nbsp;&nbsp;Default is 1 (enabled)</P>
<P>&nbsp;kvm-amd.npt=&nbsp;[KVM,AMD] Disable nested paging (virtualized MMU)<BR>&nbsp;&nbsp;&nbsp;for all guests.<BR>&nbsp;&nbsp;&nbsp;Default is 1 (enabled) if in 64-bit or 32-bit PAE mode.</P>
<P>&nbsp;kvm-intel.ept=&nbsp;[KVM,Intel] Disable extended page tables<BR>&nbsp;&nbsp;&nbsp;(virtualized MMU) support on capable Intel chips.<BR>&nbsp;&nbsp;&nbsp;Default is 1 (enabled)</P>
<P>&nbsp;kvm-intel.emulate_invalid_guest_state=<BR>&nbsp;&nbsp;&nbsp;[KVM,Intel] Enable emulation of invalid guest states<BR>&nbsp;&nbsp;&nbsp;Default is 0 (disabled)</P>
<P>&nbsp;kvm-intel.flexpriority=<BR>&nbsp;&nbsp;&nbsp;[KVM,Intel] Disable FlexPriority feature (TPR shadow).<BR>&nbsp;&nbsp;&nbsp;Default is 1 (enabled)</P>
<P>&nbsp;kvm-intel.nested=<BR>&nbsp;&nbsp;&nbsp;[KVM,Intel] Enable VMX nesting (nVMX).<BR>&nbsp;&nbsp;&nbsp;Default is 0 (disabled)</P>
<P>&nbsp;kvm-intel.unrestricted_guest=<BR>&nbsp;&nbsp;&nbsp;[KVM,Intel] Disable unrestricted guest feature<BR>&nbsp;&nbsp;&nbsp;(virtualized real and unpaged mode) on capable<BR>&nbsp;&nbsp;&nbsp;Intel chips. Default is 1 (enabled)</P>
<P>&nbsp;kvm-intel.vpid=&nbsp;[KVM,Intel] Disable Virtual Processor Identification<BR>&nbsp;&nbsp;&nbsp;feature (tagged TLBs) on capable Intel chips.<BR>&nbsp;&nbsp;&nbsp;Default is 1 (enabled)</P>
<P>&nbsp;l2cr=&nbsp;&nbsp;[PPC]</P>
<P>&nbsp;l3cr=&nbsp;&nbsp;[PPC]</P>
<P>&nbsp;lapic&nbsp;&nbsp;[X86-32,APIC] Enable the local APIC even if BIOS<BR>&nbsp;&nbsp;&nbsp;disabled it.</P>
<P>&nbsp;lapic=&nbsp;&nbsp;[x86,APIC] "notscdeadline" Do not use TSC deadline<BR>&nbsp;&nbsp;&nbsp;value for LAPIC timer one-shot implementation. Default<BR>&nbsp;&nbsp;&nbsp;back to the programmable timer unit in the LAPIC.</P>
<P>&nbsp;lapic_timer_c2_ok&nbsp;[X86,APIC] trust the local apic timer<BR>&nbsp;&nbsp;&nbsp;in C2 power state.</P>
<P>&nbsp;libata.dma=&nbsp;[LIBATA] DMA control<BR>&nbsp;&nbsp;&nbsp;libata.dma=0&nbsp;&nbsp; Disable all PATA and SATA DMA<BR>&nbsp;&nbsp;&nbsp;libata.dma=1&nbsp;&nbsp; PATA and SATA Disk DMA only<BR>&nbsp;&nbsp;&nbsp;libata.dma=2&nbsp;&nbsp; ATAPI (CDROM) DMA only<BR>&nbsp;&nbsp;&nbsp;libata.dma=4&nbsp;&nbsp; Compact Flash DMA only<BR>&nbsp;&nbsp;&nbsp;Combinations also work, so libata.dma=3 enables DMA<BR>&nbsp;&nbsp;&nbsp;for disks and CDROMs, but not CFs.</P>
<P>&nbsp;libata.ignore_hpa=&nbsp;[LIBATA] Ignore HPA limit<BR>&nbsp;&nbsp;&nbsp;libata.ignore_hpa=0&nbsp;&nbsp; keep BIOS limits (default)<BR>&nbsp;&nbsp;&nbsp;libata.ignore_hpa=1&nbsp;&nbsp; ignore limits, using full disk</P>
<P>&nbsp;libata.noacpi&nbsp;[LIBATA] Disables use of ACPI in libata suspend/resume<BR>&nbsp;&nbsp;&nbsp;when set.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;int&gt;</P>
<P>&nbsp;libata.force=&nbsp;[LIBATA] Force configurations.&nbsp; The format is comma<BR>&nbsp;&nbsp;&nbsp;separated list of "[ID:]VAL" where ID is<BR>&nbsp;&nbsp;&nbsp;PORT[.DEVICE].&nbsp; PORT and DEVICE are decimal numbers<BR>&nbsp;&nbsp;&nbsp;matching port, link or device.&nbsp; Basically, it matches<BR>&nbsp;&nbsp;&nbsp;the ATA ID string printed on console by libata.&nbsp; If<BR>&nbsp;&nbsp;&nbsp;the whole ID part is omitted, the last PORT and DEVICE<BR>&nbsp;&nbsp;&nbsp;values are used.&nbsp; If ID hasn't been specified yet, the<BR>&nbsp;&nbsp;&nbsp;configuration applies to all ports, links and devices.</P>
<P>&nbsp;&nbsp;&nbsp;If only DEVICE is omitted, the parameter applies to<BR>&nbsp;&nbsp;&nbsp;the port and all links and devices behind it.&nbsp; DEVICE<BR>&nbsp;&nbsp;&nbsp;number of 0 either selects the first device or the<BR>&nbsp;&nbsp;&nbsp;first fan-out link behind PMP device.&nbsp; It does not<BR>&nbsp;&nbsp;&nbsp;select the host link.&nbsp; DEVICE number of 15 selects the<BR>&nbsp;&nbsp;&nbsp;host link and device attached to it.</P>
<P>&nbsp;&nbsp;&nbsp;The VAL specifies the configuration to force.&nbsp; As long<BR>&nbsp;&nbsp;&nbsp;as there's no ambiguity shortcut notation is allowed.<BR>&nbsp;&nbsp;&nbsp;For example, both 1.5 and 1.5G would work for 1.5Gbps.<BR>&nbsp;&nbsp;&nbsp;The following configurations can be forced.</P>
<P>&nbsp;&nbsp;&nbsp;* Cable type: 40c, 80c, short40c, unk, ign or sata.<BR>&nbsp;&nbsp;&nbsp;&nbsp; Any ID with matching PORT is used.</P>
<P>&nbsp;&nbsp;&nbsp;* SATA link speed limit: 1.5Gbps or 3.0Gbps.</P>
<P>&nbsp;&nbsp;&nbsp;* Transfer mode: pio[0-7], mwdma[0-4] and udma[0-7].<BR>&nbsp;&nbsp;&nbsp;&nbsp; udma[/][16,25,33,44,66,100,133] notation is also<BR>&nbsp;&nbsp;&nbsp;&nbsp; allowed.</P>
<P>&nbsp;&nbsp;&nbsp;* [no]ncq: Turn on or off NCQ.</P>
<P>&nbsp;&nbsp;&nbsp;* nohrst, nosrst, norst: suppress hard, soft<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and both resets.</P>
<P>&nbsp;&nbsp;&nbsp;* rstonce: only attempt one reset during<BR>&nbsp;&nbsp;&nbsp;&nbsp; hot-unplug link recovery</P>
<P>&nbsp;&nbsp;&nbsp;* dump_id: dump IDENTIFY data.</P>
<P>&nbsp;&nbsp;&nbsp;* atapi_dmadir: Enable ATAPI DMADIR bridge support</P>
<P>&nbsp;&nbsp;&nbsp;* disable: Disable this device.</P>
<P>&nbsp;&nbsp;&nbsp;If there are multiple matching configurations changing<BR>&nbsp;&nbsp;&nbsp;the same attribute, the last one is used.</P>
<P>&nbsp;memblock=debug&nbsp;[KNL] Enable memblock debug messages.</P>
<P>&nbsp;load_ramdisk=&nbsp;[RAM] List of ramdisks to load from floppy<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/ramdisk.txt.</P>
<P>&nbsp;lockd.nlm_grace_period=P&nbsp; [NFS] Assign grace period.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;</P>
<P>&nbsp;lockd.nlm_tcpport=N&nbsp;[NFS] Assign TCP port.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;</P>
<P>&nbsp;lockd.nlm_timeout=T&nbsp;[NFS] Assign timeout value.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;</P>
<P>&nbsp;lockd.nlm_udpport=M&nbsp;[NFS] Assign UDP port.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;</P>
<P>&nbsp;logibm.irq=&nbsp;[HW,MOUSE] Logitech Bus Mouse Driver<BR>&nbsp;&nbsp;&nbsp;Format: &lt;irq&gt;</P>
<P>&nbsp;loglevel=&nbsp;All Kernel Messages with a loglevel smaller than the<BR>&nbsp;&nbsp;&nbsp;console loglevel will be printed to the console. It can<BR>&nbsp;&nbsp;&nbsp;also be changed with klogd or other programs. The<BR>&nbsp;&nbsp;&nbsp;loglevels are defined as follows:</P>
<P>&nbsp;&nbsp;&nbsp;0 (KERN_EMERG)&nbsp;&nbsp;system is unusable<BR>&nbsp;&nbsp;&nbsp;1 (KERN_ALERT)&nbsp;&nbsp;action must be taken immediately<BR>&nbsp;&nbsp;&nbsp;2 (KERN_CRIT)&nbsp;&nbsp;critical conditions<BR>&nbsp;&nbsp;&nbsp;3 (KERN_ERR)&nbsp;&nbsp;error conditions<BR>&nbsp;&nbsp;&nbsp;4 (KERN_WARNING)&nbsp;warning conditions<BR>&nbsp;&nbsp;&nbsp;5 (KERN_NOTICE)&nbsp;&nbsp;normal but significant condition<BR>&nbsp;&nbsp;&nbsp;6 (KERN_INFO)&nbsp;&nbsp;informational<BR>&nbsp;&nbsp;&nbsp;7 (KERN_DEBUG)&nbsp;&nbsp;debug-level messages</P>
<P>&nbsp;log_buf_len=n[KMG]&nbsp;Sets the size of the printk ring buffer,<BR>&nbsp;&nbsp;&nbsp;in bytes.&nbsp; n must be a power of two.&nbsp; The default<BR>&nbsp;&nbsp;&nbsp;size is set in the kernel config file.</P>
<P>&nbsp;logo.nologo&nbsp;[FB] Disables display of the built-in Linux logo.<BR>&nbsp;&nbsp;&nbsp;This may be used to provide more screen space for<BR>&nbsp;&nbsp;&nbsp;kernel log messages and is useful when debugging<BR>&nbsp;&nbsp;&nbsp;kernel boot problems.</P>
<P>&nbsp;lp=0&nbsp;&nbsp;[LP]&nbsp;Specify parallel ports to use, e.g,<BR>&nbsp;lp=port[,port...]&nbsp;lp=none,parport0 (lp0 not configured, lp1 uses<BR>&nbsp;lp=reset&nbsp;&nbsp;first parallel port). 'lp=0' disables the<BR>&nbsp;lp=auto&nbsp;&nbsp;&nbsp;printer driver. 'lp=reset' (which can be<BR>&nbsp;&nbsp;&nbsp;&nbsp;specified in addition to the ports) causes<BR>&nbsp;&nbsp;&nbsp;&nbsp;attached printers to be reset. Using<BR>&nbsp;&nbsp;&nbsp;&nbsp;lp=port1,port2,... specifies the parallel ports<BR>&nbsp;&nbsp;&nbsp;&nbsp;to associate lp devices with, starting with<BR>&nbsp;&nbsp;&nbsp;&nbsp;lp0. A port specification may be 'none' to skip<BR>&nbsp;&nbsp;&nbsp;&nbsp;that lp device, or a parport name such as<BR>&nbsp;&nbsp;&nbsp;&nbsp;'parport0'. Specifying 'lp=auto' instead of a<BR>&nbsp;&nbsp;&nbsp;&nbsp;port specification list means that device IDs<BR>&nbsp;&nbsp;&nbsp;&nbsp;from each port should be examined, to see if<BR>&nbsp;&nbsp;&nbsp;&nbsp;an IEEE 1284-compliant printer is attached; if<BR>&nbsp;&nbsp;&nbsp;&nbsp;so, the driver will manage that printer.<BR>&nbsp;&nbsp;&nbsp;&nbsp;See also header of drivers/char/lp.c.</P>
<P>&nbsp;lpj=n&nbsp;&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Sets loops_per_jiffy to given constant, thus avoiding<BR>&nbsp;&nbsp;&nbsp;time-consuming boot-time autodetection (up to 250 ms per<BR>&nbsp;&nbsp;&nbsp;CPU). 0 enables autodetection (default). To determine<BR>&nbsp;&nbsp;&nbsp;the correct value for your kernel, boot with normal<BR>&nbsp;&nbsp;&nbsp;autodetection and see what value is printed. Note that<BR>&nbsp;&nbsp;&nbsp;on SMP systems the preset will be applied to all CPUs,<BR>&nbsp;&nbsp;&nbsp;which is likely to cause problems if your CPUs need<BR>&nbsp;&nbsp;&nbsp;significantly divergent settings. An incorrect value<BR>&nbsp;&nbsp;&nbsp;will cause delays in the kernel to be wrong, leading to<BR>&nbsp;&nbsp;&nbsp;unpredictable I/O errors and other breakage. Although<BR>&nbsp;&nbsp;&nbsp;unlikely, in the extreme case this might damage your<BR>&nbsp;&nbsp;&nbsp;hardware.</P>
<P>&nbsp;ltpc=&nbsp;&nbsp;[NET]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;</P>
<P>&nbsp;machvec=&nbsp;[IA-64] Force the use of a particular machine-vector<BR>&nbsp;&nbsp;&nbsp;(machvec) in a generic kernel.<BR>&nbsp;&nbsp;&nbsp;Example: machvec=hpzx1_swiotlb</P>
<P>&nbsp;machtype=&nbsp;[Loongson] Share the same kernel image file between different<BR>&nbsp;&nbsp;&nbsp; yeeloong laptop.<BR>&nbsp;&nbsp;&nbsp;Example: machtype=lemote-yeeloong-2f-7inch</P>
<P>&nbsp;max_addr=nn[KMG]&nbsp;[KNL,BOOT,ia64] All physical memory greater<BR>&nbsp;&nbsp;&nbsp;than or equal to this physical address is ignored.</P>
<P>&nbsp;maxcpus=&nbsp;[SMP] Maximum number of processors that&nbsp;an SMP kernel<BR>&nbsp;&nbsp;&nbsp;should make use of.&nbsp; maxcpus=n : n &gt;= 0 limits the<BR>&nbsp;&nbsp;&nbsp;kernel to using 'n' processors.&nbsp; n=0 is a special case,<BR>&nbsp;&nbsp;&nbsp;it is equivalent to "nosmp", which also disables<BR>&nbsp;&nbsp;&nbsp;the IO APIC.</P>
<P>&nbsp;max_loop=&nbsp;[LOOP] The number of loop block devices that get<BR>&nbsp;(loop.max_loop)&nbsp;unconditionally pre-created at init time. The default<BR>&nbsp;&nbsp;&nbsp;number is configured by BLK_DEV_LOOP_MIN_COUNT. Instead<BR>&nbsp;&nbsp;&nbsp;of statically allocating a predefined number, loop<BR>&nbsp;&nbsp;&nbsp;devices can be requested on-demand with the<BR>&nbsp;&nbsp;&nbsp;/dev/loop-control interface.</P>
<P>&nbsp;mce&nbsp;&nbsp;[X86-32] Machine Check Exception</P>
<P>&nbsp;mce=option&nbsp;[X86-64] See Documentation/x86/x86_64/boot-options.txt</P>
<P>&nbsp;md=&nbsp;&nbsp;[HW] RAID subsystems devices and level<BR>&nbsp;&nbsp;&nbsp;See Documentation/md.txt.</P>
<P>&nbsp;mdacon=&nbsp;&nbsp;[MDA]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;first&gt;,&lt;last&gt;<BR>&nbsp;&nbsp;&nbsp;Specifies range of consoles to be captured by the MDA.</P>
<P>&nbsp;mem=nn[KMG]&nbsp;[KNL,BOOT] Force usage of a specific amount of memory<BR>&nbsp;&nbsp;&nbsp;Amount of memory to be used when the kernel is not able<BR>&nbsp;&nbsp;&nbsp;to see the whole system memory or for test.<BR>&nbsp;&nbsp;&nbsp;[X86] Work as limiting max address. Use together<BR>&nbsp;&nbsp;&nbsp;with memmap= to avoid physical address space collisions.<BR>&nbsp;&nbsp;&nbsp;Without memmap= PCI devices could be placed at addresses<BR>&nbsp;&nbsp;&nbsp;belonging to unused RAM.</P>
<P>&nbsp;mem=nopentium&nbsp;[BUGS=X86-32] Disable usage of 4MB pages for kernel<BR>&nbsp;&nbsp;&nbsp;memory.</P>
<P>&nbsp;memchunk=nn[KMG]<BR>&nbsp;&nbsp;&nbsp;[KNL,SH] Allow user to override the default size for<BR>&nbsp;&nbsp;&nbsp;per-device physically contiguous DMA buffers.</P>
<P>&nbsp;memmap=exactmap&nbsp;[KNL,X86] Enable setting of an exact<BR>&nbsp;&nbsp;&nbsp;E820 memory map, as specified by the user.<BR>&nbsp;&nbsp;&nbsp;Such memmap=exactmap lines can be constructed based on<BR>&nbsp;&nbsp;&nbsp;BIOS output or other requirements. See the <A href="mailto:memmap=nn@ss">memmap=nn@ss</A><BR>&nbsp;&nbsp;&nbsp;option description.</P>
<P>&nbsp;memmap=nn[KMG]@ss[KMG]<BR>&nbsp;&nbsp;&nbsp;[KNL] Force usage of a specific region of memory<BR>&nbsp;&nbsp;&nbsp;Region of memory to be used, from ss to ss+nn.</P>
<P>&nbsp;memmap=nn[KMG]#ss[KMG]<BR>&nbsp;&nbsp;&nbsp;[KNL,ACPI] Mark specific memory as ACPI data.<BR>&nbsp;&nbsp;&nbsp;Region of memory to be used, from ss to ss+nn.</P>
<P>&nbsp;memmap=nn[KMG]$ss[KMG]<BR>&nbsp;&nbsp;&nbsp;[KNL,ACPI] Mark specific memory as reserved.<BR>&nbsp;&nbsp;&nbsp;Region of memory to be used, from ss to ss+nn.<BR>&nbsp;&nbsp;&nbsp;Example: Exclude memory from 0x18690000-0x1869ffff<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memmap=64K$0x18690000<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; or<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; memmap=0x10000$0x18690000</P>
<P>&nbsp;memory_corruption_check=0/1 [X86]<BR>&nbsp;&nbsp;&nbsp;Some BIOSes seem to corrupt the first 64k of<BR>&nbsp;&nbsp;&nbsp;memory when doing things like suspend/resume.<BR>&nbsp;&nbsp;&nbsp;Setting this option will scan the memory<BR>&nbsp;&nbsp;&nbsp;looking for corruption.&nbsp; Enabling this will<BR>&nbsp;&nbsp;&nbsp;both detect corruption and prevent the kernel<BR>&nbsp;&nbsp;&nbsp;from using the memory being corrupted.<BR>&nbsp;&nbsp;&nbsp;However, its intended as a diagnostic tool; if<BR>&nbsp;&nbsp;&nbsp;repeatable BIOS-originated corruption always<BR>&nbsp;&nbsp;&nbsp;affects the same memory, you can use memmap=<BR>&nbsp;&nbsp;&nbsp;to prevent the kernel from using that memory.</P>
<P>&nbsp;memory_corruption_check_size=size [X86]<BR>&nbsp;&nbsp;&nbsp;By default it checks for corruption in the low<BR>&nbsp;&nbsp;&nbsp;64k, making this memory unavailable for normal<BR>&nbsp;&nbsp;&nbsp;use.&nbsp; Use this parameter to scan for<BR>&nbsp;&nbsp;&nbsp;corruption in more or less memory.</P>
<P>&nbsp;memory_corruption_check_period=seconds [X86]<BR>&nbsp;&nbsp;&nbsp;By default it checks for corruption every 60<BR>&nbsp;&nbsp;&nbsp;seconds.&nbsp; Use this parameter to check at some<BR>&nbsp;&nbsp;&nbsp;other rate.&nbsp; 0 disables periodic checking.</P>
<P>&nbsp;memtest=&nbsp;[KNL,X86] Enable memtest<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;<BR>&nbsp;&nbsp;&nbsp;default : 0 &lt;disable&gt;<BR>&nbsp;&nbsp;&nbsp;Specifies the number of memtest passes to be<BR>&nbsp;&nbsp;&nbsp;performed. Each pass selects another test<BR>&nbsp;&nbsp;&nbsp;pattern from a given set of patterns. Memtest<BR>&nbsp;&nbsp;&nbsp;fills the memory with this pattern, validates<BR>&nbsp;&nbsp;&nbsp;memory contents and reserves bad memory<BR>&nbsp;&nbsp;&nbsp;regions that are detected.</P>
<P>&nbsp;meye.*=&nbsp;&nbsp;[HW] Set MotionEye Camera parameters<BR>&nbsp;&nbsp;&nbsp;See Documentation/video4linux/meye.txt.</P>
<P>&nbsp;mfgpt_irq=&nbsp;[IA-32] Specify the IRQ to use for the<BR>&nbsp;&nbsp;&nbsp;Multi-Function General Purpose Timers on AMD Geode<BR>&nbsp;&nbsp;&nbsp;platforms.</P>
<P>&nbsp;mfgptfix&nbsp;[X86-32] Fix MFGPT timers on AMD Geode platforms when<BR>&nbsp;&nbsp;&nbsp;the BIOS has incorrectly applied a workaround. TinyBIOS<BR>&nbsp;&nbsp;&nbsp;version 0.98 is known to be affected, 0.99 fixes the<BR>&nbsp;&nbsp;&nbsp;problem by letting the user disable the workaround.</P>
<P>&nbsp;mga=&nbsp;&nbsp;[HW,DRM]</P>
<P>&nbsp;min_addr=nn[KMG]&nbsp;[KNL,BOOT,ia64] All physical memory below this<BR>&nbsp;&nbsp;&nbsp;physical address is ignored.</P>
<P>&nbsp;mini2440=&nbsp;[ARM,HW,KNL]<BR>&nbsp;&nbsp;&nbsp;Format:[0..2][b][c][t]<BR>&nbsp;&nbsp;&nbsp;Default: "0tb"<BR>&nbsp;&nbsp;&nbsp;MINI2440 configuration specification:<BR>&nbsp;&nbsp;&nbsp;0 - The attached screen is the 3.5" TFT<BR>&nbsp;&nbsp;&nbsp;1 - The attached screen is the 7" TFT<BR>&nbsp;&nbsp;&nbsp;2 - The VGA Shield is attached (1024x768)<BR>&nbsp;&nbsp;&nbsp;Leaving out the screen size parameter will not load<BR>&nbsp;&nbsp;&nbsp;the TFT driver, and the framebuffer will be left<BR>&nbsp;&nbsp;&nbsp;unconfigured.<BR>&nbsp;&nbsp;&nbsp;b - Enable backlight. The TFT backlight pin will be<BR>&nbsp;&nbsp;&nbsp;linked to the kernel VESA blanking code and a GPIO<BR>&nbsp;&nbsp;&nbsp;LED. This parameter is not necessary when using the<BR>&nbsp;&nbsp;&nbsp;VGA shield.<BR>&nbsp;&nbsp;&nbsp;c - Enable the s3c camera interface.<BR>&nbsp;&nbsp;&nbsp;t - Reserved for enabling touchscreen support. The<BR>&nbsp;&nbsp;&nbsp;touchscreen support is not enabled in the mainstream<BR>&nbsp;&nbsp;&nbsp;kernel as of 2.6.30, a preliminary port can be found<BR>&nbsp;&nbsp;&nbsp;in the "bleeding edge" mini2440 support kernel at<BR>&nbsp;&nbsp;&nbsp;<A href="http://repo.or.cz/w/linux-2.6/mini2440.git">http://repo.or.cz/w/linux-2.6/mini2440.git</A></P>
<P>&nbsp;mminit_loglevel=<BR>&nbsp;&nbsp;&nbsp;[KNL] When CONFIG_DEBUG_MEMORY_INIT is set, this<BR>&nbsp;&nbsp;&nbsp;parameter allows control of the logging verbosity for<BR>&nbsp;&nbsp;&nbsp;the additional memory initialisation checks. A value<BR>&nbsp;&nbsp;&nbsp;of 0 disables mminit logging and a level of 4 will<BR>&nbsp;&nbsp;&nbsp;log everything. Information is printed at KERN_DEBUG<BR>&nbsp;&nbsp;&nbsp;so loglevel=8 may also need to be specified.</P>
<P>&nbsp;module.sig_enforce<BR>&nbsp;&nbsp;&nbsp;[KNL] When CONFIG_MODULE_SIG is set, this means that<BR>&nbsp;&nbsp;&nbsp;modules without (valid) signatures will fail to load.<BR>&nbsp;&nbsp;&nbsp;Note that if CONFIG_MODULE_SIG_FORCE is set, that<BR>&nbsp;&nbsp;&nbsp;is always true, so this option does nothing.</P>
<P>&nbsp;mousedev.tap_time=<BR>&nbsp;&nbsp;&nbsp;[MOUSE] Maximum time between finger touching and<BR>&nbsp;&nbsp;&nbsp;leaving touchpad surface for touch to be considered<BR>&nbsp;&nbsp;&nbsp;a tap and be reported as a left button click (for<BR>&nbsp;&nbsp;&nbsp;touchpads working in absolute mode only).<BR>&nbsp;&nbsp;&nbsp;Format: &lt;msecs&gt;<BR>&nbsp;mousedev.xres=&nbsp;[MOUSE] Horizontal screen resolution, used for devices<BR>&nbsp;&nbsp;&nbsp;reporting absolute coordinates, such as tablets<BR>&nbsp;mousedev.yres=&nbsp;[MOUSE] Vertical screen resolution, used for devices<BR>&nbsp;&nbsp;&nbsp;reporting absolute coordinates, such as tablets</P>
<P>&nbsp;movablecore=nn[KMG]&nbsp;[KNL,X86,IA-64,PPC] This parameter<BR>&nbsp;&nbsp;&nbsp;is similar to kernelcore except it specifies the<BR>&nbsp;&nbsp;&nbsp;amount of memory used for migratable allocations.<BR>&nbsp;&nbsp;&nbsp;If both kernelcore and movablecore is specified,<BR>&nbsp;&nbsp;&nbsp;then kernelcore will be at *least* the specified<BR>&nbsp;&nbsp;&nbsp;value but may be more. If movablecore on its own<BR>&nbsp;&nbsp;&nbsp;is specified, the administrator must be careful<BR>&nbsp;&nbsp;&nbsp;that the amount of memory usable for all allocations<BR>&nbsp;&nbsp;&nbsp;is not too small.</P>
<P>&nbsp;MTD_Partition=&nbsp;[MTD]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;name&gt;,&lt;region-number&gt;,&lt;size&gt;,&lt;offset&gt;</P>
<P>&nbsp;MTD_Region=&nbsp;[MTD] Format:<BR>&nbsp;&nbsp;&nbsp;&lt;name&gt;,&lt;region-number&gt;[,&lt;base&gt;,&lt;size&gt;,&lt;buswidth&gt;,&lt;altbuswidth&gt;]</P>
<P>&nbsp;mtdparts=&nbsp;[MTD]<BR>&nbsp;&nbsp;&nbsp;See drivers/mtd/cmdlinepart.c.</P>
<P>&nbsp;multitce=off&nbsp;[PPC]&nbsp; This parameter disables the use of the pSeries<BR>&nbsp;&nbsp;&nbsp;firmware feature for updating multiple TCE entries<BR>&nbsp;&nbsp;&nbsp;at a time.</P>
<P>&nbsp;onenand.bdry=&nbsp;[HW,MTD] Flex-OneNAND Boundary Configuration</P>
<P>&nbsp;&nbsp;&nbsp;Format: [die0_boundary][,die0_lock][,die1_boundary][,die1_lock]</P>
<P>&nbsp;&nbsp;&nbsp;boundary - index of last SLC block on Flex-OneNAND.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The remaining blocks are configured as MLC blocks.<BR>&nbsp;&nbsp;&nbsp;lock&nbsp; - Configure if Flex-OneNAND boundary should be locked.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Once locked, the boundary cannot be changed.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 indicates lock status, 0 indicates unlock status.</P>
<P>&nbsp;mtdset=&nbsp;&nbsp;[ARM]<BR>&nbsp;&nbsp;&nbsp;ARM/S3C2412 JIVE boot control</P>
<P>&nbsp;&nbsp;&nbsp;See arch/arm/mach-s3c2412/mach-jive.c</P>
<P>&nbsp;mtouchusb.raw_coordinates=<BR>&nbsp;&nbsp;&nbsp;[HW] Make the MicroTouch USB driver use raw coordinates<BR>&nbsp;&nbsp;&nbsp;('y', default) or cooked coordinates ('n')</P>
<P>&nbsp;mtrr_chunk_size=nn[KMG] [X86]<BR>&nbsp;&nbsp;&nbsp;used for mtrr cleanup. It is largest continuous chunk<BR>&nbsp;&nbsp;&nbsp;that could hold holes aka. UC entries.</P>
<P>&nbsp;mtrr_gran_size=nn[KMG] [X86]<BR>&nbsp;&nbsp;&nbsp;Used for mtrr cleanup. It is granularity of mtrr block.<BR>&nbsp;&nbsp;&nbsp;Default is 1.<BR>&nbsp;&nbsp;&nbsp;Large value could prevent small alignment from<BR>&nbsp;&nbsp;&nbsp;using up MTRRs.</P>
<P>&nbsp;mtrr_spare_reg_nr=n [X86]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;<BR>&nbsp;&nbsp;&nbsp;Range: 0,7 : spare reg number<BR>&nbsp;&nbsp;&nbsp;Default : 1<BR>&nbsp;&nbsp;&nbsp;Used for mtrr cleanup. It is spare mtrr entries number.<BR>&nbsp;&nbsp;&nbsp;Set to 2 or more if your graphical card needs more.</P>
<P>&nbsp;n2=&nbsp;&nbsp;[NET] SDL Inc. RISCom/N2 synchronous serial card</P>
<P>&nbsp;netdev=&nbsp;&nbsp;[NET] Network devices parameters<BR>&nbsp;&nbsp;&nbsp;Format: &lt;irq&gt;,&lt;io&gt;,&lt;mem_start&gt;,&lt;mem_end&gt;,&lt;name&gt;<BR>&nbsp;&nbsp;&nbsp;Note that mem_start is often overloaded to mean<BR>&nbsp;&nbsp;&nbsp;something different and driver-specific.<BR>&nbsp;&nbsp;&nbsp;This usage is only documented in each driver source<BR>&nbsp;&nbsp;&nbsp;file if at all.</P>
<P>&nbsp;nf_conntrack.acct=<BR>&nbsp;&nbsp;&nbsp;[NETFILTER] Enable connection tracking flow accounting<BR>&nbsp;&nbsp;&nbsp;0 to disable accounting<BR>&nbsp;&nbsp;&nbsp;1 to enable accounting<BR>&nbsp;&nbsp;&nbsp;Default value is 0.</P>
<P>&nbsp;nfsaddrs=&nbsp;[NFS] Deprecated.&nbsp; Use ip= instead.<BR>&nbsp;&nbsp;&nbsp;See Documentation/filesystems/nfs/nfsroot.txt.</P>
<P>&nbsp;nfsroot=&nbsp;[NFS] nfs root filesystem for disk-less boxes.<BR>&nbsp;&nbsp;&nbsp;See Documentation/filesystems/nfs/nfsroot.txt.</P>
<P>&nbsp;nfsrootdebug&nbsp;[NFS] enable nfsroot debugging messages.<BR>&nbsp;&nbsp;&nbsp;See Documentation/filesystems/nfs/nfsroot.txt.</P>
<P>&nbsp;nfs.callback_tcpport=<BR>&nbsp;&nbsp;&nbsp;[NFS] set the TCP port on which the NFSv4 callback<BR>&nbsp;&nbsp;&nbsp;channel should listen.</P>
<P>&nbsp;nfs.cache_getent=<BR>&nbsp;&nbsp;&nbsp;[NFS] sets the pathname to the program which is used<BR>&nbsp;&nbsp;&nbsp;to update the NFS client cache entries.</P>
<P>&nbsp;nfs.cache_getent_timeout=<BR>&nbsp;&nbsp;&nbsp;[NFS] sets the timeout after which an attempt to<BR>&nbsp;&nbsp;&nbsp;update a cache entry is deemed to have failed.</P>
<P>&nbsp;nfs.idmap_cache_timeout=<BR>&nbsp;&nbsp;&nbsp;[NFS] set the maximum lifetime for idmapper cache<BR>&nbsp;&nbsp;&nbsp;entries.</P>
<P>&nbsp;nfs.enable_ino64=<BR>&nbsp;&nbsp;&nbsp;[NFS] enable 64-bit inode numbers.<BR>&nbsp;&nbsp;&nbsp;If zero, the NFS client will fake up a 32-bit inode<BR>&nbsp;&nbsp;&nbsp;number for the readdir() and stat() syscalls instead<BR>&nbsp;&nbsp;&nbsp;of returning the full 64-bit number.<BR>&nbsp;&nbsp;&nbsp;The default is to return 64-bit inode numbers.</P>
<P>&nbsp;nfs.max_session_slots=<BR>&nbsp;&nbsp;&nbsp;[NFSv4.1] Sets the maximum number of session slots<BR>&nbsp;&nbsp;&nbsp;the client will attempt to negotiate with the server.<BR>&nbsp;&nbsp;&nbsp;This limits the number of simultaneous RPC requests<BR>&nbsp;&nbsp;&nbsp;that the client can send to the NFSv4.1 server.<BR>&nbsp;&nbsp;&nbsp;Note that there is little point in setting this<BR>&nbsp;&nbsp;&nbsp;value higher than the max_tcp_slot_table_limit.</P>
<P>&nbsp;nfs.nfs4_disable_idmapping=<BR>&nbsp;&nbsp;&nbsp;[NFSv4] When set to the default of '1', this option<BR>&nbsp;&nbsp;&nbsp;ensures that both the RPC level authentication<BR>&nbsp;&nbsp;&nbsp;scheme and the NFS level operations agree to use<BR>&nbsp;&nbsp;&nbsp;numeric uids/gids if the mount is using the<BR>&nbsp;&nbsp;&nbsp;'sec=sys' security flavour. In effect it is<BR>&nbsp;&nbsp;&nbsp;disabling idmapping, which can make migration from<BR>&nbsp;&nbsp;&nbsp;legacy NFSv2/v3 systems to NFSv4 easier.<BR>&nbsp;&nbsp;&nbsp;Servers that do not support this mode of operation<BR>&nbsp;&nbsp;&nbsp;will be autodetected by the client, and it will fall<BR>&nbsp;&nbsp;&nbsp;back to using the idmapper.<BR>&nbsp;&nbsp;&nbsp;To turn off this behaviour, set the value to '0'.<BR>&nbsp;nfs.nfs4_unique_id=<BR>&nbsp;&nbsp;&nbsp;[NFS4] Specify an additional fixed unique ident-<BR>&nbsp;&nbsp;&nbsp;ification string that NFSv4 clients can insert into<BR>&nbsp;&nbsp;&nbsp;their nfs_client_id4 string.&nbsp; This is typically a<BR>&nbsp;&nbsp;&nbsp;UUID that is generated at system install time.</P>
<P>&nbsp;nfs.send_implementation_id =<BR>&nbsp;&nbsp;&nbsp;[NFSv4.1] Send client implementation identification<BR>&nbsp;&nbsp;&nbsp;information in exchange_id requests.<BR>&nbsp;&nbsp;&nbsp;If zero, no implementation identification information<BR>&nbsp;&nbsp;&nbsp;will be sent.<BR>&nbsp;&nbsp;&nbsp;The default is to send the implementation identification<BR>&nbsp;&nbsp;&nbsp;information.</P>
<P>&nbsp;nfsd.nfs4_disable_idmapping=<BR>&nbsp;&nbsp;&nbsp;[NFSv4] When set to the default of '1', the NFSv4<BR>&nbsp;&nbsp;&nbsp;server will return only numeric uids and gids to<BR>&nbsp;&nbsp;&nbsp;clients using auth_sys, and will accept numeric uids<BR>&nbsp;&nbsp;&nbsp;and gids from such clients.&nbsp; This is intended to ease<BR>&nbsp;&nbsp;&nbsp;migration from NFSv2/v3.</P>
<P>&nbsp;objlayoutdriver.osd_login_prog=<BR>&nbsp;&nbsp;&nbsp;[NFS] [OBJLAYOUT] sets the pathname to the program which<BR>&nbsp;&nbsp;&nbsp;is used to automatically discover and login into new<BR>&nbsp;&nbsp;&nbsp;osd-targets. Please see:<BR>&nbsp;&nbsp;&nbsp;Documentation/filesystems/pnfs.txt for more explanations</P>
<P>&nbsp;nmi_debug=&nbsp;[KNL,AVR32,SH] Specify one or more actions to take<BR>&nbsp;&nbsp;&nbsp;when a NMI is triggered.<BR>&nbsp;&nbsp;&nbsp;Format: [state][,regs][,debounce][,die]</P>
<P>&nbsp;nmi_watchdog=&nbsp;[KNL,BUGS=X86] Debugging features for SMP kernels<BR>&nbsp;&nbsp;&nbsp;Format: [panic,][nopanic,][num]<BR>&nbsp;&nbsp;&nbsp;Valid num: 0<BR>&nbsp;&nbsp;&nbsp;0 - turn nmi_watchdog off<BR>&nbsp;&nbsp;&nbsp;When panic is specified, panic when an NMI watchdog<BR>&nbsp;&nbsp;&nbsp;timeout occurs (or 'nopanic' to override the opposite<BR>&nbsp;&nbsp;&nbsp;default).<BR>&nbsp;&nbsp;&nbsp;This is useful when you use a panic=... timeout and<BR>&nbsp;&nbsp;&nbsp;need the box quickly up again.</P>
<P>&nbsp;netpoll.carrier_timeout=<BR>&nbsp;&nbsp;&nbsp;[NET] Specifies amount of time (in seconds) that<BR>&nbsp;&nbsp;&nbsp;netpoll should wait for a carrier. By default netpoll<BR>&nbsp;&nbsp;&nbsp;waits 4 seconds.</P>
<P>&nbsp;no387&nbsp;&nbsp;[BUGS=X86-32] Tells the kernel to use the 387 maths<BR>&nbsp;&nbsp;&nbsp;emulation library even if a 387 maths coprocessor<BR>&nbsp;&nbsp;&nbsp;is present.</P>
<P>&nbsp;no_console_suspend<BR>&nbsp;&nbsp;&nbsp;[HW] Never suspend the console<BR>&nbsp;&nbsp;&nbsp;Disable suspending of consoles during suspend and<BR>&nbsp;&nbsp;&nbsp;hibernate operations.&nbsp; Once disabled, debugging<BR>&nbsp;&nbsp;&nbsp;messages can reach various consoles while the rest<BR>&nbsp;&nbsp;&nbsp;of the system is being put to sleep (ie, while<BR>&nbsp;&nbsp;&nbsp;debugging driver suspend/resume hooks).&nbsp; This may<BR>&nbsp;&nbsp;&nbsp;not work reliably with all consoles, but is known<BR>&nbsp;&nbsp;&nbsp;to work with serial and VGA consoles.<BR>&nbsp;&nbsp;&nbsp;To facilitate more flexible debugging, we also add<BR>&nbsp;&nbsp;&nbsp;console_suspend, a printk module parameter to control<BR>&nbsp;&nbsp;&nbsp;it. Users could use console_suspend (usually<BR>&nbsp;&nbsp;&nbsp;/sys/module/printk/parameters/console_suspend) to<BR>&nbsp;&nbsp;&nbsp;turn on/off it dynamically.</P>
<P>&nbsp;noaliencache&nbsp;[MM, NUMA, SLAB] Disables the allocation of alien<BR>&nbsp;&nbsp;&nbsp;caches in the slab allocator.&nbsp; Saves per-node memory,<BR>&nbsp;&nbsp;&nbsp;but will impact performance.</P>
<P>&nbsp;noalign&nbsp;&nbsp;[KNL,ARM]</P>
<P>&nbsp;noapic&nbsp;&nbsp;[SMP,APIC] Tells the kernel to not make use of any<BR>&nbsp;&nbsp;&nbsp;IOAPICs that may be present in the system.</P>
<P>&nbsp;noautogroup&nbsp;Disable scheduler automatic task group creation.</P>
<P>&nbsp;nobats&nbsp;&nbsp;[PPC] Do not use BATs for mapping kernel lowmem<BR>&nbsp;&nbsp;&nbsp;on "Classic" PPC cores.</P>
<P>&nbsp;nocache&nbsp;&nbsp;[ARM]</P>
<P>&nbsp;noclflush&nbsp;[BUGS=X86] Don't use the CLFLUSH instruction</P>
<P>&nbsp;nodelayacct&nbsp;[KNL] Disable per-task delay accounting</P>
<P>&nbsp;nodisconnect&nbsp;[HW,SCSI,M68K] Disables SCSI disconnects.</P>
<P>&nbsp;nodsp&nbsp;&nbsp;[SH] Disable hardware DSP at boot time.</P>
<P>&nbsp;noefi&nbsp;&nbsp;[X86] Disable EFI runtime services support.</P>
<P>&nbsp;noexec&nbsp;&nbsp;[IA-64]</P>
<P>&nbsp;noexec&nbsp;&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;On X86-32 available only on PAE configured kernels.<BR>&nbsp;&nbsp;&nbsp;noexec=on: enable non-executable mappings (default)<BR>&nbsp;&nbsp;&nbsp;noexec=off: disable non-executable mappings</P>
<P>&nbsp;nosmap&nbsp;&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;Disable SMAP (Supervisor Mode Access Prevention)<BR>&nbsp;&nbsp;&nbsp;even if it is supported by processor.</P>
<P>&nbsp;nosmep&nbsp;&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;Disable SMEP (Supervisor Mode Execution Prevention)<BR>&nbsp;&nbsp;&nbsp;even if it is supported by processor.</P>
<P>&nbsp;noexec32&nbsp;[X86-64]<BR>&nbsp;&nbsp;&nbsp;This affects only 32-bit executables.<BR>&nbsp;&nbsp;&nbsp;noexec32=on: enable non-executable mappings (default)<BR>&nbsp;&nbsp;&nbsp;&nbsp;read doesn't imply executable mappings<BR>&nbsp;&nbsp;&nbsp;noexec32=off: disable non-executable mappings<BR>&nbsp;&nbsp;&nbsp;&nbsp;read implies executable mappings</P>
<P>&nbsp;nofpu&nbsp;&nbsp;[SH] Disable hardware FPU at boot time.</P>
<P>&nbsp;nofxsr&nbsp;&nbsp;[BUGS=X86-32] Disables x86 floating point extended<BR>&nbsp;&nbsp;&nbsp;register save and restore. The kernel will only save<BR>&nbsp;&nbsp;&nbsp;legacy floating-point registers on task switch.</P>
<P>&nbsp;noxsave&nbsp;&nbsp;[BUGS=X86] Disables x86 extended register state save<BR>&nbsp;&nbsp;&nbsp;and restore using xsave. The kernel will fallback to<BR>&nbsp;&nbsp;&nbsp;enabling legacy floating-point and sse state.</P>
<P>&nbsp;eagerfpu=&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;on&nbsp;enable eager fpu restore<BR>&nbsp;&nbsp;&nbsp;off&nbsp;disable eager fpu restore<BR>&nbsp;&nbsp;&nbsp;auto&nbsp;selects the default scheme, which automatically<BR>&nbsp;&nbsp;&nbsp;&nbsp;enables eagerfpu restore for xsaveopt.</P>
<P>&nbsp;nohlt&nbsp;&nbsp;[BUGS=ARM,SH] Tells the kernel that the sleep(SH) or<BR>&nbsp;&nbsp;&nbsp;wfi(ARM) instruction doesn't work correctly and not to<BR>&nbsp;&nbsp;&nbsp;use it. This is also useful when using JTAG debugger.</P>
<P>&nbsp;no_file_caps&nbsp;Tells the kernel not to honor file capabilities.&nbsp; The<BR>&nbsp;&nbsp;&nbsp;only way then for a file to be executed with privilege<BR>&nbsp;&nbsp;&nbsp;is to be setuid root or executed by root.</P>
<P>&nbsp;nohalt&nbsp;&nbsp;[IA-64] Tells the kernel not to use the power saving<BR>&nbsp;&nbsp;&nbsp;function PAL_HALT_LIGHT when idle. This increases<BR>&nbsp;&nbsp;&nbsp;power-consumption. On the positive side, it reduces<BR>&nbsp;&nbsp;&nbsp;interrupt wake-up latency, which may improve performance<BR>&nbsp;&nbsp;&nbsp;in certain environments such as networked servers or<BR>&nbsp;&nbsp;&nbsp;real-time systems.</P>
<P>&nbsp;nohz=&nbsp;&nbsp;[KNL] Boottime enable/disable dynamic ticks<BR>&nbsp;&nbsp;&nbsp;Valid arguments: on, off<BR>&nbsp;&nbsp;&nbsp;Default: on</P>
<P>&nbsp;nohz_full=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;In kernels built with CONFIG_NO_HZ_FULL=y, set<BR>&nbsp;&nbsp;&nbsp;the specified list of CPUs whose tick will be stopped<BR>&nbsp;&nbsp;&nbsp;whenever possible. The boot CPU will be forced outside<BR>&nbsp;&nbsp;&nbsp;the range to maintain the timekeeping.<BR>&nbsp;&nbsp;&nbsp;The CPUs in this range must also be included in the<BR>&nbsp;&nbsp;&nbsp;rcu_nocbs= set.</P>
<P>&nbsp;noiotrap&nbsp;[SH] Disables trapped I/O port accesses.</P>
<P>&nbsp;noirqdebug&nbsp;[X86-32] Disables the code which attempts to detect and<BR>&nbsp;&nbsp;&nbsp;disable unhandled interrupt sources.</P>
<P>&nbsp;no_timer_check&nbsp;[X86,APIC] Disables the code which tests for<BR>&nbsp;&nbsp;&nbsp;broken timer IRQ sources.</P>
<P>&nbsp;noisapnp&nbsp;[ISAPNP] Disables ISA PnP code.</P>
<P>&nbsp;noinitrd&nbsp;[RAM] Tells the kernel not to load any configured<BR>&nbsp;&nbsp;&nbsp;initial RAM disk.</P>
<P>&nbsp;nointremap&nbsp;[X86-64, Intel-IOMMU] Do not enable interrupt<BR>&nbsp;&nbsp;&nbsp;remapping.<BR>&nbsp;&nbsp;&nbsp;[Deprecated - use intremap=off]</P>
<P>&nbsp;nointroute&nbsp;[IA-64]</P>
<P>&nbsp;nojitter&nbsp;[IA-64] Disables jitter checking for ITC timers.</P>
<P>&nbsp;no-kvmclock&nbsp;[X86,KVM] Disable paravirtualized KVM clock driver</P>
<P>&nbsp;no-kvmapf&nbsp;[X86,KVM] Disable paravirtualized asynchronous page<BR>&nbsp;&nbsp;&nbsp;fault handling.</P>
<P>&nbsp;no-steal-acc&nbsp;&nbsp;&nbsp; [X86,KVM] Disable paravirtualized steal time accounting.<BR>&nbsp;&nbsp;&nbsp;steal time is computed, but won't influence scheduler<BR>&nbsp;&nbsp;&nbsp;behaviour</P>
<P>&nbsp;nolapic&nbsp;&nbsp;[X86-32,APIC] Do not enable or use the local APIC.</P>
<P>&nbsp;nolapic_timer&nbsp;[X86-32,APIC] Do not use the local APIC timer.</P>
<P>&nbsp;noltlbs&nbsp;&nbsp;[PPC] Do not use large page/tlb entries for kernel<BR>&nbsp;&nbsp;&nbsp;lowmem mapping on PPC40x.</P>
<P>&nbsp;nomca&nbsp;&nbsp;[IA-64] Disable machine check abort handling</P>
<P>&nbsp;nomce&nbsp;&nbsp;[X86-32] Machine Check Exception</P>
<P>&nbsp;nomfgpt&nbsp;&nbsp;[X86-32] Disable Multi-Function General Purpose<BR>&nbsp;&nbsp;&nbsp;Timer usage (for AMD Geode machines).</P>
<P>&nbsp;nonmi_ipi&nbsp;[X86] Disable using NMI IPIs during panic/reboot to<BR>&nbsp;&nbsp;&nbsp;shutdown the other cpus.&nbsp; Instead use the REBOOT_VECTOR<BR>&nbsp;&nbsp;&nbsp;irq.</P>
<P>&nbsp;nomodule&nbsp;Disable module load</P>
<P>&nbsp;nopat&nbsp;&nbsp;[X86] Disable PAT (page attribute table extension of<BR>&nbsp;&nbsp;&nbsp;pagetables) support.</P>
<P>&nbsp;norandmaps&nbsp;Don't use address space randomization.&nbsp; Equivalent to<BR>&nbsp;&nbsp;&nbsp;echo 0 &gt; /proc/sys/kernel/randomize_va_space</P>
<P>&nbsp;noreplace-paravirt&nbsp;[X86,IA-64,PV_OPS] Don't patch paravirt_ops</P>
<P>&nbsp;noreplace-smp&nbsp;[X86-32,SMP] Don't replace SMP instructions<BR>&nbsp;&nbsp;&nbsp;with UP alternatives</P>
<P>&nbsp;nordrand&nbsp;[X86] Disable the direct use of the RDRAND<BR>&nbsp;&nbsp;&nbsp;instruction even if it is supported by the<BR>&nbsp;&nbsp;&nbsp;processor.&nbsp; RDRAND is still available to user<BR>&nbsp;&nbsp;&nbsp;space applications.</P>
<P>&nbsp;noresume&nbsp;[SWSUSP] Disables resume and restores original swap<BR>&nbsp;&nbsp;&nbsp;space.</P>
<P>&nbsp;no-scroll&nbsp;[VGA] Disables scrollback.<BR>&nbsp;&nbsp;&nbsp;This is required for the Braillex ib80-piezo Braille<BR>&nbsp;&nbsp;&nbsp;reader made by F.H. Papenmeier (Germany).</P>
<P>&nbsp;nosbagart&nbsp;[IA-64]</P>
<P>&nbsp;nosep&nbsp;&nbsp;[BUGS=X86-32] Disables x86 SYSENTER/SYSEXIT support.</P>
<P>&nbsp;nosmp&nbsp;&nbsp;[SMP] Tells an SMP kernel to act as a UP kernel,<BR>&nbsp;&nbsp;&nbsp;and disable the IO APIC.&nbsp; legacy for "maxcpus=0".</P>
<P>&nbsp;nosoftlockup&nbsp;[KNL] Disable the soft-lockup detector.</P>
<P>&nbsp;nosync&nbsp;&nbsp;[HW,M68K] Disables sync negotiation for all devices.</P>
<P>&nbsp;notsc&nbsp;&nbsp;[BUGS=X86-32] Disable Time Stamp Counter</P>
<P>&nbsp;nousb&nbsp;&nbsp;[USB] Disable the USB subsystem</P>
<P>&nbsp;nowatchdog&nbsp;[KNL] Disable the lockup detector (NMI watchdog).</P>
<P>&nbsp;nowb&nbsp;&nbsp;[ARM]</P>
<P>&nbsp;nox2apic&nbsp;[X86-64,APIC] Do not enable x2APIC mode.</P>
<P>&nbsp;cpu0_hotplug&nbsp;[X86] Turn on CPU0 hotplug feature when<BR>&nbsp;&nbsp;&nbsp;CONFIG_BOOTPARAM_HOTPLUG_CPU0 is off.<BR>&nbsp;&nbsp;&nbsp;Some features depend on CPU0. Known dependencies are:<BR>&nbsp;&nbsp;&nbsp;1. Resume from suspend/hibernate depends on CPU0.<BR>&nbsp;&nbsp;&nbsp;Suspend/hibernate will fail if CPU0 is offline and you<BR>&nbsp;&nbsp;&nbsp;need to online CPU0 before suspend/hibernate.<BR>&nbsp;&nbsp;&nbsp;2. PIC interrupts also depend on CPU0. CPU0 can't be<BR>&nbsp;&nbsp;&nbsp;removed if a PIC interrupt is detected.<BR>&nbsp;&nbsp;&nbsp;It's said poweroff/reboot may depend on CPU0 on some<BR>&nbsp;&nbsp;&nbsp;machines although I haven't seen such issues so far<BR>&nbsp;&nbsp;&nbsp;after CPU0 is offline on a few tested machines.<BR>&nbsp;&nbsp;&nbsp;If the dependencies are under your control, you can<BR>&nbsp;&nbsp;&nbsp;turn on cpu0_hotplug.</P>
<P>&nbsp;nptcg=&nbsp;&nbsp;[IA-64] Override max number of concurrent global TLB<BR>&nbsp;&nbsp;&nbsp;purges which is reported from either PAL_VM_SUMMARY or<BR>&nbsp;&nbsp;&nbsp;SAL PALO.</P>
<P>&nbsp;nr_cpus=&nbsp;[SMP] Maximum number of processors that&nbsp;an SMP kernel<BR>&nbsp;&nbsp;&nbsp;could support.&nbsp; nr_cpus=n : n &gt;= 1 limits the kernel to<BR>&nbsp;&nbsp;&nbsp;supporting 'n' processors. Later in runtime you can not<BR>&nbsp;&nbsp;&nbsp;use hotplug cpu feature to put more cpu back to online.<BR>&nbsp;&nbsp;&nbsp;just like you compile the kernel NR_CPUS=n</P>
<P>&nbsp;nr_uarts=&nbsp;[SERIAL] maximum number of UARTs to be registered.</P>
<P>&nbsp;numa_balancing=&nbsp;[KNL,X86] Enable or disable automatic NUMA balancing.<BR>&nbsp;&nbsp;&nbsp;Allowed values are enable and disable</P>
<P>&nbsp;numa_zonelist_order= [KNL, BOOT] Select zonelist order for NUMA.<BR>&nbsp;&nbsp;&nbsp;one of ['zone', 'node', 'default'] can be specified<BR>&nbsp;&nbsp;&nbsp;This can be set from sysctl after boot.<BR>&nbsp;&nbsp;&nbsp;See Documentation/sysctl/vm.txt for details.</P>
<P>&nbsp;ohci1394_dma=early&nbsp;[HW] enable debugging via the ohci1394 driver.<BR>&nbsp;&nbsp;&nbsp;See Documentation/debugging-via-ohci1394.txt for more<BR>&nbsp;&nbsp;&nbsp;info.</P>
<P>&nbsp;olpc_ec_timeout= [OLPC] ms delay when issuing EC commands<BR>&nbsp;&nbsp;&nbsp;Rather than timing out after 20 ms if an EC<BR>&nbsp;&nbsp;&nbsp;command is not properly ACKed, override the length<BR>&nbsp;&nbsp;&nbsp;of the timeout.&nbsp; We have interrupts disabled while<BR>&nbsp;&nbsp;&nbsp;waiting for the ACK, so if this is set too high<BR>&nbsp;&nbsp;&nbsp;interrupts *may* be lost!</P>
<P>&nbsp;omap_mux=&nbsp;[OMAP] Override bootloader pin multiplexing.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;mux_mode0.mode_name=value&gt;...<BR>&nbsp;&nbsp;&nbsp;For example, to override I2C bus2:<BR>&nbsp;&nbsp;&nbsp;omap_mux=i2c2_scl.i2c2_scl=0x100,i2c2_sda.i2c2_sda=0x100</P>
<P>&nbsp;oprofile.timer=&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;Use timer interrupt instead of performance counters</P>
<P>&nbsp;oprofile.cpu_type=&nbsp;Force an oprofile cpu type<BR>&nbsp;&nbsp;&nbsp;This might be useful if you have an older oprofile<BR>&nbsp;&nbsp;&nbsp;userland or if you want common events.<BR>&nbsp;&nbsp;&nbsp;Format: { arch_perfmon }<BR>&nbsp;&nbsp;&nbsp;arch_perfmon: [X86] Force use of architectural<BR>&nbsp;&nbsp;&nbsp;&nbsp;perfmon on Intel CPUs instead of the<BR>&nbsp;&nbsp;&nbsp;&nbsp;CPU specific event set.<BR>&nbsp;&nbsp;&nbsp;timer: [X86] Force use of architectural NMI<BR>&nbsp;&nbsp;&nbsp;&nbsp;timer mode (see also oprofile.timer<BR>&nbsp;&nbsp;&nbsp;&nbsp;for generic hr timer mode)<BR>&nbsp;&nbsp;&nbsp;&nbsp;[s390] Force legacy basic mode sampling<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (report cpu_type "timer")</P>
<P>&nbsp;oops=panic&nbsp;Always panic on oopses. Default is to just kill the<BR>&nbsp;&nbsp;&nbsp;process, but there is a small probability of<BR>&nbsp;&nbsp;&nbsp;deadlocking the machine.<BR>&nbsp;&nbsp;&nbsp;This will also cause panics on machine check exceptions.<BR>&nbsp;&nbsp;&nbsp;Useful together with panic=30 to trigger a reboot.</P>
<P>&nbsp;OSS&nbsp;&nbsp;[HW,OSS]<BR>&nbsp;&nbsp;&nbsp;See Documentation/sound/oss/oss-parameters.txt</P>
<P>&nbsp;panic=&nbsp;&nbsp;[KNL] Kernel behaviour on panic: delay &lt;timeout&gt;<BR>&nbsp;&nbsp;&nbsp;timeout &gt; 0: seconds before rebooting<BR>&nbsp;&nbsp;&nbsp;timeout = 0: wait forever<BR>&nbsp;&nbsp;&nbsp;timeout &lt; 0: reboot immediately<BR>&nbsp;&nbsp;&nbsp;Format: &lt;timeout&gt;</P>
<P>&nbsp;parkbd.port=&nbsp;[HW] Parallel port number the keyboard adapter is<BR>&nbsp;&nbsp;&nbsp;connected to, default is 0.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;parport#&gt;<BR>&nbsp;parkbd.mode=&nbsp;[HW] Parallel port keyboard adapter mode of operation,<BR>&nbsp;&nbsp;&nbsp;0 for XT, 1 for AT (default is AT).<BR>&nbsp;&nbsp;&nbsp;Format: &lt;mode&gt;</P>
<P>&nbsp;parport=&nbsp;[HW,PPT] Specify parallel ports. 0 disables.<BR>&nbsp;&nbsp;&nbsp;Format: { 0 | auto | 0xBBB[,IRQ[,DMA]] }<BR>&nbsp;&nbsp;&nbsp;Use 'auto' to force the driver to use any<BR>&nbsp;&nbsp;&nbsp;IRQ/DMA settings detected (the default is to<BR>&nbsp;&nbsp;&nbsp;ignore detected IRQ/DMA settings because of<BR>&nbsp;&nbsp;&nbsp;possible conflicts). You can specify the base<BR>&nbsp;&nbsp;&nbsp;address, IRQ, and DMA settings; IRQ and DMA<BR>&nbsp;&nbsp;&nbsp;should be numbers, or 'auto' (for using detected<BR>&nbsp;&nbsp;&nbsp;settings on that particular port), or 'nofifo'<BR>&nbsp;&nbsp;&nbsp;(to avoid using a FIFO even if it is detected).<BR>&nbsp;&nbsp;&nbsp;Parallel ports are assigned in the order they<BR>&nbsp;&nbsp;&nbsp;are specified on the command line, starting<BR>&nbsp;&nbsp;&nbsp;with parport0.</P>
<P>&nbsp;parport_init_mode=&nbsp;[HW,PPT]<BR>&nbsp;&nbsp;&nbsp;Configure VIA parallel port to operate in<BR>&nbsp;&nbsp;&nbsp;a specific mode. This is necessary on Pegasos<BR>&nbsp;&nbsp;&nbsp;computer where firmware has no options for setting<BR>&nbsp;&nbsp;&nbsp;up parallel port mode and sets it to spp.<BR>&nbsp;&nbsp;&nbsp;Currently this function knows 686a and 8231 chips.<BR>&nbsp;&nbsp;&nbsp;Format: [spp|ps2|epp|ecp|ecpepp]</P>
<P>&nbsp;pause_on_oops=<BR>&nbsp;&nbsp;&nbsp;Halt all CPUs after the first oops has been printed for<BR>&nbsp;&nbsp;&nbsp;the specified number of seconds.&nbsp; This is to be used if<BR>&nbsp;&nbsp;&nbsp;your oopses keep scrolling off the screen.</P>
<P>&nbsp;pcbit=&nbsp;&nbsp;[HW,ISDN]</P>
<P>&nbsp;pcd.&nbsp;&nbsp;[PARIDE]<BR>&nbsp;&nbsp;&nbsp;See header of drivers/block/paride/pcd.c.<BR>&nbsp;&nbsp;&nbsp;See also Documentation/blockdev/paride.txt.</P>
<P>&nbsp;pci=option[,option...]&nbsp;[PCI] various PCI subsystem options:<BR>&nbsp;&nbsp;earlydump&nbsp;[X86] dump PCI config space before the kernel<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; changes anything<BR>&nbsp;&nbsp;off&nbsp;&nbsp;[X86] don't probe for the PCI bus<BR>&nbsp;&nbsp;bios&nbsp;&nbsp;[X86-32] force use of PCI BIOS, don't access<BR>&nbsp;&nbsp;&nbsp;&nbsp;the hardware directly. Use this if your machine<BR>&nbsp;&nbsp;&nbsp;&nbsp;has a non-standard PCI host bridge.<BR>&nbsp;&nbsp;nobios&nbsp;&nbsp;[X86-32] disallow use of PCI BIOS, only direct<BR>&nbsp;&nbsp;&nbsp;&nbsp;hardware access methods are allowed. Use this<BR>&nbsp;&nbsp;&nbsp;&nbsp;if you experience crashes upon bootup and you<BR>&nbsp;&nbsp;&nbsp;&nbsp;suspect they are caused by the BIOS.<BR>&nbsp;&nbsp;conf1&nbsp;&nbsp;[X86] Force use of PCI Configuration<BR>&nbsp;&nbsp;&nbsp;&nbsp;Mechanism 1.<BR>&nbsp;&nbsp;conf2&nbsp;&nbsp;[X86] Force use of PCI Configuration<BR>&nbsp;&nbsp;&nbsp;&nbsp;Mechanism 2.<BR>&nbsp;&nbsp;noaer&nbsp;&nbsp;[PCIE] If the PCIEAER kernel config parameter is<BR>&nbsp;&nbsp;&nbsp;&nbsp;enabled, this kernel boot option can be used to<BR>&nbsp;&nbsp;&nbsp;&nbsp;disable the use of PCIE advanced error reporting.<BR>&nbsp;&nbsp;nodomains&nbsp;[PCI] Disable support for multiple PCI<BR>&nbsp;&nbsp;&nbsp;&nbsp;root domains (aka PCI segments, in ACPI-speak).<BR>&nbsp;&nbsp;nommconf&nbsp;[X86] Disable use of MMCONFIG for PCI<BR>&nbsp;&nbsp;&nbsp;&nbsp;Configuration<BR>&nbsp;&nbsp;check_enable_amd_mmconf [X86] check for and enable<BR>&nbsp;&nbsp;&nbsp;&nbsp;properly configured MMIO access to PCI<BR>&nbsp;&nbsp;&nbsp;&nbsp;config space on AMD family 10h CPU<BR>&nbsp;&nbsp;nomsi&nbsp;&nbsp;[MSI] If the PCI_MSI kernel config parameter is<BR>&nbsp;&nbsp;&nbsp;&nbsp;enabled, this kernel boot option can be used to<BR>&nbsp;&nbsp;&nbsp;&nbsp;disable the use of MSI interrupts system-wide.<BR>&nbsp;&nbsp;noioapicquirk&nbsp;[APIC] Disable all boot interrupt quirks.<BR>&nbsp;&nbsp;&nbsp;&nbsp;Safety option to keep boot IRQs enabled. This<BR>&nbsp;&nbsp;&nbsp;&nbsp;should never be necessary.<BR>&nbsp;&nbsp;ioapicreroute&nbsp;[APIC] Enable rerouting of boot IRQs to the<BR>&nbsp;&nbsp;&nbsp;&nbsp;primary IO-APIC for bridges that cannot disable<BR>&nbsp;&nbsp;&nbsp;&nbsp;boot IRQs. This fixes a source of spurious IRQs<BR>&nbsp;&nbsp;&nbsp;&nbsp;when the system masks IRQs.<BR>&nbsp;&nbsp;noioapicreroute&nbsp;[APIC] Disable workaround that uses the<BR>&nbsp;&nbsp;&nbsp;&nbsp;boot IRQ equivalent of an IRQ that connects to<BR>&nbsp;&nbsp;&nbsp;&nbsp;a chipset where boot IRQs cannot be disabled.<BR>&nbsp;&nbsp;&nbsp;&nbsp;The opposite of ioapicreroute.<BR>&nbsp;&nbsp;biosirq&nbsp;&nbsp;[X86-32] Use PCI BIOS calls to get the interrupt<BR>&nbsp;&nbsp;&nbsp;&nbsp;routing table. These calls are known to be buggy<BR>&nbsp;&nbsp;&nbsp;&nbsp;on several machines and they hang the machine<BR>&nbsp;&nbsp;&nbsp;&nbsp;when used, but on other computers it's the only<BR>&nbsp;&nbsp;&nbsp;&nbsp;way to get the interrupt routing table. Try<BR>&nbsp;&nbsp;&nbsp;&nbsp;this option if the kernel is unable to allocate<BR>&nbsp;&nbsp;&nbsp;&nbsp;IRQs or discover secondary PCI buses on your<BR>&nbsp;&nbsp;&nbsp;&nbsp;motherboard.<BR>&nbsp;&nbsp;rom&nbsp;&nbsp;[X86] Assign address space to expansion ROMs.<BR>&nbsp;&nbsp;&nbsp;&nbsp;Use with caution as certain devices share<BR>&nbsp;&nbsp;&nbsp;&nbsp;address decoders between ROMs and other<BR>&nbsp;&nbsp;&nbsp;&nbsp;resources.<BR>&nbsp;&nbsp;norom&nbsp;&nbsp;[X86] Do not assign address space to<BR>&nbsp;&nbsp;&nbsp;&nbsp;expansion ROMs that do not already have<BR>&nbsp;&nbsp;&nbsp;&nbsp;BIOS assigned address ranges.<BR>&nbsp;&nbsp;nobar&nbsp;&nbsp;[X86] Do not assign address space to the<BR>&nbsp;&nbsp;&nbsp;&nbsp;BARs that weren't assigned by the BIOS.<BR>&nbsp;&nbsp;irqmask=0xMMMM&nbsp;[X86] Set a bit mask of IRQs allowed to be<BR>&nbsp;&nbsp;&nbsp;&nbsp;assigned automatically to PCI devices. You can<BR>&nbsp;&nbsp;&nbsp;&nbsp;make the kernel exclude IRQs of your ISA cards<BR>&nbsp;&nbsp;&nbsp;&nbsp;this way.<BR>&nbsp;&nbsp;pirqaddr=0xAAAAA&nbsp;[X86] Specify the physical address<BR>&nbsp;&nbsp;&nbsp;&nbsp;of the PIRQ table (normally generated<BR>&nbsp;&nbsp;&nbsp;&nbsp;by the BIOS) if it is outside the<BR>&nbsp;&nbsp;&nbsp;&nbsp;F0000h-100000h range.<BR>&nbsp;&nbsp;lastbus=N&nbsp;[X86] Scan all buses thru bus #N. Can be<BR>&nbsp;&nbsp;&nbsp;&nbsp;useful if the kernel is unable to find your<BR>&nbsp;&nbsp;&nbsp;&nbsp;secondary buses and you want to tell it<BR>&nbsp;&nbsp;&nbsp;&nbsp;explicitly which ones they are.<BR>&nbsp;&nbsp;assign-busses&nbsp;[X86] Always assign all PCI bus<BR>&nbsp;&nbsp;&nbsp;&nbsp;numbers ourselves, overriding<BR>&nbsp;&nbsp;&nbsp;&nbsp;whatever the firmware may have done.<BR>&nbsp;&nbsp;usepirqmask&nbsp;[X86] Honor the possible IRQ mask stored<BR>&nbsp;&nbsp;&nbsp;&nbsp;in the BIOS $PIR table. This is needed on<BR>&nbsp;&nbsp;&nbsp;&nbsp;some systems with broken BIOSes, notably<BR>&nbsp;&nbsp;&nbsp;&nbsp;some HP Pavilion N5400 and Omnibook XE3<BR>&nbsp;&nbsp;&nbsp;&nbsp;notebooks. This will have no effect if ACPI<BR>&nbsp;&nbsp;&nbsp;&nbsp;IRQ routing is enabled.<BR>&nbsp;&nbsp;noacpi&nbsp;&nbsp;[X86] Do not use ACPI for IRQ routing<BR>&nbsp;&nbsp;&nbsp;&nbsp;or for PCI scanning.<BR>&nbsp;&nbsp;use_crs&nbsp;&nbsp;[X86] Use PCI host bridge window information<BR>&nbsp;&nbsp;&nbsp;&nbsp;from ACPI.&nbsp; On BIOSes from 2008 or later, this<BR>&nbsp;&nbsp;&nbsp;&nbsp;is enabled by default.&nbsp; If you need to use this,<BR>&nbsp;&nbsp;&nbsp;&nbsp;please report a bug.<BR>&nbsp;&nbsp;nocrs&nbsp;&nbsp;[X86] Ignore PCI host bridge windows from ACPI.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If you need to use this, please report a bug.<BR>&nbsp;&nbsp;routeirq&nbsp;Do IRQ routing for all PCI devices.<BR>&nbsp;&nbsp;&nbsp;&nbsp;This is normally done in pci_enable_device(),<BR>&nbsp;&nbsp;&nbsp;&nbsp;so this option is a temporary workaround<BR>&nbsp;&nbsp;&nbsp;&nbsp;for broken drivers that don't call it.<BR>&nbsp;&nbsp;skip_isa_align&nbsp;[X86] do not align io start addr, so can<BR>&nbsp;&nbsp;&nbsp;&nbsp;handle more pci cards<BR>&nbsp;&nbsp;firmware&nbsp;[ARM] Do not re-enumerate the bus but instead<BR>&nbsp;&nbsp;&nbsp;&nbsp;just use the configuration from the<BR>&nbsp;&nbsp;&nbsp;&nbsp;bootloader. This is currently used on<BR>&nbsp;&nbsp;&nbsp;&nbsp;IXP2000 systems where the bus has to be<BR>&nbsp;&nbsp;&nbsp;&nbsp;configured a certain way for adjunct CPUs.<BR>&nbsp;&nbsp;noearly&nbsp;&nbsp;[X86] Don't do any early type 1 scanning.<BR>&nbsp;&nbsp;&nbsp;&nbsp;This might help on some broken boards which<BR>&nbsp;&nbsp;&nbsp;&nbsp;machine check when some devices' config space<BR>&nbsp;&nbsp;&nbsp;&nbsp;is read. But various workarounds are disabled<BR>&nbsp;&nbsp;&nbsp;&nbsp;and some IOMMU drivers will not work.<BR>&nbsp;&nbsp;bfsort&nbsp;&nbsp;Sort PCI devices into breadth-first order.<BR>&nbsp;&nbsp;&nbsp;&nbsp;This sorting is done to get a device<BR>&nbsp;&nbsp;&nbsp;&nbsp;order compatible with older (&lt;= 2.4) kernels.<BR>&nbsp;&nbsp;nobfsort&nbsp;Don't sort PCI devices into breadth-first order.<BR>&nbsp;&nbsp;pcie_bus_tune_off&nbsp;Disable PCIe MPS (Max Payload Size)<BR>&nbsp;&nbsp;&nbsp;&nbsp;tuning and use the BIOS-configured MPS defaults.<BR>&nbsp;&nbsp;pcie_bus_safe&nbsp;Set every device's MPS to the largest value<BR>&nbsp;&nbsp;&nbsp;&nbsp;supported by all devices below the root complex.<BR>&nbsp;&nbsp;pcie_bus_perf&nbsp;Set device MPS to the largest allowable MPS<BR>&nbsp;&nbsp;&nbsp;&nbsp;based on its parent bus. Also set MRRS (Max<BR>&nbsp;&nbsp;&nbsp;&nbsp;Read Request Size) to the largest supported<BR>&nbsp;&nbsp;&nbsp;&nbsp;value (no larger than the MPS that the device<BR>&nbsp;&nbsp;&nbsp;&nbsp;or bus can support) for best performance.<BR>&nbsp;&nbsp;pcie_bus_peer2peer&nbsp;Set every device's MPS to 128B, which<BR>&nbsp;&nbsp;&nbsp;&nbsp;every device is guaranteed to support. This<BR>&nbsp;&nbsp;&nbsp;&nbsp;configuration allows peer-to-peer DMA between<BR>&nbsp;&nbsp;&nbsp;&nbsp;any pair of devices, possibly at the cost of<BR>&nbsp;&nbsp;&nbsp;&nbsp;reduced performance.&nbsp; This also guarantees<BR>&nbsp;&nbsp;&nbsp;&nbsp;that hot-added devices will work.<BR>&nbsp;&nbsp;cbiosize=nn[KMG]&nbsp;The fixed amount of bus space which is<BR>&nbsp;&nbsp;&nbsp;&nbsp;reserved for the CardBus bridge's IO window.<BR>&nbsp;&nbsp;&nbsp;&nbsp;The default value is 256 bytes.<BR>&nbsp;&nbsp;cbmemsize=nn[KMG]&nbsp;The fixed amount of bus space which is<BR>&nbsp;&nbsp;&nbsp;&nbsp;reserved for the CardBus bridge's memory<BR>&nbsp;&nbsp;&nbsp;&nbsp;window. The default value is 64 megabytes.<BR>&nbsp;&nbsp;resource_alignment=<BR>&nbsp;&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&nbsp;[&lt;order of align&gt;@][&lt;domain&gt;:]&lt;bus&gt;:&lt;slot&gt;.&lt;func&gt;[; ...]<BR>&nbsp;&nbsp;&nbsp;&nbsp;Specifies alignment and device to reassign<BR>&nbsp;&nbsp;&nbsp;&nbsp;aligned memory resources.<BR>&nbsp;&nbsp;&nbsp;&nbsp;If &lt;order of align&gt; is not specified,<BR>&nbsp;&nbsp;&nbsp;&nbsp;PAGE_SIZE is used as alignment.<BR>&nbsp;&nbsp;&nbsp;&nbsp;PCI-PCI bridge can be specified, if resource<BR>&nbsp;&nbsp;&nbsp;&nbsp;windows need to be expanded.<BR>&nbsp;&nbsp;ecrc=&nbsp;&nbsp;Enable/disable PCIe ECRC (transaction layer<BR>&nbsp;&nbsp;&nbsp;&nbsp;end-to-end CRC checking).<BR>&nbsp;&nbsp;&nbsp;&nbsp;bios: Use BIOS/firmware settings. This is the<BR>&nbsp;&nbsp;&nbsp;&nbsp;the default.<BR>&nbsp;&nbsp;&nbsp;&nbsp;off: Turn ECRC off<BR>&nbsp;&nbsp;&nbsp;&nbsp;on: Turn ECRC on.<BR>&nbsp;&nbsp;hpiosize=nn[KMG]&nbsp;The fixed amount of bus space which is<BR>&nbsp;&nbsp;&nbsp;&nbsp;reserved for hotplug bridge's IO window.<BR>&nbsp;&nbsp;&nbsp;&nbsp;Default size is 256 bytes.<BR>&nbsp;&nbsp;hpmemsize=nn[KMG]&nbsp;The fixed amount of bus space which is<BR>&nbsp;&nbsp;&nbsp;&nbsp;reserved for hotplug bridge's memory window.<BR>&nbsp;&nbsp;&nbsp;&nbsp;Default size is 2 megabytes.<BR>&nbsp;&nbsp;realloc=&nbsp;Enable/disable reallocating PCI bridge resources<BR>&nbsp;&nbsp;&nbsp;&nbsp;if allocations done by BIOS are too small to<BR>&nbsp;&nbsp;&nbsp;&nbsp;accommodate resources required by all child<BR>&nbsp;&nbsp;&nbsp;&nbsp;devices.<BR>&nbsp;&nbsp;&nbsp;&nbsp;off: Turn realloc off<BR>&nbsp;&nbsp;&nbsp;&nbsp;on: Turn realloc on<BR>&nbsp;&nbsp;realloc&nbsp;&nbsp;same as realloc=on<BR>&nbsp;&nbsp;noari&nbsp;&nbsp;do not use PCIe ARI.<BR>&nbsp;&nbsp;pcie_scan_all&nbsp;Scan all possible PCIe devices.&nbsp; Otherwise we<BR>&nbsp;&nbsp;&nbsp;&nbsp;only look for one device below a PCIe downstream<BR>&nbsp;&nbsp;&nbsp;&nbsp;port.</P>
<P>&nbsp;pcie_aspm=&nbsp;[PCIE] Forcibly enable or disable PCIe Active State Power<BR>&nbsp;&nbsp;&nbsp;Management.<BR>&nbsp;&nbsp;off&nbsp;Disable ASPM.<BR>&nbsp;&nbsp;force&nbsp;Enable ASPM even on devices that claim not to support it.<BR>&nbsp;&nbsp;&nbsp;WARNING: Forcing ASPM on may cause system lockups.</P>
<P>&nbsp;pcie_hp=&nbsp;[PCIE] PCI Express Hotplug driver options:<BR>&nbsp;&nbsp;nomsi&nbsp;Do not use MSI for PCI Express Native Hotplug (this<BR>&nbsp;&nbsp;&nbsp;makes all PCIe ports use INTx for hotplug services).</P>
<P>&nbsp;pcie_ports=&nbsp;[PCIE] PCIe ports handling:<BR>&nbsp;&nbsp;auto&nbsp;Ask the BIOS whether or not to use native PCIe services<BR>&nbsp;&nbsp;&nbsp;associated with PCIe ports (PME, hot-plug, AER).&nbsp; Use<BR>&nbsp;&nbsp;&nbsp;them only if that is allowed by the BIOS.<BR>&nbsp;&nbsp;native&nbsp;Use native PCIe services associated with PCIe ports<BR>&nbsp;&nbsp;&nbsp;unconditionally.<BR>&nbsp;&nbsp;compat&nbsp;Treat PCIe ports as PCI-to-PCI bridges, disable the PCIe<BR>&nbsp;&nbsp;&nbsp;ports driver.</P>
<P>&nbsp;pcie_pme=&nbsp;[PCIE,PM] Native PCIe PME signaling options:<BR>&nbsp;&nbsp;nomsi&nbsp;Do not use MSI for native PCIe PME signaling (this makes<BR>&nbsp;&nbsp;&nbsp;all PCIe root ports use INTx for all services).</P>
<P>&nbsp;pcmv=&nbsp;&nbsp;[HW,PCMCIA] BadgePAD 4</P>
<P>&nbsp;pd.&nbsp;&nbsp;[PARIDE]<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/paride.txt.</P>
<P>&nbsp;pdcchassis=&nbsp;[PARISC,HW] Disable/Enable PDC Chassis Status codes at<BR>&nbsp;&nbsp;&nbsp;boot time.<BR>&nbsp;&nbsp;&nbsp;Format: { 0 | 1 }<BR>&nbsp;&nbsp;&nbsp;See arch/parisc/kernel/pdc_chassis.c</P>
<P>&nbsp;percpu_alloc=&nbsp;Select which percpu first chunk allocator to use.<BR>&nbsp;&nbsp;&nbsp;Currently supported values are "embed" and "page".<BR>&nbsp;&nbsp;&nbsp;Archs may support subset or none of the&nbsp;selections.<BR>&nbsp;&nbsp;&nbsp;See comments in mm/percpu.c for details on each<BR>&nbsp;&nbsp;&nbsp;allocator.&nbsp; This parameter is primarily&nbsp;for debugging<BR>&nbsp;&nbsp;&nbsp;and performance comparison.</P>
<P>&nbsp;pf.&nbsp;&nbsp;[PARIDE]<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/paride.txt.</P>
<P>&nbsp;pg.&nbsp;&nbsp;[PARIDE]<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/paride.txt.</P>
<P>&nbsp;pirq=&nbsp;&nbsp;[SMP,APIC] Manual mp-table setup<BR>&nbsp;&nbsp;&nbsp;See Documentation/x86/i386/IO-APIC.txt.</P>
<P>&nbsp;plip=&nbsp;&nbsp;[PPT,NET] Parallel port network link<BR>&nbsp;&nbsp;&nbsp;Format: { parport&lt;nr&gt; | timid | 0 }<BR>&nbsp;&nbsp;&nbsp;See also Documentation/parport.txt.</P>
<P>&nbsp;pmtmr=&nbsp;&nbsp;[X86] Manual setup of pmtmr I/O Port.<BR>&nbsp;&nbsp;&nbsp;Override pmtimer IOPort with a hex value.<BR>&nbsp;&nbsp;&nbsp;e.g. pmtmr=0x508</P>
<P>&nbsp;pnp.debug=1&nbsp;[PNP]<BR>&nbsp;&nbsp;&nbsp;Enable PNP debug messages (depends on the<BR>&nbsp;&nbsp;&nbsp;CONFIG_PNP_DEBUG_MESSAGES option).&nbsp; Change at run-time<BR>&nbsp;&nbsp;&nbsp;via /sys/module/pnp/parameters/debug.&nbsp; We always show<BR>&nbsp;&nbsp;&nbsp;current resource usage; turning this on also shows<BR>&nbsp;&nbsp;&nbsp;possible settings and some assignment information.</P>
<P>&nbsp;pnpacpi=&nbsp;[ACPI]<BR>&nbsp;&nbsp;&nbsp;{ off }</P>
<P>&nbsp;pnpbios=&nbsp;[ISAPNP]<BR>&nbsp;&nbsp;&nbsp;{ on | off | curr | res | no-curr | no-res }</P>
<P>&nbsp;pnp_reserve_irq=<BR>&nbsp;&nbsp;&nbsp;[ISAPNP] Exclude IRQs for the autoconfiguration</P>
<P>&nbsp;pnp_reserve_dma=<BR>&nbsp;&nbsp;&nbsp;[ISAPNP] Exclude DMAs for the autoconfiguration</P>
<P>&nbsp;pnp_reserve_io=&nbsp;[ISAPNP] Exclude I/O ports for the autoconfiguration<BR>&nbsp;&nbsp;&nbsp;Ranges are in pairs (I/O port base and size).</P>
<P>&nbsp;pnp_reserve_mem=<BR>&nbsp;&nbsp;&nbsp;[ISAPNP] Exclude memory regions for the<BR>&nbsp;&nbsp;&nbsp;autoconfiguration.<BR>&nbsp;&nbsp;&nbsp;Ranges are in pairs (memory base and size).</P>
<P>&nbsp;ports=&nbsp;&nbsp;[IP_VS_FTP] IPVS ftp helper module<BR>&nbsp;&nbsp;&nbsp;Default is 21.<BR>&nbsp;&nbsp;&nbsp;Up to 8 (IP_VS_APP_MAX_PORTS) ports<BR>&nbsp;&nbsp;&nbsp;may be specified.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;port&gt;,&lt;port&gt;....</P>
<P>&nbsp;print-fatal-signals=<BR>&nbsp;&nbsp;&nbsp;[KNL] debug: print fatal signals</P>
<P>&nbsp;&nbsp;&nbsp;If enabled, warn about various signal handling<BR>&nbsp;&nbsp;&nbsp;related application anomalies: too many signals,<BR>&nbsp;&nbsp;&nbsp;too many POSIX.1 timers, fatal signals causing a<BR>&nbsp;&nbsp;&nbsp;coredump - etc.</P>
<P>&nbsp;&nbsp;&nbsp;If you hit the warning due to signal overflow,<BR>&nbsp;&nbsp;&nbsp;you might want to try "ulimit -i unlimited".</P>
<P>&nbsp;&nbsp;&nbsp;default: off.</P>
<P>&nbsp;printk.always_kmsg_dump=<BR>&nbsp;&nbsp;&nbsp;Trigger kmsg_dump for cases other than kernel oops or<BR>&nbsp;&nbsp;&nbsp;panics<BR>&nbsp;&nbsp;&nbsp;Format: &lt;bool&gt;&nbsp; (1/Y/y=enable, 0/N/n=disable)<BR>&nbsp;&nbsp;&nbsp;default: disabled</P>
<P>&nbsp;printk.time=&nbsp;Show timing data prefixed to each printk message line<BR>&nbsp;&nbsp;&nbsp;Format: &lt;bool&gt;&nbsp; (1/Y/y=enable, 0/N/n=disable)</P>
<P>&nbsp;processor.max_cstate=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;Limit processor to maximum C-state<BR>&nbsp;&nbsp;&nbsp;max_cstate=9 overrides any DMI blacklist limit.</P>
<P>&nbsp;processor.nocst&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;Ignore the _CST method to determine C-states,<BR>&nbsp;&nbsp;&nbsp;instead using the legacy FADT method</P>
<P>&nbsp;profile=&nbsp;[KNL] Enable kernel profiling via /proc/profile<BR>&nbsp;&nbsp;&nbsp;Format: [schedule,]&lt;number&gt;<BR>&nbsp;&nbsp;&nbsp;Param: "schedule" - profile schedule points.<BR>&nbsp;&nbsp;&nbsp;Param: &lt;number&gt; - step/bucket size as a power of 2 for<BR>&nbsp;&nbsp;&nbsp;&nbsp;statistical time based profiling.<BR>&nbsp;&nbsp;&nbsp;Param: "sleep" - profile D-state sleeping (millisecs).<BR>&nbsp;&nbsp;&nbsp;&nbsp;Requires CONFIG_SCHEDSTATS<BR>&nbsp;&nbsp;&nbsp;Param: "kvm" - profile VM exits.</P>
<P>&nbsp;prompt_ramdisk=&nbsp;[RAM] List of RAM disks to prompt for floppy disk<BR>&nbsp;&nbsp;&nbsp;before loading.<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/ramdisk.txt.</P>
<P>&nbsp;psmouse.proto=&nbsp;[HW,MOUSE] Highest PS2 mouse protocol extension to<BR>&nbsp;&nbsp;&nbsp;probe for; one of (bare|imps|exps|lifebook|any).<BR>&nbsp;psmouse.rate=&nbsp;[HW,MOUSE] Set desired mouse report rate, in reports<BR>&nbsp;&nbsp;&nbsp;per second.<BR>&nbsp;psmouse.resetafter=&nbsp;[HW,MOUSE]<BR>&nbsp;&nbsp;&nbsp;Try to reset the device after so many bad packets<BR>&nbsp;&nbsp;&nbsp;(0 = never).<BR>&nbsp;psmouse.resolution=<BR>&nbsp;&nbsp;&nbsp;[HW,MOUSE] Set desired mouse resolution, in dpi.<BR>&nbsp;psmouse.smartscroll=<BR>&nbsp;&nbsp;&nbsp;[HW,MOUSE] Controls Logitech smartscroll autorepeat.<BR>&nbsp;&nbsp;&nbsp;0 = disabled, 1 = enabled (default).</P>
<P>&nbsp;pstore.backend=&nbsp;Specify the name of the pstore backend to use</P>
<P>&nbsp;pt.&nbsp;&nbsp;[PARIDE]<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/paride.txt.</P>
<P>&nbsp;pty.legacy_count=<BR>&nbsp;&nbsp;&nbsp;[KNL] Number of legacy pty's. Overwrites compiled-in<BR>&nbsp;&nbsp;&nbsp;default number.</P>
<P>&nbsp;quiet&nbsp;&nbsp;[KNL] Disable most log messages</P>
<P>&nbsp;r128=&nbsp;&nbsp;[HW,DRM]</P>
<P>&nbsp;raid=&nbsp;&nbsp;[HW,RAID]<BR>&nbsp;&nbsp;&nbsp;See Documentation/md.txt.</P>
<P>&nbsp;ramdisk_blocksize=&nbsp;[RAM]<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/ramdisk.txt.</P>
<P>&nbsp;ramdisk_size=&nbsp;[RAM] Sizes of RAM disks in kilobytes<BR>&nbsp;&nbsp;&nbsp;See Documentation/blockdev/ramdisk.txt.</P>
<P>&nbsp;rcu_nocbs=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;In kernels built with CONFIG_RCU_NOCB_CPU=y, set<BR>&nbsp;&nbsp;&nbsp;the specified list of CPUs to be no-callback CPUs.<BR>&nbsp;&nbsp;&nbsp;Invocation of these CPUs' RCU callbacks will<BR>&nbsp;&nbsp;&nbsp;be offloaded to "rcuox/N" kthreads created for<BR>&nbsp;&nbsp;&nbsp;that purpose, where "x" is "b" for RCU-bh, "p"<BR>&nbsp;&nbsp;&nbsp;for RCU-preempt, and "s" for RCU-sched, and "N"<BR>&nbsp;&nbsp;&nbsp;is the CPU number.&nbsp; This reduces OS jitter on the<BR>&nbsp;&nbsp;&nbsp;offloaded CPUs, which can be useful for HPC and</P>
<P>&nbsp;&nbsp;&nbsp;real-time workloads.&nbsp; It can also improve energy<BR>&nbsp;&nbsp;&nbsp;efficiency for asymmetric multiprocessors.</P>
<P>&nbsp;rcu_nocb_poll&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Rather than requiring that offloaded CPUs<BR>&nbsp;&nbsp;&nbsp;(specified by rcu_nocbs= above) explicitly<BR>&nbsp;&nbsp;&nbsp;awaken the corresponding "rcuoN" kthreads,<BR>&nbsp;&nbsp;&nbsp;make these kthreads poll for callbacks.<BR>&nbsp;&nbsp;&nbsp;This improves the real-time response for the<BR>&nbsp;&nbsp;&nbsp;offloaded CPUs by relieving them of the need to<BR>&nbsp;&nbsp;&nbsp;wake up the corresponding kthread, but degrades<BR>&nbsp;&nbsp;&nbsp;energy efficiency by requiring that the kthreads<BR>&nbsp;&nbsp;&nbsp;periodically wake up to do the polling.</P>
<P>&nbsp;rcutree.blimit=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set maximum number of finished RCU callbacks to process<BR>&nbsp;&nbsp;&nbsp;in one batch.</P>
<P>&nbsp;rcutree.fanout_leaf=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Increase the number of CPUs assigned to each<BR>&nbsp;&nbsp;&nbsp;leaf rcu_node structure.&nbsp; Useful for very large<BR>&nbsp;&nbsp;&nbsp;systems.</P>
<P>&nbsp;rcutree.jiffies_till_first_fqs= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set delay from grace-period initialization to<BR>&nbsp;&nbsp;&nbsp;first attempt to force quiescent states.<BR>&nbsp;&nbsp;&nbsp;Units are jiffies, minimum value is zero,<BR>&nbsp;&nbsp;&nbsp;and maximum value is HZ.</P>
<P>&nbsp;rcutree.jiffies_till_next_fqs= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set delay between subsequent attempts to force<BR>&nbsp;&nbsp;&nbsp;quiescent states.&nbsp; Units are jiffies, minimum<BR>&nbsp;&nbsp;&nbsp;value is one, and maximum value is HZ.</P>
<P>&nbsp;rcutree.qhimark=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set threshold of queued<BR>&nbsp;&nbsp;&nbsp;RCU callbacks over which batch limiting is disabled.</P>
<P>&nbsp;rcutree.qlowmark=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set threshold of queued RCU callbacks below which<BR>&nbsp;&nbsp;&nbsp;batch limiting is re-enabled.</P>
<P>&nbsp;rcutree.rcu_cpu_stall_suppress=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Suppress RCU CPU stall warning messages.</P>
<P>&nbsp;rcutree.rcu_cpu_stall_timeout= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set timeout for RCU CPU stall warning messages.</P>
<P>&nbsp;rcutree.rcu_idle_gp_delay=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set wakeup interval for idle CPUs that have<BR>&nbsp;&nbsp;&nbsp;RCU callbacks (RCU_FAST_NO_HZ=y).</P>
<P>&nbsp;rcutree.rcu_idle_lazy_gp_delay=&nbsp;[KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set wakeup interval for idle CPUs that have<BR>&nbsp;&nbsp;&nbsp;only "lazy" RCU callbacks (RCU_FAST_NO_HZ=y).<BR>&nbsp;&nbsp;&nbsp;Lazy RCU callbacks are those which RCU can<BR>&nbsp;&nbsp;&nbsp;prove do nothing more than free memory.</P>
<P>&nbsp;rcutorture.fqs_duration= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set duration of force_quiescent_state bursts.</P>
<P>&nbsp;rcutorture.fqs_holdoff= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set holdoff time within force_quiescent_state bursts.</P>
<P>&nbsp;rcutorture.fqs_stutter= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set wait time between force_quiescent_state bursts.</P>
<P>&nbsp;rcutorture.irqreader= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Test RCU readers from irq handlers.</P>
<P>&nbsp;rcutorture.n_barrier_cbs= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set callbacks/threads for rcu_barrier() testing.</P>
<P>&nbsp;rcutorture.nfakewriters= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set number of concurrent RCU writers.&nbsp; These just<BR>&nbsp;&nbsp;&nbsp;stress RCU, they don't participate in the actual<BR>&nbsp;&nbsp;&nbsp;test, hence the "fake".</P>
<P>&nbsp;rcutorture.nreaders= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set number of RCU readers.</P>
<P>&nbsp;rcutorture.onoff_holdoff= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set time (s) after boot for CPU-hotplug testing.</P>
<P>&nbsp;rcutorture.onoff_interval= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set time (s) between CPU-hotplug operations, or<BR>&nbsp;&nbsp;&nbsp;zero to disable CPU-hotplug testing.</P>
<P>&nbsp;rcutorture.shuffle_interval= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set task-shuffle interval (s).&nbsp; Shuffling tasks<BR>&nbsp;&nbsp;&nbsp;allows some CPUs to go into dyntick-idle mode<BR>&nbsp;&nbsp;&nbsp;during the rcutorture test.</P>
<P>&nbsp;rcutorture.shutdown_secs= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Set time (s) after boot system shutdown.&nbsp; This<BR>&nbsp;&nbsp;&nbsp;is useful for hands-off automated testing.</P>
<P>&nbsp;rcutorture.stall_cpu= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Duration of CPU stall (s) to test RCU CPU stall<BR>&nbsp;&nbsp;&nbsp;warnings, zero to disable.</P>
<P>&nbsp;rcutorture.stall_cpu_holdoff= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Time to wait (s) after boot before inducing stall.</P>
<P>&nbsp;rcutorture.stat_interval= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Time (s) between statistics printk()s.</P>
<P>&nbsp;rcutorture.stutter= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Time (s) to stutter testing, for example, specifying<BR>&nbsp;&nbsp;&nbsp;five seconds causes the test to run for five seconds,<BR>&nbsp;&nbsp;&nbsp;wait for five seconds, and so on.&nbsp; This tests RCU's<BR>&nbsp;&nbsp;&nbsp;ability to transition abruptly to and from idle.</P>
<P>&nbsp;rcutorture.test_boost= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Test RCU priority boosting?&nbsp; 0=no, 1=maybe, 2=yes.<BR>&nbsp;&nbsp;&nbsp;"Maybe" means test if the RCU implementation<BR>&nbsp;&nbsp;&nbsp;under test support RCU priority boosting.</P>
<P>&nbsp;rcutorture.test_boost_duration= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Duration (s) of each individual boost test.</P>
<P>&nbsp;rcutorture.test_boost_interval= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Interval (s) between each boost test.</P>
<P>&nbsp;rcutorture.test_no_idle_hz= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Test RCU's dyntick-idle handling.&nbsp; See also the<BR>&nbsp;&nbsp;&nbsp;rcutorture.shuffle_interval parameter.</P>
<P>&nbsp;rcutorture.torture_type= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Specify the RCU implementation to test.</P>
<P>&nbsp;rcutorture.verbose= [KNL,BOOT]<BR>&nbsp;&nbsp;&nbsp;Enable additional printk() statements.</P>
<P>&nbsp;rdinit=&nbsp;&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;full_path&gt;<BR>&nbsp;&nbsp;&nbsp;Run specified binary instead of /init from the ramdisk,<BR>&nbsp;&nbsp;&nbsp;used for early userspace startup. See initrd.</P>
<P>&nbsp;reboot=&nbsp;&nbsp;[BUGS=X86-32,BUGS=ARM,BUGS=IA-64] Rebooting mode<BR>&nbsp;&nbsp;&nbsp;Format: &lt;reboot_mode&gt;[,&lt;reboot_mode2&gt;[,...]]<BR>&nbsp;&nbsp;&nbsp;See arch/*/kernel/reboot.c or arch/*/kernel/process.c</P>
<P>&nbsp;relax_domain_level=<BR>&nbsp;&nbsp;&nbsp;[KNL, SMP] Set scheduler's default relax_domain_level.<BR>&nbsp;&nbsp;&nbsp;See Documentation/cgroups/cpusets.txt.</P>
<P>&nbsp;reserve=&nbsp;[KNL,BUGS] Force the kernel to ignore some iomem area</P>
<P>&nbsp;reservetop=&nbsp;[X86-32]<BR>&nbsp;&nbsp;&nbsp;Format: nn[KMG]<BR>&nbsp;&nbsp;&nbsp;Reserves a hole at the top of the kernel virtual<BR>&nbsp;&nbsp;&nbsp;address space.</P>
<P>&nbsp;reservelow=&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;Format: nn[K]<BR>&nbsp;&nbsp;&nbsp;Set the amount of memory to reserve for BIOS at<BR>&nbsp;&nbsp;&nbsp;the bottom of the address space.</P>
<P>&nbsp;reset_devices&nbsp;[KNL] Force drivers to reset the underlying device<BR>&nbsp;&nbsp;&nbsp;during initialization.</P>
<P>&nbsp;resume=&nbsp;&nbsp;[SWSUSP]<BR>&nbsp;&nbsp;&nbsp;Specify the partition device for software suspend<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;{/dev/&lt;dev&gt; | PARTUUID=&lt;uuid&gt; | &lt;int&gt;:&lt;int&gt; | &lt;hex&gt;}</P>
<P>&nbsp;resume_offset=&nbsp;[SWSUSP]<BR>&nbsp;&nbsp;&nbsp;Specify the offset from the beginning of the partition<BR>&nbsp;&nbsp;&nbsp;given by "resume=" at which the swap header is located,<BR>&nbsp;&nbsp;&nbsp;in &lt;PAGE_SIZE&gt; units (needed only for swap files).<BR>&nbsp;&nbsp;&nbsp;See&nbsp; Documentation/power/swsusp-and-swap-files.txt</P>
<P>&nbsp;resumedelay=&nbsp;[HIBERNATION] Delay (in seconds) to pause before attempting to<BR>&nbsp;&nbsp;&nbsp;read the resume files</P>
<P>&nbsp;resumewait&nbsp;[HIBERNATION] Wait (indefinitely) for resume device to show up.<BR>&nbsp;&nbsp;&nbsp;Useful for devices that are detected asynchronously<BR>&nbsp;&nbsp;&nbsp;(e.g. USB and MMC devices).</P>
<P>&nbsp;hibernate=&nbsp;[HIBERNATION]<BR>&nbsp;&nbsp;noresume&nbsp;Don't check if there's a hibernation image<BR>&nbsp;&nbsp;&nbsp;&nbsp;present during boot.<BR>&nbsp;&nbsp;nocompress&nbsp;Don't compress/decompress hibernation images.</P>
<P>&nbsp;retain_initrd&nbsp;[RAM] Keep initrd memory after extraction</P>
<P>&nbsp;rhash_entries=&nbsp;[KNL,NET]<BR>&nbsp;&nbsp;&nbsp;Set number of hash buckets for route cache</P>
<P>&nbsp;riscom8=&nbsp;[HW,SERIAL]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io_board1&gt;[,&lt;io_board2&gt;[,...&lt;io_boardN&gt;]]</P>
<P>&nbsp;ro&nbsp;&nbsp;[KNL] Mount root device read-only on boot</P>
<P>&nbsp;root=&nbsp;&nbsp;[KNL] Root filesystem<BR>&nbsp;&nbsp;&nbsp;See name_to_dev_t comment in init/do_mounts.c.</P>
<P>&nbsp;rootdelay=&nbsp;[KNL] Delay (in seconds) to pause before attempting to<BR>&nbsp;&nbsp;&nbsp;mount the root filesystem</P>
<P>&nbsp;rootflags=&nbsp;[KNL] Set root filesystem mount option string</P>
<P>&nbsp;rootfstype=&nbsp;[KNL] Set root filesystem type</P>
<P>&nbsp;rootwait&nbsp;[KNL] Wait (indefinitely) for root device to show up.<BR>&nbsp;&nbsp;&nbsp;Useful for devices that are detected asynchronously<BR>&nbsp;&nbsp;&nbsp;(e.g. USB and MMC devices).</P>
<P>&nbsp;rproc_mem=nn[KMG][@address]<BR>&nbsp;&nbsp;&nbsp;[KNL,ARM,CMA] Remoteproc physical memory block.<BR>&nbsp;&nbsp;&nbsp;Memory area to be used by remote processor image,<BR>&nbsp;&nbsp;&nbsp;managed by CMA.</P>
<P>&nbsp;rw&nbsp;&nbsp;[KNL] Mount root device read-write on boot</P>
<P>&nbsp;S&nbsp;&nbsp;[KNL] Run init in single mode</P>
<P>&nbsp;sa1100ir&nbsp;[NET]<BR>&nbsp;&nbsp;&nbsp;See drivers/net/irda/sa1100_ir.c.</P>
<P>&nbsp;sbni=&nbsp;&nbsp;[NET] Granch SBNI12 leased line adapter</P>
<P>&nbsp;sched_debug&nbsp;[KNL] Enables verbose scheduler debug messages.</P>
<P>&nbsp;skew_tick=&nbsp;[KNL] Offset the periodic timer tick per cpu to mitigate<BR>&nbsp;&nbsp;&nbsp;xtime_lock contention on larger systems, and/or RCU lock<BR>&nbsp;&nbsp;&nbsp;contention on all systems with CONFIG_MAXSMP set.<BR>&nbsp;&nbsp;&nbsp;Format: { "0" | "1" }<BR>&nbsp;&nbsp;&nbsp;0 -- disable. (may be 1 via CONFIG_CMDLINE="skew_tick=1"<BR>&nbsp;&nbsp;&nbsp;1 -- enable.<BR>&nbsp;&nbsp;&nbsp;Note: increases power consumption, thus should only be<BR>&nbsp;&nbsp;&nbsp;enabled if running jitter sensitive (HPC/RT) workloads.</P>
<P>&nbsp;security=&nbsp;[SECURITY] Choose a security module to enable at boot.<BR>&nbsp;&nbsp;&nbsp;If this boot parameter is not specified, only the first<BR>&nbsp;&nbsp;&nbsp;security module asking for security registration will be<BR>&nbsp;&nbsp;&nbsp;loaded. An invalid security module name will be treated<BR>&nbsp;&nbsp;&nbsp;as if no module has been chosen.</P>
<P>&nbsp;selinux=&nbsp;[SELINUX] Disable or enable SELinux at boot time.<BR>&nbsp;&nbsp;&nbsp;Format: { "0" | "1" }<BR>&nbsp;&nbsp;&nbsp;See security/selinux/Kconfig help text.<BR>&nbsp;&nbsp;&nbsp;0 -- disable.<BR>&nbsp;&nbsp;&nbsp;1 -- enable.<BR>&nbsp;&nbsp;&nbsp;Default value is set via kernel config option.<BR>&nbsp;&nbsp;&nbsp;If enabled at boot time, /selinux/disable can be used<BR>&nbsp;&nbsp;&nbsp;later to disable prior to initial policy load.</P>
<P>&nbsp;apparmor=&nbsp;[APPARMOR] Disable or enable AppArmor at boot time<BR>&nbsp;&nbsp;&nbsp;Format: { "0" | "1" }<BR>&nbsp;&nbsp;&nbsp;See security/apparmor/Kconfig help text<BR>&nbsp;&nbsp;&nbsp;0 -- disable.<BR>&nbsp;&nbsp;&nbsp;1 -- enable.<BR>&nbsp;&nbsp;&nbsp;Default value is set via kernel config option.</P>
<P>&nbsp;serialnumber&nbsp;[BUGS=X86-32]</P>
<P>&nbsp;shapers=&nbsp;[NET]<BR>&nbsp;&nbsp;&nbsp;Maximal number of shapers.</P>
<P>&nbsp;show_msr=&nbsp;[x86] show boot-time MSR settings<BR>&nbsp;&nbsp;&nbsp;Format: { &lt;integer&gt; }<BR>&nbsp;&nbsp;&nbsp;Show boot-time (BIOS-initialized) MSR settings.<BR>&nbsp;&nbsp;&nbsp;The parameter means the number of CPUs to show,<BR>&nbsp;&nbsp;&nbsp;for example 1 means boot CPU only.</P>
<P>&nbsp;simeth=&nbsp;&nbsp;[IA-64]<BR>&nbsp;simscsi=</P>
<P>&nbsp;slram=&nbsp;&nbsp;[HW,MTD]</P>
<P>&nbsp;slab_max_order=&nbsp;[MM, SLAB]<BR>&nbsp;&nbsp;&nbsp;Determines the maximum allowed order for slabs.<BR>&nbsp;&nbsp;&nbsp;A high setting may cause OOMs due to memory<BR>&nbsp;&nbsp;&nbsp;fragmentation.&nbsp; Defaults to 1 for systems with<BR>&nbsp;&nbsp;&nbsp;more than 32MB of RAM, 0 otherwise.</P>
<P>&nbsp;slub_debug[=options[,slabs]]&nbsp;[MM, SLUB]<BR>&nbsp;&nbsp;&nbsp;Enabling slub_debug allows one to determine the<BR>&nbsp;&nbsp;&nbsp;culprit if slab objects become corrupted. Enabling<BR>&nbsp;&nbsp;&nbsp;slub_debug can create guard zones around objects and<BR>&nbsp;&nbsp;&nbsp;may poison objects when not in use. Also tracks the<BR>&nbsp;&nbsp;&nbsp;last alloc / free. For more information see<BR>&nbsp;&nbsp;&nbsp;Documentation/vm/slub.txt.</P>
<P>&nbsp;slub_max_order= [MM, SLUB]<BR>&nbsp;&nbsp;&nbsp;Determines the maximum allowed order for slabs.<BR>&nbsp;&nbsp;&nbsp;A high setting may cause OOMs due to memory<BR>&nbsp;&nbsp;&nbsp;fragmentation. For more information see<BR>&nbsp;&nbsp;&nbsp;Documentation/vm/slub.txt.</P>
<P>&nbsp;slub_min_objects=&nbsp;[MM, SLUB]<BR>&nbsp;&nbsp;&nbsp;The minimum number of objects per slab. SLUB will<BR>&nbsp;&nbsp;&nbsp;increase the slab order up to slub_max_order to<BR>&nbsp;&nbsp;&nbsp;generate a sufficiently large slab able to contain<BR>&nbsp;&nbsp;&nbsp;the number of objects indicated. The higher the number<BR>&nbsp;&nbsp;&nbsp;of objects the smaller the overhead of tracking slabs<BR>&nbsp;&nbsp;&nbsp;and the less frequently locks need to be acquired.<BR>&nbsp;&nbsp;&nbsp;For more information see Documentation/vm/slub.txt.</P>
<P>&nbsp;slub_min_order=&nbsp;[MM, SLUB]<BR>&nbsp;&nbsp;&nbsp;Determines the minimum page order for slabs. Must be<BR>&nbsp;&nbsp;&nbsp;lower than slub_max_order.<BR>&nbsp;&nbsp;&nbsp;For more information see Documentation/vm/slub.txt.</P>
<P>&nbsp;slub_nomerge&nbsp;[MM, SLUB]<BR>&nbsp;&nbsp;&nbsp;Disable merging of slabs with similar size. May be<BR>&nbsp;&nbsp;&nbsp;necessary if there is some reason to distinguish<BR>&nbsp;&nbsp;&nbsp;allocs to different slabs. Debug options disable<BR>&nbsp;&nbsp;&nbsp;merging on their own.<BR>&nbsp;&nbsp;&nbsp;For more information see Documentation/vm/slub.txt.</P>
<P>&nbsp;smart2=&nbsp;&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;io1&gt;[,&lt;io2&gt;[,...,&lt;io8&gt;]]</P>
<P>&nbsp;smsc-ircc2.nopnp&nbsp;[HW] Don't use PNP to discover SMC devices<BR>&nbsp;smsc-ircc2.ircc_cfg=&nbsp;[HW] Device configuration I/O port<BR>&nbsp;smsc-ircc2.ircc_sir=&nbsp;[HW] SIR base I/O port<BR>&nbsp;smsc-ircc2.ircc_fir=&nbsp;[HW] FIR base I/O port<BR>&nbsp;smsc-ircc2.ircc_irq=&nbsp;[HW] IRQ line<BR>&nbsp;smsc-ircc2.ircc_dma=&nbsp;[HW] DMA channel<BR>&nbsp;smsc-ircc2.ircc_transceiver= [HW] Transceiver type:<BR>&nbsp;&nbsp;&nbsp;&nbsp;0: Toshiba Satellite 1800 (GP data pin select)<BR>&nbsp;&nbsp;&nbsp;&nbsp;1: Fast pin select (default)<BR>&nbsp;&nbsp;&nbsp;&nbsp;2: ATC IRMode</P>
<P>&nbsp;softlockup_panic=<BR>&nbsp;&nbsp;&nbsp;[KNL] Should the soft-lockup detector generate panics.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;integer&gt;</P>
<P>&nbsp;sonypi.*=&nbsp;[HW] Sony Programmable I/O Control Device driver<BR>&nbsp;&nbsp;&nbsp;See Documentation/laptops/sonypi.txt</P>
<P>&nbsp;specialix=&nbsp;[HW,SERIAL] Specialix multi-serial port adapter<BR>&nbsp;&nbsp;&nbsp;See Documentation/serial/specialix.txt.</P>
<P>&nbsp;spia_io_base=&nbsp;[HW,MTD]<BR>&nbsp;spia_fio_base=<BR>&nbsp;spia_pedr=<BR>&nbsp;spia_peddr=</P>
<P>&nbsp;stacktrace&nbsp;[FTRACE]<BR>&nbsp;&nbsp;&nbsp;Enabled the stack tracer on boot up.</P>
<P>&nbsp;stacktrace_filter=[function-list]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] Limit the functions that the stack tracer<BR>&nbsp;&nbsp;&nbsp;will trace at boot up. function-list is a comma separated<BR>&nbsp;&nbsp;&nbsp;list of functions. This list can be changed at run<BR>&nbsp;&nbsp;&nbsp;time by the stack_trace_filter file in the debugfs<BR>&nbsp;&nbsp;&nbsp;tracing directory. Note, this enables stack tracing<BR>&nbsp;&nbsp;&nbsp;and the stacktrace above is not needed.</P>
<P>&nbsp;sti=&nbsp;&nbsp;[PARISC,HW]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;num&gt;<BR>&nbsp;&nbsp;&nbsp;Set the STI (builtin display/keyboard on the HP-PARISC<BR>&nbsp;&nbsp;&nbsp;machines) console (graphic card) which should be used<BR>&nbsp;&nbsp;&nbsp;as the initial boot-console.<BR>&nbsp;&nbsp;&nbsp;See also comment in drivers/video/console/sticore.c.</P>
<P>&nbsp;sti_font=&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;See comment in drivers/video/console/sticore.c.</P>
<P>&nbsp;stifb=&nbsp;&nbsp;[HW]<BR>&nbsp;&nbsp;&nbsp;Format: bpp:&lt;bpp1&gt;[:&lt;bpp2&gt;[:&lt;bpp3&gt;...]]</P>
<P>&nbsp;sunrpc.min_resvport=<BR>&nbsp;sunrpc.max_resvport=<BR>&nbsp;&nbsp;&nbsp;[NFS,SUNRPC]<BR>&nbsp;&nbsp;&nbsp;SunRPC servers often require that client requests<BR>&nbsp;&nbsp;&nbsp;originate from a privileged port (i.e. a port in the<BR>&nbsp;&nbsp;&nbsp;range 0 &lt; portnr &lt; 1024).<BR>&nbsp;&nbsp;&nbsp;An administrator who wishes to reserve some of these<BR>&nbsp;&nbsp;&nbsp;ports for other uses may adjust the range that the<BR>&nbsp;&nbsp;&nbsp;kernel's sunrpc client considers to be privileged<BR>&nbsp;&nbsp;&nbsp;using these two parameters to set the minimum and<BR>&nbsp;&nbsp;&nbsp;maximum port values.</P>
<P>&nbsp;sunrpc.pool_mode=<BR>&nbsp;&nbsp;&nbsp;[NFS]<BR>&nbsp;&nbsp;&nbsp;Control how the NFS server code allocates CPUs to<BR>&nbsp;&nbsp;&nbsp;service thread pools.&nbsp; Depending on how many NICs<BR>&nbsp;&nbsp;&nbsp;you have and where their interrupts are bound, this<BR>&nbsp;&nbsp;&nbsp;option will affect which CPUs will do NFS serving.<BR>&nbsp;&nbsp;&nbsp;Note: this parameter cannot be changed while the<BR>&nbsp;&nbsp;&nbsp;NFS server is running.</P>
<P>&nbsp;&nbsp;&nbsp;auto&nbsp;&nbsp;&nbsp;&nbsp; the server chooses an appropriate mode<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; automatically using heuristics<BR>&nbsp;&nbsp;&nbsp;global&nbsp;&nbsp;&nbsp;&nbsp; a single global pool contains all CPUs<BR>&nbsp;&nbsp;&nbsp;percpu&nbsp;&nbsp;&nbsp;&nbsp; one pool for each CPU<BR>&nbsp;&nbsp;&nbsp;pernode&nbsp;&nbsp;&nbsp;&nbsp; one pool for each NUMA node (equivalent<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; to global on non-NUMA machines)</P>
<P>&nbsp;sunrpc.tcp_slot_table_entries=<BR>&nbsp;sunrpc.udp_slot_table_entries=<BR>&nbsp;&nbsp;&nbsp;[NFS,SUNRPC]<BR>&nbsp;&nbsp;&nbsp;Sets the upper limit on the number of simultaneous<BR>&nbsp;&nbsp;&nbsp;RPC calls that can be sent from the client to a<BR>&nbsp;&nbsp;&nbsp;server. Increasing these values may allow you to<BR>&nbsp;&nbsp;&nbsp;improve throughput, but will also increase the<BR>&nbsp;&nbsp;&nbsp;amount of memory reserved for use by the client.</P>
<P>&nbsp;swapaccount[=0|1]<BR>&nbsp;&nbsp;&nbsp;[KNL] Enable accounting of swap in memory resource<BR>&nbsp;&nbsp;&nbsp;controller if no parameter or 1 is given or disable<BR>&nbsp;&nbsp;&nbsp;it if 0 is given (See Documentation/cgroups/memory.txt)</P>
<P>&nbsp;swiotlb=&nbsp;[IA-64] Number of I/O TLB slabs</P>
<P>&nbsp;switches=&nbsp;[HW,M68k]</P>
<P>&nbsp;sysfs.deprecated=0|1 [KNL]<BR>&nbsp;&nbsp;&nbsp;Enable/disable old style sysfs layout for old udev<BR>&nbsp;&nbsp;&nbsp;on older distributions. When this option is enabled<BR>&nbsp;&nbsp;&nbsp;very new udev will not work anymore. When this option<BR>&nbsp;&nbsp;&nbsp;is disabled (or CONFIG_SYSFS_DEPRECATED not compiled)<BR>&nbsp;&nbsp;&nbsp;in older udev will not work anymore.<BR>&nbsp;&nbsp;&nbsp;Default depends on CONFIG_SYSFS_DEPRECATED_V2 set in<BR>&nbsp;&nbsp;&nbsp;the kernel configuration.</P>
<P>&nbsp;sysrq_always_enabled<BR>&nbsp;&nbsp;&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Ignore sysrq setting - this boot parameter will<BR>&nbsp;&nbsp;&nbsp;neutralize any effect of /proc/sys/kernel/sysrq.<BR>&nbsp;&nbsp;&nbsp;Useful for debugging.</P>
<P>&nbsp;tdfx=&nbsp;&nbsp;[HW,DRM]</P>
<P>&nbsp;test_suspend=&nbsp;[SUSPEND]<BR>&nbsp;&nbsp;&nbsp;Specify "mem" (for Suspend-to-RAM) or "standby" (for<BR>&nbsp;&nbsp;&nbsp;standby suspend) as the system sleep state to briefly<BR>&nbsp;&nbsp;&nbsp;enter during system startup.&nbsp; The system is woken from<BR>&nbsp;&nbsp;&nbsp;this state using a wakeup-capable RTC alarm.</P>
<P>&nbsp;thash_entries=&nbsp;[KNL,NET]<BR>&nbsp;&nbsp;&nbsp;Set number of hash buckets for TCP connection</P>
<P>&nbsp;thermal.act=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;-1: disable all active trip points in all thermal zones<BR>&nbsp;&nbsp;&nbsp;&lt;degrees C&gt;: override all lowest active trip points</P>
<P>&nbsp;thermal.crt=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;-1: disable all critical trip points in all thermal zones<BR>&nbsp;&nbsp;&nbsp;&lt;degrees C&gt;: override all critical trip points</P>
<P>&nbsp;thermal.nocrt=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;Set to disable actions on ACPI thermal zone<BR>&nbsp;&nbsp;&nbsp;critical and hot trip points.</P>
<P>&nbsp;thermal.off=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;1: disable ACPI thermal control</P>
<P>&nbsp;thermal.psv=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;-1: disable all passive trip points<BR>&nbsp;&nbsp;&nbsp;&lt;degrees C&gt;: override all passive trip points to this<BR>&nbsp;&nbsp;&nbsp;value</P>
<P>&nbsp;thermal.tzp=&nbsp;[HW,ACPI]<BR>&nbsp;&nbsp;&nbsp;Specify global default ACPI thermal zone polling rate<BR>&nbsp;&nbsp;&nbsp;&lt;deci-seconds&gt;: poll all this frequency<BR>&nbsp;&nbsp;&nbsp;0: no polling (default)</P>
<P>&nbsp;threadirqs&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Force threading of all interrupt handlers except those<BR>&nbsp;&nbsp;&nbsp;marked explicitly IRQF_NO_THREAD.</P>
<P>&nbsp;tmem&nbsp;&nbsp;[KNL,XEN]<BR>&nbsp;&nbsp;&nbsp;Enable the Transcendent memory driver if built-in.</P>
<P>&nbsp;tmem.cleancache=0|1 [KNL, XEN]<BR>&nbsp;&nbsp;&nbsp;Default is on (1). Disable the usage of the cleancache<BR>&nbsp;&nbsp;&nbsp;API to send anonymous pages to the hypervisor.</P>
<P>&nbsp;tmem.frontswap=0|1 [KNL, XEN]<BR>&nbsp;&nbsp;&nbsp;Default is on (1). Disable the usage of the frontswap<BR>&nbsp;&nbsp;&nbsp;API to send swap pages to the hypervisor. If disabled<BR>&nbsp;&nbsp;&nbsp;the selfballooning and selfshrinking are force disabled.</P>
<P>&nbsp;tmem.selfballooning=0|1 [KNL, XEN]<BR>&nbsp;&nbsp;&nbsp;Default is on (1). Disable the driving of swap pages<BR>&nbsp;&nbsp;&nbsp;to the hypervisor.</P>
<P>&nbsp;tmem.selfshrinking=0|1 [KNL, XEN]<BR>&nbsp;&nbsp;&nbsp;Default is on (1). Partial swapoff that immediately<BR>&nbsp;&nbsp;&nbsp;transfers pages from Xen hypervisor back to the<BR>&nbsp;&nbsp;&nbsp;kernel based on different criteria.</P>
<P>&nbsp;topology=&nbsp;[S390]<BR>&nbsp;&nbsp;&nbsp;Format: {off | on}<BR>&nbsp;&nbsp;&nbsp;Specify if the kernel should make use of the cpu<BR>&nbsp;&nbsp;&nbsp;topology information if the hardware supports this.<BR>&nbsp;&nbsp;&nbsp;The scheduler will make use of this information and<BR>&nbsp;&nbsp;&nbsp;e.g. base its process migration decisions on it.<BR>&nbsp;&nbsp;&nbsp;Default is on.</P>
<P>&nbsp;tp720=&nbsp;&nbsp;[HW,PS2]</P>
<P>&nbsp;tpm_suspend_pcr=[HW,TPM]<BR>&nbsp;&nbsp;&nbsp;Format: integer pcr id<BR>&nbsp;&nbsp;&nbsp;Specify that at suspend time, the tpm driver<BR>&nbsp;&nbsp;&nbsp;should extend the specified pcr with zeros,<BR>&nbsp;&nbsp;&nbsp;as a workaround for some chips which fail to<BR>&nbsp;&nbsp;&nbsp;flush the last written pcr on TPM_SaveState.<BR>&nbsp;&nbsp;&nbsp;This will guarantee that all the other pcrs<BR>&nbsp;&nbsp;&nbsp;are saved.</P>
<P>&nbsp;trace_buf_size=nn[KMG]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] will set tracing buffer size.</P>
<P>&nbsp;trace_event=[event-list]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] Set and start specified trace events in order<BR>&nbsp;&nbsp;&nbsp;to facilitate early boot debugging.<BR>&nbsp;&nbsp;&nbsp;See also Documentation/trace/events.txt</P>
<P>&nbsp;trace_options=[option-list]<BR>&nbsp;&nbsp;&nbsp;[FTRACE] Enable or disable tracer options at boot.<BR>&nbsp;&nbsp;&nbsp;The option-list is a comma delimited list of options<BR>&nbsp;&nbsp;&nbsp;that can be enabled or disabled just as if you were<BR>&nbsp;&nbsp;&nbsp;to echo the option name into</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /sys/kernel/debug/tracing/trace_options</P>
<P>&nbsp;&nbsp;&nbsp;For example, to enable stacktrace option (to dump the<BR>&nbsp;&nbsp;&nbsp;stack trace of each event), add to the command line:</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; trace_options=stacktrace</P>
<P>&nbsp;&nbsp;&nbsp;See also Documentation/trace/ftrace.txt "trace options"<BR>&nbsp;&nbsp;&nbsp;section.</P>
<P>&nbsp;transparent_hugepage=<BR>&nbsp;&nbsp;&nbsp;[KNL]<BR>&nbsp;&nbsp;&nbsp;Format: [always|madvise|never]<BR>&nbsp;&nbsp;&nbsp;Can be used to control the default behavior of the system<BR>&nbsp;&nbsp;&nbsp;with respect to transparent hugepages.<BR>&nbsp;&nbsp;&nbsp;See Documentation/vm/transhuge.txt for more details.</P>
<P>&nbsp;tsc=&nbsp;&nbsp;Disable clocksource stability checks for TSC.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;string&gt;<BR>&nbsp;&nbsp;&nbsp;[x86] reliable: mark tsc clocksource as reliable, this<BR>&nbsp;&nbsp;&nbsp;disables clocksource verification at runtime, as well<BR>&nbsp;&nbsp;&nbsp;as the stability checks done at bootup.&nbsp;Used to enable<BR>&nbsp;&nbsp;&nbsp;high-resolution timer mode on older hardware, and in<BR>&nbsp;&nbsp;&nbsp;virtualized environment.<BR>&nbsp;&nbsp;&nbsp;[x86] noirqtime: Do not use TSC to do irq accounting.<BR>&nbsp;&nbsp;&nbsp;Used to run time disable IRQ_TIME_ACCOUNTING on any<BR>&nbsp;&nbsp;&nbsp;platforms where RDTSC is slow and this accounting<BR>&nbsp;&nbsp;&nbsp;can add overhead.</P>
<P>&nbsp;turbografx.map[2|3]=&nbsp;[HW,JOY]<BR>&nbsp;&nbsp;&nbsp;TurboGraFX parallel port interface<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&lt;port#&gt;,&lt;js1&gt;,&lt;js2&gt;,&lt;js3&gt;,&lt;js4&gt;,&lt;js5&gt;,&lt;js6&gt;,&lt;js7&gt;<BR>&nbsp;&nbsp;&nbsp;See also Documentation/input/joystick-parport.txt</P>
<P>&nbsp;udbg-immortal&nbsp;[PPC] When debugging early kernel crashes that<BR>&nbsp;&nbsp;&nbsp;happen after console_init() and before a proper <BR>&nbsp;&nbsp;&nbsp;console driver takes over, this boot options might<BR>&nbsp;&nbsp;&nbsp;help "seeing" what's going on.</P>
<P>&nbsp;uhash_entries=&nbsp;[KNL,NET]<BR>&nbsp;&nbsp;&nbsp;Set number of hash buckets for UDP/UDP-Lite connections</P>
<P>&nbsp;uhci-hcd.ignore_oc=<BR>&nbsp;&nbsp;&nbsp;[USB] Ignore overcurrent events (default N).<BR>&nbsp;&nbsp;&nbsp;Some badly-designed motherboards generate lots of<BR>&nbsp;&nbsp;&nbsp;bogus events, for ports that aren't wired to<BR>&nbsp;&nbsp;&nbsp;anything.&nbsp; Set this parameter to avoid log spamming.<BR>&nbsp;&nbsp;&nbsp;Note that genuine overcurrent events won't be<BR>&nbsp;&nbsp;&nbsp;reported either.</P>
<P>&nbsp;unknown_nmi_panic<BR>&nbsp;&nbsp;&nbsp;[X86] Cause panic on unknown NMI.</P>
<P>&nbsp;usbcore.authorized_default=<BR>&nbsp;&nbsp;&nbsp;[USB] Default USB device authorization:<BR>&nbsp;&nbsp;&nbsp;(default -1 = authorized except for wireless USB,<BR>&nbsp;&nbsp;&nbsp;0 = not authorized, 1 = authorized)</P>
<P>&nbsp;usbcore.autosuspend=<BR>&nbsp;&nbsp;&nbsp;[USB] The autosuspend time delay (in seconds) used<BR>&nbsp;&nbsp;&nbsp;for newly-detected USB devices (default 2).&nbsp; This<BR>&nbsp;&nbsp;&nbsp;is the time required before an idle device will be<BR>&nbsp;&nbsp;&nbsp;autosuspended.&nbsp; Devices for which the delay is set<BR>&nbsp;&nbsp;&nbsp;to a negative value won't be autosuspended at all.</P>
<P>&nbsp;usbcore.usbfs_snoop=<BR>&nbsp;&nbsp;&nbsp;[USB] Set to log all usbfs traffic (default 0 = off).</P>
<P>&nbsp;usbcore.blinkenlights=<BR>&nbsp;&nbsp;&nbsp;[USB] Set to cycle leds on hubs (default 0 = off).</P>
<P>&nbsp;usbcore.old_scheme_first=<BR>&nbsp;&nbsp;&nbsp;[USB] Start with the old device initialization<BR>&nbsp;&nbsp;&nbsp;scheme (default 0 = off).</P>
<P>&nbsp;usbcore.usbfs_memory_mb=<BR>&nbsp;&nbsp;&nbsp;[USB] Memory limit (in MB) for buffers allocated by<BR>&nbsp;&nbsp;&nbsp;usbfs (default = 16, 0 = max = 2047).</P>
<P>&nbsp;usbcore.use_both_schemes=<BR>&nbsp;&nbsp;&nbsp;[USB] Try the other device initialization scheme<BR>&nbsp;&nbsp;&nbsp;if the first one fails (default 1 = enabled).</P>
<P>&nbsp;usbcore.initial_descriptor_timeout=<BR>&nbsp;&nbsp;&nbsp;[USB] Specifies timeout for the initial 64-byte<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; USB_REQ_GET_DESCRIPTOR request in milliseconds<BR>&nbsp;&nbsp;&nbsp;(default 5000 = 5.0 seconds).</P>
<P>&nbsp;usbhid.mousepoll=<BR>&nbsp;&nbsp;&nbsp;[USBHID] The interval which mice are to be polled at.</P>
<P>&nbsp;usb-storage.delay_use=<BR>&nbsp;&nbsp;&nbsp;[UMS] The delay in seconds before a new device is<BR>&nbsp;&nbsp;&nbsp;scanned for Logical Units (default 5).</P>
<P>&nbsp;usb-storage.quirks=<BR>&nbsp;&nbsp;&nbsp;[UMS] A list of quirks entries to supplement or<BR>&nbsp;&nbsp;&nbsp;override the built-in unusual_devs list.&nbsp; List<BR>&nbsp;&nbsp;&nbsp;entries are separated by commas.&nbsp; Each entry has<BR>&nbsp;&nbsp;&nbsp;the form VID:PID:Flags where VID and PID are Vendor<BR>&nbsp;&nbsp;&nbsp;and Product ID values (4-digit hex numbers) and<BR>&nbsp;&nbsp;&nbsp;Flags is a set of characters, each corresponding<BR>&nbsp;&nbsp;&nbsp;to a common usb-storage quirk flag as follows:<BR>&nbsp;&nbsp;&nbsp;&nbsp;a = SANE_SENSE (collect more than 18 bytes<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of sense data);<BR>&nbsp;&nbsp;&nbsp;&nbsp;b = BAD_SENSE (don't collect more than 18<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bytes of sense data);<BR>&nbsp;&nbsp;&nbsp;&nbsp;c = FIX_CAPACITY (decrease the reported<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device capacity by one sector);<BR>&nbsp;&nbsp;&nbsp;&nbsp;d = NO_READ_DISC_INFO (don't use<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;READ_DISC_INFO command);<BR>&nbsp;&nbsp;&nbsp;&nbsp;e = NO_READ_CAPACITY_16 (don't use<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;READ_CAPACITY_16 command);<BR>&nbsp;&nbsp;&nbsp;&nbsp;h = CAPACITY_HEURISTICS (decrease the<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reported device capacity by one<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sector if the number is odd);<BR>&nbsp;&nbsp;&nbsp;&nbsp;i = IGNORE_DEVICE (don't bind to this<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;device);<BR>&nbsp;&nbsp;&nbsp;&nbsp;l = NOT_LOCKABLE (don't try to lock and<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unlock ejectable media);<BR>&nbsp;&nbsp;&nbsp;&nbsp;m = MAX_SECTORS_64 (don't transfer more<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;than 64 sectors = 32 KB at a time);<BR>&nbsp;&nbsp;&nbsp;&nbsp;n = INITIAL_READ10 (force a retry of the<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;initial READ(10) command);<BR>&nbsp;&nbsp;&nbsp;&nbsp;o = CAPACITY_OK (accept the capacity<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reported by the device);<BR>&nbsp;&nbsp;&nbsp;&nbsp;p = WRITE_CACHE (the device cache is ON<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;by default);<BR>&nbsp;&nbsp;&nbsp;&nbsp;r = IGNORE_RESIDUE (the device reports<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bogus residue values);<BR>&nbsp;&nbsp;&nbsp;&nbsp;s = SINGLE_LUN (the device has only one<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Logical Unit);<BR>&nbsp;&nbsp;&nbsp;&nbsp;w = NO_WP_DETECT (don't test whether the<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;medium is write-protected).<BR>&nbsp;&nbsp;&nbsp;Example: quirks=0419:aaf5:rl,0421:0433:rc</P>
<P>&nbsp;user_debug=&nbsp;[KNL,ARM]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;int&gt;<BR>&nbsp;&nbsp;&nbsp;See arch/arm/Kconfig.debug help text.<BR>&nbsp;&nbsp;&nbsp;&nbsp; 1 - undefined instruction events<BR>&nbsp;&nbsp;&nbsp;&nbsp; 2 - system calls<BR>&nbsp;&nbsp;&nbsp;&nbsp; 4 - invalid data aborts<BR>&nbsp;&nbsp;&nbsp;&nbsp; 8 - SIGSEGV faults<BR>&nbsp;&nbsp;&nbsp;&nbsp;16 - SIGBUS faults<BR>&nbsp;&nbsp;&nbsp;Example: user_debug=31</P>
<P>&nbsp;userpte=<BR>&nbsp;&nbsp;&nbsp;[X86] Flags controlling user PTE allocations.</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;nohigh = do not allocate PTE pages in<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;HIGHMEM regardless of setting<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;of CONFIG_HIGHPTE.</P>
<P>&nbsp;vdso=&nbsp;&nbsp;[X86,SH]<BR>&nbsp;&nbsp;&nbsp;vdso=2: enable compat VDSO (default with COMPAT_VDSO)<BR>&nbsp;&nbsp;&nbsp;vdso=1: enable VDSO (default)<BR>&nbsp;&nbsp;&nbsp;vdso=0: disable VDSO mapping</P>
<P>&nbsp;vdso32=&nbsp;&nbsp;[X86]<BR>&nbsp;&nbsp;&nbsp;vdso32=2: enable compat VDSO (default with COMPAT_VDSO)<BR>&nbsp;&nbsp;&nbsp;vdso32=1: enable 32-bit VDSO (default)<BR>&nbsp;&nbsp;&nbsp;vdso32=0: disable 32-bit VDSO mapping</P>
<P>&nbsp;vector=&nbsp;&nbsp;[IA-64,SMP]<BR>&nbsp;&nbsp;&nbsp;vector=percpu: enable percpu vector domain</P>
<P>&nbsp;video=&nbsp;&nbsp;[FB] Frame buffer configuration<BR>&nbsp;&nbsp;&nbsp;See Documentation/fb/modedb.txt.</P>
<P>&nbsp;virtio_mmio.device=<BR>&nbsp;&nbsp;&nbsp;[VMMIO] Memory mapped virtio (platform) device.</P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&lt;size&gt;@&lt;baseaddr&gt;:&lt;irq&gt;[:&lt;id&gt;]<BR>&nbsp;&nbsp;&nbsp;where:<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;size&gt;&nbsp;&nbsp;&nbsp;&nbsp; := size (can use standard suffixes<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;like K, M and G)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;baseaddr&gt; := physical base address<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;irq&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := interrupt number (as passed to<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;request_irq())<BR>&nbsp;&nbsp;&nbsp;&nbsp;&lt;id&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := (optional) platform device id<BR>&nbsp;&nbsp;&nbsp;example:<BR>&nbsp;&nbsp;&nbsp;&nbsp;<A href="mailto:virtio_mmio.device=1K@0x100b0000:48:7">virtio_mmio.device=1K@0x100b0000:48:7</A></P>
<P>&nbsp;&nbsp;&nbsp;Can be used multiple times for multiple devices.</P>
<P>&nbsp;vga=&nbsp;&nbsp;[BOOT,X86-32] Select a particular video mode<BR>&nbsp;&nbsp;&nbsp;See Documentation/x86/boot.txt and<BR>&nbsp;&nbsp;&nbsp;Documentation/svga.txt.<BR>&nbsp;&nbsp;&nbsp;Use vga=ask for menu.<BR>&nbsp;&nbsp;&nbsp;This is actually a boot loader parameter; the value is<BR>&nbsp;&nbsp;&nbsp;passed to the kernel using a special protocol.</P>
<P>&nbsp;vmalloc=nn[KMG]&nbsp;[KNL,BOOT] Forces the vmalloc area to have an exact<BR>&nbsp;&nbsp;&nbsp;size of &lt;nn&gt;. This can be used to increase the<BR>&nbsp;&nbsp;&nbsp;minimum size (128MB on x86). It can also be used to<BR>&nbsp;&nbsp;&nbsp;decrease the size and leave more room for directly<BR>&nbsp;&nbsp;&nbsp;mapped kernel RAM.</P>
<P>&nbsp;vmhalt=&nbsp;&nbsp;[KNL,S390] Perform z/VM CP command after system halt.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;command&gt;</P>
<P>&nbsp;vmpanic=&nbsp;[KNL,S390] Perform z/VM CP command after kernel panic.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;command&gt;</P>
<P>&nbsp;vmpoff=&nbsp;&nbsp;[KNL,S390] Perform z/VM CP command after power off.<BR>&nbsp;&nbsp;&nbsp;Format: &lt;command&gt;</P>
<P>&nbsp;vsyscall=&nbsp;[X86-64]<BR>&nbsp;&nbsp;&nbsp;Controls the behavior of vsyscalls (i.e. calls to<BR>&nbsp;&nbsp;&nbsp;fixed addresses of 0xffffffffff600x00 from legacy<BR>&nbsp;&nbsp;&nbsp;code).&nbsp; Most statically-linked binaries and older<BR>&nbsp;&nbsp;&nbsp;versions of glibc use these calls.&nbsp; Because these<BR>&nbsp;&nbsp;&nbsp;functions are at fixed addresses, they make nice<BR>&nbsp;&nbsp;&nbsp;targets for exploits that can control RIP.</P>
<P>&nbsp;&nbsp;&nbsp;emulate&nbsp;&nbsp;&nbsp;&nbsp; [default] Vsyscalls turn into traps and are<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; emulated reasonably safely.</P>
<P>&nbsp;&nbsp;&nbsp;native&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Vsyscalls are native syscall instructions.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; This is a little bit faster than trapping<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; and makes a few dynamic recompilers work<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; better than they would in emulation mode.<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; It also makes exploits much easier to write.</P>
<P>&nbsp;&nbsp;&nbsp;none&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Vsyscalls don't work at all.&nbsp; This makes<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; them quite hard to use for exploits but<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; might break your system.</P>
<P>&nbsp;vt.cur_default=&nbsp;[VT] Default cursor shape.<BR>&nbsp;&nbsp;&nbsp;Format: 0xCCBBAA, where AA, BB, and CC are the same as<BR>&nbsp;&nbsp;&nbsp;the parameters of the &lt;Esc&gt;[?A;B;Cc escape sequence;<BR>&nbsp;&nbsp;&nbsp;see VGA-softcursor.txt. Default: 2 = underline.</P>
<P>&nbsp;vt.default_blu=&nbsp;[VT]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;blue0&gt;,&lt;blue1&gt;,&lt;blue2&gt;,...,&lt;blue15&gt;<BR>&nbsp;&nbsp;&nbsp;Change the default blue palette of the console.<BR>&nbsp;&nbsp;&nbsp;This is a 16-member array composed of values<BR>&nbsp;&nbsp;&nbsp;ranging from 0-255.</P>
<P>&nbsp;vt.default_grn=&nbsp;[VT]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;green0&gt;,&lt;green1&gt;,&lt;green2&gt;,...,&lt;green15&gt;<BR>&nbsp;&nbsp;&nbsp;Change the default green palette of the console.<BR>&nbsp;&nbsp;&nbsp;This is a 16-member array composed of values<BR>&nbsp;&nbsp;&nbsp;ranging from 0-255.</P>
<P>&nbsp;vt.default_red=&nbsp;[VT]<BR>&nbsp;&nbsp;&nbsp;Format: &lt;red0&gt;,&lt;red1&gt;,&lt;red2&gt;,...,&lt;red15&gt;<BR>&nbsp;&nbsp;&nbsp;Change the default red palette of the console.<BR>&nbsp;&nbsp;&nbsp;This is a 16-member array composed of values<BR>&nbsp;&nbsp;&nbsp;ranging from 0-255.</P>
<P>&nbsp;vt.default_utf8=<BR>&nbsp;&nbsp;&nbsp;[VT]<BR>&nbsp;&nbsp;&nbsp;Format=&lt;0|1&gt;<BR>&nbsp;&nbsp;&nbsp;Set system-wide default UTF-8 mode for all tty's.<BR>&nbsp;&nbsp;&nbsp;Default is 1, i.e. UTF-8 mode is enabled for all<BR>&nbsp;&nbsp;&nbsp;newly opened terminals.</P>
<P>&nbsp;vt.global_cursor_default=<BR>&nbsp;&nbsp;&nbsp;[VT]<BR>&nbsp;&nbsp;&nbsp;Format=&lt;-1|0|1&gt;<BR>&nbsp;&nbsp;&nbsp;Set system-wide default for whether a cursor<BR>&nbsp;&nbsp;&nbsp;is shown on new VTs. Default is -1,<BR>&nbsp;&nbsp;&nbsp;i.e. cursors will be created by default unless<BR>&nbsp;&nbsp;&nbsp;overridden by individual drivers. 0 will hide<BR>&nbsp;&nbsp;&nbsp;cursors, 1 will display them.</P>
<P>&nbsp;watchdog timers&nbsp;[HW,WDT] For information on watchdog timers,<BR>&nbsp;&nbsp;&nbsp;see Documentation/watchdog/watchdog-parameters.txt<BR>&nbsp;&nbsp;&nbsp;or other driver-specific files in the<BR>&nbsp;&nbsp;&nbsp;Documentation/watchdog/ directory.</P>
<P>&nbsp;workqueue.disable_numa<BR>&nbsp;&nbsp;&nbsp;By default, all work items queued to unbound<BR>&nbsp;&nbsp;&nbsp;workqueues are affine to the NUMA nodes they're<BR>&nbsp;&nbsp;&nbsp;issued on, which results in better behavior in<BR>&nbsp;&nbsp;&nbsp;general.&nbsp; If NUMA affinity needs to be disabled for<BR>&nbsp;&nbsp;&nbsp;whatever reason, this option can be used.&nbsp; Note<BR>&nbsp;&nbsp;&nbsp;that this also can be controlled per-workqueue for<BR>&nbsp;&nbsp;&nbsp;workqueues visible under /sys/bus/workqueue/.</P>
<P>&nbsp;workqueue.power_efficient<BR>&nbsp;&nbsp;&nbsp;Per-cpu workqueues are generally preferred because<BR>&nbsp;&nbsp;&nbsp;they show better performance thanks to cache<BR>&nbsp;&nbsp;&nbsp;locality; unfortunately, per-cpu workqueues tend to<BR>&nbsp;&nbsp;&nbsp;be more power hungry than unbound workqueues.</P>
<P>&nbsp;&nbsp;&nbsp;Enabling this makes the per-cpu workqueues which<BR>&nbsp;&nbsp;&nbsp;were observed to contribute significantly to power<BR>&nbsp;&nbsp;&nbsp;consumption unbound, leading to measurably lower<BR>&nbsp;&nbsp;&nbsp;power usage at the cost of small performance<BR>&nbsp;&nbsp;&nbsp;overhead.</P>
<P>&nbsp;&nbsp;&nbsp;The default value of this parameter is determined by<BR>&nbsp;&nbsp;&nbsp;the config option CONFIG_WQ_POWER_EFFICIENT_DEFAULT.</P>
<P>&nbsp;x2apic_phys&nbsp;[X86-64,APIC] Use x2apic physical mode instead of<BR>&nbsp;&nbsp;&nbsp;default x2apic cluster mode on platforms<BR>&nbsp;&nbsp;&nbsp;supporting x2apic.</P>
<P>&nbsp;x86_mrst_timer= [X86-32,APBT]<BR>&nbsp;&nbsp;&nbsp;Choose timer option for x86 Moorestown MID platform.<BR>&nbsp;&nbsp;&nbsp;Two valid options are apbt timer only and lapic timer<BR>&nbsp;&nbsp;&nbsp;plus one apbt timer for broadcast timer.<BR>&nbsp;&nbsp;&nbsp;x86_mrst_timer=apbt_only | lapic_and_apbt</P>
<P>&nbsp;xen_emul_unplug=&nbsp;&nbsp;[HW,X86,XEN]<BR>&nbsp;&nbsp;&nbsp;Unplug Xen emulated devices<BR>&nbsp;&nbsp;&nbsp;Format: [unplug0,][unplug1]<BR>&nbsp;&nbsp;&nbsp;ide-disks -- unplug primary master IDE devices<BR>&nbsp;&nbsp;&nbsp;aux-ide-disks -- unplug non-primary-master IDE devices<BR>&nbsp;&nbsp;&nbsp;nics -- unplug network devices<BR>&nbsp;&nbsp;&nbsp;all -- unplug all emulated devices (NICs and IDE disks)<BR>&nbsp;&nbsp;&nbsp;unnecessary -- unplugging emulated devices is<BR>&nbsp;&nbsp;&nbsp;&nbsp;unnecessary even if the host did not respond to<BR>&nbsp;&nbsp;&nbsp;&nbsp;the unplug protocol<BR>&nbsp;&nbsp;&nbsp;never -- do not unplug even if version check succeeds</P>
<P>&nbsp;xirc2ps_cs=&nbsp;[NET,PCMCIA]<BR>&nbsp;&nbsp;&nbsp;Format:<BR>&nbsp;&nbsp;&nbsp;&lt;irq&gt;,&lt;irq_mask&gt;,&lt;io&gt;,&lt;full_duplex&gt;,&lt;do_sound&gt;,&lt;lockup_hack&gt;[,&lt;irq2&gt;[,&lt;irq3&gt;[,&lt;irq4&gt;]]]</P>
<P>______________________________________________________________________</P>
<P>TODO:</P>
<P>&nbsp;Add more DRM drivers.