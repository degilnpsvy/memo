<H3 id=-100000 class=docSection1Title>Looking at the Sources</H3>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch14lev1sec1.html#ch14tab01">Table 14.1</A><A name="contains the"></A> contains the location of kernel driver sources for various storage technologies. Take a look at <SPAN class=docEmphasis>Documentation/ide.txt</SPAN>, <SPAN class=docEmphasis>Documentation/scsi/*</SPAN>, and <SPAN class=docEmphasis>Documentation/cdrom/</SPAN><A name="about associated"></A> for information about associated storage drivers.</P>
<P class=docText>The top-level <SPAN class=docEmphasis>block/</SPAN><A name="contains I"></A> directory contains I/O scheduling algorithms and the block core layer. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch14lev1sec3.html#ch14tab02">Table 14.2</A><A name="various I"></A> lists the source files in this directory that implement various I/O schedulers. Look at <SPAN class=docEmphasis>Documentation/block/</SPAN> for related documentation.</P>
<P class=docText><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch14lev1sec8.html#ch14tab04">Table 14.4</A><A name="used in"></A> contains the main data structures used in this chapter and their location in the source tree. <A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/ch14lev1sec8.html#ch14tab05">Table 14.5</A><A name="in this"></A> lists the main kernel programming interfaces that you used in this chapter, along with the location of their definitions.</P><A name=ch14tab04></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 14.4. Summary of Data Structures</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=200>
<COL width=150>
<COL width=200></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Data Structure</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>gendisk</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/genhd.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Representation of a disk.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>request_queue</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/blkdev.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>The I/O request queue associated with a <TT>gendisk</TT>.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>request</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/blkdev.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Each request in a <TT>request_queue</TT> is described using this structure.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>block_device_operations</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/fs.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Block device driver methods.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>bio</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/bio.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Low-level description of block I/O operations.</TD></TR></TBODY></TABLE></P><BR>
<P class=docText></P><A name=ch14tab05></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 rules=groups frame=hsides>
<CAPTION>
<H5 class=docTableTitle>Table 14.5. Summary of Kernel Programming Interfaces</H5></CAPTION>
<COLGROUP span=3 align=left>
<COL width=200>
<COL width=150>
<COL width=200></COLGROUP>
<THEAD>
<TR>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left><A name=iddle1043></A><A name=iddle1083></A><A name=iddle1214></A><A name=iddle1225></A><A name=iddle1226></A><A name=iddle1228></A><A name=iddle1230></A><A name=iddle1232></A><A name=iddle1234></A><A name=iddle1236></A><A name=iddle1249></A><A name=iddle1743></A><A name=iddle1912></A><A name=iddle1988></A><A name=iddle3762></A><A name=iddle3846></A><A name=iddle3984></A><A name=iddle4396></A>Kernel Interface</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Location</TH>
<TH class="docTableCell bottomBorder thead" style="TEXT-ALIGN: left" vAlign=top scope=col align=left>Description</TH></TR></THEAD>
<TBODY>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>register_blkdev()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/genhd.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers a block driver with the kernel</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>unregister_blkdev()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/genhd.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Unregisters a block driver from the kernel</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>alloc_disk()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/genhd.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates a <TT>gendisk</TT></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>add_disk()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/genhd.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Adds a populated <TT>gendisk</TT> to the kernel block layer</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>del_gendisk()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>fs/partitions/check.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Frees a <TT>gendisk</TT></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_init_queue()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Allocates a <TT>request_queue</TT> and registers a <TT>request()</TT> function to process the requests in the queue</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_cleanup_queue()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Reverse of <TT>blk_init_queue()</TT></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_queue_make_request()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Registers a <TT>make_request()</TT><A name="obtains requests"></A> function, which bypasses the request queue and directly obtains requests from the block layer</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>rq_for_each_bio()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/blkdev.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Iterates over each <TT>bio</TT> in a request</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>bio_for_each_segment()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/bio.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Loops through each page segment in a <TT>bio</TT></TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_rq_map_sg()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left>Iterates through the <TT>bio</TT> segments constituting a request and builds a scatter/gather list</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_queue_max_sectors()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="request queue"></A>Sets the maximum sectors for a request in the associated request queue</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_queue_hardsect_size()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="by the"></A>Sector size supported by the storage hardware.</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>set_capacity()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/genhd.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="capacity of"></A>Sets the capacity of the storage media in terms of number of sectors</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>blk_fs_request()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>include/linux/blkdev.h</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="Checks whether"></A>Checks whether a request obtained from the request queue is a filesystem request</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>elv_next_request()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/elevator.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="next entry"></A>Obtains the next entry from the request queue</TD></TR>
<TR>
<TD class=docTableCell vAlign=top align=left><TT>end_request()</TT></TD>
<TD class=docTableCell vAlign=top align=left><SPAN class=docEmphasis>block/ll_rw_blk.c</SPAN></TD>
<TD class=docTableCell vAlign=top align=left><A name="on a"></A>Ends I/O on a request</TD></TR></TBODY></TABLE>