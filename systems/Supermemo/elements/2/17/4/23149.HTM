<H3 id=-100000 class=docSection1Title>Test Infrastructure</H3>
<P class=docText><A name=iddle1979></A><A name=iddle3345></A><A name=iddle4248></A><A name="Most industry"></A>Most industry domains that use embedded devices are governed by regulatory bodies. Having an extensible and robust test infrastructure is likely to be as important as implementing modifications to the kernel and device drivers. Broadly, the test framework is responsible for the following:</P>
<DIV style="FONT-WEIGHT: bold">
<OL class=docList type=1>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList><A name="to obtain"></A>Demonstrating compliance to obtain regulatory approvals. If your system is a medical-grade device for the U.S. market, for example, you should orient your test suite for getting approvals from the <SPAN class=docEmphasis>Food and Drug Administration</SPAN> (FDA).</P></DIV></LI>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList><A name="for the"></A>Most electronic devices intended for the U.S. market have to comply with emission standards such as <SPAN class=docEmphasis>electromagnetic interference</SPAN> (EMI) and <SPAN class=docEmphasis>electromagnetic compatibility</SPAN><A name="by the"></A> (EMC) as laid down by the <SPAN class=docEmphasis>Federal Communications Commission</SPAN><A name="tests inside"></A> (FCC). To demonstrate compliance, you may need to run a battery of tests inside a chamber that models different operating environments. You might also have to verify that the system runs normally when an electrostatic gun is pointed at different parts of the board.</P></DIV></LI>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList><A name="build a"></A>Build verification tests. Whenever you build a software deliverable, subject it to <SPAN class=docEmphasis>quality assurance</SPAN> (QA) using these tests.</P></DIV></LI>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList><A name="have to"></A>Manufacturing tests. Each time a device is assembled, you have to verify its functionality using a set of tests. These tests assume significance when manufacturing moves into volume production.</P></DIV></LI></OL></DIV>
<P class=docText><A name="base for"></A>To have a common test base for all these, it's a good idea to implement your test harness over Linux, rather than develop it as a stand-alone suite. Stand-alone code is not easily scalable or extendable. Adding a simple test to ping the next-hop router is a five-line script on a Linux-based test system but can entail writing a network driver and a protocol stack if you are using a stand-alone test monitor.</P>
<P class=docText><A name="guru but"></A>A test engineer need not be a kernel guru but will need to imbibe implementation information from the development team and think critically.