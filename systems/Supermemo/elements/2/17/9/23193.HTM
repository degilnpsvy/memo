<H2 id=title-ID0EL3AO class=docAppendixTitle>Appendix B. Linux and the BIOS</H2>
<P class=docText></P><A name=app02sb01></A>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD>
<P class=docText><A name=iddle1068></A><A name=iddle1113></A><A name=iddle1121></A><A name=iddle1122></A><A name=iddle1222></A><A name=iddle2411></A><A name=iddle2966></A><A name=iddle2970></A><A name=iddle3748></A><A name=iddle4577></A><A name=iddle4587></A><A name=iddle4672></A><A name=iddle4674></A><A name="Parts of"></A>Parts of the x86 kernel, such as the <SPAN class=docEmphasis><A name="buffer driver"></A>video frame buffer driver</SPAN> (<TT>vesafb</TT>) and <SPAN class=docEmphasis>Advanced Power Management</SPAN><A name="to accomplish"></A> (APM), explicitly use BIOS services to accomplish certain functions. Other sections of the kernel, such as the serial driver, implicitly depend on the BIOS to initialize I/O base addresses and interrupt levels. Real mode kernel code makes extensive use of BIOS calls during boot to perform tasks such as assembling the system memory map.<SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EssentialLinuxDeviceDrivers/final/app02.html#app02fn01">[1]</A></SUP><A name="drivers depend"></A> Because some device drivers depend directly or indirectly on the BIOS, let's learn how to interact with it.</P></TD></TR></TBODY></TABLE></P><BR>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=app02fn01>[1]</A></SUP><A name="ARM Linux"></A> On BIOS-less embedded architectures, similar responsibilities (for example, waking the kernel from suspend on ARM Linux) rest with the bootloader.</P></BLOCKQUOTE><A name=app02lev1sec1></A>