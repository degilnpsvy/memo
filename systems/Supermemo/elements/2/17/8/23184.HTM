<H3 id=-100000 class=docSection1Title>Change Markers</H3>
<P class=docText><A name="Using a"></A>Using a marker such as <TT>CONFIG_MYPROJECT</TT><A name="additions and"></A> to tag additions and deletions to existing kernel source files helps highlight project-specific changes to the source tree. One can recursively grep for the marker string from the root of the code tree to learn the location of all kernel changes implemented for the project. The following example marks code changes to <SPAN class=docEmphasis>drivers/i2c/busses/i2c-i801.c</SPAN><A name="check for"></A>. The modification introduces a check for a new PCI device ID during setup and eliminates a configuration byte access:</P>
<DIV class=docText><PRE>/* ... */
switch(dev-&gt;device) {
  case PCI_DEVICE_ID_INTEL_82801DB_3:
<SPAN class=docEmphStrong>#if defined (CONFIG_MYPROJECT)</SPAN>
   case PCI_DEVICE_ID_MYID :
<SPAN class=docEmphStrong>#endif</SPAN>
  /* ... */
}
/* ... */
<SPAN class=docEmphStrong>#if !defined (CONFIG_MYPROJECT)</SPAN>
   pci_write_config_byte(I801_dev, SMBHSTCFG, temp);
<SPAN class=docEmphStrong>#endif</SPAN>
return 0;
/* ... */</PRE></DIV><BR>
<P class=docText><A name=iddle1450></A><A name=iddle1549></A><A name=iddle1556></A><A name=iddle1568></A><A name=iddle1587></A><A name=iddle1644></A><A name=iddle1750></A><A name=iddle1753></A><A name=iddle2888></A><A name=iddle2891></A><A name=iddle4174></A><A name=iddle4575></A><TT>CONFIG_MYPROJECT</TT><A name="a configuration"></A> also functions as a configuration-time switch to enable or disable project-specific changes.</P>
<P class=docText><A name="your project"></A>It's a good idea to have submarkers for various subtasks in your project. So, if you are modifying the kernel for fast boot as part of your project, wrap those changes within a submarker such as <TT>CONFIG_MYPROJECT_FASTBOOT</TT>.