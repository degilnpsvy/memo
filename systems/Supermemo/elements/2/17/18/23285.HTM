<H3 id=title-IDAJL2PF class=docSection1Title>12.2. Host System Requirements</H3>
<P class=docText><A name=iddle1593></A><A name=iddle2240></A><A name=iddle2241></A><A name=iddle2372></A><A name=iddle2373></A><A name=iddle2495></A>Your development workstation must include several important components and systems. Of course, you need a properly configured cross toolchain. You can download and compile one yourself or obtain one of the many commercial toolchains available. Building one yourself is beyond the scope of this book, although there are several good references available. See <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch12lev1sec4.html#ch12lev2sec8">Section 12.4.1</A>, "Suggestions for Additional Reading," at the end of this chapter for recommendations.</P>
<P class=docText>The next major item you need is a Linux distribution targeted for your embedded system architecture. This includes hundreds to potentially thousands of files that will populate your embedded system's file systems. Again, the choices are to build your own or to obtain one of the commercial ones. One of the more popular embedded system distributions available on the Internet is the aforementioned ELDK. The ELDK is available for some PowerPC and other embedded targets. Building an embedded Linux distribution from scratch would require a book of this size in itself and, therefore, is beyond the scope of our discussions here.</P>
<P class=docText>In summary, your development host requires four separate and distinct capabilities:</P>
<UL>
<LI>
<P class=docList>Cross toolchain and libraries</P></LI>
<LI>
<P class=docList>Target system packages, including programs, utilities, and libraries</P></LI>
<LI>
<P class=docList>Host tools such as editors, debuggers, and utilities</P></LI>
<LI>
<P class=docList>Servers for hosting your target board, covered in the next section</P></LI></UL>
<P class=docText>If you install a ready-built embedded Linux development environment on your workstation, either a commercial variety or one freely available in the open source community, the toolchain and components have already been preconfigured to work together. For example, the toolchain has been configured with default directory search paths that match the location of the target header files and system libraries on your development workstation. The situation becomes much more complex if your requirements include having support for multiple architectures and processors on your development workstation. This is the reason that embedded Linux distributions exist.</P><A name=ch12lev2sec2></A>
<H4 id=title-IDAOO2PF class=docSection2Title>12.2.1. Hardware Debug Probe</H4>
<P class=docText><A name=iddle1285></A><A name=iddle1585></A><A name=iddle1594></A><A name=iddle1599></A><A name=iddle2501></A><A name=iddle2502></A><A name=iddle2507></A><A name=iddle2517></A>In addition to the components listed previously, you should consider some type of hardware-assisted debugging. This consists of a hardware probe connected to your host (often via Ethernet) and connected to your target via a debug connector on the board. Many solutions are on the market today. We cover this topic in detail in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch14.html#ch14">Chapter 14</A>, "Kernel Debugging Techniques."