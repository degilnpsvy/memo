<H3 id=title-IDA4CPWD class=docSection1Title>4.1. Background</H3>
<P class=docText>Linus Torvalds wrote the original version of Linux while he was a student at the University of Helsinki in Finland. His work began in 1991. In August of that year, Linus posted this now-famous announcement on <TT>comp.os.minix:</TT></P>
<DIV class=docText><PRE>From: torvalds@klaava.Helsinki.FI (Linus Benedict Torvalds)
Newsgroups: comp.os.minix
Subject: What would you like to see most in minix?
Summary: small poll for my new operating system
Message-ID: &lt;1991Aug25.205708.9541@klaava.Helsinki.FI&gt;
Date: 25 Aug 91 20:57:08 GMT
Organization: University of Helsinki


Hello everybody out there using minix -
I'm doing a (free) operating system (just a hobby, won't be big and professional
like gnu) for 386(486) AT clones.  This has been brewing since april, and is
starting to get ready.  I'd like any feedback on things people like/dislike in
minix, as my OS resembles it somewhat(same physical layout of the file-system
(due to practical reasons)among other things).

I've currently ported bash(1.08) and gcc(1.40), and things seem to work. This
implies that I'll get something practical within a few months, and I'd
like to
know what features most people would want. Any suggestions are welcome, but I
won't promise I'll implement them :-)

               Linus (torvalds@kruuna.helsinki.fi)

PS.  Yes - it's free of any minix code, and it has a multi-threaded fs.
It is NOT protable (uses 386 task switching etc), and it probably never
will support anything other than AT-harddisks, as that's all I have :-(.</PRE></DIV><BR>
<P class=docText><A name=iddle1786></A>Since that initial release, Linux has matured into a full-featured operating system with robustness, reliability, and high-end features that rival those of the best commercial operating systems. By some estimates, more than half of the Internet servers on the Web are powered by Linux servers. It is no secret that the online search giant Google uses a large collection of low-cost PCs running a fault-tolerant version of Linux to implement its popular search engine.</P><A name=ch04lev2sec1></A>
<H4 id=title-IDACEPWD class=docSection2Title>4.1.1. Kernel Versions</H4>
<P class=docText>You can obtain the source code for a Linux kernel and complementary components in numerous places. Your local bookstore might have several versions as companion CD-ROMs in books about Linux. You also can download the kernel itself or even complete Linux distributions from numerous locations on the Internet. The official home for the Linux kernel is found at <A class=docLink href="http://www.kernel.org/" target=_blank>www.kernel.org</A>. You will often hear the terms <SPAN class=docEmphasis>mainline</SPAN> <SPAN class=docEmphasis>source</SPAN> or <SPAN class=docEmphasis>mainline kernel</SPAN> referring to the source trees found at kernel.org.</P>
<P class=docText>As this book is being written, Linux Version 2.6 is the current version. Early in the development cycle, the developers chose a numbering system designed to differentiate between kernel source trees intended for development and experimentation and source trees intended to be stable, production-ready kernels. The numbering scheme contains a major version number, a minor version number, and then a sequence number. Before Linux Version 2.6, if the minor version number is even, it denotes a production kernel; if it is odd, it denotes a development kernel. For example:</P>
<UL>
<LI>
<P class=docText><SPAN class=docEmphStrong>Linux 2.4.<SPAN class=docEmphasis>x</SPAN></SPAN> Production kernel</P></LI>
<LI>
<P class=docText><SPAN class=docEmphStrong>Linux 2.5.<SPAN class=docEmphasis>x</SPAN></SPAN> Experimental (development)</P></LI>
<LI>
<P class=docText><SPAN class=docEmphStrong>Linux 2.6.<SPAN class=docEmphasis>x</SPAN></SPAN> Production kernel</P></LI></UL>
<P class=docText><A name=iddle1946></A>Currently, there is no separate development branch of the Linux 2.6 kernel. All new features, enhancements, and bug fixes are funneled through a series of gatekeepers who ultimately filter and push changes up to the top-level Linux source trees maintained by Andrew Morton and Linus Torvalds.</P>
<P class=docText>It is easy to tell what kernel version you are working with. The first few lines of the top-level <SPAN class=docEmphasis>makefile</SPAN><SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04lev1sec1.html#ch04fn01">[1]</A></SUP> in a kernel source tree detail the exact kernel version represented by a given instance. It looks like this for the 2.6.14 production kernel:</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=ch04fn01>[1]</A></SUP> We talk about the kernel build system and makefiles shortly.</P></BLOCKQUOTE>
<DIV class=docText><PRE>VERSION = 2
PATCHLEVEL = 6
SUBLEVEL = 14
EXTRAVERSION =
NAME=Affluent Albatross</PRE></DIV><BR>
<P class=docText>Later in the same makefile, these macros are used to form a version-level macro, like this:</P>
<DIV class=docText><PRE>KERNELRELEASE=$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)</PRE></DIV><BR>
<P class=docText>This macro is used in several places in the kernel source tree to indicate the kernel version. In fact, version information is used with sufficient frequency that the kernel developers have dedicated a set of macros derived from the version macros in the makefile. These macros are found in <TT>&#8230;/include/linux/version.h</TT><SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04lev1sec1.html#ch04fn02">[2]</A></SUP> in the Linux kernel source tree. They are reproduced here as <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04lev1sec1.html#ch04list01">Listing 4-1</A>.</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=ch04fn02>[2]</A></SUP> Throughout this book, three dots preceding any path are used to indicate whatever path it might take on your system to reach the top-level Linux source tree.</P></BLOCKQUOTE><A name=ch04list01></A>
<H5 id=title-IDAYHPWD class=docExampleTitle>Listing 4-1. Kernel include File:&#8230;/include/linux/version.h</H5>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD>
<DIV class=docText><PRE>#define UTS_RELEASE "2.6.14"
#define LINUX_VERSION_CODE 132622
#define KERNEL_VERSION(a,b,c) (((a) &lt;&lt; 16) + ((b) &lt;&lt; 8) + (c))</PRE></DIV><BR></TD></TR></TBODY></TABLE></P>
<P class=docText>You can check the kernel version from a command prompt on a running Linux system like this:</P>
<DIV class=docText><PRE><SPAN class=docEmphStrong>$ cat /proc/version</SPAN>
Linux version 2.6.13 (chris@pluto) (gcc version 4.0.0 (DENX ELDK 4.0 4.0.0)) #2
Thu Feb 16 19:30:13 EST 2006</PRE></DIV><BR>
<P class=docText>One final note about kernel versions: You can make it easy to keep track of the kernel version in your own kernel project by customizing the <TT>EXtrAVERSION</TT> field.</P>
<P class=docText><A name=iddle1783></A><A name=iddle2428></A>For example, if you were developing enhancements for some new kernel feature, you might set <TT>EXtrAVERSION</TT> to something like this:</P>
<DIV class=docText><PRE>EXTRAVERSION=-foo</PRE></DIV><BR>
<P class=docText>Later, when you use <TT>cat /proc/version</TT>, you would see <TT>Linux version 2.6.13-foo</TT>, and this would help you distinguish between development versions of your own kernel.</P><A name=ch04lev2sec2></A>
<H4 id=title-IDAHKPWD class=docSection2Title>4.1.2. Kernel Source Repositories</H4>
<P class=docText>The official home for the kernel source code is <A class=docLink href="http://www.kernel.org/" target=_blank>www.kernel.org</A>. There you can find both current and historical versions of the Linux kernel, as well as numerous patches. The primary FTP repository found at <TT><A class=docLink href="http://ftp.kernel.org/" target=_blank>ftp.kernel.org</A></TT> contains subdirectories going all the way back to Linux Version 1.0. This site is the primary focus for the ongoing development activities within the Linux kernel.</P>
<P class=docText>If you download a recent Linux kernel from kernel.org, you will find files in the source tree for 25 different architectures and subarchitectures. Several other development trees support the major architectures. One of the reasons is simply the sheer volume of developers and changes to the kernel. If every developer on every architecture submitted patches to kernel.org, the maintainers would be inundated with changes and patch management, and would never get to do any feature development. As anyone involved with kernel development will tell you, it's already very busy!</P>
<P class=docText>Several other public source trees exist outside the mainline kernel.org source, mostly for architecture-specific development. For example, a developer working on the MIPS architecture might find a suitable kernel at <A class=docLink href="http://www.linux-mips.org/" target=_blank>www.linux-mips.org</A>. Normally, work done in an architecture tree is eventually submitted to the kernel.org kernel. Most architecture developers try to sync up to the mainline kernel often, to keep up with new developments whenever possible. However, it is not always straightforward to get one's patches included in the mainline kernel, and there will always be a lag. Indeed, differences in the architecture kernel trees exist at any given point in time.</P>
<P class=docText>If you are wondering how to find a kernel for your particular application, the best way to proceed is to obtain the latest stable Linux source tree. Check to see if support for your particular processor exists, and then search the Linux kernel mailing lists for any patches or issues related to your application. Also find the mailing list that most closely matches your interest, and search that archive also.</P>
<P class=docText><A name=iddle1352></A><A name=iddle1760></A><A name=iddle1763></A><A name=iddle2461></A><A name=iddle2534></A><A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/app05.html#app05">Appendix E</A>, "Open Source Resources," contains several good references and sources of information related to kernel source repositories, mailing lists, and more.