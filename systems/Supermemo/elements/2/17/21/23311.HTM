<H3 id=title-IDA0KBWD class=docSection1Title>16.1. Linux Source Organization</H3>
<P class=docText>Not too long ago, there were numerous homes<SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec1.html#ch16fn1">[1]</A></SUP> for the various versions of Linux. There was a dedicated place for the PowerPC version of Linux, one for the ARM version, and so on. This wasn't necessarily by design, but by necessity. It took time to merge the various architecture infrastructure and features into the mainline kernel, and having a separate source tree meant quicker access to the latest features in a given architecture.</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=ch16fn1>[1]</A></SUP> By "homes," we mean a public source code repository, such as a web server on the Internet.</P></BLOCKQUOTE>
<P class=docText>The kernel developers have gone to great lengths to unify the Linux kernel source code to bring together the disparate architectures under one common source tree. With few exceptions, this is the case today with the Linux 2.6 source. It is possible to download and compile working kernels for a variety of processors and industry-standard reference boards directly from <A class=docLink href="http://www.kernel.org/" target=_blank>www.kernel.org</A>.</P><A name=ch16lev2sec1></A>
<H4 id=title-IDASLBWD class=docSection2Title>16.1.1. The Architecture Branch</H4>
<P class=docText>In <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04.html#ch04">Chapter 4</A>, "The Linux Kernel: A Different Perspective," we introduced the overall structure of the Linux kernel source tree. We spend the majority of this chapter examining the architecture-specific branch of the Linux kernel sources. <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec1.html#ch16list01">Listing 16-1</A> shows the contents of <TT>.../arch</TT> from a recent kernel snapshot. As we pointed out in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04.html#ch04">Chapter 4</A>, the <TT>.../arch</TT> subdirectory is the second largest in terms of size, and in a recent Linux release, the largest in terms of file count (excluding the <TT>.../include</TT> directory). Only the <TT>.../drivers</TT> subdirectory is larger in size.</P>
<P class=docText></P><A name=ch16list01></A>
<H5 id=title-IDA5MBWD class=docExampleTitle>Listing 16-1. Linux Kernel <TT>.../arch</TT> Directory Listing</H5>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD><PRE>[chris@pluto linux]$ <SPAN class=docEmphStrong>ls ./arch</SPAN>
alpha  cris   i386  m68k       parisc  s390  sparc    v850
arm    frv    ia64  m68knommu  ppc     sh    sparc64  x86_64
arm26  h8300  m32r  mips       ppc64   sh64  um       xtensa</PRE><BR></TD></TR></TBODY></TABLE></P>
<P class=docText><A name=iddle1961></A><A name=iddle2225></A>From this listing, you can see support for 24 separate architectures within the Linux kernel. We refer to each as an <SPAN class=docEmphasis>architecture branch</SPAN> to facilitate our discussions.</P>
<P class=docText>Each architecture branch has some common components. For example, each top-level architecture branch contains a <TT>Kconfig</TT> file. You will recall from <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04.html#ch04">Chapter 4</A> that <TT>Kconfig</TT> drives the kernel configuration utility. Of course, each top-level architecture branch also has a corresponding makefile. All the top-level architectures contain a <TT>kernel</TT> subdirectory because a number of kernel features are architecture dependent. All but two contain an <TT>mm</TT> subdirectory. This is where the architecture-dependent memory management code is found.</P>
<P class=docText>Many top-level architecture branches contain a <TT>boot</TT> subdirectory, which is used to build (through its own makefile) a specific bootable target for that architecture. Many also contain <TT>mach-*</TT> subdirectories. These are used to hold code for specific machines or hardware platforms. Another subdirectory that appears frequently in the architecture branch is <TT>configs</TT>. This subdirectory exists for many of the more popular architectures and contains default configurations for each supported hardware platform.</P>
<P class=docText>Throughout the rest of this chapter, we focus our discussion and examples on the PowerPC architecture. It is one of the most popular, with support for many processors and boards. <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec1.html#ch16list02">Listing 16-2</A> shows the contents of the <TT>configs</TT> directory for the <TT>.../arch/ppc</TT> PowerPC branch of a recent Linux kernel release.</P><A name=ch16list02></A>
<H5 id=title-IDA1PBWD class=docExampleTitle>Listing 16-2. PowerPC <TT>configs</TT> Directory Contents</H5>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD><PRE>[chris@pluto linux]$ <SPAN class=docEmphStrong>ls ./arch/ppc/configs/</SPAN>
ads8272_defconfig   IVMS8_defconfig        prpmc750_defconfig
apus_defconfig      katana_defconfig       prpmc800_defconfig
bamboo_defconfig    lite5200_defconfig     radstone_defconfig
bseip_defconfig     lopec_defconfig        redwood5_defconfig
bubinga_defconfig   luan_defconfig         redwood6_defconfig
chestnut_defconfig  mbx_defconfig          rpx8260_defconfig
common_defconfig    mpc834x_sys_defconfig  rpxcllf_defconfig
cpci405_defconfig   mpc8540_ads_defconfig  rpxlite_defconfig
cpci690_defconfig   mpc8548_cds_defconfig  sandpoint_defconfig
ebony_defconfig     mpc8555_cds_defconfig  spruce_defconfig
ep405_defconfig     mpc8560_ads_defconfig  stx_gp3_defconfig
est8260_defconfig   mpc86x_ads_defconfig   sycamore_defconfig
ev64260_defconfig   mpc885ads_defconfig    TQM823L_defconfig
ev64360_defconfig   mvme5100_defconfig     TQM8260_defconfig
FADS_defconfig      ocotea_defconfig       TQM850L_defconfig
gemini_defconfig    pmac_defconfig         TQM860L_defconfig
hdpu_defconfig      power3_defconfig       walnut_defconfig
ibmchrp_defconfig   pplus_defconfig</PRE><BR></TD></TR></TBODY></TABLE></P>
<P class=docText><A name=iddle1246></A><A name=iddle1576></A><A name=iddle2201></A><A name=iddle2206></A><A name=iddle2207></A>Each one of these entries in the <TT>configs</TT> directory of the PowerPC architecture branch represents a specific port to a hardware platform. For example, <TT>walnut_defconfig</TT> defines the default configuration for the AMCC Walnut PPC405 evaluation platform. The <TT>mpc8540_ads_defconfig</TT> file represents the default configuration for the Freescale MPC8540 ADS evaluation board. As described in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04.html#ch04">Chapter 4</A>, to build a kernel for these reference platforms you first configure your kernel source tree with these configuration defaults, as follows:</P>
<DIV class=docText><PRE>$ <SPAN class=docEmphStrong>make ARCH=ppc CROSS_COMPILE=ppc_85xx- mpc8540_ads_defconfig</SPAN></PRE></DIV><BR>
<P class=docText>This invocation of <TT>make</TT> (from the top-level Linux directory) configures the kernel source tree with a default configuration for the Freescale MPC8540 ADS evaluation board.</P>
<P class=docText>One aspect of the Linux kernel source tree that has not achieved significant unification is the way in which each architecture handles platform-specific files. In the PowerPC branch, you find a <TT>platforms</TT> directory that contains platform-specific code. Looking through this directory, you will see many source files named after the respective hardware platform. There are also a few subdirectories under <TT>.../arch/ppc/platforms</TT> for specific PowerPC variants.</P>
<P class=docText>In contrast, the ARM branch contains a series of <TT>mach-*</TT> directories, each representing a specific hardware platform, while the MIPS branch has a set of subdirectories named for a specific platform.