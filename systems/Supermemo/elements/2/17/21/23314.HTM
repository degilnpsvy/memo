<H3 id=title-IDAN4YKH class=docSection1Title>16.4. Putting It All Together</H3>
<P class=docText>Now that we have a reference from which to proceed, we can create the necessary files and functions for our own custom board. We copy the Lite5200 platform files for our baseline and modify them for our custom PowerPC platform. We'll call our new platform <SPAN class=docEmphasis>PowerDNA</SPAN>. The steps we will perform for this custom port are as follows:</P><A name=ch16pro01></A>
<TABLE class=docText border=0>
<TBODY>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>1. </B></DIV></TD>
<TD>
<DIV class=docText>Add a new configuration option to <TT>...arch/ppc/Kconfig</TT>.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>2. </B></DIV></TD>
<TD>
<DIV class=docText>Copy <TT>lite5200.*</TT> to <TT>powerdna.*</TT> as a baseline.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>3. </B></DIV></TD>
<TD>
<DIV class=docText>Edit new <TT>powerdna.*</TT> files as appropriate for our platform.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>4. </B></DIV></TD>
<TD>
<DIV class=docText>Edit <TT>.../arch/ppc/Makefile</TT> to conditionally include <TT>powerdna.o.</TT><BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>5. </B></DIV></TD>
<TD>
<DIV class=docText>Compile, load, and debug!<BR><BR></DIV></TD></TR></TBODY></TABLE>
<P class=docText>You learned how to add a configuration option to Kconfig in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch04.html#ch04">Chapter 4</A>. The configuration option for our new PowerDNA port is detailed in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec4.html#ch16list11">Listing 16-11</A>.</P>
<P class=docText></P><A name=ch16list11></A>
<H5 id=title-IDAJBZKH class=docExampleTitle>Listing 16-11. Configuration Option for PowerDNA</H5>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD><PRE>config POWERDNA
       bool "United Electronics Industries PowerDNA"
       select PPC_MPC52xx
       help
         Support for the UEI PowerDNA board</PRE><BR></TD></TR></TBODY></TABLE></P>
<P class=docText><A name=iddle1865></A>This <TT>Kconfig</TT> entry is added just below the entry for LITE5200 because they are related.<SUP class=docFootnote><A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec4.html#ch16fn9">[9]</A></SUP> <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec4.html#ch16fig04">Figure 16-4</A> illustrates the results when the configuration utility is invoked.</P>
<BLOCKQUOTE>
<P class=docFootnote><SUP><A name=ch16fn9>[9]</A></SUP> To preserve space, we temporarily removed many machine types in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec4.html#ch16fig04">Figure 16-4</A> prior to LITE5200.</P></BLOCKQUOTE><A name=ch16fig04></A>
<P>
<CENTER>
<H5 class=docFigureTitle>Figure 16-4. Machine type option for PowerDNA</H5>
<P class=docText>
<DIV class=v1><A href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/images/16elp04_alt.jpg" target=_self>[View full size image]</A></DIV><IMG border=0 alt="" src="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/images/16elp04.jpg" width=500 height=319>
<P></P></CENTER>
<P></P><BR>
<P class=docText>Notice that when the user selects <TT>POWERDNA</TT>, two important actions are performed:</P><A name=ch16pro02></A>
<TABLE class=docText border=0>
<TBODY>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>1. </B></DIV></TD>
<TD>
<DIV class=docText>The <TT>CONFIG_PPC_MPC52xx</TT> configuration option is automatically selected. This is accomplished by the select keyword in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec4.html#ch16list11">Listing 16-11</A>.<BR><BR></DIV></TD></TR>
<TR>
<TD vAlign=top width=25>
<DIV class=docText><B>2. </B></DIV></TD>
<TD>
<DIV class=docText>A new configuration option, <TT>CONFIG_POWERDNA</TT>, is defined that will drive the configuration for our build.<BR><BR></DIV></TD></TR></TBODY></TABLE>
<P class=docText><A name=iddle1995></A>The next step is to copy the files closest to our platform as the basis of our new platform-initialization files. We have already decided that the Lite5200 platform fits the bill. Copy <TT>lite5200.c</TT> to <TT>powerdna.c</TT>, and <TT>lite5200.h</TT> to <TT>powerdna.h</TT>. The difficult part comes next. Using the hardware specifications, schematics, and any other data you have on the hardware platform, edit the new <TT>powerdna.*</TT> files as appropriate for your hardware. Get the code to compile, and then proceed to boot and debug your new kernel. There is no shortcut here, nor any substitute for experience. It is the hard work of porting, but now at least you know where to start. Many tips and techniques for kernel debugging are presented in <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch14.html#ch14">Chapter 14</A>, "Kernel Debugging Techniques."</P>
<P class=docText>To summarize our porting effort, <A class=docLink href="http://www.embeddedlinux.org.cn/EmbeddedLinuxPrimer/0136130550/ch16lev1sec4.html#ch16list12">Listing 16-12</A> details the files that have been added or modified to get Linux running on the PowerDNA board.</P><A name=ch16list12></A>
<H5 id=title-IDA4FZKH class=docExampleTitle>Listing 16-12. PowerDNA New or Modified Kernel Files</H5>
<P>
<TABLE cellSpacing=0 cellPadding=5 width="90%" border=1>
<TBODY>
<TR>
<TD><PRE>linux-2.6.14/arch/ppc/configs/powerdna_defconfig
linux-2.6.14/arch/ppc/Kconfig
linux-2.6.14/arch/ppc/platforms/Makefile
linux-2.6.14/arch/ppc/platforms/powerdna.c
linux-2.6.14/arch/ppc/platforms/powerdna.h
linux-2.6.14/drivers/net/fec_mpc52xx/fec.c
linux-2.6.14/drivers/net/fec_mpc52xx/fec.h
linux-2.6.14/drivers/net/fec_mpc52xx/fec_phy.h
linux-2.6.14/include/asm-ppc/mpc52xx.h</PRE><BR></TD></TR></TBODY></TABLE></P>
<P class=docText>The first file is the default configuration, which enables a quick kernel configuration based on defaults. It is enabled by invoking <TT>make</TT> as follows:</P>
<DIV class=docText><PRE>$ <SPAN class=docEmphStrong>make ARCH=ppc CROSS_COMPILE=&lt;cross-prefix&gt; powerdna_defconfig</SPAN></PRE></DIV><BR>
<P class=docText>We've already discussed the changes to the <TT>Kconfig</TT> file. Modification to the makefile is trivialthe purpose is to add support for the new kernel configuration based on <TT>CONFIG_POWERDNA</TT>. The change consists of adding a single line:</P>
<DIV class=docText><PRE>obj-$(CONFIG_POWERDNA)       += powerdna.o</PRE></DIV><BR>
<P class=docText>The heart of the changes come in the <TT>powerdna.[c|h]</TT> files and changes to the FEC (Fast Ethernet Controller) layer. There were minor differences between <TT>powerdna.c</TT> and <TT>lite5200.c</TT>, the file from which it was derived. Two primary issues required changes. First, PCI was disabled because it is not used in the PowerDNA design. This required some minor tweaking. Second, the PowerDNA design incorporates an unmanaged Ethernet physical-layer chip that required slight changes in the hardware setup and the FEC layer. This work constituted the majority of the porting effort. The patch file consists of 1120 lines, but the bulk of those lines are the default configuration, which is only a convenience for the developer and is not strictly necessary. Removing that, the patch reduces to 411 lines.</P><A name=ch16lev2sec8></A>
<H4 id=title-IDAXHZKH class=docSection2Title>16.4.1. Other Architectures</H4>
<P class=docText>We examined the details of how a given platform fits into the kernel, and the facilities that exist for porting to a new board. Our reference for this chapter and the discussions within came from the PowerPC architecture branch of the kernel. The other architectures differ in many detailed aspects of how various hardware platforms are incorporated, but the concepts are similar. When you have learned how to navigate a single architecture, you have the knowledge and tools to learn the details of the other architectures.