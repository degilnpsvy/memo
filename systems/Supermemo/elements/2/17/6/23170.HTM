<H3 id=-100000 class=docSection1Title>High-Speed Interconnects</H3>
<P class=docText><A name="interconnecting technologies"></A>High-speed interconnecting technologies such as InfiniBand, RapidIO, Hyper-Transport, and 10 Gigabit Ethernet are not common in the PC or low-end embedded environments. You are more likely to find them on clusters, blade servers, gaming systems, switches, or high-speed routers. Networking technologies such as Fibre Channel and <SPAN class=docEmphasis>Internet SCSI</SPAN><A name="found in"></A> (iSCSI) can be found in enterprise environments served by <SPAN class=docEmphasis>storage-area networks</SPAN> (SANs).</P>
<P class=docText><A name="subsystems for"></A>Let's peek at the driver subsystems for some of these technologies.</P><A name=ch20lev2sec2></A>
<H4 id=title-ID0ENSAO class=docSection2Title>InfiniBand</H4>
<P class=docText><A name=iddle1651></A><A name=iddle1847></A><A name=iddle2052></A><A name=iddle2108></A><A name=iddle2214></A><A name=iddle2215></A><A name=iddle2330></A><A name=iddle2360></A><A name=iddle2496></A><A name=iddle2883></A><A name=iddle3074></A><A name=iddle3715></A><A name=iddle3720></A><A name=iddle3792></A><A name="serial bus"></A>InfiniBand is a high-speed serial bus standard originally intended to replace PCI. PCI Express, however, has become the accepted future of system buses. Today, InfiniBand technology is commonly used in blade server designs to provide a high-performance storage and networking fabric. InfiniBand supports <SPAN class=docEmphasis>Remote DMA</SPAN><A name="computer system"></A> (RDMA), which allows data to be DMA-ed from the memory of one computer system to another.</P>
<P class=docText><A name="includes core"></A>The Linux InfiniBand subsystem includes core support for InfiniBand, device drivers for host channel adapters, and an implementation of IP over InfiniBand. Look inside <SPAN class=docEmphasis>drivers/infiniband/</SPAN> for the Linux InfiniBand subsystem and at <SPAN class=docEmphasis>Documentation/infiniband/*</SPAN> for related documentation.</P><A name=ch20lev2sec3></A>
<H4 id=title-ID0E4WAO class=docSection2Title>RapidIO</H4>
<P class=docText><A name="used for"></A>RapidIO is another high-speed serial bus technology, which is used for connecting boards via a back plane. It supports speeds of the order of 10Gbps. An example processor that supports RapidIO is the power-based MPC8540 from Freescale, targeted at embedded devices such as network routers and switches.</P>
<P class=docText><A name="a core"></A>The Linux RapidIO subsystem provides a core set of routines that can be used to drive devices on the RapidIO bus. There are two ways to communicate over a -RapidIO interconnect:</P>
<DIV style="FONT-WEIGHT: bold">
<OL class=docList type=1>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList>Short, out-of-band messages using <SPAN class=docEmphasis>doorbells.</SPAN> Doorbell services provided by the RapidIO core are <TT>rio_request_inb_dbell()</TT>, <TT>rio_release_inb_dbell()</TT>, <TT>rio_request_outb_dbell()</TT>, and <TT>rio_release_outb_dbell()</TT>.</P></DIV></LI>
<LI>
<DIV style="FONT-WEIGHT: normal">
<P class=docList>High-bandwidth data delivery using <SPAN class=docEmphasis>mailboxes.</SPAN> Mailbox services provided by the RapidIO core are <TT>rio_request_inb_mbox()</TT>, <TT>rio_release_inb_mbox()</TT>, <TT>rio_request_outb_mbox()</TT>, and <TT>rio_release_outb_mbox()</TT>.</P></DIV></LI></OL></DIV>
<P class=docText>Take a look inside <SPAN class=docEmphasis>drivers/rapidio/</SPAN> for the sources.</P><A name=ch20lev2sec4></A>
<H4 id=title-ID0ESYAO class=docSection2Title>Fibre Channel</H4>
<P class=docText><SPAN class=docEmphasis>Fibre Channel</SPAN><A name="talk with"></A> is a modern high-speed serial bus protocol used to talk with storage systems. Fibre Channel interface cards have fiber-optic ports to talk to storage devices on SANs. Fibre Channel is compatible with SCSI, so a Fibre Channel device driver is essentially a SCSI driver with extras to handle fiber channels.</P>
<P class=docText><A name=iddle2216></A><A name=iddle2495></A><A name=iddle3716></A><A name="device drivers"></A>Linux supports a Fibre Channel core and device drivers to handle Fibre Channel hardware. Look inside <SPAN class=docEmphasis>drivers/fc4/</SPAN><A name="for the"></A> for the sources.</P><A name=ch20lev2sec5></A>
<H4 id=title-ID0EE1AO class=docSection2Title>iSCSI</H4>
<P class=docText><SPAN class=docEmphasis>iSCSI</SPAN><A name="SAN technology"></A> is another SAN technology. It allows the transport of SCSI packets over TCP/IP networks. With iSCSI, a remote block device appears to your system as local storage. The remote system owning the storage is called an <SPAN class=docEmphasis>iSCSI target</SPAN><A name="the storage"></A>, and local systems using the storage are called <SPAN class=docEmphasis>iSCSI initiators</SPAN>.</P>
<P class=docText><A name="via a"></A>Linux supports iSCSI via a kernel driver, <SPAN class=docEmphasis>drivers/scsi/iscsi_tcp.c</SPAN>, and a user-space daemon called <SPAN class=docEmphasis>iscsid.</SPAN> The home page of the Linux-iSCSI project is at <A class=docLink href="http://linux-iscsi.sourceforge.net/" target=_blank>http://linux-iscsi.sourceforge.net</A>.