<P class=MsoNormal style="BACKGROUND: #000044; MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13.5pt; FONT-FAMILY: 'Courier New'; COLOR: #ddddff"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_BlitSurface( gHelloWorld, NULL, gScreenSurface, NULL );</SPAN></P>
<P class=MsoNormal style="BACKGROUND: #000022; MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13.5pt; FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa">In our main function we initialize SDL and load the image. If that succeeded we blit the loaded surface onto the screen surface using SDL_BlitSurface.<BR><BR>What blitting does is take a source surface and stamps a copy of it onto the destination surface. The first argument of SDL_BlitSurface is the source image. The third argument is the destination. We'll worry about the 2nd and 4th arguments in future tutorials.<BR><BR>Now if this was the only code for drawing we had, we still wouldn't see the image we loaded on the screen. There's one more step.</SPAN></P>
<P class=MsoNormal style="BACKGROUND: #000044; MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13.5pt; FONT-FAMILY: 'Courier New'; COLOR: #ddddff"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>//Update the surface</SPAN></P>
<P class=MsoNormal style="BACKGROUND: #000044; MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13.5pt; FONT-FAMILY: 'Courier New'; COLOR: #ddddff"><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_UpdateWindowSurface( gWindow );</SPAN></P>
<P class=MsoNormal style="BACKGROUND: #000022; MARGIN: 0cm 0cm 0pt"><SPAN lang=EN-US style="FONT-SIZE: 13.5pt; FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa">After drawing everything on the screen that we want to show for this frame we have to update the screen using SDL_UpdateWindowSurface. See when you draw to the screen, you are not typically drawing to the image on the screen you see. By default, most rendering systems out there are double buffered. These two buffers are the front and back buffer.<BR></SPAN>