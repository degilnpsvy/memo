<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>cpupri_find</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-yield-to.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Delaying, scheduling, and timer routines</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-cpupri-set.html">Next</A></TD></TR></TBODY></TABLE>
<HR>

<DIV class=refentry><A name=API-cpupri-find></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>cpupri_find &#8212; find the best (lowest-pri) CPU in the system </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>int <B class=fsfunc>cpupri_find </B>(</CODE></TD>
<TD>struct cpupri * <VAR class=pdparam>cp</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>struct task_struct * <VAR class=pdparam>p</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>struct cpumask * <VAR class=pdparam>lowest_mask</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp41366076></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>cp</CODE></EM></SPAN> 
<DD>
<P>The cpupri context </P>
<DT><SPAN class=term><EM class=parameter><CODE>p</CODE></EM></SPAN> 
<DD>
<P>The task </P>
<DT><SPAN class=term><EM class=parameter><CODE>lowest_mask</CODE></EM></SPAN> 
<DD>
<P>A mask to fill in with selected CPUs (or NULL) </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp41369612></A>
<H2>Note</H2>
<P>This function returns the recommended CPUs as calculated during the current invocation. By the time the call returns, the CPUs may have in fact changed priorities any number of times. While not ideal, it is not an issue of correctness since the normal rebalancer logic will correct any discrepancies created by racing against the uncertainty of the current priority configuration. </P></DIV>
<DIV class=refsect1><A name=idp41370596></A>
<H2>Return</H2>
<P>(int)bool - CPUs were found </P></DIV></DIV>