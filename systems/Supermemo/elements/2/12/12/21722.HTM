<H1><A name=SEDAWK></A>Appendix C. A Sed and Awk Micro-Primer</H1>
<P><A name=SEDREF></A></P>
<P>This is a very brief introduction to the <B class=COMMAND>sed</B> and <B class=COMMAND>awk</B> text processing utilities. We will deal with only a few basic commands here, but that will suffice for understanding simple sed and awk constructs within shell scripts.</P>
<P><B class=COMMAND>sed</B>: a non-interactive text file editor</P>
<P><B class=COMMAND>awk</B>: a field-oriented pattern processing language with a <B class=COMMAND>C</B>-style syntax</P>
<P>For all their differences, the two utilities share a similar invocation syntax, use <A href="http://tldp.org/LDP/abs/html/abs-guide.html#REGEXREF">regular expressions </A>, read input by default from <TT class=FILENAME>stdin</TT>, and output to <TT class=FILENAME>stdout</TT>. These are well-behaved UNIX tools, and they work together well. The output from one can be piped to the other, and their combined capabilities give shell scripts some of the power of <A href="http://tldp.org/LDP/abs/html/abs-guide.html#PERLREF">Perl</A>.</P>
<DIV class=NOTE>
<P></P>
<TABLE class=NOTE border=0 width="100%">
<TBODY>
<TR>
<TD vAlign=top width=25 align=middle><IMG hspace=5 alt=Note src="http://tldp.org/LDP/abs/images/note.gif"></TD>
<TD vAlign=top align=left>
<P>One important difference between the utilities is that while shell scripts can easily pass arguments to sed, it is more cumbersome for awk (see <A href="http://tldp.org/LDP/abs/html/abs-guide.html#COLTOTALER">Example 36-5</A> and <A href="http://tldp.org/LDP/abs/html/abs-guide.html#COLTOTALER2">Example 28-2</A>). </P></TD></TR></TBODY></TABLE></DIV>