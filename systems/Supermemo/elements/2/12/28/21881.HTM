<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>mod_timer_pinned</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-mod-timer.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Delaying, scheduling, and timer routines</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-add-timer.html">Next</A></TD></TR></TBODY></TABLE>
<HR>

<DIV class=refentry><A name=API-mod-timer-pinned></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>mod_timer_pinned &#8212; modify a timer's timeout </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>int <B class=fsfunc>mod_timer_pinned </B>(</CODE></TD>
<TD>struct timer_list * <VAR class=pdparam>timer</VAR>, </TD></TR>
<TR>
<TD>&nbsp;</TD>
<TD>unsigned long <VAR class=pdparam>expires</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp41604260></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>timer</CODE></EM></SPAN> 
<DD>
<P>the timer to be modified </P>
<DT><SPAN class=term><EM class=parameter><CODE>expires</CODE></EM></SPAN> 
<DD>
<P>new timeout in jiffies </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp41606820></A>
<H2>Description</H2>
<P><CODE class=function>mod_timer_pinned</CODE> is a way to update the expire field of an active timer (if the timer is inactive it will be activated) and to ensure that the timer is scheduled on the current CPU. </P>
<P>Note that this does not prevent the timer from being migrated when the current CPU goes offline. If this is a problem for you, use CPU-hotplug notifiers to handle it correctly, for example, cancelling the timer when the corresponding CPU goes offline. </P>
<P>mod_timer_pinned(timer, expires) is equivalent to: </P>
<P>del_timer(timer); timer-&gt;expires = expires; add_timer(timer); </P></DIV></DIV>