<DIV class=navheader>
<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle>Linux Device Drivers</TH></TR>
<TR>
<TD width="20%" align=left>&nbsp;</TD>
<TH width="60%" align=middle>&nbsp;</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/Basics.html">Next</A></TD></TR></TBODY></TABLE>
<HR>
</DIV>
<DIV class=book>
<DIV class=titlepage>
<DIV>
<DIV>
<H1 class=title><A name=LinuxDriversAPI></A>Linux Device Drivers</H1></DIV>
<DIV>
<DIV class=legalnotice><A name=idp39723804></A>
<P>This documentation is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. </P>
<P>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. </P>
<P>You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA </P>
<P>For more details see the file COPYING in the source distribution of Linux. </P></DIV></DIV></DIV>
<HR>
</DIV>
<DIV class=toc>
<P><B>Table of Contents</B></P>
<DL class=toc>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/Basics.html">1. Driver Basics</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/Basics.html#idp40890844">Driver Entry and Exit points</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s02.html">Atomic and pointer manipulation</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s03.html">Delaying, scheduling, and timer routines</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s04.html">Wait queues and Wake events</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s05.html">High-resolution timers</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s06.html">Workqueues and Kevents</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s07.html">Internal Functions</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s08.html">Kernel objects manipulation</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s09.html">Kernel utility functions</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch01s10.html">Device Resource Management</A></SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/devdrivers.html">2. Device drivers infrastructure</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/devdrivers.html#idp43584244">The Basic Device Driver-Model Structures </A></SPAN>
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s02.html">Device Drivers Base</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s03.html">Device Drivers DMA Management</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s04.html">Device Drivers Power Management</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s05.html">Device Drivers ACPI Support</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s06.html">Device drivers PnP support</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch02s07.html">Userspace IO devices</A></SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/parportdev.html">3. Parallel Port Devices</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-yield.html"><SPAN class=phrase>parport_yield</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; relinquish a parallel port temporarily </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-yield-blocking.html"><SPAN class=phrase>parport_yield_blocking</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; relinquish a parallel port temporarily </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-wait-event.html"><SPAN class=phrase>parport_wait_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; wait for an event on a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-wait-peripheral.html"><SPAN class=phrase>parport_wait_peripheral</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; wait for status lines to change in 35ms </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-negotiate.html"><SPAN class=phrase>parport_negotiate</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; negotiate an IEEE 1284 mode </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-write.html"><SPAN class=phrase>parport_write</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; write a block of data to a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-read.html"><SPAN class=phrase>parport_read</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; read a block of data from a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-set-timeout.html"><SPAN class=phrase>parport_set_timeout</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; set the inactivity timeout for a device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-register-driver.html"><SPAN class=phrase>parport_register_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a parallel port device driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-unregister-driver.html"><SPAN class=phrase>parport_unregister_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; deregister a parallel port device driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-get-port.html"><SPAN class=phrase>parport_get_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; increment a port's reference count </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-put-port.html"><SPAN class=phrase>parport_put_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; decrement a port's reference count </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-register-port.html"><SPAN class=phrase>parport_register_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-announce-port.html"><SPAN class=phrase>parport_announce_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; tell device drivers about a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-remove-port.html"><SPAN class=phrase>parport_remove_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; deregister a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-register-device.html"><SPAN class=phrase>parport_register_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a device on a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-unregister-device.html"><SPAN class=phrase>parport_unregister_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; deregister a device on a parallel port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-find-number.html"><SPAN class=phrase>parport_find_number</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; find a parallel port by number </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-find-base.html"><SPAN class=phrase>parport_find_base</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; find a parallel port by base address </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-claim.html"><SPAN class=phrase>parport_claim</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; claim access to a parallel port device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-claim-or-block.html"><SPAN class=phrase>parport_claim_or_block</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; claim access to a parallel port device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-release.html"><SPAN class=phrase>parport_release</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; give up access to a parallel port device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-open.html"><SPAN class=phrase>parport_open</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; find a device by canonical device number </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-parport-close.html"><SPAN class=phrase>parport_close</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; close a device opened with <CODE class=function>parport_open</CODE> </SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/message_devices.html">4. Message-based devices</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/message_devices.html#idp45630548">Fusion message devices</A></SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/snddev.html">5. Sound Devices</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-printk.html"><SPAN class=phrase>snd_printk</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; printk wrapper </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-printd.html"><SPAN class=phrase>snd_printd</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; debug printk </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-BUG.html"><SPAN class=phrase>snd_BUG</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; give a BUG warning message and stack trace </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-printd-ratelimit.html"><SPAN class=phrase>snd_printd_ratelimit</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-BUG-ON.html"><SPAN class=phrase>snd_BUG_ON</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; debugging check macro </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-printdd.html"><SPAN class=phrase>snd_printdd</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; debug printk </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-register-sound-special-device.html"><SPAN class=phrase>register_sound_special_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a special sound node </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-register-sound-mixer.html"><SPAN class=phrase>register_sound_mixer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a mixer device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-register-sound-midi.html"><SPAN class=phrase>register_sound_midi</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a midi device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-register-sound-dsp.html"><SPAN class=phrase>register_sound_dsp</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a DSP device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-unregister-sound-special.html"><SPAN class=phrase>unregister_sound_special</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister a special sound device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-unregister-sound-mixer.html"><SPAN class=phrase>unregister_sound_mixer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister a mixer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-unregister-sound-midi.html"><SPAN class=phrase>unregister_sound_midi</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister a midi device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-unregister-sound-dsp.html"><SPAN class=phrase>unregister_sound_dsp</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister a DSP device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-linked.html"><SPAN class=phrase>snd_pcm_stream_linked</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Check whether the substream is linked with others </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-lock-irqsave.html"><SPAN class=phrase>snd_pcm_stream_lock_irqsave</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Lock the PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-group-for-each-entry.html"><SPAN class=phrase>snd_pcm_group_for_each_entry</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; iterate over the linked substreams </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-running.html"><SPAN class=phrase>snd_pcm_running</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Check whether the substream is in a running state </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-bytes-to-samples.html"><SPAN class=phrase>bytes_to_samples</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unit conversion of the size from bytes to samples </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-bytes-to-frames.html"><SPAN class=phrase>bytes_to_frames</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unit conversion of the size from bytes to frames </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-samples-to-bytes.html"><SPAN class=phrase>samples_to_bytes</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unit conversion of the size from samples to bytes </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-frames-to-bytes.html"><SPAN class=phrase>frames_to_bytes</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unit conversion of the size from frames to bytes </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-frame-aligned.html"><SPAN class=phrase>frame_aligned</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Check whether the byte size is aligned to frames </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-buffer-bytes.html"><SPAN class=phrase>snd_pcm_lib_buffer_bytes</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the buffer size of the current PCM in bytes </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-period-bytes.html"><SPAN class=phrase>snd_pcm_lib_period_bytes</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the period size of the current PCM in bytes </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-playback-avail.html"><SPAN class=phrase>snd_pcm_playback_avail</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the available (writable) space for playback </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-capture-avail.html"><SPAN class=phrase>snd_pcm_capture_avail</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the available (readable) space for capture </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-playback-hw-avail.html"><SPAN class=phrase>snd_pcm_playback_hw_avail</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the queued space for playback </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-capture-hw-avail.html"><SPAN class=phrase>snd_pcm_capture_hw_avail</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the free space for capture </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-playback-ready.html"><SPAN class=phrase>snd_pcm_playback_ready</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; check whether the playback buffer is available </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-capture-ready.html"><SPAN class=phrase>snd_pcm_capture_ready</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; check whether the capture buffer is available </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-playback-data.html"><SPAN class=phrase>snd_pcm_playback_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; check whether any data exists on the playback buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-playback-empty.html"><SPAN class=phrase>snd_pcm_playback_empty</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; check whether the playback buffer is empty </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-capture-empty.html"><SPAN class=phrase>snd_pcm_capture_empty</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; check whether the capture buffer is empty </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-trigger-done.html"><SPAN class=phrase>snd_pcm_trigger_done</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Mark the master substream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-params-channels.html"><SPAN class=phrase>params_channels</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the number of channels from the hw params </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-params-rate.html"><SPAN class=phrase>params_rate</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the sample rate from the hw params </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-params-period-size.html"><SPAN class=phrase>params_period_size</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the period size (in frames) from the hw params </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-params-periods.html"><SPAN class=phrase>params_periods</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the number of periods from the hw params </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-params-buffer-size.html"><SPAN class=phrase>params_buffer_size</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the buffer size (in frames) from the hw params </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-params-buffer-bytes.html"><SPAN class=phrase>params_buffer_bytes</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the buffer size (in bytes) from the hw params </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-format-cpu-endian.html"><SPAN class=phrase>snd_pcm_format_cpu_endian</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Check the PCM format is CPU-endian </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-set-runtime-buffer.html"><SPAN class=phrase>snd_pcm_set_runtime_buffer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Set the PCM runtime buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-gettime.html"><SPAN class=phrase>snd_pcm_gettime</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Fill the timespec depending on the timestamp mode </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-alloc-vmalloc-buffer.html"><SPAN class=phrase>snd_pcm_lib_alloc_vmalloc_buffer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate virtual DMA buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-alloc-vmalloc-32-buffer.html"><SPAN class=phrase>snd_pcm_lib_alloc_vmalloc_32_buffer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate 32-bit-addressable buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-sgbuf-get-addr.html"><SPAN class=phrase>snd_pcm_sgbuf_get_addr</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the DMA address at the corresponding offset </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-sgbuf-get-ptr.html"><SPAN class=phrase>snd_pcm_sgbuf_get_ptr</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the virtual address at the corresponding offset </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-sgbuf-get-chunk-size.html"><SPAN class=phrase>snd_pcm_sgbuf_get_chunk_size</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Compute the max size that fits within the contig. page from the given size </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-mmap-data-open.html"><SPAN class=phrase>snd_pcm_mmap_data_open</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; increase the mmap counter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-mmap-data-close.html"><SPAN class=phrase>snd_pcm_mmap_data_close</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; decrease the mmap counter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-limit-isa-dma-size.html"><SPAN class=phrase>snd_pcm_limit_isa_dma_size</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get the max size fitting with ISA DMA transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-str.html"><SPAN class=phrase>snd_pcm_stream_str</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get a string naming the direction of a stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-chmap-substream.html"><SPAN class=phrase>snd_pcm_chmap_substream</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; get the PCM substream assigned to the given chmap info </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-pcm-format-to-bits.html"><SPAN class=phrase>pcm_format_to_bits</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Strong-typed conversion of pcm_format to bitwise </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-format-name.html"><SPAN class=phrase>snd_pcm_format_name</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Return a name string for the given PCM format </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-new-stream.html"><SPAN class=phrase>snd_pcm_new_stream</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create a new PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-new.html"><SPAN class=phrase>snd_pcm_new</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create a new PCM instance </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-new-internal.html"><SPAN class=phrase>snd_pcm_new_internal</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create a new internal PCM instance </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-notify.html"><SPAN class=phrase>snd_pcm_notify</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Add/remove the notify list </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-device-new.html"><SPAN class=phrase>snd_device_new</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create an ALSA device component </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-device-free.html"><SPAN class=phrase>snd_device_free</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the device from the card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-device-register.html"><SPAN class=phrase>snd_device_register</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register the device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-iprintf.html"><SPAN class=phrase>snd_iprintf</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; printf on the procfs buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-info-get-line.html"><SPAN class=phrase>snd_info_get_line</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; read one line from the procfs buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-info-get-str.html"><SPAN class=phrase>snd_info_get_str</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; parse a string token </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-info-create-module-entry.html"><SPAN class=phrase>snd_info_create_module_entry</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create an info entry for the given module </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-info-create-card-entry.html"><SPAN class=phrase>snd_info_create_card_entry</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create an info entry for the given card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-proc-new.html"><SPAN class=phrase>snd_card_proc_new</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create an info entry for the given card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-info-free-entry.html"><SPAN class=phrase>snd_info_free_entry</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the info entry </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-info-register.html"><SPAN class=phrase>snd_info_register</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register the info entry </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-receive.html"><SPAN class=phrase>snd_rawmidi_receive</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; receive the input data from the device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-transmit-empty.html"><SPAN class=phrase>snd_rawmidi_transmit_empty</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; check whether the output buffer is empty </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-transmit-peek.html"><SPAN class=phrase>snd_rawmidi_transmit_peek</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; copy data from the internal buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-transmit-ack.html"><SPAN class=phrase>snd_rawmidi_transmit_ack</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; acknowledge the transmission </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-transmit.html"><SPAN class=phrase>snd_rawmidi_transmit</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; copy from the buffer to the device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-new.html"><SPAN class=phrase>snd_rawmidi_new</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create a rawmidi instance </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-rawmidi-set-ops.html"><SPAN class=phrase>snd_rawmidi_set_ops</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; set the rawmidi operators </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-request-card.html"><SPAN class=phrase>snd_request_card</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; try to load the card module </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-lookup-minor-data.html"><SPAN class=phrase>snd_lookup_minor_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; get user data of a registered device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-register-device.html"><SPAN class=phrase>snd_register_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Register the ALSA device file for the card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-unregister-device.html"><SPAN class=phrase>snd_unregister_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister the device on the given card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-copy-to-user-fromio.html"><SPAN class=phrase>copy_to_user_fromio</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; copy data from mmio-space to user-space </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-copy-from-user-toio.html"><SPAN class=phrase>copy_from_user_toio</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; copy data from user-space to mmio-space </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-preallocate-free-for-all.html"><SPAN class=phrase>snd_pcm_lib_preallocate_free_for_all</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release all pre-allocated buffers on the pcm </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-preallocate-pages.html"><SPAN class=phrase>snd_pcm_lib_preallocate_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; pre-allocation for the given DMA type </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-preallocate-pages-for-all.html"><SPAN class=phrase>snd_pcm_lib_preallocate_pages_for_all</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; pre-allocation for continuous memory type (all substreams) </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-sgbuf-ops-page.html"><SPAN class=phrase>snd_pcm_sgbuf_ops_page</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; get the page struct at the given offset </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-malloc-pages.html"><SPAN class=phrase>snd_pcm_lib_malloc_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate the DMA buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-free-pages.html"><SPAN class=phrase>snd_pcm_lib_free_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the allocated DMA buffer. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-free-vmalloc-buffer.html"><SPAN class=phrase>snd_pcm_lib_free_vmalloc_buffer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; free vmalloc buffer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-get-vmalloc-page.html"><SPAN class=phrase>snd_pcm_lib_get_vmalloc_page</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; map vmalloc buffer offset to page struct </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-device-initialize.html"><SPAN class=phrase>snd_device_initialize</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Initialize struct device for sound devices </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-new.html"><SPAN class=phrase>snd_card_new</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create and initialize a soundcard structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-disconnect.html"><SPAN class=phrase>snd_card_disconnect</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; disconnect all APIs from the file-operations (user space) </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-free-when-closed.html"><SPAN class=phrase>snd_card_free_when_closed</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Disconnect the card, free it later eventually </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-free.html"><SPAN class=phrase>snd_card_free</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; frees given soundcard structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-set-id.html"><SPAN class=phrase>snd_card_set_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; set card identification name </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-add-dev-attr.html"><SPAN class=phrase>snd_card_add_dev_attr</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Append a new sysfs attribute group to card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-register.html"><SPAN class=phrase>snd_card_register</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register the soundcard </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-component-add.html"><SPAN class=phrase>snd_component_add</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add a component string </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-file-add.html"><SPAN class=phrase>snd_card_file_add</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add the file to the file list of the card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-card-file-remove.html"><SPAN class=phrase>snd_card_file_remove</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; remove the file from the file list </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-power-wait.html"><SPAN class=phrase>snd_power_wait</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; wait until the power-state is changed. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-dma-program.html"><SPAN class=phrase>snd_dma_program</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; program an ISA DMA transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-dma-disable.html"><SPAN class=phrase>snd_dma_disable</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; stop the ISA DMA transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-dma-pointer.html"><SPAN class=phrase>snd_dma_pointer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return the current pointer to DMA transfer buffer in bytes </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-notify.html"><SPAN class=phrase>snd_ctl_notify</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Send notification to user-space for a control change </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-new1.html"><SPAN class=phrase>snd_ctl_new1</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create a control instance from the template </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-free-one.html"><SPAN class=phrase>snd_ctl_free_one</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the control instance </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-add.html"><SPAN class=phrase>snd_ctl_add</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add the control instance to the card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-replace.html"><SPAN class=phrase>snd_ctl_replace</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; replace the control instance of the card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-remove.html"><SPAN class=phrase>snd_ctl_remove</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; remove the control from the card and release it </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-remove-id.html"><SPAN class=phrase>snd_ctl_remove_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; remove the control of the given id and release it </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-activate-id.html"><SPAN class=phrase>snd_ctl_activate_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; activate/inactivate the control of the given id </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-rename-id.html"><SPAN class=phrase>snd_ctl_rename_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; replace the id of a control on the card </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-find-numid.html"><SPAN class=phrase>snd_ctl_find_numid</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; find the control instance with the given number-id </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-find-id.html"><SPAN class=phrase>snd_ctl_find_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; find the control instance with the given id </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-register-ioctl.html"><SPAN class=phrase>snd_ctl_register_ioctl</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register the device-specific control-ioctls </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-register-ioctl-compat.html"><SPAN class=phrase>snd_ctl_register_ioctl_compat</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register the device-specific 32bit compat control-ioctls </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-unregister-ioctl.html"><SPAN class=phrase>snd_ctl_unregister_ioctl</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; de-register the device-specific control-ioctls </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-unregister-ioctl-compat.html"><SPAN class=phrase>snd_ctl_unregister_ioctl_compat</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; de-register the device-specific compat 32bit control-ioctls </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-boolean-mono-info.html"><SPAN class=phrase>snd_ctl_boolean_mono_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Helper function for a standard boolean info callback with a mono channel </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-boolean-stereo-info.html"><SPAN class=phrase>snd_ctl_boolean_stereo_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Helper function for a standard boolean info callback with stereo two channels </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-ctl-enum-info.html"><SPAN class=phrase>snd_ctl_enum_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; fills the info structure for an enumerated control </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-set-ops.html"><SPAN class=phrase>snd_pcm_set_ops</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; set the PCM operators </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-set-sync.html"><SPAN class=phrase>snd_pcm_set_sync</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; set the PCM sync id </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-interval-refine.html"><SPAN class=phrase>snd_interval_refine</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; refine the interval value of configurator </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-interval-ratnum.html"><SPAN class=phrase>snd_interval_ratnum</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; refine the interval value </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-interval-list.html"><SPAN class=phrase>snd_interval_list</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; refine the interval value from the list </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-interval-ranges.html"><SPAN class=phrase>snd_interval_ranges</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; refine the interval value from the list of ranges </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-rule-add.html"><SPAN class=phrase>snd_pcm_hw_rule_add</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add the hw-constraint rule </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-mask64.html"><SPAN class=phrase>snd_pcm_hw_constraint_mask64</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply the given bitmap mask constraint </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-integer.html"><SPAN class=phrase>snd_pcm_hw_constraint_integer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply an integer constraint to an interval </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-minmax.html"><SPAN class=phrase>snd_pcm_hw_constraint_minmax</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply a min/max range constraint to an interval </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-list.html"><SPAN class=phrase>snd_pcm_hw_constraint_list</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply a list of constraints to a parameter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-ranges.html"><SPAN class=phrase>snd_pcm_hw_constraint_ranges</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply list of range constraints to a parameter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-ratnums.html"><SPAN class=phrase>snd_pcm_hw_constraint_ratnums</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply ratnums constraint to a parameter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-ratdens.html"><SPAN class=phrase>snd_pcm_hw_constraint_ratdens</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; apply ratdens constraint to a parameter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-msbits.html"><SPAN class=phrase>snd_pcm_hw_constraint_msbits</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add a hw constraint msbits rule </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-step.html"><SPAN class=phrase>snd_pcm_hw_constraint_step</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add a hw constraint step rule </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-constraint-pow2.html"><SPAN class=phrase>snd_pcm_hw_constraint_pow2</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add a hw constraint power-of-2 rule </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-rule-noresample.html"><SPAN class=phrase>snd_pcm_hw_rule_noresample</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; add a rule to allow disabling hw resampling </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-param-value.html"><SPAN class=phrase>snd_pcm_hw_param_value</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return <EM class=parameter><CODE>params</CODE></EM> field <EM class=parameter><CODE>var</CODE></EM> value </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-param-first.html"><SPAN class=phrase>snd_pcm_hw_param_first</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; refine config space and return minimum value </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-hw-param-last.html"><SPAN class=phrase>snd_pcm_hw_param_last</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; refine config space and return maximum value </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-ioctl.html"><SPAN class=phrase>snd_pcm_lib_ioctl</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; a generic PCM ioctl callback </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-period-elapsed.html"><SPAN class=phrase>snd_pcm_period_elapsed</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; update the pcm status for the next period </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-add-chmap-ctls.html"><SPAN class=phrase>snd_pcm_add_chmap_ctls</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create channel-mapping control elements </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-hwdep-new.html"><SPAN class=phrase>snd_hwdep_new</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; create a new hwdep instance </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-lock.html"><SPAN class=phrase>snd_pcm_stream_lock</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Lock the PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-unlock.html"><SPAN class=phrase>snd_pcm_stream_unlock</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unlock the PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-lock-irq.html"><SPAN class=phrase>snd_pcm_stream_lock_irq</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Lock the PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-unlock-irq.html"><SPAN class=phrase>snd_pcm_stream_unlock_irq</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unlock the PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stream-unlock-irqrestore.html"><SPAN class=phrase>snd_pcm_stream_unlock_irqrestore</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unlock the PCM stream </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stop.html"><SPAN class=phrase>snd_pcm_stop</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; try to stop all running streams in the substream group </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-stop-xrun.html"><SPAN class=phrase>snd_pcm_stop_xrun</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; stop the running streams as XRUN </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-suspend.html"><SPAN class=phrase>snd_pcm_suspend</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; trigger SUSPEND to all linked streams </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-suspend-all.html"><SPAN class=phrase>snd_pcm_suspend_all</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; trigger SUSPEND to all substreams in the given pcm </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-default-mmap.html"><SPAN class=phrase>snd_pcm_lib_default_mmap</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Default PCM data mmap function </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-pcm-lib-mmap-iomem.html"><SPAN class=phrase>snd_pcm_lib_mmap_iomem</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Default PCM data mmap function for I/O mem </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-malloc-pages.html"><SPAN class=phrase>snd_malloc_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate pages with the given size </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-free-pages.html"><SPAN class=phrase>snd_free_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the pages </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-dma-alloc-pages.html"><SPAN class=phrase>snd_dma_alloc_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate the buffer area according to the given type </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-dma-alloc-pages-fallback.html"><SPAN class=phrase>snd_dma_alloc_pages_fallback</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate the buffer area according to the given type with fallback </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-snd-dma-free-pages.html"><SPAN class=phrase>snd_dma_free_pages</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the allocated buffer </SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/uart16x50.html">6. 16x50 UART Driver</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-update-timeout.html"><SPAN class=phrase>uart_update_timeout</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; update per-port FIFO timeout. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-get-baud-rate.html"><SPAN class=phrase>uart_get_baud_rate</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return baud rate for a particular port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-get-divisor.html"><SPAN class=phrase>uart_get_divisor</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return uart clock divisor </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-parse-options.html"><SPAN class=phrase>uart_parse_options</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Parse serial port baud/parity/bits/flow control. </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-set-options.html"><SPAN class=phrase>uart_set_options</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; setup the serial console parameters </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-register-driver.html"><SPAN class=phrase>uart_register_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a driver with the uart core layer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-unregister-driver.html"><SPAN class=phrase>uart_unregister_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; remove a driver from the uart core layer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-add-one-port.html"><SPAN class=phrase>uart_add_one_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; attach a driver-defined port structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-remove-one-port.html"><SPAN class=phrase>uart_remove_one_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; detach a driver defined port structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-handle-dcd-change.html"><SPAN class=phrase>uart_handle_dcd_change</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; handle a change of carrier detect state </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-handle-cts-change.html"><SPAN class=phrase>uart_handle_cts_change</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; handle a change of clear-to-send state </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-uart-insert-char.html"><SPAN class=phrase>uart_insert_char</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; push a char to the uart layer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-serial8250-get-port.html"><SPAN class=phrase>serial8250_get_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; retrieve struct uart_8250_port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-serial8250-suspend-port.html"><SPAN class=phrase>serial8250_suspend_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; suspend one serial port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-serial8250-resume-port.html"><SPAN class=phrase>serial8250_resume_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; resume one serial port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-serial8250-register-8250-port.html"><SPAN class=phrase>serial8250_register_8250_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a serial port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-serial8250-unregister-port.html"><SPAN class=phrase>serial8250_unregister_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; remove a 16x50 serial port at runtime </SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/fbdev.html">7. Frame Buffer Library</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/fbdev.html#idp48394884">Frame Buffer Memory</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch07s02.html">Frame Buffer Colormap</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch07s03.html">Frame Buffer Video Mode Database</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch07s04.html">Frame Buffer Macintosh Video Mode Database</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch07s05.html">Frame Buffer Fonts</A></SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/input_subsystem.html">8. Input Subsystem</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/input_subsystem.html#idp48614908">Input core</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch08s02.html">Multitouch Library</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch08s03.html">Polled input devices</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch08s04.html">Matrix keyboars/keypads</A></SPAN> 
<DT><SPAN class=sect1><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/ch08s05.html">Sparse keymap support</A></SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/spi.html">9. Serial Peripheral Interface (SPI)</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-spi-device.html"><SPAN class=phrase>struct spi_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Master side proxy for an SPI slave device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-spi-driver.html"><SPAN class=phrase>struct spi_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Host side <SPAN class=quote>&#8220;<SPAN class=quote>protocol</SPAN>&#8221;</SPAN> driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-unregister-driver.html"><SPAN class=phrase>spi_unregister_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; reverse effect of spi_register_driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-module-spi-driver.html"><SPAN class=phrase>module_spi_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Helper macro for registering a SPI driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-spi-master.html"><SPAN class=phrase>struct spi_master</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; interface to SPI master controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-spi-transfer.html"><SPAN class=phrase>struct spi_transfer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; a read/write buffer pair </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-spi-message.html"><SPAN class=phrase>struct spi_message</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; one multi-segment SPI transaction </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-message-init-with-transfers.html"><SPAN class=phrase>spi_message_init_with_transfers</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Initialize spi_message and append transfers </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-write.html"><SPAN class=phrase>spi_write</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SPI synchronous write </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-read.html"><SPAN class=phrase>spi_read</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SPI synchronous read </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-sync-transfer.html"><SPAN class=phrase>spi_sync_transfer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; synchronous SPI data transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-w8r8.html"><SPAN class=phrase>spi_w8r8</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SPI synchronous 8 bit write followed by 8 bit read </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-w8r16.html"><SPAN class=phrase>spi_w8r16</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SPI synchronous 8 bit write followed by 16 bit read </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-w8r16be.html"><SPAN class=phrase>spi_w8r16be</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SPI synchronous 8 bit write followed by 16 bit big-endian read </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-spi-board-info.html"><SPAN class=phrase>struct spi_board_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; board-specific template for a SPI device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-register-board-info.html"><SPAN class=phrase>spi_register_board_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register SPI devices for a given board </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-register-driver.html"><SPAN class=phrase>spi_register_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register a SPI driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-alloc-device.html"><SPAN class=phrase>spi_alloc_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Allocate a new SPI device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-add-device.html"><SPAN class=phrase>spi_add_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Add spi_device allocated with spi_alloc_device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-new-device.html"><SPAN class=phrase>spi_new_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; instantiate one new SPI device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-finalize-current-transfer.html"><SPAN class=phrase>spi_finalize_current_transfer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; report completion of a transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-get-next-queued-message.html"><SPAN class=phrase>spi_get_next_queued_message</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; called by driver to check for queued messages </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-finalize-current-message.html"><SPAN class=phrase>spi_finalize_current_message</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; the current message is complete </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-alloc-master.html"><SPAN class=phrase>spi_alloc_master</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; allocate SPI master controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-register-master.html"><SPAN class=phrase>spi_register_master</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register SPI master controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-devm-spi-register-master.html"><SPAN class=phrase>devm_spi_register_master</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; register managed SPI master controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-unregister-master.html"><SPAN class=phrase>spi_unregister_master</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister SPI master controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-busnum-to-master.html"><SPAN class=phrase>spi_busnum_to_master</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; look up master associated with bus_num </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-setup.html"><SPAN class=phrase>spi_setup</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; setup SPI mode and clock rate </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-async.html"><SPAN class=phrase>spi_async</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; asynchronous SPI transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-async-locked.html"><SPAN class=phrase>spi_async_locked</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; version of spi_async with exclusive bus usage </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-sync.html"><SPAN class=phrase>spi_sync</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; blocking/synchronous SPI data transfers </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-sync-locked.html"><SPAN class=phrase>spi_sync_locked</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; version of spi_sync with exclusive bus usage </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-bus-lock.html"><SPAN class=phrase>spi_bus_lock</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; obtain a lock for exclusive SPI bus usage </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-bus-unlock.html"><SPAN class=phrase>spi_bus_unlock</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release the lock for exclusive SPI bus usage </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-spi-write-then-read.html"><SPAN class=phrase>spi_write_then_read</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SPI synchronous write followed by read </SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/i2c.html">10. I<SUP>2</SUP>C and SMBus Subsystem</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-i2c-driver.html"><SPAN class=phrase>struct i2c_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; represent an I2C device driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-i2c-client.html"><SPAN class=phrase>struct i2c_client</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; represent an I2C slave device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-i2c-board-info.html"><SPAN class=phrase>struct i2c_board_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; template for device creation </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-I2C-BOARD-INFO.html"><SPAN class=phrase>I2C_BOARD_INFO</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; macro used to list an i2c device and its address </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-i2c-algorithm.html"><SPAN class=phrase>struct i2c_algorithm</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; represent I2C transfer method </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-i2c-bus-recovery-info.html"><SPAN class=phrase>struct i2c_bus_recovery_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; I2C bus recovery information </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-module-i2c-driver.html"><SPAN class=phrase>module_i2c_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Helper macro for registering a I2C driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-register-board-info.html"><SPAN class=phrase>i2c_register_board_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; statically declare I2C devices </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-verify-client.html"><SPAN class=phrase>i2c_verify_client</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return parameter as i2c_client, or NULL </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-lock-adapter.html"><SPAN class=phrase>i2c_lock_adapter</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get exclusive access to an I2C bus segment </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-unlock-adapter.html"><SPAN class=phrase>i2c_unlock_adapter</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Release exclusive access to an I2C bus segment </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-new-device.html"><SPAN class=phrase>i2c_new_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; instantiate an i2c device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-unregister-device.html"><SPAN class=phrase>i2c_unregister_device</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; reverse effect of <CODE class=function>i2c_new_device</CODE> </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-new-dummy.html"><SPAN class=phrase>i2c_new_dummy</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return a new i2c device bound to a dummy driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-verify-adapter.html"><SPAN class=phrase>i2c_verify_adapter</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; return parameter as i2c_adapter or NULL </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-add-adapter.html"><SPAN class=phrase>i2c_add_adapter</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; declare i2c adapter, use dynamic bus number </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-add-numbered-adapter.html"><SPAN class=phrase>i2c_add_numbered_adapter</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; declare i2c adapter, use static bus number </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-del-adapter.html"><SPAN class=phrase>i2c_del_adapter</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister I2C adapter </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-del-driver.html"><SPAN class=phrase>i2c_del_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unregister I2C driver </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-use-client.html"><SPAN class=phrase>i2c_use_client</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; increments the reference count of the i2c client structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-release-client.html"><SPAN class=phrase>i2c_release_client</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; release a use of the i2c client structure </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API---i2c-transfer.html"><SPAN class=phrase>__i2c_transfer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; unlocked flavor of i2c_transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-transfer.html"><SPAN class=phrase>i2c_transfer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; execute a single or combined I2C message </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-master-send.html"><SPAN class=phrase>i2c_master_send</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; issue a single I2C message in master transmit mode </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-master-recv.html"><SPAN class=phrase>i2c_master_recv</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; issue a single I2C message in master receive mode </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-read-byte.html"><SPAN class=phrase>i2c_smbus_read_byte</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>receive byte</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-write-byte.html"><SPAN class=phrase>i2c_smbus_write_byte</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>send byte</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-read-byte-data.html"><SPAN class=phrase>i2c_smbus_read_byte_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>read byte</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-write-byte-data.html"><SPAN class=phrase>i2c_smbus_write_byte_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>write byte</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-read-word-data.html"><SPAN class=phrase>i2c_smbus_read_word_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>read word</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-write-word-data.html"><SPAN class=phrase>i2c_smbus_write_word_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>write word</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-read-block-data.html"><SPAN class=phrase>i2c_smbus_read_block_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>block read</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-write-block-data.html"><SPAN class=phrase>i2c_smbus_write_block_data</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; SMBus <SPAN class=quote>&#8220;<SPAN class=quote>block write</SPAN>&#8221;</SPAN> protocol </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-i2c-smbus-xfer.html"><SPAN class=phrase>i2c_smbus_xfer</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; execute SMBus protocol operations </SPAN></DT></DL>
<DT><SPAN class=chapter><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/hsi.html">11. High Speed Synchronous Serial Interface (HSI)</A></SPAN> 
<DD>
<DL>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-channel.html"><SPAN class=phrase>struct hsi_channel</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; channel resource used by the hsi clients </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-config.html"><SPAN class=phrase>struct hsi_config</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Configuration for RX/TX HSI modules </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-board-info.html"><SPAN class=phrase>struct hsi_board_info</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; HSI client board info </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-client.html"><SPAN class=phrase>struct hsi_client</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; HSI client attached to an HSI port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-client-driver.html"><SPAN class=phrase>struct hsi_client_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Driver associated to an HSI client </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-msg.html"><SPAN class=phrase>struct hsi_msg</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; HSI message descriptor </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-port.html"><SPAN class=phrase>struct hsi_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; HSI port device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-struct-hsi-controller.html"><SPAN class=phrase>struct hsi_controller</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; HSI controller device </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-id.html"><SPAN class=phrase>hsi_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Get HSI controller ID associated to a client </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-port-id.html"><SPAN class=phrase>hsi_port_id</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Gets the port number a client is attached to </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-setup.html"><SPAN class=phrase>hsi_setup</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Configure the client's port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-flush.html"><SPAN class=phrase>hsi_flush</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Flush all pending transactions on the client's port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-async-read.html"><SPAN class=phrase>hsi_async_read</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Submit a read transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-async-write.html"><SPAN class=phrase>hsi_async_write</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Submit a write transfer </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-start-tx.html"><SPAN class=phrase>hsi_start_tx</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Signal the port that the client wants to start a TX </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-stop-tx.html"><SPAN class=phrase>hsi_stop_tx</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Signal the port that the client no longer wants to transmit </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-port-unregister-clients.html"><SPAN class=phrase>hsi_port_unregister_clients</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unregister an HSI port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-unregister-controller.html"><SPAN class=phrase>hsi_unregister_controller</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Unregister an HSI controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-register-controller.html"><SPAN class=phrase>hsi_register_controller</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Register an HSI controller and its ports </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-register-client-driver.html"><SPAN class=phrase>hsi_register_client_driver</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Register an HSI client to the HSI bus </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-put-controller.html"><SPAN class=phrase>hsi_put_controller</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Free an HSI controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-alloc-controller.html"><SPAN class=phrase>hsi_alloc_controller</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Allocate an HSI controller and its ports </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-free-msg.html"><SPAN class=phrase>hsi_free_msg</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Free an HSI message </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-alloc-msg.html"><SPAN class=phrase>hsi_alloc_msg</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Allocate an HSI message </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-async.html"><SPAN class=phrase>hsi_async</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Submit an HSI transfer to the controller </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-claim-port.html"><SPAN class=phrase>hsi_claim_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Claim the HSI client's port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-release-port.html"><SPAN class=phrase>hsi_release_port</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Release the HSI client's port </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-register-port-event.html"><SPAN class=phrase>hsi_register_port_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Register a client to receive port events </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-unregister-port-event.html"><SPAN class=phrase>hsi_unregister_port_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Stop receiving port events for a client </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-event.html"><SPAN class=phrase>hsi_event</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; Notifies clients about port events </SPAN>
<DT><SPAN class=refentrytitle><A href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-hsi-get-channel-id-by-name.html"><SPAN class=phrase>hsi_get_channel_id_by_name</SPAN></A></SPAN><SPAN class=refpurpose> &#8212; acquire channel id by channel name </SPAN></DT></DL></DD></DL></DIV></DIV>
<DIV class=navfooter>
<HR>

<TABLE summary="Navigation footer" width="100%">
<TBODY>
<TR>
<TD width="40%" align=left>&nbsp;</TD>
<TD width="20%" align=middle>&nbsp;</TD>
<TD width="40%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/Basics.html">Next</A></TD></TR>
<TR>
<TD vAlign=top width="40%" align=left>&nbsp;</TD>
<TD width="20%" align=middle>&nbsp;</TD>
<TD vAlign=top width="40%" align=right>&nbsp;Chapter&nbsp;1.&nbsp;Driver Basics</TD></TR></TBODY></TABLE></DIV>