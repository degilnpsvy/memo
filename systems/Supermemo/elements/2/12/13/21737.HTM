<H1><A name=DOSBATCH></A>Appendix N. Converting DOS Batch Files to Shell Scripts</H1>
<P><A name=DOSBATCH1></A></P>
<P>Quite a number of programmers learned scripting on a PC running DOS. Even the crippled DOS batch file language allowed writing some fairly powerful scripts and applications, though they often required extensive kludges and workarounds. Occasionally, the need still arises to convert an old DOS batch file to a UNIX shell script. This is generally not difficult, as DOS batch file operators are only a limited subset of the equivalent shell scripting ones.</P>
<DIV class=TABLE><A name=AEN24336></A>
<P><B>Table N-1. Batch file keywords / variables / operators, and their shell equivalents</B></P>
<TABLE class=CALSTABLE border=1>
<THEAD>
<TR>
<TH vAlign=top align=left>Batch File Operator</TH>
<TH vAlign=top align=left>Shell Script Equivalent</TH>
<TH vAlign=top align=left>Meaning</TH></TR></THEAD>
<TBODY>
<TR>
<TD vAlign=top align=left><TT class=OPTION>%</TT></TD>
<TD vAlign=top align=left>$</TD>
<TD vAlign=top align=left>command-line parameter prefix</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>/</TT></TD>
<TD vAlign=top align=left>-</TD>
<TD vAlign=top align=left>command option flag</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>\</TT></TD>
<TD vAlign=top align=left>/</TD>
<TD vAlign=top align=left>directory path separator</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>==</TT></TD>
<TD vAlign=top align=left>=</TD>
<TD vAlign=top align=left>(equal-to) string comparison test</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>!==!</TT></TD>
<TD vAlign=top align=left>!=</TD>
<TD vAlign=top align=left>(not equal-to) string comparison test</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>|</TT></TD>
<TD vAlign=top align=left>|</TD>
<TD vAlign=top align=left>pipe</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>@</TT></TD>
<TD vAlign=top align=left>set <TT class=OPTION>+v</TT></TD>
<TD vAlign=top align=left>do not echo current command</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>*</TT></TD>
<TD vAlign=top align=left>*</TD>
<TD vAlign=top align=left>filename <SPAN class=QUOTE>"wild card"</SPAN></TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>&gt;</TT></TD>
<TD vAlign=top align=left>&gt;</TD>
<TD vAlign=top align=left>file redirection (overwrite)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>&gt;&gt;</TT></TD>
<TD vAlign=top align=left>&gt;&gt;</TD>
<TD vAlign=top align=left>file redirection (append)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>&lt;</TT></TD>
<TD vAlign=top align=left>&lt;</TD>
<TD vAlign=top align=left>redirect <TT class=FILENAME>stdin</TT></TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>%VAR%</TT></TD>
<TD vAlign=top align=left>$VAR</TD>
<TD vAlign=top align=left>environmental variable</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>REM</TT></TD>
<TD vAlign=top align=left>#</TD>
<TD vAlign=top align=left>comment</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>NOT</TT></TD>
<TD vAlign=top align=left>!</TD>
<TD vAlign=top align=left>negate following test</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>NUL</TT></TD>
<TD vAlign=top align=left><TT class=FILENAME>/dev/null</TT></TD>
<TD vAlign=top align=left><SPAN class=QUOTE>"black hole"</SPAN> for burying command output</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ECHO</TT></TD>
<TD vAlign=top align=left>echo</TD>
<TD vAlign=top align=left>echo (many more option in Bash)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ECHO.</TT></TD>
<TD vAlign=top align=left>echo</TD>
<TD vAlign=top align=left>echo blank line</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ECHO OFF</TT></TD>
<TD vAlign=top align=left>set <TT class=OPTION>+v</TT></TD>
<TD vAlign=top align=left>do not echo command(s) following</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>FOR %%VAR IN (LIST) DO</TT></TD>
<TD vAlign=top align=left>for var in [list]; do</TD>
<TD vAlign=top align=left><SPAN class=QUOTE>"for"</SPAN> loop</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>:LABEL</TT></TD>
<TD vAlign=top align=left>none (unnecessary)</TD>
<TD vAlign=top align=left>label</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>GOTO</TT></TD>
<TD vAlign=top align=left>none (use a function)</TD>
<TD vAlign=top align=left>jump to another location in the script</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>PAUSE</TT></TD>
<TD vAlign=top align=left>sleep</TD>
<TD vAlign=top align=left>pause or wait an interval</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>CHOICE</TT></TD>
<TD vAlign=top align=left>case or select</TD>
<TD vAlign=top align=left>menu choice</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>IF</TT></TD>
<TD vAlign=top align=left>if</TD>
<TD vAlign=top align=left>if-test</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>IF EXIST <TT class=REPLACEABLE><I>FILENAME</I></TT></TT></TD>
<TD vAlign=top align=left>if [ -e filename ]</TD>
<TD vAlign=top align=left>test if file exists</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>IF !%N==!</TT></TD>
<TD vAlign=top align=left>if [ -z "$N" ]</TD>
<TD vAlign=top align=left>if replaceable parameter <SPAN class=QUOTE>"N"</SPAN> not present</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>CALL</TT></TD>
<TD vAlign=top align=left>source or . (dot operator)</TD>
<TD vAlign=top align=left><SPAN class=QUOTE>"include"</SPAN> another script</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>COMMAND /C</TT></TD>
<TD vAlign=top align=left>source or . (dot operator)</TD>
<TD vAlign=top align=left><SPAN class=QUOTE>"include"</SPAN> another script (same as CALL)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>SET</TT></TD>
<TD vAlign=top align=left>export</TD>
<TD vAlign=top align=left>set an environmental variable</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>SHIFT</TT></TD>
<TD vAlign=top align=left>shift</TD>
<TD vAlign=top align=left>left shift command-line argument list</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>SGN</TT></TD>
<TD vAlign=top align=left>-lt or -gt</TD>
<TD vAlign=top align=left>sign (of integer)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ERRORLEVEL</TT></TD>
<TD vAlign=top align=left>$?</TD>
<TD vAlign=top align=left>exit status</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>CON</TT></TD>
<TD vAlign=top align=left><TT class=FILENAME>stdin</TT></TD>
<TD vAlign=top align=left><SPAN class=QUOTE>"console"</SPAN> (<TT class=FILENAME>stdin</TT>)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>PRN</TT></TD>
<TD vAlign=top align=left><TT class=FILENAME>/dev/lp0</TT></TD>
<TD vAlign=top align=left>(generic) printer device</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>LPT1</TT></TD>
<TD vAlign=top align=left><TT class=FILENAME>/dev/lp0</TT></TD>
<TD vAlign=top align=left>first printer device</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>COM1</TT></TD>
<TD vAlign=top align=left><TT class=FILENAME>/dev/ttyS0</TT></TD>
<TD vAlign=top align=left>first serial port</TD></TR></TBODY></TABLE></DIV>
<P><A name=DOSUNIXEQUIV></A></P>
<P>Batch files usually contain DOS commands. These must be translated into their UNIX equivalents in order to convert a batch file into a shell script.</P>
<DIV class=TABLE><A name=AEN24545></A>
<P><B>Table N-2. DOS commands and their UNIX equivalents</B></P>
<TABLE class=CALSTABLE border=1>
<THEAD>
<TR>
<TH vAlign=top align=left>DOS Command</TH>
<TH vAlign=top align=left>UNIX Equivalent</TH>
<TH vAlign=top align=left>Effect</TH></TR></THEAD>
<TBODY>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ASSIGN</TT></TD>
<TD vAlign=top align=left>ln</TD>
<TD vAlign=top align=left>link file or directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ATTRIB</TT></TD>
<TD vAlign=top align=left>chmod</TD>
<TD vAlign=top align=left>change file permissions</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>CD</TT></TD>
<TD vAlign=top align=left>cd</TD>
<TD vAlign=top align=left>change directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>CHDIR</TT></TD>
<TD vAlign=top align=left>cd</TD>
<TD vAlign=top align=left>change directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>CLS</TT></TD>
<TD vAlign=top align=left>clear</TD>
<TD vAlign=top align=left>clear screen</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>COMP</TT></TD>
<TD vAlign=top align=left>diff, comm, cmp</TD>
<TD vAlign=top align=left>file compare</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>COPY</TT></TD>
<TD vAlign=top align=left>cp</TD>
<TD vAlign=top align=left>file copy</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>Ctl-C</TT></TD>
<TD vAlign=top align=left>Ctl-C</TD>
<TD vAlign=top align=left>break (signal)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>Ctl-Z</TT></TD>
<TD vAlign=top align=left>Ctl-D</TD>
<TD vAlign=top align=left>EOF (end-of-file)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>DEL</TT></TD>
<TD vAlign=top align=left>rm</TD>
<TD vAlign=top align=left>delete file(s)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>DELTREE</TT></TD>
<TD vAlign=top align=left>rm -rf</TD>
<TD vAlign=top align=left>delete directory recursively</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>DIR</TT></TD>
<TD vAlign=top align=left>ls -l</TD>
<TD vAlign=top align=left>directory listing</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>ERASE</TT></TD>
<TD vAlign=top align=left>rm</TD>
<TD vAlign=top align=left>delete file(s)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>EXIT</TT></TD>
<TD vAlign=top align=left>exit</TD>
<TD vAlign=top align=left>exit current process</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>FC</TT></TD>
<TD vAlign=top align=left>comm, cmp</TD>
<TD vAlign=top align=left>file compare</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>FIND</TT></TD>
<TD vAlign=top align=left>grep</TD>
<TD vAlign=top align=left>find strings in files</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>MD</TT></TD>
<TD vAlign=top align=left>mkdir</TD>
<TD vAlign=top align=left>make directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>MKDIR</TT></TD>
<TD vAlign=top align=left>mkdir</TD>
<TD vAlign=top align=left>make directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>MORE</TT></TD>
<TD vAlign=top align=left>more</TD>
<TD vAlign=top align=left>text file paging filter</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>MOVE</TT></TD>
<TD vAlign=top align=left>mv</TD>
<TD vAlign=top align=left>move</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>PATH</TT></TD>
<TD vAlign=top align=left>$PATH</TD>
<TD vAlign=top align=left>path to executables</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>REN</TT></TD>
<TD vAlign=top align=left>mv</TD>
<TD vAlign=top align=left>rename (move)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>RENAME</TT></TD>
<TD vAlign=top align=left>mv</TD>
<TD vAlign=top align=left>rename (move)</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>RD</TT></TD>
<TD vAlign=top align=left>rmdir</TD>
<TD vAlign=top align=left>remove directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>RMDIR</TT></TD>
<TD vAlign=top align=left>rmdir</TD>
<TD vAlign=top align=left>remove directory</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>SORT</TT></TD>
<TD vAlign=top align=left>sort</TD>
<TD vAlign=top align=left>sort file</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>TIME</TT></TD>
<TD vAlign=top align=left>date</TD>
<TD vAlign=top align=left>display system time</TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>TYPE</TT></TD>
<TD vAlign=top align=left>cat</TD>
<TD vAlign=top align=left>output file to <TT class=FILENAME>stdout</TT></TD></TR>
<TR>
<TD vAlign=top align=left><TT class=OPTION>XCOPY</TT></TD>
<TD vAlign=top align=left>cp</TD>
<TD vAlign=top align=left>(extended) file copy</TD></TR></TBODY></TABLE></DIV>
<DIV class=NOTE>
<P></P>
<TABLE class=NOTE border=0 width="100%">
<TBODY>
<TR>
<TD vAlign=top width=25 align=middle><IMG hspace=5 alt=Note src="http://tldp.org/LDP/abs/images/note.gif"></TD>
<TD vAlign=top align=left>
<P>Virtually all UNIX and shell operators and commands have many more options and enhancements than their DOS and batch file counterparts. Many DOS batch files rely on auxiliary utilities, such as <B class=COMMAND>ask.com</B>, a crippled counterpart to <A href="http://tldp.org/LDP/abs/html/abs-guide.html#READREF">read</A>.</P>
<P>DOS supports only a very limited and incompatible subset of filename <A href="http://tldp.org/LDP/abs/html/abs-guide.html#GLOBBINGREF">wild-card expansion</A>, recognizing just the <SPAN class=TOKEN>*</SPAN> and <SPAN class=TOKEN>?</SPAN> characters.</P></TD></TR></TBODY></TABLE></DIV>
<P>Converting a DOS batch file into a shell script is generally straightforward, and the result ofttimes reads better than the original.</P>
<DIV class=EXAMPLE><A name=VIEWDAT></A>
<P><B>Example N-1. VIEWDATA.BAT: DOS Batch File</B></P>
<TABLE border=0 width="100%" bgColor=#e0e0e0>
<TBODY>
<TR>
<TD><FONT color=#000000><PRE class=PROGRAMLISTING>REM VIEWDATA

REM INSPIRED BY AN EXAMPLE IN "DOS POWERTOOLS"
REM                           BY PAUL SOMERSON


@ECHO OFF

IF !%1==! GOTO VIEWDATA
REM  IF NO COMMAND-LINE ARG...
FIND "%1" C:\BOZO\BOOKLIST.TXT
GOTO EXIT0
REM  PRINT LINE WITH STRING MATCH, THEN EXIT.

:VIEWDATA
TYPE C:\BOZO\BOOKLIST.TXT | MORE
REM  SHOW ENTIRE FILE, 1 PAGE AT A TIME.

:EXIT0</PRE></FONT></TD></TR></TBODY></TABLE></DIV>
<P>The script conversion is somewhat of an improvement. <A href="http://tldp.org/LDP/abs/html/abs-guide.html#FTN.AEN24713" name=AEN24713><SPAN class=footnote>[152]</SPAN></A> </P>
<DIV class=EXAMPLE><A name=VIEWDATA></A>
<P><B>Example N-2. <I class=FIRSTTERM>viewdata.sh</I>: Shell Script Conversion of VIEWDATA.BAT</B></P>
<TABLE border=0 width="100%" bgColor=#e0e0e0>
<TBODY>
<TR>
<TD><FONT color=#000000><PRE class=PROGRAMLISTING>#!/bin/bash
# viewdata.sh
# Conversion of VIEWDATA.BAT to shell script.

DATAFILE=/home/bozo/datafiles/book-collection.data
ARGNO=1

# @ECHO OFF                 Command unnecessary here.

if [ $# -lt "$ARGNO" ]    # IF !%1==! GOTO VIEWDATA
then
  less $DATAFILE          # TYPE C:\MYDIR\BOOKLIST.TXT | MORE
else
  grep "$1" $DATAFILE     # FIND "%1" C:\MYDIR\BOOKLIST.TXT
fi  

exit 0                    # :EXIT0

#  GOTOs, labels, smoke-and-mirrors, and flimflam unnecessary.
#  The converted script is short, sweet, and clean,
#+ which is more than can be said for the original.</PRE></FONT></TD></TR></TBODY></TABLE></DIV>
<P>Ted Davis' <A href="http://www.maem.umr.edu/batch/" target=_top>Shell Scripts on the PC</A> site had a set of comprehensive tutorials on the old-fashioned art of batch file programming. Unfortunately the page has vanished without a trace.