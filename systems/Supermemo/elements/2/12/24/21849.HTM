<TABLE summary="Navigation header" width="100%">
<TBODY>
<TR>
<TH colSpan=3 align=middle><SPAN class=phrase>preempt_schedule_context</SPAN></TH></TR>
<TR>
<TD width="20%" align=left><A accessKey=p href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-preempt-notifier-unregister.html">Prev</A>&nbsp;</TD>
<TH width="60%" align=middle>Delaying, scheduling, and timer routines</TH>
<TD width="20%" align=right>&nbsp;<A accessKey=n href="file:///C:/Users/donpope_tang/Documents/docbook/device-drivers/API-sched-setscheduler.html">Next</A></TD></TR></TBODY></TABLE>
<HR>

<DIV class=refentry><A name=API-preempt-schedule-context></A>
<DIV class=titlepage></DIV>
<DIV class=refnamediv>
<H2>Name</H2>
<P>preempt_schedule_context &#8212; preempt_schedule called by tracing </P></DIV>
<DIV class=refsynopsisdiv>
<H2>Synopsis</H2>
<DIV class=funcsynopsis>
<TABLE style="cellspacing: 0; cellpadding: 0" class=funcprototype-table border=0 summary="Function synopsis">
<TBODY>
<TR>
<TD><CODE class=funcdef>__visible void __sched notrace <B class=fsfunc>preempt_schedule_context </B>(</CODE></TD>
<TD><VAR class=pdparam>void</VAR><CODE>)</CODE>;</TD></TR></TBODY></TABLE>
<DIV class=funcprototype-spacer>&nbsp;</DIV></DIV></DIV>
<DIV class=refsect1><A name=idp41327612></A>
<H2>Arguments</H2>
<DIV class=variablelist>
<DL class=variablelist>
<DT><SPAN class=term><EM class=parameter><CODE>void</CODE></EM></SPAN> 
<DD>
<P>no arguments </P></DD></DL></DIV></DIV>
<DIV class=refsect1><A name=idp41329140></A>
<H2>Description</H2>
<P></P>
<P>The tracing infrastructure uses preempt_enable_notrace to prevent recursion and tracing preempt enabling caused by the tracing infrastructure itself. But as tracing can happen in areas coming from userspace or just about to enter userspace, a preempt enable can occur before <CODE class=function>user_exit</CODE> is called. This will cause the scheduler to be called when the system is still in usermode. </P>
<P>To prevent this, the preempt_enable_notrace will use this function instead of <CODE class=function>preempt_schedule</CODE> to exit user context if needed before calling the scheduler. </P></DIV></DIV>