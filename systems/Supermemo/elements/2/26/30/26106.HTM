<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Myriad-CnSemibold','sans-serif'; FONT-SIZE: 22pt; mso-bidi-font-size: 15.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight" lang=EN-US>Handler Arguments and Return Value</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><FONT face=Calibri><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>Though </SPAN><I><SPAN style="FONT-FAMILY: Birka-Italic; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>short </SPAN></I><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>ignores them, three arguments are passed to an interrupt handler: </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>irq</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>dev_id</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, and </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>regs</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. Let</SPAN><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>s look at the role of each.</SPAN></FONT></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><FONT face=Calibri><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The interrupt number (</SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>int irq</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>) is useful as information you may print in your log messages, if any. The second argument, </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>void *dev_id</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, is a sort of client data; a </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>void * </SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>argument is passed to </SPAN><I><SPAN style="FONT-FAMILY: Birka-Italic; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>request_irq</SPAN></I><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, and this same pointer is then passed back as an argument to the handler when the interrupt happens. You usually pass a pointer to your device data structure in </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>dev_id</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, so a driver that manages several instances of the same device doesn</SPAN><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>t need any extra code in the interrupt handler to find out which device is in charge of the current interrupt event.</SPAN></FONT></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>Typical use of the argument in an interrupt handler is as follows:</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>static irqreturn_t sample_interrupt(int irq, void *dev_id, struct pt_regs</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>*regs)</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>{</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>struct sample_dev *dev = dev_id;</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>/* now `dev' points to the right hardware item */</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>/* .... */</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>}</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><FONT face=Calibri><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The typical </SPAN><I><SPAN style="FONT-FAMILY: Birka-Italic; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt" lang=EN-US>open </SPAN></I><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>code associated with this handler looks like this:</SPAN></FONT></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>static void sample_open(struct inode *inode, struct file *filp)</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>{</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>struct sample_dev *dev = hwinfo + MINOR(inode-&gt;i_rdev);</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>request_irq(dev-&gt;irq, sample_interrupt,</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>0 /* flags */, "sample", dev /* dev_id */);</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>/*....*/</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>return 0;</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>}</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT face=Calibri>&nbsp;</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><FONT face=Calibri><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>The last argument, </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>struct pt_regs *regs</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>, is rarely used. It holds a snapshot of the processor</SPAN><SPAN style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka" lang=EN-US>&#8217;</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>s context before the processor entered interrupt code. The registers can be used for monitoring and debugging; they are not normally needed for regular device driver tasks.</SPAN></FONT></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><FONT face=Calibri><FONT class=extract><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>Interrupt handlers should return a value indicating whether there was actually an interrupt to handle. If the handler found that its device did, indeed, need attention, it should return </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>IRQ_HANDLED</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>; otherwise the return value should be </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>IRQ_NONE</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>. You can also generate the return value with this macro:</SPAN></FONT></FONT></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 11pt; mso-bidi-font-size: 8.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US><FONT class=extract face=Calibri>IRQ_RETVAL(handled)</FONT></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" class=MsoNormal align=left><FONT face=Calibri><FONT class=extract><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>where </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>handled </SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>is nonzero if you were able to handle the interrupt. The return value is used by the kernel to detect and suppress spurious interrupts. If your device gives you no way to tell whether it really interrupted, you should return </SPAN><SPAN style="FONT-FAMILY: TheSansMonoCondensed-SemiLight; FONT-SIZE: 12pt; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt" lang=EN-US>IRQ_HANDLED</SPAN><SPAN style="FONT-FAMILY: Birka; FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt" lang=EN-US>.</SPAN></FONT></FONT>