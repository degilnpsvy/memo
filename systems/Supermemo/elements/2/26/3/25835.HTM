/**<BR>&nbsp;* complete_all: - signals all threads waiting on this completion<BR>&nbsp;* @x:&nbsp; holds the state of this particular completion<BR>&nbsp;*<BR>&nbsp;* This will wake up all threads waiting on this particular completion event.<BR>&nbsp;*<BR>&nbsp;* It may be assumed that this function implies a write memory barrier before<BR>&nbsp;* changing the task state if and only if any tasks are woken up.<BR>&nbsp;*/<BR>void complete_all(struct completion *x)<BR>{<BR>&nbsp;unsigned long flags;</P>
<P>&nbsp;spin_lock_irqsave(&amp;x-&gt;wait.lock, flags);<BR>&nbsp;x-&gt;done += UINT_MAX/2;<BR>&nbsp;__wake_up_locked(&amp;x-&gt;wait, TASK_NORMAL, 0);<BR>&nbsp;spin_unlock_irqrestore(&amp;x-&gt;wait.lock, flags);<BR>}<BR>EXPORT_SYMBOL(complete_all);