/**<BR>&nbsp;* <FONT class=extract>struct input_handle - links input device with an input handler</FONT><BR>&nbsp;* @private: handler-specific data<BR>&nbsp;* @open: counter showing whether the handle is 'open', i.e. should deliver<BR>&nbsp;*&nbsp;events from its device<BR>&nbsp;* @name: name given to the handle by handler that created it<BR>&nbsp;* @dev: input device the handle is attached to<BR>&nbsp;* @handler: handler that works with the device through this handle<BR>&nbsp;* @d_node: used to put the handle on device's list of attached handles<BR>&nbsp;* @h_node: used to put the handle on handler's list of handles from which<BR>&nbsp;*&nbsp;it gets events<BR>&nbsp;*/<BR>struct input_handle { 
<P></P>
<P>&nbsp;void *private;</P>
<P>&nbsp;int open;<BR>&nbsp;const char *name;</P>
<P>&nbsp;struct input_dev *dev;<BR>&nbsp;struct input_handler *handler;</P>
<P>&nbsp;struct list_head&nbsp;d_node;<BR>&nbsp;struct list_head&nbsp;h_node;<BR>};