#ifndef ioread8<BR>#define ioread8 ioread8<BR>static inline u8 ioread8(const volatile void __iomem *addr)<BR>{<BR>&nbsp;return readb(addr);<BR>}<BR>#endif 
<P></P>
<P>#ifndef ioread16<BR>#define ioread16 ioread16<BR>static inline u16 ioread16(const volatile void __iomem *addr)<BR>{<BR>&nbsp;return readw(addr);<BR>}<BR>#endif</P>
<P>#ifndef ioread32<BR>#define ioread32 ioread32<BR>static inline u32 ioread32(const volatile void __iomem *addr)<BR>{<BR>&nbsp;return readl(addr);<BR>}<BR>#endif</P>
<P>#ifndef iowrite8<BR>#define iowrite8 iowrite8<BR>static inline void iowrite8(u8 value, volatile void __iomem *addr)<BR>{<BR>&nbsp;writeb(value, addr);<BR>}<BR>#endif</P>
<P>#ifndef iowrite16<BR>#define iowrite16 iowrite16<BR>static inline void iowrite16(u16 value, volatile void __iomem *addr)<BR>{<BR>&nbsp;writew(value, addr);<BR>}<BR>#endif</P>
<P>#ifndef iowrite32<BR>#define iowrite32 iowrite32<BR>static inline void iowrite32(u32 value, volatile void __iomem *addr)<BR>{<BR>&nbsp;writel(value, addr);<BR>}<BR>#endif