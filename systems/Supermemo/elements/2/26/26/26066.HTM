<FONT class=extract>#ifndef PCI_IOBASE<BR>#define PCI_IOBASE ((void __iomem *)0)<BR>#endif</FONT> 
<P></P>
<P><FONT class=extract>#ifndef IO_SPACE_LIMIT<BR>#define IO_SPACE_LIMIT 0xffff<BR>#endif</FONT></P>
<P><FONT class=extract>/*<BR>&nbsp;* {in,out}{b,w,l}() access little endian I/O. {in,out}{b,w,l}_p() can be<BR>&nbsp;* implemented on hardware that needs an additional delay for I/O accesses to<BR>&nbsp;* take effect.<BR>&nbsp;*/</FONT></P>
<P><FONT class=extract>#ifndef inb<BR>#define inb inb<BR>static inline u8 inb(unsigned long addr)<BR>{<BR>&nbsp;return readb(PCI_IOBASE + addr);<BR>}<BR>#endif</FONT></P>
<P><FONT class=extract>#ifndef inw<BR>#define inw inw<BR>static inline u16 inw(unsigned long addr)<BR>{<BR>&nbsp;return readw(PCI_IOBASE + addr);<BR>}<BR>#endif</FONT></P>
<P><FONT class=extract>#ifndef inl<BR>#define inl inl<BR>static inline u32 inl(unsigned long addr)<BR>{<BR>&nbsp;return readl(PCI_IOBASE + addr);<BR>}<BR>#endif</FONT></P>
<P><FONT class=extract>#ifndef outb<BR>#define outb outb<BR>static inline void outb(u8 value, unsigned long addr)<BR>{<BR>&nbsp;writeb(value, PCI_IOBASE + addr);<BR>}<BR>#endif</FONT></P>
<P><FONT class=extract>#ifndef outw<BR>#define outw outw<BR>static inline void outw(u16 value, unsigned long addr)<BR>{<BR>&nbsp;writew(value, PCI_IOBASE + addr);<BR>}<BR>#endif</FONT></P>
<P><FONT class=extract>#ifndef outl<BR>#define outl outl<BR>static inline void outl(u32 value, unsigned long addr)<BR>{<BR>&nbsp;writel(value, PCI_IOBASE + addr);<BR>}<BR>#endif</FONT></P>
<P>#ifndef inb_p<BR>#define inb_p inb_p<BR>static inline u8 inb_p(unsigned long addr)<BR>{<BR>&nbsp;return inb(addr);<BR>}<BR>#endif</P>
<P>#ifndef inw_p<BR>#define inw_p inw_p<BR>static inline u16 inw_p(unsigned long addr)<BR>{<BR>&nbsp;return inw(addr);<BR>}<BR>#endif</P>
<P>#ifndef inl_p<BR>#define inl_p inl_p<BR>static inline u32 inl_p(unsigned long addr)<BR>{<BR>&nbsp;return inl(addr);<BR>}<BR>#endif</P>
<P>#ifndef outb_p<BR>#define outb_p outb_p<BR>static inline void outb_p(u8 value, unsigned long addr)<BR>{<BR>&nbsp;outb(value, addr);<BR>}<BR>#endif</P>
<P>#ifndef outw_p<BR>#define outw_p outw_p<BR>static inline void outw_p(u16 value, unsigned long addr)<BR>{<BR>&nbsp;outw(value, addr);<BR>}<BR>#endif</P>
<P>#ifndef outl_p<BR>#define outl_p outl_p<BR>static inline void outl_p(u32 value, unsigned long addr)<BR>{<BR>&nbsp;outl(value, addr);<BR>}<BR>#endif