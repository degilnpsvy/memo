<H2>linux kernel&#30340;&#20013;&#26029;&#23376;&#31995;&#32479;&#20043;&#65288;&#19977;&#65289;&#65306;IRQ number&#21644;&#20013;&#26029;&#25551;&#36848;&#31526;</H2>
<P class=date>&#20316;&#32773;&#65306;<A href="http://www.wowotech.net/author/3">linuxer</A> &#21457;&#24067;&#20110;&#65306;2014-8-26 17:03 &#20998;&#31867;&#65306;<A href="http://www.wowotech.net/sort/irq_subsystem">&#20013;&#26029;&#23376;&#31995;&#32479;</A> </P>
<P>&#19968;&#12289;&#21069;&#35328; </P>
<P>&#26412;&#25991;&#20027;&#35201;&#22260;&#32469;IRQ number&#21644;&#20013;&#26029;&#25551;&#36848;&#31526;&#65288;interrupt descriptor&#65289;&#36825;&#20004;&#20010;&#27010;&#24565;&#25551;&#36848;&#36890;&#29992;&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;&#12290;&#31532;&#20108;&#31456;&#20027;&#35201;&#25551;&#36848;&#22522;&#26412;&#27010;&#24565;&#65292;&#21253;&#25324;&#20160;&#20040;&#26159;IRQ number&#65292;&#20160;&#20040;&#26159;&#20013;&#26029;&#25551;&#36848;&#31526;&#31561;&#12290;&#31532;&#19977;&#31456;&#25551;&#36848;&#20013;&#26029;&#25551;&#36848;&#31526;&#25968;&#25454;&#32467;&#26500;&#30340;&#21508;&#20010;&#25104;&#21592;&#12290;&#31532;&#22235;&#31456;&#25551;&#36848;&#20102;&#21021;&#22987;&#21270;&#20013;&#26029;&#25551;&#36848;&#31526;&#30456;&#20851;&#30340;&#25509;&#21475;API&#12290;&#31532;&#20116;&#31456;&#25551;&#36848;&#20013;&#26029;&#25551;&#36848;&#31526;&#30456;&#20851;&#30340;&#25509;&#21475;API&#12290; </P>
<P>&#20108;&#12289;&#22522;&#26412;&#27010;&#24565; </P>
<P>1&#12289;&#36890;&#29992;&#20013;&#26029;&#30340;&#20195;&#30721;&#22788;&#29702;&#31034;&#24847;&#22270; </P>
<P>&#19968;&#20010;&#20851;&#20110;&#36890;&#29992;&#20013;&#26029;&#22788;&#29702;&#30340;&#31034;&#24847;&#22270;&#22914;&#19979;&#65306; </P>
<P><A href="http://www.wowotech.net/content/uploadfile/201408/3e79044a4981e30f35e9b19fe44a441720140826100300.gif"><IMG title=zhongduan style="BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; DISPLAY: inline; BORDER-TOP-WIDTH: 0px" border=0 alt=zhongduan src="http://www.wowotech.net/content/uploadfile/201408/c1bc605fe5555c059b2e2e3196d2862a20140826100303.gif" width=708 height=420></A> </P>
<P>&#22312;linux kernel&#20013;&#65292;&#23545;&#20110;&#27599;&#19968;&#20010;&#22806;&#35774;&#30340;IRQ&#37117;&#29992;struct irq_desc&#26469;&#25551;&#36848;&#65292;&#25105;&#20204;&#31216;&#20043;&#20013;&#26029;&#25551;&#36848;&#31526;&#65288;struct irq_desc&#65289;&#12290;linux kernel&#20013;&#20250;&#26377;&#19968;&#20010;&#25968;&#25454;&#32467;&#26500;&#20445;&#23384;&#20102;&#20851;&#20110;&#25152;&#26377;IRQ&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#20449;&#24687;&#65292;&#25105;&#20204;&#31216;&#20043;&#20013;&#26029;&#25551;&#36848;&#31526;DB&#65288;&#19978;&#22270;&#20013;&#32418;&#33394;&#26694;&#22270;&#20869;&#65289;&#12290;&#24403;&#21457;&#29983;&#20013;&#26029;&#21518;&#65292;&#39318;&#20808;&#33719;&#21462;&#35302;&#21457;&#20013;&#26029;&#30340;HW interupt ID&#65292;&#28982;&#21518;&#36890;&#36807;irq domain&#32763;&#35793;&#25104;IRQ nuber&#65292;&#28982;&#21518;&#36890;&#36807;IRQ number&#23601;&#21487;&#20197;&#33719;&#21462;&#23545;&#24212;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#12290;&#35843;&#29992;&#20013;&#26029;&#25551;&#36848;&#31526;&#20013;&#30340;highlevel irq-events handler&#26469;&#36827;&#34892;&#20013;&#26029;&#22788;&#29702;&#23601;OK&#20102;&#12290;&#32780;highlevel irq-events handler&#20027;&#35201;&#36827;&#34892;&#19979;&#38754;&#20004;&#20010;&#25805;&#20316;&#65306; </P>
<P>&#65288;1&#65289;&#35843;&#29992;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#24213;&#23618;irq chip driver&#36827;&#34892;mask&#65292;ack&#31561;callback&#20989;&#25968;&#65292;&#36827;&#34892;interrupt flow control&#12290; </P>
<P>&#65288;2&#65289;&#35843;&#29992;&#35813;&#20013;&#26029;&#25551;&#36848;&#31526;&#19978;&#30340;action list&#20013;&#30340;specific handler&#65288;&#25105;&#20204;&#29992;&#36825;&#20010;&#26415;&#35821;&#26469;&#21306;&#20998;&#20855;&#20307;&#20013;&#26029;handler&#21644;high level&#30340;handler&#65289;&#12290;&#36825;&#20010;&#27493;&#39588;&#19981;&#19968;&#23450;&#20250;&#25191;&#34892;&#65292;&#36825;&#26159;&#21644;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#24403;&#21069;&#29366;&#24577;&#30456;&#20851;&#65292;&#23454;&#38469;&#19978;&#65292;interrupt flow control&#26159;&#36719;&#20214;&#65288;&#35774;&#23450;&#19968;&#20123;&#26631;&#24535;&#20301;&#65292;&#36719;&#20214;&#26681;&#25454;&#26631;&#24535;&#20301;&#36827;&#34892;&#22788;&#29702;&#65289;&#21644;&#30828;&#20214;&#65288;mask&#25110;&#32773;unmask interrupt controller&#31561;&#65289;&#19968;&#36215;&#25511;&#21046;&#23436;&#25104;&#30340;&#12290; </P>
<P>&nbsp; </P>
<P>2&#12289;&#20013;&#26029;&#30340;&#25171;&#24320;&#21644;&#20851;&#38381; </P>
<P>&#25105;&#20204;&#20877;&#26469;&#30475;&#30475;&#25972;&#20010;&#36890;&#29992;&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;&#20013;&#30340;&#24320;&#20851;&#20013;&#26029;&#24773;&#20917;&#65292;&#24320;&#20851;&#20013;&#26029;&#26377;&#20004;&#31181;&#65306; </P>
<P>&#65288;1&#65289;&#24320;&#20851;local CPU&#30340;&#20013;&#26029;&#12290;&#23545;&#20110;UP&#65292;&#20851;&#38381;CPU&#20013;&#26029;&#23601;&#20851;&#38381;&#20102;&#19968;&#20999;&#65292;&#27704;&#36828;&#19981;&#20250;&#34987;&#25250;&#21344;&#12290;&#23545;&#20110;SMP&#65292;&#23454;&#38469;&#19978;&#65292;&#27809;&#26377;&#20851;&#20840;&#23616;&#20013;&#26029;&#36825;&#19968;&#35828;&#65292;&#21482;&#33021;&#20851;&#38381;local CPU&#65288;&#20195;&#30721;&#36816;&#34892;&#30340;&#37027;&#20010;CPU&#65289; </P>
<P>&#65288;2&#65289;&#25511;&#21046;interrupt controller&#65292;&#20851;&#38381;&#26576;&#20010;IRQ number&#23545;&#24212;&#30340;&#20013;&#26029;&#12290;&#26356;&#20934;&#30830;&#30340;&#26415;&#35821;&#26159;mask&#25110;&#32773;unmask&#19968;&#20010; IRQ&#12290; </P>
<P>&#26412;&#33410;&#20027;&#35201;&#25551;&#36848;&#30340;&#26159;&#31532;&#19968;&#31181;&#65292;&#20063;&#23601;&#26159;&#25511;&#21046;CPU&#30340;&#20013;&#26029;&#12290;&#24403;&#36827;&#20837;high level handler&#30340;&#26102;&#20505;&#65292;CPU&#30340;&#20013;&#26029;&#26159;&#20851;&#38381;&#30340;&#65288;&#30828;&#20214;&#22312;&#36827;&#20837;IRQ processor mode&#30340;&#26102;&#20505;&#35774;&#23450;&#30340;&#65289;&#12290; </P>
<P>&#23545;&#20110;&#22806;&#35774;&#30340;specific handler&#65292;&#26087;&#30340;&#20869;&#26680;&#65288;2.6.35&#29256;&#26412;&#20043;&#21069;&#65289;&#35748;&#20026;&#26377;&#20004;&#31181;&#65306;slow handler&#21644;fast handle&#12290;&#22312;request irq&#30340;&#26102;&#20505;&#65292;&#23545;&#20110;fast handler&#65292;&#38656;&#35201;&#20256;&#36882;IRQF_DISABLED&#30340;&#21442;&#25968;&#65292;&#30830;&#20445;&#20854;&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;&#20013;&#26159;&#20851;&#38381;CPU&#30340;&#20013;&#26029;&#65292;&#22240;&#20026;&#26159;fast handler&#65292;&#25191;&#34892;&#24456;&#24555;&#65292;&#21363;&#20415;&#26159;&#20851;&#38381;CPU&#20013;&#26029;&#19981;&#20250;&#24433;&#21709;&#31995;&#32479;&#30340;&#24615;&#33021;&#12290;&#20294;&#26159;&#65292;&#24182;&#19981;&#26159;&#27599;&#19968;&#31181;&#22806;&#35774;&#20013;&#26029;&#30340;handler&#37117;&#26159;&#37027;&#20040;&#24555;&#65288;&#20363;&#22914;&#30913;&#30424;&#65289;&#65292;&#22240;&#27492;&#23601;&#26377;slow handler&#30340;&#27010;&#24565;&#65292;&#35828;&#26126;&#20854;&#22312;&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;&#20013;&#20250;&#32791;&#26102;&#27604;&#36739;&#38271;&#12290;&#23545;&#20110;&#36825;&#31181;&#24773;&#20917;&#65292;&#22914;&#26524;&#22312;&#25972;&#20010;specific handler&#20013;&#20851;&#38381;CPU&#20013;&#26029;&#65292;&#23545;&#31995;&#32479;&#30340;performance&#20250;&#26377;&#24433;&#21709;&#12290;&#22240;&#27492;&#65292;&#23545;&#20110;slow handler&#65292;&#22312;&#20174;high level handler&#36716;&#20837;specific handler&#20013;&#38388;&#20250;&#26681;&#25454;IRQF_DISABLED&#36825;&#20010;flag&#26469;&#20915;&#23450;&#26159;&#21542;&#25171;&#24320;&#20013;&#26029;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65288;&#26469;&#33258;2.6.23&#20869;&#26680;&#65289;&#65306; </P>
<BLOCKQUOTE>
<P>irqreturn_t handle_IRQ_event(unsigned int irq, struct irqaction *action) <BR>{ <BR>&nbsp;&nbsp;&nbsp; &#8230;&#8230; </P>
<P>&nbsp;&nbsp;&nbsp; if (!(action-&gt;flags &amp; IRQF_DISABLED)) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; local_irq_enable_in_hardirq(); </P>
<P>&nbsp;&nbsp;&nbsp; &#8230;&#8230; <BR>} </P></BLOCKQUOTE>
<P>&#22914;&#26524;&#27809;&#26377;&#35774;&#23450;IRQF_DISABLED&#65288;slow handler&#65289;&#65292;&#21017;&#25171;&#24320;&#26412;CPU&#30340;&#20013;&#26029;&#12290;&#28982;&#32780;&#65292;&#38543;&#30528;&#36719;&#30828;&#20214;&#25216;&#26415;&#30340;&#21457;&#23637;&#65306; </P>
<P>&#65288;1&#65289;&#30828;&#20214;&#26041;&#38754;&#65292;CPU&#36234;&#26469;&#36234;&#24555;&#65292;&#21407;&#26469;slow handler&#20063;&#21487;&#20197;&#24456;&#24555;&#25191;&#34892;&#23436;&#27605; </P>
<P>&#65288;2&#65289;&#36719;&#20214;&#26041;&#38754;&#65292;linux kernel&#25552;&#20379;&#20102;&#26356;&#22810;&#26356;&#22909;&#30340;bottom half&#30340;&#26426;&#21046; </P>
<P>&#22240;&#27492;&#65292;&#22312;&#26032;&#30340;&#20869;&#26680;&#20013;&#65292;&#27604;&#22914;3.14&#65292;IRQF_DISABLED&#34987;&#24223;&#24323;&#20102;&#12290;&#25105;&#20204;&#21487;&#20197;&#24605;&#32771;&#19968;&#19979;&#65292;&#20026;&#20309;&#35201;&#26377;slow handler&#65311;&#27599;&#19968;&#20010;handler&#19981;&#37117;&#26159;&#24212;&#35813;&#36805;&#36895;&#25191;&#34892;&#23436;&#27605;&#65292;&#36820;&#22238;&#20013;&#26029;&#29616;&#22330;&#21527;&#65311;&#27492;&#22806;&#65292;&#20219;&#24847;&#20013;&#26029;&#21487;&#20197;&#25171;&#26029;slow handler&#25191;&#34892;&#65292;&#20174;&#32780;&#23548;&#33268;&#20013;&#26029;&#23884;&#22871;&#21152;&#28145;&#65292;&#23545;&#20869;&#26680;&#26632;&#20063;&#26159;&#32771;&#39564;&#12290;&#22240;&#27492;&#65292;&#26032;&#30340;&#20869;&#26680;&#20013;&#22312;interrupt specific handler&#20013;&#26159;&#20840;&#31243;&#20851;&#38381;CPU&#20013;&#26029;&#30340;&#12290; </P>
<P><BR>3&#12289;IRQ number </P>
<P>&#20174;CPU&#30340;&#35282;&#24230;&#30475;&#65292;&#26080;&#35770;&#22806;&#37096;&#30340;Interrupt controller&#30340;&#32467;&#26500;&#26159;&#22810;&#20040;&#22797;&#26434;&#65292;I do not care&#65292;&#25105;&#21482;&#20851;&#24515;&#21457;&#29983;&#20102;&#19968;&#20010;&#25351;&#23450;&#22806;&#35774;&#30340;&#20013;&#26029;&#65292;&#38656;&#35201;&#35843;&#29992;&#30456;&#24212;&#30340;&#22806;&#35774;&#20013;&#26029;&#30340;handler&#23601;OK&#20102;&#12290;&#26356;&#20934;&#30830;&#30340;&#35828;&#26159;&#36890;&#29992;&#20013;&#26029;&#22788;&#29702;&#27169;&#22359;&#19981;&#20851;&#24515;&#22806;&#37096;interrupt controller&#30340;&#32452;&#32455;&#32454;&#33410;&#65288;&#30005;&#28304;&#31649;&#29702;&#27169;&#22359;&#24403;&#28982;&#35201;&#20851;&#27880;&#20855;&#20307;&#30340;&#35774;&#22791;&#65288;interrupt controller&#20063;&#26159;&#35774;&#22791;&#65289;&#30340;&#25299;&#25169;&#32467;&#26500;&#65289;&#12290;&#19968;&#35328;&#20197;&#34109;&#20043;&#65292;&#36890;&#29992;&#20013;&#26029;&#22788;&#29702;&#27169;&#22359;&#21487;&#20197;&#29992;&#19968;&#20010;&#32447;&#24615;&#30340;table&#26469;&#31649;&#29702;&#19968;&#20010;&#20010;&#30340;&#22806;&#37096;&#20013;&#26029;&#65292;&#36825;&#20010;&#34920;&#30340;&#27599;&#20010;&#20803;&#32032;&#23601;&#26159;&#19968;&#20010;irq&#25551;&#36848;&#31526;&#65292;&#22312;kernel&#20013;&#23450;&#20041;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>struct irq_desc irq_desc[NR_IRQS] __cacheline_aligned_in_smp = { <BR>&nbsp;&nbsp;&nbsp; [0 ... NR_IRQS-1] = { <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .handle_irq&nbsp;&nbsp;&nbsp; = handle_bad_irq, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .depth&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = 1, <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .lock&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = __RAW_SPIN_LOCK_UNLOCKED(irq_desc-&gt;lock), <BR>&nbsp;&nbsp;&nbsp; } <BR>}; </P></BLOCKQUOTE>
<P>&#31995;&#32479;&#20013;&#27599;&#19968;&#20010;&#36830;&#25509;&#22806;&#35774;&#30340;&#20013;&#26029;&#32447;&#65288;irq request line&#65289;&#29992;&#19968;&#20010;&#20013;&#26029;&#25551;&#36848;&#31526;&#26469;&#25551;&#36848;&#65292;&#27599;&#19968;&#20010;&#22806;&#35774;&#30340;interrupt request line&#20998;&#37197;&#19968;&#20010;&#20013;&#26029;&#21495;&#65288;irq number&#65289;&#65292;&#31995;&#32479;&#20013;&#26377;&#22810;&#23569;&#20010;&#20013;&#26029;&#32447;&#65288;&#25110;&#32773;&#21483;&#20570;&#20013;&#26029;&#28304;&#65289;&#23601;&#26377;&#22810;&#23569;&#20010;&#20013;&#26029;&#25551;&#36848;&#31526;&#65288;struct irq_desc&#65289;&#12290;NR_IRQS&#23450;&#20041;&#20102;&#35813;&#30828;&#20214;&#24179;&#21488;IRQ&#30340;&#26368;&#22823;&#25968;&#30446;&#12290; </P>
<P>&#24635;&#20043;&#65292;&#19968;&#20010;&#38745;&#24577;&#23450;&#20041;&#30340;&#34920;&#26684;&#65292;irq number&#20316;&#20026;index&#65292;&#27599;&#20010;&#25551;&#36848;&#31526;&#37117;&#26159;&#32039;&#23494;&#30340;&#25490;&#22312;&#19968;&#36215;&#65292;&#19968;&#20999;&#30475;&#36215;&#26469;&#24456;&#32654;&#22909;&#65292;&#20294;&#26159;&#29616;&#23454;&#24456;&#27531;&#37239;&#30340;&#12290;&#26377;&#20123;&#31995;&#32479;&#21487;&#33021;&#20250;&#23450;&#20041;&#19968;&#20010;&#24456;&#22823;&#30340;NR_IRQS&#65292;&#20294;&#26159;&#21482;&#26159;&#24819;&#29992;&#20854;&#20013;&#30340;&#33509;&#24178;&#20010;&#65292;&#25442;&#21477;&#35805;&#35828;&#65292;&#36825;&#20010;&#38745;&#24577;&#23450;&#20041;&#30340;&#34920;&#26684;&#19981;&#26159;&#27599;&#20010;entry&#37117;&#26159;&#26377;&#25928;&#30340;&#65292;&#26377;&#31354;&#27934;&#65292;&#22914;&#26524;&#20351;&#29992;&#38745;&#24577;&#23450;&#20041;&#30340;&#34920;&#26684;&#23601;&#20250;&#23548;&#33268;&#20102;&#20869;&#23384;&#24456;&#22823;&#30340;&#28010;&#36153;&#12290;&#20026;&#20160;&#20040;&#20250;&#26377;&#36825;&#31181;&#38656;&#27714;&#65311;&#25105;&#29468;&#26159;&#21644;&#21508;&#20010;interrupt controller&#30828;&#20214;&#30340;interrupt ID&#26144;&#23556;&#21040;irq number&#30340;&#31639;&#27861;&#26377;&#20851;&#12290;&#22312;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;&#38745;&#24577;&#34920;&#26684;&#19981;&#36866;&#21512;&#20102;&#65292;&#25105;&#20204;&#25913;&#29992;&#19968;&#20010;radix tree&#26469;&#20445;&#23384;&#20013;&#26029;&#25551;&#36848;&#31526;&#65288;HW interrupt&#20316;&#20026;&#32034;&#24341;&#65289;&#12290;&#36825;&#26102;&#20505;&#65292;&#27599;&#19968;&#20010;&#20013;&#26029;&#25551;&#36848;&#31526;&#37117;&#26159;&#21160;&#24577;&#20998;&#37197;&#65292;&#28982;&#21518;&#25554;&#20837;&#21040;radix tree&#20013;&#12290;&#22914;&#26524;&#20320;&#30340;&#31995;&#32479;&#37319;&#29992;&#36825;&#31181;&#31574;&#30053;&#65292;&#37027;&#20040;&#38656;&#35201;&#25171;&#24320;CONFIG_SPARSE_IRQ&#36873;&#39033;&#12290;&#19978;&#38754;&#30340;&#31034;&#24847;&#22270;&#25551;&#36848;&#30340;&#26159;&#38745;&#24577;&#34920;&#26684;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;DB&#65292;&#22914;&#26524;&#25171;&#24320;CONFIG_SPARSE_IRQ&#36873;&#39033;&#65292;&#31995;&#32479;&#20351;&#29992;Radix tree&#26469;&#20445;&#23384;&#20013;&#26029;&#25551;&#36848;&#31526;DB&#65292;&#19981;&#36807;&#27010;&#24565;&#21644;&#38745;&#24577;&#34920;&#26684;&#26159;&#31867;&#20284;&#30340;&#12290; </P>
<P>&#27492;&#22806;&#65292;&#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65292;&#22312;&#26087;&#20869;&#26680;&#20013;&#65292;IRQ number&#21644;&#30828;&#20214;&#30340;&#36830;&#25509;&#26377;&#19968;&#23450;&#30340;&#20851;&#31995;&#65292;&#20294;&#26159;&#65292;&#22312;&#24341;&#20837;irq domain&#21518;&#65292;IRQ number&#24050;&#32463;&#21464;&#25104;&#19968;&#20010;&#21333;&#32431;&#30340;number&#65292;&#21644;&#30828;&#20214;&#27809;&#26377;&#20219;&#20309;&#20851;&#31995;&#12290; </P>
<P>&nbsp; </P>
<P>&#19977;&#12289;&#20013;&#26029;&#25551;&#36848;&#31526;&#25968;&#25454;&#32467;&#26500; </P>
<P>1&#12289;&#24213;&#23618;irq chip&#30456;&#20851;&#30340;&#25968;&#25454;&#32467;&#26500; </P>
<P>&#20013;&#26029;&#25551;&#36848;&#31526;&#20013;&#24212;&#35813;&#20250;&#21253;&#25324;&#24213;&#23618;irq chip&#30456;&#20851;&#30340;&#25968;&#25454;&#32467;&#26500;&#65292;linux kernel&#20013;&#25226;&#36825;&#20123;&#25968;&#25454;&#32452;&#32455;&#22312;&#19968;&#36215;&#65292;&#24418;&#25104;struct irq_data&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>struct irq_data { <BR>&nbsp;&nbsp;&nbsp; u32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; mask;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;TODO <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;IRQ number <BR>&nbsp;&nbsp;&nbsp; unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; hwirq;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;HW interrupt ID <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; node;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;NUMA node index <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; state_use_accessors;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#24213;&#23618;&#29366;&#24577;&#65292;&#21442;&#32771;IRQD_xxxx <BR>&nbsp;&nbsp;&nbsp; struct irq_chip&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *chip;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35813;&#20013;&#26029;&#25551;&#36848;&#31526;&#23545;&#24212;&#30340;irq chip&#25968;&#25454;&#32467;&#26500; <BR>&nbsp;&nbsp;&nbsp; struct irq_domain&nbsp;&nbsp;&nbsp; *domain;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35813;&#20013;&#26029;&#25551;&#36848;&#31526;&#23545;&#24212;&#30340;irq domain&#25968;&#25454;&#32467;&#26500; <BR>&nbsp;&nbsp;&nbsp; void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *handler_data;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#21644;&#22806;&#35774;specific handler&#30456;&#20851;&#30340;&#31169;&#26377;&#25968;&#25454; <BR>&nbsp;&nbsp;&nbsp; void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *chip_data;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#21644;&#20013;&#26029;&#25511;&#21046;&#22120;&#30456;&#20851;&#30340;&#31169;&#26377;&#25968;&#25454; <BR>&nbsp;&nbsp;&nbsp; struct msi_desc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *msi_desc; <BR>&nbsp;&nbsp;&nbsp; cpumask_var_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; affinity;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#21644;irq affinity&#30456;&#20851; <BR>}; </P></BLOCKQUOTE>
<P>&#20013;&#26029;&#26377;&#20004;&#31181;&#24418;&#24577;&#65292;&#19968;&#31181;&#23601;&#26159;&#30452;&#25509;&#36890;&#36807;signal&#30456;&#36830;&#65292;&#29992;&#30005;&#24179;&#25110;&#32773;&#36793;&#32536;&#35302;&#21457;&#12290;&#21478;&#22806;&#19968;&#31181;&#26159;&#22522;&#20110;&#28040;&#24687;&#30340;&#65292;&#34987;&#31216;&#20026;MSI (Message Signaled Interrupts)&#12290;msi_desc&#26159;MSI&#31867;&#22411;&#30340;&#20013;&#26029;&#30456;&#20851;&#65292;&#36825;&#37324;&#19981;&#20877;&#25551;&#36848;&#12290; </P>
<P>node&#25104;&#21592;&#29992;&#26469;&#20445;&#23384;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#20869;&#23384;&#20301;&#20110;&#21738;&#19968;&#20010;memory node&#19978;&#12290; &#23545;&#20110;&#25903;&#25345;NUMA&#65288;Non Uniform Memory Access Architecture&#65289;&#30340;&#31995;&#32479;&#65292;&#20854;&#20869;&#23384;&#31354;&#38388;&#24182;&#19981;&#26159;&#22343;&#19968;&#30340;&#65292;&#32780;&#26159;&#34987;&#21010;&#20998;&#25104;&#19981;&#21516;&#30340;node&#65292;&#23545;&#20110;&#19981;&#21516;&#30340;memory node&#65292;CPU&#20854;&#35775;&#38382;&#36895;&#24230;&#26159;&#19981;&#19968;&#26679;&#30340;&#12290;&#22914;&#26524;&#19968;&#20010;IRQ&#22823;&#37096;&#20998;&#65288;&#25110;&#32773;&#22266;&#23450;&#65289;&#30001;&#26576;&#19968;&#20010;CPU&#22788;&#29702;&#65292;&#37027;&#20040;&#22312;&#21160;&#24577;&#20998;&#37197;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#26102;&#20505;&#65292;&#24212;&#35813;&#32771;&#34385;&#23558;&#20869;&#23384;&#20998;&#37197;&#22312;&#35813;CPU&#35775;&#38382;&#36895;&#24230;&#27604;&#36739;&#24555;&#30340;memory node&#19978;&#12290; </P>
<P>&nbsp; </P>
<P>2&#12289;irq chip&#25968;&#25454;&#32467;&#26500; </P>
<P>Interrupt controller&#25551;&#36848;&#31526;&#65288;struct irq_chip&#65289;&#21253;&#25324;&#20102;&#33509;&#24178;&#21644;&#20855;&#20307;Interrupt controller&#30456;&#20851;&#30340;callback&#20989;&#25968;&#65292;&#25105;&#20204;&#24635;&#32467;&#22914;&#19979;&#65306; </P>
<TABLE class=ke-zeroborder cellSpacing=0 cellPadding=2 width=700 border=0>
<TBODY>
<TR>
<TD vAlign=top width=199>&#25104;&#21592;&#21517;&#23383; </TD>
<TD vAlign=top width=501>&#25551;&#36848; </TD></TR>
<TR>
<TD vAlign=top width=199>name </TD>
<TD vAlign=top width=501>&#35813;&#20013;&#26029;&#25511;&#21046;&#22120;&#30340;&#21517;&#23383;&#65292;&#29992;&#20110;/proc/interrupts&#20013;&#30340;&#26174;&#31034; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_startup </TD>
<TD vAlign=top width=501>start up &#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID&#12290;&#22914;&#26524;&#19981;&#35774;&#23450;&#30340;&#35805;&#65292;default&#20250;&#34987;&#35774;&#23450;&#20026;enable&#20989;&#25968; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_shutdown </TD>
<TD vAlign=top width=501>shutdown &#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID&#12290;&#22914;&#26524;&#19981;&#35774;&#23450;&#30340;&#35805;&#65292;default&#20250;&#34987;&#35774;&#23450;&#20026;disable&#20989;&#25968; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_enable </TD>
<TD vAlign=top width=501>enable&#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID&#12290;&#22914;&#26524;&#19981;&#35774;&#23450;&#30340;&#35805;&#65292;default&#20250;&#34987;&#35774;&#23450;&#20026;unmask&#20989;&#25968; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_disable </TD>
<TD vAlign=top width=501>disable&#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID&#12290; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_ack </TD>
<TD vAlign=top width=501>&#21644;&#20855;&#20307;&#30340;&#30828;&#20214;&#30456;&#20851;&#65292;&#26377;&#20123;&#20013;&#26029;&#25511;&#21046;&#22120;&#24517;&#39035;&#22312;Ack&#20043;&#21518;&#65288;&#28165;&#38500;pending&#30340;&#29366;&#24577;&#65289;&#25165;&#33021;&#25509;&#21463;&#21040;&#26032;&#30340;&#20013;&#26029;&#12290; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_mask </TD>
<TD vAlign=top width=501>mask&#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID </TD></TR>
<TR>
<TD vAlign=top width=199>irq_mask_ack </TD>
<TD vAlign=top width=501>mask&#24182;ack&#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID&#12290; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_unmask </TD>
<TD vAlign=top width=501>mask&#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID </TD></TR>
<TR>
<TD vAlign=top width=199>irq_eoi </TD>
<TD vAlign=top width=501>&#26377;&#20123;interrupt controler&#65288;&#20363;&#22914;GIC&#65289;&#25552;&#20379;&#20102;&#36825;&#26679;&#30340;&#23492;&#23384;&#22120;&#25509;&#21475;&#65292;&#35753;CPU&#21487;&#20197;&#36890;&#30693;interrupt controller&#65292;&#23427;&#24050;&#32463;&#22788;&#29702;&#23436;&#19968;&#20010;&#20013;&#26029; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_set_affinity </TD>
<TD vAlign=top width=501>&#22312;SMP&#30340;&#24773;&#20917;&#19979;&#65292;&#21487;&#20197;&#36890;&#36807;&#35813;callback&#20989;&#25968;&#35774;&#23450;CPU affinity </TD></TR>
<TR>
<TD vAlign=top width=199>irq_retrigger </TD>
<TD vAlign=top width=501>&#37325;&#26032;&#35302;&#21457;&#19968;&#27425;&#20013;&#26029;&#65292;&#19968;&#33324;&#29992;&#22312;&#20013;&#26029;&#20002;&#22833;&#30340;&#22330;&#26223;&#19979;&#12290;&#22914;&#26524;&#30828;&#20214;&#19981;&#25903;&#25345;retrigger&#65292;&#21487;&#20197;&#20351;&#29992;&#36719;&#20214;&#30340;&#26041;&#27861;&#12290; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_set_type </TD>
<TD vAlign=top width=501>&#35774;&#23450;&#25351;&#23450;&#30340;irq domain&#19978;&#30340;HW interrupt ID&#30340;&#35302;&#21457;&#26041;&#24335;&#65292;&#30005;&#24179;&#35302;&#21457;&#36824;&#26159;&#36793;&#32536;&#35302;&#21457; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_set_wake </TD>
<TD vAlign=top width=501>&#21644;&#30005;&#28304;&#31649;&#29702;&#30456;&#20851;&#65292;&#29992;&#26469;enable/disable&#25351;&#23450;&#30340;interrupt source&#20316;&#20026;&#21796;&#37266;&#30340;&#26465;&#20214;&#12290; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_bus_lock </TD>
<TD vAlign=top width=501>&#26377;&#20123;interrupt controller&#26159;&#36830;&#25509;&#21040;&#24930;&#36895;&#24635;&#32447;&#19978;&#65288;&#20363;&#22914;&#19968;&#20010;i2c&#25509;&#21475;&#30340;IO expander&#33455;&#29255;&#65289;&#65292;&#22312;&#35775;&#38382;&#36825;&#20123;&#33455;&#29255;&#30340;&#26102;&#20505;&#38656;&#35201;lock&#20303;&#37027;&#20010;&#24930;&#36895;bus&#65288;&#21482;&#33021;&#26377;&#19968;&#20010;client&#22312;&#20351;&#29992;I2C bus&#65289; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_bus_sync_unlock </TD>
<TD vAlign=top width=501>unlock&#24930;&#36895;&#24635;&#32447; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_suspend <BR>irq_resume <BR>irq_pm_shutdown </TD>
<TD vAlign=top width=501>&#30005;&#28304;&#31649;&#29702;&#30456;&#20851;&#30340;callback&#20989;&#25968; </TD></TR>
<TR>
<TD vAlign=top width=199>irq_calc_mask </TD>
<TD vAlign=top width=501>TODO </TD></TR>
<TR>
<TD vAlign=top width=199>irq_print_chip </TD>
<TD vAlign=top width=501>/proc/interrupts&#20013;&#30340;&#20449;&#24687;&#26174;&#31034; </TD></TR></TBODY></TABLE>
<P>&nbsp; </P>
<P>3&#12289;&#20013;&#26029;&#25551;&#36848;&#31526; </P>
<P>&#22312;linux kernel&#20013;&#65292;&#20351;&#29992;struct irq_desc&#26469;&#25551;&#36848;&#19968;&#20010;&#22806;&#35774;&#30340;&#20013;&#26029;&#65292;&#25105;&#20204;&#31216;&#20043;&#20013;&#26029;&#25551;&#36848;&#31526;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>struct irq_desc { <BR>&nbsp;&nbsp;&nbsp; struct irq_data&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_data; <BR>&nbsp;&nbsp;&nbsp; unsigned int __percpu&nbsp;&nbsp;&nbsp; *kstat_irqs;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;IRQ&#30340;&#32479;&#35745;&#20449;&#24687; <BR>&nbsp;&nbsp;&nbsp; irq_flow_handler_t&nbsp;&nbsp;&nbsp; handle_irq;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;1&#65289; <BR>&nbsp;&nbsp;&nbsp; struct irqaction&nbsp;&nbsp;&nbsp; *action; &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;2&#65289; <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; status_use_accessors;&#65293;&#65293;&#65293;&#65293;&#65293;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#29366;&#24577;&#65292;&#21442;&#32771;IRQ_xxxx <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; core_internal_state__do_not_mess_with_it;&#65293;&#65293;&#65293;&#65293;&#65288;3&#65289; <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; depth;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;4&#65289; <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wake_depth;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;5&#65289; <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_count;&nbsp; &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;6&#65289; <BR>&nbsp;&nbsp;&nbsp; unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; last_unhandled;&nbsp;&nbsp; <BR>&nbsp;&nbsp;&nbsp; unsigned int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irqs_unhandled; <BR>&nbsp;&nbsp;&nbsp; raw_spinlock_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lock;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;7&#65289; <BR>&nbsp;&nbsp;&nbsp; struct cpumask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *percpu_enabled;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;8&#65289; <BR>#ifdef CONFIG_SMP <BR>&nbsp;&nbsp;&nbsp; const struct cpumask&nbsp;&nbsp;&nbsp; *affinity_hint;&#65293;&#65293;&#65293;&#65293;&#21644;irq affinity&#30456;&#20851;&#65292;&#21518;&#32493;&#21333;&#29420;&#25991;&#26723;&#25551;&#36848; <BR>&nbsp;&nbsp;&nbsp; struct irq_affinity_notify *affinity_notify; <BR>#ifdef CONFIG_GENERIC_PENDING_IRQ <BR>&nbsp;&nbsp;&nbsp; cpumask_var_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; pending_mask; <BR>#endif <BR>#endif <BR>&nbsp;&nbsp;&nbsp; unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads_oneshot; &#65293;&#65293;&#65293;&#65293;&#65293;&#65288;9&#65289; <BR>&nbsp;&nbsp;&nbsp; atomic_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; threads_active; <BR>&nbsp;&nbsp;&nbsp; wait_queue_head_t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wait_for_threads; <BR>#ifdef CONFIG_PROC_FS <BR>&nbsp;&nbsp;&nbsp; struct proc_dir_entry&nbsp;&nbsp;&nbsp; *dir;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35813;IRQ&#23545;&#24212;&#30340;proc&#25509;&#21475; <BR>#endif <BR>&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; parent_irq; <BR>&nbsp;&nbsp;&nbsp; struct module&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *owner; <BR>&nbsp;&nbsp;&nbsp; const char&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *name; <BR>} ____cacheline_internodealigned_in_smp </P></BLOCKQUOTE>
<P>&#65288;1&#65289;handle_irq&#23601;&#26159;highlevel irq-events handler&#65292;&#20309;&#35859;high level&#65311;&#31449;&#22312;&#39640;&#22788;&#33258;&#28982;&#30475;&#19981;&#21040;&#32454;&#33410;&#12290;&#25105;&#35748;&#20026;high level&#26159;&#21644;specific&#30456;&#23545;&#65292;specific handler&#22788;&#29702;&#20855;&#20307;&#30340;&#20107;&#21153;&#65292;&#20363;&#22914;&#22788;&#29702;&#19968;&#20010;&#25353;&#38190;&#20013;&#26029;&#12289;&#22788;&#29702;&#19968;&#20010;&#30913;&#30424;&#20013;&#26029;&#12290;&#32780;high level&#21017;&#26159;&#23545;&#22788;&#29702;&#21508;&#31181;&#20013;&#26029;&#20132;&#20114;&#36807;&#31243;&#30340;&#19968;&#20010;&#25277;&#35937;&#65292;&#26681;&#25454;&#19979;&#21015;&#30828;&#20214;&#30340;&#19981;&#21516;&#65306; </P>
<P>&#65288;a&#65289;&#20013;&#26029;&#25511;&#21046;&#22120; </P>
<P>&#65288;b&#65289;IRQ trigger type </P>
<P>highlevel irq-events handler&#21487;&#20197;&#20998;&#25104;&#65306; </P>
<P>&#65288;a&#65289;&#22788;&#29702;&#30005;&#24179;&#35302;&#21457;&#31867;&#22411;&#30340;&#20013;&#26029;handler&#65288;handle_level_irq&#65289; </P>
<P>&#65288;b&#65289;&#22788;&#29702;&#36793;&#32536;&#35302;&#21457;&#31867;&#22411;&#30340;&#20013;&#26029;handler&#65288;handle_edge_irq&#65289; </P>
<P>&#65288;c&#65289;&#22788;&#29702;&#31616;&#21333;&#31867;&#22411;&#30340;&#20013;&#26029;handler&#65288;handle_simple_irq&#65289; </P>
<P>&#65288;d&#65289;&#22788;&#29702;EOI&#31867;&#22411;&#30340;&#20013;&#26029;handler&#65288;handle_fasteoi_irq&#65289; </P>
<P>&#20250;&#21478;&#22806;&#26377;&#19968;&#20221;&#25991;&#26723;&#23545;high level handler&#36827;&#34892;&#26356;&#35814;&#32454;&#30340;&#25551;&#36848;&#12290; </P>
<P>&#65288;2&#65289;action&#25351;&#21521;&#19968;&#20010;struct irqaction&#30340;&#38142;&#34920;&#12290;&#22914;&#26524;&#19968;&#20010;interrupt request line&#20801;&#35768;&#20849;&#20139;&#65292;&#37027;&#20040;&#35813;&#38142;&#34920;&#20013;&#30340;&#25104;&#21592;&#21487;&#20197;&#26159;&#22810;&#20010;&#65292;&#21542;&#21017;&#65292;&#35813;&#38142;&#34920;&#21482;&#26377;&#19968;&#20010;&#33410;&#28857;&#12290; </P>
<P>&#65288;3&#65289;&#36825;&#20010;&#26377;&#30528;&#24456;&#38271;&#21517;&#23383;&#30340;&#31526;&#21495;core_internal_state__do_not_mess_with_it&#22312;&#20855;&#20307;&#20351;&#29992;&#30340;&#26102;&#20505;&#34987;&#34987;&#31616;&#21270;&#25104;istate&#65292;&#34920;&#31034;internal state&#12290;&#23601;&#20687;&#36825;&#20010;&#21517;&#23383;&#23450;&#20041;&#30340;&#37027;&#26679;&#65292;&#25105;&#20204;&#26368;&#22909;&#19981;&#35201;&#30452;&#25509;&#20462;&#25913;&#23427;&#12290; </P>
<BLOCKQUOTE>
<P>#define istate core_internal_state__do_not_mess_with_it </P></BLOCKQUOTE>
<P>&#65288;4&#65289;&#25105;&#20204;&#21487;&#20197;&#36890;&#36807;enable&#21644;disable&#19968;&#20010;&#25351;&#23450;&#30340;IRQ&#26469;&#25511;&#21046;&#20869;&#26680;&#30340;&#24182;&#21457;&#65292;&#20174;&#32780;&#20445;&#25252;&#20020;&#30028;&#21306;&#30340;&#25968;&#25454;&#12290;&#23545;&#19968;&#20010;IRQ&#36827;&#34892;enable&#21644;disable&#30340;&#25805;&#20316;&#21487;&#20197;&#23884;&#22871;&#65288;&#24403;&#28982;&#19968;&#23450;&#35201;&#25104;&#23545;&#20351;&#29992;&#65289;&#65292;depth&#26159;&#25551;&#36848;&#23884;&#22871;&#28145;&#24230;&#30340;&#20449;&#24687;&#12290; </P>
<P>&#65288;5&#65289;wake_depth&#26159;&#21644;&#30005;&#28304;&#31649;&#29702;&#20013;&#30340;wake up source&#30456;&#20851;&#12290;&#36890;&#36807;irq_set_irq_wake&#25509;&#21475;&#21487;&#20197;enable&#25110;&#32773;disable&#19968;&#20010;IRQ&#20013;&#26029;&#26159;&#21542;&#21487;&#20197;&#25226;&#31995;&#32479;&#20174;suspend&#29366;&#24577;&#21796;&#37266;&#12290;&#21516;&#26679;&#30340;&#65292;&#23545;&#19968;&#20010;IRQ&#36827;&#34892;wakeup source&#30340;enable&#21644;disable&#30340;&#25805;&#20316;&#21487;&#20197;&#23884;&#22871;&#65288;&#24403;&#28982;&#19968;&#23450;&#35201;&#25104;&#23545;&#20351;&#29992;&#65289;&#65292;wake_depth&#26159;&#25551;&#36848;&#23884;&#22871;&#28145;&#24230;&#30340;&#20449;&#24687;&#12290; </P>
<P>&#65288;6&#65289;irq_count&#12289;last_unhandled&#21644;irqs_unhandled&#29992;&#20110;&#22788;&#29702;broken IRQ &#30340;&#22788;&#29702;&#12290;&#25152;&#35859;broken IRQ&#23601;&#26159;&#30001;&#20110;&#31181;&#31181;&#21407;&#22240;&#65288;&#20363;&#22914;&#38169;&#35823;firmware&#65289;&#65292;IRQ handler&#27809;&#26377;&#23450;&#21521;&#21040;&#25351;&#23450;&#30340;IRQ&#19978;&#65292;&#24403;&#19968;&#20010;IRQ&#27809;&#26377;&#34987;&#22788;&#29702;&#30340;&#26102;&#20505;&#65292;kernel&#21487;&#20197;&#20026;&#36825;&#20010;&#27809;&#26377;&#34987;&#22788;&#29702;&#30340;handler&#21551;&#21160;scan&#36807;&#31243;&#65292;&#35753;&#31995;&#32479;&#20013;&#25152;&#26377;&#30340;handler&#26469;&#35748;&#39046;&#35813;IRQ&#12290; </P>
<P>&#65288;7&#65289;&#20445;&#25252;&#35813;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;spin lock&#12290; </P>
<P>&#65288;8&#65289;&#19968;&#20010;&#20013;&#26029;&#25551;&#36848;&#31526;&#21487;&#33021;&#20250;&#26377;&#20004;&#31181;&#24773;&#20917;&#65292;&#19968;&#31181;&#26159;&#35813;IRQ&#26159;global&#65292;&#19968;&#26086;disable&#20102;&#35813;irq&#65292;&#37027;&#20040;&#23545;&#20110;&#25152;&#26377;&#30340;CPU&#32780;&#35328;&#37117;&#26159;disable&#30340;&#12290;&#36824;&#26377;&#19968;&#31181;&#24773;&#20917;&#65292;&#23601;&#26159;&#35813;IRQ&#26159;per CPU&#30340;&#65292;&#20063;&#23601;&#26159;&#35828;&#65292;&#22312;&#26576;&#20010;CPU&#19978;disable&#20102;&#35813;irq&#21482;&#26159;disable&#20102;&#26412;CPU&#30340;IRQ&#32780;&#24050;&#65292;&#20854;&#20182;&#30340;CPU&#20173;&#28982;&#26159;enable&#30340;&#12290;percpu_enabled&#26159;&#19968;&#20010;&#25551;&#36848;&#35813;IRQ&#22312;&#21508;&#20010;CPU&#19978;&#26159;&#21542;enable&#25104;&#21592;&#12290; </P>
<P>&#65288;9&#65289;threads_oneshot&#12289;threads_active&#21644;wait_for_threads&#26159;&#21644;IRQ thread&#30456;&#20851;&#65292;&#21518;&#32493;&#25991;&#26723;&#20250;&#19987;&#38376;&#25551;&#36848;&#12290; </P>
<P>&nbsp; </P>
<P>&#22235;&#12289;&#21021;&#22987;&#21270;&#30456;&#20851;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#25509;&#21475; </P>
<P>1&#12289;&#38745;&#24577;&#23450;&#20041;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#21021;&#22987;&#21270; </P>
<BLOCKQUOTE>
<P>int __init early_irq_init(void) <BR>{ <BR>&nbsp;&nbsp;&nbsp; int count, i, node = first_online_node; <BR>&nbsp;&nbsp;&nbsp; struct irq_desc *desc; </P>
<P>&nbsp;&nbsp;&nbsp; init_irq_default_affinity(); </P>
<P>&nbsp;&nbsp;&nbsp; desc = irq_desc; <BR>&nbsp;&nbsp;&nbsp; count = ARRAY_SIZE(irq_desc); </P>
<P>&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; count; i++) {&#65293;&#65293;&#65293;&#36941;&#21382;&#25972;&#20010;lookup table&#65292;&#23545;&#27599;&#19968;&#20010;entry&#36827;&#34892;&#21021;&#22987;&#21270; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; desc[i].kstat_irqs = alloc_percpu(unsigned int);&#65293;&#65293;&#65293;&#20998;&#37197;per cpu&#30340;irq&#32479;&#35745;&#20449;&#24687;&#38656;&#35201;&#30340;&#20869;&#23384; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; alloc_masks(&amp;desc[i], GFP_KERNEL, node);&#65293;&#65293;&#65293;&#20998;&#37197;&#20013;&#26029;&#25551;&#36848;&#31526;&#20013;&#38656;&#35201;&#30340;cpu mask&#20869;&#23384; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; raw_spin_lock_init(&amp;desc[i].lock);&#65293;&#65293;&#65293;&#21021;&#22987;&#21270;spin lock <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; lockdep_set_class(&amp;desc[i].lock, &amp;irq_desc_lock_class); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; desc_set_defaults(i, &amp;desc[i], node, NULL);&#65293;&#65293;&#65293;&#35774;&#23450;default&#20540; <BR>&nbsp;&nbsp;&nbsp; } <BR>&nbsp;&nbsp;&nbsp; return arch_early_irq_init();&#65293;&#65293;&#65293;&#35843;&#29992;arch&#30456;&#20851;&#30340;&#21021;&#22987;&#21270;&#20989;&#25968; <BR>} </P></BLOCKQUOTE>
<P>2&#12289;&#20351;&#29992;Radix tree&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#21021;&#22987;&#21270; </P>
<BLOCKQUOTE>
<P>int __init early_irq_init(void) <BR>{&#8230;&#8230; </P>
<P>&nbsp;&nbsp;&nbsp; initcnt = arch_probe_nr_irqs();&#65293;&#65293;&#65293;&#20307;&#31995;&#32467;&#26500;&#30456;&#20851;&#30340;&#20195;&#30721;&#26469;&#20915;&#23450;&#39044;&#20808;&#20998;&#37197;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#20010;&#25968; </P>
<P>&nbsp;&nbsp;&nbsp; if (initcnt &gt; nr_irqs)&#65293;&#65293;&#65293;initcnt&#26159;&#38656;&#35201;&#22312;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#39044;&#20998;&#37197;&#30340;IRQ&#30340;&#20010;&#25968; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; nr_irqs = initcnt; &#65293;&#65293;&#65293;nr_irqs&#26159;&#24403;&#21069;&#31995;&#32479;&#20013;IRQ number&#30340;&#26368;&#22823;&#20540; </P>
<P>&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; initcnt; i++) {&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#39044;&#20808;&#20998;&#37197;initcnt&#20010;&#20013;&#26029;&#25551;&#36848;&#31526; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; desc = alloc_desc(i, node, NULL);&#65293;&#65293;&#65293;&#20998;&#37197;&#20013;&#26029;&#25551;&#36848;&#31526; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set_bit(i, allocated_irqs);&#65293;&#65293;&#65293;&#35774;&#23450;&#24050;&#32463;alloc&#30340;flag <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_insert_desc(i, desc);&#65293;&#65293;&#65293;&#65293;&#65293;&#25554;&#20837;radix tree <BR>&nbsp;&nbsp;&nbsp; } <BR>&nbsp; &#8230;&#8230; <BR>} </P></BLOCKQUOTE>
<P>&#21363;&#20415;&#26159;&#37197;&#32622;&#20102;CONFIG_SPARSE_IRQ&#36873;&#39033;&#65292;&#22312;&#20013;&#26029;&#25551;&#36848;&#31526;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#65292;&#20063;&#26377;&#26426;&#20250;&#39044;&#20808;&#20998;&#37197;&#19968;&#23450;&#25968;&#37327;&#30340;IRQ&#12290;&#36825;&#20010;&#25968;&#37327;&#30001;arch_probe_nr_irqs&#20915;&#23450;&#65292;&#23545;&#20110;ARM&#32780;&#35328;&#65292;&#20854;arch_probe_nr_irqs&#23450;&#20041;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>int __init arch_probe_nr_irqs(void) <BR>{ <BR>&nbsp;&nbsp;&nbsp; nr_irqs = machine_desc-&gt;nr_irqs ? machine_desc-&gt;nr_irqs : NR_IRQS; <BR>&nbsp;&nbsp;&nbsp; return nr_irqs; <BR>} </P></BLOCKQUOTE>
<P>3&#12289;&#20998;&#37197;&#21644;&#37322;&#25918;&#20013;&#26029;&#25551;&#36848;&#31526; </P>
<P>&#23545;&#20110;&#20351;&#29992;Radix tree&#26469;&#20445;&#23384;&#20013;&#26029;&#25551;&#36848;&#31526;DB&#30340;linux kernel&#65292;&#20854;&#20013;&#26029;&#25551;&#36848;&#31526;&#26159;&#21160;&#24577;&#20998;&#37197;&#30340;&#65292;&#21487;&#20197;&#20351;&#29992;irq_alloc_descs&#21644;irq_free_descs&#26469;&#20998;&#37197;&#21644;&#37322;&#25918;&#20013;&#26029;&#25551;&#36848;&#31526;&#12290;alloc_desc&#20989;&#25968;&#20063;&#20250;&#23545;&#20013;&#26029;&#25551;&#36848;&#31526;&#36827;&#34892;&#21021;&#22987;&#21270;&#65292;&#21021;&#22987;&#21270;&#30340;&#20869;&#23481;&#21644;&#38745;&#24577;&#23450;&#20041;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#21021;&#22987;&#21270;&#36807;&#31243;&#26159;&#19968;&#26679;&#30340;&#12290;&#26368;&#22823;&#21487;&#20197;&#20998;&#37197;&#30340;ID&#26159;IRQ_BITMAP_BITS&#65292;&#23450;&#20041;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>#ifdef CONFIG_SPARSE_IRQ <BR># define IRQ_BITMAP_BITS&nbsp;&nbsp;&nbsp; (NR_IRQS + 8196)&#65293;&#65293;&#65293;&#23545;&#20110;Radix tree&#65292;&#38500;&#20102;&#39044;&#20998;&#37197;&#30340;&#65292;&#36824;&#21487;&#20197;&#21160;&#24577; <BR>#else&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#20998;&#37197;8196&#20010;&#20013;&#26029;&#25551;&#36848;&#31526; <BR># define IRQ_BITMAP_BITS&nbsp;&nbsp;&nbsp; NR_IRQS&#65293;&#65293;&#65293;&#23545;&#20110;&#38745;&#24577;&#23450;&#20041;&#30340;&#65292;IRQ&#26368;&#22823;&#20540;&#23601;&#26159;NR_IRQS <BR>#endif </P></BLOCKQUOTE>
<P>&nbsp; </P>
<P>&#20116;&#12289;&#21644;&#20013;&#26029;&#25511;&#21046;&#22120;&#30456;&#20851;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;&#25509;&#21475; </P>
<P>&#36825;&#37096;&#20998;&#30340;&#25509;&#21475;&#20027;&#35201;&#26377;&#20004;&#31867;&#65292;irq_desc_get_xxx&#21644;irq_set_xxx&#65292;&#30001;&#20110;get&#25509;&#21475;API&#38750;&#24120;&#31616;&#21333;&#65292;&#36825;&#37324;&#19981;&#20877;&#25551;&#36848;&#65292;&#20027;&#35201;&#25551;&#36848;set&#31867;&#21035;&#30340;&#25509;&#21475;API&#12290;&#27492;&#22806;&#65292;&#36824;&#26377;&#19968;&#20123;locked&#29256;&#26412;&#30340;set&#25509;&#21475;API&#65292;&#23450;&#20041;&#20026;__irq_set_xxx&#65292;&#36825;&#20123;API&#30340;&#35843;&#29992;&#32773;&#24212;&#35813;&#24050;&#32463;&#25345;&#26377;&#20445;&#25252;irq desc&#30340;spinlock&#65292;&#22240;&#27492;&#65292;&#36825;&#20123;locked&#29256;&#26412;&#30340;&#25509;&#21475;&#27809;&#26377;&#20013;&#26029;&#25551;&#36848;&#31526;&#30340;spin lock&#36827;&#34892;&#25805;&#20316;&#12290;&#36825;&#20123;&#25509;&#21475;&#26377;&#33258;&#24049;&#29305;&#23450;&#30340;&#20351;&#29992;&#22330;&#21512;&#65292;&#36825;&#37324;&#20063;&#19981;&#35814;&#32454;&#25551;&#36848;&#20102;&#12290; </P>
<P>1&#12289;&#25509;&#21475;&#35843;&#29992;&#26102;&#26426; </P>
<P>kernel&#25552;&#20379;&#20102;&#33509;&#24178;&#30340;&#25509;&#21475;API&#21487;&#20197;&#35753;&#20869;&#26680;&#20854;&#20182;&#27169;&#22359;&#21487;&#20197;&#25805;&#20316;&#25351;&#23450;IRQ number&#30340;&#25551;&#36848;&#31526;&#32467;&#26500;&#12290;&#20013;&#26029;&#25551;&#36848;&#31526;&#20013;&#26377;&#24456;&#22810;&#30340;&#25104;&#21592;&#26159;&#21644;&#24213;&#23618;&#30340;&#20013;&#26029;&#25511;&#21046;&#22120;&#30456;&#20851;&#65292;&#20363;&#22914;&#65306; </P>
<P>&#65288;1&#65289;&#35813;&#20013;&#26029;&#25551;&#36848;&#31526;&#23545;&#24212;&#30340;irq chip </P>
<P>&#65288;2&#65289;&#35813;&#20013;&#26029;&#25551;&#36848;&#31526;&#23545;&#24212;&#30340;irq trigger type </P>
<P>&#65288;3&#65289;high level handler </P>
<P>&#22312;&#36807;&#21435;&#65292;&#31995;&#32479;&#20013;&#21508;&#20010;IRQ number&#26159;&#22266;&#23450;&#20998;&#37197;&#30340;&#65292;&#21508;&#20010;IRQ&#23545;&#24212;&#30340;&#20013;&#26029;&#25511;&#21046;&#22120;&#12289;&#35302;&#21457;&#31867;&#22411;&#31561;&#20063;&#37117;&#26159;&#28165;&#26970;&#30340;&#65292;&#22240;&#27492;&#65292;&#19968;&#33324;&#37117;&#26159;&#22312;machine driver&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#19968;&#27425;&#24615;&#30340;&#36827;&#34892;&#35774;&#23450;&#12290;machine driver&#30340;&#21021;&#22987;&#21270;&#36807;&#31243;&#20250;&#21253;&#25324;&#20013;&#26029;&#31995;&#32479;&#30340;&#21021;&#22987;&#21270;&#65292;&#22312;machine driver&#30340;&#20013;&#26029;&#21021;&#22987;&#21270;&#20989;&#25968;&#20013;&#65292;&#20250;&#35843;&#29992;&#26412;&#25991;&#23450;&#20041;&#30340;&#36825;&#20123;&#25509;&#21475;&#23545;&#21508;&#20010;IRQ number&#23545;&#24212;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#36827;&#34892;irq chip&#12289;&#35302;&#21457;&#31867;&#22411;&#30340;&#35774;&#23450;&#12290; </P>
<P>&#22312;&#24341;&#20837;&#20102;device tree&#12289;&#21160;&#24577;&#20998;&#37197;IRQ number&#20197;&#21450;irq domain&#36825;&#20123;&#27010;&#24565;&#20043;&#21518;&#65292;&#36825;&#20123;&#25509;&#21475;&#30340;&#35843;&#29992;&#26102;&#26426;&#31227;&#21040;&#21508;&#20010;&#20013;&#26029;&#25511;&#21046;&#22120;&#30340;&#21021;&#22987;&#21270;&#20197;&#21450;&#21508;&#20010;&#20855;&#20307;&#30828;&#20214;&#39537;&#21160;&#21021;&#22987;&#21270;&#36807;&#31243;&#20013;&#65292;&#20855;&#20307;&#22914;&#19979;&#65306; </P>
<P>&#65288;1&#65289;&#21508;&#20010;&#20013;&#26029;&#25511;&#21046;&#22120;&#23450;&#20041;&#22909;&#33258;&#24049;&#30340;struct irq_domain_ops callback&#20989;&#25968;&#65292;&#20027;&#35201;&#26159;map&#21644;translate&#20989;&#25968;&#12290; </P>
<P>&#65288;2&#65289;&#22312;&#21508;&#20010;&#20855;&#20307;&#30340;&#30828;&#20214;&#39537;&#21160;&#21021;&#22987;&#21270;&#36807;&#31243;&#20013;&#65292;&#36890;&#36807;device tree&#31995;&#32479;&#21487;&#20197;&#30693;&#36947;&#33258;&#24049;&#30340;&#20013;&#26029;&#20449;&#24687;&#65288;&#36830;&#25509;&#21040;&#21738;&#19968;&#20010;interrupt controler&#12289;&#20351;&#29992;&#35813;interrupt controller&#30340;&#37027;&#20010;HW interrupt ID&#65292;trigger type&#20026;&#20309;&#65289;&#65292;&#35843;&#29992;&#23545;&#24212;&#30340;irq domain&#30340;translate&#36827;&#34892;&#32763;&#35793;&#12289;&#35299;&#26512;&#12290;&#20043;&#21518;&#21487;&#20197;&#21160;&#24577;&#30003;&#35831;&#19968;&#20010;IRQ number&#24182;&#21644;&#35813;&#30828;&#20214;&#22806;&#35774;&#30340;HW interrupt ID&#36827;&#34892;&#26144;&#23556;&#65292;&#35843;&#29992;irq domain&#23545;&#24212;&#30340;map&#20989;&#25968;&#12290;&#22312;map&#20989;&#25968;&#20013;&#65292;&#21487;&#20197;&#35843;&#29992;&#26412;&#33410;&#23450;&#20041;&#30340;&#25509;&#21475;&#36827;&#34892;&#20013;&#26029;&#25551;&#36848;&#31526;&#24213;&#23618;interrupt controller&#30456;&#20851;&#20449;&#24687;&#30340;&#35774;&#23450;&#12290; </P>
<P>&nbsp; </P>
<P>2&#12289;irq_set_chip </P>
<P>&#36825;&#20010;&#25509;&#21475;&#20989;&#25968;&#29992;&#26469;&#35774;&#23450;&#20013;&#26029;&#25551;&#36848;&#31526;&#20013;desc-&gt;irq_data.chip&#25104;&#21592;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>int irq_set_chip(unsigned int irq, struct irq_chip *chip) <BR>{ <BR>&nbsp;&nbsp;&nbsp; unsigned long flags; <BR>&nbsp;&nbsp;&nbsp; struct irq_desc *desc = irq_get_desc_lock(irq, &amp;flags, 0); &#65293;&#65293;&#65293;&#65293;&#65288;1&#65289; </P>
<P>&nbsp;&nbsp;&nbsp; desc-&gt;irq_data.chip = chip; <BR>&nbsp;&nbsp;&nbsp; irq_put_desc_unlock(desc, flags);&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;2&#65289; <BR><BR>&nbsp;&nbsp;&nbsp; irq_reserve_irq(irq);&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;3&#65289; <BR>&nbsp;&nbsp;&nbsp; return 0; <BR>} </P></BLOCKQUOTE>
<P>&#65288;1&#65289;&#33719;&#21462;irq number&#23545;&#24212;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#12290;&#36825;&#37324;&#29992;&#20851;&#38381;&#20013;&#26029;&#65291;spin lock&#26469;&#20445;&#25252;&#20013;&#26029;&#25551;&#36848;&#31526;&#65292;flag&#20013;&#23601;&#26159;&#20445;&#23384;&#30340;&#20851;&#38381;&#20013;&#26029;&#20043;&#21069;&#30340;&#29366;&#24577;flag&#65292;&#21518;&#38754;&#22312;&#65288;2&#65289;&#20013;&#20250;&#24674;&#22797;&#20013;&#26029;flag&#12290; </P>
<P>&#65288;3&#65289;&#21069;&#38754;&#25105;&#20204;&#35828;&#36807;&#65292;irq number&#26377;&#38745;&#24577;&#34920;&#26684;&#23450;&#20041;&#30340;&#65292;&#20063;&#26377;radix tree&#31867;&#22411;&#30340;&#12290;&#23545;&#20110;&#38745;&#24577;&#23450;&#20041;&#30340;&#20013;&#26029;&#25551;&#36848;&#31526;&#65292;&#27809;&#26377;alloc&#30340;&#27010;&#24565;&#12290;&#20294;&#26159;&#65292;&#23545;&#20110;radix tree&#31867;&#22411;&#65292;&#38656;&#35201;&#39318;&#20808;irq_alloc_desc&#25110;&#32773;irq_alloc_descs&#26469;&#20998;&#37197;&#19968;&#20010;&#25110;&#32773;&#19968;&#32452;IRQ number&#65292;&#22312;&#36825;&#20123;alloc&#20989;&#25968;&#20540;&#65292;&#23601;&#20250;set&#37027;&#20123;&#37027;&#20123;&#24050;&#32463;&#20998;&#37197;&#30340;IRQ&#12290;&#23545;&#20110;&#38745;&#24577;&#34920;&#26684;&#32780;&#35328;&#65292;&#20854;IRQ&#27809;&#26377;&#20998;&#37197;&#65292;&#22240;&#27492;&#65292;&#36825;&#37324;&#36890;&#36807;irq_reserve_irq&#20989;&#25968;&#26631;&#35782;&#35813;IRQ&#24050;&#32463;&#20998;&#37197;&#65292;&#34429;&#28982;&#23545;&#20110;CONFIG_SPARSE_IRQ&#65288;&#20351;&#29992;radix tree&#65289;&#30340;&#37197;&#32622;&#32780;&#35328;&#65292;&#36825;&#20010;&#25805;&#20316;&#37325;&#22797;&#20102;&#65288;&#22312;alloc&#30340;&#26102;&#20505;&#24050;&#32463;&#35774;&#23450;&#20102;&#65289;&#12290; </P>
<P>&nbsp; </P>
<P>3&#12289;irq_set_irq_type </P>
<P>&#36825;&#20010;&#20989;&#25968;&#26159;&#29992;&#26469;&#35774;&#23450;&#35813;irq number&#30340;trigger type&#30340;&#12290; </P>
<BLOCKQUOTE>
<P>int irq_set_irq_type(unsigned int irq, unsigned int type) <BR>{ <BR>&nbsp;&nbsp;&nbsp; unsigned long flags; <BR>&nbsp;&nbsp;&nbsp; struct irq_desc *desc = irq_get_desc_buslock(irq, &amp;flags, IRQ_GET_DESC_CHECK_GLOBAL); <BR>&nbsp;&nbsp;&nbsp; int ret = 0; </P>
<P>&nbsp;&nbsp;&nbsp; type &amp;= IRQ_TYPE_SENSE_MASK; <BR>&nbsp;&nbsp;&nbsp; ret = __irq_set_trigger(desc, irq, type); <BR>&nbsp;&nbsp;&nbsp; irq_put_desc_busunlock(desc, flags); <BR>&nbsp;&nbsp;&nbsp; return ret; <BR>} </P></BLOCKQUOTE>
<P>&#26469;&#21040;&#36825;&#20010;&#25509;&#21475;&#20989;&#25968;&#65292;&#31532;&#19968;&#20010;&#38382;&#39064;&#23601;&#26159;&#65306;&#20026;&#20309;irq_set_chip&#25509;&#21475;&#20989;&#25968;&#20351;&#29992;irq_get_desc_lock&#26469;&#33719;&#21462;&#20013;&#26029;&#25551;&#36848;&#31526;&#65292;&#32780;irq_set_irq_type&#36825;&#20010;&#20989;&#25968;&#21364;&#38656;&#35201;irq_get_desc_buslock&#21602;&#65311;&#20854;&#23454;&#20063;&#24456;&#31616;&#21333;&#65292;irq_set_chip&#19981;&#38656;&#35201;&#35775;&#38382;&#24213;&#23618;&#30340;irq chip&#65288;&#20063;&#23601;&#26159;interrupt controller&#65289;&#65292;&#20294;&#26159;irq_set_irq_type&#38656;&#35201;&#12290;&#35774;&#23450;&#19968;&#20010;IRQ&#30340;trigger type&#26368;&#32456;&#35201;&#35843;&#29992;desc-&gt;irq_data.chip-&gt;irq_set_type&#20989;&#25968;&#23545;&#24213;&#23618;&#30340;interrupt controller&#36827;&#34892;&#35774;&#23450;&#12290;&#36825;&#26102;&#20505;&#65292;&#38382;&#39064;&#26469;&#20102;&#65292;&#23545;&#20110;&#23884;&#20837;SOC&#20869;&#37096;&#30340;interrupt controller&#65292;&#24403;&#28982;&#27809;&#26377;&#38382;&#39064;&#65292;&#22240;&#20026;&#35775;&#38382;&#36825;&#20123;&#20013;&#26029;&#25511;&#21046;&#22120;&#30340;&#23492;&#23384;&#22120;memory map&#21040;&#20102;CPU&#30340;&#22320;&#22336;&#31354;&#38388;&#65292;&#35775;&#38382;&#38750;&#24120;&#30340;&#24555;&#65292;&#22240;&#27492;&#65292;&#20851;&#38381;&#20013;&#26029;&#65291;spin lock&#26469;&#20445;&#25252;&#20013;&#26029;&#25551;&#36848;&#31526;&#24403;&#28982;&#27809;&#26377;&#38382;&#39064;&#65292;&#20294;&#26159;&#65292;&#22914;&#26524;&#35813;interrupt controller&#26159;&#19968;&#20010;I2C&#25509;&#21475;&#30340;IO expander&#33455;&#29255;&#65288;&#36825;&#31867;&#33455;&#29255;&#26159;&#25193;&#23637;&#30340;IO&#65292;&#20063;&#21487;&#20197;&#25552;&#20379;&#20013;&#26029;&#21151;&#33021;&#65289;&#65292;&#36825;&#26102;&#65292;&#35753;&#20854;&#20182;CPU&#36827;&#34892;spin&#25805;&#20316;&#22826;&#28010;&#36153;CPU&#26102;&#38388;&#20102;&#65288;bus&#25805;&#20316;&#22826;&#24930;&#20102;&#65292;&#20250;spin&#24456;&#20037;&#30340;&#65289;&#12290;&#32959;&#20040;&#21150;&#65311;&#24403;&#28982;&#21482;&#33021;&#26159;&#29992;&#20854;&#20182;&#26041;&#27861;lock&#20303;bus&#20102;&#65288;&#20363;&#22914;mutex&#65292;&#20855;&#20307;&#23454;&#29616;&#26159;&#21644;irq chip&#20013;&#30340;irq_bus_lock&#23454;&#29616;&#30456;&#20851;&#65289;&#12290;&#19968;&#26086;lock&#20303;&#20102;slow bus&#65292;&#28982;&#21518;&#23601;&#21487;&#20197;&#20851;&#38381;&#20013;&#26029;&#20102;&#65288;&#20013;&#26029;&#29366;&#24577;&#20445;&#23384;&#22312;flag&#20013;&#65289;&#12290; </P>
<P>&#35299;&#20915;&#20102;bus lock&#30340;&#30097;&#38382;&#21518;&#65292;&#36824;&#26377;&#19968;&#20010;&#30475;&#36215;&#26469;&#22855;&#22855;&#24618;&#24618;&#30340;&#23439;&#65306;IRQ_GET_DESC_CHECK_GLOBAL&#12290;&#20026;&#20309;&#22312;irq_set_chip&#20989;&#25968;&#20013;&#19981;&#35774;&#23450;&#26816;&#26597;&#65288;check&#30340;&#21442;&#25968;&#26159;0&#65289;&#65292;&#32780;&#22312;irq_set_irq_type&#25509;&#21475;&#20989;&#25968;&#20013;&#35201;&#35774;&#23450;global&#30340;check&#65292;&#21040;&#24213;&#26159;&#20160;&#20040;&#24847;&#24605;&#21602;&#65311;&#26082;&#28982;&#35201;&#26816;&#26597;&#65292;&#37027;&#20040;&#26816;&#26597;&#20160;&#20040;&#21602;&#65311;&#21644;&#8220;global&#8221;&#23545;&#24212;&#30340;&#19981;&#26159;local&#32780;&#26159;&#8220;per CPU&#8221;&#65292;&#20869;&#26680;&#20013;&#30340;&#23439;&#23450;&#20041;&#26159;&#65306;IRQ_GET_DESC_CHECK_PERCPU&#12290;SMP&#24773;&#20917;&#19979;&#65292;&#20174;&#31995;&#32479;&#35282;&#24230;&#30475;&#65292;&#20013;&#26029;&#26377;&#20004;&#31181;&#24418;&#24577;&#65288;&#25110;&#32773;&#21483;mode&#65289;&#65306; </P>
<P>&#65288;1&#65289;1-N mode&#12290;&#21482;&#26377;1&#20010;processor&#22788;&#29702;&#20013;&#26029; </P>
<P>&#65288;2&#65289;N-N mode&#12290;&#25152;&#26377;&#30340;processor&#37117;&#26159;&#29420;&#31435;&#30340;&#25910;&#21040;&#20013;&#26029;&#65292;&#22914;&#26524;&#26377;N&#20010;processor&#25910;&#21040;&#20013;&#26029;&#65292;&#37027;&#20040;&#23601;&#26377;N&#20010;&#22788;&#29702;&#22120;&#26469;&#22788;&#29702;&#35813;&#20013;&#26029;&#12290; </P>
<P>&#21548;&#36215;&#26469;&#26377;&#20123;&#25277;&#35937;&#65292;&#25105;&#20204;&#36824;&#26159;&#29992;GIC&#20316;&#20026;&#20363;&#23376;&#26469;&#20855;&#20307;&#25551;&#36848;&#12290;&#22312;GIC&#20013;&#65292;SPI&#20351;&#29992;1-N&#27169;&#22411;&#65292;&#32780;PPI&#21644;SGI&#20351;&#29992;N-N&#27169;&#22411;&#12290;&#23545;&#20110;SPI&#65292;&#30001;&#20110;&#37319;&#29992;&#20102;1-N&#27169;&#22411;&#65292;&#31995;&#32479;&#65288;&#30828;&#20214;&#21152;&#19978;&#36719;&#20214;&#65289;&#24517;&#39035;&#20445;&#35777;&#19968;&#20010;&#20013;&#26029;&#34987;&#19968;&#20010;CPU&#22788;&#29702;&#12290;&#23545;&#20110;GIC&#65292;&#19968;&#20010;SPI&#30340;&#20013;&#26029;&#21487;&#20197;trigger&#22810;&#20010;CPU&#30340;interrupt line&#65288;&#22914;&#26524;Distributor&#20013;&#30340;Interrupt Processor Targets Registers&#26377;&#22810;&#20010;bit&#34987;&#35774;&#23450;&#65289;&#65292;&#20294;&#26159;&#65292;&#35813;interrupt source&#21644;CPU&#30340;&#25509;&#21475;&#23492;&#23384;&#22120;&#65288;&#20363;&#22914;ack register&#65289;&#21482;&#26377;&#19968;&#22871;&#65292;&#20063;&#23601;&#26159;&#35828;&#65292;&#36825;&#20123;&#23492;&#23384;&#22120;&#25509;&#21475;&#26159;&#20840;&#23616;&#30340;&#65292;&#26159;global&#30340;&#65292;&#19968;&#26086;&#19968;&#20010;CPU ack&#65288;&#35835;Interrupt Acknowledge Register&#65292;&#33719;&#21462;interrupt ID&#65289;&#20102;&#35813;&#20013;&#26029;&#65292;&#37027;&#20040;&#20854;&#20182;&#30340;CPU&#30475;&#21040;&#30340;&#35813;interupt source&#30340;&#29366;&#24577;&#20063;&#26159;&#24050;&#32463;ack&#30340;&#29366;&#24577;&#12290;&#22312;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;&#22914;&#26524;&#31532;&#20108;&#20010;CPU ack&#35813;&#20013;&#26029;&#30340;&#26102;&#20505;&#65292;&#23558;&#33719;&#21462;&#19968;&#20010;spurious interrupt ID&#12290; </P>&#23545;&#20110;PPI&#25110;&#32773;SGI&#65292;&#20351;&#29992;N-N mode&#65292;&#20854;interrupt source&#30340;&#23492;&#23384;&#22120;&#26159;per CPU&#30340;&#65292;&#20063;&#23601;&#26159;&#27599;&#20010;CPU&#37117;&#26377;&#33258;&#24049;&#30340;&#12289;&#38024;&#23545;&#35813;interrupt source&#30340;&#23492;&#23384;&#22120;&#25509;&#21475;&#65288;&#36825;&#20123;&#23492;&#23384;&#22120;&#21483;&#20570;banked register&#65289;&#12290;&#19968;&#20010;CPU &#28165;&#38500;&#20102;&#35813;interrupt source&#30340;pending&#29366;&#24577;&#65292;&#20854;&#20182;&#30340;CPU&#24863;&#30693;&#19981;&#21040;&#36825;&#20010;&#21464;&#21270;&#65292;&#23427;&#20204;&#20173;&#28982;&#35748;&#20026;&#35813;&#20013;&#26029;&#26159;pending&#30340;&#12290; 
<P>&#23545;&#20110;irq_set_irq_type&#36825;&#20010;&#25509;&#21475;&#20989;&#25968;&#65292;&#23427;&#26159;for 1-N mode&#30340;interrupt source&#20351;&#29992;&#30340;&#12290;&#22914;&#26524;&#24213;&#23618;&#35774;&#23450;&#35813;interrupt&#26159;per CPU&#30340;&#65292;&#37027;&#20040;irq_set_irq_type&#35201;&#36820;&#22238;&#38169;&#35823;&#12290; </P>
<P>4&#12289;irq_set_chip_data </P>
<P>&#27599;&#20010;irq chip&#24635;&#26377;&#33258;&#24049;&#31169;&#26377;&#30340;&#25968;&#25454;&#65292;&#25105;&#20204;&#31216;&#20043;chip data&#12290;&#20855;&#20307;&#35774;&#23450;chip data&#30340;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>int irq_set_chip_data(unsigned int irq, void *data) <BR>{ <BR>&nbsp;&nbsp;&nbsp; unsigned long flags; <BR>&nbsp;&nbsp;&nbsp; struct irq_desc *desc = irq_get_desc_lock(irq, &amp;flags, 0);&nbsp; <BR>&nbsp;&nbsp;&nbsp; desc-&gt;irq_data.chip_data = data; <BR>&nbsp;&nbsp;&nbsp; irq_put_desc_unlock(desc, flags); <BR>&nbsp;&nbsp;&nbsp; return 0; <BR>} </P></BLOCKQUOTE>
<P>&#22810;&#20040;&#28165;&#26224;&#12289;&#22810;&#20040;&#26126;&#20102;&#65292;&#38656;&#35201;&#25991;&#23383;&#32487;&#32493;&#25551;&#36848;&#21527;&#65311; </P>
<P>5&#12289;&#35774;&#23450;high level handler </P>
<P>&#36825;&#26159;&#20013;&#26029;&#22788;&#29702;&#30340;&#26680;&#24515;&#20869;&#23481;&#65292;__irq_set_handler&#23601;&#26159;&#35774;&#23450;high level handler&#30340;&#25509;&#21475;&#20989;&#25968;&#65292;&#19981;&#36807;&#19968;&#33324;&#19981;&#20250;&#30452;&#25509;&#35843;&#29992;&#65292;&#32780;&#26159;&#36890;&#36807;irq_set_chip_and_handler_name&#25110;&#32773;irq_set_chip_and_handler&#26469;&#36827;&#34892;&#35774;&#23450;&#12290;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>void __irq_set_handler(unsigned int irq, irq_flow_handler_t handle, int is_chained, const char *name) <BR>{ <BR>&nbsp;&nbsp;&nbsp; unsigned long flags; <BR>&nbsp;&nbsp;&nbsp; struct irq_desc *desc = irq_get_desc_buslock(irq, &amp;flags, 0); </P>
<P>&#8230;&#8230; <BR>&nbsp;&nbsp;&nbsp; desc-&gt;handle_irq = handle; <BR>&nbsp;&nbsp;&nbsp; desc-&gt;name = name; </P>
<P>&nbsp;&nbsp;&nbsp; if (handle != handle_bad_irq &amp;&amp; is_chained) { <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_settings_set_noprobe(desc); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_settings_set_norequest(desc); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_settings_set_nothread(desc); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; irq_startup(desc, true); <BR>&nbsp;&nbsp;&nbsp; } <BR>out: <BR>&nbsp;&nbsp;&nbsp; irq_put_desc_busunlock(desc, flags); <BR>} </P></BLOCKQUOTE>
<P>&#29702;&#35299;&#36825;&#20010;&#20989;&#25968;&#30340;&#20851;&#38190;&#26159;&#22312;is_chained&#36825;&#20010;&#21442;&#25968;&#12290;&#36825;&#20010;&#21442;&#25968;&#26159;&#29992;&#22312;interrupt&#32423;&#32852;&#30340;&#24773;&#20917;&#19979;&#12290;&#20363;&#22914;&#20013;&#26029;&#25511;&#21046;&#22120;B&#32423;&#32852;&#21040;&#20013;&#26029;&#25511;&#21046;&#22120;A&#30340;&#31532;x&#20010;interrupt source&#19978;&#12290;&#37027;&#20040;&#23545;&#20110;A&#19978;&#30340;x&#36825;&#20010;interrupt&#32780;&#35328;&#65292;&#22312;&#35774;&#23450;&#20854;IRQ handler&#21442;&#25968;&#30340;&#26102;&#20505;&#35201;&#35774;&#23450;is_chained&#21442;&#25968;&#31561;&#20110;1&#65292;&#30001;&#20110;&#36825;&#20010;interrupt source&#29992;&#20110;&#32423;&#32852;&#65292;&#22240;&#27492;&#19981;&#33021;probe&#12289;&#19981;&#33021;&#34987;request&#65288;&#24050;&#32463;&#34987;&#20013;&#26029;&#25511;&#21046;&#22120;B&#20351;&#29992;&#20102;&#65289;&#65292;&#19981;&#33021;&#34987;threaded&#65288;&#20855;&#20307;&#20013;&#26029;&#32447;&#31243;&#21270;&#30340;&#27010;&#24565;&#22312;&#20854;&#20182;&#25991;&#26723;&#20013;&#25551;&#36848;&#65289;