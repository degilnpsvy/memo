<H2>linux kernel&#30340;&#20013;&#26029;&#23376;&#31995;&#32479;&#20043;&#65288;&#20061;&#65289;&#65306;tasklet</H2>
<P class=date>&#20316;&#32773;&#65306;<A href="http://www.wowotech.net/author/3">linuxer</A> &#21457;&#24067;&#20110;&#65306;2015-7-2 18:10 &#20998;&#31867;&#65306;<A href="http://www.wowotech.net/sort/irq_subsystem">&#20013;&#26029;&#23376;&#31995;&#32479;</A> </P>
<P>&#19968;&#12289;&#21069;&#35328; </P>
<P>&#23545;&#20110;&#20013;&#26029;&#22788;&#29702;&#32780;&#35328;&#65292;linux&#23558;&#20854;&#20998;&#25104;&#20102;&#20004;&#20010;&#37096;&#20998;&#65292;&#19968;&#20010;&#21483;&#20570;&#20013;&#26029;handler&#65288;top half&#65289;&#65292;&#23646;&#20110;&#19981;&#37027;&#20040;&#32039;&#24613;&#38656;&#35201;&#22788;&#29702;&#30340;&#20107;&#24773;&#34987;&#25512;&#36831;&#25191;&#34892;&#65292;&#25105;&#20204;&#31216;&#20043;deferable task&#65292;&#25110;&#32773;&#21483;&#20570;bottom half&#65292;&#12290;&#20855;&#20307;&#22914;&#20309;&#25512;&#36831;&#25191;&#34892;&#20998;&#25104;&#19979;&#38754;&#20960;&#31181;&#24773;&#20917;&#65306; </P>
<P>1&#12289;&#25512;&#36831;&#21040;top half&#25191;&#34892;&#23436;&#27605; </P>
<P>2&#12289;&#25512;&#36831;&#21040;&#26576;&#20010;&#25351;&#23450;&#30340;&#26102;&#38388;&#29255;&#65288;&#20363;&#22914;40ms&#65289;&#20043;&#21518;&#25191;&#34892; </P>
<P>3&#12289;&#25512;&#36831;&#21040;&#26576;&#20010;&#20869;&#26680;&#32447;&#31243;&#34987;&#35843;&#24230;&#30340;&#26102;&#20505;&#25191;&#34892; </P>
<P>&#23545;&#20110;&#31532;&#19968;&#31181;&#24773;&#20917;&#65292;&#20869;&#26680;&#20013;&#30340;&#26426;&#21046;&#21253;&#25324;<A href="http://www.wowotech.net/irq_subsystem/soft-irq.html#2107">softirq&#26426;&#21046;</A>&#21644;tasklet&#26426;&#21046;&#12290;&#31532;&#20108;&#31181;&#24773;&#20917;&#26159;&#23646;&#20110;softirq&#26426;&#21046;&#30340;&#19968;&#31181;&#24212;&#29992;&#22330;&#26223;&#65288;timer&#31867;&#22411;&#30340;softirq&#65289;&#65292;&#22312;&#26412;&#31449;&#30340;&#26102;&#38388;&#23376;&#31995;&#32479;&#30340;&#31995;&#21015;&#25991;&#26723;&#20013;&#20250;&#25551;&#36848;&#12290;&#31532;&#19977;&#31181;&#24773;&#20917;&#20027;&#35201;&#21253;&#25324;threaded irq handler&#20197;&#21450;&#36890;&#29992;&#30340;workqueue&#26426;&#21046;&#65292;&#24403;&#28982;&#20063;&#21253;&#25324;&#33258;&#24049;&#21019;&#24314;&#35813;&#39537;&#21160;&#19987;&#23646;kernel thread&#65288;&#19981;&#25512;&#33616;&#20351;&#29992;&#65289;&#12290;&#26412;&#25991;&#20027;&#35201;&#25551;&#36848;tasklet&#36825;&#31181;&#26426;&#21046;&#65292;&#31532;&#20108;&#31456;&#25551;&#36848;&#19968;&#20123;&#32972;&#26223;&#30693;&#35782;&#21644;&#21644;tasklet&#30340;&#24605;&#32771;&#65292;&#31532;&#19977;&#31456;&#32467;&#21512;&#20195;&#30721;&#25551;&#36848;tasklet&#30340;&#21407;&#29702;&#12290; </P>
<P>&#27880;&#65306;&#26412;&#25991;&#20013;&#30340;linux kernel&#30340;&#29256;&#26412;&#26159;4.0 </P>
<P>&nbsp; </P>
<P>&#20108;&#12289;&#20026;&#20160;&#20040;&#38656;&#35201;tasklet&#65311; </P>
<P>1&#12289;&#22522;&#26412;&#30340;&#24605;&#32771; </P>
<P>&#25105;&#20204;&#30340;&#39537;&#21160;&#31243;&#24207;&#25110;&#32773;&#20869;&#26680;&#27169;&#22359;&#30495;&#30340;&#38656;&#35201;tasklet&#21527;&#65311;&#27599;&#20010;&#20154;&#37117;&#26377;&#33258;&#24049;&#30340;&#30475;&#27861;&#12290;&#25105;&#20204;&#20808;&#25243;&#24320;linux kernel&#20013;&#30340;&#26426;&#21046;&#65292;&#39318;&#20808;&#36827;&#34892;&#19968;&#30058;&#36923;&#36753;&#24605;&#32771;&#12290; </P>
<P>&#23558;&#20013;&#26029;&#22788;&#29702;&#20998;&#25104;top half&#65288;cpu&#21644;&#22806;&#35774;&#20043;&#38388;&#30340;&#20132;&#20114;&#65292;&#33719;&#21462;&#29366;&#24577;&#65292;ack&#29366;&#24577;&#65292;&#25910;&#21457;&#25968;&#25454;&#31561;&#65289;&#21644;bottom half&#65288;&#21518;&#27573;&#30340;&#25968;&#25454;&#22788;&#29702;&#65289;&#24050;&#32463;&#28145;&#20837;&#20154;&#24515;&#65292;&#23545;&#20110;&#20219;&#20309;&#30340;OS&#37117;&#19968;&#26679;&#65292;&#23558;&#19981;&#37027;&#20040;&#32039;&#24613;&#30340;&#20107;&#24773;&#25512;&#36831;&#21040;bottom half&#20013;&#25191;&#34892;&#26159;OK&#30340;&#65292;&#20855;&#20307;&#22914;&#20309;&#25512;&#36831;&#25191;&#34892;&#20998;&#25104;&#20004;&#31181;&#31867;&#22411;&#65306;&#26377;&#20855;&#20307;&#26102;&#38388;&#35201;&#27714;&#30340;&#65288;&#23545;&#24212;linux kernel&#20013;&#30340;&#20302;&#31934;&#24230;timer&#21644;&#39640;&#31934;&#24230;timer&#65289;&#21644;&#27809;&#26377;&#20855;&#20307;&#26102;&#38388;&#35201;&#27714;&#30340;&#12290;&#23545;&#20110;&#27809;&#26377;&#20855;&#20307;&#26102;&#38388;&#35201;&#27714;&#30340;&#21448;&#21487;&#20197;&#20998;&#25104;&#20004;&#31181;&#65306; </P>
<P>&#65288;1&#65289;&#36234;&#24555;&#36234;&#22909;&#22411;&#65292;&#36825;&#31181;&#23454;&#38469;&#19978;&#26159;&#26377;&#24615;&#33021;&#35201;&#27714;&#30340;&#65292;&#38500;&#20102;&#20013;&#26029;top half&#21487;&#20197;&#25250;&#21344;&#20854;&#25191;&#34892;&#65292;&#20854;&#20182;&#30340;&#36827;&#31243;&#19978;&#19979;&#25991;&#65288;&#26080;&#35770;&#35813;&#36827;&#31243;&#30340;&#20248;&#20808;&#32423;&#22810;&#20040;&#30340;&#39640;&#65289;&#26159;&#19981;&#20250;&#24433;&#21709;&#20854;&#25191;&#34892;&#30340;&#65292;&#19968;&#35328;&#20197;&#34109;&#20043;&#65292;&#22312;&#19981;&#24433;&#21709;&#20013;&#26029;&#24310;&#36831;&#30340;&#24773;&#20917;&#19979;&#65292;OS&#20250;&#23613;&#24555;&#22788;&#29702;&#12290; </P>
<P>&#65288;2&#65289;&#38543;&#36935;&#32780;&#23433;&#22411;&#12290;&#36825;&#31181;&#23646;&#20110;&#37027;&#31181;&#27809;&#26377;&#24615;&#33021;&#38656;&#27714;&#30340;&#65292;&#20854;&#35843;&#24230;&#25191;&#34892;&#20381;&#36182;&#31995;&#32479;&#30340;&#35843;&#24230;&#22120;&#12290; </P>
<P>&#26412;&#36136;&#19978;&#35762;&#65292;&#36234;&#24555;&#36234;&#22909;&#22411;&#30340;bottom half&#19981;&#24212;&#35813;&#22826;&#22810;&#65292;&#32780;&#19988;tasklet&#30340;callback&#20989;&#25968;&#19981;&#33021;&#25191;&#34892;&#26102;&#38388;&#36807;&#38271;&#65292;&#21542;&#21017;&#20250;&#20135;&#29983;&#36827;&#31243;&#35843;&#24230;&#24310;&#36831;&#36807;&#22823;&#30340;&#29616;&#35937;&#65292;&#29978;&#33267;&#26159;&#38750;&#24120;&#38271;&#32780;&#19988;&#19981;&#30830;&#23450;&#30340;&#24310;&#36831;&#65292;&#23545;real time&#30340;&#31995;&#32479;&#20250;&#20135;&#29983;&#24456;&#22351;&#30340;&#24433;&#21709;&#12290; </P>
<P>2&#12289;&#23545;linux&#20013;&#30340;bottom half&#26426;&#21046;&#30340;&#24605;&#32771; </P>
<P>&#22312;linux kernel&#20013;&#65292;&#8220;&#36234;&#24555;&#36234;&#22909;&#22411;&#8221;&#26377;&#20004;&#31181;&#65292;softirq&#21644;tasklet&#65292;&#8220;&#38543;&#36935;&#32780;&#23433;&#22411;&#8221;&#20063;&#26377;&#20004;&#31181;&#65292;workqueue&#21644;threaded irq handler&#12290;&#8220;&#36234;&#24555;&#36234;&#22909;&#22411;&#8221;&#33021;&#21542;&#21482;&#30041;&#19979;&#19968;&#20010;softirq&#21602;&#65311;&#23545;&#20110;&#23815;&#23578;&#31616;&#21333;&#23601;&#26159;&#32654;&#30340;&#31243;&#24207;&#21592;&#24403;&#28982;&#24076;&#26395;&#22914;&#27492;&#12290;&#20026;&#20102;&#22238;&#31572;&#36825;&#20010;&#38382;&#39064;&#65292;&#25105;&#20204;&#20808;&#30475;&#30475;tasklet&#23545;&#20110;softirq&#32780;&#35328;&#26377;&#21738;&#20123;&#22909;&#22788;&#65306; </P>
<P>&#65288;1&#65289;tasklet&#21487;&#20197;&#21160;&#24577;&#20998;&#37197;&#65292;&#20063;&#21487;&#20197;&#38745;&#24577;&#20998;&#37197;&#65292;&#25968;&#37327;&#19981;&#38480;&#12290; </P>
<P>&#65288;2&#65289;&#21516;&#19968;&#31181;tasklet&#22312;&#22810;&#20010;cpu&#19978;&#20063;&#19981;&#20250;&#24182;&#34892;&#25191;&#34892;&#65292;&#36825;&#20351;&#24471;&#31243;&#24207;&#21592;&#22312;&#25776;&#20889;tasklet function&#30340;&#26102;&#20505;&#27604;&#36739;&#26041;&#20415;&#65292;&#20943;&#23569;&#20102;&#23545;&#24182;&#21457;&#30340;&#32771;&#34385;&#65288;&#24403;&#28982;&#25439;&#22833;&#20102;&#24615;&#33021;&#65289;&#12290; </P>
<P>&#23545;&#20110;&#31532;&#19968;&#31181;&#22909;&#22788;&#65292;&#20854;&#23454;&#20063;&#23601;&#26159;&#20026;&#20081;&#29992;tasklet&#25171;&#24320;&#20102;&#26041;&#20415;&#20043;&#38376;&#65292;&#24456;&#22810;&#25776;&#20889;&#39537;&#21160;&#30340;&#36719;&#20214;&#24037;&#31243;&#24072;&#19981;&#20250;&#20180;&#32454;&#32771;&#37327;&#20854;driver&#26159;&#21542;&#26377;&#24615;&#33021;&#38656;&#27714;&#23601;&#30452;&#25509;&#20351;&#29992;&#20102;tasklet&#26426;&#21046;&#12290;&#23545;&#20110;&#31532;&#20108;&#31181;&#22909;&#22788;&#65292;&#26412;&#36523;&#32771;&#34385;&#24182;&#21457;&#23601;&#26159;&#36719;&#20214;&#24037;&#31243;&#24072;&#30340;&#32844;&#36131;&#12290;&#22240;&#27492;&#65292;&#30475;&#36215;&#26469;tasklet&#24182;&#27809;&#26377;&#24341;&#20837;&#29305;&#21035;&#30340;&#22909;&#22788;&#65292;&#32780;&#19988;&#21644;softirq&#19968;&#26679;&#65292;&#37117;&#19981;&#33021;sleep&#65292;&#38480;&#21046;&#20102;handler&#25776;&#20889;&#30340;&#26041;&#20415;&#24615;&#65292;&#30475;&#36215;&#26469;&#20854;&#23454;&#24182;&#27809;&#26377;&#23384;&#22312;&#30340;&#24517;&#35201;&#12290;&#22312;4.0 kernel&#30340;&#20195;&#30721;&#20013;&#65292;grep&#19968;&#19979;tasklet&#30340;&#20351;&#29992;&#65292;&#23454;&#38469;&#19978;&#26159;&#19968;&#20010;&#24456;&#38271;&#30340;&#21015;&#34920;&#65292;&#21482;&#35201;&#23545;&#36825;&#20123;&#20351;&#29992;&#36827;&#34892;&#31616;&#21333;&#30340;&#24402;&#31867;&#23601;&#21487;&#20197;&#21024;&#38500;&#23545;tasklet&#30340;&#20351;&#29992;&#12290;&#23545;&#20110;&#37027;&#20123;&#26377;&#24615;&#33021;&#38656;&#27714;&#30340;&#65292;&#21487;&#20197;&#32771;&#34385;&#24182;&#20837;softirq&#65292;&#20854;&#20182;&#30340;&#21487;&#20197;&#32771;&#34385;&#20351;&#29992;workqueue&#26469;&#21462;&#20195;&#12290;Steven Rostedt&#35797;&#22270;&#36827;&#34892;&#36825;&#26041;&#38754;&#30340;&#23581;&#35797;&#65288;<A title=http://lwn.net/Articles/239484/ href="http://lwn.net/Articles/239484/">http://lwn.net/Articles/239484/</A>&#65289;&#65292;&#19981;&#36807;&#36825;&#20010;patch&#22987;&#32456;&#26410;&#33021;&#36827;&#20837;main line&#12290; </P>
<P>&nbsp; </P>
<P>&#19977;&#12289;tasklet&#30340;&#22522;&#26412;&#21407;&#29702; </P>
<P>1&#12289;&#22914;&#20309;&#25277;&#35937;&#19968;&#20010;tasklet </P>
<P>&#20869;&#26680;&#20013;&#29992;&#19979;&#38754;&#30340;&#25968;&#25454;&#32467;&#26500;&#26469;&#34920;&#31034;tasklet&#65306; </P>
<BLOCKQUOTE>
<P>struct tasklet_struct <BR>{ <BR>&nbsp;&nbsp;&nbsp; struct tasklet_struct *next; <BR>&nbsp;&nbsp;&nbsp; unsigned long state; <BR>&nbsp;&nbsp;&nbsp; atomic_t count; <BR>&nbsp;&nbsp;&nbsp; void (*func)(unsigned long); <BR>&nbsp;&nbsp;&nbsp; unsigned long data; <BR>}; </P></BLOCKQUOTE>
<P>&#27599;&#20010;cpu&#37117;&#20250;&#32500;&#25252;&#19968;&#20010;&#38142;&#34920;&#65292;&#23558;&#26412;cpu&#38656;&#35201;&#22788;&#29702;&#30340;tasklet&#31649;&#29702;&#36215;&#26469;&#65292;next&#36825;&#20010;&#25104;&#21592;&#25351;&#21521;&#20102;&#35813;&#38142;&#34920;&#20013;&#30340;&#19979;&#19968;&#20010;tasklet&#12290;func&#21644;data&#25104;&#21592;&#25551;&#36848;&#20102;&#35813;tasklet&#30340;callback&#20989;&#25968;&#65292;func&#26159;&#35843;&#29992;&#20989;&#25968;&#65292;data&#26159;&#20256;&#36882;&#32473;func&#30340;&#21442;&#25968;&#12290;state&#25104;&#21592;&#34920;&#31034;&#35813;tasklet&#30340;&#29366;&#24577;&#65292;TASKLET_STATE_SCHED&#34920;&#31034;&#35813;tasklet&#20197;&#21450;&#34987;&#35843;&#24230;&#21040;&#26576;&#20010;CPU&#19978;&#25191;&#34892;&#65292;TASKLET_STATE_RUN&#34920;&#31034;&#35813;tasklet&#27491;&#22312;&#26576;&#20010;cpu&#19978;&#25191;&#34892;&#12290;count&#25104;&#21592;&#26159;&#21644;enable&#25110;&#32773;disable&#35813;tasklet&#30340;&#29366;&#24577;&#30456;&#20851;&#65292;&#22914;&#26524;count&#31561;&#20110;0&#37027;&#20040;&#35813;tasklet&#26159;&#22788;&#20110;enable&#30340;&#65292;&#22914;&#26524;&#22823;&#20110;0&#65292;&#34920;&#31034;&#35813;tasklet&#26159;disable&#30340;&#12290;&#22312;<A href="http://www.wowotech.net/irq_subsystem/soft-irq.html#2117">softirq&#25991;&#26723;</A>&#20013;&#65292;&#25105;&#20204;&#30693;&#36947;local_bh_disable/enable&#20989;&#25968;&#23601;&#26159;&#29992;&#26469;disable/enable bottom half&#30340;&#65292;&#36825;&#37324;&#23601;&#21253;&#25324;softirq&#21644;tasklet&#12290;&#20294;&#26159;&#65292;&#26377;&#30340;&#26102;&#20505;&#20869;&#26680;&#21516;&#27493;&#30340;&#22330;&#26223;&#19981;&#38656;disable&#25152;&#26377;&#30340;softirq&#21644;tasklet&#65292;&#32780;&#20165;&#20165;&#26159;disable&#35813;tasklet&#65292;&#36825;&#26102;&#20505;&#65292;tasklet_disable&#21644;tasklet_enable&#23601;&#27966;&#19978;&#29992;&#22330;&#20102;&#12290; </P>
<BLOCKQUOTE>
<P>static inline void tasklet_disable(struct tasklet_struct *t) <BR>{ <BR>&nbsp;&nbsp;&nbsp; tasklet_disable_nosync(t);&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#32473;tasklet&#30340;count&#21152;&#19968; <BR>&nbsp;&nbsp;&nbsp; tasklet_unlock_wait(t);&#65293;&#65293;&#65293;&#65293;&#65293;&#22914;&#26524;&#35813;tasklet&#22788;&#20110;running&#29366;&#24577;&#65292;&#37027;&#20040;&#38656;&#35201;&#31561;&#21040;&#35813;tasklet&#25191;&#34892;&#23436;&#27605; <BR>&nbsp;&nbsp;&nbsp; smp_mb(); <BR>} </P>
<P>static inline void tasklet_enable(struct tasklet_struct *t) <BR>{ <BR>&nbsp;&nbsp;&nbsp; smp_mb__before_atomic(); <BR>&nbsp;&nbsp;&nbsp; atomic_dec(&amp;t-&gt;count);&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#32473;tasklet&#30340;count&#20943;&#19968; <BR>} </P></BLOCKQUOTE>
<P>tasklet_disable&#21644;tasklet_enable&#25903;&#25345;&#23884;&#22871;&#65292;&#20294;&#26159;&#38656;&#35201;&#25104;&#23545;&#20351;&#29992;&#12290; </P>
<P>2&#12289;&#31995;&#32479;&#22914;&#20309;&#31649;&#29702;tasklet&#65311; </P>
<P>&#31995;&#32479;&#20013;&#30340;&#27599;&#20010;cpu&#37117;&#20250;&#32500;&#25252;&#19968;&#20010;tasklet&#30340;&#38142;&#34920;&#65292;&#23450;&#20041;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>static DEFINE_PER_CPU(struct tasklet_head, tasklet_vec); <BR>static DEFINE_PER_CPU(struct tasklet_head, tasklet_hi_vec); </P></BLOCKQUOTE>
<P>linux kernel&#20013;&#65292;&#21644;tasklet&#30456;&#20851;&#30340;softirq&#26377;&#20004;&#39033;&#65292;HI_SOFTIRQ&#29992;&#20110;&#39640;&#20248;&#20808;&#32423;&#30340;tasklet&#65292;TASKLET_SOFTIRQ&#29992;&#20110;&#26222;&#36890;&#30340;tasklet&#12290;&#23545;&#20110;softirq&#32780;&#35328;&#65292;&#20248;&#20808;&#32423;&#23601;&#26159;&#20986;&#29616;&#22312;softirq pending register&#65288;__softirq_pending&#65289;&#20013;&#30340;&#20808;&#21518;&#39034;&#24207;&#65292;&#20301;&#20110;bit 0&#25317;&#26377;&#26368;&#39640;&#30340;&#20248;&#20808;&#32423;&#65292;&#20063;&#23601;&#26159;&#35828;&#65292;&#22914;&#26524;&#26377;&#22810;&#20010;&#19981;&#21516;&#31867;&#22411;&#30340;softirq&#21516;&#26102;&#35302;&#21457;&#65292;&#37027;&#20040;&#25191;&#34892;&#30340;&#20808;&#21518;&#39034;&#24207;&#20381;&#36182;&#22312;softirq pending register&#30340;&#20301;&#32622;&#65292;kernel&#24635;&#26159;&#20174;&#21491;&#21521;&#24038;&#20381;&#27425;&#21028;&#26029;&#26159;&#21542;&#32622;&#20301;&#65292;&#22914;&#26524;&#32622;&#20301;&#21017;&#25191;&#34892;&#12290;HI_SOFTIRQ&#21344;&#25454;&#20102;bit 0&#65292;&#20854;&#20248;&#20808;&#32423;&#29978;&#33267;&#39640;&#36807;timer&#65292;&#38656;&#35201;&#24910;&#29992;&#65288;&#23454;&#38469;&#19978;&#65292;&#25105;grep&#20102;&#20869;&#26680;&#20195;&#30721;&#65292;&#20284;&#20046;&#27809;&#26377;&#21457;&#29616;&#23545;HI_SOFTIRQ&#30340;&#20351;&#29992;&#65289;&#12290;&#24403;&#28982;HI_SOFTIRQ&#21644;TASKLET_SOFTIRQ&#30340;&#26426;&#29702;&#26159;&#19968;&#26679;&#30340;&#65292;&#22240;&#27492;&#26412;&#25991;&#21482;&#35752;&#35770;TASKLET_SOFTIRQ&#65292;&#22823;&#23478;&#21487;&#20197;&#20030;&#19968;&#21453;&#19977;&#12290; </P>
<P>3&#12289;&#22914;&#20309;&#23450;&#20041;&#19968;&#20010;tasklet&#65311; </P>
<P>&#20320;&#21487;&#20197;&#29992;&#19979;&#38754;&#30340;&#23439;&#23450;&#20041;&#26469;&#38745;&#24577;&#23450;&#20041;tasklet&#65306; </P>
<BLOCKQUOTE>
<P>#define DECLARE_TASKLET(name, func, data) \ <BR>struct tasklet_struct name = { NULL, 0, ATOMIC_INIT(0), func, data } </P>
<P>#define DECLARE_TASKLET_DISABLED(name, func, data) \ <BR>struct tasklet_struct name = { NULL, 0, ATOMIC_INIT(1), func, data } </P></BLOCKQUOTE>
<P>&#36825;&#20004;&#20010;&#23439;&#37117;&#21487;&#20197;&#38745;&#24577;&#23450;&#20041;&#19968;&#20010;struct tasklet_struct&#30340;&#21464;&#37327;&#65292;&#21482;&#19981;&#36807;&#21021;&#22987;&#21270;&#21518;&#30340;tasklet&#19968;&#20010;&#26159;&#22788;&#20110;eable&#29366;&#24577;&#65292;&#19968;&#20010;&#22788;&#20110;disable&#29366;&#24577;&#30340;&#12290;&#24403;&#28982;&#65292;&#20063;&#21487;&#20197;&#21160;&#24577;&#20998;&#37197;tasklet&#65292;&#28982;&#21518;&#35843;&#29992;tasklet_init&#26469;&#21021;&#22987;&#21270;&#35813;tasklet&#12290; </P>
<P>4&#12289;&#22914;&#20309;&#35843;&#24230;&#19968;&#20010;tasklet </P>
<P>&#20026;&#20102;&#35843;&#24230;&#19968;&#20010;tasklet&#25191;&#34892;&#65292;&#25105;&#20204;&#21487;&#20197;&#20351;&#29992;tasklet_schedule&#36825;&#20010;&#25509;&#21475;&#65306; </P>
<BLOCKQUOTE>
<P>static inline void tasklet_schedule(struct tasklet_struct *t) <BR>{ <BR>&nbsp;&nbsp;&nbsp; if (!test_and_set_bit(TASKLET_STATE_SCHED, &amp;t-&gt;state)) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; __tasklet_schedule(t); <BR>} </P></BLOCKQUOTE>
<P>&#31243;&#24207;&#22312;&#22810;&#20010;&#19978;&#19979;&#25991;&#20013;&#21487;&#20197;&#22810;&#27425;&#35843;&#24230;&#21516;&#19968;&#20010;tasklet&#25191;&#34892;&#65288;&#20063;&#21487;&#33021;&#26469;&#33258;&#22810;&#20010;cpu core&#65289;&#65292;&#19981;&#36807;&#23454;&#38469;&#19978;&#35813;tasklet&#21482;&#20250;&#19968;&#27425;&#25346;&#20837;&#39318;&#27425;&#35843;&#24230;&#21040;&#30340;&#37027;&#20010;cpu&#30340;tasklet&#38142;&#34920;&#65292;&#20063;&#23601;&#26159;&#35828;&#65292;&#21363;&#20415;&#26159;&#22810;&#27425;&#35843;&#29992;tasklet_schedule&#65292;&#23454;&#38469;&#19978;tasklet&#21482;&#20250;&#25346;&#20837;&#19968;&#20010;&#25351;&#23450;CPU&#30340;tasklet&#38431;&#21015;&#20013;&#65288;&#32780;&#19988;&#21482;&#20250;&#25346;&#20837;&#19968;&#27425;&#65289;&#65292;&#20063;&#23601;&#26159;&#35828;&#21482;&#20250;&#35843;&#24230;&#19968;&#27425;&#25191;&#34892;&#12290;&#36825;&#26159;&#36890;&#36807;TASKLET_STATE_SCHED&#36825;&#20010;flag&#26469;&#23436;&#25104;&#30340;&#65292;&#25105;&#20204;&#21487;&#20197;&#29992;&#19979;&#38754;&#30340;&#22270;&#29255;&#26469;&#25551;&#36848;&#65306; </P>
<P><A href="http://www.wowotech.net/content/uploadfile/201507/06299a79874281afa05198f9d72a87da20150702100845.gif"><IMG title=tasklet style="BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; DISPLAY: inline; BORDER-TOP-WIDTH: 0px" border=0 alt=tasklet src="http://www.wowotech.net/content/uploadfile/201507/2f814e61e193b5a0a694ef3673b4f60620150702100946.gif" width=695 height=583></A> </P>
<P>&#25105;&#20204;&#20551;&#35774;HW block A&#30340;&#39537;&#21160;&#20351;&#29992;&#30340;tasklet&#26426;&#21046;&#24182;&#19988;&#22312;&#20013;&#26029;handler&#65288;top half&#65289;&#20013;&#23558;&#38745;&#24577;&#23450;&#20041;&#30340;tasklet&#65288;&#36825;&#20010;tasklet&#26159;&#21508;&#20010;cpu&#20849;&#20139;&#30340;&#65292;&#19981;&#26159;per cpu&#30340;&#65289;&#35843;&#24230;&#25191;&#34892;&#65288;&#20063;&#23601;&#26159;&#35843;&#29992;tasklet_schedule&#20989;&#25968;&#65289;&#12290;&#24403;HW block A&#26816;&#27979;&#21040;&#30828;&#20214;&#30340;&#21160;&#20316;&#65288;&#20363;&#22914;&#25509;&#25910;FIFO&#20013;&#25968;&#25454;&#36798;&#21040;&#21322;&#28385;&#65289;&#23601;&#20250;&#35302;&#21457;IRQ line&#19978;&#30340;&#30005;&#24179;&#25110;&#32773;&#36793;&#32536;&#20449;&#21495;&#65292;GIC&#26816;&#27979;&#21040;&#35813;&#20449;&#21495;&#20250;&#23558;&#35813;&#20013;&#26029;&#20998;&#21457;&#32473;&#26576;&#20010;CPU&#25191;&#34892;&#20854;top half handler&#65292;&#25105;&#20204;&#20551;&#35774;&#36825;&#27425;&#26159;cpu0&#65292;&#22240;&#27492;&#35813;driver&#30340;tasklet&#34987;&#25346;&#20837;CPU0&#23545;&#24212;&#30340;tasklet&#38142;&#34920;&#65288;tasklet_vec&#65289;&#24182;&#23558;state&#30340;&#29366;&#24577;&#35774;&#23450;&#20026;TASKLET_STATE_SCHED&#12290;HW block A&#30340;&#39537;&#21160;&#20013;&#30340;tasklet&#34429;&#24050;&#35843;&#24230;&#65292;&#20294;&#26159;&#27809;&#26377;&#25191;&#34892;&#65292;&#22914;&#26524;&#36825;&#26102;&#20505;&#65292;&#30828;&#20214;&#21448;&#19968;&#27425;&#35302;&#21457;&#20013;&#26029;&#24182;&#22312;cpu1&#19978;&#25191;&#34892;&#65292;&#34429;&#28982;tasklet_schedule&#20989;&#25968;&#34987;&#20877;&#27425;&#35843;&#29992;&#65292;&#20294;&#26159;&#30001;&#20110;TASKLET_STATE_SCHED&#24050;&#32463;&#35774;&#23450;&#65292;&#22240;&#27492;&#19981;&#20250;&#23558;HW block A&#30340;&#39537;&#21160;&#20013;&#30340;&#36825;&#20010;tasklet&#25346;&#20837;cpu1&#30340;tasklet&#38142;&#34920;&#20013;&#12290; </P>
<P>&#19979;&#38754;&#25105;&#20204;&#20877;&#20180;&#32454;&#30740;&#31350;&#19968;&#19979;&#24213;&#23618;&#30340;__tasklet_schedule&#20989;&#25968;&#65306; </P>
<BLOCKQUOTE>
<P>void __tasklet_schedule(struct tasklet_struct *t) <BR>{ <BR>&nbsp;&nbsp;&nbsp; unsigned long flags; </P>
<P>&nbsp;&nbsp;&nbsp; local_irq_save(flags);&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;1&#65289; <BR>&nbsp;&nbsp;&nbsp; t-&gt;next = NULL;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;2&#65289; <BR>&nbsp;&nbsp;&nbsp; *__this_cpu_read(tasklet_vec.tail) = t; <BR>&nbsp;&nbsp;&nbsp; __this_cpu_write(tasklet_vec.tail, &amp;(t-&gt;next)); <BR>&nbsp;&nbsp;&nbsp; raise_softirq_irqoff(TASKLET_SOFTIRQ);&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;3&#65289; <BR>&nbsp;&nbsp;&nbsp; local_irq_restore(flags); <BR>} </P></BLOCKQUOTE>
<P>&#65288;1&#65289;TASKLET_STATE_SCHED&#36825;&#20010;flag&#24050;&#32463;&#30830;&#20445;&#20102;__tasklet_schedule&#21482;&#20250;&#22312;&#19968;&#20010;cpu&#19978;&#25191;&#34892;&#65292;&#36825;&#37324;&#31105;&#27490;&#26412;&#22320;&#20013;&#26029;&#23601;&#21487;&#20197;&#25318;&#25130;&#25152;&#26377;&#30340;&#24182;&#21457;&#12290; </P>
<P>&#65288;2&#65289;&#36825;&#37324;&#30340;&#19977;&#34892;&#20195;&#30721;&#23601;&#26159;&#23558;&#19968;&#20010;tasklet&#25346;&#20837;&#38142;&#34920;&#30340;&#23614;&#37096; </P>
<P>&#65288;3&#65289;raise TASKLET_SOFTIRQ&#31867;&#22411;&#30340;softirq&#12290; </P>
<P>5&#12289;&#22312;&#20160;&#20040;&#26102;&#26426;&#20250;&#25191;&#34892;tasklet&#65311; </P>
<P>&#19978;&#38754;&#25551;&#36848;&#20102;tasklet&#30340;&#35843;&#24230;&#65292;&#24403;&#28982;&#35843;&#24230;tasklet&#19981;&#31561;&#20110;&#25191;&#34892;tasklet&#65292;&#31995;&#32479;&#20250;&#22312;&#36866;&#21512;&#30340;&#26102;&#38388;&#28857;&#25191;&#34892;tasklet callback function&#12290;&#30001;&#20110;tasklet&#26159;&#22522;&#20110;softirq&#30340;&#65292;&#22240;&#27492;&#65292;&#25105;&#20204;&#39318;&#20808;&#24635;&#32467;&#19968;&#19979;softirq&#30340;&#25191;&#34892;&#22330;&#26223;&#65306; </P>
<P>&#65288;1&#65289;&#22312;&#20013;&#26029;&#36820;&#22238;&#29992;&#25143;&#31354;&#38388;&#65288;&#36827;&#31243;&#19978;&#19979;&#25991;&#65289;&#30340;&#26102;&#20505;&#65292;&#22914;&#26524;&#26377;pending&#30340;softirq&#65292;&#37027;&#20040;&#23558;&#25191;&#34892;&#35813;softirq&#30340;&#22788;&#29702;&#20989;&#25968;&#12290;&#36825;&#37324;&#38480;&#23450;&#20102;&#20013;&#26029;&#36820;&#22238;&#29992;&#25143;&#31354;&#38388;&#20063;&#23601;&#26159;&#24847;&#21619;&#30528;&#38480;&#21046;&#20102;&#19979;&#38754;&#20004;&#20010;&#22330;&#26223;&#30340;softirq&#34987;&#35302;&#21457;&#25191;&#34892;&#65306; </P>
<P>&nbsp;&nbsp;&nbsp; &#65288;a&#65289;&#20013;&#26029;&#36820;&#22238;hard interrupt context&#65292;&#20063;&#23601;&#26159;&#20013;&#26029;&#23884;&#22871;&#30340;&#22330;&#26223; </P>
<P>&nbsp;&nbsp;&nbsp; &#65288;b&#65289;&#20013;&#26029;&#36820;&#22238;software interrupt context&#65292;&#20063;&#23601;&#26159;&#20013;&#26029;&#25250;&#21344;&#36719;&#20013;&#26029;&#19978;&#19979;&#25991;&#30340;&#22330;&#26223; </P>
<P>&#65288;2&#65289;&#19978;&#38754;&#30340;&#25551;&#36848;&#32570;&#23569;&#20102;&#19968;&#31181;&#22330;&#26223;&#65306;&#20013;&#26029;&#36820;&#22238;&#20869;&#26680;&#24577;&#30340;&#36827;&#31243;&#19978;&#19979;&#25991;&#30340;&#22330;&#26223;&#65292;&#36825;&#37324;&#25105;&#20204;&#38656;&#35201;&#35814;&#32454;&#35828;&#26126;&#12290;&#36827;&#31243;&#19978;&#19979;&#25991;&#20013;&#35843;&#29992;local_bh_enable&#30340;&#26102;&#20505;&#65292;&#22914;&#26524;&#26377;pending&#30340;softirq&#65292;&#37027;&#20040;&#23558;&#25191;&#34892;&#35813;softirq&#30340;&#22788;&#29702;&#20989;&#25968;&#12290;&#30001;&#20110;&#20869;&#26680;&#21516;&#27493;&#30340;&#35201;&#27714;&#65292;&#36827;&#31243;&#19978;&#19979;&#25991;&#20013;&#26377;&#21487;&#33021;&#20250;&#35843;&#29992;local_bh_enable/disable&#26469;&#20445;&#25252;&#20020;&#30028;&#21306;&#12290;&#22312;&#20020;&#30028;&#21306;&#20195;&#30721;&#25191;&#34892;&#36807;&#31243;&#20013;&#65292;&#20013;&#26029;&#38543;&#26102;&#20250;&#21040;&#26469;&#65292;&#25250;&#21344;&#35813;&#36827;&#31243;&#65288;&#20869;&#26680;&#24577;&#65289;&#30340;&#25191;&#34892;&#65288;&#27880;&#24847;&#65306;&#36825;&#37324;&#21482;&#26159;disable&#20102;bottom half&#65292;&#27809;&#26377;&#31105;&#27490;&#20013;&#26029;&#65289;&#12290;&#22312;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;&#20013;&#26029;&#36820;&#22238;&#30340;&#26102;&#20505;&#26159;&#21542;&#20250;&#25191;&#34892;softirq handler&#21602;&#65311;&#24403;&#28982;&#19981;&#20250;&#65292;&#25105;&#20204;disable&#20102;bottom half&#30340;&#25191;&#34892;&#65292;&#20063;&#23601;&#26159;&#24847;&#21619;&#30528;&#19981;&#33021;&#25191;&#34892;softirq handler&#65292;&#20294;&#26159;&#26412;&#36136;&#19978;bottom half&#24212;&#35813;&#27604;&#36827;&#31243;&#19978;&#19979;&#25991;&#26377;&#26356;&#39640;&#30340;&#20248;&#20808;&#32423;&#65292;&#19968;&#26086;&#26465;&#20214;&#20801;&#35768;&#65292;&#35201;&#31435;&#21051;&#25250;&#21344;&#36827;&#31243;&#19978;&#19979;&#25991;&#30340;&#25191;&#34892;&#65292;&#22240;&#27492;&#65292;&#24403;&#31435;&#21051;&#31163;&#24320;&#20020;&#30028;&#21306;&#65292;&#35843;&#29992;local_bh_enable&#30340;&#26102;&#20505;&#65292;&#20250;&#26816;&#26597;softirq pending&#65292;&#22914;&#26524;bottom half&#22788;&#20110;enable&#30340;&#29366;&#24577;&#65292;pending&#30340;softirq handler&#20250;&#34987;&#25191;&#34892;&#12290; </P>
<P>&#65288;3&#65289;&#31995;&#32479;&#22826;&#32321;&#24537;&#20102;&#65292;&#19981;&#36807;&#30340;&#20135;&#29983;&#20013;&#26029;&#65292;raise softirq&#65292;&#30001;&#20110;bottom half&#30340;&#20248;&#20808;&#32423;&#39640;&#65292;&#20174;&#32780;&#23548;&#33268;&#36827;&#31243;&#26080;&#27861;&#35843;&#24230;&#25191;&#34892;&#12290;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;softirq&#20250;&#25512;&#36831;&#21040;softirqd&#36825;&#20010;&#20869;&#26680;&#32447;&#31243;&#20013;&#21435;&#25191;&#34892;&#12290; </P>
<P>&#23545;&#20110;TASKLET_SOFTIRQ&#31867;&#22411;&#30340;softirq&#65292;&#20854;handler&#26159;tasklet_action&#65292;&#25105;&#20204;&#26469;&#30475;&#30475;&#21508;&#20010;tasklet&#26159;&#22914;&#20309;&#25191;&#34892;&#30340;&#65306; </P>
<BLOCKQUOTE>
<P>static void tasklet_action(struct softirq_action *a) <BR>{ <BR>&nbsp;&nbsp;&nbsp; struct tasklet_struct *list; </P>
<P>&nbsp;&nbsp;&nbsp; local_irq_disable();&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;1&#65289; <BR>&nbsp;&nbsp;&nbsp; list = __this_cpu_read(tasklet_vec.head); <BR>&nbsp;&nbsp;&nbsp; __this_cpu_write(tasklet_vec.head, NULL); <BR>&nbsp;&nbsp;&nbsp; __this_cpu_write(tasklet_vec.tail, this_cpu_ptr(&amp;tasklet_vec.head)); <BR>&nbsp;&nbsp;&nbsp; local_irq_enable(); </P>
<P>&nbsp;&nbsp;&nbsp; while (list) {&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#36941;&#21382;tasklet&#38142;&#34920; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct tasklet_struct *t = list; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; list = list-&gt;next; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (tasklet_trylock(t)) {&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;2&#65289; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!atomic_read(&amp;t-&gt;count)) {&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;3&#65289; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (!test_and_clear_bit(TASKLET_STATE_SCHED, &amp;t-&gt;state)) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BUG(); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t-&gt;func(t-&gt;data); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tasklet_unlock(t); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue;&#65293;&#65293;&#65293;&#65293;&#65293;&#22788;&#29702;&#19979;&#19968;&#20010;tasklet <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tasklet_unlock(t);&#65293;&#65293;&#65293;&#65293;&#28165;&#38500;TASKLET_STATE_RUN&#26631;&#35760; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; local_irq_disable();&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;4&#65289; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t-&gt;next = NULL; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *__this_cpu_read(tasklet_vec.tail) = t; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; __this_cpu_write(tasklet_vec.tail, &amp;(t-&gt;next)); <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; __raise_softirq_irqoff(TASKLET_SOFTIRQ); &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#20877;&#27425;&#35302;&#21457;softirq&#65292;&#31561;&#24453;&#19979;&#19968;&#20010;&#25191;&#34892;&#26102;&#26426; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; local_irq_enable(); <BR>&nbsp;&nbsp;&nbsp; } <BR>} </P></BLOCKQUOTE>
<P>&#65288;1&#65289;&#20174;&#26412;cpu&#30340;tasklet&#38142;&#34920;&#20013;&#21462;&#20986;&#20840;&#37096;&#30340;tasklet&#65292;&#20445;&#23384;&#22312;list&#36825;&#20010;&#20020;&#26102;&#21464;&#37327;&#20013;&#65292;&#21516;&#26102;&#37325;&#26032;&#21021;&#22987;&#21270;&#26412;cpu&#30340;tasklet&#38142;&#34920;&#65292;&#20351;&#35813;&#38142;&#34920;&#20026;&#31354;&#12290;&#30001;&#20110;bottom half&#26159;&#24320;&#20013;&#26029;&#25191;&#34892;&#30340;&#65292;&#22240;&#27492;&#22312;&#25805;&#20316;tasklet&#38142;&#34920;&#30340;&#26102;&#20505;&#38656;&#35201;&#20351;&#29992;&#20851;&#20013;&#26029;&#20445;&#25252; </P>
<P>&#65288;2&#65289;tasklet_trylock&#20027;&#35201;&#26159;&#29992;&#26469;&#35774;&#23450;&#35813;tasklet&#30340;state&#20026;TASKLET_STATE_RUN&#65292;&#21516;&#26102;&#21028;&#26029;&#35813;tasklet&#26159;&#21542;&#24050;&#32463;&#22788;&#20110;&#25191;&#34892;&#29366;&#24577;&#65292;&#36825;&#20010;&#29366;&#24577;&#24456;&#37325;&#35201;&#65292;&#23427;&#20915;&#23450;&#20102;&#21518;&#32493;&#30340;&#20195;&#30721;&#36923;&#36753;&#12290; </P>
<BLOCKQUOTE>
<P>static inline int tasklet_trylock(struct tasklet_struct *t) <BR>{ <BR>&nbsp;&nbsp;&nbsp; return !test_and_set_bit(TASKLET_STATE_RUN, &amp;(t)-&gt;state); <BR>} </P></BLOCKQUOTE>
<P>&#20320;&#20063;&#35768;&#20250;&#22855;&#24618;&#65306;&#20026;&#20309;&#36825;&#37324;&#20174;tasklet&#30340;&#38142;&#34920;&#20013;&#25688;&#19979;&#19968;&#20010;&#26412;cpu&#35201;&#22788;&#29702;&#30340;tasklet list&#65292;&#32780;&#36825;&#20010;list&#20013;&#30340;tasklet&#24050;&#32463;&#22788;&#20110;running&#29366;&#24577;&#20102;&#65292;&#20250;&#26377;&#36825;&#31181;&#24773;&#20917;&#21527;&#65311;&#20250;&#30340;&#65292;&#25105;&#20204;&#20877;&#27425;&#22238;&#21040;&#19978;&#38754;&#30340;&#37027;&#20010;&#36719;&#30828;&#20214;&#32467;&#26500;&#22270;&#12290;&#21516;&#26679;&#30340;&#65292;HW block A&#30340;&#39537;&#21160;&#20351;&#29992;&#30340;tasklet&#26426;&#21046;&#24182;&#19988;&#22312;&#20013;&#26029;handler&#65288;top half&#65289;&#20013;&#23558;&#38745;&#24577;&#23450;&#20041;&#30340;tasklet &#35843;&#24230;&#25191;&#34892;&#12290;HW block A&#30340;&#30828;&#20214;&#20013;&#26029;&#39318;&#20808;&#36865;&#36798;cpu0&#22788;&#29702;&#65292;&#22240;&#27492;&#35813;driver&#30340;tasklet&#34987;&#25346;&#20837;CPU0&#23545;&#24212;&#30340;tasklet&#38142;&#34920;&#24182;&#22312;&#36866;&#24403;&#30340;&#26102;&#38388;&#28857;&#19978;&#24320;&#22987;&#25191;&#34892;&#35813;tasklet&#12290;&#36825;&#26102;&#20505;&#65292;cpu0&#30340;&#30828;&#20214;&#20013;&#26029;&#21448;&#26469;&#20102;&#65292;&#35813;driver&#30340;tasklet callback function&#34987;&#25250;&#21344;&#65292;&#34429;&#28982;tasklet&#20173;&#28982;&#22788;&#20110;running&#29366;&#24577;&#12290;&#19982;&#27492;&#21516;&#26102;&#65292;HW block A&#30828;&#20214;&#21448;&#19968;&#27425;&#35302;&#21457;&#20013;&#26029;&#24182;&#22312;cpu1&#19978;&#25191;&#34892;&#65292;&#36825;&#26102;&#20505;&#65292;&#35813;driver&#30340;tasklet&#22788;&#20110;running&#29366;&#24577;&#65292;&#24182;&#19988;TASKLET_STATE_SCHED&#24050;&#32463;&#34987;&#28165;&#38500;&#65292;&#22240;&#27492;&#65292;&#35843;&#29992;tasklet_schedule&#20989;&#25968;&#23558;&#20250;&#20351;&#24471;&#35813;driver&#30340;tasklet&#25346;&#20837;cpu1&#30340;tasklet&#38142;&#34920;&#20013;&#12290;&#30001;&#20110;cpu0&#22312;&#22788;&#29702;&#20854;&#20182;&#30828;&#20214;&#20013;&#26029;&#65292;&#22240;&#27492;&#65292;cpu1&#30340;tasklet&#21518;&#21457;&#20808;&#33267;&#65292;&#36827;&#20837;tasklet_action&#20989;&#25968;&#35843;&#29992;&#65292;&#36825;&#26102;&#20505;&#65292;&#24403;&#20174;cpu1&#30340;tasklet&#25688;&#21462;&#25152;&#26377;&#38656;&#35201;&#22788;&#29702;&#30340;tasklet&#38142;&#34920;&#20013;&#65292;HW block A&#23545;&#24212;&#30340;tasklet&#23454;&#38469;&#19978;&#24050;&#32463;&#26159;&#22312;cpu0&#19978;&#22788;&#20110;&#25191;&#34892;&#29366;&#24577;&#20102;&#12290; </P>
<P>&#25105;&#20204;&#22312;&#35774;&#35745;tasklet&#30340;&#26102;&#20505;&#23601;&#35268;&#23450;&#65292;&#21516;&#19968;&#31181;&#31867;&#22411;&#30340;tasklet&#21482;&#33021;&#22312;&#19968;&#20010;cpu&#19978;&#25191;&#34892;&#65292;&#22240;&#27492;tasklet_trylock&#23601;&#26159;&#36215;&#36825;&#20010;&#20316;&#29992;&#30340;&#12290; </P>
<P>&#65288;3&#65289;&#26816;&#26597;&#35813;tasklet&#26159;&#21542;&#22788;&#20110;enable&#29366;&#24577;&#65292;&#22914;&#26524;&#26159;&#65292;&#35828;&#26126;&#35813;tasklet&#21487;&#20197;&#30495;&#27491;&#36827;&#20837;&#25191;&#34892;&#29366;&#24577;&#20102;&#12290;&#20027;&#35201;&#30340;&#21160;&#20316;&#23601;&#26159;&#28165;&#38500;TASKLET_STATE_SCHED&#29366;&#24577;&#65292;&#25191;&#34892;tasklet callback function&#12290; </P>
<P>&#65288;4&#65289;&#22914;&#26524;&#35813;tasklet&#24050;&#32463;&#22312;&#21035;&#30340;cpu&#19978;&#25191;&#34892;&#20102;&#65292;&#37027;&#20040;&#25105;&#20204;&#23558;&#20854;&#25346;&#20837;&#35813;cpu&#30340;tasklet&#38142;&#34920;&#30340;&#23614;&#37096;&#65292;&#36825;&#26679;&#65292;&#22312;&#19979;&#19968;&#20010;tasklet&#25191;&#34892;&#26102;&#26426;&#21040;&#26469;&#30340;&#26102;&#20505;&#65292;kernel&#20250;&#20877;&#27425;&#23581;&#35797;&#25191;&#34892;&#35813;tasklet&#65292;&#22312;&#36825;&#20010;&#26102;&#38388;&#28857;&#65292;&#20063;&#35768;&#20854;&#20182;cpu&#19978;&#30340;&#35813;tasklet&#24050;&#32463;&#25191;&#34892;&#23436;&#27605;&#20102;&#12290;&#36890;&#36807;&#36825;&#26679;&#20195;&#30721;&#36923;&#36753;&#65292;&#20445;&#35777;&#20102;&#29305;&#23450;&#30340;tasklet&#21482;&#20250;&#22312;&#19968;&#20010;cpu&#19978;&#25191;&#34892;&#65292;&#19981;&#20250;&#22312;&#22810;&#20010;cpu&#19978;&#24182;&#21457;&#12290;