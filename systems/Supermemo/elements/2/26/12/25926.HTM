<H2>Linux kernel&#30340;&#20013;&#26029;&#23376;&#31995;&#32479;&#20043;&#65288;&#20845;&#65289;&#65306;ARM&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;</H2>
<P class=date>&#20316;&#32773;&#65306;<A href="http://www.wowotech.net/author/3">linuxer</A> &#21457;&#24067;&#20110;&#65306;2014-8-4 18:26 &#20998;&#31867;&#65306;<A href="http://www.wowotech.net/sort/irq_subsystem">&#20013;&#26029;&#23376;&#31995;&#32479;</A> </P>
<P>&#19968;&#12289;&#21069;&#35328; </P>
<P>&#26412;&#25991;&#20027;&#35201;&#20197;ARM&#20307;&#31995;&#32467;&#26500;&#19979;&#30340;&#20013;&#26029;&#22788;&#29702;&#20026;&#20363;&#65292;&#35762;&#36848;&#25972;&#20010;&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;&#20013;&#30340;&#30828;&#20214;&#34892;&#20026;&#21644;&#36719;&#20214;&#21160;&#20316;&#12290;&#20855;&#20307;&#25972;&#20010;&#22788;&#29702;&#36807;&#31243;&#20998;&#25104;&#19977;&#20010;&#27493;&#39588;&#26469;&#25551;&#36848;&#65306; </P>
<P>1&#12289;&#31532;&#20108;&#31456;&#25551;&#36848;&#20102;&#20013;&#26029;&#22788;&#29702;&#30340;&#20934;&#22791;&#36807;&#31243; </P>
<P>2&#12289;&#31532;&#19977;&#31456;&#25551;&#36848;&#20102;&#24403;&#21457;&#29983;&#20013;&#30340;&#26102;&#20505;&#65292;ARM&#30828;&#20214;&#30340;&#34892;&#20026; </P>
<P>3&#12289;&#31532;&#22235;&#31456;&#25551;&#36848;&#20102;ARM&#30340;&#20013;&#26029;&#36827;&#20837;&#36807;&#31243; </P>
<P>4&#12289;&#31532;&#20116;&#31456;&#25551;&#36848;&#20102;ARM&#30340;&#20013;&#26029;&#36864;&#20986;&#36807;&#31243; </P>
<P>&#26412;&#25991;&#28041;&#21450;&#30340;&#20195;&#30721;&#26469;&#33258;3.14&#20869;&#26680;&#12290;&#21478;&#22806;&#65292;&#26412;&#25991;&#27880;&#24847;&#25551;&#36848;ARM&#25351;&#20196;&#38598;&#30340;&#20869;&#23481;&#65292;&#26377;&#20123;source code&#20026;&#20102;&#31616;&#30701;&#19968;&#20123;&#65292;&#21024;&#38500;&#20102;THUMB&#30456;&#20851;&#30340;&#20195;&#30721;&#65292;&#38500;&#27492;&#20043;&#22806;&#65292;&#26377;&#20123;debug&#30456;&#20851;&#30340;&#20869;&#23481;&#20063;&#20250;&#21024;&#38500;&#12290; </P>
<P>&nbsp; </P>
<P>&#20108;&#12289;&#20013;&#26029;&#22788;&#29702;&#30340;&#20934;&#22791;&#36807;&#31243; </P>
<P>1&#12289;&#20013;&#26029;&#27169;&#24335;&#30340;stack&#20934;&#22791; </P>
<P>ARM&#22788;&#29702;&#22120;&#26377;&#22810;&#31181;processor mode&#65292;&#20363;&#22914;user mode&#65288;&#29992;&#25143;&#31354;&#38388;&#30340;AP&#25152;&#22788;&#20110;&#30340;&#27169;&#24335;&#65289;&#12289;supervisor mode&#65288;&#21363;SVC mode&#65292;&#22823;&#37096;&#20998;&#30340;&#20869;&#26680;&#24577;&#20195;&#30721;&#37117;&#22788;&#20110;&#36825;&#31181;mode&#65289;&#12289;IRQ mode&#65288;&#21457;&#29983;&#20013;&#26029;&#21518;&#65292;&#22788;&#29702;&#22120;&#20250;&#20999;&#20837;&#21040;&#35813;mode&#65289;&#31561;&#12290;&#23545;&#20110;linux kernel&#65292;&#20854;&#20013;&#26029;&#22788;&#29702;&#22788;&#29702;&#36807;&#31243;&#20013;&#65292;ARM &#22788;&#29702;&#22120;&#22823;&#37096;&#20998;&#37117;&#26159;&#22788;&#20110;SVC mode&#12290;&#20294;&#26159;&#65292;&#23454;&#38469;&#19978;&#20135;&#29983;&#20013;&#26029;&#30340;&#26102;&#20505;&#65292;ARM&#22788;&#29702;&#22120;&#23454;&#38469;&#19978;&#26159;&#36827;&#20837;IRQ mode&#65292;&#22240;&#27492;&#22312;&#36827;&#20837;&#30495;&#27491;&#30340;IRQ&#24322;&#24120;&#22788;&#29702;&#20043;&#21069;&#20250;&#26377;&#19968;&#23567;&#27573;IRQ mode&#30340;&#25805;&#20316;&#65292;&#20043;&#21518;&#20250;&#36827;&#20837;SVC mode&#36827;&#34892;&#30495;&#27491;&#30340;IRQ&#24322;&#24120;&#22788;&#29702;&#12290;&#30001;&#20110;IRQ mode&#21482;&#26159;&#19968;&#20010;&#36807;&#24230;&#65292;&#22240;&#27492;IRQ mode&#30340;&#26632;&#24456;&#23567;&#65292;&#21482;&#26377;12&#20010;&#23383;&#33410;&#65292;&#20855;&#20307;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>struct stack { <BR>&nbsp;&nbsp;&nbsp; u32 irq[3]; <BR>&nbsp;&nbsp;&nbsp; u32 abt[3]; <BR>&nbsp;&nbsp;&nbsp; u32 und[3]; <BR>} ____cacheline_aligned; </P>
<P><BR>static struct stack stacks[NR_CPUS]; </P></BLOCKQUOTE>
<P>&#38500;&#20102;irq mode&#65292;linux kernel&#22312;&#22788;&#29702;abt mode&#65288;&#24403;&#21457;&#29983;data abort exception&#25110;&#32773;prefetch abort exception&#30340;&#26102;&#20505;&#36827;&#20837;&#30340;&#27169;&#24335;&#65289;&#21644;und mode&#65288;&#22788;&#29702;&#22120;&#36935;&#21040;&#19968;&#20010;&#26410;&#23450;&#20041;&#30340;&#25351;&#20196;&#30340;&#26102;&#20505;&#36827;&#20837;&#30340;&#24322;&#24120;&#27169;&#24335;&#65289;&#30340;&#26102;&#20505;&#20063;&#26159;&#37319;&#29992;&#20102;&#30456;&#21516;&#30340;&#31574;&#30053;&#12290;&#20063;&#23601;&#26159;&#32463;&#36807;&#19968;&#20010;&#31616;&#30701;&#30340;abt&#25110;&#32773;und mode&#20043;&#21518;&#65292;stack&#20999;&#25442;&#21040;svc mode&#30340;&#26632;&#19978;&#65292;&#36825;&#20010;&#26632;&#23601;&#26159;&#21457;&#29983;&#24322;&#24120;&#37027;&#20010;&#26102;&#38388;&#28857;current thread&#30340;&#20869;&#26680;&#26632;&#12290;anyway&#65292;&#22312;irq mode&#21644;svc mode&#20043;&#38388;&#24635;&#26159;&#38656;&#35201;&#19968;&#20010;stack&#20445;&#23384;&#25968;&#25454;&#65292;&#36825;&#23601;&#26159;&#20013;&#26029;&#27169;&#24335;&#30340;stack&#65292;&#31995;&#32479;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#65292;cpu_init&#20989;&#25968;&#20013;&#20250;&#36827;&#34892;&#20013;&#26029;&#27169;&#24335;stack&#30340;&#35774;&#23450;&#65306; </P>
<BLOCKQUOTE>
<P>void notrace cpu_init(void) <BR>{ </P>
<P>&nbsp;&nbsp;&nbsp; unsigned int cpu = smp_processor_id();&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#33719;&#21462;CPU ID <BR>&nbsp;&nbsp;&nbsp; struct stack *stk = &amp;stacks[cpu];&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#33719;&#21462;&#35813;CPU&#23545;&#20110;&#30340;irq abt&#21644;und&#30340;stack&#25351;&#38024; </P>
<P>&#8230;&#8230; </P>
<P>#ifdef CONFIG_THUMB2_KERNEL <BR>#define PLC&nbsp;&nbsp;&nbsp; "r"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;Thumb-2&#19979;&#65292;msr&#25351;&#20196;&#19981;&#20801;&#35768;&#20351;&#29992;&#31435;&#21363;&#25968;&#65292;&#21482;&#33021;&#20351;&#29992;&#23492;&#23384;&#22120;&#12290; <BR>#else <BR>#define PLC&nbsp;&nbsp;&nbsp; "I" <BR>#endif </P>
<P><BR>&nbsp;&nbsp;&nbsp; __asm__ ( <BR>&nbsp;&nbsp;&nbsp; "msr&nbsp;&nbsp;&nbsp; cpsr_c, %1\n\t"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35753;CPU&#36827;&#20837;IRQ mode <BR>&nbsp;&nbsp;&nbsp; "add&nbsp;&nbsp;&nbsp; r14, %0, %2\n\t"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;r14&#23492;&#23384;&#22120;&#20445;&#23384;stk-&gt;irq <BR>&nbsp;&nbsp;&nbsp; "mov&nbsp;&nbsp;&nbsp; sp, r14\n\t"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35774;&#23450;IRQ mode&#30340;stack&#20026;stk-&gt;irq <BR>&nbsp;&nbsp;&nbsp; "msr&nbsp;&nbsp;&nbsp; cpsr_c, %3\n\t" <BR>&nbsp;&nbsp;&nbsp; "add&nbsp;&nbsp;&nbsp; r14, %0, %4\n\t" <BR>&nbsp;&nbsp;&nbsp; "mov&nbsp;&nbsp;&nbsp; sp, r14\n\t"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35774;&#23450;abt mode&#30340;stack&#20026;stk-&gt;abt <BR>&nbsp;&nbsp;&nbsp; "msr&nbsp;&nbsp;&nbsp; cpsr_c, %5\n\t" <BR>&nbsp;&nbsp;&nbsp; "add&nbsp;&nbsp;&nbsp; r14, %0, %6\n\t" <BR>&nbsp;&nbsp;&nbsp; "mov&nbsp;&nbsp;&nbsp; sp, r14\n\t"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35774;&#23450;und mode&#30340;stack&#20026;stk-&gt;und <BR>&nbsp;&nbsp;&nbsp; "msr&nbsp;&nbsp;&nbsp; cpsr_c, %7"&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#22238;&#21040;SVC mode <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#19978;&#38754;&#26159;code&#65292;&#19979;&#38754;&#30340;output&#37096;&#20998;&#26159;&#31354;&#30340; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : "r" (stk),&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23545;&#24212;&#19978;&#38754;&#20195;&#30721;&#20013;&#30340;%0 <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PLC (PSR_F_BIT | PSR_I_BIT | IRQ_MODE),&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23545;&#24212;&#19978;&#38754;&#20195;&#30721;&#20013;&#30340;%1 <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "I" (offsetof(struct stack, irq[0])),&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23545;&#24212;&#19978;&#38754;&#20195;&#30721;&#20013;&#30340;%2 <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PLC (PSR_F_BIT | PSR_I_BIT | ABT_MODE),&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#20197;&#27492;&#31867;&#25512;&#65292;&#19979;&#38754;&#19981;&#36184;&#36848; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "I" (offsetof(struct stack, abt[0])), <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PLC (PSR_F_BIT | PSR_I_BIT | UND_MODE), <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; "I" (offsetof(struct stack, und[0])), <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PLC (PSR_F_BIT | PSR_I_BIT | SVC_MODE) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; : "r14");&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#19978;&#38754;&#26159;input&#25805;&#20316;&#25968;&#21015;&#34920;&#65292;r14&#26159;&#35201;clobbered register&#21015;&#34920; <BR>} </P></BLOCKQUOTE>
<P>&#23884;&#20837;&#24335;&#27719;&#32534;&#30340;&#35821;&#27861;&#26684;&#24335;&#26159;&#65306;asm(code : output operand list : input operand list : clobber list);&#22823;&#23478;&#23545;&#30528;&#19978;&#38754;&#30340;code&#23601;&#21487;&#20197;&#20998;&#24320;&#21508;&#27573;&#20869;&#23481;&#20102;&#12290;&#22312;input operand list&#20013;&#65292;&#26377;&#20004;&#31181;&#38480;&#21046;&#31526;&#65288;constraint&#65289;&#65292;"r"&#25110;&#32773;"I"&#65292;"I"&#34920;&#31034;&#31435;&#21363;&#25968;&#65288;Immediate operands&#65289;&#65292;"r"&#34920;&#31034;&#29992;&#36890;&#29992;&#23492;&#23384;&#22120;&#20256;&#36882;&#21442;&#25968;&#12290;clobber list&#20013;&#26377;&#19968;&#20010;r14&#65292;&#34920;&#31034;&#22312;&#27719;&#32534;&#20195;&#30721;&#20013;&#20462;&#25913;&#20102;r14&#30340;&#20540;&#65292;&#36825;&#20123;&#20449;&#24687;&#26159;&#32534;&#35793;&#22120;&#38656;&#35201;&#30340;&#20869;&#23481;&#12290; </P>
<P>&#23545;&#20110;SMP&#65292;bootstrap CPU&#20250;&#22312;&#31995;&#32479;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#25191;&#34892;cpu_init&#20989;&#25968;&#65292;&#36827;&#34892;&#26412;CPU&#30340;irq&#12289;abt&#21644;und&#19977;&#31181;&#27169;&#24335;&#30340;&#20869;&#26680;&#26632;&#30340;&#35774;&#23450;&#65292;&#20855;&#20307;&#35843;&#29992;&#24207;&#21015;&#26159;&#65306;start_kernel---&gt;setup_arch---&gt;setup_processor---&gt;cpu_init&#12290;&#23545;&#20110;&#31995;&#32479;&#20013;&#20854;&#20182;&#30340;CPU&#65292;bootstrap CPU&#20250;&#22312;&#31995;&#32479;&#21021;&#22987;&#21270;&#30340;&#26368;&#21518;&#65292;&#23545;&#27599;&#19968;&#20010;online&#30340;CPU&#36827;&#34892;&#21021;&#22987;&#21270;&#65292;&#20855;&#20307;&#30340;&#35843;&#29992;&#24207;&#21015;&#26159;&#65306;start_kernel---&gt;rest_init---&gt;kernel_init---&gt;kernel_init_freeable---&gt;kernel_init_freeable---&gt;smp_init---&gt;cpu_up---&gt;_cpu_up---&gt;__cpu_up&#12290;__cpu_up&#20989;&#25968;&#26159;&#21644;CPU architecture&#30456;&#20851;&#30340;&#12290;&#23545;&#20110;ARM&#65292;&#20854;&#35843;&#29992;&#24207;&#21015;&#26159;__cpu_up---&gt;boot_secondary---&gt;smp_ops.smp_boot_secondary(SOC&#30456;&#20851;&#20195;&#30721;)---&gt;secondary_startup---&gt;__secondary_switched---&gt;secondary_start_kernel---&gt;cpu_init&#12290; </P>
<P>&#38500;&#20102;&#21021;&#22987;&#21270;&#65292;&#31995;&#32479;&#30005;&#28304;&#31649;&#29702;&#20063;&#38656;&#35201;irq&#12289;abt&#21644;und stack&#30340;&#35774;&#23450;&#12290;&#22914;&#26524;&#25105;&#20204;&#35774;&#23450;&#30340;&#30005;&#28304;&#31649;&#29702;&#29366;&#24577;&#22312;&#36827;&#20837;sleep&#30340;&#26102;&#20505;&#65292;CPU&#20250;&#20002;&#22833;irq&#12289;abt&#21644;und stack point&#23492;&#23384;&#22120;&#30340;&#20540;&#65292;&#37027;&#20040;&#22312;CPU resume&#30340;&#36807;&#31243;&#20013;&#65292;&#35201;&#35843;&#29992;cpu_init&#26469;&#37325;&#26032;&#35774;&#23450;&#36825;&#20123;&#20540;&#12290; </P>
<P>2&#12289;SVC&#27169;&#24335;&#30340;stack&#20934;&#22791; </P>
<P>&#25105;&#20204;&#32463;&#24120;&#35828;&#36827;&#31243;&#30340;&#29992;&#25143;&#31354;&#38388;&#21644;&#20869;&#26680;&#31354;&#38388;&#65292;&#23545;&#20110;&#19968;&#20010;&#24212;&#29992;&#31243;&#24207;&#32780;&#35328;&#65292;&#21487;&#20197;&#36816;&#34892;&#22312;&#29992;&#25143;&#31354;&#38388;&#65292;&#20063;&#21487;&#20197;&#36890;&#36807;&#31995;&#32479;&#35843;&#29992;&#36827;&#20837;&#20869;&#26680;&#31354;&#38388;&#12290;&#22312;&#29992;&#25143;&#31354;&#38388;&#65292;&#20351;&#29992;&#30340;&#26159;&#29992;&#25143;&#26632;&#65292;&#20063;&#23601;&#26159;&#25105;&#20204;&#36719;&#20214;&#24037;&#31243;&#24072;&#32534;&#20889;&#29992;&#25143;&#31354;&#38388;&#31243;&#24207;&#30340;&#26102;&#20505;&#65292;&#20445;&#23384;&#23616;&#37096;&#21464;&#37327;&#30340;stack&#12290;&#38519;&#20837;&#20869;&#26680;&#21518;&#65292;&#24403;&#28982;&#19981;&#33021;&#29992;&#29992;&#25143;&#26632;&#20102;&#65292;&#36825;&#26102;&#20505;&#23601;&#38656;&#35201;&#20351;&#29992;&#21040;&#20869;&#26680;&#26632;&#12290;&#25152;&#35859;&#20869;&#26680;&#26632;&#20854;&#23454;&#23601;&#26159;&#22788;&#20110;SVC mode&#26102;&#20505;&#20351;&#29992;&#30340;&#26632;&#12290; </P>
<P>&#22312;linux&#26368;&#24320;&#22987;&#21551;&#21160;&#30340;&#26102;&#20505;&#65292;&#31995;&#32479;&#21482;&#26377;&#19968;&#20010;&#36827;&#31243;&#65288;&#26356;&#20934;&#30830;&#30340;&#35828;&#26159;kernel thread&#65289;&#65292;&#23601;&#26159;PID&#31561;&#20110;0&#30340;&#37027;&#20010;&#36827;&#31243;&#65292;&#21483;&#20570;swapper&#36827;&#31243;&#65288;&#25110;&#32773;&#21483;&#20570;idle&#36827;&#31243;&#65289;&#12290;&#35813;&#36827;&#31243;&#30340;&#20869;&#26680;&#26632;&#26159;&#38745;&#24577;&#23450;&#20041;&#30340;&#65292;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>union thread_union init_thread_union __init_task_data = <BR>&nbsp;&nbsp;&nbsp; { INIT_THREAD_INFO(init_task) }; </P>
<P>union thread_union { <BR>&nbsp;&nbsp;&nbsp; struct thread_info thread_info; <BR>&nbsp;&nbsp;&nbsp; unsigned long stack[THREAD_SIZE/sizeof(long)]; <BR>}; </P></BLOCKQUOTE>
<P>&#23545;&#20110;ARM&#24179;&#21488;&#65292;THREAD_SIZE&#26159;8192&#20010;byte&#65292;&#22240;&#27492;&#21344;&#25454;&#20004;&#20010;page frame&#12290;<SPAN style="FONT-SIZE: 10.5pt; FONT-FAMILY: &#23435;&#20307;">&#38543;&#30528;&#21021;&#22987;&#21270;&#30340;&#36827;&#34892;&#65292;</SPAN><SPAN style="FONT-SIZE: 10.5pt; FONT-FAMILY: " ?="">Linux kernel</SPAN><SPAN style="FONT-SIZE: 10.5pt; FONT-FAMILY: &#23435;&#20307;">&#20250;&#21019;&#24314;&#33509;&#24178;&#30340;&#20869;&#26680;&#32447;&#31243;&#65292;&#32780;&#22312;&#36827;&#20837;&#29992;&#25143;&#31354;&#38388;&#21518;&#65292;</SPAN><SPAN style="FONT-SIZE: 10.5pt; FONT-FAMILY: " ?="">user space</SPAN><SPAN style="FONT-SIZE: 10.5pt; FONT-FAMILY: &#23435;&#20307;">&#30340;&#36827;&#31243;&#20063;&#20250;&#21019;&#24314;&#36827;&#31243;&#25110;&#32773;&#32447;&#31243;&#12290;</SPAN>Linux kernel&#22312;&#21019;&#24314;&#36827;&#31243;&#65288;&#21253;&#25324;&#29992;&#25143;&#36827;&#31243;&#21644;&#20869;&#26680;&#32447;&#31243;&#65289;&#30340;&#26102;&#20505;&#37117;&#20250;&#20998;&#37197;&#19968;&#20010;&#65288;&#25110;&#32773;&#20004;&#20010;&#65292;&#21644;&#37197;&#32622;&#30456;&#20851;&#65289;page frame&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>static struct task_struct *dup_task_struct(struct task_struct *orig) <BR>{ <BR>&nbsp;&nbsp;&nbsp; ...... <BR><BR>&nbsp;&nbsp;&nbsp; ti = alloc_thread_info_node(tsk, node); <BR>&nbsp;&nbsp;&nbsp; if (!ti) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; goto free_tsk; <BR><BR>&nbsp;&nbsp;&nbsp; ...... <BR>} </P></BLOCKQUOTE>&#24213;&#37096;&#26159;struct thread_info&#25968;&#25454;&#32467;&#26500;&#65292;&#39030;&#37096;&#65288;&#39640;&#22320;&#22336;&#65289;&#23601;&#26159;&#35813;&#36827;&#31243;&#30340;&#20869;&#26680;&#26632;&#12290;&#24403;&#36827;&#31243;&#20999;&#25442;&#30340;&#26102;&#20505;&#65292;&#25972;&#20010;&#30828;&#20214;&#21644;&#36719;&#20214;&#30340;&#19978;&#19979;&#25991;&#37117;&#20250;&#36827;&#34892;&#20999;&#25442;&#65292;&#36825;&#37324;&#23601;&#21253;&#25324;&#20102;svc mode&#30340;sp&#23492;&#23384;&#22120;&#30340;&#20540;&#34987;&#20999;&#25442;&#21040;&#35843;&#24230;&#31639;&#27861;&#36873;&#23450;&#30340;&#26032;&#30340;&#36827;&#31243;&#30340;&#20869;&#26680;&#26632;&#19978;&#26469;&#12290; 
<P>&nbsp; </P>
<P>3&#12289;&#24322;&#24120;&#21521;&#37327;&#34920;&#30340;&#20934;&#22791; </P>
<P>&#23545;&#20110;ARM&#22788;&#29702;&#22120;&#32780;&#35328;&#65292;&#24403;&#21457;&#29983;&#24322;&#24120;&#30340;&#26102;&#20505;&#65292;&#22788;&#29702;&#22120;&#20250;&#26242;&#20572;&#24403;&#21069;&#25351;&#20196;&#30340;&#25191;&#34892;&#65292;&#20445;&#23384;&#29616;&#22330;&#65292;&#36716;&#32780;&#21435;&#25191;&#34892;&#23545;&#24212;&#30340;&#24322;&#24120;&#21521;&#37327;&#22788;&#30340;&#25351;&#20196;&#65292;&#24403;&#22788;&#29702;&#23436;&#35813;&#24322;&#24120;&#30340;&#26102;&#20505;&#65292;&#24674;&#22797;&#29616;&#22330;&#65292;&#22238;&#21040;&#21407;&#26469;&#30340;&#37027;&#28857;&#21435;&#32487;&#32493;&#25191;&#34892;&#31243;&#24207;&#12290;&#31995;&#32479;&#25152;&#26377;&#30340;&#24322;&#24120;&#21521;&#37327;&#65288;&#20849;&#35745;8&#20010;&#65289;&#32452;&#25104;&#20102;&#24322;&#24120;&#21521;&#37327;&#34920;&#12290;&#21521;&#37327;&#34920;&#65288;vector table&#65289;&#30340;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>.section .vectors, "ax", %progbits <BR>__vectors_start: <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_rst <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_und <BR>&nbsp;&nbsp;&nbsp; W(ldr)&nbsp;&nbsp;&nbsp; pc, __vectors_start + 0x1000 <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_pabt <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_dabt <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_addrexcptn <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_irq ---------------------------IRQ Vector <BR>&nbsp;&nbsp;&nbsp; W(b)&nbsp;&nbsp;&nbsp; vector_fiq </P></BLOCKQUOTE>
<P>&#23545;&#20110;&#26412;&#25991;&#32780;&#35328;&#65292;&#25105;&#20204;&#37325;&#28857;&#20851;&#27880;vector_irq&#36825;&#20010;exception vector&#12290;&#24322;&#24120;&#21521;&#37327;&#34920;&#21487;&#33021;&#34987;&#23433;&#25918;&#22312;&#20004;&#20010;&#20301;&#32622;&#19978;&#65306; </P>
<P>&#65288;1&#65289;&#24322;&#24120;&#21521;&#37327;&#34920;&#20301;&#20110;0x0&#30340;&#22320;&#22336;&#12290;&#36825;&#31181;&#35774;&#32622;&#21483;&#20570;Normal vectors&#25110;&#32773;Low vectors&#12290; </P>
<P>&#65288;2&#65289;&#24322;&#24120;&#21521;&#37327;&#34920;&#20301;&#20110;0xffff0000&#30340;&#22320;&#22336;&#12290;&#36825;&#31181;&#35774;&#32622;&#21483;&#20570;high vectors </P>
<P>&#20855;&#20307;&#26159;low vectors&#36824;&#26159;high vectors&#26159;&#30001;ARM&#30340;&#19968;&#20010;&#21483;&#20570;&#30340;SCTLR&#23492;&#23384;&#22120;&#30340;&#31532;13&#20010;bit &#65288;vector bit&#65289;&#25511;&#21046;&#30340;&#12290;&#23545;&#20110;&#21551;&#29992;MMU&#30340;ARM Linux&#32780;&#35328;&#65292;&#31995;&#32479;&#20351;&#29992;&#20102;high vectors&#12290;&#20026;&#20160;&#20040;&#19981;&#29992;low vector&#21602;&#65311;&#23545;&#20110;linux&#32780;&#35328;&#65292;0&#65374;3G&#30340;&#31354;&#38388;&#26159;&#29992;&#25143;&#31354;&#38388;&#65292;&#22914;&#26524;&#20351;&#29992;low vector&#65292;&#37027;&#20040;&#24322;&#24120;&#21521;&#37327;&#34920;&#22312;0&#22320;&#22336;&#65292;&#37027;&#20040;&#21017;&#26159;&#29992;&#25143;&#31354;&#38388;&#30340;&#20301;&#32622;&#65292;&#22240;&#27492;linux&#36873;&#29992;high vector&#12290;&#24403;&#28982;&#65292;&#20351;&#29992;Low vector&#20063;&#21487;&#20197;&#65292;&#36825;&#26679;Low vector&#25152;&#22312;&#30340;&#31354;&#38388;&#21017;&#23646;&#20110;kernel space&#20102;&#65288;&#20063;&#23601;&#26159;&#35828;&#65292;3G&#65374;4G&#30340;&#31354;&#38388;&#21152;&#19978;Low vector&#25152;&#21344;&#30340;&#31354;&#38388;&#23646;&#20110;kernel space&#65289;&#65292;&#19981;&#36807;&#36825;&#26102;&#20505;&#35201;&#27880;&#24847;&#19968;&#28857;&#65292;&#22240;&#20026;&#25152;&#26377;&#30340;&#36827;&#31243;&#20849;&#20139;kernel space&#65292;&#32780;&#29992;&#25143;&#31354;&#38388;&#30340;&#31243;&#24207;&#32463;&#24120;&#20250;&#21457;&#29983;&#31354;&#25351;&#38024;&#35775;&#38382;&#65292;&#36825;&#26102;&#20505;&#65292;&#20869;&#23384;&#20445;&#25252;&#26426;&#21046;&#24212;&#35813;&#21487;&#20197;&#25429;&#33719;&#36825;&#31181;&#38169;&#35823;&#65288;&#22823;&#37096;&#20998;&#30340;MMU&#37117;&#21487;&#20197;&#20570;&#21040;&#65292;&#20363;&#22914;&#65306;&#31105;&#27490;userspace&#35775;&#38382;kernel space&#30340;&#22320;&#22336;&#31354;&#38388;&#65289;&#65292;&#38450;&#27490;vector table&#34987;&#35775;&#38382;&#21040;&#12290;&#23545;&#20110;&#20869;&#26680;&#20013;&#30001;&#20110;&#31243;&#24207;&#38169;&#35823;&#23548;&#33268;&#30340;&#31354;&#25351;&#38024;&#35775;&#38382;&#65292;&#20869;&#23384;&#20445;&#25252;&#26426;&#21046;&#20063;&#38656;&#35201;&#25511;&#21046;vector table&#34987;&#20462;&#25913;&#65292;&#22240;&#27492;vector table&#25152;&#22312;&#30340;&#31354;&#38388;&#34987;&#35774;&#32622;&#25104;read only&#30340;&#12290;&#22312;&#20351;&#29992;&#20102;MMU&#20043;&#21518;&#65292;&#20855;&#20307;&#24322;&#24120;&#21521;&#37327;&#34920;&#25918;&#22312;&#37027;&#20010;&#29289;&#29702;&#22320;&#22336;&#24050;&#32463;&#19981;&#37325;&#35201;&#20102;&#65292;&#37325;&#35201;&#30340;&#26159;&#25226;&#23427;&#26144;&#23556;&#21040;0xffff0000&#30340;&#34394;&#25311;&#22320;&#22336;&#23601;OK&#20102;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>static void __init devicemaps_init(const struct machine_desc *mdesc) <BR>{ <BR>&nbsp;&nbsp;&nbsp; &#8230;&#8230; <BR>&nbsp;&nbsp;&nbsp; vectors = early_alloc(PAGE_SIZE * 2); &#65293;&#65293;&#65293;&#65293;&#65293;&#20998;&#37197;&#20004;&#20010;page&#30340;&#29289;&#29702;&#39029;&#24103; </P>
<P>&nbsp;&nbsp;&nbsp; early_trap_init(vectors); &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;copy&#21521;&#37327;&#34920;&#20197;&#21450;&#30456;&#20851;help function&#21040;&#35813;&#21306;&#22495; </P>
<P>&nbsp;&nbsp;&nbsp; &#8230;&#8230; <BR>&nbsp;&nbsp;&nbsp; map.pfn = __phys_to_pfn(virt_to_phys(vectors)); <BR>&nbsp;&nbsp;&nbsp; map.virtual = 0xffff0000; <BR>&nbsp;&nbsp;&nbsp; map.length = PAGE_SIZE; <BR>#ifdef CONFIG_KUSER_HELPERS <BR>&nbsp;&nbsp;&nbsp; map.type = MT_HIGH_VECTORS; <BR>#else <BR>&nbsp;&nbsp;&nbsp; map.type = MT_LOW_VECTORS; <BR>#endif <BR>&nbsp;&nbsp;&nbsp; create_mapping(&amp;map); &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#26144;&#23556;0xffff0000&#30340;&#37027;&#20010;page frame </P>
<P>&nbsp;&nbsp;&nbsp; if (!vectors_high()) {&#65293;&#65293;&#65293;&#22914;&#26524;SCTLR.V&#30340;&#20540;&#35774;&#23450;&#20026;low vectors&#65292;&#37027;&#20040;&#36824;&#35201;&#26144;&#23556;0&#22320;&#22336;&#24320;&#22987;&#30340;memory <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map.virtual = 0; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map.length = PAGE_SIZE * 2; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; map.type = MT_LOW_VECTORS; <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; create_mapping(&amp;map); <BR>&nbsp;&nbsp;&nbsp; } </P>
<P><BR>&nbsp;&nbsp;&nbsp; map.pfn += 1; <BR>&nbsp;&nbsp;&nbsp; map.virtual = 0xffff0000 + PAGE_SIZE; <BR>&nbsp;&nbsp;&nbsp; map.length = PAGE_SIZE; <BR>&nbsp;&nbsp;&nbsp; map.type = MT_LOW_VECTORS; <BR>&nbsp;&nbsp;&nbsp; create_mapping(&amp;map); &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#26144;&#23556;high vecotr&#24320;&#22987;&#30340;&#31532;&#20108;&#20010;page frame </P>
<P>&#8230;&#8230; <BR>} </P></BLOCKQUOTE>
<P>&#20026;&#20160;&#20040;&#35201;&#20998;&#37197;&#20004;&#20010;page frame&#21602;&#65311;&#36825;&#37324;vectors table&#21644;kuser helper&#20989;&#25968;&#65288;&#20869;&#26680;&#31354;&#38388;&#25552;&#20379;&#30340;&#20989;&#25968;&#65292;&#20294;&#26159;&#29992;&#25143;&#31354;&#38388;&#20351;&#29992;&#65289;&#21344;&#29992;&#20102;&#19968;&#20010;page frame&#65292;&#21478;&#22806;&#24322;&#24120;&#22788;&#29702;&#30340;stub&#20989;&#25968;&#21344;&#29992;&#20102;&#21478;&#22806;&#19968;&#20010;page frame&#12290;&#20026;&#20160;&#20040;&#20250;&#26377;stub&#20989;&#25968;&#21602;&#65311;&#31245;&#21518;&#20250;&#35762;&#21040;&#12290; </P>
<P>&#22312;early_trap_init&#20989;&#25968;&#20013;&#20250;&#21021;&#22987;&#21270;&#24322;&#24120;&#21521;&#37327;&#34920;&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>void __init early_trap_init(void *vectors_base) <BR>{ <BR>&nbsp;&nbsp;&nbsp; unsigned long vectors = (unsigned long)vectors_base; <BR>&nbsp;&nbsp;&nbsp; extern char __stubs_start[], __stubs_end[]; <BR>&nbsp;&nbsp;&nbsp; extern char __vectors_start[], __vectors_end[]; <BR>&nbsp;&nbsp;&nbsp; unsigned i; </P>
<P>&nbsp;&nbsp;&nbsp; vectors_page = vectors_base; </P>
<P>&nbsp;&nbsp;&nbsp; &#23558;&#25972;&#20010;vector table&#37027;&#20010;page frame&#22635;&#20805;&#25104;&#26410;&#23450;&#20041;&#30340;&#25351;&#20196;&#12290;&#36215;&#22987;vector table&#21152;&#19978;kuser helper&#20989;&#25968;&#24182;&#19981;&#33021;&#23436;&#20840;&#30340;&#20805;&#28385;&#36825;&#20010;page&#65292;&#26377;&#20123;&#32541;&#38553;&#12290;&#22914;&#26524;&#19981;&#36825;&#20040;&#22788;&#29702;&#65292;&#24403;&#26497;&#31471;&#24773;&#20917;&#19979;&#65288;&#31243;&#24207;&#38169;&#35823;&#25110;&#32773;HW&#30340;issue&#65289;&#65292;CPU&#21487;&#33021;&#20174;&#36825;&#20123;&#32541;&#38553;&#20013;&#21462;&#25351;&#25191;&#34892;&#65292;&#20174;&#32780;&#23548;&#33268;&#19981;&#21487;&#30693;&#30340;&#21518;&#26524;&#12290;&#22914;&#26524;&#23558;&#36825;&#20123;&#32541;&#38553;&#22635;&#20805;&#26410;&#23450;&#20041;&#25351;&#20196;&#65292;&#37027;&#20040;CPU&#21487;&#20197;&#25429;&#33719;&#36825;&#31181;&#24322;&#24120;&#12290; <BR>&nbsp;&nbsp;&nbsp; for (i = 0; i &lt; PAGE_SIZE / sizeof(u32); i++) <BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ((u32 *)vectors_base)[i] = 0xe7fddef1; </P>
<P>&nbsp; &#25335;&#36125;vector table&#65292;&#25335;&#36125;stub function <BR>&nbsp;&nbsp;&nbsp; memcpy((void *)vectors, __vectors_start, __vectors_end - __vectors_start); <BR>&nbsp;&nbsp;&nbsp; memcpy((void *)vectors + 0x1000, __stubs_start, __stubs_end - __stubs_start); </P>
<P>&nbsp;&nbsp;&nbsp; kuser_init(vectors_base); &#65293;&#65293;&#65293;&#65293;copy kuser helper function </P>
<P>&nbsp;&nbsp;&nbsp; flush_icache_range(vectors, vectors + PAGE_SIZE * 2); <BR>&nbsp;&nbsp;&nbsp; modify_domain(DOMAIN_USER, DOMAIN_CLIENT); <BR><BR>} </P></BLOCKQUOTE>
<P>&#19968;&#26086;&#28041;&#21450;&#20195;&#30721;&#30340;&#25335;&#36125;&#65292;&#25105;&#20204;&#23601;&#38656;&#35201;&#20851;&#24515;&#20854;&#32534;&#35793;&#36830;&#25509;&#26102;&#22320;&#22336;&#65288;link-time address)&#21644;&#36816;&#34892;&#26102;&#22320;&#22336;&#65288;run-time address&#65289;&#12290;&#22312;kernel&#23436;&#25104;&#38142;&#25509;&#21518;&#65292;__vectors_start&#26377;&#20102;&#20854;link-time address&#65292;&#22914;&#26524;link-time address&#21644;run-time address&#19968;&#33268;&#65292;&#37027;&#20040;&#36825;&#27573;&#20195;&#30721;&#36816;&#34892;&#26102;&#27627;&#26080;&#21387;&#21147;&#12290;&#20294;&#26159;&#65292;&#30446;&#21069;&#23545;&#20110;vector table&#32780;&#35328;&#65292;&#20854;&#34987;copy&#21040;&#20854;&#20182;&#30340;&#22320;&#22336;&#19978;&#65288;&#23545;&#20110;High vector&#65292;&#36825;&#26159;&#22320;&#22336;&#23601;&#26159;0xffff00000&#65289;&#65292;&#20063;&#23601;&#26159;&#35828;&#65292;link-time address&#21644;run-time address&#19981;&#19968;&#26679;&#20102;&#65292;&#22914;&#26524;&#20173;&#28982;&#24819;&#35201;&#36825;&#20123;&#20195;&#30721;&#21487;&#20197;&#27491;&#30830;&#36816;&#34892;&#65292;&#37027;&#20040;&#38656;&#35201;&#36825;&#20123;&#20195;&#30721;&#26159;&#20301;&#32622;&#26080;&#20851;&#30340;&#20195;&#30721;&#12290;&#23545;&#20110;vector table&#32780;&#35328;&#65292;&#24517;&#39035;&#35201;&#20301;&#32622;&#26080;&#20851;&#12290;B&#36825;&#20010;branch instruction&#26412;&#36523;&#23601;&#26159;&#20301;&#32622;&#26080;&#20851;&#30340;&#65292;&#23427;&#21487;&#20197;&#36339;&#36716;&#21040;&#19968;&#20010;&#24403;&#21069;&#20301;&#32622;&#30340;offset&#12290;&#19981;&#36807;&#24182;&#38750;&#25152;&#26377;&#30340;vector&#37117;&#26159;&#20351;&#29992;&#20102;branch instruction&#65292;&#23545;&#20110;&#36719;&#20013;&#26029;&#65292;&#20854;vector&#22320;&#22336;&#19978;&#25351;&#20196;&#26159;&#8220;W(ldr)&nbsp;&nbsp;&nbsp; pc, __vectors_start + 0x1000 &#8221;&#65292;&#36825;&#26465;&#25351;&#20196;&#34987;&#32534;&#35793;&#22120;&#32534;&#35793;&#25104;ldr&nbsp;&nbsp;&nbsp;&nbsp; pc, [pc, #4080]&#65292;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;&#35813;&#25351;&#20196;&#20063;&#26159;&#20301;&#32622;&#26080;&#20851;&#30340;&#65292;&#20294;&#26159;&#26377;&#20010;&#38480;&#21046;&#65292;offset&#24517;&#39035;&#22312;4K&#30340;&#33539;&#22260;&#20869;&#65292;&#36825;&#20063;&#26159;&#20026;&#20309;&#23384;&#22312;stub section&#30340;&#21407;&#22240;&#20102;&#12290; </P>
<P>4&#12289;&#20013;&#26029;&#25511;&#21046;&#22120;&#30340;&#21021;&#22987;&#21270; </P>
<P>&#20855;&#20307;&#21487;&#20197;&#21442;&#32771;<A href="http://www.wowotech.net/linux_kenrel/gic-irq-chip-driver.html">GIC&#20195;&#30721;&#20998;&#26512;</A>&#12290; </P>
<P>&nbsp; </P>
<P>&#19977;&#12289;ARM HW&#23545;&#20013;&#26029;&#20107;&#20214;&#30340;&#22788;&#29702; </P>
<P>&#24403;&#19968;&#20999;&#20934;&#22791;&#22909;&#20043;&#21518;&#65292;&#19968;&#26086;&#25171;&#24320;&#22788;&#29702;&#22120;&#30340;&#20840;&#23616;&#20013;&#26029;&#23601;&#21487;&#20197;&#22788;&#29702;&#26469;&#33258;&#22806;&#35774;&#30340;&#21508;&#31181;&#20013;&#26029;&#20107;&#20214;&#20102;&#12290; </P>
<P>&#24403;&#22806;&#35774;&#65288;SOC&#20869;&#37096;&#25110;&#32773;&#22806;&#37096;&#37117;&#21487;&#20197;&#65289;&#26816;&#27979;&#21040;&#20102;&#20013;&#26029;&#20107;&#20214;&#65292;&#23601;&#20250;&#36890;&#36807;interrupt requestion line&#19978;&#30340;&#30005;&#24179;&#25110;&#32773;&#36793;&#27839;&#65288;&#19978;&#21319;&#27839;&#25110;&#32773;&#19979;&#38477;&#27839;&#25110;&#32773;both&#65289;&#36890;&#30693;&#21040;&#35813;&#22806;&#35774;&#36830;&#25509;&#21040;&#30340;&#37027;&#20010;&#20013;&#26029;&#25511;&#21046;&#22120;&#65292;&#32780;&#20013;&#26029;&#25511;&#21046;&#22120;&#23601;&#20250;&#22312;&#22810;&#20010;&#22788;&#29702;&#22120;&#20013;&#36873;&#25321;&#19968;&#20010;&#65292;&#24182;&#25226;&#35813;&#20013;&#26029;&#36890;&#36807;IRQ&#65288;&#25110;&#32773;FIQ&#65292;&#26412;&#25991;&#19981;&#35752;&#35770;FIQ&#30340;&#24773;&#20917;&#65289;&#20998;&#21457;&#32473;&#35813;processor&#12290;ARM&#22788;&#29702;&#22120;&#24863;&#30693;&#21040;&#20102;&#20013;&#26029;&#20107;&#20214;&#21518;&#65292;&#20250;&#36827;&#34892;&#19979;&#38754;&#19968;&#31995;&#21015;&#30340;&#21160;&#20316;&#65306; </P>
<P>1&#12289;&#20462;&#25913;CPSR&#65288;Current Program Status Register&#65289;&#23492;&#23384;&#22120;&#20013;&#30340;M[4:0]&#12290;M[4:0]&#34920;&#31034;&#20102;ARM&#22788;&#29702;&#22120;&#24403;&#21069;&#22788;&#20110;&#30340;&#27169;&#24335;&#65288; processor modes&#65289;&#12290;ARM&#23450;&#20041;&#30340;mode&#21253;&#25324;&#65306; </P>
<TABLE class=ke-zeroborder cellSpacing=0 cellPadding=2 width=488 border=1>
<TBODY>
<TR>
<TD vAlign=top width=103>&#22788;&#29702;&#22120;&#27169;&#24335; </TD>
<TD vAlign=top width=100>&#32553;&#20889; </TD>
<TD vAlign=top width=164>&#23545;&#24212;&#30340;M[4:0]&#32534;&#30721; </TD>
<TD vAlign=top width=119>Privilege level </TD></TR>
<TR>
<TD vAlign=top width=105>User </TD>
<TD vAlign=top width=99>usr </TD>
<TD vAlign=top width=163>10000 </TD>
<TD vAlign=top width=119>PL0 </TD></TR>
<TR>
<TD vAlign=top width=107>FIQ </TD>
<TD vAlign=top width=99>fiq </TD>
<TD vAlign=top width=162>10001 </TD>
<TD vAlign=top width=118>PL1 </TD></TR>
<TR>
<TD vAlign=top width=109>IRQ </TD>
<TD vAlign=top width=98>irq </TD>
<TD vAlign=top width=161>10010 </TD>
<TD vAlign=top width=118>PL1 </TD></TR>
<TR>
<TD vAlign=top width=111>Supervisor </TD>
<TD vAlign=top width=98>svc </TD>
<TD vAlign=top width=161>10011 </TD>
<TD vAlign=top width=118>PL1 </TD></TR>
<TR>
<TD vAlign=top width=111>Monitor </TD>
<TD vAlign=top width=98>mon </TD>
<TD vAlign=top width=161>10110 </TD>
<TD vAlign=top width=118>PL1 </TD></TR>
<TR>
<TD vAlign=top width=111>Abort </TD>
<TD vAlign=top width=98>abt </TD>
<TD vAlign=top width=161>10111 </TD>
<TD vAlign=top width=118>PL1 </TD></TR>
<TR>
<TD vAlign=top width=111>Hyp </TD>
<TD vAlign=top width=98>hyp </TD>
<TD vAlign=top width=161>11010 </TD>
<TD vAlign=top width=118>PL2 </TD></TR>
<TR>
<TD vAlign=top width=111>Undefined </TD>
<TD vAlign=top width=98>und </TD>
<TD vAlign=top width=161>11011 </TD>
<TD vAlign=top width=118>PL1 </TD></TR>
<TR>
<TD vAlign=top width=111>System </TD>
<TD vAlign=top width=98>sys </TD>
<TD vAlign=top width=161>11111 </TD>
<TD vAlign=top width=118>PL1 </TD></TR></TBODY></TABLE>
<P>&#19968;&#26086;&#35774;&#23450;&#20102;CPSR.M&#65292;ARM&#22788;&#29702;&#22120;&#23601;&#20250;&#23558;processor mode&#20999;&#25442;&#21040;IRQ mode&#12290; </P>
<P>2&#12289;&#20445;&#23384;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#28857;&#30340;CPSR&#20540;&#65288;step 1&#20043;&#21069;&#30340;&#29366;&#24577;&#65289;&#21644;PC&#20540; </P>
<P>ARM&#22788;&#29702;&#22120;&#25903;&#25345;9&#31181;processor mode&#65292;&#27599;&#31181;mode&#30475;&#21040;&#30340;ARM core register&#65288;R0&#65374;R15&#65292;&#20849;&#35745;16&#20010;&#65289;&#37117;&#26159;&#19981;&#21516;&#30340;&#12290;&#27599;&#31181;mode&#37117;&#26159;&#20174;&#19968;&#20010;&#21253;&#25324;&#25152;&#26377;&#30340;Banked ARM core register&#20013;&#36873;&#21462;&#12290;&#20840;&#37096;Banked ARM core register&#21253;&#25324;&#65306; </P>
<TABLE class=ke-zeroborder cellSpacing=0 cellPadding=2 width=697 border=1>
<TBODY>
<TR>
<TD vAlign=top width=75>Usr </TD>
<TD vAlign=top width=73>System </TD>
<TD vAlign=top width=79>Hyp </TD>
<TD vAlign=top width=79>Supervisor </TD>
<TD vAlign=top width=78>abort </TD>
<TD vAlign=top width=79>undefined </TD>
<TD vAlign=top width=80>Monitor </TD>
<TD vAlign=top width=76>IRQ </TD>
<TD vAlign=top width=76>FIQ </TD></TR>
<TR>
<TD vAlign=top width=74>R0_usr </TD>
<TD vAlign=top width=73>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=82>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=72>R1_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=83>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R2_usr </TD>
<TD vAlign=top width=71>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R3_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R4_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R5_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R6_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R7_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>R8_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>R8_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>R9_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>R9_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>R10_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>R10_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>R11_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>R11_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>R12_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>R12_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>SP_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>SP_hyp </TD>
<TD vAlign=top width=79>SP_svc </TD>
<TD vAlign=top width=78>SP_abt </TD>
<TD vAlign=top width=80>SP_und </TD>
<TD vAlign=top width=84>SP_mon </TD>
<TD vAlign=top width=76>SP_irq </TD>
<TD vAlign=top width=75>SP_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>LR_usr </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>LR_svc </TD>
<TD vAlign=top width=78>LR_abt </TD>
<TD vAlign=top width=80>LR_und </TD>
<TD vAlign=top width=84>LR_mon </TD>
<TD vAlign=top width=76>LR_irq </TD>
<TD vAlign=top width=75>LR_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>PC </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>CPSR </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=80>&nbsp; </TD>
<TD vAlign=top width=84>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=75>&nbsp; </TD></TR>
<TR>
<TD vAlign=top width=73>&nbsp; </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>SPSR_hyp </TD>
<TD vAlign=top width=79>SPSR_svc </TD>
<TD vAlign=top width=78>SPSR_abt </TD>
<TD vAlign=top width=80>SPSR_und </TD>
<TD vAlign=top width=84>SPSR_mon </TD>
<TD vAlign=top width=76>SPSR_irq </TD>
<TD vAlign=top width=75>SPSR_fiq </TD></TR>
<TR>
<TD vAlign=top width=73>&nbsp; </TD>
<TD vAlign=top width=72>&nbsp; </TD>
<TD vAlign=top width=81>ELR_hyp </TD>
<TD vAlign=top width=79>&nbsp; </TD>
<TD vAlign=top width=78>&nbsp; </TD>
<TD vAlign=top width=81>&nbsp; </TD>
<TD vAlign=top width=85>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD>
<TD vAlign=top width=76>&nbsp; </TD></TR></TBODY></TABLE>
<P>&#22312;IRQ mode&#19979;&#65292;CPU&#30475;&#21040;&#30340;R0&#65374;R12&#23492;&#23384;&#22120;&#12289;PC&#20197;&#21450;CPSR&#26159;&#21644;usr mode&#65288;userspace&#65289;&#25110;&#32773;svc mode&#65288;kernel space&#65289;&#26159;&#19968;&#26679;&#30340;&#12290;&#19981;&#21516;&#30340;&#26159;IRQ mode&#19979;&#65292;&#26377;&#33258;&#24049;&#30340;R13(SP&#65292;stack pointer&#65289;&#12289;R14&#65288;LR&#65292;link register&#65289;&#21644;SPSR&#65288;Saved Program Status Register&#65289;&#12290; </P>
<P>CPSR&#26159;&#20849;&#29992;&#30340;&#65292;&#34429;&#28982;&#20013;&#26029;&#21487;&#33021;&#21457;&#29983;&#22312;usr mode&#65288;&#29992;&#25143;&#31354;&#38388;&#65289;&#65292;&#20063;&#21487;&#33021;&#26159;svc mode&#65288;&#20869;&#26680;&#31354;&#38388;&#65289;&#65292;&#19981;&#36807;&#36825;&#20123;&#20449;&#24687;&#37117;&#26159;&#20307;&#29616;&#22312;CPSR&#23492;&#23384;&#22120;&#20013;&#12290;&#30828;&#20214;&#20250;&#23558;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#21051;&#30340;CPSR&#20445;&#23384;&#22312;SPSR&#23492;&#23384;&#22120;&#20013;&#65288;&#30001;&#20110;&#19981;&#21516;&#30340;mode&#19979;&#26377;&#19981;&#21516;&#30340;SPSR&#23492;&#23384;&#22120;&#65292;&#22240;&#27492;&#26356;&#20934;&#30830;&#30340;&#35828;&#24212;&#35813;&#26159;SPSR-irq&#65292;&#20063;&#23601;&#26159;IRQ mode&#20013;&#30340;SPSR&#23492;&#23384;&#22120;&#65289;&#12290; </P>
<P>PC&#20063;&#26159;&#20849;&#29992;&#30340;&#65292;&#30001;&#20110;&#21518;&#32493;PC&#20250;&#34987;&#20462;&#25913;&#20026;irq exception vector&#65292;&#22240;&#27492;&#26377;&#24517;&#35201;&#20445;&#23384;PC&#20540;&#12290;&#24403;&#28982;&#65292;&#19982;&#20854;&#35828;&#20445;&#23384;PC&#20540;&#65292;&#19981;&#22914;&#35828;&#26159;&#20445;&#23384;&#36820;&#22238;&#25191;&#34892;&#30340;&#22320;&#22336;&#12290;&#23545;&#20110;IRQ&#32780;&#35328;&#65292;&#25105;&#20204;&#26399;&#26395;&#36820;&#22238;&#22320;&#22336;&#26159;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#28857;&#25191;&#34892;&#25351;&#20196;&#30340;&#19979;&#19968;&#26465;&#25351;&#20196;&#12290;&#20855;&#20307;&#30340;&#36820;&#22238;&#22320;&#22336;&#20445;&#23384;&#22312;lr&#23492;&#23384;&#22120;&#20013;&#65288;&#27880;&#24847;&#65306;&#36825;&#20010;lr&#23492;&#23384;&#22120;&#26159;IRQ mode&#30340;lr&#23492;&#23384;&#22120;&#65292;&#21487;&#20197;&#34920;&#31034;&#20026;lr_irq&#65289;&#65306; </P>
<P>&#65288;1&#65289;&#23545;&#20110;thumb state&#65292;lr_irq &#65309; PC </P>
<P>&#65288;2&#65289;&#23545;&#20110;ARM state&#65292;lr_irq &#65309; PC &#65293; 4 </P>
<P>&#20026;&#20309;&#35201;&#20943;&#21435;4&#65311;&#25105;&#30340;&#29702;&#35299;&#26159;&#36825;&#26679;&#30340;&#65288;&#19981;&#19968;&#23450;&#23545;&#65289;&#12290;&#30001;&#20110;ARM&#37319;&#29992;&#27969;&#27700;&#32447;&#32467;&#26500;&#65292;&#24403;CPU&#27491;&#22312;&#25191;&#34892;&#26576;&#19968;&#26465;&#25351;&#20196;&#30340;&#26102;&#20505;&#65292;&#20854;&#23454;&#21462;&#25351;&#30340;&#21160;&#20316;&#26089;&#23601;&#25191;&#34892;&#20102;&#65292;&#36825;&#26102;&#20505;PC&#20540;&#65309;&#27491;&#22312;&#25191;&#34892;&#30340;&#25351;&#20196;&#22320;&#22336; &#65291; 8&#65292;&#22914;&#19979;&#25152;&#31034;&#65306; </P>
<P>&#65293;&#65293;&#65293;&#65293;&gt; &#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;4 </P>
<P>&#65293;PC&#65293;&#65293;&gt;&#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;8 </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;12 </P>
<P>&#19968;&#26086;&#21457;&#29983;&#20102;&#20013;&#26029;&#65292;&#24403;&#21069;&#27491;&#22312;&#25191;&#34892;&#30340;&#25351;&#20196;&#24403;&#28982;&#35201;&#25191;&#34892;&#23436;&#27605;&#65292;&#20294;&#26159;&#24050;&#32463;&#23436;&#25104;&#21462;&#25351;&#12289;&#35793;&#30721;&#30340;&#25351;&#20196;&#21017;&#32456;&#27490;&#25191;&#34892;&#12290;&#24403;&#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#25191;&#34892;&#23436;&#27605;&#20043;&#21518;&#65292;&#21407;&#26469;&#25351;&#21521;&#65288;&#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;8&#65289;&#30340;PC&#20250;&#32487;&#32493;&#22686;&#21152;4&#65292;&#22240;&#27492;&#21457;&#29983;&#20013;&#26029;&#21518;&#65292;ARM core&#30340;&#30828;&#20214;&#30528;&#25163;&#22788;&#29702;&#35813;&#20013;&#26029;&#30340;&#26102;&#20505;&#65292;&#30828;&#20214;&#29616;&#22330;&#22914;&#19979;&#22270;&#25152;&#31034;&#65306; </P>
<P><BR></P>
<P>&#65293;&#65293;&#65293;&#65293;&gt; &#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;4 &lt;-------&#20013;&#26029;&#36820;&#22238;&#30340;&#25351;&#20196;&#26159;&#36825;&#26465;&#25351;&#20196; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;8 </P>&#65293;PC&#65293;&#65293;&gt;&#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;12 
<P><BR></P>
<P>&#36825;&#26102;&#20505;&#30340;PC&#20540;&#20854;&#23454;&#26159;&#27604;&#21457;&#29983;&#20013;&#26029;&#26102;&#20505;&#30340;&#25351;&#20196;&#36229;&#21069;12&#12290;&#20943;&#21435;4&#20043;&#21518;&#65292;lr_irq&#20013;&#20445;&#23384;&#20102;&#65288;&#21457;&#29983;&#20013;&#26029;&#30340;&#25351;&#20196;&#65291;8&#65289;&#30340;&#22320;&#22336;&#12290;&#20026;&#20160;&#20040;HW&#19981;&#24110;&#24537;&#30452;&#25509;&#20943;&#21435;8&#21602;&#65311;&#36825;&#26679;&#65292;&#21518;&#32493;&#36719;&#20214;&#19981;&#23601;&#19981;&#29992;&#20877;&#20943;&#21435;4&#20102;&#12290;&#36825;&#37324;&#25105;&#20204;&#19981;&#33021;&#23396;&#31435;&#30340;&#30475;&#24453;&#38382;&#39064;&#65292;&#23454;&#38469;&#19978;ARM&#30340;&#24322;&#24120;&#22788;&#29702;&#30340;&#30828;&#20214;&#36923;&#36753;&#19981;&#20165;&#20165;&#22788;&#29702;IRQ&#30340;exception&#65292;&#36824;&#35201;&#22788;&#29702;&#21508;&#31181;exception&#65292;&#24456;&#36951;&#25022;&#65292;&#19981;&#21516;&#30340;exception&#26399;&#26395;&#30340;&#36820;&#22238;&#22320;&#22336;&#19981;&#32479;&#19968;&#65292;&#22240;&#27492;&#65292;&#30828;&#20214;&#21482;&#26159;&#24110;&#24537;&#20943;&#21435;4&#65292;&#21097;&#19979;&#30340;&#20132;&#32473;&#36719;&#20214;&#21435;&#35843;&#25972;&#12290; </P>
<P>3&#12289;mask IRQ exception&#12290;&#20063;&#23601;&#26159;&#35774;&#23450;CPSR.I = 1 </P>
<P>4&#12289;&#35774;&#23450;PC&#20540;&#20026;IRQ exception vector&#12290;&#22522;&#26412;&#19978;&#65292;ARM&#22788;&#29702;&#22120;&#30340;&#30828;&#20214;&#23601;&#21482;&#33021;&#24110;&#20320;&#24110;&#21040;&#36825;&#37324;&#20102;&#65292;&#19968;&#26086;&#35774;&#23450;PC&#20540;&#65292;ARM&#22788;&#29702;&#22120;&#23601;&#20250;&#36339;&#36716;&#21040;IRQ&#30340;exception vector&#22320;&#22336;&#20102;&#65292;&#21518;&#32493;&#30340;&#21160;&#20316;&#37117;&#26159;&#36719;&#20214;&#34892;&#20026;&#20102;&#12290; </P>
<P>&nbsp; </P>
<P>&#22235;&#12289;&#22914;&#20309;&#36827;&#20837;ARM&#20013;&#26029;&#22788;&#29702; </P>
<P>1&#12289;IRQ mode&#20013;&#30340;&#22788;&#29702; </P>
<P>IRQ mode&#30340;&#22788;&#29702;&#37117;&#22312;vector_irq&#20013;&#65292;vector_stub&#26159;&#19968;&#20010;&#23439;&#65292;&#23450;&#20041;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>.macro&nbsp;&nbsp;&nbsp; vector_stub, name, mode, correction=0 <BR>&nbsp;&nbsp;&nbsp; .align&nbsp;&nbsp;&nbsp; 5 </P>
<P>vector_\name: <BR>&nbsp;&nbsp;&nbsp; .if \correction <BR>&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp; lr, lr, #\correction&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;1&#65289; <BR>&nbsp;&nbsp;&nbsp; .endif </P>
<P>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; @ Save r0, lr_<EXCEPTION> (parent PC) and spsr_<EXCEPTION> <BR>&nbsp;&nbsp;&nbsp; @ (parent CPSR) <BR>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; stmia&nbsp;&nbsp;&nbsp; sp, {r0, lr}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ save r0, lr&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;2&#65289; <BR>&nbsp;&nbsp;&nbsp; mrs&nbsp;&nbsp;&nbsp; lr, spsr <BR>&nbsp;&nbsp;&nbsp; str&nbsp;&nbsp;&nbsp; lr, [sp, #8]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ save spsr</EXCEPTION></EXCEPTION> </P>
<P>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; @ Prepare for SVC32 mode.&nbsp; IRQs remain disabled. <BR>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; mrs&nbsp;&nbsp;&nbsp; r0, cpsr&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;3&#65289; <BR>&nbsp;&nbsp;&nbsp; eor&nbsp;&nbsp;&nbsp; r0, r0, #(\mode ^ SVC_MODE | PSR_ISETSTATE) <BR>&nbsp;&nbsp;&nbsp; msr&nbsp;&nbsp;&nbsp; spsr_cxsf, r0 </P>
<P>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; @ the branch table must immediately follow this code <BR>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; and&nbsp;&nbsp;&nbsp; lr, lr, #0x0f&#65293;&#65293;&#65293;lr&#20445;&#23384;&#20102;&#21457;&#29983;IRQ&#26102;&#20505;&#30340;CPSR&#65292;&#36890;&#36807;and&#25805;&#20316;&#65292;&#21487;&#20197;&#33719;&#21462;CPSR.M[3:0]&#30340;&#20540; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#36825;&#26102;&#20505;&#65292;&#22914;&#26524;&#20013;&#26029;&#21457;&#29983;&#22312;&#29992;&#25143;&#31354;&#38388;&#65292;lr=0&#65292;&#22914;&#26524;&#26159;&#20869;&#26680;&#31354;&#38388;&#65292;lr=3 <BR>THUMB( adr&nbsp;&nbsp;&nbsp; r0, 1f&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; )&#65293;&#65293;&#65293;&#65293;&#26681;&#25454;&#24403;&#21069;PC&#20540;&#65292;&#33719;&#21462;lable 1&#30340;&#22320;&#22336; <BR>THUMB( ldr&nbsp;&nbsp;&nbsp; lr, [r0, lr, lsl #2]&nbsp; )&#65293;lr&#26681;&#25454;&#24403;&#21069;mode&#65292;&#35201;&#20040;&#26159;__irq_usr&#30340;&#22320;&#22336; &#65292;&#35201;&#20040;&#26159;__irq_svc&#30340;&#22320;&#22336; <BR>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; r0, sp&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23558;irq mode&#30340;stack point&#36890;&#36807;r0&#20256;&#36882;&#32473;&#21363;&#23558;&#36339;&#36716;&#30340;&#20989;&#25968; <BR>ARM(&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; lr, [pc, lr, lsl #2]&nbsp;&nbsp;&nbsp; )&#65293;&#65293;&#65293;&#26681;&#25454;mode&#65292;&#32473;lr&#36171;&#20540;&#65292;__irq_usr&#25110;&#32773;__irq_svc <BR>&nbsp;&nbsp;&nbsp; movs&nbsp;&nbsp;&nbsp; pc, lr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ branch to handler in SVC mode&#65293;&#65293;&#65293;&#65293;&#65293;&#65288;4&#65289; <BR>ENDPROC(vector_\name) </P>
<P>&nbsp;&nbsp;&nbsp; .align&nbsp;&nbsp;&nbsp; 2 <BR>&nbsp;&nbsp;&nbsp; @ handler addresses follow this label <BR>1: <BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>&#65288;1&#65289;&#25105;&#20204;&#26399;&#26395;&#22312;&#26632;&#19978;&#20445;&#23384;&#21457;&#29983;&#20013;&#26029;&#26102;&#20505;&#30340;&#30828;&#20214;&#29616;&#22330;&#65288;HW context&#65289;&#65292;&#36825;&#37324;&#23601;&#21253;&#25324;ARM&#30340;core register&#12290;&#19978;&#19968;&#31456;&#25105;&#20204;&#24050;&#32463;&#20102;&#35299;&#21040;&#65292;&#24403;&#21457;&#29983;IRQ&#20013;&#26029;&#30340;&#26102;&#20505;&#65292;lr&#20013;&#20445;&#23384;&#20102;&#21457;&#29983;&#20013;&#26029;&#30340;PC&#65291;4&#65292;&#22914;&#26524;&#20943;&#21435;4&#30340;&#35805;&#65292;&#24471;&#21040;&#30340;&#23601;&#26159;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#28857;&#30340;PC&#20540;&#12290; </P>
<P>&#65288;2&#65289;&#24403;&#21069;&#26159;IRQ mode&#65292;SP_irq&#22312;&#21021;&#22987;&#21270;&#30340;&#26102;&#20505;&#24050;&#32463;&#35774;&#23450;&#65288;12&#20010;&#23383;&#33410;&#65289;&#12290;&#22312;irq mode&#30340;stack&#19978;&#65292;&#20381;&#27425;&#20445;&#23384;&#20102;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#28857;&#30340;r0&#20540;&#12289;PC&#20540;&#20197;&#21450;CPSR&#20540;&#65288;&#20855;&#20307;&#25805;&#20316;&#26159;&#36890;&#36807;spsr&#36827;&#34892;&#30340;&#65292;&#20854;&#23454;&#30828;&#20214;&#24050;&#32463;&#24110;&#25105;&#20204;&#20445;&#23384;&#20102;CPSR&#21040;SPSR&#20013;&#20102;&#65289;&#12290;&#20026;&#20309;&#35201;&#20445;&#23384;r0&#20540;&#65311;&#22240;&#20026;&#38543;&#21518;&#30340;&#20195;&#30721;&#35201;&#20351;&#29992;r0&#23492;&#23384;&#22120;&#65292;&#22240;&#27492;&#25105;&#20204;&#35201;&#25226;r0&#25918;&#21040;&#26632;&#19978;&#65292;&#21482;&#26377;&#36825;&#26679;&#25165;&#33021;&#23436;&#23436;&#20840;&#20840;&#24674;&#22797;&#30828;&#20214;&#29616;&#22330;&#12290; </P>
<P>&#65288;3&#65289;&#21487;&#24604;&#30340;IRQ mode&#31245;&#32437;&#21363;&#36893;&#65292;&#36825;&#27573;&#20195;&#30721;&#23601;&#26159;&#20934;&#22791;&#23558;ARM&#25512;&#36865;&#21040;SVC mode&#12290;&#22914;&#20309;&#20934;&#22791;&#65311;&#20854;&#23454;&#23601;&#26159;&#20462;&#25913;SPSR&#30340;&#20540;&#65292;SPSR&#19981;&#26159;CPSR&#65292;&#19981;&#20250;&#24341;&#36215;processor mode&#30340;&#20999;&#25442;&#65288;&#27605;&#31455;&#36825;&#19968;&#27493;&#21482;&#26159;&#20934;&#22791;&#32780;&#24050;&#65289;&#12290; </P>
<P>&#65288;4&#65289;&#24456;&#22810;&#24322;&#24120;&#22788;&#29702;&#30340;&#20195;&#30721;&#36820;&#22238;&#30340;&#26102;&#20505;&#37117;&#26159;&#20351;&#29992;&#20102;stack&#30456;&#20851;&#30340;&#25805;&#20316;&#65292;&#36825;&#37324;&#27809;&#26377;&#12290;&#8220;movs&nbsp;&nbsp;&nbsp; pc, lr &#8221;&#25351;&#20196;&#38500;&#20102;&#23383;&#38754;&#19978;&#24847;&#24605;&#65288;&#25226;lr&#30340;&#20540;&#20184;&#32473;pc&#65289;&#65292;&#36824;&#26377;&#19968;&#20010;&#38544;&#21547;&#30340;&#25805;&#20316;&#65288;movs&#20013;&#8216;s&#8217;&#30340;&#21547;&#20041;&#65289;&#65306;&#25226;SPSR copy&#21040;CPSR&#65292;&#20174;&#32780;&#23454;&#29616;&#20102;&#27169;&#24335;&#30340;&#20999;&#25442;&#12290; </P>
<P>2&#12289;&#24403;&#21457;&#29983;&#20013;&#26029;&#30340;&#26102;&#20505;&#65292;&#20195;&#30721;&#36816;&#34892;&#22312;&#29992;&#25143;&#31354;&#38388; </P>
<P>Interrupt dispatcher&#30340;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>vector_stub&nbsp;&nbsp;&nbsp; irq, IRQ_MODE, 4 &#65293;&#65293;&#65293;&#65293;&#65293;&#20943;&#21435;4&#65292;&#30830;&#20445;&#36820;&#22238;&#21457;&#29983;&#20013;&#26029;&#20043;&#21518;&#30340;&#37027;&#26465;&#25351;&#20196; </P>
<P>.long&nbsp;&nbsp;&nbsp; __irq_usr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 0&nbsp; (USR_26 / USR_32)&nbsp;&nbsp; &lt;---------------------&gt; base address + 0 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 1&nbsp; (FIQ_26 / FIQ_32) <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 2&nbsp; (IRQ_26 / IRQ_32) <BR>.long&nbsp;&nbsp;&nbsp; __irq_svc&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 3&nbsp; (SVC_26 / SVC_32)&lt;---------------------&gt; base address + 12 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 4 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 5 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 6 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 7 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 8 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; 9 <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; a <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; b <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; c <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; d <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; e <BR>.long&nbsp;&nbsp;&nbsp; __irq_invalid&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @&nbsp; f </P></BLOCKQUOTE>
<P>&#36825;&#20854;&#23454;&#23601;&#26159;&#19968;&#20010;lookup table&#65292;&#26681;&#25454;CPSR.M[3:0]&#30340;&#20540;&#36827;&#34892;&#36339;&#36716;&#65288;&#21442;&#32771;&#19978;&#19968;&#33410;&#30340;&#20195;&#30721;&#65306;and&nbsp;&nbsp;&nbsp; lr, lr, #0x0f&#65289;&#12290;&#22240;&#27492;&#65292;&#35813;lookup table&#20849;&#35774;&#23450;&#20102;16&#20010;&#20837;&#21475;&#65292;&#24403;&#28982;&#21482;&#26377;&#20004;&#39033;&#26377;&#25928;&#65292;&#20998;&#21035;&#23545;&#24212;user mode&#21644;svc mode&#30340;&#36339;&#36716;&#22320;&#22336;&#12290;&#20854;&#20182;&#20837;&#21475;&#30340;__irq_invalid&#20063;&#26159;&#38750;&#24120;&#20851;&#38190;&#30340;&#65292;&#36825;&#20445;&#35777;&#20102;&#22312;&#20854;&#27169;&#24335;&#19979;&#21457;&#29983;&#20102;&#20013;&#26029;&#65292;&#31995;&#32479;&#21487;&#20197;&#25429;&#33719;&#21040;&#36825;&#26679;&#30340;&#38169;&#35823;&#65292;&#20026;debug&#25552;&#20379;&#26377;&#29992;&#30340;&#20449;&#24687;&#12290; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .align&nbsp;&nbsp;&nbsp; 5 <BR>__irq_usr: <BR>&nbsp;&nbsp;&nbsp; usr_entry&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35831;&#21442;&#32771;&#26412;&#31456;&#31532;&#19968;&#33410;&#65288;1&#65289;&#20445;&#23384;&#29992;&#25143;&#29616;&#22330;&#30340;&#25551;&#36848; <BR>&nbsp;&nbsp;&nbsp; kuser_cmpxchg_check&#65293;&#65293;&#65293;&#21644;&#26412;&#25991;&#25551;&#36848;&#30340;&#20869;&#23481;&#26080;&#20851;&#65292;&#36825;&#20123;&#19981;&#23601;&#20171;&#32461;&#20102; <BR>&nbsp;&nbsp;&nbsp; irq_handler&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#26680;&#24515;&#22788;&#29702;&#20869;&#23481;&#65292;&#35831;&#21442;&#32771;&#26412;&#31456;&#31532;&#20108;&#33410;&#30340;&#25551;&#36848; <BR>&nbsp;&nbsp;&nbsp; get_thread_info tsk&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;tsk&#26159;r9&#65292;&#25351;&#21521;&#24403;&#21069;&#30340;thread info&#25968;&#25454;&#32467;&#26500; <BR>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; why, #0&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;why&#26159;r8 <BR>&nbsp;&nbsp;&nbsp; b&nbsp;&nbsp;&nbsp; ret_to_user_from_irq&#65293;&#65293;&#65293;&#65293;&#20013;&#26029;&#36820;&#22238;&#65292;&#19979;&#19968;&#31456;&#20250;&#35814;&#32454;&#25551;&#36848; </P></BLOCKQUOTE>
<P>why&#20854;&#23454;&#23601;&#26159;r8&#23492;&#23384;&#22120;&#65292;&#29992;&#26469;&#20256;&#36882;&#21442;&#25968;&#30340;&#65292;&#34920;&#31034;&#26412;&#27425;&#25918;&#22238;&#29992;&#25143;&#31354;&#38388;&#30456;&#20851;&#30340;&#31995;&#32479;&#35843;&#29992;&#26159;&#21738;&#20010;&#65311;&#20013;&#26029;&#22788;&#29702;&#36825;&#20010;&#22330;&#26223;&#21644;&#31995;&#32479;&#35843;&#29992;&#26080;&#20851;&#65292;&#22240;&#27492;&#35774;&#23450;&#20026;0&#12290; </P>
<P>&#65288;1&#65289;&#20445;&#23384;&#21457;&#29983;&#20013;&#26029;&#26102;&#20505;&#30340;&#29616;&#22330;&#12290;&#25152;&#35859;&#20445;&#23384;&#29616;&#22330;&#20854;&#23454;&#23601;&#26159;&#25226;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#21051;&#30340;&#30828;&#20214;&#19978;&#19979;&#25991;&#65288;&#21508;&#20010;&#23492;&#23384;&#22120;&#65289;&#20445;&#23384;&#22312;&#20102;SVC mode&#30340;stack&#19978;&#12290; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .macro&nbsp;&nbsp;&nbsp; usr_entry <BR>&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp; sp, sp, #S_FRAME_SIZE&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;A <BR>&nbsp;&nbsp;&nbsp; stmib&nbsp;&nbsp;&nbsp; sp, {r1 - r12} &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;B </P>
<P>&nbsp;&nbsp;&nbsp; ldmia&nbsp;&nbsp;&nbsp; r0, {r3 - r5}&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;C <BR>&nbsp;&nbsp;&nbsp; add&nbsp;&nbsp;&nbsp; r0, sp, #S_PC&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;D <BR>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; r6, #-1&#65293;&#65293;&#65293;&#65293;orig_r0&#30340;&#20540; </P>
<P>&nbsp;&nbsp;&nbsp; str&nbsp;&nbsp;&nbsp; r3, [sp] &#65293;&#65293;&#65293;&#65293;&#20445;&#23384;&#20013;&#26029;&#37027;&#19968;&#21051;&#30340;r0 </P>
<P><BR>&nbsp;&nbsp;&nbsp; stmia&nbsp;&nbsp;&nbsp; r0, {r4 - r6}&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;E <BR>&nbsp;&nbsp;&nbsp; stmdb&nbsp;&nbsp;&nbsp; r0, {sp, lr}^&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;F <BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>A&#65306;&#20195;&#30721;&#25191;&#34892;&#21040;&#36825;&#37324;&#30340;&#26102;&#20505;&#65292;ARM&#22788;&#29702;&#24050;&#32463;&#20999;&#25442;&#21040;&#20102;SVC mode&#12290;&#19968;&#26086;&#36827;&#20837;SVC mode&#65292;ARM&#22788;&#29702;&#22120;&#30475;&#21040;&#30340;&#23492;&#23384;&#22120;&#24050;&#32463;&#21457;&#29983;&#21464;&#21270;&#65292;&#36825;&#37324;&#30340;sp&#24050;&#32463;&#21464;&#25104;&#20102;sp_svc&#20102;&#12290;&#22240;&#27492;&#65292;&#21518;&#32493;&#30340;&#21387;&#26632;&#25805;&#20316;&#37117;&#26159;&#21387;&#20837;&#20102;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#21051;&#30340;&#36827;&#31243;&#30340;&#65288;&#25110;&#32773;&#20869;&#26680;&#32447;&#31243;&#65289;&#20869;&#26680;&#26632;&#65288;svc mode&#26632;&#65289;&#12290;&#20855;&#20307;&#20445;&#23384;&#22810;&#23569;&#20010;&#23492;&#23384;&#22120;&#20540;&#65311;S_FRAME_SIZE&#24050;&#32463;&#32473;&#20986;&#20102;&#31572;&#26696;&#65292;&#36825;&#20010;&#20540;&#26159;18&#20010;&#23492;&#23384;&#22120;&#12290;r0&#65374;r15&#20877;&#21152;&#19978;CPSR&#20063;&#21482;&#26377;17&#20010;&#32780;&#24050;&#12290;&#20808;&#20445;&#30041;&#36825;&#20010;&#30097;&#38382;&#65292;&#25105;&#20204;&#31245;&#21518;&#22238;&#31572;&#12290; </P>
<P>B&#65306;&#21387;&#26632;&#39318;&#20808;&#21387;&#20837;&#20102;r1&#65374;r12&#65292;&#36825;&#37324;&#20026;&#20309;&#19981;&#22788;&#29702;r0&#65311;&#22240;&#20026;r0&#22312;irq mode&#20999;&#21040;svc mode&#30340;&#26102;&#20505;&#34987;&#27745;&#26579;&#20102;&#65292;&#19981;&#36807;&#65292;&#21407;&#22987;&#30340;r0&#34987;&#20445;&#23384;&#30340;irq mode&#30340;stack&#19978;&#20102;&#12290;r13&#65288;sp&#65289;&#21644;r14&#65288;lr&#65289;&#38656;&#35201;&#20445;&#23384;&#21527;&#65292;&#24403;&#28982;&#38656;&#35201;&#65292;&#31245;&#21518;&#20877;&#20445;&#23384;&#12290;&#25191;&#34892;&#21040;&#36825;&#37324;&#65292;&#20869;&#26680;&#26632;&#30340;&#24067;&#23616;&#22914;&#19979;&#22270;&#25152;&#31034;&#65306; </P>
<P><A href="http://www.wowotech.net/content/uploadfile/201408/32572263b95c491559fbd6565ab8ac0120140804112618.gif"><IMG title=ir1 style="BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; DISPLAY: inline; BORDER-TOP-WIDTH: 0px" border=0 alt=ir1 src="http://www.wowotech.net/content/uploadfile/201408/261fb83e53959bbb4c5a1010535250ef20140804112621.gif" width=660 height=474></A> </P>
<P>stmib&#20013;&#30340;ib&#34920;&#31034;increment before&#65292;&#22240;&#27492;&#65292;&#22312;&#21387;&#20837;R1&#30340;&#26102;&#20505;&#65292;stack pointer&#20250;&#20808;&#22686;&#21152;4&#65292;&#37325;&#35201;&#26159;&#39044;&#30041;r0&#30340;&#20301;&#32622;&#12290;stmib&nbsp;&nbsp;&nbsp; sp, {r1 - r12}&#25351;&#20196;&#20013;&#30340;sp&#27809;&#26377;&#8220;&#65281;&#8221;&#30340;&#20462;&#39280;&#31526;&#65292;&#34920;&#31034;&#21387;&#26632;&#23436;&#25104;&#21518;&#24182;&#19981;&#20250;&#30495;&#27491;&#26356;&#26032;stack pointer&#65292;&#22240;&#27492;sp&#20445;&#25345;&#21407;&#26469;&#30340;&#20540;&#12290; </P>
<P>C&#65306;&#27880;&#24847;&#65292;&#36825;&#37324;r0&#25351;&#21521;&#20102;irq stack&#65292;&#22240;&#27492;&#65292;r3&#26159;&#20013;&#26029;&#26102;&#20505;&#30340;r0&#20540;&#65292;r4&#26159;&#20013;&#26029;&#29616;&#22330;&#30340;PC&#20540;&#65292;r5&#26159;&#20013;&#26029;&#29616;&#22330;&#30340;CPSR&#20540;&#12290; </P>
<P>D&#65306;&#25226;r0&#36171;&#20540;&#20026;S_PC&#30340;&#20540;&#12290;&#26681;&#25454;struct pt_regs&#30340;&#23450;&#20041;&#65288;&#36825;&#20010;&#25968;&#25454;&#32467;&#26500;&#21453;&#24212;&#20102;&#20869;&#26680;&#26632;&#19978;&#30340;&#20445;&#23384;&#30340;&#23492;&#23384;&#22120;&#30340;&#25490;&#21015;&#20449;&#24687;&#65289;&#65292;&#20174;&#20302;&#22320;&#22336;&#21040;&#39640;&#22320;&#22336;&#20381;&#27425;&#20026;&#65306; </P>
<BLOCKQUOTE>
<P>ARM_r0 <BR>ARM_r1 <BR>ARM_r2 <BR>ARM_r3 <BR>ARM_r4 <BR>ARM_r5 <BR>ARM_r6 <BR>ARM_r7 <BR>ARM_r8 <BR>ARM_r9 <BR>ARM_r10 <BR>ARM_fp <BR>ARM_ip <BR>ARM_sp&nbsp; <BR>ARM_lr <BR>ARM_pc&lt;---------add&nbsp;&nbsp;&nbsp; r0, sp, #S_PC&#25351;&#20196;&#20351;&#24471;r0&#25351;&#21521;&#20102;&#36825;&#20010;&#20301;&#32622; <BR>ARM_cpsr <BR>ARM_ORIG_r0 </P></BLOCKQUOTE>
<P>&#20026;&#20160;&#20040;&#35201;&#32473;r0&#36171;&#20540;&#65311;&#22240;&#27492;kernel&#19981;&#24819;&#20462;&#25913;sp&#30340;&#20540;&#65292;&#20445;&#25345;sp&#25351;&#21521;&#26632;&#39030;&#12290; </P>
<P>E&#65306;&#22312;&#20869;&#26680;&#26632;&#19978;&#20445;&#23384;&#21097;&#20313;&#30340;&#23492;&#23384;&#22120;&#30340;&#20540;&#65292;&#26681;&#25454;&#20195;&#30721;&#65292;&#20381;&#27425;&#26159;r0&#65292;PC&#65292;CPSR&#21644;orig r0&#12290;&#25191;&#34892;&#21040;&#36825;&#37324;&#65292;&#20869;&#26680;&#26632;&#30340;&#24067;&#23616;&#22914;&#19979;&#22270;&#25152;&#31034;&#65306; </P>
<P><A href="http://www.wowotech.net/content/uploadfile/201408/ea950dbe632d27f5a52c8bd99374722020140804112627.gif"><IMG title=ir2 style="BORDER-LEFT-WIDTH: 0px; BORDER-RIGHT-WIDTH: 0px; BORDER-BOTTOM-WIDTH: 0px; DISPLAY: inline; BORDER-TOP-WIDTH: 0px" border=0 alt=ir2 src="http://www.wowotech.net/content/uploadfile/201408/cd10858b99efb3423f34f0c0ac57690b20140804112629.gif" width=669 height=479></A> </P>
<P>R0&#65292;PC&#21644;CPSR&#26469;&#33258;IRQ mode&#30340;stack&#12290;&#23454;&#38469;&#19978;&#36825;&#27573;&#25805;&#20316;&#23601;&#26159;&#20174;irq stack&#23601;&#20013;&#26029;&#29616;&#22330;&#25644;&#31227;&#21040;&#20869;&#26680;&#26632;&#19978;&#12290; </P>
<P>F&#65306;&#20869;&#26680;&#26632;&#19978;&#36824;&#26377;&#20004;&#20010;&#23492;&#23384;&#22120;&#27809;&#26377;&#20445;&#25345;&#65292;&#20998;&#21035;&#26159;&#21457;&#29983;&#20013;&#26029;&#26102;&#20505;sp&#21644;lr&#36825;&#20004;&#20010;&#23492;&#23384;&#22120;&#12290;&#36825;&#26102;&#20505;&#65292;r0&#25351;&#21521;&#20102;&#20445;&#23384;PC&#23492;&#23384;&#22120;&#37027;&#20010;&#22320;&#22336;&#65288;add&nbsp;&nbsp;&nbsp; r0, sp, #S_PC&#65289;&#65292;stmdb&nbsp;&nbsp;&nbsp; r0, {sp, lr}^&#20013;&#30340;&#8220;db&#8221;&#26159;decrement before&#65292;&#22240;&#27492;&#65292;&#23558;sp&#21644;lr&#21387;&#20837;stack&#20013;&#30340;&#21097;&#20313;&#30340;&#20004;&#20010;&#20301;&#32622;&#12290;&#38656;&#35201;&#27880;&#24847;&#30340;&#26159;&#65292;&#25105;&#20204;&#20445;&#23384;&#30340;&#26159;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#21051;&#65288;&#23545;&#20110;&#26412;&#33410;&#65292;&#36825;&#26159;&#24403;&#26102;user mode&#30340;sp&#21644;lr&#65289;&#65292;&#25351;&#20196;&#20013;&#30340;&#8220;^&#8221;&#31526;&#21495;&#34920;&#31034;&#35775;&#38382;user mode&#30340;&#23492;&#23384;&#22120;&#12290; </P>
<P>&#65288;2&#65289;&#26680;&#24515;&#22788;&#29702; </P>
<P>irq_handler&#30340;&#22788;&#29702;&#26377;&#20004;&#31181;&#37197;&#32622;&#12290;&#19968;&#31181;&#26159;&#37197;&#32622;&#20102;CONFIG_MULTI_IRQ_HANDLER&#12290;&#36825;&#31181;&#24773;&#20917;&#19979;&#65292;linux kernel&#20801;&#35768;run time&#35774;&#23450;irq handler&#12290;&#22914;&#26524;&#25105;&#20204;&#38656;&#35201;&#19968;&#20010;linux kernel image&#25903;&#25345;&#22810;&#20010;&#24179;&#21488;&#65292;&#36825;&#26159;&#23601;&#38656;&#35201;&#37197;&#32622;&#36825;&#20010;&#36873;&#39033;&#12290;&#21478;&#22806;&#19968;&#31181;&#26159;&#20256;&#32479;&#30340;linux&#30340;&#20570;&#27861;&#65292;irq_handler&#23454;&#38469;&#19978;&#23601;&#26159;arch_irq_handler_default&#65292;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .macro&nbsp;&nbsp;&nbsp; irq_handler <BR>#ifdef CONFIG_MULTI_IRQ_HANDLER <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; r1, =handle_arch_irq <BR>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; r0, sp&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#35774;&#23450;&#20256;&#36882;&#32473;machine&#23450;&#20041;&#30340;handle_arch_irq&#30340;&#21442;&#25968; <BR>&nbsp;&nbsp;&nbsp; adr&nbsp;&nbsp;&nbsp; lr, BSYM(9997f)&#65293;&#65293;&#65293;&#65293;&#35774;&#23450;&#36820;&#22238;&#22320;&#22336; <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; pc, [r1] <BR>#else <BR>&nbsp;&nbsp;&nbsp; arch_irq_handler_default <BR>#endif <BR>9997: <BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>&#23545;&#20110;&#24773;&#20917;&#19968;&#65292;machine&#30456;&#20851;&#20195;&#30721;&#38656;&#35201;&#35774;&#23450;handle_arch_irq&#20989;&#25968;&#25351;&#38024;&#65292;&#36825;&#37324;&#30340;&#27719;&#32534;&#25351;&#20196;&#21482;&#38656;&#35201;&#35843;&#29992;&#36825;&#20010;machine&#20195;&#30721;&#25552;&#20379;&#30340;irq handler&#21363;&#21487;&#65288;&#24403;&#28982;&#65292;&#35201;&#20934;&#22791;&#22909;&#21442;&#25968;&#20256;&#36882;&#21644;&#36820;&#22238;&#22320;&#22336;&#35774;&#23450;&#65289;&#12290; </P>
<P>&#24773;&#20917;&#20108;&#35201;&#31245;&#24494;&#22797;&#26434;&#19968;&#20123;&#65288;&#32780;&#19988;&#65292;&#30475;&#36215;&#26469;kernel&#20013;&#20351;&#29992;&#30340;&#36234;&#26469;&#36234;&#23569;&#65289;&#65292;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .macro&nbsp;&nbsp;&nbsp; arch_irq_handler_default <BR>&nbsp;&nbsp;&nbsp; get_irqnr_preamble r6, lr <BR>1:&nbsp;&nbsp;&nbsp; get_irqnr_and_base r0, r2, r6, lr <BR>&nbsp;&nbsp;&nbsp; movne&nbsp;&nbsp;&nbsp; r1, sp <BR>&nbsp;&nbsp;&nbsp; @ <BR>&nbsp;&nbsp;&nbsp; @ asm_do_IRQ &#38656;&#35201;&#20004;&#20010;&#21442;&#25968;&#65292;&#19968;&#20010;&#26159; irq number&#65288;&#20445;&#23384;&#22312;r0&#65289; <BR>&nbsp;&nbsp;&nbsp; @&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#21478;&#19968;&#20010;&#26159; struct pt_regs *&#65288;&#20445;&#23384;&#22312;r1&#20013;&#65289; <BR>&nbsp;&nbsp;&nbsp; adrne&nbsp;&nbsp;&nbsp; lr, BSYM(1b)&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#36820;&#22238;&#22320;&#22336;&#35774;&#23450;&#20026;&#31526;&#21495;1&#65292;&#20063;&#23601;&#26159;&#35828;&#35201;&#19981;&#26029;&#30340;&#35299;&#26512;irq&#29366;&#24577;&#23492;&#23384;&#22120; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#30340;&#20869;&#23481;&#65292;&#24471;&#21040;IRQ number&#65292;&#30452;&#21040;&#25152;&#26377;&#30340;irq number&#22788;&#29702;&#23436;&#27605; <BR>&nbsp;&nbsp;&nbsp; bne&nbsp;&nbsp;&nbsp; asm_do_IRQ&nbsp; <BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>&#36825;&#37324;&#30340;&#20195;&#30721;&#24050;&#32463;&#26159;&#21644;machine&#30456;&#20851;&#30340;&#20195;&#30721;&#20102;&#65292;&#25105;&#20204;&#36825;&#37324;&#21482;&#26159;&#31616;&#30701;&#25551;&#36848;&#19968;&#19979;&#12290;&#25152;&#35859;machine&#30456;&#20851;&#20063;&#23601;&#26159;&#35828;&#21644;&#31995;&#32479;&#20013;&#30340;&#20013;&#26029;&#25511;&#21046;&#22120;&#30456;&#20851;&#20102;&#12290;get_irqnr_preamble&#26159;&#20026;&#20013;&#26029;&#22788;&#29702;&#20570;&#20934;&#22791;&#65292;&#26377;&#20123;&#24179;&#21488;&#26681;&#26412;&#19981;&#38656;&#35201;&#36825;&#20010;&#27493;&#39588;&#65292;&#30452;&#25509;&#23450;&#20041;&#20026;&#31354;&#21363;&#21487;&#12290;get_irqnr_and_base &#26377;&#22235;&#20010;&#21442;&#25968;&#65292;&#20998;&#21035;&#26159;&#65306;r0&#20445;&#23384;&#20102;&#26412;&#27425;&#35299;&#26512;&#30340;irq number&#65292;r2&#26159;irq&#29366;&#24577;&#23492;&#23384;&#22120;&#30340;&#20540;&#65292;r6&#26159;irq controller&#30340;base address&#65292;lr&#26159;scratch register&#12290; </P>
<P>&#23545;&#20110;ARM&#24179;&#21488;&#32780;&#35328;&#65292;&#25105;&#20204;&#25512;&#33616;&#20351;&#29992;&#31532;&#19968;&#31181;&#26041;&#27861;&#65292;&#22240;&#20026;&#20174;&#36923;&#36753;&#19978;&#35762;&#65292;&#20013;&#26029;&#22788;&#29702;&#23601;&#26159;&#38656;&#35201;&#26681;&#25454;&#24403;&#21069;&#30340;&#30828;&#20214;&#20013;&#26029;&#31995;&#32479;&#30340;&#29366;&#24577;&#65292;&#36716;&#25442;&#25104;&#19968;&#20010;IRQ number&#65292;&#28982;&#21518;&#35843;&#29992;&#35813;IRQ number&#30340;&#22788;&#29702;&#20989;&#25968;&#21363;&#21487;&#12290;&#36890;&#36807;get_irqnr_and_base&#36825;&#26679;&#30340;&#23439;&#23450;&#20041;&#26469;&#33719;&#21462;IRQ&#26159;&#26087;&#30340;ARM SOC&#31995;&#32479;&#20351;&#29992;&#30340;&#26041;&#27861;&#65292;&#23427;&#26159;&#20551;&#35774;SOC&#19978;&#26377;&#19968;&#20010;&#20013;&#26029;&#25511;&#21046;&#22120;&#65292;&#30828;&#20214;&#29366;&#24577;&#21644;IRQ number&#20043;&#38388;&#30340;&#20851;&#31995;&#38750;&#24120;&#31616;&#21333;&#12290;&#20294;&#26159;&#23454;&#38469;&#19978;&#65292;ARM&#24179;&#21488;&#19978;&#30340;&#30828;&#20214;&#20013;&#26029;&#31995;&#32479;&#24050;&#32463;&#26159;&#36234;&#26469;&#36234;&#22797;&#26434;&#20102;&#65292;&#38656;&#35201;&#24341;&#20837;interrupt controller&#32423;&#32852;&#65292;irq domain&#31561;&#31561;&#27010;&#24565;&#65292;&#22240;&#27492;&#65292;&#20351;&#29992;&#31532;&#19968;&#31181;&#26041;&#27861;&#20248;&#28857;&#26356;&#22810;&#12290; </P>
<P>&nbsp; </P>
<P>3&#12289;&#24403;&#21457;&#29983;&#20013;&#26029;&#30340;&#26102;&#20505;&#65292;&#20195;&#30721;&#36816;&#34892;&#22312;&#20869;&#26680;&#31354;&#38388; </P>
<P>&#22914;&#26524;&#20013;&#26029;&#21457;&#29983;&#22312;&#20869;&#26680;&#31354;&#38388;&#65292;&#20195;&#30721;&#20250;&#36339;&#36716;&#21040;__irq_svc&#22788;&#25191;&#34892;&#65306; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .align&nbsp;&nbsp;&nbsp; 5 <BR>__irq_svc: <BR>&nbsp;&nbsp;&nbsp; svc_entry&#65293;&#65293;&#65293;&#65293;&#20445;&#23384;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#21051;&#30340;&#29616;&#22330;&#20445;&#23384;&#22312;&#20869;&#26680;&#26632;&#19978; <BR>&nbsp;&nbsp;&nbsp; irq_handler &#65293;&#65293;&#65293;&#65293;&#20855;&#20307;&#30340;&#20013;&#26029;&#22788;&#29702;&#65292;&#21516;user mode&#30340;&#22788;&#29702;&#12290; </P>
<P>#ifdef CONFIG_PREEMPT&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#21644;preempt&#30456;&#20851;&#30340;&#22788;&#29702; <BR>&nbsp;&nbsp;&nbsp; get_thread_info tsk <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; r8, [tsk, #TI_PREEMPT]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ get preempt count <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; r0, [tsk, #TI_FLAGS]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ get flags <BR>&nbsp;&nbsp;&nbsp; teq&nbsp;&nbsp;&nbsp; r8, #0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ if preempt count != 0 <BR>&nbsp;&nbsp;&nbsp; movne&nbsp;&nbsp;&nbsp; r0, #0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ force flags to 0 <BR>&nbsp;&nbsp;&nbsp; tst&nbsp;&nbsp;&nbsp; r0, #_TIF_NEED_RESCHED <BR>&nbsp;&nbsp;&nbsp; blne&nbsp;&nbsp;&nbsp; svc_preempt <BR>#endif </P>
<P>&nbsp;&nbsp;&nbsp; svc_exit r5, irq = 1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ return from exception </P></BLOCKQUOTE>
<P>&#19968;&#20010;task&#30340;thread info&#25968;&#25454;&#32467;&#26500;&#23450;&#20041;&#22914;&#19979;&#65288;&#21482;&#20445;&#30041;&#21644;&#26412;&#22330;&#26223;&#30456;&#20851;&#30340;&#20869;&#23481;&#65289;&#65306; </P>
<BLOCKQUOTE>
<P>struct thread_info { <BR>&nbsp;&nbsp;&nbsp; unsigned long&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; flags;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* low level flags */ <BR>&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; preempt_count;&nbsp;&nbsp;&nbsp; /* 0 =&gt; preemptable, &lt;0 =&gt; bug */ <BR>&nbsp;&nbsp;&nbsp; &#8230;&#8230; <BR>}; </P></BLOCKQUOTE>
<P>flag&#25104;&#21592;&#29992;&#26469;&#26631;&#35760;&#19968;&#20123;low level&#30340;flag&#65292;&#32780;preempt_count&#29992;&#26469;&#21028;&#26029;&#24403;&#21069;&#26159;&#21542;&#21487;&#20197;&#21457;&#29983;&#25250;&#21344;&#65292;&#22914;&#26524;preempt_count&#19981;&#31561;&#20110;0&#65288;&#21487;&#33021;&#26159;&#20195;&#30721;&#35843;&#29992;preempt_disable&#26174;&#24335;&#30340;&#31105;&#27490;&#20102;&#25250;&#21344;&#65292;&#20063;&#21487;&#33021;&#26159;&#22788;&#20110;&#20013;&#26029;&#19978;&#19979;&#25991;&#31561;&#65289;&#65292;&#35828;&#26126;&#24403;&#21069;&#19981;&#33021;&#36827;&#34892;&#25250;&#21344;&#65292;&#30452;&#25509;&#36827;&#20837;&#24674;&#22797;&#29616;&#22330;&#30340;&#24037;&#20316;&#12290;&#22914;&#26524;preempt_count&#31561;&#20110;0&#65292;&#35828;&#26126;&#24050;&#32463;&#20855;&#22791;&#20102;&#25250;&#21344;&#30340;&#26465;&#20214;&#65292;&#24403;&#28982;&#20855;&#20307;&#26159;&#21542;&#35201;&#25250;&#21344;&#24403;&#21069;&#36827;&#31243;&#36824;&#26159;&#35201;&#30475;&#30475;thread info&#20013;&#30340;flag&#25104;&#21592;&#26159;&#21542;&#35774;&#23450;&#20102;_TIF_NEED_RESCHED&#36825;&#20010;&#26631;&#35760;&#65288;&#21487;&#33021;&#26159;&#24403;&#21069;&#30340;&#36827;&#31243;&#30340;&#26102;&#38388;&#29255;&#29992;&#23436;&#20102;&#65292;&#20063;&#21487;&#33021;&#26159;&#30001;&#20110;&#20013;&#26029;&#21796;&#37266;&#20102;&#20248;&#20808;&#32423;&#26356;&#39640;&#30340;&#36827;&#31243;&#65289;&#12290; </P>
<P>&#20445;&#23384;&#29616;&#22330;&#30340;&#20195;&#30721;&#21644;user mode&#19979;&#30340;&#29616;&#22330;&#20445;&#23384;&#26159;&#31867;&#20284;&#30340;&#65292;&#22240;&#27492;&#36825;&#37324;&#19981;&#20877;&#35814;&#32454;&#25551;&#36848;&#65292;&#21482;&#26159;&#22312;&#19979;&#38754;&#30340;&#20195;&#30721;&#20013;&#20869;&#23884;&#19968;&#20123;&#27880;&#37322;&#12290; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .macro&nbsp;&nbsp;&nbsp; svc_entry, stack_hole=0 <BR>&nbsp;&nbsp;&nbsp; sub&nbsp;&nbsp;&nbsp; sp, sp, #(S_FRAME_SIZE + \stack_hole - 4)&#65293;&#65293;&#65293;&#65293;sp&#25351;&#21521;struct pt_regs&#20013;r1&#30340;&#20301;&#32622; <BR>&nbsp;&nbsp;&nbsp; stmia&nbsp;&nbsp;&nbsp; sp, {r1 - r12} &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23492;&#23384;&#22120;&#20837;&#26632;&#12290; </P>
<P>&nbsp;&nbsp;&nbsp; ldmia&nbsp;&nbsp;&nbsp; r0, {r3 - r5} <BR>&nbsp;&nbsp;&nbsp; add&nbsp;&nbsp;&nbsp; r7, sp, #S_SP - 4 &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;r7&#25351;&#21521;struct pt_regs&#20013;r12&#30340;&#20301;&#32622; <BR>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; r6, #-1 &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;orig r0&#35774;&#20026;-1 <BR>&nbsp;&nbsp;&nbsp; add&nbsp;&nbsp;&nbsp; r2, sp, #(S_FRAME_SIZE + \stack_hole - 4)&#65293;&#65293;&#65293;&#65293;r2&#26159;&#21457;&#29616;&#20013;&#26029;&#37027;&#19968;&#21051;stack&#30340;&#29616;&#22330; <BR>&nbsp;&nbsp;&nbsp; str&nbsp;&nbsp;&nbsp; r3, [sp, #-4]! &#65293;&#65293;&#65293;&#65293;&#20445;&#23384;r0&#65292;&#27880;&#24847;&#26377;&#19968;&#20010;&#65281;&#65292;sp&#20250;&#21152;&#19978;4&#65292;&#36825;&#26102;&#20505;sp&#23601;&#25351;&#21521;&#26632;&#39030;&#30340;r0&#20301;&#32622;&#20102; </P>
<P>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; r3, lr &#65293;&#65293;&#65293;&#65293;&#20445;&#23384;svc mode&#30340;lr&#21040;r3 <BR>&nbsp;&nbsp;&nbsp; stmia&nbsp;&nbsp;&nbsp; r7, {r2 - r6} &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#21387;&#26632;&#65292;&#22312;&#26632;&#19978;&#24418;&#25104;&#24418;&#25104;struct pt_regs <BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>&nbsp; </P>
<P>&#33267;&#27492;&#65292;&#22312;&#20869;&#26680;&#26632;&#19978;&#20445;&#23384;&#20102;&#23436;&#25972;&#30340;&#30828;&#20214;&#19978;&#19979;&#25991;&#12290;&#23454;&#38469;&#19978;&#19981;&#20294;&#23436;&#25972;&#65292;&#32780;&#19988;&#36824;&#26377;&#20123;&#20887;&#20313;&#65292;&#22240;&#20026;&#20854;&#20013;&#26377;&#19968;&#20010;orig_r0&#30340;&#25104;&#21592;&#12290;&#25152;&#35859;original r0&#23601;&#26159;&#21457;&#29983;&#20013;&#26029;&#37027;&#19968;&#21051;&#30340;r0&#20540;&#65292;&#25353;&#29702;&#35828;&#65292;ARM_r0&#21644;ARM_ORIG_r0&#37117;&#24212;&#35813;&#26159;&#29992;&#25143;&#31354;&#38388;&#30340;&#37027;&#20010;r0&#12290; &#20026;&#20309;&#35201;&#20445;&#23384;&#20004;&#20010;r0&#20540;&#21602;&#65311;&#20026;&#20309;&#20013;&#26029;&#23558;-1&#20445;&#23384;&#21040;&#20102;ARM_ORIG_r0&#20301;&#32622;&#21602;&#65311;&#29702;&#35299;&#36825;&#20010;&#38382;&#39064;&#38656;&#35201;&#36339;&#33073;&#20013;&#26029;&#22788;&#29702;&#36825;&#20010;&#20027;&#39064;&#65292;&#25105;&#20204;&#26469;&#30475;ARM&#30340;&#31995;&#32479;&#35843;&#29992;&#12290;&#23545;&#20110;&#31995;&#32479;&#35843;&#29992;&#65292;&#23427; &#21644;&#20013;&#26029;&#22788;&#29702;&#34429;&#28982;&#37117;&#26159;cpu&#24322;&#24120;&#22788;&#29702;&#33539;&#30068;&#65292;&#20294;&#26159;&#19968;&#20010;&#26126;&#26174;&#30340;&#19981;&#21516;&#26159;&#31995;&#32479;&#35843;&#29992;&#38656;&#35201;&#20256;&#36882;&#21442;&#25968;&#65292;&#36820;&#22238;&#32467;&#26524;&#12290;&#22914;&#26524;&#36827;&#34892;&#36825;&#26679;&#30340;&#21442;&#25968;&#20256;&#36882;&#21602;&#65311;&#23545;&#20110;ARM&#65292;&#24403;&#28982;&#26159;&#23492;&#23384;&#22120;&#20102;&#65292; &#29305;&#21035;&#26159;&#36820;&#22238;&#32467;&#26524;&#65292;&#20445;&#23384;&#22312;&#20102;r0&#20013;&#12290;&#23545;&#20110;ARM&#65292;r0&#65374;r7&#26159;&#21508;&#31181;cpu mode&#37117;&#30456;&#21516;&#30340;&#65292;&#29992;&#20110;&#20256;&#36882;&#21442;&#25968;&#36824;&#26159;&#24456;&#26041;&#20415;&#30340;&#12290;&#22240;&#27492;&#65292;&#36827;&#20837;&#31995;&#32479;&#35843;&#29992;&#30340;&#26102;&#20505;&#65292;&#22312;&#20869;&#26680;&#26632;&#19978;&#20445;&#23384;&#20102;&#21457;&#29983;&#31995;&#32479;&#35843;&#29992;&#29616;&#22330;&#30340;&#25152;&#26377;&#23492;&#23384;&#22120;&#65292;&#19968;&#26041;&#38754;&#20445;&#23384;&#20102;hardware context&#65292;&#21478;&#22806;&#19968;&#26041;&#38754;&#65292;&#20063;&#23601;&#26159;&#33719;&#21462;&#20102;&#31995;&#32479;&#35843;&#29992;&#30340;&#21442;&#25968;&#12290;&#36820;&#22238;&#30340;&#26102;&#20505;&#65292;&#23558;&#36820;&#22238;&#20540;&#25918;&#21040;r0&#23601;OK&#20102;&#12290; <BR>&#26681;&#25454;&#19978;&#38754;&#30340;&#25551;&#36848;&#65292;r0&#26377;&#20004;&#20010;&#20316;&#29992;&#65292;&#20256;&#36882;&#21442;&#25968;&#65292;&#36820;&#22238;&#32467;&#26524;&#12290;&#24403;&#25226;&#31995;&#32479;&#35843;&#29992;&#30340;&#32467;&#26524;&#25918;&#21040;r0&#30340;&#26102;&#20505;&#65292;&#36890;&#36807;r0&#20256;&#36882;&#30340;&#21442;&#25968;&#20540;&#23601;&#34987;&#35206;&#30422;&#20102;&#12290;&#26412;&#26469;&#65292;&#36825;&#20063;&#27809;&#26377;&#20160;&#20040;&#65292;&#20294;&#26159;&#26377;&#20123;&#22330;&#21512;&#26159;&#38656;&#35201;&#38656;&#35201;&#36825;&#20004;&#20010;&#20540;&#30340;&#65306; <BR>1&#12289;ptrace &#65288;&#21644;debugger&#30456;&#20851;&#65292;&#36825;&#37324;&#23601;&#19981;&#20877;&#35814;&#32454;&#25551;&#36848;&#20102;&#65289;<BR>2&#12289;system call restart &#65288;&#21644;signal&#30456;&#20851;&#65292;&#36825;&#37324;&#23601;&#19981;&#20877;&#35814;&#32454;&#25551;&#36848;&#20102;&#65289;<BR>&#27491;&#22240;&#20026;&#22914;&#27492;&#65292;&#30828;&#20214;&#19978;&#19979;&#25991;&#30340;&#23492;&#23384;&#22120;&#20013;r0&#26377;&#20004;&#20221;&#65292;ARM_r0&#26159;&#20256;&#36882;&#30340;&#21442;&#25968;&#65292;&#24182;&#22797;&#21046;&#19968;&#20221;&#21040;ARM_ORIG_r0&#65292;&#24403;&#31995;&#32479;&#35843;&#29992;&#36820;&#22238;&#30340;&#26102;&#20505;&#65292;ARM_r0&#26159;&#31995;&#32479;&#35843;&#29992;&#30340;&#36820;&#22238;&#20540;&#12290; <BR>OK&#65292;&#25105;&#20204;&#20877;&#22238;&#21040;&#20013;&#26029;&#36825;&#20010;&#20027;&#39064;&#65292;&#20854;&#23454;&#22312;&#20013;&#26029;&#22788;&#29702;&#36807;&#31243;&#20013;&#65292;&#27809;&#26377;&#20351;&#29992;ARM_ORIG_r0&#36825;&#20010;&#20540;&#65292;&#20294;&#26159;&#65292;&#20026;&#20102;&#38450;&#27490;system call restart&#65292;&#21487;&#20197;&#36171;&#20540;&#20026;&#38750;&#31995;&#32479;&#35843;&#29992;&#21495;&#30340;&#20540;&#65288;&#20363;&#22914;-1&#65289;&#12290; </P>
<P><BR></P>
<P>&#20116;&#12289;&#20013;&#26029;&#36864;&#20986;&#36807;&#31243; </P>
<P>&#26080;&#35770;&#26159;&#22312;&#20869;&#26680;&#24577;&#65288;&#21253;&#25324;&#31995;&#32479;&#35843;&#29992;&#21644;&#20013;&#26029;&#19978;&#19979;&#25991;&#65289;&#36824;&#26159;&#29992;&#25143;&#24577;&#65292;&#21457;&#29983;&#20102;&#20013;&#26029;&#21518;&#37117;&#20250;&#35843;&#29992;irq_handler&#36827;&#34892;&#22788;&#29702;&#65292;&#36825;&#37324;&#20250;&#35843;&#29992;&#23545;&#24212;&#30340;irq number&#30340;handler&#65292;&#22788;&#29702;softirq&#12289;tasklet&#12289;workqueue&#31561;&#65288;&#36825;&#20123;&#20869;&#23481;&#21478;&#24320;&#19968;&#20010;&#25991;&#26723;&#25551;&#36848;&#65289;&#65292;&#20294;&#26080;&#35770;&#22914;&#20309;&#65292;&#26368;&#32456;&#37117;&#26159;&#35201;&#36820;&#22238;&#21457;&#29983;&#20013;&#26029;&#30340;&#29616;&#22330;&#12290; </P>
<P>1&#12289;&#20013;&#26029;&#21457;&#29983;&#22312;user mode&#19979;&#30340;&#36864;&#20986;&#36807;&#31243;&#65292;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>ENTRY(ret_to_user_from_irq) <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; r1, [tsk, #TI_FLAGS] <BR>&nbsp;&nbsp;&nbsp; tst&nbsp;&nbsp;&nbsp; r1, #_TIF_WORK_MASK&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;A <BR>&nbsp;&nbsp;&nbsp; bne&nbsp;&nbsp;&nbsp; work_pending <BR>no_work_pending: <BR>&nbsp;&nbsp;&nbsp; asm_trace_hardirqs_on &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#21644;irq flag trace&#30456;&#20851;&#65292;&#26242;&#19988;&#30053;&#36807; </P>
<P>&nbsp;&nbsp;&nbsp; /* perform architecture specific actions before user return */ <BR>&nbsp;&nbsp;&nbsp; arch_ret_to_user r1, lr&#65293;&#65293;&#65293;&#65293;&#26377;&#20123;&#30828;&#20214;&#24179;&#21488;&#38656;&#35201;&#22312;&#20013;&#26029;&#36820;&#22238;&#29992;&#25143;&#31354;&#38388;&#20570;&#19968;&#20123;&#29305;&#21035;&#22788;&#29702; <BR>&nbsp;&nbsp;&nbsp; ct_user_enter save = 0 &#65293;&#65293;&#65293;&#65293;&#21644;trace context&#30456;&#20851;&#65292;&#26242;&#19988;&#30053;&#36807; </P>
<P>&nbsp;&nbsp;&nbsp; restore_user_regs fast = 0, offset = 0&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;B <BR>ENDPROC(ret_to_user_from_irq) <BR>ENDPROC(ret_to_user) </P></BLOCKQUOTE>
<P>A&#65306;thread_info&#20013;&#30340;flags&#25104;&#21592;&#20013;&#26377;&#19968;&#20123;low level&#30340;&#26631;&#35782;&#65292;&#22914;&#26524;&#36825;&#20123;&#26631;&#35782;&#35774;&#23450;&#20102;&#23601;&#38656;&#35201;&#36827;&#34892;&#19968;&#20123;&#29305;&#21035;&#30340;&#22788;&#29702;&#65292;&#36825;&#37324;&#26816;&#27979;&#30340;flag&#20027;&#35201;&#21253;&#25324;&#65306; </P>
<BLOCKQUOTE>
<P>#define _TIF_WORK_MASK&nbsp;&nbsp; (_TIF_NEED_RESCHED | _TIF_SIGPENDING | _TIF_NOTIFY_RESUME) </P></BLOCKQUOTE>
<P>&#36825;&#19977;&#20010;flag&#20998;&#21035;&#34920;&#31034;&#26159;&#21542;&#38656;&#35201;&#35843;&#24230;&#12289;&#26159;&#21542;&#26377;&#20449;&#21495;&#22788;&#29702;&#12289;&#36820;&#22238;&#29992;&#25143;&#31354;&#38388;&#20043;&#21069;&#26159;&#21542;&#38656;&#35201;&#35843;&#29992;callback&#20989;&#25968;&#12290;&#21482;&#35201;&#26377;&#19968;&#20010;flag&#34987;&#35774;&#23450;&#20102;&#65292;&#31243;&#24207;&#23601;&#36827;&#20837;work_pending&#36825;&#20010;&#20998;&#25903;&#65288;work_pending&#20989;&#25968;&#38656;&#35201;&#20256;&#36882;&#19977;&#20010;&#21442;&#25968;&#65292;&#31532;&#19977;&#20010;&#26159;&#21442;&#25968;why&#26159;&#26631;&#35782;&#21738;&#19968;&#20010;&#31995;&#32479;&#35843;&#29992;&#65292;&#24403;&#28982;&#65292;&#25105;&#20204;&#36825;&#37324;&#20256;&#36882;&#30340;&#26159;0&#65289;&#12290; </P>
<P>B&#65306;&#20174;&#23383;&#38754;&#30340;&#24847;&#24605;&#20063;&#21487;&#20197;&#30475;&#25104;&#65292;&#36825;&#37096;&#20998;&#30340;&#20195;&#30721;&#23601;&#26159;&#23558;&#36827;&#20837;&#20013;&#26029;&#30340;&#26102;&#20505;&#20445;&#23384;&#30340;&#29616;&#22330;&#65288;&#23492;&#23384;&#22120;&#20540;&#65289;&#24674;&#22797;&#21040;&#23454;&#38469;&#30340;ARM&#30340;&#21508;&#20010;&#23492;&#23384;&#22120;&#20013;&#65292;&#20174;&#32780;&#23436;&#20840;&#36820;&#22238;&#21040;&#20102;&#20013;&#26029;&#21457;&#29983;&#30340;&#37027;&#19968;&#28857;&#12290;&#20855;&#20307;&#30340;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .macro&nbsp;&nbsp;&nbsp; restore_user_regs, fast = 0, offset = 0 <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; r1, [sp, #\offset + S_PSR] &#65293;&#65293;&#65293;&#65293;r1&#20445;&#23384;&#20102;pt_regs&#20013;&#30340;spsr&#65292;&#20063;&#23601;&#26159;&#21457;&#29983;&#20013;&#26029;&#26102;&#30340;CPSR <BR>&nbsp;&nbsp;&nbsp; ldr&nbsp;&nbsp;&nbsp; lr, [sp, #\offset + S_PC]!&nbsp;&nbsp;&nbsp; &#65293;&#65293;&#65293;&#65293;lr&#20445;&#23384;&#20102;PC&#20540;&#65292;&#21516;&#26102;sp&#31227;&#21160;&#21040;&#20102;pt_regs&#20013;PC&#30340;&#20301;&#32622; <BR>&nbsp;&nbsp;&nbsp; msr&nbsp;&nbsp;&nbsp; spsr_cxsf, r1 &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#36171;&#20540;&#32473;spsr&#65292;&#36827;&#34892;&#36820;&#22238;&#29992;&#25143;&#31354;&#38388;&#30340;&#20934;&#22791; <BR>&nbsp;&nbsp;&nbsp; clrex&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ clear the exclusive monitor <BR><BR>&nbsp;&nbsp;&nbsp; .if&nbsp;&nbsp;&nbsp; \fast <BR>&nbsp;&nbsp;&nbsp; ldmdb&nbsp;&nbsp;&nbsp; sp, {r1 - lr}^&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; @ get calling r1 - lr <BR>&nbsp;&nbsp;&nbsp; .else <BR>&nbsp;&nbsp;&nbsp; ldmdb&nbsp;&nbsp;&nbsp; sp, {r0 - lr}^ &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23558;&#20445;&#23384;&#22312;&#20869;&#26680;&#26632;&#19978;&#30340;&#25968;&#25454;&#20445;&#23384;&#21040;&#29992;&#25143;&#24577;&#30340;r0&#65374;r14&#23492;&#23384;&#22120; <BR>&nbsp;&nbsp;&nbsp; .endif <BR>&nbsp;&nbsp;&nbsp; mov&nbsp;&nbsp;&nbsp; r0, r0&nbsp;&nbsp; &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;NOP&#25805;&#20316;&#65292;ARMv5T&#20043;&#21069;&#30340;&#38656;&#35201;&#36825;&#20010;&#25805;&#20316; <BR>&nbsp;&nbsp;&nbsp; add&nbsp;&nbsp;&nbsp; sp, sp, #S_FRAME_SIZE - S_PC&#65293;&#65293;&#65293;&#65293;&#29616;&#22330;&#24050;&#32463;&#24674;&#22797;&#65292;&#31227;&#21160;svc mode&#30340;sp&#21040;&#21407;&#26469;&#30340;&#20301;&#32622; <BR>&nbsp;&nbsp;&nbsp; movs&nbsp;&nbsp;&nbsp; pc, lr&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#36820;&#22238;&#29992;&#25143;&#31354;&#38388; <BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>2&#12289;&#20013;&#26029;&#21457;&#29983;&#22312;svc mode&#19979;&#30340;&#36864;&#20986;&#36807;&#31243;&#12290;&#20855;&#20307;&#20195;&#30721;&#22914;&#19979;&#65306; </P>
<BLOCKQUOTE>
<P>&nbsp;&nbsp;&nbsp; .macro&nbsp;&nbsp;&nbsp; svc_exit, rpsr, irq = 0 <BR>&nbsp;&nbsp;&nbsp; .if&nbsp;&nbsp;&nbsp; \irq != 0 <BR>&nbsp;&nbsp;&nbsp; @ IRQs already off <BR>&nbsp;&nbsp;&nbsp; .else <BR>&nbsp;&nbsp;&nbsp; @ IRQs off again before pulling preserved data off the stack <BR>&nbsp;&nbsp;&nbsp; disable_irq_notrace <BR>&nbsp;&nbsp;&nbsp; .endif <BR>&nbsp;&nbsp;&nbsp; msr&nbsp;&nbsp;&nbsp; spsr_cxsf, \rpsr&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#65293;&#23558;&#20013;&#26029;&#29616;&#22330;&#30340;cpsr&#20540;&#20445;&#23384;&#21040;spsr&#20013;&#65292;&#20934;&#22791;&#36820;&#22238;&#20013;&#26029;&#21457;&#29983;&#30340;&#29616;&#22330; <BR><BR>&nbsp;&nbsp;&nbsp; ldmia&nbsp;&nbsp;&nbsp; sp, {r0 - pc}^ &#65293;&#65293;&#65293;&#65293;&#65293;&#36825;&#26465;&#25351;&#20196;&#26159;ldm&#24322;&#24120;&#36820;&#22238;&#25351;&#20196;&#65292;&#36825;&#26465;&#25351;&#20196;&#38500;&#20102;&#23383;&#38754;&#19978;&#30340;&#25805;&#20316;&#65292; </P>
<P>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &#36824;&#21253;&#25324;&#20102;&#23558;spsr copy&#21040;cpsr&#20013;&#12290; <BR><BR>&nbsp;&nbsp;&nbsp; .endm </P></BLOCKQUOTE>
<P>&nbsp; </P>
<P><EM>&#21407;&#21019;&#25991;&#31456;&#65292;&#36716;&#21457;&#35831;&#27880;&#26126;&#20986;&#22788;&#12290;&#34583;&#31389;&#31185;&#25216;</EM>&#12290;<A href="http://www.wowotech.net/irq_handler.html" target=_blank>http://www.wowotech.net/irq_handler.html</A> </P>
<P><BR></P>
<P>&#38468;&#24405; </P>
<P>change log-2014-10-20&#65292;&#33258;&#24049;&#21448;&#37325;&#26032;&#38405;&#35835;&#20102;&#19968;&#36941;&#65292;&#20570;&#20102;&#19968;&#20123;&#20462;&#25913;&#65292;&#22914;&#19979;&#65306; </P>
<P>1&#12289;&#8220;ARM&#22788;&#29702;&#22120;&#26377;&#22810;&#31181;process mode&#8221;&#20462;&#25913;&#20026;&#8220;ARM&#22788;&#29702;&#22120;&#26377;&#22810;&#31181;processor mode&#8221;<BR>2&#12289;&#22686;&#21152;cpu_init&#30340;&#35843;&#29992;&#22330;&#26223;&#35828;&#26126;&#65306;<BR>&nbsp;&nbsp;&nbsp; &#65288;1&#65289;bootstrap CPU initialize<BR>&nbsp;&nbsp;&nbsp; &#65288;2&#65289;secondary CPUs initialize<BR>&nbsp;&nbsp;&nbsp; &#65288;3&#65289;CPU resume from sleep<BR>3&#12289;&#22686;&#21152;&#23545;&#26680;&#24515;&#20013;&#26029;&#22788;&#29702;&#30340;&#25551;&#36848;<BR>4&#12289;&#22686;&#21152;&#23545;&#25250;&#21344;&#30456;&#20851;&#30340;&#25551;&#36848; </P>
<P><BR></P>
<P>change log-2014-11-20&#65292;&#26681;&#25454;zuoertu&#32593;&#21451;&#30340;&#25552;&#38382;&#65292;&#20570;&#20102;&#19968;&#20123;&#20462;&#25913;&#65292;&#22914;&#19979;&#65306; </P>
<P>1&#12289;&#22686;&#21152;&#23545;orig_r0&#30340;&#25551;&#36848; </P>
<P>2&#12289;&#22686;&#21152;&#23545;why&#30340;&#25551;&#36848;