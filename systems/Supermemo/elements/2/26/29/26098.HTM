<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><SPAN lang=EN-US style="FONT-SIZE: 18pt; FONT-FAMILY: 'Myriad-CnSemibold','sans-serif'; mso-bidi-font-size: 11.0pt; mso-bidi-font-family: Myriad-CnSemibold; mso-font-kerning: 0pt; mso-fareast-font-family: TheSansMonoCondensed-SemiLight">The internals of interrupt handling on the x86</SPAN></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">This description has been extrapolated from </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">arch/i386/kernel/irq.c</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">arch/i386/kernel/apic.c</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">arch/i386/kernel/entry.S</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">arch/i386/kernel/i8259.c</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">include/asm-i386/hw_irq.h </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">as they appear in the 2.6 kernels; although the general concepts remain the same, the hardware details differ on other platforms.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT face=Calibri><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The lowest level of interrupt handling can be found in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">entry.S</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, an assembly-language file that handles much of the machine-level work. By way of a bit of assembler trickery and some macros, a bit of code is assigned to every possible interrupt. In each case, the code pushes the interrupt number on the stack and jumps to a common segment, which calls </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">do_IRQ</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, defined in </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">irq.c</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">.</SPAN></FONT></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT face=Calibri><FONT class=extract><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">The first thing </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">do_IRQ </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">does is to acknowledge the interrupt so that the interrupt controller can go on to other things. It then obtains a spinlock for the given IRQ number, thus preventing any other CPU from handling this IRQ. It clears a couple of status bits (including one called </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMonoCondensed-SemiLight; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">IRQ_WAITING </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">that we</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">ll look at shortly) and then looks up the handler(s) for this particular IRQ. If there is no handler, there</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s nothing to do; the spinlock is released, any pending software interrupts are handled, and </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">do_IRQ </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">returns.</SPAN></FONT></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Usually, however, if a device is interrupting, there is at least one handler registered for its IRQ as well. The function </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">handle_IRQ_event </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is called to actually invoke the handlers. If the handler is of the slow variety (</SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMonoCondensed-SemiLight; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">SA_INTERRUPT </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">is not set), interrupts are reenabled in the hardware, and the handler is invoked. Then it</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt; mso-fareast-font-family: Birka; mso-ascii-font-family: Birka">&#8217;</SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">s just a matter of cleaning up, running software interrupts, and getting back to regular work. The </SPAN><SPAN style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">&#8220;<SPAN lang=EN-US>regular work</SPAN>&#8221;<SPAN lang=EN-US> may well have changed as a result of an interrupt (the handler could </SPAN></SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">wake_up </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">a process, for example), so the last thing that happens on return from an interrupt is a possible rescheduling of the processor.</SPAN></FONT></P>
<P class=MsoNormal style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; mso-layout-grid-align: none" align=left><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">Probing for IRQs is done by setting the </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMonoCondensed-SemiLight; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">IRQ_WAITING </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">status bit for each IRQ that currently lacks a handler. When the interrupt happens, </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">do_IRQ </SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">clears that bit and then returns, because no handler is registered. </SPAN><I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka-Italic; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka-Italic; mso-font-kerning: 0pt">probe_irq_off</SPAN></I><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">, when called by a driver, needs to search for only the IRQ that no longer has </SPAN><SPAN lang=EN-US style="FONT-SIZE: 12pt; FONT-FAMILY: TheSansMonoCondensed-SemiLight; mso-bidi-font-size: 9.0pt; mso-bidi-font-family: TheSansMonoCondensed-SemiLight; mso-font-kerning: 0pt">IRQ_WAITING </SPAN><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt">set.</SPAN></FONT></P><FONT face=Calibri><SPAN lang=EN-US style="FONT-SIZE: 14pt; FONT-FAMILY: Birka; mso-bidi-font-size: 10.0pt; mso-bidi-font-family: Birka; mso-font-kerning: 0pt"><PRE>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/">linux-4.1</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/">arch</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/">x86</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/">kernel</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c">irq.c</A></PRE><PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#182" name=182>182</A><SPAN class=c>/*
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#183" name=183>183</A> * do_IRQ handles all normal device IRQ's (the special
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#184" name=184>184</A> * SMP cross-CPU interrupts have their own specific
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#185" name=185>185</A> * handlers).
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#186" name=186>186</A> */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#187" name=187>187</A><A href="http://172.21.12.145:8080/source/s?defs=__visible&amp;project=linux-4.1">__visible</A> <B>unsigned</B> <B>int</B> <A href="http://172.21.12.145:8080/source/s?defs=__irq_entry&amp;project=linux-4.1">__irq_entry</A> <A class=xf name=do_IRQ></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=do_IRQ&amp;project=linux-4.1">do_IRQ</A>(<B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=pt_regs&amp;project=linux-4.1">pt_regs</A> *<A class=xa name=regs></A><A class=xa href="http://172.21.12.145:8080/source/s?refs=regs&amp;project=linux-4.1">regs</A>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#188" name=188>188</A>{
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#189" name=189>189</A>	<B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=pt_regs&amp;project=linux-4.1">pt_regs</A> *<A class=xl name=old_regs></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=old_regs&amp;project=linux-4.1">old_regs</A> = <A href="http://172.21.12.145:8080/source/s?defs=set_irq_regs&amp;project=linux-4.1">set_irq_regs</A>(<A href="http://172.21.12.145:8080/source/s?defs=regs&amp;project=linux-4.1">regs</A>);
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#190" name=190>190</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#191" name=191>191</A>	<SPAN class=c>/* high bit used in ret_from_ code  */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#192" name=192>192</A>	<B>unsigned</B> <A class=xl name=vector></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=vector&amp;project=linux-4.1">vector</A> = ~<A href="http://172.21.12.145:8080/source/s?defs=regs&amp;project=linux-4.1">regs</A>-&gt;<A href="http://172.21.12.145:8080/source/s?defs=orig_ax&amp;project=linux-4.1">orig_ax</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#193" name=193>193</A>	<B>unsigned</B> <A class=xl name=irq></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=irq&amp;project=linux-4.1">irq</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#194" name=194>194</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#195" name=195>195</A>	<A href="http://172.21.12.145:8080/source/s?defs=irq_enter&amp;project=linux-4.1">irq_enter</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#196" name=196>196</A>	<A href="http://172.21.12.145:8080/source/s?defs=exit_idle&amp;project=linux-4.1">exit_idle</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#197" name=197>197</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#198" name=198>198</A>	<A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A> = <A href="http://172.21.12.145:8080/source/s?defs=__this_cpu_read&amp;project=linux-4.1">__this_cpu_read</A>(<A href="http://172.21.12.145:8080/source/s?defs=vector_irq&amp;project=linux-4.1">vector_irq</A>[<A href="http://172.21.12.145:8080/source/s?defs=vector&amp;project=linux-4.1">vector</A>]);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#199" name=199>199</A>
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#200" name=200>200</A>	<B>if</B> (!<A href="http://172.21.12.145:8080/source/s?defs=handle_irq&amp;project=linux-4.1">handle_irq</A>(<A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A>, <A href="http://172.21.12.145:8080/source/s?defs=regs&amp;project=linux-4.1">regs</A>)) {
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#201" name=201>201</A>		<A href="http://172.21.12.145:8080/source/s?defs=ack_APIC_irq&amp;project=linux-4.1">ack_APIC_irq</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#202" name=202>202</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#203" name=203>203</A>		<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A> != <A href="http://172.21.12.145:8080/source/s?defs=VECTOR_RETRIGGERED&amp;project=linux-4.1">VECTOR_RETRIGGERED</A>) {
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#204" name=204>204</A>			<A href="http://172.21.12.145:8080/source/s?defs=pr_emerg_ratelimited&amp;project=linux-4.1">pr_emerg_ratelimited</A>(<SPAN class=s>"%s: %d.%d No irq handler for vector (irq %d)\n"</SPAN>,
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#205" name=205>205</A>					     <A href="http://172.21.12.145:8080/source/s?defs=__func__&amp;project=linux-4.1">__func__</A>, <A href="http://172.21.12.145:8080/source/s?defs=smp_processor_id&amp;project=linux-4.1">smp_processor_id</A>(),
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#206" name=206>206</A>					     <A href="http://172.21.12.145:8080/source/s?defs=vector&amp;project=linux-4.1">vector</A>, <A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#207" name=207>207</A>		} <B>else</B> {
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#208" name=208>208</A>			<A href="http://172.21.12.145:8080/source/s?defs=__this_cpu_write&amp;project=linux-4.1">__this_cpu_write</A>(<A href="http://172.21.12.145:8080/source/s?defs=vector_irq&amp;project=linux-4.1">vector_irq</A>[<A href="http://172.21.12.145:8080/source/s?defs=vector&amp;project=linux-4.1">vector</A>], <A href="http://172.21.12.145:8080/source/s?defs=VECTOR_UNDEFINED&amp;project=linux-4.1">VECTOR_UNDEFINED</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#209" name=209>209</A>		}
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#210" name=210>210</A>	}
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#211" name=211>211</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#212" name=212>212</A>	<A href="http://172.21.12.145:8080/source/s?defs=irq_exit&amp;project=linux-4.1">irq_exit</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#213" name=213>213</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#214" name=214>214</A>	<A href="http://172.21.12.145:8080/source/s?defs=set_irq_regs&amp;project=linux-4.1">set_irq_regs</A>(<A href="http://172.21.12.145:8080/source/s?defs=old_regs&amp;project=linux-4.1">old_regs</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#215" name=215>215</A>	<B>return</B> <SPAN class=n>1</SPAN>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq.c#216" name=216>216</A>}</PRE><PRE>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/">linux-4.1</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/">kernel</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c">softirq.c</A></PRE><PRE><PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#322" name=322>322</A><SPAN class=c>/*
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#323" name=323>323</A> * Enter an interrupt context.
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#324" name=324>324</A> */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#325" name=325>325</A><B>void</B> <A class=xf name=irq_enter></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=irq_enter&amp;project=linux-4.1">irq_enter</A>(<B>void</B>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#326" name=326>326</A>{
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#327" name=327>327</A>	<A href="http://172.21.12.145:8080/source/s?defs=rcu_irq_enter&amp;project=linux-4.1">rcu_irq_enter</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#328" name=328>328</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=is_idle_task&amp;project=linux-4.1">is_idle_task</A>(<A href="http://172.21.12.145:8080/source/s?defs=current&amp;project=linux-4.1">current</A>) &amp;&amp; !<A href="http://172.21.12.145:8080/source/s?defs=in_interrupt&amp;project=linux-4.1">in_interrupt</A>()) {
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#329" name=329>329</A>		<SPAN class=c>/*
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#330" name=330>330</A>		 * Prevent raise_softirq from needlessly waking up ksoftirqd
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#331" name=331>331</A>		 * here, as softirq will be serviced on return from interrupt.
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#332" name=332>332</A>		 */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#333" name=333>333</A>		<A href="http://172.21.12.145:8080/source/s?defs=local_bh_disable&amp;project=linux-4.1">local_bh_disable</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#334" name=334>334</A>		<A href="http://172.21.12.145:8080/source/s?defs=tick_irq_enter&amp;project=linux-4.1">tick_irq_enter</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#335" name=335>335</A>		<A href="http://172.21.12.145:8080/source/s?defs=_local_bh_enable&amp;project=linux-4.1">_local_bh_enable</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#336" name=336>336</A>	}
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#337" name=337>337</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#338" name=338>338</A>	<A href="http://172.21.12.145:8080/source/s?defs=__irq_enter&amp;project=linux-4.1">__irq_enter</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/kernel/softirq.c#339" name=339>339</A>}</PRE><PRE>&nbsp;</PRE><PRE>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/">linux-4.1</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/">arch</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/">x86</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/">kernel</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c">process.c</A></PRE><PRE><PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#288" name=288>288</A><B>void</B> <A class=xf name=enter_idle></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=enter_idle&amp;project=linux-4.1">enter_idle</A>(<B>void</B>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#289" name=289>289</A>{
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#290" name=290>290</A>	<A href="http://172.21.12.145:8080/source/s?defs=this_cpu_write&amp;project=linux-4.1">this_cpu_write</A>(<A href="http://172.21.12.145:8080/source/s?defs=is_idle&amp;project=linux-4.1">is_idle</A>, <SPAN class=n>1</SPAN>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#291" name=291>291</A>	<A href="http://172.21.12.145:8080/source/s?defs=atomic_notifier_call_chain&amp;project=linux-4.1">atomic_notifier_call_chain</A>(&amp;<A href="http://172.21.12.145:8080/source/s?defs=idle_notifier&amp;project=linux-4.1">idle_notifier</A>, <A href="http://172.21.12.145:8080/source/s?defs=IDLE_START&amp;project=linux-4.1">IDLE_START</A>, <A href="http://172.21.12.145:8080/source/s?defs=NULL&amp;project=linux-4.1">NULL</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#292" name=292>292</A>}
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#293" name=293>293</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#294" name=294>294</A><B>static</B> <B>void</B> <A class=xf name=__exit_idle></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=__exit_idle&amp;project=linux-4.1">__exit_idle</A>(<B>void</B>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#295" name=295>295</A>{
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#296" name=296>296</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=x86_test_and_clear_bit_percpu&amp;project=linux-4.1">x86_test_and_clear_bit_percpu</A>(0, <A href="http://172.21.12.145:8080/source/s?defs=is_idle&amp;project=linux-4.1">is_idle</A>) == 0)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#297" name=297>297</A>		<B>return</B>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#298" name=298>298</A>	<A href="http://172.21.12.145:8080/source/s?defs=atomic_notifier_call_chain&amp;project=linux-4.1">atomic_notifier_call_chain</A>(&amp;<A href="http://172.21.12.145:8080/source/s?defs=idle_notifier&amp;project=linux-4.1">idle_notifier</A>, <A href="http://172.21.12.145:8080/source/s?defs=IDLE_END&amp;project=linux-4.1">IDLE_END</A>, <A href="http://172.21.12.145:8080/source/s?defs=NULL&amp;project=linux-4.1">NULL</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#299" name=299>299</A>}
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#300" name=300>300</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#301" name=301>301</A><SPAN class=c>/* Called from interrupts to signify idle end */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#302" name=302>302</A><B>void</B> <A class=xf name=exit_idle></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=exit_idle&amp;project=linux-4.1">exit_idle</A>(<B>void</B>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#303" name=303>303</A>{
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#304" name=304>304</A>	<SPAN class=c>/* idle loop has pid 0 */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#305" name=305>305</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=current&amp;project=linux-4.1">current</A>-&gt;<A href="http://172.21.12.145:8080/source/s?defs=pid&amp;project=linux-4.1">pid</A>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#306" name=306>306</A>		<B>return</B>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#307" name=307>307</A>	<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#__exit_idle">__exit_idle</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/process.c#308" name=308>308</A>}</PRE><PRE>&nbsp;</PRE><PRE>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/">linux-4.1</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/">arch</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/">x86</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/">kernel</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c">irq_32.c</A></PRE><PRE><PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#157" name=157>157</A><B>bool</B> <A class=xf name=handle_irq></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=handle_irq&amp;project=linux-4.1">handle_irq</A>(<B>unsigned</B> <A class=xa name=irq></A><A class=xa href="http://172.21.12.145:8080/source/s?refs=irq&amp;project=linux-4.1">irq</A>, <B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=pt_regs&amp;project=linux-4.1">pt_regs</A> *<A class=xa name=regs></A><A class=xa href="http://172.21.12.145:8080/source/s?refs=regs&amp;project=linux-4.1">regs</A>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#158" name=158>158</A>{
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#159" name=159>159</A>	<B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=irq_desc&amp;project=linux-4.1">irq_desc</A> *<A class=xl name=desc></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=desc&amp;project=linux-4.1">desc</A>;
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#160" name=160>160</A>	<B>int</B> <A class=xl name=overflow></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=overflow&amp;project=linux-4.1">overflow</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#161" name=161>161</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#162" name=162>162</A>	<A href="http://172.21.12.145:8080/source/s?defs=overflow&amp;project=linux-4.1">overflow</A> = <A href="http://172.21.12.145:8080/source/s?defs=check_stack_overflow&amp;project=linux-4.1">check_stack_overflow</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#163" name=163>163</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#164" name=164>164</A>	<A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A> = <A href="http://172.21.12.145:8080/source/s?defs=irq_to_desc&amp;project=linux-4.1">irq_to_desc</A>(<A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#165" name=165>165</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=unlikely&amp;project=linux-4.1">unlikely</A>(!<A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A>))
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#166" name=166>166</A>		<B>return</B> <B>false</B>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#167" name=167>167</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#168" name=168>168</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=user_mode&amp;project=linux-4.1">user_mode</A>(<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#regs">regs</A>) || !<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#execute_on_irq_stack">execute_on_irq_stack</A>(<A href="http://172.21.12.145:8080/source/s?defs=overflow&amp;project=linux-4.1">overflow</A>, <A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A>, <A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A>)) {
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#169" name=169>169</A>		<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=unlikely&amp;project=linux-4.1">unlikely</A>(<A href="http://172.21.12.145:8080/source/s?defs=overflow&amp;project=linux-4.1">overflow</A>))
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#170" name=170>170</A>			<A href="http://172.21.12.145:8080/source/s?defs=print_stack_overflow&amp;project=linux-4.1">print_stack_overflow</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#171" name=171>171</A>		<A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A>-&gt;<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#handle_irq">handle_irq</A>(<A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A>, <A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#172" name=172>172</A>	}
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#173" name=173>173</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#174" name=174>174</A>	<B>return</B> <B>true</B>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#175" name=175>175</A>}</PRE><PRE>&nbsp;</PRE><PRE>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/">linux-4.1</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/">arch</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/">x86</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/">kernel</A>/<A href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c">irq_32.c</A></PRE><PRE><PRE><A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#77" name=77>77</A><B>static</B> <B>inline</B> <B>int</B>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#78" name=78>78</A><A class=xf name=execute_on_irq_stack></A><A class=xf href="http://172.21.12.145:8080/source/s?refs=execute_on_irq_stack&amp;project=linux-4.1">execute_on_irq_stack</A>(<B>int</B> <A class=xa name=overflow></A><A class=xa href="http://172.21.12.145:8080/source/s?refs=overflow&amp;project=linux-4.1">overflow</A>, <B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=irq_desc&amp;project=linux-4.1">irq_desc</A> *<A class=xa name=desc></A><A class=xa href="http://172.21.12.145:8080/source/s?refs=desc&amp;project=linux-4.1">desc</A>, <B>int</B> <A class=xa name=irq></A><A class=xa href="http://172.21.12.145:8080/source/s?refs=irq&amp;project=linux-4.1">irq</A>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#79" name=79>79</A>{
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#80" name=80>80</A>	<B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=irq_stack&amp;project=linux-4.1">irq_stack</A> *<A class=xl name=curstk></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=curstk&amp;project=linux-4.1">curstk</A>, *<A class=xl name=irqstk></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=irqstk&amp;project=linux-4.1">irqstk</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#81" name=81>81</A>	<A href="http://172.21.12.145:8080/source/s?defs=u32&amp;project=linux-4.1">u32</A> *<A class=xl name=isp></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=isp&amp;project=linux-4.1">isp</A>, *<A class=xl name=prev_esp></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=prev_esp&amp;project=linux-4.1">prev_esp</A>, <A class=xl name=arg1></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=arg1&amp;project=linux-4.1">arg1</A>, <A class=xl name=arg2></A><A class=xl href="http://172.21.12.145:8080/source/s?refs=arg2&amp;project=linux-4.1">arg2</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#82" name=82>82</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#83" name=83>83</A>	<A href="http://172.21.12.145:8080/source/s?defs=curstk&amp;project=linux-4.1">curstk</A> = (<B>struct</B> <A href="http://172.21.12.145:8080/source/s?defs=irq_stack&amp;project=linux-4.1">irq_stack</A> *) <A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#current_stack">current_stack</A>();
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#84" name=84>84</A>	<A href="http://172.21.12.145:8080/source/s?defs=irqstk&amp;project=linux-4.1">irqstk</A> = <A href="http://172.21.12.145:8080/source/s?defs=__this_cpu_read&amp;project=linux-4.1">__this_cpu_read</A>(<A href="http://172.21.12.145:8080/source/s?defs=hardirq_stack&amp;project=linux-4.1">hardirq_stack</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#85" name=85>85</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#86" name=86>86</A>	<SPAN class=c>/*
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#87" name=87>87</A>	 * this is where we switch to the IRQ stack. However, if we are
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#88" name=88>88</A>	 * already using the IRQ stack (because we interrupted a hardirq
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#89" name=89>89</A>	 * handler) we can't do that and just have to keep using the
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#90" name=90>90</A>	 * current stack (which is the irq stack already after all)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#91" name=91>91</A>	 */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#92" name=92>92</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=unlikely&amp;project=linux-4.1">unlikely</A>(<A href="http://172.21.12.145:8080/source/s?defs=curstk&amp;project=linux-4.1">curstk</A> == <A href="http://172.21.12.145:8080/source/s?defs=irqstk&amp;project=linux-4.1">irqstk</A>))
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#93" name=93>93</A>		<B>return</B> 0;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#94" name=94>94</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#95" name=95>95</A>	<A href="http://172.21.12.145:8080/source/s?defs=isp&amp;project=linux-4.1">isp</A> = (<A href="http://172.21.12.145:8080/source/s?defs=u32&amp;project=linux-4.1">u32</A> *) ((<B>char</B> *)<A href="http://172.21.12.145:8080/source/s?defs=irqstk&amp;project=linux-4.1">irqstk</A> + <B>sizeof</B>(*<A href="http://172.21.12.145:8080/source/s?defs=irqstk&amp;project=linux-4.1">irqstk</A>));
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#96" name=96>96</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#97" name=97>97</A>	<SPAN class=c>/* Save the next esp at the bottom of the stack */</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#98" name=98>98</A>	<A href="http://172.21.12.145:8080/source/s?defs=prev_esp&amp;project=linux-4.1">prev_esp</A> = (<A href="http://172.21.12.145:8080/source/s?defs=u32&amp;project=linux-4.1">u32</A> *)<A href="http://172.21.12.145:8080/source/s?defs=irqstk&amp;project=linux-4.1">irqstk</A>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#99" name=99>99</A>	*<A href="http://172.21.12.145:8080/source/s?defs=prev_esp&amp;project=linux-4.1">prev_esp</A> = <A href="http://172.21.12.145:8080/source/s?defs=current_stack_pointer&amp;project=linux-4.1">current_stack_pointer</A>();
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#100" name=100>100</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#101" name=101>101</A>	<B>if</B> (<A href="http://172.21.12.145:8080/source/s?defs=unlikely&amp;project=linux-4.1">unlikely</A>(<A href="http://172.21.12.145:8080/source/s?defs=overflow&amp;project=linux-4.1">overflow</A>))
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#102" name=102>102</A>		<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#call_on_stack">call_on_stack</A>(<A href="http://172.21.12.145:8080/source/s?defs=print_stack_overflow&amp;project=linux-4.1">print_stack_overflow</A>, <A href="http://172.21.12.145:8080/source/s?defs=isp&amp;project=linux-4.1">isp</A>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#103" name=103>103</A>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#104" name=104>104</A>	<B>asm</B> <B>volatile</B>(<SPAN class=s>"xchgl	%%ebx,%%esp	\n"</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#105" name=105>105</A>		     <SPAN class=s>"call	*%%edi		\n"</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#106" name=106>106</A>		     <SPAN class=s>"movl	%%ebx,%%esp	\n"</SPAN>
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#107" name=107>107</A>		     : <SPAN class=s>"=a"</SPAN> (<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#arg1">arg1</A>), <SPAN class=s>"=d"</SPAN> (<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#arg2">arg2</A>), <SPAN class=s>"=b"</SPAN> (<A href="http://172.21.12.145:8080/source/s?defs=isp&amp;project=linux-4.1">isp</A>)
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#108" name=108>108</A>		     :  <SPAN class=s>"0"</SPAN> (<A href="http://172.21.12.145:8080/source/s?defs=irq&amp;project=linux-4.1">irq</A>),   <SPAN class=s>"1"</SPAN> (<A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A>),  <SPAN class=s>"2"</SPAN> (<A href="http://172.21.12.145:8080/source/s?defs=isp&amp;project=linux-4.1">isp</A>),
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#109" name=109>109</A>			<SPAN class=s>"D"</SPAN> (<A href="http://172.21.12.145:8080/source/s?defs=desc&amp;project=linux-4.1">desc</A>-&gt;<A class=d href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#handle_irq">handle_irq</A>)
<A class=hl href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#110" name=110>110</A>		     : <SPAN class=s>"memory"</SPAN>, <SPAN class=s>"cc"</SPAN>, <SPAN class=s>"ecx"</SPAN>);
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#111" name=111>111</A>	<B>return</B> <SPAN class=n>1</SPAN>;
<A class=l href="http://172.21.12.145:8080/source/xref/linux-4.1/arch/x86/kernel/irq_32.c#112" name=112>112</A>}</PRE></PRE></PRE></PRE></PRE></SPAN></FONT>