&nbsp;/*<BR><FONT class=extract>&nbsp; * Per-cpu workqueues are generally preferred because they tend to<BR>&nbsp; * show better performance thanks to cache locality.&nbsp; Per-cpu<BR>&nbsp; * workqueues exclude the scheduler from choosing the CPU to<BR>&nbsp; * execute the worker threads, which has an unfortunate side effect<BR>&nbsp; * of increasing power consumption.</FONT><BR>&nbsp; *<BR><FONT class=extract>&nbsp; * The scheduler considers a CPU idle if it doesn't have any task<BR>&nbsp; * to execute and tries to keep idle cores idle to conserve power;<BR>&nbsp; * however, for example, a per-cpu work item scheduled from an<BR>&nbsp; * interrupt handler on an idle CPU will force the scheduler to<BR>&nbsp; * excute the work item on that CPU breaking the idleness, which in<BR>&nbsp; * turn may lead to more scheduling choices which are sub-optimal<BR>&nbsp; * in terms of power consumption.</FONT><BR>&nbsp; *<BR><FONT class=extract>&nbsp; * Workqueues marked with WQ_POWER_EFFICIENT are per-cpu by default<BR>&nbsp; * but become unbound if workqueue.power_efficient kernel param is<BR>&nbsp; * specified.&nbsp; Per-cpu workqueues which are identified to<BR>&nbsp; * contribute significantly to power-consumption are identified and<BR>&nbsp; * marked with this flag and enabling the power_efficient mode<BR>&nbsp; * leads to noticeable power saving at the cost of small<BR>&nbsp; * performance disadvantage.<BR></FONT>&nbsp; *<BR>&nbsp; * <A href="http://thread.gmane.org/gmane.linux.kernel/1480396">http://thread.gmane.org/gmane.linux.kernel/1480396</A><BR>&nbsp; */