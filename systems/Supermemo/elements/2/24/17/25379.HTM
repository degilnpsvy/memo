Read-copy-update is an algorithm that enables concurrent access to readers of a data structure without having to lock the structure. It can be read about here(wiki). 
<P></P>
<P>If the kernel is built with the CONFIG_SPARSE_RCU_POINTER config option, __rcu is defined in include/linux/compiler.h as </P>
<P># define __rcu <FONT class=clozed>__attribute__((noderef, address_space(4)))</FONT> </P>
<P>This is an annotation for a the Sparse code analysis tool that can warn about certain things the programmer may have overlooked. How this is relevant to RCU is explained in Documentation/RCU/checklist.txt: </P>
<P>__rcu sparse checks: <FONT class=clozed>tag the pointer to the RCU-protected data structure with __rcu, and sparse will warn you if you access that pointer without the services of one of the variants of rcu_dereference(). </FONT></P>
<P><FONT class=clozed>rcu_dereference() returns a pointer that can be safely dereferenced by the code and documents the programmer's intention to protect the pointer with the RCU mechanism, enabling tools like Sparse to check for programming errors and omissions.</FONT>