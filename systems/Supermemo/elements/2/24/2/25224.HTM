/**<BR>&nbsp;* add_uevent_var - add key value string to the environment buffer<BR>&nbsp;* @env: environment buffer structure<BR>&nbsp;* @format: printf format for the key=value pair<BR>&nbsp;*<BR>&nbsp;* Returns 0 if environment variable was added successfully or -ENOMEM<BR>&nbsp;* if no space was available.<BR>&nbsp;*/<BR>int add_uevent_var(struct kobj_uevent_env *env, const char *format, ...)<BR>{<BR>&nbsp;va_list args;<BR>&nbsp;int len;</P>
<P>&nbsp;if (env-&gt;envp_idx &gt;= ARRAY_SIZE(env-&gt;envp)) {<BR>&nbsp;&nbsp;WARN(1, KERN_ERR "add_uevent_var: too many keys\n");<BR>&nbsp;&nbsp;return -ENOMEM;<BR>&nbsp;}</P>
<P>&nbsp;va_start(args, format);<BR>&nbsp;len = vsnprintf(&amp;env-&gt;buf[env-&gt;buflen],<BR>&nbsp;&nbsp;&nbsp;sizeof(env-&gt;buf) - env-&gt;buflen,<BR>&nbsp;&nbsp;&nbsp;format, args);<BR>&nbsp;va_end(args);</P>
<P>&nbsp;if (len &gt;= (sizeof(env-&gt;buf) - env-&gt;buflen)) {<BR>&nbsp;&nbsp;WARN(1, KERN_ERR "add_uevent_var: buffer size too small\n");<BR>&nbsp;&nbsp;return -ENOMEM;<BR>&nbsp;}</P>
<P>&nbsp;env-&gt;envp[env-&gt;envp_idx++] = &amp;env-&gt;buf[env-&gt;buflen];<BR>&nbsp;env-&gt;buflen += len + 1;<BR>&nbsp;return 0;<BR>}<BR>EXPORT_SYMBOL_GPL(add_uevent_var);