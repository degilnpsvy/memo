/**<BR>&nbsp;* list_empty_careful - tests whether a list is empty and not being modified<BR>&nbsp;* @head: the list to test<BR>&nbsp;*<BR>&nbsp;* Description:<BR>&nbsp;* tests whether a list is empty _and_ checks that no other CPU might be<BR>&nbsp;* in the process of modifying either member (next or prev)<BR>&nbsp;*<BR>&nbsp;* NOTE: using list_empty_careful() without synchronization<BR>&nbsp;* can only be safe if the only activity that can happen<BR>&nbsp;* to the list entry is list_del_init(). Eg. it cannot be used<BR>&nbsp;* if another CPU could re-list_add() it.<BR>&nbsp;*/<BR>static inline int list_empty_careful(const struct list_head *head)<BR>{<BR>&nbsp;struct list_head *next = head-&gt;next;<BR>&nbsp;return (next == head) &amp;&amp; (next == head-&gt;prev);<BR>}