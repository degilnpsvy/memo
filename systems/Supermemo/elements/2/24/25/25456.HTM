/**<BR>&nbsp;* notifier_call_chain - Informs the registered notifiers about an event.<BR>&nbsp;*&nbsp;@nl:&nbsp;&nbsp;Pointer to head of the blocking notifier chain<BR>&nbsp;*&nbsp;@val:&nbsp;&nbsp;Value passed unmodified to notifier function<BR>&nbsp;*&nbsp;@v:&nbsp;&nbsp;Pointer passed unmodified to notifier function<BR>&nbsp;*&nbsp;@nr_to_call:&nbsp;Number of notifier functions to be called. Don't care<BR>&nbsp;*&nbsp;&nbsp;&nbsp;value of this parameter is -1.<BR>&nbsp;*&nbsp;@nr_calls:&nbsp;Records the number of notifications sent. Don't care<BR>&nbsp;*&nbsp;&nbsp;&nbsp;value of this field is NULL.<BR>&nbsp;*&nbsp;@returns:&nbsp;notifier_call_chain returns the value returned by the<BR>&nbsp;*&nbsp;&nbsp;&nbsp;last notifier function called.<BR>&nbsp;*/<BR>static int notifier_call_chain(struct notifier_block **nl,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; unsigned long val, void *v,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int nr_to_call, int *nr_calls)<BR>{<BR>&nbsp;int ret = NOTIFY_DONE;<BR>&nbsp;struct notifier_block *nb, *next_nb;
<P></P>
<P>&nbsp;nb = rcu_dereference_raw(*nl);</P>
<P>&nbsp;while (nb &amp;&amp; nr_to_call) {<BR>&nbsp;&nbsp;next_nb = rcu_dereference_raw(nb-&gt;next);</P>
<P>#ifdef CONFIG_DEBUG_NOTIFIERS<BR>&nbsp;&nbsp;if (unlikely(!func_ptr_is_kernel_text(nb-&gt;notifier_call))) {<BR>&nbsp;&nbsp;&nbsp;WARN(1, "Invalid notifier called!");<BR>&nbsp;&nbsp;&nbsp;nb = next_nb;<BR>&nbsp;&nbsp;&nbsp;continue;<BR>&nbsp;&nbsp;}<BR>#endif<BR>&nbsp;&nbsp;ret = nb-&gt;notifier_call(nb, val, v);</P>
<P>&nbsp;&nbsp;if (nr_calls)<BR>&nbsp;&nbsp;&nbsp;(*nr_calls)++;</P>
<P>&nbsp;&nbsp;if ((ret &amp; NOTIFY_STOP_MASK) == NOTIFY_STOP_MASK)<BR>&nbsp;&nbsp;&nbsp;break;<BR>&nbsp;&nbsp;nb = next_nb;<BR>&nbsp;&nbsp;nr_to_call--;<BR>&nbsp;}<BR>&nbsp;return ret;<BR>}<BR>NOKPROBE_SYMBOL(notifier_call_chain);