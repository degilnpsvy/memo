/*<BR>&nbsp;* Workqueue flags and constants.&nbsp; For details, please refer to<BR>&nbsp;* Documentation/workqueue.txt.<BR>&nbsp;*/<BR>enum {<BR>&nbsp;WQ_UNBOUND&nbsp;&nbsp;= 1 &lt;&lt; 1, /* not bound to any cpu */<BR>&nbsp;WQ_FREEZABLE&nbsp;&nbsp;= 1 &lt;&lt; 2, /* freeze during suspend */<BR>&nbsp;WQ_MEM_RECLAIM&nbsp;&nbsp;= 1 &lt;&lt; 3, /* may be used for memory reclaim */<BR>&nbsp;WQ_HIGHPRI&nbsp;&nbsp;= 1 &lt;&lt; 4, /* high priority */<BR>&nbsp;WQ_CPU_INTENSIVE&nbsp;= 1 &lt;&lt; 5, /* cpu intensive workqueue */<BR>&nbsp;WQ_SYSFS&nbsp;&nbsp;= 1 &lt;&lt; 6, /* visible in sysfs, see wq_sysfs_register() */ 
<P></P>
<P><FONT class=extract>&nbsp;/*<BR>&nbsp; * Per-cpu workqueues are generally preferred because they tend to<BR>&nbsp; * show better performance thanks to cache locality.&nbsp; Per-cpu<BR>&nbsp; * workqueues exclude the scheduler from choosing the CPU to<BR>&nbsp; * execute the worker threads, which has an unfortunate side effect<BR>&nbsp; * of increasing power consumption.<BR>&nbsp; *<BR>&nbsp; * The scheduler considers a CPU idle if it doesn't have any task<BR>&nbsp; * to execute and tries to keep idle cores idle to conserve power;<BR>&nbsp; * however, for example, a per-cpu work item scheduled from an<BR>&nbsp; * interrupt handler on an idle CPU will force the scheduler to<BR>&nbsp; * excute the work item on that CPU breaking the idleness, which in<BR>&nbsp; * turn may lead to more scheduling choices which are sub-optimal<BR>&nbsp; * in terms of power consumption.<BR>&nbsp; *<BR>&nbsp; * Workqueues marked with WQ_POWER_EFFICIENT are per-cpu by default<BR>&nbsp; * but become unbound if workqueue.power_efficient kernel param is<BR>&nbsp; * specified.&nbsp; Per-cpu workqueues which are identified to<BR>&nbsp; * contribute significantly to power-consumption are identified and<BR>&nbsp; * marked with this flag and enabling the power_efficient mode<BR>&nbsp; * leads to noticeable power saving at the cost of small<BR>&nbsp; * performance disadvantage.<BR>&nbsp; *<BR>&nbsp; * </FONT><A href="http://thread.gmane.org/gmane.linux.kernel/1480396"><FONT class=extract>http://thread.gmane.org/gmane.linux.kernel/1480396</FONT></A><BR><FONT class=extract>&nbsp; */</FONT><BR>&nbsp;WQ_POWER_EFFICIENT&nbsp;= 1 &lt;&lt; 7,</P>
<P>&nbsp;__WQ_DRAINING&nbsp;&nbsp;= 1 &lt;&lt; 16, /* internal: workqueue is draining */<BR>&nbsp;__WQ_ORDERED&nbsp;&nbsp;= 1 &lt;&lt; 17, /* internal: workqueue is ordered */</P>
<P>&nbsp;WQ_MAX_ACTIVE&nbsp;&nbsp;= 512,&nbsp;&nbsp; /* I like 512, better ideas? */<BR>&nbsp;WQ_MAX_UNBOUND_PER_CPU&nbsp;= 4,&nbsp;&nbsp; /* 4 * #cpus for unbound wq */<BR>&nbsp;WQ_DFL_ACTIVE&nbsp;&nbsp;= WQ_MAX_ACTIVE / 2,<BR>};