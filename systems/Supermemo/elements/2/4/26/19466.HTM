<P style="MARGIN: 0.5em 0px"><FONT class=extract>Limiting the number of memory accesses provided the key to extracting high performance from a modern computer.</FONT> For commodity processors, this meant installing an ever-increasing amount of high-speed<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Cache memory" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Cache_memory">cache memory</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>and using increasingly sophisticated algorithms to avoid<SPAN class=Apple-converted-space>&nbsp;</SPAN><A title="Cache miss" class=mw-redirect style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Cache_miss">cache misses</A>. But the dramatic increase in size of the operating systems and of the applications run on them has generally overwhelmed these cache-processing improvements. Multi-processor systems without NUMA make the problem considerably worse. Now a system can starve several processors at the same time, notably because only one processor can access the computer's memory at a time.<SUP id=cite_ref-2 class=reference style="FONT-SIZE: 11px; FONT-WEIGHT: normal; FONT-STYLE: normal; LINE-HEIGHT: 1"><A style="TEXT-DECORATION: none; BACKGROUND: none transparent scroll repeat 0% 0%; WHITE-SPACE: nowrap; COLOR: rgb(11,0,128)" href="http://en.wikipedia.org/wiki/Non-uniform_memory_access#cite_note-2"><SPAN>[</SPAN>2<SPAN>]</SPAN></A></SUP>