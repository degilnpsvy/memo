<HEAD></HEAD>
<BODY>
<H1 style="TEXT-ALIGN: center; MARGIN: 15pt 0cm 7.5pt; BACKGROUND: #000044" align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Motion</SPAN></H1>
<P style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt; mso-no-proof: yes" lang=EN-US><?xml:namespace prefix = v /><v:shapetype id=_x0000_t75 stroked="f" filled="f" path="m@4@5l@4@11@9@11@9@5xe" o:preferrelative="t" o:spt="75" coordsize="21600,21600"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:connecttype="rect" gradientshapeok="t" o:extrusionok="f"></v:path><?xml:namespace prefix = o /><o:lock aspectratio="t" v:ext="edit"></o:lock></v:shapetype><IMG style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,68); TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" src="http://lazyfoo.net/tutorials/SDL/26_motion/preview.png"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US></SPAN></P>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000044" align=center><FONT size=3><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Last Updated 3/23/14</SPAN><SPAN style="LINE-HEIGHT: 133%; FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 7.5pt" lang=EN-US></SPAN></FONT></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Now that we know how to render, handle input, and deal with time we can now know everything we need move around things on the screen. Here will do a basic dot moving around.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//The dot that will move around on the screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>class Dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>public:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The dimensions of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>static const int DOT_WIDTH = 20;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>static const int DOT_HEIGHT = 20;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Maximum axis velocity of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>static const int DOT_VEL = 10;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Initializes the variables</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Dot();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Takes key presses and adjusts the dot's velocity</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void handleEvent( SDL_Event&amp; e );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Moves the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>void move();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Shows the dot on the screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void render();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>private:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The X and Y offsets of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mPosX, mPosY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The velocity of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mVelX, mVelY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>};</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here is the class for the dot we're going to be moving around on the screen. It has some constants to define its dimensions and velocity. It has a constructor, an event handler, a function to move it every frame, and a function to render it. As for data members, it has variables for its x/y position and x/y velocity.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>Dot::Dot()</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Initialize the offsets</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosX = 0;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosY = 0;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Initialize the velocity</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mVelX = 0;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mVelY = 0;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>The constructor simply initializes the variables.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>void Dot::handleEvent( SDL_Event&amp; e )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If a key was pressed</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( e.type == SDL_KEYDOWN &amp;&amp; e.key.repeat == 0 )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Adjust the velocity</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>switch( e.key.keysym.sym )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_UP: mVelY -= DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_DOWN: mVelY += DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_LEFT: mVelX -= DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_RIGHT: mVelX += DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>In our event handler we're going to set the velocity based on the key press.<BR><BR>You may be wondering why we don't simply just increase the positon when we press the key. If we were to say add to the x position every time we press the right key, we would have to repeatedly press the right key to keep it moving. By setting the velocity, we just have to press the key once.<BR><BR>If you're wondering why we're checking if the key repeat is 0, it's because key repeat is enabled by default and if you press and hold a key it will report multiple key presses. That means we have to check if the key press is the first one because we only care when the key was first pressed.<BR><BR>For those of you who haven't studied physics yet, velocity is the speed/direction of an object. If an object is moving right at 10 pixels per frame, it has a velocity of 10. If it is moving to the left at 10 pixel per frame, it has a velocity of -10. If the dot's velocity is 10, this means after 10 frames it will have moved 100 pixels over.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If a key was released</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>else if( e.type == SDL_KEYUP &amp;&amp; e.key.repeat == 0 )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Adjust the velocity</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>switch( e.key.keysym.sym )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_UP: mVelY += DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_DOWN: mVelY -= DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_LEFT: mVelX += DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>case SDLK_RIGHT: mVelX -= DOT_VEL; break;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>When we release a key, we have to undo the velocity change when first pressed it. When we pressed right key, we added to the x velocity. When we release the right key here, we subtract from the x velocity to return it to 0.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>void Dot::move()</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Move the dot left or right</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosX += mVelX;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the dot went too far to the left or right</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( ( mPosX &lt; 0 ) || ( mPosX + DOT_WIDTH &gt; SCREEN_WIDTH ) )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Move back</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mPosX -= mVelX;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here's the function we call every frame to move the dot.<BR><BR>First we move the dot along the x axis based on its x velocity. After that we check if the dot moved off the screen. If it did, we then undo the movement along the x axis.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Move the dot up or down</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosY += mVelY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the dot went too far up or down</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( ( mPosY &lt; 0 ) || ( mPosY + DOT_HEIGHT &gt; SCREEN_HEIGHT ) )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Move back</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mPosY -= mVelY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Then here we do the same for the y axis.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>void Dot::render()</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Show the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>gDotTexture.render( mPosX, mPosY );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>In the rendering function we render the dot texture at the dot's position.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Main loop flag</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool quit = false;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Event handler</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_Event e;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The dot that will be moving around on the screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Dot dot;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Before we enter the main loop we declare a dot object.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//While application is running</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>while( !quit )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Handle events on queue</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>while( SDL_PollEvent( &amp;e ) != 0 )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//User requests quit</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if( e.type == SDL_QUIT )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>quit = true;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Handle input for the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dot.handleEvent( e );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Move the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dot.move();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Clear screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_SetRenderDrawColor( gRenderer, 0xFF, 0xFF, 0xFF, 0xFF );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderClear( gRenderer );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Render objects</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dot.render();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Update screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderPresent( gRenderer );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Finally here we use our dot in the main loop. In the event loop we handle events for the dot. After that we update the dot's position and then render it to the screen.<BR><BR>Now in this tutorial we're basing the velocity as amount moved per frame. In most games, the velocity is done per second. The reason were doing it per frame is that it is easier, but if you know physics it shouldn't be hard to update the dot's position based on time. If you don't know physics, just stick with per frame velocity for now.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Download the media and source code for this tutorial<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/26_motion/26_motion.zip"><SPAN style="COLOR: #8888ff">here</SPAN></A>.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN lang=EN-US><FONT size=3 face=Calibri>&nbsp;</FONT></SPAN></P></BODY>