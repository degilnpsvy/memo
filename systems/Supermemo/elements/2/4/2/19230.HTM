<HEAD></HEAD>
<BODY>
<H1 style="TEXT-ALIGN: center; MARGIN: 15pt 0cm 7.5pt; BACKGROUND: #000044" align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Circular Collision Detection</SPAN></H1>
<P style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt; mso-no-proof: yes" lang=EN-US><?xml:namespace prefix = v /><v:shapetype id=_x0000_t75 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><?xml:namespace prefix = o /><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype><IMG style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,68); TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" src="http://lazyfoo.net/tutorials/SDL/29_circular_collision_detection/preview.png"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US></SPAN></P>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000044" align=center><FONT size=3><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Last Updated 7/12/14</SPAN><SPAN style="LINE-HEIGHT: 133%; FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 7.5pt" lang=EN-US></SPAN></FONT></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Along with collision boxes, circles are the most common form of collider. Here we'll be checking collision between two circles and a circle and a box.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Checking collision between two circles is easy. All you have to do is check whether the distance between the center of each circle is less than the sum of their radii (radii is the plural for radius).<BR><BR>For box/circle collision, you have to find the point on the collision box that is closest to the center of the circle. If that point is less than the radius of the circle, there is a collision.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//A circle stucture</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>struct Circle</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int x, y;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int r;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>};</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>SDL has a built in rectangle structure, but we have to make our own circle structure with a position and radius.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//The dot that will move around on the screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>class Dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>public:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The dimensions of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>static const int DOT_WIDTH = 20;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>static const int DOT_HEIGHT = 20;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Maximum axis velocity of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>static const int DOT_VEL = 1;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Initializes the variables</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Dot( int x, int y );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Takes key presses and adjusts the dot's velocity</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void handleEvent( SDL_Event&amp; e );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Moves the dot and checks collision</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void move( SDL_Rect&amp; square, Circle&amp; circle );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Shows the dot on the screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void render();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Gets collision circle</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Circle&amp; getCollider();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>private:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The X and Y offsets of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mPosX, mPosY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;</SPAN>//The velocity of the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mVelX, mVelY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Dot's collision circle</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Circle mCollider;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Moves the collision circle relative to the dot's offset</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void shiftColliders();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>};</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here is the dot class from previous<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/27_collision_detection/index.php"><SPAN style="COLOR: #8888ff">collision detection tutorials</SPAN></A><SPAN class=apple-converted-space>&nbsp;</SPAN>with some more additons. The move function takes in a circle and a rectangle to check collision against when moving. We also now have a circle collider instead of a rectangle collider.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//Circle/Circle collision detector</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>bool checkCollision( Circle&amp; a, Circle&amp; b );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//Circle/Box collision detector</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>bool checkCollision( Circle&amp; a, SDL_Rect&amp; b );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//Calculates distance squared between two points</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>double distanceSquared( int x1, int y1, int x2, int y2 );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>For this tutorial we have our collision detection functions for circle/circle and circle/rectangle collisions. We also have a function that calculates the distance between two points squared.<BR><BR>Using the distance squared instead of the distance is an optimization we'll go into more detail later.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>Dot::Dot( int x, int y )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Initialize the offsets</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosX = x;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosY = y;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Set collision circle size</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mCollider.r = DOT_WIDTH / 2;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Initialize the velocity</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mVelX = 0;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mVelY = 0;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Move collider relative to the circle</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>shiftColliders();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>The constructor takes in a position and initializes the colliders and velocity.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>void Dot::move( SDL_Rect&amp; square, Circle&amp; circle )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Move the dot left or right</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosX += mVelX;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>shiftColliders();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the dot collided or went too far to the left or right</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( ( mPosX - mCollider.r &lt; 0 ) || ( mPosX + mCollider.r &gt; SCREEN_WIDTH ) || checkCollision( mCollider, square ) || checkCollision( mCollider, circle ) )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Move back</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mPosX -= mVelX;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>shiftColliders();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Move the dot up or down</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mPosY += mVelY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>shiftColliders();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the dot collided or went too far up or down</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( ( mPosY - mCollider.r &lt; 0 ) || ( mPosY + mCollider.r &gt; SCREEN_HEIGHT ) || checkCollision( mCollider, square ) || checkCollision( mCollider, circle ) )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Move back</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mPosY -= mVelY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>shiftColliders();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Like in previous<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/28_per-pixel_collision_detection/index.php"><SPAN style="COLOR: #8888ff">collision detection tutorials</SPAN></A>, we move along the x axis, check collision against the edges of the screen, and check against the other scene objects. If the dot hit something we move back. As always, whenever the dot moves its colliders move with it.<BR><BR>Then we do this again for the y axis.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>void Dot::render()</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Show the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>gDotTexture.render( mPosX - mCollider.r, mPosY - mCollider.r );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>The rendering code is a little different. SDL_Rects have their position at the top left where our circle structure has the position at the center. This means we need to offset the render position to the top left of the circle by subtracting the radius from the x and y position.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>bool checkCollision( Circle&amp; a, Circle&amp; b )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Calculate total radius squared</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int totalRadiusSquared = a.r + b.r;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>totalRadiusSquared = totalRadiusSquared * totalRadiusSquared;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the distance between the centers of the circles is less than the sum of their radii</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( distanceSquared( a.x, a.y, b.x, b.y ) &lt; ( totalRadiusSquared ) )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The circles have collided</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>return true;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If not</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>return false;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here is our circle to circle collision detector. It simply checks if the distance squared between the centers is less than the sum of the radii squared. If it is, there is a collison.<BR><BR>Why are we using the distance squared as opposed to the plain distance? Because to calculate the distance involves a square root and calculating a square root is a relatively expensive operation. Fortunately if x &gt; y then x^2 &gt; y^2, so we can save a square root operation by just comparing the distance squared.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>bool checkCollision( Circle&amp; a, SDL_Rect&amp; b )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Closest point on collision box</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int cX, cY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Find closest x offset</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( a.x &lt; b.x )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cX = b.x;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>else if( a.x &gt; b.x + b.w )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cX = b.x + b.w;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>else</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cX = a.x;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>To check if a box and circle collided we need to find the closest point on the box.<BR><BR>If the circle's center is to the left of the box, the x position of the closest point is on the left side of the box.</SPAN></P>
<P style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt; mso-no-proof: yes" lang=EN-US><IMG style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" src="http://lazyfoo.net/tutorials/SDL/29_circular_collision_detection/less.jpg"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US><BR>If the circle's center is to the right of the box, the x position of the closest point is on the right side of the box.</SPAN></P>
<P style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt; mso-no-proof: yes" lang=EN-US><IMG style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" src="http://lazyfoo.net/tutorials/SDL/29_circular_collision_detection/greater.jpg"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US></SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US><BR>If the circle's center is inside of the box, the x position of the closest point is the same as the x position of the circle.</SPAN></P>
<P style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt; mso-no-proof: yes" lang=EN-US><IMG style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,34); TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" src="http://lazyfoo.net/tutorials/SDL/29_circular_collision_detection/equal.jpg"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Find closest y offset</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( a.y &lt; b.y )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cY = b.y;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>else if( a.y &gt; b.y + b.h )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cY = b.y + b.h;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>else</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>cY = a.y;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;</SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the closest point is inside the circle</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( distanceSquared( a.x, a.y, cX, cY ) &lt; a.r * a.r )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//This box and the circle have collided</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>return true;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//If the shapes have not collided</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>return false;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="TEXT-ALIGN: left; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal align=left><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here we find the closest y position much like we did the x position. If the distance squared between the closest point on the box and the center of the circle is less than the circle's radius squared, then there is a collision.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>double distanceSquared( int x1, int y1, int x2, int y2 )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int deltaX = x2 - x1;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>int deltaY = y2 - y1;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>return deltaX*deltaX + deltaY*deltaY;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here is the distance squared function. It's just a distance calculation ( squareRoot( x^2 + y^2 ) ) without the square root.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>//The dot that will be moving around on the screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Dot dot( Dot::DOT_WIDTH / 2, Dot::DOT_HEIGHT / 2 );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Dot otherDot( SCREEN_WIDTH / 4, SCREEN_HEIGHT / 4 );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Set the wall</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_Rect wall;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>wall.x = 300;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>wall.y = 40;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>wall.w = 40;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>wall.h = 400;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Before we enter the main loop we define the scene objects.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//While application is running</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>while( !quit )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Handle events on queue</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>while( SDL_PollEvent( &amp;e ) != 0 )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//User requests quit</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if( e.type == SDL_QUIT )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>quit = true;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>//Handle input for the dot</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dot.handleEvent( e );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Move the dot and check collision</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dot.move( wall, otherDot.getCollider() );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Clear screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>SDL_SetRenderDrawColor( gRenderer, 0xFF, 0xFF, 0xFF, 0xFF );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderClear( gRenderer );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Render wall</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_SetRenderDrawColor( gRenderer, 0x00, 0x00, 0x00, 0xFF );<SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderDrawRect( gRenderer, &amp;wall );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Render dots</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>dot.render();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>otherDot.render();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Update screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderPresent( gRenderer );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Finally in our main loop we handle input, move the dot with collision check and render the scene objects to the screen.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Download the media and source code for this tutorial<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/29_circular_collision_detection/29_circular_collision_detection.zip"><SPAN style="COLOR: #8888ff">here</SPAN></A>.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN lang=EN-US><FONT size=3 face=Calibri>&nbsp;</FONT></SPAN></P></BODY>