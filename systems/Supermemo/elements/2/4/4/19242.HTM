<HEAD></HEAD>
<BODY>
<H1 style="TEXT-ALIGN: center; MARGIN: 15pt 0cm 7.5pt; BACKGROUND: #000044" align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Texture Streaming</SPAN></H1>
<P style="TEXT-ALIGN: center; MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal align=center><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt; mso-no-proof: yes" lang=EN-US><?xml:namespace prefix = v /><v:shapetype id=_x0000_t75 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe" filled="f" stroked="f"><v:stroke joinstyle="miter"></v:stroke><v:formulas><v:f eqn="if lineDrawn pixelLineWidth 0"></v:f><v:f eqn="sum @0 1 0"></v:f><v:f eqn="sum 0 0 @1"></v:f><v:f eqn="prod @2 1 2"></v:f><v:f eqn="prod @3 21600 pixelWidth"></v:f><v:f eqn="prod @3 21600 pixelHeight"></v:f><v:f eqn="sum @0 0 1"></v:f><v:f eqn="prod @6 1 2"></v:f><v:f eqn="prod @7 21600 pixelWidth"></v:f><v:f eqn="sum @8 21600 0"></v:f><v:f eqn="prod @7 21600 pixelHeight"></v:f><v:f eqn="sum @10 21600 0"></v:f></v:formulas><v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"></v:path><?xml:namespace prefix = o /><o:lock v:ext="edit" aspectratio="t"></o:lock></v:shapetype><IMG style="TEXT-ALIGN: center; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(0,0,68); TEXT-INDENT: 0px; FONT: medium monospace; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(170,170,170); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" src="http://lazyfoo.net/tutorials/SDL/42_texture_streaming/preview.png"></SPAN><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US></SPAN></P>
<H6 style="TEXT-ALIGN: center; BACKGROUND: #000044" align=center><FONT size=3><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: white" lang=EN-US>Last Updated 5/25/14</SPAN><SPAN style="LINE-HEIGHT: 133%; FONT-FAMILY: 'Courier New'; COLOR: white; FONT-SIZE: 7.5pt" lang=EN-US></SPAN></FONT></H6>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Sometime we want to render pixel data from a source other than a bitmap like a web cam. Using texture stream we can render pixels from any source.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//Texture wrapper class</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>class LTexture</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>public:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Initializes variables</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>LTexture();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Deallocates memory</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>~LTexture();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Loads image at specified path</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool loadFromFile( std::string path );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#ifdef _SDL_TTF_H</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Creates image from font string</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool loadFromRenderedText( std::string textureText, SDL_Color textColor );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>#endif</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Creates blank texture</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool createBlank( int width, int height );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Deallocates texture</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void free();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Set color modulation</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void setColor( Uint8 red, Uint8 green, Uint8 blue );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Set blending</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void setBlendMode( SDL_BlendMode blending );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Set alpha modulation</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void setAlpha( Uint8 alpha );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN></SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Renders texture at given point</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void render( int x, int y, SDL_Rect* clip = NULL, double angle = 0.0, SDL_Point* center = NULL, SDL_RendererFlip flip = SDL_FLIP_NONE );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Gets image dimensions</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int getWidth();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int getHeight();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Pixel manipulators</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool lockTexture();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool unlockTexture();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void* getPixels();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void copyPixels( void* pixels );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int getPitch();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>Uint32 getPixel32( unsigned int x, unsigned int y );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>private:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//The actual hardware texture</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_Texture* mTexture;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void* mPixels;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mPitch;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Image dimensions</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mWidth;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mHeight;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>};</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here we're add more functionality to our texture class. The createBlank function allocates a blank texture that we can copy data to when streaming. The copyPixels function copies in the pixel data we want to stream.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>//A test animation stream</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>class DataStream</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>public:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Initializes internals</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>DataStream();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Loads initial data</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>bool loadMedia();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Deallocator</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void free();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Gets current frame data</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>void* getBuffer();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>private:</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Internal data</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_Surface* mImages[ 4 ];</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mCurrentImage;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>int mDelayFrames;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>};</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here is our data stream class. We won't go deep into how it works because we don't really care. When dealing with web cam, video decoding, etc APIs they typically don't go deep into how they work because all we care about is getting the video and audio data from them.<BR><BR>All we really care about is that getBuffer function which gets the current pixels from the data buffer.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>bool LTexture::createBlank( int width, int height )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Create uninitialized texture</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>mTexture = SDL_CreateTexture( gRenderer, SDL_PIXELFORMAT_RGBA8888, SDL_TEXTUREACCESS_STREAMING, width, height );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( mTexture == NULL )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;</SPAN>printf( "Unable to create blank texture! SDL Error: %s\n", SDL_GetError() );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>else</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mWidth = width;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>mHeight = height;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>return mTexture != NULL;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>As you can see, all this function does is create a 32bit RGBA texture with stream access. One thing you have to make sure of when creating your texture is that the format of the texture pixels matches the format of the pixels we're streaming.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>void LTexture::copyPixels( void* pixels )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>//Texture is locked</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>if( mPixels != NULL )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Copy to locked pixels</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>memcpy( mPixels, pixels, mPitch * mHeight );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Here is our function to copy in the pixels from the stream. The function assumes the texture is locked and that the pixels are from an image the same size as the texture.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//While application is running</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>while( !quit )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Handle events on queue</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>while( SDL_PollEvent( &amp;e ) != 0 )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//User requests quit</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>if( e.type == SDL_QUIT )</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>{</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>quit = true;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Clear screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</SPAN>SDL_SetRenderDrawColor( gRenderer, 0xFF, 0xFF, 0xFF, 0xFF );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderClear( gRenderer );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Copy frame from buffer</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>gStreamingTexture.lockTexture();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>gStreamingTexture.copyPixels( gDataStream.getBuffer() );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>gStreamingTexture.unlockTexture();</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Render frame</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>gStreamingTexture.render( ( SCREEN_WIDTH - gStreamingTexture.getWidth() ) / 2, ( SCREEN_HEIGHT - gStreamingTexture.getHeight() ) / 2 );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US>&nbsp;</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>//Update screen</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>SDL_RenderPresent( gRenderer );</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #ddddff; FONT-SIZE: 13.5pt" lang=EN-US><SPAN style="mso-spacerun: yes">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </SPAN>}</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000022" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>In the main loop rendering we lock our stream texture, copy the pixels from the stream and then unlock the texture. With our texture holding the latest image from the stream, we render the image to the screen.<BR><BR>When dealing with decoding APIs things may get trickier where we have to convert from one format to another but ultimately all we need is a means to get the pixel data and copy it to the screen.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt; BACKGROUND: #000044" class=MsoNormal><SPAN style="FONT-FAMILY: 'Courier New'; COLOR: #aaaaaa; FONT-SIZE: 13.5pt" lang=EN-US>Download the media and source code for this tutorial<SPAN class=apple-converted-space>&nbsp;</SPAN><A href="http://lazyfoo.net/tutorials/SDL/42_texture_streaming/42_texture_streaming.zip"><SPAN style="COLOR: #8888ff">here</SPAN></A>.</SPAN></P>
<P style="MARGIN: 0cm 0cm 0pt" class=MsoNormal><SPAN lang=EN-US><FONT size=3 face=Calibri>&nbsp;</FONT></SPAN></P></BODY>