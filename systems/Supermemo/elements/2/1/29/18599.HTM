<H5 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>6.57.6.76 Element/structure stores, VST1 variants</H5>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_p64 (poly64_t *, poly64x1_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_u32 (uint32_t *, uint32x2_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_u16 (uint16_t *, uint16x4_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_u8 (uint8_t *, uint8x8_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_s32 (int32_t *, int32x2_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_s16 (int16_t *, int16x4_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_s8 (int8_t *, int8x8_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_u64 (uint64_t *, uint64x1_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_s64 (int64_t *, int64x1_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_f32 (float32_t *, float32x2_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_p16 (poly16_t *, poly16x4_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_p8 (poly8_t *, poly8x8_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_p64 (poly64_t *, poly64x2_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_u32 (uint32_t *, uint32x4_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_u16 (uint16_t *, uint16x8_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_u8 (uint8_t *, uint8x16_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_s32 (int32_t *, int32x4_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_s16 (int16_t *, int16x8_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_s8 (int8_t *, int8x16_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_u64 (uint64_t *, uint64x2_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_s64 (int64_t *, int64x2_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_f32 (float32_t *, float32x4_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_p16 (poly16_t *, poly16x8_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_p8 (poly8_t *, poly8x16_t)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d1</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_u32 (uint32_t *, uint32x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_u16 (uint16_t *, uint16x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_u8 (uint8_t *, uint8x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_s32 (int32_t *, int32x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_s16 (int16_t *, int16x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_s8 (int8_t *, int8x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_f32 (float32_t *, float32x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_p16 (poly16_t *, poly16x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_p8 (poly8_t *, poly8x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_p64 (poly64_t *, poly64x1_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_s64 (int64_t *, int64x1_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1_lane_u64 (uint64_t *, uint64x1_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_u32 (uint32_t *, uint32x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_u16 (uint16_t *, uint16x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_u8 (uint8_t *, uint8x16_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_s32 (int32_t *, int32x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_s16 (int16_t *, int16x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_s8 (int8_t *, int8x16_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_f32 (float32_t *, float32x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.32 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_p16 (poly16_t *, poly16x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.16 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_p8 (poly8_t *, poly8x16_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.8 {</CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_p64 (poly64_t *, poly64x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_s64 (int64_t *, int64x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>void vst1q_lane_u64 (uint64_t *, uint64x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vst1.64 {</CODE><VAR>d0</VAR><CODE>}, [</CODE><VAR>r0</VAR><CODE>]</CODE></LI></UL>