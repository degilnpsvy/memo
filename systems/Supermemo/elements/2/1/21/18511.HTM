<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>6.50 Offsetof</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-g_t_005f_005fbuiltin_005foffsetof-3159></A>GCC implements for both C and C++ a syntactic extension to implement the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>offsetof</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro.</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: smaller; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smallexample>     primary:
             "__builtin_offsetof" "(" <CODE>typename</CODE> "," offsetof_member_designator ")"
     
     offsetof_member_designator:
               <CODE>identifier</CODE>
             | offsetof_member_designator "." <CODE>identifier</CODE>
             | offsetof_member_designator "[" <CODE>expr</CODE> "]"
</PRE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This extension is sufficient such that</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: smaller; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smallexample>     #define offsetof(<VAR>type</VAR>, <VAR>member</VAR>)  __builtin_offsetof (<VAR>type</VAR>, <VAR>member</VAR>)
</PRE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=noindent>is a suitable definition of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>offsetof</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>macro. In C++,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>type</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>may be dependent. In either case,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>member</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>may consist of a single identifier, or a sequence of member accesses and array references.