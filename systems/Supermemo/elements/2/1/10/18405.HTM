<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.49 V850 Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-V850-Options-2496></A>These &#8216;<SAMP><SPAN class=samp>-m</SPAN></SAMP>&#8217; options are defined for V850 implementations:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-mlong-calls</CODE></DT>
<DT><CODE>-mno-long-calls</CODE></DT>
<DD><A name=index-mlong-calls-2497></A><A name=index-mno-long-calls-2498></A>Treat all calls as being far away (near). If calls are assumed to be far away, the compiler always loads the function's address into a register, and calls indirect through the pointer.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-ep</CODE></DT>
<DT><CODE>-mep</CODE></DT>
<DD><A name=index-mno-ep-2499></A><A name=index-mep-2500></A>Do not optimize (do optimize) basic blocks that use the same index pointer 4 or more times to copy pointer into the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ep</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>register, and use the shorter<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sld</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sst</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mep</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is on by default if you optimize.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-prolog-function</CODE></DT>
<DT><CODE>-mprolog-function</CODE></DT>
<DD><A name=index-mno-prolog-function-2501></A><A name=index-mprolog-function-2502></A>Do not use (do use) external functions to save and restore registers at the prologue and epilogue of a function. The external functions are slower, but use less code space if more than one function saves the same number of registers. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mprolog-function</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is on by default if you optimize.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mspace</CODE></DT>
<DD><A name=index-mspace-2503></A>Try to make the code as small as possible. At present, this just turns on the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mep</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mprolog-function</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>options.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtda=</CODE><VAR>n</VAR></DT>
<DD><A name=index-mtda-2504></A>Put static or global variables whose size is<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes or less into the tiny data area that register<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ep</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>points to. The tiny data area can hold up to 256 bytes in total (128 bytes for byte references).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msda=</CODE><VAR>n</VAR></DT>
<DD><A name=index-msda-2505></A>Put static or global variables whose size is<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes or less into the small data area that register<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>gp</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>points to. The small data area can hold up to 64 kilobytes.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mzda=</CODE><VAR>n</VAR></DT>
<DD><A name=index-mzda-2506></A>Put static or global variables whose size is<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes or less into the first 32 kilobytes of memory.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850</CODE></DT>
<DD><A name=index-mv850-2507></A>Specify that the target processor is the V850.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850e3v5</CODE></DT>
<DD><A name=index-mv850e3v5-2508></A>Specify that the target processor is the V850E3V5. The preprocessor constant &#8216;<SAMP><SPAN class=samp>__v850e3v5__</SPAN></SAMP>&#8217; is defined if this option is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850e2v4</CODE></DT>
<DD><A name=index-mv850e2v4-2509></A>Specify that the target processor is the V850E3V5. This is an alias for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e3v5</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850e2v3</CODE></DT>
<DD><A name=index-mv850e2v3-2510></A>Specify that the target processor is the V850E2V3. The preprocessor constant &#8216;<SAMP><SPAN class=samp>__v850e2v3__</SPAN></SAMP>&#8217; is defined if this option is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850e2</CODE></DT>
<DD><A name=index-mv850e2-2511></A>Specify that the target processor is the V850E2. The preprocessor constant &#8216;<SAMP><SPAN class=samp>__v850e2__</SPAN></SAMP>&#8217; is defined if this option is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850e1</CODE></DT>
<DD><A name=index-mv850e1-2512></A>Specify that the target processor is the V850E1. The preprocessor constants &#8216;<SAMP><SPAN class=samp>__v850e1__</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>__v850e__</SPAN></SAMP>&#8217; are defined if this option is used.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850es</CODE></DT>
<DD><A name=index-mv850es-2513></A>Specify that the target processor is the V850ES. This is an alias for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e1</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mv850e</CODE></DT>
<DD><A name=index-mv850e-2514></A>Specify that the target processor is the V850E. The preprocessor constant &#8216;<SAMP><SPAN class=samp>__v850e__</SPAN></SAMP>&#8217; is defined if this option is used.
<P>If neither<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>nor<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>nor<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e1</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>nor<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e2</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>nor<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e2v3</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>nor<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mv850e3v5</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>are defined then a default target processor is chosen and the relevant &#8216;<SAMP><SPAN class=samp>__v850*__</SPAN></SAMP>&#8217; preprocessor constant is defined.</P>
<P>The preprocessor constants &#8216;<SAMP><SPAN class=samp>__v850</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>__v851__</SPAN></SAMP>&#8217; are always defined, regardless of which processor variant is the target.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mdisable-callt</CODE></DT>
<DT><CODE>-mno-disable-callt</CODE></DT>
<DD><A name=index-mdisable-callt-2515></A><A name=index-mno-disable-callt-2516></A>This option suppresses generation of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>CALLT</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction for the v850e, v850e1, v850e2, v850e2v3 and v850e3v5 flavors of the v850 architecture.
<P>This option is enabled by default when the RH850 ABI is in use (see<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mrh850-abi</SPAN></SAMP>), and disabled by default when the GCC ABI is in use. If<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>CALLT</CODE>instructions are being generated then the C preprocessor symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__V850_CALLT__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be defined.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mrelax</CODE></DT>
<DT><CODE>-mno-relax</CODE></DT>
<DD><A name=index-mrelax-2517></A><A name=index-mno-relax-2518></A>Pass on (or do not pass on) the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mrelax</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command line option to the assembler.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlong-jumps</CODE></DT>
<DT><CODE>-mno-long-jumps</CODE></DT>
<DD><A name=index-mlong-jumps-2519></A><A name=index-mno-long-jumps-2520></A>Disable (or re-enable) the generation of PC-relative jump instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msoft-float</CODE></DT>
<DT><CODE>-mhard-float</CODE></DT>
<DD><A name=index-msoft-float-2521></A><A name=index-mhard-float-2522></A>Disable (or re-enable) the generation of hardware floating point instructions. This option is only significant when the target architecture is &#8216;<SAMP><SPAN class=samp>V850E2V3</SPAN></SAMP>&#8217; or higher. If hardware floating point instructions are being generated then the C preprocessor symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__FPU_OK__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be defined, otherwise the symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__NO_FPU__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be defined.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mloop</CODE></DT>
<DD><A name=index-mloop-2523></A>Enables the use of the e3v5 LOOP instruction. The use of this instruction is not enabled by default when the e3v5 architecture is selected because its use is still experimental.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mrh850-abi</CODE></DT>
<DT><CODE>-mghs</CODE></DT>
<DD><A name=index-mrh850-abi-2524></A><A name=index-mghs-2525></A>Enables support for the RH850 version of the V850 ABI. This is the default. With this version of the ABI the following rules apply:
<UL>
<LI>Integer sized structures and unions are returned via a memory pointer rather than a register.</LI>
<LI>Large structures and unions (more than 8 bytes in size) are passed by value.</LI>
<LI>Functions are aligned to 16-bit boundaries.</LI>
<LI>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m8byte-align</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command line option is supported.</LI>
<LI>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mdisable-callt</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command line option is enabled by default. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mno-disable-callt</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command line option is not supported.</LI></UL>
<P>When this version of the ABI is enabled the C preprocessor symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__V850_RH850_ABI__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is defined.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mgcc-abi</CODE></DT>
<DD><A name=index-mgcc-abi-2526></A>Enables support for the old GCC version of the V850 ABI. With this version of the ABI the following rules apply:
<UL>
<LI>Integer sized structures and unions are returned in register<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r10</CODE>.</LI>
<LI>Large structures and unions (more than 8 bytes in size) are passed by reference.</LI>
<LI>Functions are aligned to 32-bit boundaries, unless optimizing for size.</LI>
<LI>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m8byte-align</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command line option is not supported.</LI>
<LI>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mdisable-callt</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command line option is supported but not enabled by default.</LI></UL>
<P>When this version of the ABI is enabled the C preprocessor symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__V850_GCC_ABI__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is defined.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-m8byte-align</CODE></DT>
<DT><CODE>-mno-8byte-align</CODE></DT>
<DD><A name=index-m8byte-align-2527></A><A name=index-mno-8byte-align-2528></A>Enables support for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>doubles</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>long long</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>types to be aligned on 8-byte boundaries. The default is to restrict the alignment of all objects to at most 4-bytes. When<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m8byte-align</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is in effect the C preprocessor symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__V850_8BYTE_ALIGN__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be defined.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mbig-switch</CODE></DT>
<DD><A name=index-mbig-switch-2529></A>Generate code suitable for big switch tables. Use this option only if the assembler/linker complain about out of range branches within a switch table.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mapp-regs</CODE></DT>
<DD><A name=index-mapp-regs-2530></A>This option causes r2 and r5 to be used in the code generated by the compiler. This setting is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-app-regs</CODE></DT>
<DD><A name=index-mno-app-regs-2531></A>This option causes r2 and r5 to be treated as fixed registers.</DD></DL>