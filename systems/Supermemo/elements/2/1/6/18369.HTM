<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.13 FRV Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-FRV-Options-1487></A></P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-mgpr-32</CODE></DT>
<DD><A name=index-mgpr-32-1488></A>Only use the first 32 general-purpose registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mgpr-64</CODE></DT>
<DD><A name=index-mgpr-64-1489></A>Use all 64 general-purpose registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mfpr-32</CODE></DT>
<DD><A name=index-mfpr-32-1490></A>Use only the first 32 floating-point registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mfpr-64</CODE></DT>
<DD><A name=index-mfpr-64-1491></A>Use all 64 floating-point registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mhard-float</CODE></DT>
<DD><A name=index-mhard-float-1492></A>Use hardware instructions for floating-point operations.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msoft-float</CODE></DT>
<DD><A name=index-msoft-float-1493></A>Use library routines for floating-point operations.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-malloc-cc</CODE></DT>
<DD><A name=index-malloc-cc-1494></A>Dynamically allocate condition code registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mfixed-cc</CODE></DT>
<DD><A name=index-mfixed-cc-1495></A>Do not try to dynamically allocate condition code registers, only use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>icc0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fcc0</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdword</CODE></DT>
<DD><A name=index-mdword-1496></A>Change ABI to use double word insns.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-dword</CODE></DT>
<DD><A name=index-mno-dword-1497></A>Do not use double word instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdouble</CODE></DT>
<DD><A name=index-mdouble-1498></A>Use floating-point double instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-double</CODE></DT>
<DD><A name=index-mno-double-1499></A>Do not use floating-point double instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mmedia</CODE></DT>
<DD><A name=index-mmedia-1500></A>Use media instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-media</CODE></DT>
<DD><A name=index-mno-media-1501></A>Do not use media instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mmuladd</CODE></DT>
<DD><A name=index-mmuladd-1502></A>Use multiply and add/subtract instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-muladd</CODE></DT>
<DD><A name=index-mno-muladd-1503></A>Do not use multiply and add/subtract instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mfdpic</CODE></DT>
<DD><A name=index-mfdpic-1504></A>Select the FDPIC ABI, which uses function descriptors to represent pointers to functions. Without any PIC/PIE-related options, it implies<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIE</SPAN></SAMP>. With<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fpic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fpie</SPAN></SAMP>, it assumes GOT entries and small data are within a 12-bit range from the GOT base address; with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIC</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIE</SPAN></SAMP>, GOT offsets are computed with 32 bits. With a &#8216;<SAMP><SPAN class=samp>bfin-elf</SPAN></SAMP>&#8217; target, this option implies<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-msim</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-minline-plt</CODE></DT>
<DD><A name=index-minline-plt-1505></A>Enable inlining of PLT entries in function calls to functions that are not known to bind locally. It has no effect without<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mfdpic</SPAN></SAMP>. It's enabled by default if optimizing for speed and compiling for shared libraries (i.e.,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIC</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fpic</SPAN></SAMP>), or when an optimization option such as<SAMP><SPAN class=option>-O3</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or above is present in the command line.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mTLS</CODE></DT>
<DD><A name=index-mTLS-1506></A>Assume a large TLS segment when generating thread-local code.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtls</CODE></DT>
<DD><A name=index-mtls-1507></A>Do not assume a large TLS segment when generating thread-local code.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mgprel-ro</CODE></DT>
<DD><A name=index-mgprel-ro-1508></A>Enable the use of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>GPREL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>relocations in the FDPIC ABI for data that is known to be in read-only sections. It's enabled by default, except for<SAMP><SPAN class=option>-fpic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fpie</SPAN></SAMP>: even though it may help make the global offset table smaller, it trades 1 instruction for 4. With<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIC</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIE</SPAN></SAMP>, it trades 3 instructions for 4, one of which may be shared by multiple symbols, and it avoids the need for a GOT entry for the referenced symbol, so it's more likely to be a win. If it is not,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mno-gprel-ro</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be used to disable it.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-multilib-library-pic</CODE></DT>
<DD><A name=index-multilib-library-pic-1509></A>Link with the (library, not FD) pic libraries. It's implied by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mlibrary-pic</SPAN></SAMP>, as well as by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fPIC</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fpic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>without<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mfdpic</SPAN></SAMP>. You should never have to use it explicitly.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlinked-fp</CODE></DT>
<DD><A name=index-mlinked-fp-1510></A>Follow the EABI requirement of always creating a frame pointer whenever a stack frame is allocated. This option is enabled by default and can be disabled with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mno-linked-fp</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlong-calls</CODE></DT>
<DD><A name=index-mlong-calls-1511></A>Use indirect addressing to call functions outside the current compilation unit. This allows the functions to be placed anywhere within the 32-bit address space.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-malign-labels</CODE></DT>
<DD><A name=index-malign-labels-1512></A>Try to align labels to an 8-byte boundary by inserting NOPs into the previous packet. This option only has an effect when VLIW packing is enabled. It doesn't create new packets; it merely adds NOPs to existing ones.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlibrary-pic</CODE></DT>
<DD><A name=index-mlibrary-pic-1513></A>Generate position-independent EABI code.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-macc-4</CODE></DT>
<DD><A name=index-macc-4-1514></A>Use only the first four media accumulator registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-macc-8</CODE></DT>
<DD><A name=index-macc-8-1515></A>Use all eight media accumulator registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mpack</CODE></DT>
<DD><A name=index-mpack-1516></A>Pack VLIW instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-pack</CODE></DT>
<DD><A name=index-mno-pack-1517></A>Do not pack VLIW instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-eflags</CODE></DT>
<DD><A name=index-mno-eflags-1518></A>Do not mark ABI switches in e_flags.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcond-move</CODE></DT>
<DD><A name=index-mcond-move-1519></A>Enable the use of conditional-move instructions (default).
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-cond-move</CODE></DT>
<DD><A name=index-mno-cond-move-1520></A>Disable the use of conditional-move instructions.
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mscc</CODE></DT>
<DD><A name=index-mscc-1521></A>Enable the use of conditional set instructions (default).
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-scc</CODE></DT>
<DD><A name=index-mno-scc-1522></A>Disable the use of conditional set instructions.
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mcond-exec</CODE></DT>
<DD><A name=index-mcond-exec-1523></A>Enable the use of conditional execution (default).
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-cond-exec</CODE></DT>
<DD><A name=index-mno-cond-exec-1524></A>Disable the use of conditional execution.
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mvliw-branch</CODE></DT>
<DD><A name=index-mvliw-branch-1525></A>Run a pass to pack branches into VLIW instructions (default).
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-vliw-branch</CODE></DT>
<DD><A name=index-mno-vliw-branch-1526></A>Do not run a pass to pack branches into VLIW instructions.
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mmulti-cond-exec</CODE></DT>
<DD><A name=index-mmulti-cond-exec-1527></A>Enable optimization of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&amp;&amp;</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>||</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in conditional execution (default).
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-multi-cond-exec</CODE></DT>
<DD><A name=index-mno-multi-cond-exec-1528></A>Disable optimization of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&amp;&amp;</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>||</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>in conditional execution.
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mnested-cond-exec</CODE></DT>
<DD><A name=index-mnested-cond-exec-1529></A>Enable nested conditional execution optimizations (default).
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-nested-cond-exec</CODE></DT>
<DD><A name=index-mno-nested-cond-exec-1530></A>Disable nested conditional execution optimizations.
<P>This switch is mainly for debugging the compiler and will likely be removed in a future version.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-moptimize-membar</CODE></DT>
<DD><A name=index-moptimize-membar-1531></A>This switch removes redundant<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>membar</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions from the compiler-generated code. It is enabled by default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-optimize-membar</CODE></DT>
<DD><A name=index-mno-optimize-membar-1532></A>This switch disables the automatic removal of redundant<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>membar</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions from the generated code.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtomcat-stats</CODE></DT>
<DD><A name=index-mtomcat-stats-1533></A>Cause gas to print out tomcat statistics.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcpu=</CODE><VAR>cpu</VAR></DT>
<DD><A name=index-mcpu-1534></A>Select the processor type for which to generate code. Possible values are &#8216;<SAMP><SPAN class=samp>frv</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>fr550</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>tomcat</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>fr500</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>fr450</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>fr405</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>fr400</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>fr300</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>simple</SPAN></SAMP>&#8217;.</DD></DL>