<H2 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=chapter>6 Extensions to the C Language Family</H2>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-extensions_002c-C-language-2641></A><A name=index-C-language-extensions-2642></A><A name=index-pedantic-2643></A>GNU C provides several language features not found in ISO standard C. (The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-pedantic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option directs GCC to print a warning message if any of these features is used.) To test for the availability of these features in conditional compilation, check for a predefined macro<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__GNUC__</CODE>, which is always defined under GCC.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">These extensions are available in C and Objective-C. Most of them are also available in C++. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/C_002b_002b-Extensions.html#C_002b_002b-Extensions">Extensions to the C++ Language</A>, for extensions that apply<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>only</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>to C++.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Some features that are in ISO C99 but not C90 or C++ are also, as extensions, accepted by GCC in C90 mode and in C++.</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=menu>
<LI><A accessKey=1 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Statement-Exprs.html#Statement-Exprs">Statement Exprs</A>: Putting statements and declarations inside expressions.</LI>
<LI><A accessKey=2 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Local-Labels.html#Local-Labels">Local Labels</A>: Labels local to a block.</LI>
<LI><A accessKey=3 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Labels-as-Values.html#Labels-as-Values">Labels as Values</A>: Getting pointers to labels, and computed gotos.</LI>
<LI><A accessKey=4 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Nested-Functions.html#Nested-Functions">Nested Functions</A>: As in Algol and Pascal, lexical scoping of functions.</LI>
<LI><A accessKey=5 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Constructing-Calls.html#Constructing-Calls">Constructing Calls</A>: Dispatching a call to another function.</LI>
<LI><A accessKey=6 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Typeof.html#Typeof">Typeof</A>:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>typeof</CODE>: referring to the type of an expression.</LI>
<LI><A accessKey=7 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Conditionals.html#Conditionals">Conditionals</A>: Omitting the middle operand of a &#8216;<SAMP><SPAN class=samp>?:</SPAN></SAMP>&#8217; expression.</LI>
<LI><A accessKey=8 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/_005f_005fint128.html#g_t_005f_005fint128">__int128</A>: 128-bit integers---<CODE>__int128</CODE>.</LI>
<LI><A accessKey=9 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Long-Long.html#Long-Long">Long Long</A>: Double-word integers---<CODE>long long int</CODE>.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Complex.html#Complex">Complex</A>: Data types for complex numbers.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Floating-Types.html#Floating-Types">Floating Types</A>: Additional Floating Types.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Half-Precision.html#Half-Precision">Half-Precision</A>: Half-Precision Floating Point.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Decimal-Float.html#Decimal-Float">Decimal Float</A>: Decimal Floating Types.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Hex-Floats.html#Hex-Floats">Hex Floats</A>: Hexadecimal floating-point constants.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Fixed-Point.html#Fixed-Point">Fixed-Point</A>: Fixed-Point Types.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Named-Address-Spaces.html#Named-Address-Spaces">Named Address Spaces</A>: Named address spaces.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Zero-Length.html#Zero-Length">Zero Length</A>: Zero-length arrays.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Empty-Structures.html#Empty-Structures">Empty Structures</A>: Structures with no members.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Variable-Length.html#Variable-Length">Variable Length</A>: Arrays whose length is computed at run time.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Variadic-Macros.html#Variadic-Macros">Variadic Macros</A>: Macros with a variable number of arguments.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Escaped-Newlines.html#Escaped-Newlines">Escaped Newlines</A>: Slightly looser rules for escaped newlines.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Subscripting.html#Subscripting">Subscripting</A>: Any array can be subscripted, even if not an lvalue.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Pointer-Arith.html#Pointer-Arith">Pointer Arith</A>: Arithmetic on<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>void</CODE>-pointers and function pointers.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Initializers.html#Initializers">Initializers</A>: Non-constant initializers.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Compound-Literals.html#Compound-Literals">Compound Literals</A>: Compound literals give structures, unions or arrays as values.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Designated-Inits.html#Designated-Inits">Designated Inits</A>: Labeling elements of initializers.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Case-Ranges.html#Case-Ranges">Case Ranges</A>: `case 1 ... 9' and such.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Cast-to-Union.html#Cast-to-Union">Cast to Union</A>: Casting to union type from any member of the union.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Mixed-Declarations.html#Mixed-Declarations">Mixed Declarations</A>: Mixing declarations and code.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Function-Attributes.html#Function-Attributes">Function Attributes</A>: Declaring that functions have no side effects, or that they can never return.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Attribute-Syntax.html#Attribute-Syntax">Attribute Syntax</A>: Formal syntax for attributes.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Function-Prototypes.html#Function-Prototypes">Function Prototypes</A>: Prototype declarations and old-style definitions.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/C_002b_002b-Comments.html#C_002b_002b-Comments">C++ Comments</A>: C++ comments are recognized.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Dollar-Signs.html#Dollar-Signs">Dollar Signs</A>: Dollar sign is allowed in identifiers.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Character-Escapes.html#Character-Escapes">Character Escapes</A>: &#8216;<SAMP><SPAN class=samp>\e</SPAN></SAMP>&#8217; stands for the character &lt;ESC&gt;.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Variable-Attributes.html#Variable-Attributes">Variable Attributes</A>: Specifying attributes of variables.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Type-Attributes.html#Type-Attributes">Type Attributes</A>: Specifying attributes of types.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Alignment.html#Alignment">Alignment</A>: Inquiring about the alignment of a type or variable.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Inline.html#Inline">Inline</A>: Defining inline functions (as fast as macros).</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Volatiles.html#Volatiles">Volatiles</A>: What constitutes an access to a volatile object.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Extended-Asm.html#Extended-Asm">Extended Asm</A>: Assembler instructions with C expressions as operands. (With them you can define ``built-in'' functions.)</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Constraints.html#Constraints">Constraints</A>: Constraints for asm operands</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Asm-Labels.html#Asm-Labels">Asm Labels</A>: Specifying the assembler name to use for a C symbol.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Explicit-Reg-Vars.html#Explicit-Reg-Vars">Explicit Reg Vars</A>: Defining variables residing in specified registers.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Alternate-Keywords.html#Alternate-Keywords">Alternate Keywords</A>:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__const__</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__asm__</CODE>, etc., for header files.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Incomplete-Enums.html#Incomplete-Enums">Incomplete Enums</A>:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>enum foo;</CODE>, with details to follow.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Function-Names.html#Function-Names">Function Names</A>: Printable strings which are the name of the current function.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Return-Address.html#Return-Address">Return Address</A>: Getting the return or frame address of a function.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Vector-Extensions.html#Vector-Extensions">Vector Extensions</A>: Using vector instructions through built-in functions.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Offsetof.html#Offsetof">Offsetof</A>: Special syntax for implementing<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>offsetof</CODE>.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/_005f_005fsync-Builtins.html#g_t_005f_005fsync-Builtins">__sync Builtins</A>: Legacy built-in functions for atomic memory access.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/_005f_005fatomic-Builtins.html#g_t_005f_005fatomic-Builtins">__atomic Builtins</A>: Atomic built-in functions with memory model.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/x86-specific-memory-model-extensions-for-transactional-memory.html#x86-specific-memory-model-extensions-for-transactional-memory">x86 specific memory model extensions for transactional memory</A>: x86 memory models.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Object-Size-Checking.html#Object-Size-Checking">Object Size Checking</A>: Built-in functions for limited buffer overflow checking.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Cilk-Plus-Builtins.html#Cilk-Plus-Builtins">Cilk Plus Builtins</A>: Built-in functions for the Cilk Plus language extension.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Other-Builtins.html#Other-Builtins">Other Builtins</A>: Other built-in functions.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Target-Builtins.html#Target-Builtins">Target Builtins</A>: Built-in functions specific to particular targets.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Target-Format-Checks.html#Target-Format-Checks">Target Format Checks</A>: Format checks specific to particular targets.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Pragmas.html#Pragmas">Pragmas</A>: Pragmas accepted by GCC.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Unnamed-Fields.html#Unnamed-Fields">Unnamed Fields</A>: Unnamed struct/union fields within structs/unions.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Thread-Local.html#Thread-Local">Thread-Local</A>: Per-thread variables.</LI>
<LI><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Binary-constants.html#Binary-constants">Binary constants</A>: Binary constants using the &#8216;<SAMP><SPAN class=samp>0b</SPAN></SAMP>&#8217; prefix.</LI></UL>