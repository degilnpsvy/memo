<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.22 M32R/D Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-M32R_002fD-options-1739></A>These<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>options are defined for Renesas M32R/D architectures:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-m32r2</CODE></DT>
<DD><A name=index-m32r2-1740></A>Generate code for the M32R/2.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-m32rx</CODE></DT>
<DD><A name=index-m32rx-1741></A>Generate code for the M32R/X.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-m32r</CODE></DT>
<DD><A name=index-m32r-1742></A>Generate code for the M32R. This is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mmodel=small</CODE></DT>
<DD><A name=index-mmodel_003dsmall-1743></A>Assume all objects live in the lower 16MB of memory (so that their addresses can be loaded with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ld24</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction), and assume all subroutines are reachable with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bl</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction. This is the default.
<P>The addressability of a particular object can be set with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>model</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mmodel=medium</CODE></DT>
<DD><A name=index-mmodel_003dmedium-1744></A>Assume objects may be anywhere in the 32-bit address space (the compiler generates<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>seth/add3</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions to load their addresses), and assume all subroutines are reachable with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bl</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mmodel=large</CODE></DT>
<DD><A name=index-mmodel_003dlarge-1745></A>Assume objects may be anywhere in the 32-bit address space (the compiler generates<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>seth/add3</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions to load their addresses), and assume subroutines may not be reachable with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>bl</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction (the compiler generates the much slower<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>seth/add3/jl</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction sequence).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msdata=none</CODE></DT>
<DD><A name=index-msdata_003dnone-1746></A>Disable use of the small data area. Variables are put into one of &#8216;<SAMP><SPAN class=samp>.data</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>.bss</SPAN></SAMP>&#8217;, or &#8216;<SAMP><SPAN class=samp>.rodata</SPAN></SAMP>&#8217; (unless the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>section</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute has been specified). This is the default.
<P>The small data area consists of sections &#8216;<SAMP><SPAN class=samp>.sdata</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>.sbss</SPAN></SAMP>&#8217;. Objects may be explicitly put in the small data area with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>section</CODE>attribute using one of these sections.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-msdata=sdata</CODE></DT>
<DD><A name=index-msdata_003dsdata-1747></A>Put small global and static data in the small data area, but do not generate special code to reference them.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msdata=use</CODE></DT>
<DD><A name=index-msdata_003duse-1748></A>Put small global and static data in the small data area, and generate special instructions to reference them.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-G<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>num</VAR></DT>
<DD><A name=index-G-1749></A><A name=index-smaller-data-references-1750></A>Put global and static objects less than or equal to<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>num</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes into the small data or BSS sections instead of the normal data or BSS sections. The default value of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>num</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is 8. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-msdata</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option must be set to one of &#8216;<SAMP><SPAN class=samp>sdata</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>use</SPAN></SAMP>&#8217; for this option to have any effect.
<P>All modules should be compiled with the same<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-G<SPAN class=Apple-converted-space>&nbsp;</SPAN></SPAN><VAR>num</VAR></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>value. Compiling with different values of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>num</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>may or may not work; if it doesn't the linker gives an error message&#8212;incorrect code is not generated.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mdebug</CODE></DT>
<DD><A name=index-mdebug-1751></A>Makes the M32R-specific code in the compiler display some statistics that might help in debugging programs.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-malign-loops</CODE></DT>
<DD><A name=index-malign-loops-1752></A>Align all loops to a 32-byte boundary.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-align-loops</CODE></DT>
<DD><A name=index-mno-align-loops-1753></A>Do not enforce a 32-byte alignment for loops. This is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-missue-rate=</CODE><VAR>number</VAR></DT>
<DD><A name=index-missue-rate_003d_0040var_007bnumber_007d-1754></A>Issue<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>number</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions per cycle.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>number</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can only be 1 or 2.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mbranch-cost=</CODE><VAR>number</VAR></DT>
<DD><A name=index-mbranch-cost_003d_0040var_007bnumber_007d-1755></A><VAR>number</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can only be 1 or 2. If it is 1 then branches are preferred over conditional code, if it is 2, then the opposite applies.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mflush-trap=</CODE><VAR>number</VAR></DT>
<DD><A name=index-mflush-trap_003d_0040var_007bnumber_007d-1756></A>Specifies the trap number to use to flush the cache. The default is 12. Valid numbers are between 0 and 15 inclusive.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-flush-trap</CODE></DT>
<DD><A name=index-mno-flush-trap-1757></A>Specifies that the cache cannot be flushed by using a trap.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mflush-func=</CODE><VAR>name</VAR></DT>
<DD><A name=index-mflush-func_003d_0040var_007bname_007d-1758></A>Specifies the name of the operating system function to call to flush the cache. The default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>_flush_cache</EM>, but a function call is only used if a trap is not available.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-flush-func</CODE></DT>
<DD><A name=index-mno-flush-func-1759></A>Indicates that there is no OS function for flushing the cache.</DD></DL>