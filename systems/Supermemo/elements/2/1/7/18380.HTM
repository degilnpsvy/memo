<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.24 MCore Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-MCore-options-1801></A>These are the &#8216;<SAMP><SPAN class=samp>-m</SPAN></SAMP>&#8217; options defined for the Motorola M*Core processors.</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-mhardlit</CODE></DT>
<DT><CODE>-mno-hardlit</CODE></DT>
<DD><A name=index-mhardlit-1802></A><A name=index-mno-hardlit-1803></A>Inline constants into the code stream if it can be done in two instructions or less.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdiv</CODE></DT>
<DT><CODE>-mno-div</CODE></DT>
<DD><A name=index-mdiv-1804></A><A name=index-mno-div-1805></A>Use the divide instruction. (Enabled by default).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mrelax-immediate</CODE></DT>
<DT><CODE>-mno-relax-immediate</CODE></DT>
<DD><A name=index-mrelax-immediate-1806></A><A name=index-mno-relax-immediate-1807></A>Allow arbitrary-sized immediates in bit operations.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mwide-bitfields</CODE></DT>
<DT><CODE>-mno-wide-bitfields</CODE></DT>
<DD><A name=index-mwide-bitfields-1808></A><A name=index-mno-wide-bitfields-1809></A>Always treat bit-fields as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>int</CODE>-sized.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-m4byte-functions</CODE></DT>
<DT><CODE>-mno-4byte-functions</CODE></DT>
<DD><A name=index-m4byte-functions-1810></A><A name=index-mno-4byte-functions-1811></A>Force all functions to be aligned to a 4-byte boundary.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcallgraph-data</CODE></DT>
<DT><CODE>-mno-callgraph-data</CODE></DT>
<DD><A name=index-mcallgraph-data-1812></A><A name=index-mno-callgraph-data-1813></A>Emit callgraph information.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mslow-bytes</CODE></DT>
<DT><CODE>-mno-slow-bytes</CODE></DT>
<DD><A name=index-mslow-bytes-1814></A><A name=index-mno-slow-bytes-1815></A>Prefer word access when reading byte quantities.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlittle-endian</CODE></DT>
<DT><CODE>-mbig-endian</CODE></DT>
<DD><A name=index-mlittle-endian-1816></A><A name=index-mbig-endian-1817></A>Generate code for a little-endian target.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-m210</CODE></DT>
<DT><CODE>-m340</CODE></DT>
<DD><A name=index-m210-1818></A><A name=index-m340-1819></A>Generate code for the 210 processor.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-lsim</CODE></DT>
<DD><A name=index-mno-lsim-1820></A>Assume that runtime support has been provided and so omit the simulator library (<SAMP><SPAN class=file>libsim.a)</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>from the linker command line.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mstack-increment=</CODE><VAR>size</VAR></DT>
<DD><A name=index-mstack-increment-1821></A>Set the maximum amount for a single stack increment operation. Large values can increase the speed of programs that contain functions that need a large amount of stack space, but they can also trigger a segmentation fault if the stack is extended too much. The default value is 0x1000.</DD></DL>