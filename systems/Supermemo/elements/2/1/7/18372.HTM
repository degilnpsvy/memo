<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.16 HPPA Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-HPPA-Options-1550></A>These &#8216;<SAMP><SPAN class=samp>-m</SPAN></SAMP>&#8217; options are defined for the HPPA family of computers:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-march=</CODE><VAR>architecture-type</VAR></DT>
<DD><A name=index-march-1551></A>Generate code for the specified architecture. The choices for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>architecture-type</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are &#8216;<SAMP><SPAN class=samp>1.0</SPAN></SAMP>&#8217; for PA 1.0, &#8216;<SAMP><SPAN class=samp>1.1</SPAN></SAMP>&#8217; for PA 1.1, and &#8216;<SAMP><SPAN class=samp>2.0</SPAN></SAMP>&#8217; for PA 2.0 processors. Refer to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>/usr/lib/sched.models</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>on an HP-UX system to determine the proper architecture option for your machine. Code compiled for lower numbered architectures runs on higher numbered architectures, but not the other way around.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mpa-risc-1-0</CODE></DT>
<DT><CODE>-mpa-risc-1-1</CODE></DT>
<DT><CODE>-mpa-risc-2-0</CODE></DT>
<DD><A name=index-mpa-risc-1-0-1552></A><A name=index-mpa-risc-1-1-1553></A><A name=index-mpa-risc-2-0-1554></A>Synonyms for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march=1.0</SPAN></SAMP>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march=1.1</SPAN></SAMP>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march=2.0</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>respectively.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mjump-in-delay</CODE></DT>
<DD><A name=index-mjump-in-delay-1555></A>Fill delay slots of function calls with unconditional jump instructions by modifying the return pointer for the function call to be the target of the conditional jump.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdisable-fpregs</CODE></DT>
<DD><A name=index-mdisable-fpregs-1556></A>Prevent floating-point registers from being used in any manner. This is necessary for compiling kernels that perform lazy context switching of floating-point registers. If you use this option and attempt to perform floating-point operations, the compiler aborts.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdisable-indexing</CODE></DT>
<DD><A name=index-mdisable-indexing-1557></A>Prevent the compiler from using indexing address modes. This avoids some rather obscure problems when compiling MIG generated code under MACH.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-space-regs</CODE></DT>
<DD><A name=index-mno-space-regs-1558></A>Generate code that assumes the target has no space registers. This allows GCC to generate faster indirect calls and use unscaled index address modes.
<P>Such code is suitable for level 0 PA systems and kernels.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mfast-indirect-calls</CODE></DT>
<DD><A name=index-mfast-indirect-calls-1559></A>Generate code that assumes calls never cross space boundaries. This allows GCC to emit code that performs faster indirect calls.
<P>This option does not work in the presence of shared libraries or nested functions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mfixed-range=</CODE><VAR>register-range</VAR></DT>
<DD><A name=index-mfixed-range-1560></A>Generate code treating the given register range as fixed registers. A fixed register is one that the register allocator cannot use. This is useful when compiling kernel code. A register range is specified as two registers separated by a dash. Multiple register ranges can be specified separated by a comma.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlong-load-store</CODE></DT>
<DD><A name=index-mlong-load-store-1561></A>Generate 3-instruction load and store sequences as sometimes required by the HP-UX 10 linker. This is equivalent to the &#8216;<SAMP><SPAN class=samp>+k</SPAN></SAMP>&#8217; option to the HP compilers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mportable-runtime</CODE></DT>
<DD><A name=index-mportable-runtime-1562></A>Use the portable calling conventions proposed by HP for ELF systems.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mgas</CODE></DT>
<DD><A name=index-mgas-1563></A>Enable the use of assembler directives only GAS understands.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mschedule=</CODE><VAR>cpu-type</VAR></DT>
<DD><A name=index-mschedule-1564></A>Schedule code according to the constraints for the machine type<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>cpu-type</VAR>. The choices for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>cpu-type</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are &#8216;<SAMP><SPAN class=samp>700</SPAN></SAMP>&#8217; &#8216;<SAMP><SPAN class=samp>7100</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>7100LC</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>7200</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>7300</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>8000</SPAN></SAMP>&#8217;. Refer to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>/usr/lib/sched.models</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>on an HP-UX system to determine the proper scheduling option for your machine. The default scheduling is &#8216;<SAMP><SPAN class=samp>8000</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlinker-opt</CODE></DT>
<DD><A name=index-mlinker-opt-1565></A>Enable the optimization pass in the HP-UX linker. Note this makes symbolic debugging impossible. It also triggers a bug in the HP-UX 8 and HP-UX 9 linkers in which they give bogus error messages when linking some programs.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msoft-float</CODE></DT>
<DD><A name=index-msoft-float-1566></A>Generate output containing library calls for floating point.<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG>Warning:</STRONG><SPAN class=Apple-converted-space>&nbsp;</SPAN>the requisite libraries are not available for all HPPA targets. Normally the facilities of the machine's usual C compiler are used, but this cannot be done directly in cross-compilation. You must make your own arrangements to provide suitable library functions for cross-compilation.
<P><SAMP><SPAN class=option>-msoft-float</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>changes the calling convention in the output file; therefore, it is only useful if you compile<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>all</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>of a program with this option. In particular, you need to compile<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>libgcc.a</SPAN></SAMP>, the library that comes with GCC, with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-msoft-float</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in order for this to work.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-msio</CODE></DT>
<DD><A name=index-msio-1567></A>Generate the predefine,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_SIO</CODE>, for server IO. The default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mwsio</SPAN></SAMP>. This generates the predefines,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__hp9000s700</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__hp9000s700__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_WSIO</CODE>, for workstation IO. These options are available under HP-UX and HI-UX.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mgnu-ld</CODE></DT>
<DD><A name=index-mgnu-ld-1568></A>Use options specific to GNU<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP>. This passes<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-shared</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>when building a shared library. It is the default when GCC is configured, explicitly or implicitly, with the GNU linker. This option does not affect which<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is called; it only changes what parameters are passed to that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>that is called is determined by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--with-ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>configure option, GCC's program search path, and finally by the user's<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=env>PATH</SPAN></SAMP>. The linker used by GCC can be printed using &#8216;<SAMP><SPAN class=samp>which `gcc -print-prog-name=ld`</SPAN></SAMP>&#8217;. This option is only available on the 64-bit HP-UX GCC, i.e. configured with &#8216;<SAMP><SPAN class=samp>hppa*64*-*-hpux*</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mhp-ld</CODE></DT>
<DD><A name=index-mhp-ld-1569></A>Use options specific to HP<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP>. This passes<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-b</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>when building a shared library and passes<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>+Accept TypeMismatch</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>on all links. It is the default when GCC is configured, explicitly or implicitly, with the HP linker. This option does not affect which<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is called; it only changes what parameters are passed to that<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=command>ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>that is called is determined by the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>--with-ld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>configure option, GCC's program search path, and finally by the user's<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=env>PATH</SPAN></SAMP>. The linker used by GCC can be printed using &#8216;<SAMP><SPAN class=samp>which `gcc -print-prog-name=ld`</SPAN></SAMP>&#8217;. This option is only available on the 64-bit HP-UX GCC, i.e. configured with &#8216;<SAMP><SPAN class=samp>hppa*64*-*-hpux*</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlong-calls</CODE></DT>
<DD><A name=index-mno-long-calls-1570></A>Generate code that uses long call sequences. This ensures that a call is always able to reach linker generated stubs. The default is to generate long calls only when the distance from the call site to the beginning of the function or translation unit, as the case may be, exceeds a predefined limit set by the branch type being used. The limits for normal calls are 7,600,000 and 240,000 bytes, respectively for the PA 2.0 and PA 1.X architectures. Sibcalls are always limited at 240,000 bytes.
<P>Distances are measured from the beginning of functions when using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-ffunction-sections</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option, or when using the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mgas</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mno-portable-runtime</SPAN></SAMP>options together under HP-UX with the SOM linker.</P>
<P>It is normally not desirable to use this option as it degrades performance. However, it may be useful in large applications, particularly when partial linking is used to build the application.</P>
<P>The types of long calls used depends on the capabilities of the assembler and linker, and the type of code being generated. The impact on systems that support long absolute calls, and long pic symbol-difference or pc-relative calls should be relatively small. However, an indirect call is used on 32-bit ELF systems in pic code and it is quite long.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-munix=</CODE><VAR>unix-std</VAR></DT>
<DD><A name=index-march-1571></A>Generate compiler predefines and select a startfile for the specified UNIX standard. The choices for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>unix-std</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are &#8216;<SAMP><SPAN class=samp>93</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>95</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>98</SPAN></SAMP>&#8217;. &#8216;<SAMP><SPAN class=samp>93</SPAN></SAMP>&#8217; is supported on all HP-UX versions. &#8216;<SAMP><SPAN class=samp>95</SPAN></SAMP>&#8217; is available on HP-UX 10.10 and later. &#8216;<SAMP><SPAN class=samp>98</SPAN></SAMP>&#8217; is available on HP-UX 11.11 and later. The default values are &#8216;<SAMP><SPAN class=samp>93</SPAN></SAMP>&#8217; for HP-UX 10.00, &#8216;<SAMP><SPAN class=samp>95</SPAN></SAMP>&#8217; for HP-UX 10.10 though to 11.00, and &#8216;<SAMP><SPAN class=samp>98</SPAN></SAMP>&#8217; for HP-UX 11.11 and later.
<P><SAMP><SPAN class=option>-munix=93</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides the same predefines as GCC 3.3 and 3.4.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-munix=95</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides additional predefines for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>XOPEN_UNIX</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_XOPEN_SOURCE_EXTENDED</CODE>, and the startfile<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>unix95.o</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-munix=98</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides additional predefines for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_XOPEN_UNIX</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_XOPEN_SOURCE_EXTENDED</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_INCLUDE__STDC_A1_SOURCE</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>_INCLUDE_XOPEN_SOURCE_500</CODE>, and the startfile<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>unix98.o</SPAN></SAMP>.</P>
<P>It is<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>important</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>to note that this option changes the interfaces for various library routines. It also affects the operational behavior of the C library. Thus,<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>extreme</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>care is needed in using this option.</P>
<P>Library code that is intended to operate with more than one UNIX standard must test, set and restore the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>__xpg4_extended_mask</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>as appropriate. Most GNU software doesn't provide this capability.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-nolibdld</CODE></DT>
<DD><A name=index-nolibdld-1572></A>Suppress the generation of link options to search libdld.sl when the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-static</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is specified on HP-UX 10 and later.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-static</CODE></DT>
<DD><A name=index-static-1573></A>The HP-UX implementation of setlocale in libc has a dependency on libdld.sl. There isn't an archive version of libdld.sl. Thus, when the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-static</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is specified, special link options are needed to resolve this dependency.
<P>On HP-UX 10 and later, the GCC driver adds the necessary options to link with libdld.sl when the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-static</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is specified. This causes the resulting binary to be dynamic. On the 64-bit port, the linkers generate dynamic binaries by default in any case. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-nolibdld</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option can be used to prevent the GCC driver from adding these link options.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-threads</CODE></DT>
<DD><A name=index-threads-1574></A>Add support for multithreading with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>dce thread</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>library under HP-UX. This option sets flags for both the preprocessor and linker.</DD></DL>