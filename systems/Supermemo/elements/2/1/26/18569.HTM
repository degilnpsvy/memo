<H5 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>6.57.6.46 Get lanes from a vector</H5>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint32_t vget_lane_u32 (uint32x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.32<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint16_t vget_lane_u16 (uint16x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u16<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint8_t vget_lane_u8 (uint8x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u8<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int32_t vget_lane_s32 (int32x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.32<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int16_t vget_lane_s16 (int16x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.s16<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int8_t vget_lane_s8 (int8x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.s8<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>float32_t vget_lane_f32 (float32x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.32<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>poly16_t vget_lane_p16 (poly16x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u16<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>poly8_t vget_lane_p8 (poly8x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u8<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint64_t vget_lane_u64 (uint64x1_t, const int)</LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int64_t vget_lane_s64 (int64x1_t, const int)</LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint32_t vgetq_lane_u32 (uint32x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.32<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint16_t vgetq_lane_u16 (uint16x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u16<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint8_t vgetq_lane_u8 (uint8x16_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u8<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int32_t vgetq_lane_s32 (int32x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.32<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int16_t vgetq_lane_s16 (int16x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.s16<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int8_t vgetq_lane_s8 (int8x16_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.s8<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>float32_t vgetq_lane_f32 (float32x4_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.32<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>poly16_t vgetq_lane_p16 (poly16x8_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u16<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>poly8_t vgetq_lane_p8 (poly8x16_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov.u8<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><CODE>[</CODE><VAR>0</VAR><CODE>]</CODE></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>uint64_t vgetq_lane_u64 (uint64x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>or</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fmrrd<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR></LI></UL>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI>int64_t vgetq_lane_s64 (int64x2_t, const int)<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR><EM>Form of expected instruction(s):</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>vmov<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>or</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>fmrrd<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>r0</VAR><CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CODE><VAR>d0</VAR></LI></UL>