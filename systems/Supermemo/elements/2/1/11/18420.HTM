<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>4.4 Characters</H3>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><CITE>The number of bits in a byte (C90 3.4, C99 and C11 3.6).</CITE>
<P>Determined by ABI.</P></LI>
<LI><CITE>The values of the members of the execution character set (C90, C99 and C11 5.2.1).</CITE>
<P>Determined by ABI.</P></LI>
<LI><CITE>The unique value of the member of the execution character set produced for each of the standard alphabetic escape sequences (C90, C99 and C11 5.2.2).</CITE>
<P>Determined by ABI.</P></LI>
<LI><CITE>The value of a<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>char</CODE><CITE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object into which has been stored any character other than a member of the basic execution character set (C90 6.1.2.5, C99 and C11 6.2.5).</CITE>
<P>Determined by ABI.</P></LI>
<LI><CITE>Which of<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>signed char</CODE><CITE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>unsigned char</CODE><CITE><SPAN class=Apple-converted-space>&nbsp;</SPAN>has the same range, representation, and behavior as &#8220;plain&#8221;<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>char</CODE><CITE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(C90 6.1.2.5, C90 6.2.1.1, C99 and C11 6.2.5, C99 and C11 6.3.1.1).</CITE>
<P><A name=index-fsigned-char-2636></A><A name=index-funsigned-char-2637></A>Determined by ABI. The options<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-funsigned-char</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fsigned-char</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>change the default. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/C-Dialect-Options.html#C-Dialect-Options">Options Controlling C Dialect</A>.</P></LI>
<LI><CITE>The mapping of members of the source character set (in character constants and string literals) to members of the execution character set (C90 6.1.3.4, C99 and C11 6.4.4.4, C90, C99 and C11 5.1.1.2).</CITE>
<P>Determined by ABI.</P></LI>
<LI><CITE>The value of an integer character constant containing more than one character or containing a character or escape sequence that does not map to a single-byte execution character (C90 6.1.3.4, C99 and C11 6.4.4.4).</CITE>
<P>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/cpp/Implementation-defined-behavior.html#Implementation-defined-behavior">Implementation-defined behavior</A>.</P></LI>
<LI><CITE>The value of a wide character constant containing more than one multibyte character or a single multibyte character that maps to multiple members of the extended execution character set, or containing a multibyte character or escape sequence not represented in the extended execution character set (C90 6.1.3.4, C99 and C11 6.4.4.4).</CITE>
<P>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/cpp/Implementation-defined-behavior.html#Implementation-defined-behavior">Implementation-defined behavior</A>.</P></LI>
<LI><CITE>The current locale used to convert a wide character constant consisting of a single multibyte character that maps to a member of the extended execution character set into a corresponding wide character code (C90 6.1.3.4, C99 and C11 6.4.4.4).</CITE>
<P>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/cpp/Implementation-defined-behavior.html#Implementation-defined-behavior">Implementation-defined behavior</A>.</P></LI>
<LI><CITE>Whether differently-prefixed wide string literal tokens can be concatenated and, if so, the treatment of the resulting multibyte character sequence (C11 6.4.5).</CITE>
<P>Such tokens may not be concatenated.</P></LI>
<LI><CITE>The current locale used to convert a wide string literal into corresponding wide character codes (C90 6.1.4, C99 and C11 6.4.5).</CITE>
<P>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/cpp/Implementation-defined-behavior.html#Implementation-defined-behavior">Implementation-defined behavior</A>.</P></LI>
<LI><CITE>The value of a string literal containing a multibyte character or escape sequence not represented in the execution character set (C90 6.1.4, C99 and C11 6.4.5).</CITE>
<P>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/cpp/Implementation-defined-behavior.html#Implementation-defined-behavior">Implementation-defined behavior</A>.</P></LI>
<LI><CITE>The encoding of any of<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>wchar_t</CODE><CITE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>char16_t</CODE><CITE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>char32_t</CODE><CITE><SPAN class=Apple-converted-space>&nbsp;</SPAN>where the corresponding standard encoding macro (</CITE><CODE>__STDC_ISO_10646__</CODE><CITE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>__STDC_UTF_16__</CODE><CITE>, or</CITE><CODE>__STDC_UTF_32__</CODE><CITE>) is not defined (C11 6.10.8.2).</CITE>
<P>See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/cpp/Implementation-defined-behavior.html#Implementation-defined-behavior">Implementation-defined behavior</A>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>char16_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>char32_t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>literals are always encoded in UTF-16 and UTF-32 respectively.</P></LI></UL>