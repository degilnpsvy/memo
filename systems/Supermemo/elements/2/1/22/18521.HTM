<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.57.3 ARC Built-in Functions</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The following built-in functions are provided for ARC targets. The built-ins generate the corresponding assembly instructions. In the examples given below, the generated code often requires an operand or result to be in a register. Where necessary further code will be generated to ensure this is true, but for brevity this is not described in each case.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><EM>Note:</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>Using a built-in to generate an instruction not supported by a target may cause problems. At present the compiler is not guaranteed to detect such misuse, and as a result an internal compiler error may be generated.</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_aligned</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void *val, int alignval</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005faligned-3676></A></VAR><BR>
<BLOCKQUOTE>
<P>Return 1 if<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is known to have the byte alignment given by<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>alignval</VAR>, otherwise return 0. Note that this is different from</P><PRE style="FONT-SIZE: smaller" class=smallexample>          __alignof__(*(char *)<VAR>val</VAR>) &gt;= alignval
</PRE>
<P>because __alignof__ sees only the type of the dereference, whereas __builtin_arc_align uses alignment information from the pointer as well as from the pointed-to type. The information available will depend on optimization level.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_brk</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fbrk-3677></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates</P><PRE class=example>          brk
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: unsigned int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_core_read</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int regno</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fcore_005fread-3678></A></VAR><BR>
<BLOCKQUOTE>
<P>The operand is the number of a register to be read. Generates:</P><PRE class=example>          mov  <VAR>dest</VAR>, r<VAR>regno</VAR>
</PRE>
<P>where the value in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dest</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be the result returned from the built-in.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_core_write</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int regno, unsigned int val</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fcore_005fwrite-3679></A></VAR><BR>
<BLOCKQUOTE>
<P>The first operand is the number of a register to be written, the second operand is a compile time constant to write into that register. Generates:</P><PRE class=example>          mov  r<VAR>regno</VAR>, <VAR>val</VAR>
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_divaw</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int a, int b</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fdivaw-3680></A></VAR><BR>
<BLOCKQUOTE>
<P>Only available if either<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=ARC700</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-meA</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set. Generates:</P><PRE class=example>          divaw  <VAR>dest</VAR>, <VAR>a</VAR>, <VAR>b</VAR>
</PRE>
<P>where the value in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dest</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be the result returned from the built-in.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_flag</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int a</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fflag-3681></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates</P><PRE class=example>          flag  <VAR>a</VAR>
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: unsigned int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_lr</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int auxr</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005flr-3682></A></VAR><BR>
<BLOCKQUOTE>
<P>The operand,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>auxv</VAR>, is the address of an auxiliary register and must be a compile time constant. Generates:</P><PRE class=example>          lr  <VAR>dest</VAR>, [<VAR>auxr</VAR>]
</PRE>
<P>Where the value in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dest</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be the result returned from the built-in.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_mul64</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int a, int b</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fmul64-3683></A></VAR><BR>
<BLOCKQUOTE>
<P>Only available with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mmul64</SPAN></SAMP>. Generates:</P><PRE class=example>          mul64  <VAR>a</VAR>, <VAR>b</VAR>
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_mulu64</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int a, unsigned int b</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fmulu64-3684></A></VAR><BR>
<BLOCKQUOTE>
<P>Only available with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mmul64</SPAN></SAMP>. Generates:</P><PRE class=example>          mulu64  <VAR>a</VAR>, <VAR>b</VAR>
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_nop</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fnop-3685></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates:</P><PRE class=example>          nop
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_norm</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int src</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fnorm-3686></A></VAR><BR>
<BLOCKQUOTE>
<P>Only valid if the &#8216;<SAMP><SPAN class=samp>norm</SPAN></SAMP>&#8217; instruction is available through the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mnorm</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option or by default with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=ARC700</SPAN></SAMP>. Generates:</P><PRE class=example>          norm  <VAR>dest</VAR>, <VAR>src</VAR>
</PRE>
<P>Where the value in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dest</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be the result returned from the built-in.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: short int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_normw</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>short int src</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fnormw-3687></A></VAR><BR>
<BLOCKQUOTE>
<P>Only valid if the &#8216;<SAMP><SPAN class=samp>normw</SPAN></SAMP>&#8217; instruction is available through the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mnorm</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option or by default with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=ARC700</SPAN></SAMP>. Generates:</P><PRE class=example>          normw  <VAR>dest</VAR>, <VAR>src</VAR>
</PRE>
<P>Where the value in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dest</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be the result returned from the built-in.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_rtie</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005frtie-3688></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates:</P><PRE class=example>          rtie
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_sleep</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int a<A name=index-g_t_005f_005fbuiltin_005farc_005fsleep-3689></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates:</P><PRE class=example>          sleep  <VAR>a</VAR>
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_sr</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int auxr, unsigned int val</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fsr-3690></A></VAR><BR>
<BLOCKQUOTE>
<P>The first argument,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>auxv</VAR>, is the address of an auxiliary register, the second argument,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>val</VAR>, is a compile time constant to be written to the register. Generates:</P><PRE class=example>          sr  <VAR>auxr</VAR>, [<VAR>val</VAR>]
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_swap</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int src</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fswap-3691></A></VAR><BR>
<BLOCKQUOTE>
<P>Only valid with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mswap</SPAN></SAMP>. Generates:</P><PRE class=example>          swap  <VAR>dest</VAR>, <VAR>src</VAR>
</PRE>
<P>Where the value in<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>dest</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be the result returned from the built-in.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_swi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fswi-3692></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates:</P><PRE class=example>          swi
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_sync</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005fsync-3693></A></VAR><BR>
<BLOCKQUOTE>
<P>Only available with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=ARC700</SPAN></SAMP>. Generates:</P><PRE class=example>          sync
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_trap_s</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>unsigned int c</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005ftrap_005fs-3694></A></VAR><BR>
<BLOCKQUOTE>
<P>Only available with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=ARC700</SPAN></SAMP>. Generates:</P><PRE class=example>          trap_s  <VAR>c</VAR>
</PRE></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_arc_unimp_s</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005farc_005funimp_005fs-3695></A></VAR><BR>
<BLOCKQUOTE>
<P>Only available with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=ARC700</SPAN></SAMP>. Generates:</P><PRE class=example>          unimp_s
</PRE></BLOCKQUOTE></DIV>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The instructions generated by the following builtins are not considered as candidates for scheduling. They are not moved around by the compiler during scheduling, and thus can be expected to appear where they are put in the C code:</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=example>     __builtin_arc_brk()
     __builtin_arc_core_read()
     __builtin_arc_core_write()
     __builtin_arc_flag()
     __builtin_arc_lr()
     __builtin_arc_sleep()
     __builtin_arc_sr()
     __builtin_arc_swi()</PRE>