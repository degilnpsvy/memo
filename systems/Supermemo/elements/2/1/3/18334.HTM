<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>2.1 C language</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-C-standard-21></A><A name=index-C-standards-22></A><A name=index-ANSI-C-standard-23></A><A name=index-ANSI-C-24></A><A name=index-ANSI-C89-25></A><A name=index-C89-26></A><A name=index-ANSI-X3_002e159-1989-27></A><A name=index-X3_002e159-1989-28></A><A name=index-ISO-C-standard-29></A><A name=index-ISO-C-30></A><A name=index-ISO-C90-31></A><A name=index-ISO_002fIEC-9899-32></A><A name=index-ISO-9899-33></A><A name=index-C90-34></A><A name=index-ISO-C94-35></A><A name=index-C94-36></A><A name=index-ISO-C95-37></A><A name=index-C95-38></A><A name=index-ISO-C99-39></A><A name=index-C99-40></A><A name=index-ISO-C9X-41></A><A name=index-C9X-42></A><A name=index-ISO-C11-43></A><A name=index-C11-44></A><A name=index-ISO-C1X-45></A><A name=index-C1X-46></A><A name=index-Technical-Corrigenda-47></A><A name=index-TC1-48></A><A name=index-Technical-Corrigendum-1-49></A><A name=index-TC2-50></A><A name=index-Technical-Corrigendum-2-51></A><A name=index-TC3-52></A><A name=index-Technical-Corrigendum-3-53></A><A name=index-AMD1-54></A><A name=index-freestanding-implementation-55></A><A name=index-freestanding-environment-56></A><A name=index-hosted-implementation-57></A><A name=index-hosted-environment-58></A><A name=index-g_t_005f_005fSTDC_005fHOSTED_005f_005f-59></A>GCC supports three versions of the C standard, although support for the most recent version is not yet complete.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-std-60></A><A name=index-ansi-61></A><A name=index-pedantic-62></A><A name=index-pedantic-errors-63></A>The original ANSI C standard (X3.159-1989) was ratified in 1989 and published in 1990. This standard was ratified as an ISO standard (ISO/IEC 9899:1990) later in 1990. There were no technical differences between these publications, although the sections of the ANSI standard were renumbered and became clauses in the ISO standard. This standard, in both its forms, is commonly known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C89</DFN>, or occasionally as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C90</DFN>, from the dates of ratification. The ANSI standard, but not the ISO standard, also came with a Rationale document. To select this standard in GCC, use one of the options<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-ansi</SPAN></SAMP>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=c90</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=iso9899:1990</SPAN></SAMP>; to obtain all the diagnostics required by the standard, you should also specify<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-pedantic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-pedantic-errors</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>if you want them to be errors rather than warnings). See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/C-Dialect-Options.html#C-Dialect-Options">Options Controlling C Dialect</A>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Errors in the 1990 ISO C standard were corrected in two Technical Corrigenda published in 1994 and 1996. GCC does not support the uncorrected version.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">An amendment to the 1990 standard was published in 1995. This amendment added digraphs and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__STDC_VERSION__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the language, but otherwise concerned the library. This amendment is commonly known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>AMD1</DFN>; the amended standard is sometimes known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C94</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C95</DFN>. To select this standard in GCC, use the option<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=iso9899:199409</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(with, as for other standard versions,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-pedantic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to receive all required diagnostics).</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">A new edition of the ISO C standard was published in 1999 as ISO/IEC 9899:1999, and is commonly known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C99</DFN>. GCC has substantially complete support for this standard version; see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="http://gcc.gnu.org/c99status.html">http://gcc.gnu.org/c99status.html</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for details. To select this standard, use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=c99</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=iso9899:1999</SPAN></SAMP>. (While in development, drafts of this standard version were referred to as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C9X</DFN>.)</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Errors in the 1999 ISO C standard were corrected in three Technical Corrigenda published in 2001, 2004 and 2007. GCC does not support the uncorrected version.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">A fourth version of the C standard, known as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C11</DFN>, was published in 2011 as ISO/IEC 9899:2011. GCC has substantially complete support for this standard, enabled with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=c11</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=iso9899:2011</SPAN></SAMP>. (While in development, drafts of this standard version were referred to as<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>C1X</DFN>.)</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">By default, GCC provides some extensions to the C language that on rare occasions conflict with the C standard. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/C-Extensions.html#C-Extensions">Extensions to the C Language Family</A>. Use of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>options listed above will disable these extensions where they conflict with the C standard version selected. You may also select an extended version of the C language explicitly with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=gnu90</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(for C90 with GNU extensions),<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=gnu99</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(for C99 with GNU extensions) or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=gnu11</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>(for C11 with GNU extensions). The default, if no C language dialect options are given, is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=gnu90</SPAN></SAMP>; this is intended to change to<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-std=gnu11</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>in some future release. Some features that are part of the C99 standard are accepted as extensions in C90 mode, and some features that are part of the C11 standard are accepted as extensions in C90 and C99 modes.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The ISO C standard defines (in clause 4) two classes of conforming implementation. A<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>conforming hosted implementation</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>supports the whole standard including all the library facilities; a<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>conforming freestanding implementation</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is only required to provide certain library facilities: those in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;float.h&gt;</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;limits.h&gt;</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;stdarg.h&gt;</CODE>, and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;stddef.h&gt;</CODE>; since AMD1, also those in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;iso646.h&gt;</CODE>; since C99, also those in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;stdbool.h&gt;</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;stdint.h&gt;</CODE>; and since C11, also those in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;stdalign.h&gt;</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>&lt;stdnoreturn.h&gt;</CODE>. In addition, complex types, added in C99, are not required for freestanding implementations. The standard also defines two environments for programs, a<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>freestanding environment</DFN>, required of all implementations and which may not have library facilities beyond those required of freestanding implementations, where the handling of program startup and termination are implementation-defined, and a<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>hosted environment</DFN>, which is not required, in which all the library facilities are provided and startup is through a function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>int main (void)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>int main (int, char *[])</CODE>. An OS kernel would be a freestanding environment; a program using the facilities of an operating system would normally be in a hosted implementation.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-ffreestanding-64></A>GCC aims towards being usable as a conforming freestanding implementation, or as the compiler for a conforming hosted implementation. By default, it will act as the compiler for a hosted implementation, defining<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__STDC_HOSTED__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>1</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and presuming that when the names of ISO C functions are used, they have the semantics defined in the standard. To make it act as a conforming freestanding implementation for a freestanding environment, use the option<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-ffreestanding</SPAN></SAMP>; it will then define<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__STDC_HOSTED__</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and not make assumptions about the meanings of function names from the standard library, with exceptions noted below. To build an OS kernel, you may well still need to make your own arrangements for linking and startup. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/C-Dialect-Options.html#C-Dialect-Options">Options Controlling C Dialect</A>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">GCC does not provide the library facilities required only of hosted implementations, nor yet all the facilities required by C99 of freestanding implementations on all platforms; to use the facilities of a hosted environment, you will need to find them elsewhere (for example, in the GNU C library). See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Standard-Libraries.html#Standard-Libraries">Standard Libraries</A>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Most of the compiler support routines used by GCC are present in<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=file>libgcc</SPAN></SAMP>, but there are a few exceptions. GCC requires the freestanding environment provide<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>memcpy</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>memmove</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>memset</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>memcmp</CODE>. Finally, if<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__builtin_trap</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used, and the target does not implement the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>trap</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pattern, then GCC will emit a call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>abort</CODE>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">For references to Technical Corrigenda, Rationale documents and information concerning the history of C that is available online, see<A href="http://gcc.gnu.org/readings.html">http://gcc.gnu.org/readings.html</A>