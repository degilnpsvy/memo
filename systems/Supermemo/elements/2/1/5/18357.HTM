<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.1 AArch64 Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-AArch64-Options-1132></A>These options are defined for AArch64 implementations:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-mabi=</CODE><VAR>name</VAR></DT>
<DD><A name=index-mabi-1133></A>Generate code for the specified data model. Permissible values are &#8216;<SAMP><SPAN class=samp>ilp32</SPAN></SAMP>&#8217; for SysV-like data model where int, long int and pointer are 32-bit, and &#8216;<SAMP><SPAN class=samp>lp64</SPAN></SAMP>&#8217; for SysV-like data model where int is 32-bit, but long int and pointer are 64-bit.
<P>The default depends on the specific target configuration. Note that the LP64 and ILP32 ABIs are not link-compatible; you must compile your entire program with the same ABI, and link with a compatible set of libraries.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mbig-endian</CODE></DT>
<DD><A name=index-mbig-endian-1134></A>Generate big-endian code. This is the default when GCC is configured for an &#8216;<SAMP><SPAN class=samp>aarch64_be-*-*</SPAN></SAMP>&#8217; target.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mgeneral-regs-only</CODE></DT>
<DD><A name=index-mgeneral-regs-only-1135></A>Generate code which uses only the general registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mlittle-endian</CODE></DT>
<DD><A name=index-mlittle-endian-1136></A>Generate little-endian code. This is the default when GCC is configured for an &#8216;<SAMP><SPAN class=samp>aarch64-*-*</SPAN></SAMP>&#8217; but not an &#8216;<SAMP><SPAN class=samp>aarch64_be-*-*</SPAN></SAMP>&#8217; target.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcmodel=tiny</CODE></DT>
<DD><A name=index-mcmodel_003dtiny-1137></A>Generate code for the tiny code model. The program and its statically defined symbols must be within 1GB of each other. Pointers are 64 bits. Programs can be statically or dynamically linked. This model is not fully implemented and mostly treated as &#8216;<SAMP><SPAN class=samp>small</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcmodel=small</CODE></DT>
<DD><A name=index-mcmodel_003dsmall-1138></A>Generate code for the small code model. The program and its statically defined symbols must be within 4GB of each other. Pointers are 64 bits. Programs can be statically or dynamically linked. This is the default code model.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcmodel=large</CODE></DT>
<DD><A name=index-mcmodel_003dlarge-1139></A>Generate code for the large code model. This makes no assumptions about addresses and sizes of sections. Pointers are 64 bits. Programs can be statically linked only.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mstrict-align</CODE></DT>
<DD><A name=index-mstrict-align-1140></A>Do not assume that unaligned memory references will be handled by the system.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-momit-leaf-frame-pointer</CODE></DT>
<DT><CODE>-mno-omit-leaf-frame-pointer</CODE></DT>
<DD><A name=index-momit-leaf-frame-pointer-1141></A><A name=index-mno-omit-leaf-frame-pointer-1142></A>Omit or keep the frame pointer in leaf functions. The former behaviour is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtls-dialect=desc</CODE></DT>
<DD><A name=index-mtls-dialect_003ddesc-1143></A>Use TLS descriptors as the thread-local storage mechanism for dynamic accesses of TLS variables. This is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtls-dialect=traditional</CODE></DT>
<DD><A name=index-mtls-dialect_003dtraditional-1144></A>Use traditional TLS as the thread-local storage mechanism for dynamic accesses of TLS variables.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-march=</CODE><VAR>name</VAR></DT>
<DD><A name=index-march-1145></A>Specify the name of the target architecture, optionally suffixed by one or more feature modifiers. This option has the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march=</SPAN><VAR>arch</VAR><SPAN class=option>{+[no]</SPAN><VAR>feature</VAR><SPAN class=option>}*</SPAN></SAMP>, where the only permissible value for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>arch</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is &#8216;<SAMP><SPAN class=samp>armv8-a</SPAN></SAMP>&#8217;. The permissible values for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>feature</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are documented in the sub-section below.
<P>Where conflicting feature modifiers are specified, the right-most feature is used.</P>
<P>GCC uses this name to determine what kind of instructions it can emit when generating assembly code.</P>
<P>Where<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is specified without either of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mtune</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>also being specified, the code will be tuned to perform well across a range of target processors implementing the target architecture.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mtune=</CODE><VAR>name</VAR></DT>
<DD><A name=index-mtune-1146></A>Specify the name of the target processor for which GCC should tune the performance of the code. Permissible values for this option are: &#8216;<SAMP><SPAN class=samp>generic</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>cortex-a53</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>cortex-a57</SPAN></SAMP>&#8217;.
<P>Additionally, this option can specify that GCC should tune the performance of the code for a big.LITTLE system. The only permissible value is &#8216;<SAMP><SPAN class=samp>cortex-a57.cortex-a53</SPAN></SAMP>&#8217;.</P>
<P>Where none of<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mtune=</SPAN></SAMP>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march=</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>are specified, the code will be tuned to perform well across a range of target processors.</P>
<P>This option cannot be suffixed by feature modifiers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mcpu=</CODE><VAR>name</VAR></DT>
<DD><A name=index-mcpu-1147></A>Specify the name of the target processor, optionally suffixed by one or more feature modifiers. This option has the form<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=</SPAN><VAR>cpu</VAR><SPAN class=option>{+[no]</SPAN><VAR>feature</VAR><SPAN class=option>}*</SPAN></SAMP>, where the permissible values for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>cpu</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are the same as those available for<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mtune</SPAN></SAMP>.
<P>The permissible values for<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>feature</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are documented in the sub-section below.</P>
<P>Where conflicting feature modifiers are specified, the right-most feature is used.</P>
<P>GCC uses this name to determine what kind of instructions it can emit when generating assembly code (as if by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march</SPAN></SAMP>) and to determine the target processor for which to tune for performance (as if by<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mtune</SPAN></SAMP>). Where this option is used in conjunction with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mtune</SPAN></SAMP>, those options take precedence over the appropriate part of this option.</P></DD></DL>
<H5 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>3.17.1.1<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>feature modifiers</H5>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-g_t_0040option_007b-march_007d-feature-modifiers-1148></A><A name=index-g_t_0040option_007b-mcpu_007d-feature-modifiers-1149></A>Feature modifiers used with<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be one the following:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT>&#8216;<SAMP><SPAN class=samp>crc</SPAN></SAMP>&#8217;</DT>
<DD>Enable CRC extension.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT>&#8216;<SAMP><SPAN class=samp>crypto</SPAN></SAMP>&#8217;</DT>
<DD>Enable Crypto extension. This implies Advanced SIMD is enabled.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT>&#8216;<SAMP><SPAN class=samp>fp</SPAN></SAMP>&#8217;</DT>
<DD>Enable floating-point instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT>&#8216;<SAMP><SPAN class=samp>simd</SPAN></SAMP>&#8217;</DT>
<DD>Enable Advanced SIMD instructions. This implies floating-point instructions are enabled. This is the default for all current possible values for options<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-march</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mcpu=</SPAN></SAMP>.</DD></DL>