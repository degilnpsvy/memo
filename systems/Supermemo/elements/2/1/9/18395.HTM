<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.39 RX Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-RX-Options-2293></A>These command-line options are defined for RX targets:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-m64bit-doubles</CODE></DT>
<DT><CODE>-m32bit-doubles</CODE></DT>
<DD><A name=index-m64bit-doubles-2294></A><A name=index-m32bit-doubles-2295></A>Make the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>double</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>data type be 64 bits (<SAMP><SPAN class=option>-m64bit-doubles</SPAN></SAMP>) or 32 bits (<SAMP><SPAN class=option>-m32bit-doubles</SPAN></SAMP>) in size. The default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m32bit-doubles</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>Note</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>RX floating-point hardware only works on 32-bit values, which is why the default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m32bit-doubles</SPAN></SAMP>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-fpu</CODE></DT>
<DT><CODE>-nofpu</CODE></DT>
<DD><A name=index-fpu-2296></A><A name=index-nofpu-2297></A>Enables (<SAMP><SPAN class=option>-fpu</SPAN></SAMP>) or disables (<SAMP><SPAN class=option>-nofpu</SPAN></SAMP>) the use of RX floating-point hardware. The default is enabled for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX600</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>series and disabled for the<VAR>RX200</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>series.
<P>Floating-point instructions are only generated for 32-bit floating-point values, however, so the FPU hardware is not used for doubles if the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m64bit-doubles</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is used.</P>
<P><EM>Note</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>If the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fpu</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is enabled then<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-funsafe-math-optimizations</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is also enabled automatically. This is because the RX FPU instructions are themselves unsafe.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mcpu=</CODE><VAR>name</VAR></DT>
<DD><A name=index-g_t-mcpu-2298></A>Selects the type of RX CPU to be targeted. Currently three types are supported, the generic<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX600</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX200</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>series hardware and the specific<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX610</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>CPU. The default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX600</VAR>.
<P>The only difference between<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX600</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX610</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is that the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX610</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not support the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>MVTIPL</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction.</P>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>RX200</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>series does not have a hardware floating-point unit and so<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-nofpu</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is enabled by default when this type is selected.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mbig-endian-data</CODE></DT>
<DT><CODE>-mlittle-endian-data</CODE></DT>
<DD><A name=index-mbig-endian-data-2299></A><A name=index-mlittle-endian-data-2300></A>Store data (but not code) in the big-endian format. The default is<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mlittle-endian-data</SPAN></SAMP>, i.e. to store data in the little-endian format.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msmall-data-limit=</CODE><VAR>N</VAR></DT>
<DD><A name=index-msmall-data-limit-2301></A>Specifies the maximum size in bytes of global and static variables which can be placed into the small data area. Using the small data area can lead to smaller and faster code, but the size of area is limited and it is up to the programmer to ensure that the area does not overflow. Also when the small data area is used one of the RX's registers (usually<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE>) is reserved for use pointing to this area, so it is no longer available for use by the compiler. This could result in slower and/or larger code if variables are pushed onto the stack instead of being held in this register.
<P>Note, common variables (variables that have not been initialized) and constants are not placed into the small data area as they are assigned to other sections in the output executable.</P>
<P>The default value is zero, which disables this feature. Note, this feature is not enabled by default with higher optimization levels (<SAMP><SPAN class=option>-O2</SPAN></SAMP>etc) because of the potentially detrimental effects of reserving a register. It is up to the programmer to experiment and discover whether this feature is of benefit to their program. See the description of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mpid</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option for a description of how the actual register to hold the small data area pointer is chosen.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-msim</CODE></DT>
<DT><CODE>-mno-sim</CODE></DT>
<DD><A name=index-msim-2302></A><A name=index-mno-sim-2303></A>Use the simulator runtime. The default is to use the libgloss board-specific runtime.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mas100-syntax</CODE></DT>
<DT><CODE>-mno-as100-syntax</CODE></DT>
<DD><A name=index-mas100-syntax-2304></A><A name=index-mno-as100-syntax-2305></A>When generating assembler output use a syntax that is compatible with Renesas's AS100 assembler. This syntax can also be handled by the GAS assembler, but it has some restrictions so it is not generated by default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mmax-constant-size=</CODE><VAR>N</VAR></DT>
<DD><A name=index-mmax-constant-size-2306></A>Specifies the maximum size, in bytes, of a constant that can be used as an operand in a RX instruction. Although the RX instruction set does allow constants of up to 4 bytes in length to be used in instructions, a longer value equates to a longer instruction. Thus in some circumstances it can be beneficial to restrict the size of constants that are used in instructions. Constants that are too big are instead placed into a constant pool and referenced via register indirection.
<P>The value<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>N</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be between 0 and 4. A value of 0 (the default) or 4 means that constants of any size are allowed.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mrelax</CODE></DT>
<DD><A name=index-mrelax-2307></A>Enable linker relaxation. Linker relaxation is a process whereby the linker attempts to reduce the size of a program by finding shorter versions of various instructions. Disabled by default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mint-register=</CODE><VAR>N</VAR></DT>
<DD><A name=index-mint-register-2308></A>Specify the number of registers to reserve for fast interrupt handler functions. The value<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>N</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can be between 0 and 4. A value of 1 means that register<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is reserved for the exclusive use of fast interrupt handlers. A value of 2 reserves<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r12</CODE>. A value of 3 reserves<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE>,<CODE>r12</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r11</CODE>, and a value of 4 reserves<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>through<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r10</CODE>. A value of 0, the default, does not reserve any registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msave-acc-in-interrupts</CODE></DT>
<DD><A name=index-msave-acc-in-interrupts-2309></A>Specifies that interrupt handler functions should preserve the accumulator register. This is only necessary if normal code might use the accumulator register, for example because it performs 64-bit multiplications. The default is to ignore the accumulator as this makes the interrupt handlers faster.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mpid</CODE></DT>
<DT><CODE>-mno-pid</CODE></DT>
<DD><A name=index-mpid-2310></A><A name=index-mno-pid-2311></A>Enables the generation of position independent data. When enabled any access to constant data is done via an offset from a base address held in a register. This allows the location of constant data to be determined at run time without requiring the executable to be relocated, which is a benefit to embedded applications with tight memory constraints. Data that can be modified is not affected by this option.
<P>Note, using this feature reserves a register, usually<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE>, for the constant data base address. This can result in slower and/or larger code, especially in complicated functions.</P>
<P>The actual register chosen to hold the constant data base address depends upon whether the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-msmall-data-limit</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and/or the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mint-register</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command-line options are enabled. Starting with register<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and proceeding downwards, registers are allocated first to satisfy the requirements of<SAMP><SPAN class=option>-mint-register</SPAN></SAMP>, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mpid</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and finally<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-msmall-data-limit</SPAN></SAMP>. Thus it is possible for the small data area register to be<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r8</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>if both<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mint-register=4</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mpid</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>are specified on the command line.</P>
<P>By default this feature is not enabled. The default can be restored via the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mno-pid</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command-line option.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mno-warn-multiple-fast-interrupts</CODE></DT>
<DT><CODE>-mwarn-multiple-fast-interrupts</CODE></DT>
<DD><A name=index-mno-warn-multiple-fast-interrupts-2312></A><A name=index-mwarn-multiple-fast-interrupts-2313></A>Prevents GCC from issuing a warning message if it finds more than one fast interrupt handler when it is compiling a file. The default is to issue a warning for each extra fast interrupt handler found, as the RX only supports one such interrupt.</DD></DL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><EM>Note:</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>The generic GCC command-line option<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-ffixed-</SPAN><VAR>reg</VAR></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>has special significance to the RX port when used with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>interrupt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function attribute. This attribute indicates a function intended to process fast interrupts. GCC ensures that it only uses the registers<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r10</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r11</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r12</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and/or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>r13</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and only provided that the normal use of the corresponding registers have been restricted via the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-ffixed-</SPAN><VAR>reg</VAR></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mint-register</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>command-line options.