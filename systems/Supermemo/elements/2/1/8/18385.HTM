<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.29 MN10300 Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-MN10300-options-2020></A>These<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-m</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>options are defined for Matsushita MN10300 architectures:</P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-mmult-bug</CODE></DT>
<DD><A name=index-mmult-bug-2021></A>Generate code to avoid bugs in the multiply instructions for the MN10300 processors. This is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-mult-bug</CODE></DT>
<DD><A name=index-mno-mult-bug-2022></A>Do not generate code to avoid bugs in the multiply instructions for the MN10300 processors.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mam33</CODE></DT>
<DD><A name=index-mam33-2023></A>Generate code using features specific to the AM33 processor.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-am33</CODE></DT>
<DD><A name=index-mno-am33-2024></A>Do not generate code using features specific to the AM33 processor. This is the default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mam33-2</CODE></DT>
<DD><A name=index-mam33-2-2025></A>Generate code using features specific to the AM33/2.0 processor.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mam34</CODE></DT>
<DD><A name=index-mam34-2026></A>Generate code using features specific to the AM34 processor.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtune=</CODE><VAR>cpu-type</VAR></DT>
<DD><A name=index-mtune-2027></A>Use the timing characteristics of the indicated CPU type when scheduling instructions. This does not change the targeted processor type. The CPU type must be one of &#8216;<SAMP><SPAN class=samp>mn10300</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>am33</SPAN></SAMP>&#8217;, &#8216;<SAMP><SPAN class=samp>am33-2</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>am34</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mreturn-pointer-on-d0</CODE></DT>
<DD><A name=index-mreturn-pointer-on-d0-2028></A>When generating a function that returns a pointer, return the pointer in both<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>a0</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>d0</CODE>. Otherwise, the pointer is returned only in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>a0</CODE>, and attempts to call such functions without a prototype result in errors. Note that this option is on by default; use<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-mno-return-pointer-on-d0</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>to disable it.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-crt0</CODE></DT>
<DD><A name=index-mno-crt0-2029></A>Do not link in the C run-time initialization object file.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mrelax</CODE></DT>
<DD><A name=index-mrelax-2030></A>Indicate to the linker that it should perform a relaxation optimization pass to shorten branches, calls and absolute memory addresses. This option only has an effect when used on the command line for the final link step.
<P>This option makes symbolic debugging impossible.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></P></DD>
<DT><CODE>-mliw</CODE></DT>
<DD><A name=index-mliw-2031></A>Allow the compiler to generate<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>Long Instruction Word</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions if the target is the &#8216;<SAMP><SPAN class=samp>AM33</SPAN></SAMP>&#8217; or later. This is the default. This option defines the preprocessor macro &#8216;<SAMP><SPAN class=samp>__LIW__</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mnoliw</CODE></DT>
<DD><A name=index-mnoliw-2032></A>Do not allow the compiler to generate<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>Long Instruction Word</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions. This option defines the preprocessor macro &#8216;<SAMP><SPAN class=samp>__NO_LIW__</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msetlb</CODE></DT>
<DD><A name=index-msetlb-2033></A>Allow the compiler to generate the<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>SETLB</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>Lcc</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions if the target is the &#8216;<SAMP><SPAN class=samp>AM33</SPAN></SAMP>&#8217; or later. This is the default. This option defines the preprocessor macro &#8216;<SAMP><SPAN class=samp>__SETLB__</SPAN></SAMP>&#8217;.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mnosetlb</CODE></DT>
<DD><A name=index-mnosetlb-2034></A>Do not allow the compiler to generate<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>SETLB</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>Lcc</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions. This option defines the preprocessor macro &#8216;<SAMP><SPAN class=samp>__NO_SETLB__</SPAN></SAMP>&#8217;.</DD></DL>