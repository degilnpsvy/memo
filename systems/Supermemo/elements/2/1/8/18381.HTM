<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>3.17.25 MeP Options</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-MeP-options-1822></A></P>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>-mabsdiff</CODE></DT>
<DD><A name=index-mabsdiff-1823></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>abs</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction, which is the absolute difference between two registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mall-opts</CODE></DT>
<DD><A name=index-mall-opts-1824></A>Enables all the optional instructions&#8212;average, multiply, divide, bit operations, leading zero, absolute difference, min/max, clip, and saturation.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-maverage</CODE></DT>
<DD><A name=index-maverage-1825></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>ave</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction, which computes the average of two registers.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mbased=</CODE><VAR>n</VAR></DT>
<DD><A name=index-mbased_003d-1826></A>Variables of size<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes or smaller are placed in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.based</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section by default. Based variables use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>$tp</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>register as a base register, and there is a 128-byte limit to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.based</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mbitops</CODE></DT>
<DD><A name=index-mbitops-1827></A>Enables the bit operation instructions&#8212;bit test (<CODE>btstm</CODE>), set (<CODE>bsetm</CODE>), clear (<CODE>bclrm</CODE>), invert (<CODE>bnotm</CODE>), and test-and-set (<CODE>tas</CODE>).<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mc=</CODE><VAR>name</VAR></DT>
<DD><A name=index-mc_003d-1828></A>Selects which section constant data is placed in.<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>name</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>may be<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>tiny</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>near</CODE>, or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>far</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mclip</CODE></DT>
<DD><A name=index-mclip-1829></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>clip</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instruction. Note that<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-mclip</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is not useful unless you also provide<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-mminmax</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mconfig=</CODE><VAR>name</VAR></DT>
<DD><A name=index-mconfig_003d-1830></A>Selects one of the built-in core configurations. Each MeP chip has one or more modules in it; each module has a core CPU and a variety of coprocessors, optional instructions, and peripherals. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>MeP-Integrator</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>tool, not part of GCC, provides these configurations through this option; using this option is the same as using all the corresponding command-line options. The default configuration is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>default</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcop</CODE></DT>
<DD><A name=index-mcop-1831></A>Enables the coprocessor instructions. By default, this is a 32-bit coprocessor. Note that the coprocessor is normally enabled via the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-mconfig=</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>option.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcop32</CODE></DT>
<DD><A name=index-mcop32-1832></A>Enables the 32-bit coprocessor's instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mcop64</CODE></DT>
<DD><A name=index-mcop64-1833></A>Enables the 64-bit coprocessor's instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mivc2</CODE></DT>
<DD><A name=index-mivc2-1834></A>Enables IVC2 scheduling. IVC2 is a 64-bit VLIW coprocessor.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdc</CODE></DT>
<DD><A name=index-mdc-1835></A>Causes constant variables to be placed in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.near</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mdiv</CODE></DT>
<DD><A name=index-mdiv-1836></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>div</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>divu</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-meb</CODE></DT>
<DD><A name=index-meb-1837></A>Generate big-endian code.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mel</CODE></DT>
<DD><A name=index-mel-1838></A>Generate little-endian code.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mio-volatile</CODE></DT>
<DD><A name=index-mio-volatile-1839></A>Tells the compiler that any variable marked with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>io</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute is to be considered volatile.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-ml</CODE></DT>
<DD><A name=index-ml-1840></A>Causes variables to be assigned to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.far</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section by default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mleadz</CODE></DT>
<DD><A name=index-mleadz-1841></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>leadz</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(leading zero) instruction.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mm</CODE></DT>
<DD><A name=index-mm-1842></A>Causes variables to be assigned to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.near</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section by default.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mminmax</CODE></DT>
<DD><A name=index-mminmax-1843></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>min</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>max</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mmult</CODE></DT>
<DD><A name=index-mmult-1844></A>Enables the multiplication and multiply-accumulate instructions.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mno-opts</CODE></DT>
<DD><A name=index-mno-opts-1845></A>Disables all the optional instructions enabled by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>-mall-opts</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mrepeat</CODE></DT>
<DD><A name=index-mrepeat-1846></A>Enables the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>repeat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>erepeat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>instructions, used for low-overhead looping.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-ms</CODE></DT>
<DD><A name=index-ms-1847></A>Causes all variables to default to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.tiny</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section. Note that there is a 65536-byte limit to this section. Accesses to these variables use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>%gp</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>base register.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msatur</CODE></DT>
<DD><A name=index-msatur-1848></A>Enables the saturation instructions. Note that the compiler does not currently generate these itself, but this option is included for compatibility with other tools, like<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>as</CODE>.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msdram</CODE></DT>
<DD><A name=index-msdram-1849></A>Link the SDRAM-based runtime instead of the default ROM-based runtime.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msim</CODE></DT>
<DD><A name=index-msim-1850></A>Link the simulator run-time libraries.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-msimnovec</CODE></DT>
<DD><A name=index-msimnovec-1851></A>Link the simulator runtime libraries, excluding built-in support for reset and exception vectors and tables.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtf</CODE></DT>
<DD><A name=index-mtf-1852></A>Causes all functions to default to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.far</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section. Without this option, functions default to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.near</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section.<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></DD>
<DT><CODE>-mtiny=</CODE><VAR>n</VAR></DT>
<DD><A name=index-mtiny_003d-1853></A>Variables that are<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>n</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>bytes or smaller are allocated to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.tiny</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section. These variables use the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>$gp</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>base register. The default for this option is 4, but note that there's a 65536-byte limit to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.tiny</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>section.</DD></DL>