<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>4.8 Hints</H3>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><CITE>The extent to which suggestions made by using the<SPAN class=Apple-converted-space>&nbsp;</SPAN></CITE><CODE>register</CODE><CITE><SPAN class=Apple-converted-space>&nbsp;</SPAN>storage-class specifier are effective (C90 6.5.1, C99 and C11 6.7.1).</CITE>
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>register</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifier affects code generation only in these ways:</P>
<UL>
<LI>When used as part of the register variable extension, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Explicit-Reg-Vars.html#Explicit-Reg-Vars">Explicit Reg Vars</A>.</LI>
<LI>When<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-O0</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is in use, the compiler allocates distinct stack memory for all variables that do not have the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>register</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>storage-class specifier; if<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>register</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is specified, the variable may have a shorter lifespan than the code would indicate and may never be placed in memory.</LI>
<LI>On some rare x86 targets,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>setjmp</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>doesn't save the registers in all circumstances. In those cases, GCC doesn't allocate any variables in registers unless they are marked<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>register</CODE>.</LI></UL></LI>
<LI><CITE>The extent to which suggestions made by using the inline function specifier are effective (C99 and C11 6.7.4).</CITE>
<P>GCC will not inline any functions if the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fno-inline</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option is used or if<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-O0</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>is used. Otherwise, GCC may still be unable to inline a function for many reasons; the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-Winline</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option may be used to determine if a function has not been inlined and why not.</P></LI></UL>