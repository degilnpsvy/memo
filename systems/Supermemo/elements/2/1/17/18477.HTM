<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.36.1 AVR Variable Attributes</H4>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>progmem</CODE></DT>
<DD><A name=index-g_t_0040code_007bprogmem_007d-AVR-variable-attribute-3038></A>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>progmem</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute is used on the AVR to place read-only data in the non-volatile program memory (flash). The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>progmem</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute accomplishes this by putting respective variables into a section whose name starts with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>.progmem</CODE>.
<P>This attribute works similar to the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>section</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute but adds additional checking. Notice that just like the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>section</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>progmem</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>affects the location of the data but not how this data is accessed.</P>
<P>In order to read data located with the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>progmem</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute (inline) assembler must be used.</P><PRE style="FONT-SIZE: smaller" class=smallexample>          /* Use custom macros from <A href="http://nongnu.org/avr-libc/user-manual/">AVR-LibC</A> */
          #include &lt;avr/pgmspace.h&gt;
          
          /* Locate var in flash memory */
          const int var[2] PROGMEM = { 1, 2 };
          
          int read_var (int i)
          {
              /* Access var[] by accessor macro from avr/pgmspace.h */
              return (int) pgm_read_word (&amp; var[i]);
          }
</PRE>
<P>AVR is a Harvard architecture processor and data and read-only data normally resides in the data memory (RAM).</P>
<P>See also the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/AVR-Named-Address-Spaces.html#AVR-Named-Address-Spaces">AVR Named Address Spaces</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>section for an alternate way to locate and access data in flash memory.</P></DD></DL>