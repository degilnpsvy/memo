--- 3.7 Compilation flags 
<P></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; ccflags-y, asflags-y and ldflags-y<BR>&nbsp;These three flags apply only to the kbuild makefile in which they<BR>&nbsp;are assigned. They are used for all the normal cc, as and ld<BR>&nbsp;invocations happening during a recursive build.<BR>&nbsp;Note: Flags with the same behaviour were previously named:<BR>&nbsp;EXTRA_CFLAGS, EXTRA_AFLAGS and EXTRA_LDFLAGS.<BR>&nbsp;They are still supported but their usage is deprecated.</FONT></P>
<P><FONT class=extract>&nbsp;ccflags-y specifies options for compiling with $(CC).</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;# drivers/acpi/Makefile<BR>&nbsp;&nbsp;ccflags-y := -Os<BR>&nbsp;&nbsp;ccflags-$(CONFIG_ACPI_DEBUG) += -DACPI_DEBUG_OUTPUT</FONT></P>
<P><FONT class=extract>&nbsp;This variable is necessary because the top Makefile owns the<BR>&nbsp;variable $(KBUILD_CFLAGS) and uses it for compilation flags for the<BR>&nbsp;entire tree.</FONT></P>
<P><FONT class=extract>&nbsp;asflags-y specifies options for assembling with $(AS).</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;#arch/sparc/kernel/Makefile<BR>&nbsp;&nbsp;asflags-y := -ansi</FONT></P>
<P><FONT class=extract>&nbsp;ldflags-y specifies options for linking with $(LD).</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;#arch/cris/boot/compressed/Makefile<BR>&nbsp;&nbsp;ldflags-y += -T $(srctree)/$(src)/decompress_$(arch-y).lds</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; subdir-ccflags-y, subdir-asflags-y<BR>&nbsp;The two flags listed above are similar to ccflags-y and asflags-y.<BR>&nbsp;The difference is that the subdir- variants have effect for the kbuild<BR>&nbsp;file where they are present and all subdirectories.<BR>&nbsp;Options specified using subdir-* are added to the commandline before<BR>&nbsp;the options specified using the non-subdir variants.</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;subdir-ccflags-y := -Werror</FONT></P>
<P><FONT class=extract>&nbsp;&nbsp;&nbsp; CFLAGS_$@, AFLAGS_$@</FONT></P>
<P><FONT class=extract>&nbsp;CFLAGS_$@ and AFLAGS_$@ only apply to commands in current<BR>&nbsp;kbuild makefile.</FONT></P>
<P><FONT class=extract>&nbsp;$(CFLAGS_$@) specifies per-file options for $(CC).&nbsp; The $@<BR>&nbsp;part has a literal value which specifies the file that it is for.</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;# drivers/scsi/Makefile<BR>&nbsp;&nbsp;CFLAGS_aha152x.o =&nbsp;&nbsp; -DAHA152X_STAT -DAUTOCONF<BR>&nbsp;&nbsp;CFLAGS_gdth.o&nbsp;&nbsp;&nbsp; = # -DDEBUG_GDTH=2 -D__SERIAL__ -D__COM2__ \<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -DGDTH_STATISTICS</FONT></P>
<P><FONT class=extract>&nbsp;These two lines specify compilation flags for aha152x.o and gdth.o.</FONT></P>
<P><FONT class=extract>&nbsp;$(AFLAGS_$@) is a similar feature for source files in assembly<BR>&nbsp;languages.</FONT></P>
<P><FONT class=extract>&nbsp;Example:<BR>&nbsp;&nbsp;# arch/arm/kernel/Makefile<BR>&nbsp;&nbsp;AFLAGS_head.o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := -DTEXT_OFFSET=$(TEXT_OFFSET)<BR>&nbsp;&nbsp;AFLAGS_crunch-bits.o := -Wa,-mcpu=ep9312<BR>&nbsp;&nbsp;AFLAGS_iwmmxt.o&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; := -Wa,-mcpu=iwmmxt</FONT>