--- 3.10 Special Rules
<P></P>
<P>&nbsp;Special rules are used when the kbuild infrastructure does<BR>&nbsp;not provide the required support. A typical example is<BR>&nbsp;header files generated during the build process.<BR>&nbsp;Another example are the architecture-specific Makefiles which<BR>&nbsp;need special rules to prepare boot images etc.</P>
<P>&nbsp;Special rules are written as normal Make rules.<BR>&nbsp;Kbuild is not executing in the directory where the Makefile is<BR>&nbsp;located, so all special rules shall provide a relative<BR>&nbsp;path to prerequisite files and target files.</P>
<P>&nbsp;Two variables are used when defining special rules:</P>
<P>&nbsp;&nbsp;&nbsp; $(src)<BR>&nbsp;$(src) is a relative path which points to the directory<BR>&nbsp;where the Makefile is located. Always use $(src) when<BR>&nbsp;referring to files located in the src tree.</P>
<P>&nbsp;&nbsp;&nbsp; $(obj)<BR>&nbsp;$(obj) is a relative path which points to the directory<BR>&nbsp;where the target is saved. Always use $(obj) when<BR>&nbsp;referring to generated files.</P>
<P>&nbsp;Example:<BR>&nbsp;&nbsp;#drivers/scsi/Makefile<BR>&nbsp;&nbsp;$(obj)/53c8xx_d.h: $(src)/53c7,8xx.scr $(src)/script_asm.pl<BR>&nbsp;&nbsp;&nbsp;$(CPP) -DCHIP=810 - &lt; $&lt; | ... $(src)/script_asm.pl</P>
<P>&nbsp;This is a special rule, following the normal syntax<BR>&nbsp;required by make.<BR>&nbsp;The target file depends on two prerequisite files. References<BR>&nbsp;to the target file are prefixed with $(obj), references<BR>&nbsp;to prerequisites are referenced with $(src) (because they are not<BR>&nbsp;generated files).</P>
<P>&nbsp;&nbsp;&nbsp; $(kecho)<BR>&nbsp;echoing information to user in a rule is often a good practice<BR>&nbsp;but when execution "make -s" one does not expect to see any output<BR>&nbsp;except for warnings/errors.<BR>&nbsp;To support this kbuild define $(kecho) which will echo out the<BR>&nbsp;text following $(kecho) to stdout except if "make -s" is used.</P>
<P>&nbsp;Example:<BR>&nbsp;&nbsp;#arch/blackfin/boot/Makefile<BR>&nbsp;&nbsp;$(obj)/vmImage: $(obj)/vmlinux.gz<BR>&nbsp;&nbsp;&nbsp;$(call if_changed,uimage)<BR>&nbsp;&nbsp;&nbsp;@$(kecho) 'Kernel: $@ is ready'