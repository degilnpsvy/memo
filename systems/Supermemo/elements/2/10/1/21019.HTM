--- 6.3 Symbols From Another External Module 
<P></P>
<P>&nbsp;Sometimes, an external module uses exported symbols from<BR>&nbsp;another external module. kbuild needs to have full knowledge of<BR>&nbsp;all symbols to avoid spitting out warnings about undefined<BR>&nbsp;symbols. Three solutions exist for this situation.</P>
<P>&nbsp;NOTE: The method with a top-level kbuild file is recommended<BR>&nbsp;but may be impractical in certain situations.</P>
<P>&nbsp;Use a top-level kbuild file<BR>&nbsp;&nbsp;If you have two modules, foo.ko and bar.ko, where<BR>&nbsp;&nbsp;foo.ko needs symbols from bar.ko, you can use a<BR>&nbsp;&nbsp;common top-level kbuild file so both modules are<BR>&nbsp;&nbsp;compiled in the same build. Consider the following<BR>&nbsp;&nbsp;directory layout:</P>
<P>&nbsp;&nbsp;./foo/ &lt;= contains foo.ko<BR>&nbsp;&nbsp;./bar/ &lt;= contains bar.ko</P>
<P>&nbsp;&nbsp;The top-level kbuild file would then look like:</P>
<P>&nbsp;&nbsp;#./Kbuild (or ./Makefile):<BR>&nbsp;&nbsp;&nbsp;obj-y := foo/ bar/</P>
<P>&nbsp;&nbsp;And executing</P>
<P>&nbsp;&nbsp;&nbsp;$ make -C $KDIR M=$PWD</P>
<P>&nbsp;&nbsp;will then do the expected and compile both modules with<BR>&nbsp;&nbsp;full knowledge of symbols from either module.</P>
<P>&nbsp;Use an extra Module.symvers file<BR>&nbsp;&nbsp;When an external module is built, a Module.symvers file<BR>&nbsp;&nbsp;is generated containing all exported symbols which are<BR>&nbsp;&nbsp;not defined in the kernel. To get access to symbols<BR>&nbsp;&nbsp;from bar.ko, copy the Module.symvers file from the<BR>&nbsp;&nbsp;compilation of bar.ko to the directory where foo.ko is<BR>&nbsp;&nbsp;built. During the module build, kbuild will read the<BR>&nbsp;&nbsp;Module.symvers file in the directory of the external<BR>&nbsp;&nbsp;module, and when the build is finished, a new<BR>&nbsp;&nbsp;Module.symvers file is created containing the sum of<BR>&nbsp;&nbsp;all symbols defined and not part of the kernel.</P>
<P>&nbsp;Use "make" variable KBUILD_EXTRA_SYMBOLS<BR>&nbsp;&nbsp;If it is impractical to copy Module.symvers from<BR>&nbsp;&nbsp;another module, you can assign a space separated list<BR>&nbsp;&nbsp;of files to KBUILD_EXTRA_SYMBOLS in your build file.<BR>&nbsp;&nbsp;These files will be loaded by modpost during the<BR>&nbsp;&nbsp;initialization of its symbol tables.