<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>8.8 Synchronization</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">GNU Objective-C provides support for synchronized blocks:</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: smaller; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smallexample>       @synchronized (ObjCClass *guard) {
         ...
       }
</PRE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Upon entering the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@synchronized</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>block, a thread of execution shall first check whether a lock has been placed on the corresponding<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>guard</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>object by another thread. If it has, the current thread shall wait until the other thread relinquishes its lock. Once<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>guard</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>becomes available, the current thread will place its own lock on it, execute the code contained in the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@synchronized</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>block, and finally relinquish the lock (thereby making<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>guard</CODE>available to other threads).</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Unlike Java, Objective-C does not allow for entire methods to be marked<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@synchronized</CODE>. Note that throwing exceptions out of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@synchronized</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>blocks is allowed, and will cause the guarding object to be unlocked properly.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Because of the interactions between synchronization and exception handling, you can only use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@synchronized</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>when compiling with exceptions enabled, that is with the command line option<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-fobjc-exceptions</SPAN></SAMP>.