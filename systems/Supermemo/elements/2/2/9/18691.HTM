<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>8.3.2 @encode</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">GNU Objective-C supports the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@encode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>syntax that allows you to create a type encoding from a C/Objective-C type. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@encode(int)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is compiled by the compiler into<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"i"</CODE>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE>@encode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not support type qualifiers other than<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>const</CODE>. For example,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@encode(const char*)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is valid and is compiled into<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>"r*"</CODE>, while<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>@encode(bycopy char *)</CODE>is invalid and will cause a compilation error.