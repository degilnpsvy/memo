<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.57.23 RX Built-in Functions</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">GCC supports some of the RX instructions which cannot be expressed in the C programming language via the use of built-in functions. The following functions are supported:</P>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_brk</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fbrk-3713></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>brk</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_clrpsw</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fclrpsw-3714></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>clrpsw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to clear the specified bit in the processor status word.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_int</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fint-3715></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>int</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to generate an interrupt with the specified value.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_machi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmachi-3716></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>machi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to add the result of multiplying the top 16 bits of the two arguments into the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_maclo</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmaclo-3717></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>maclo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to add the result of multiplying the bottom 16 bits of the two arguments into the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mulhi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmulhi-3718></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mulhi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to place the result of multiplying the top 16 bits of the two arguments into the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mullo</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int, int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmullo-3719></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mullo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to place the result of multiplying the bottom 16 bits of the two arguments into the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvfachi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvfachi-3720></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvfachi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to read the top 32 bits of the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvfacmi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvfacmi-3721></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvfacmi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to read the middle 32 bits of the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvfc</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvfc-3722></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvfc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction which reads the control register specified in its argument and returns its value.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvtachi</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvtachi-3723></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvtachi</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to set the top 32 bits of the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvtaclo</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvtaclo-3724></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvtaclo</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to set the bottom 32 bits of the accumulator.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvtc</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int reg, int val</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvtc-3725></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvtc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction which sets control register number<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>reg</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>val</CODE>.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_mvtipl</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fmvtipl-3726></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>mvtipl</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction set the interrupt priority level.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_racw</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fracw-3727></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>racw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to round the accumulator according to the specified mode.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_revw</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005frevw-3728></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>revw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction which swaps the bytes in the argument so that bits 0&#8211;7 now occupy bits 8&#8211;15 and vice versa, and also bits 16&#8211;23 occupy bits 24&#8211;31 and vice versa.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_rmpa</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005frmpa-3729></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>rmpa</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction which initiates a repeated multiply and accumulate sequence.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_round</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>float</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fround-3730></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>round</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction which returns the floating-point argument rounded according to the current rounding mode set in the floating-point status word register.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: int<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_sat</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fsat-3731></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sat</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction which returns the saturated value of the argument.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_setpsw</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>int</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fsetpsw-3732></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>setpsw</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction to set the specified bit in the processor status word.</P></BLOCKQUOTE></DIV>
<DIV style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=defun>&#8212; Built-in Function: void<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>__builtin_rx_wait</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>(<VAR>void</VAR>)<VAR><A name=index-g_t_005f_005fbuiltin_005frx_005fwait-3733></A></VAR><BR>
<BLOCKQUOTE>
<P>Generates the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>wait</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>machine instruction.</P></BLOCKQUOTE></DIV>