<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>11.9 Warning Messages and Error Messages</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-error-messages-3886></A><A name=index-warnings-vs-errors-3887></A><A name=index-messages_002c-warning-and-error-3888></A>The GNU compiler can produce two kinds of diagnostics: errors and warnings. Each kind has a different purpose:</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><DFN>Errors</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>report problems that make it impossible to compile your program. GCC reports errors with the source file name and line number where the problem is apparent.</LI>
<LI><DFN>Warnings</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>report other unusual conditions in your code that<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>may</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>indicate a problem, although compilation can (and does) proceed. Warning messages also report the source file name and line number, but include the text &#8216;<SAMP><SPAN class=samp>warning:</SPAN></SAMP>&#8217; to distinguish them from error messages.</LI></UL>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Warnings may indicate danger points where you should check to make sure that your program really does what you intend; or the use of obsolete features; or the use of nonstandard features of GNU C or C++. Many warnings are issued only if you ask for them, with one of the<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-W</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>options (for instance,<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-Wall</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>requests a variety of useful warnings).</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><A name=index-pedantic-3889></A><A name=index-pedantic-errors-3890></A>GCC always tries to compile your program if possible; it never gratuitously rejects a program whose meaning is clear merely because (for instance) it fails to conform to a standard. In some cases, however, the C and C++ standards specify that certain extensions are forbidden, and a diagnostic<EM>must</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>be issued by a conforming compiler. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-pedantic</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>option tells GCC to issue warnings in such cases;<SPAN class=Apple-converted-space>&nbsp;</SPAN><SAMP><SPAN class=option>-pedantic-errors</SPAN></SAMP><SPAN class=Apple-converted-space>&nbsp;</SPAN>says to make them errors instead. This does not mean that<SPAN class=Apple-converted-space>&nbsp;</SPAN><EM>all</EM><SPAN class=Apple-converted-space>&nbsp;</SPAN>non-ISO constructs get warnings or errors.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Warning-Options.html#Warning-Options">Options to Request or Suppress Warnings</A>, for more detail on these and related command-line options.