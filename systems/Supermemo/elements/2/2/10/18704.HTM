<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>8.10.1 Dynamically registering methods</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objc_msg_lookup()</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>does not find a suitable method implementation, because the receiver does not implement the required method, it tries to see if the class can dynamically register the method.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">To do so, the runtime checks if the class of the receiver implements the method</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: smaller; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smallexample>     + (BOOL) resolveInstanceMethod: (SEL)selector;
</PRE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">in the case of an instance method, or</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: smaller; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smallexample>     + (BOOL) resolveClassMethod: (SEL)selector;
</PRE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">in the case of a class method. If the class implements it, the runtime invokes it, passing as argument the selector of the original method, and if it returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>YES</CODE>, the runtime tries the lookup again, which could now succeed if a matching method was added dynamically by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+resolveInstanceMethod:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<CODE>+resolveClassMethod:</CODE>.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This allows classes to dynamically register methods (by adding them to the class using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>class_addMethod</CODE>) when they are first called. To do so, a class should implement<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+resolveInstanceMethod:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or, depending on the case,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+resolveClassMethod:</CODE>) and have it recognize the selectors of methods that can be registered dynamically at runtime, register them, and return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>YES</CODE>. It should return<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NO</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>for methods that it does not dynamically registered at runtime.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">If<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+resolveInstanceMethod:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+resolveClassMethod:</CODE>) is not implemented or returns<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>NO</CODE>, the runtime then tries the forwarding hook.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Support for<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>+resolveInstanceMethod:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>resolveClassMethod:</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>was added to the GNU Objective-C runtime in GCC version 4.6.