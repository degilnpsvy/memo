<H3 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=section>8.10 Messaging with the GNU Objective-C runtime</H3>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">This section is specific for the GNU Objective-C runtime. If you are using a different runtime, you can skip it.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The implementation of messaging in the GNU Objective-C runtime is designed to be portable, and so is based on standard C.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Sending a message in the GNU Objective-C runtime is composed of two separate steps. First, there is a call to the lookup function,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objc_msg_lookup ()</CODE>(or, in the case of messages to super,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objc_msg_lookup_super ()</CODE>). This runtime function takes as argument the receiver and the selector of the method to be called; it returns the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>IMP</CODE>, that is a pointer to the function implementing the method. The second step of method invocation consists of casting this pointer function to the appropriate function pointer type, and calling the function pointed to it with the right arguments.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">For example, when the compiler encounters a method invocation such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>[object init]</CODE>, it compiles it into a call to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>objc_msg_lookup (object, @selector(init))</CODE>followed by a cast of the returned value to the appropriate function pointer type, and then it calls it.</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=menu>
<LI><A accessKey=1 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Dynamically-registering-methods.html#Dynamically-registering-methods">Dynamically registering methods</A></LI>
<LI><A accessKey=2 href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Forwarding-hook.html#Forwarding-hook">Forwarding hook</A></LI></UL>