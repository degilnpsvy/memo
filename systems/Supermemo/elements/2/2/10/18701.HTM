<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>8.9.3 Fast enumeration details</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Here is a more technical description with the gory details. Consider the code</P><PRE style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: smaller; FONT-WEIGHT: normal; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=smallexample>       for (<VAR>object expression</VAR> in <VAR>collection expression</VAR>)
       {
         <VAR>statements</VAR>
       }
</PRE>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">here is what happens when you run it:</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><VAR>collection expression</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is evaluated exactly once and the result is used as the collection object to iterate over. This means it is safe to write code such as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>for (object in [NSDictionary keyEnumerator]) ...</CODE>.</LI>
<LI>the iteration is implemented by the compiler by repeatedly getting batches of objects from the collection object using the fast enumeration protocol (see below), then iterating over all objects in the batch. This is faster than a normal enumeration where objects are retrieved one by one (hence the name &#8220;fast enumeration&#8221;).</LI>
<LI>if there are no objects in the collection, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>object expression</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nil</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and the loop immediately terminates.</LI>
<LI>if there are objects in the collection, then for each object in the collection (in the order they are returned)<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>object expression</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set to the object, then<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>statements</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>are executed.</LI>
<LI><VAR>statements</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>can contain<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>break</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>continue</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>commands, which will abort the iteration or skip to the next loop iteration as expected.</LI>
<LI>when the iteration ends because there are no more objects to iterate over,<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>object expression</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nil</CODE>. This allows you to determine whether the iteration finished because a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>break</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>command was used (in which case<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>object expression</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will remain set to the last object that was iterated over) or because it iterated over all the objects (in which case<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>object expression</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be set to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>nil</CODE>).</LI>
<LI><VAR>statements</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>must not make any changes to the collection object; if they do, it is a hard error and the fast enumeration terminates by invoking<CODE>objc_enumerationMutation</CODE>, a runtime function that normally aborts the program but which can be customized by Foundation libraries via<CODE>objc_set_mutation_handler</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to do something different, such as raising an exception.</LI></UL>