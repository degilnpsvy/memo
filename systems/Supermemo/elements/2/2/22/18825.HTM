<H1 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px 0px 0.4em; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 36px/44px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(78,68,60); VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WORD-SPACING: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility; -webkit-text-stroke-width: 0px">1.3 Getting Started - Git Basics</H1>
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; TEXT-TRANSFORM: none; TEXT-INDENT: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT: 14px/22px Georgia, 'Times New Roman', serif; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(78,68,60); VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; WORD-SPACING: 0px; PADDING-TOP: 0px; -webkit-text-stroke-width: 0px"><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" id=idm5718896></A>
<H2 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 44px; MARGIN: 20px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(241,78,50); FONT-SIZE: 18px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility">Git Basics</H2>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">So, what is Git in a nutshell? This is an important section to absorb, because if you understand what Git is and the fundamentals of how it works, then using Git effectively will probably be much easier for you. As you learn Git, try to clear your mind of the things you may know about other VCSs, such as Subversion and Perforce; doing so will help you avoid subtle confusion when using the tool. Git stores and thinks about information much differently than these other systems, even though the user interface is fairly similar, and understanding those differences will help prevent you from becoming confused while using it.<A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" id=idm5716848 data-primary="Subversion" data-type="indexterm"></A><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" id=idm5716144 data-primary="Perforce" data-type="indexterm"></A></P><SECTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" id=idm5715344 data-type="sect2" data-pdf-bookmark="Snapshots, Not Differences">
<H3 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 33px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(78,68,60); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility" id=Snapshots,-Not-Differences><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/Getting-Started-Git-Basics#Snapshots,-Not-Differences">Snapshots, Not Differences</A></H3>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">The major difference between Git and any other VCS (Subversion and friends included) is the way Git thinks about its data. Conceptually, most other systems store information as a list of file-based changes. These systems (CVS, Subversion, Perforce, Bazaar, and so on) think of the information they keep as a set of files and the changes made to each file over time.</P><FIGURE style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 30px 0px; PAGE-BREAK-INSIDE: avoid; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" class=border-box><IMG style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(136,136,136) 1px solid; PADDING-BOTTOM: 5px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; MAX-WIDTH: 100%; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(136,136,136) 1px solid; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 5px" alt="Storing data as changes to a base version of each file." src="http://www.git-scm.com/book/en/v2/book/01-introduction/images/deltas.png"></DIV><FIGCAPTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; FONT-STYLE: italic; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Storing data as changes to a base version of each file.</FIGCAPTION></FIGURE>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Git doesn&#8217;t think of or store its data this way. Instead, Git thinks of its data more like a set of snapshots of a miniature filesystem. Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that moment and stores a reference to that snapshot. To be efficient, if files have not changed, Git doesn&#8217;t store the file again, just a link to the previous identical file it has already stored. Git thinks about its data more like a<SPAN class=Apple-converted-space>&nbsp;</SPAN><STRONG style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px">stream of snapshots</STRONG>.</P><FIGURE style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 30px 0px; PAGE-BREAK-INSIDE: avoid; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" class=border-box><IMG style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(136,136,136) 1px solid; PADDING-BOTTOM: 5px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; MAX-WIDTH: 100%; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(136,136,136) 1px solid; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 5px" alt="Git stores data as snapshots of the project over time." src="http://www.git-scm.com/book/en/v2/book/01-introduction/images/snapshots.png"></DIV><FIGCAPTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; FONT-STYLE: italic; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Storing data as snapshots of the project over time.</FIGCAPTION></FIGURE>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">This is an important distinction between Git and nearly all other VCSs. It makes Git reconsider almost every aspect of version control that most other systems copied from the previous generation. This makes Git more like a mini filesystem with some incredibly powerful tools built on top of it, rather than simply a VCS. We&#8217;ll explore some of the benefits you gain by thinking of your data this way when we cover Git branching in<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/ch03/_git_branching" data-type="xref">Chapter&nbsp;3</A>.</P></SECTION><SECTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" id=idm5706976 data-type="sect2" data-pdf-bookmark="Nearly Every Operation Is Local">
<H3 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 33px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(78,68,60); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility" id=Nearly-Every-Operation-Is-Local><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/Getting-Started-Git-Basics#Nearly-Every-Operation-Is-Local">Nearly Every Operation Is Local</A></H3>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Most operations in Git only need local files and resources to operate &#8211; generally no information is needed from another computer on your network. If you&#8217;re used to a CVCS where most operations have that network latency overhead, this aspect of Git will make you think that the gods of speed have blessed Git with unworldly powers. Because you have the entire history of the project right there on your local disk, most operations seem almost instantaneous.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">For example, to browse the history of the project, Git doesn&#8217;t need to go out to the server to get the history and display it for you &#8211; it simply reads it directly from your local database. This means you see the project history almost instantly. If you want to see the changes introduced between the current version of a file and the file a month ago, Git can look up the file a month ago and do a local difference calculation, instead of having to either ask a remote server to do it or pull an older version of the file from the remote server to do it locally.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">This also means that there is very little you can&#8217;t do if you&#8217;re offline or off VPN. If you get on an airplane or a train and want to do a little work, you can commit happily until you get to a network connection to upload. If you go home and can&#8217;t get your VPN client working properly, you can still work. In many other systems, doing so is either impossible or painful. In Perforce, for example, you can&#8217;t do much when you aren&#8217;t connected to the server; and in Subversion and CVS, you can edit files, but you can&#8217;t commit changes to your database (because your database is offline). This may not seem like a huge deal, but you may be surprised what a big difference it can make.</P></SECTION><SECTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" id=idm5702880 data-type="sect2" data-pdf-bookmark="Git Has Integrity">
<H3 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 33px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(78,68,60); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility" id=Git-Has-Integrity><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/Getting-Started-Git-Basics#Git-Has-Integrity">Git Has Integrity</A></H3>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Everything in Git is check-summed before it is stored and is then referred to by that checksum. This means it&#8217;s impossible to change the contents of any file or directory without Git knowing about it. This functionality is built into Git at the lowest levels and is integral to its philosophy. You can&#8217;t lose information in transit or get file corruption without Git being able to detect it.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">The mechanism that Git uses for this checksumming is called a SHA-1 hash.<A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" id=idm5700480 data-primary="SHA-1" data-type="indexterm"></A><SPAN class=Apple-converted-space>&nbsp;</SPAN>This is a 40-character string composed of hexadecimal characters (0&#8211;9 and a&#8211;f) and calculated based on the contents of a file or directory structure in Git. A SHA-1 hash looks something like this:</P><PRE style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(239,238,230) 1px solid; BORDER-LEFT: rgb(239,238,230) 1px solid; PADDING-BOTTOM: 13px; LINE-HEIGHT: 15px; MARGIN: 10px 0px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; DISPLAY: block; FONT-FAMILY: monospace; BACKGROUND: rgb(238,238,238); COLOR: rgb(51,51,51); FONT-SIZE: 0.9em; VERTICAL-ALIGN: baseline; OVERFLOW: auto; BORDER-TOP: rgb(239,238,230) 1px solid; BORDER-RIGHT: rgb(239,238,230) 1px solid; PADDING-TOP: 10px; border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px" data-type="programlisting" data-code-language="">24b9da6552252987aa493b52f8696cd6d3b00373</PRE>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">You will see these hash values all over the place in Git because it uses them so much. In fact, Git stores everything in its database not by file name but by the hash value of its contents.</P></SECTION><SECTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" id=idm5697408 data-type="sect2" data-pdf-bookmark="Git Generally Only Adds Data">
<H3 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 33px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(78,68,60); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility" id=Git-Generally-Only-Adds-Data><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/Getting-Started-Git-Basics#Git-Generally-Only-Adds-Data">Git Generally Only Adds Data</A></H3>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">When you do actions in Git, nearly all of them only add data to the Git database. It is hard to get the system to do anything that is not undoable or to make it erase data in any way. As in any VCS, you can lose or mess up changes you haven&#8217;t committed yet; but after you commit a snapshot into Git, it is very difficult to lose, especially if you regularly push your database to another repository.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">This makes using Git a joy because we know we can experiment without the danger of severely screwing things up. For a more in-depth look at how Git stores its data and how you can recover data that seems lost, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/ch02/_undoing" data-type="xref">&#8220;Undoing Things&#8221;</A>.</P></SECTION><SECTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" id=idm5694144 data-type="sect2" data-pdf-bookmark="The Three States">
<H3 style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 33px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(78,68,60); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; FONT-WEIGHT: bold; BORDER-RIGHT: 0px; PADDING-TOP: 0px; text-rendering: optimizelegibility" id=The-Three-States><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 16px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/Getting-Started-Git-Basics#The-Three-States">The Three States</A></H3>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Now, pay attention. This is the main thing to remember about Git if you want the rest of your learning process to go smoothly. Git has three main states that your files can reside in: committed, modified, and staged. Committed means that the data is safely stored in your local database. Modified means that you have changed the file but have not committed it to your database yet. Staged means that you have marked a modified file in its current version to go into your next commit snapshot.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">This leads us to the three main sections of a Git project: the Git directory, the working directory, and the staging area.</P><FIGURE style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 30px 0px; PAGE-BREAK-INSIDE: avoid; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<DIV style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px" class=border-box><IMG style="BOX-SIZING: border-box; BORDER-BOTTOM: rgb(136,136,136) 1px solid; PADDING-BOTTOM: 5px; BORDER-RIGHT-WIDTH: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; MAX-WIDTH: 100%; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: rgb(136,136,136) 1px solid; BORDER-LEFT-WIDTH: 0px; PADDING-TOP: 5px" alt="Working directory" src="http://www.git-scm.com/book/en/v2/book/01-introduction/images/areas.png" width="staging area"></DIV><FIGCAPTION style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; FONT-STYLE: italic; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">Working directory, staging area, and Git directory.</FIGCAPTION></FIGURE>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">The Git directory is where Git stores the metadata and object database for your project. This is the most important part of Git, and it is what is copied when you clone a repository from another computer.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">The working directory is a single checkout of one version of the project. These files are pulled out of the compressed database in the Git directory and placed on disk for you to use or modify.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">The staging area is a file, generally contained in your Git directory, that stores information about what will go into your next commit. It&#8217;s sometimes referred to as the &#8220;index&#8221;, but it&#8217;s also common to refer to it as the staging area.</P>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">The basic Git workflow goes something like this:</P>
<OL style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: decimal; MARGIN: 15px 0px 15px 40px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: inherit; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<LI style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; TEXT-INDENT: 0px; MARGIN: 5px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; TEXT-INDENT: 0px; MARGIN: 5px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">You modify files in your working directory.</P></LI>
<LI style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; TEXT-INDENT: 0px; MARGIN: 5px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; TEXT-INDENT: 0px; MARGIN: 5px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">You stage the files, adding snapshots of them to your staging area.</P></LI>
<LI style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; TEXT-INDENT: 0px; MARGIN: 5px 0px 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 16px; TEXT-INDENT: 0px; MARGIN: 5px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 1em; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">You do a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.</P></LI></OL>
<P style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; LINE-HEIGHT: 22px; TEXT-INDENT: 0px; MARGIN: 0px 0px 11px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: sans-serif; FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px">If a particular version of a file is in the Git directory, it&#8217;s considered committed. If it&#8217;s modified but has been added to the staging area, it is staged. And if it was changed since it was checked out but has not been staged, it is modified. In<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="BOX-SIZING: border-box; BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: inline; FONT-FAMILY: inherit; COLOR: rgb(3,136,166); FONT-SIZE: 14px; VERTICAL-ALIGN: baseline; BORDER-TOP: 0px; BORDER-RIGHT: 0px; TEXT-DECORATION: none; PADDING-TOP: 0px; transition: color 0.3s; -webkit-transition: color 0.3s" href="http://www.git-scm.com/book/en/v2/ch02/_git_basics_chapter" data-type="xref">Chapter&nbsp;2</A>, you&#8217;ll learn more about these states and how you can either take advantage of them or skip the staged part entirely.</P></SECTION></DIV>