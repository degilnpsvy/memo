<H5 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsubsection>6.57.10.1 Argument Types</H5>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The arguments to the built-in functions can be divided into three groups: register numbers, compile-time constants and run-time values. In order to make this classification clear at a glance, the arguments and return values are given the following pseudo types:</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<TABLE summary="">
<TBODY>
<TR align=left>
<TD vAlign=top width="20%">Pseudo type</TD>
<TD vAlign=top width="30%">Real C type</TD>
<TD vAlign=top width="15%">Constant?</TD>
<TD vAlign=top width="35%">Description<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>uh</CODE></TD>
<TD vAlign=top width="30%"><CODE>unsigned short</CODE></TD>
<TD vAlign=top width="15%">No</TD>
<TD vAlign=top width="35%">an unsigned halfword<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>uw1</CODE></TD>
<TD vAlign=top width="30%"><CODE>unsigned int</CODE></TD>
<TD vAlign=top width="15%">No</TD>
<TD vAlign=top width="35%">an unsigned word<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>sw1</CODE></TD>
<TD vAlign=top width="30%"><CODE>int</CODE></TD>
<TD vAlign=top width="15%">No</TD>
<TD vAlign=top width="35%">a signed word<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>uw2</CODE></TD>
<TD vAlign=top width="30%"><CODE>unsigned long long</CODE></TD>
<TD vAlign=top width="15%">No</TD>
<TD vAlign=top width="35%">an unsigned doubleword<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>sw2</CODE></TD>
<TD vAlign=top width="30%"><CODE>long long</CODE></TD>
<TD vAlign=top width="15%">No</TD>
<TD vAlign=top width="35%">a signed doubleword<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>const</CODE></TD>
<TD vAlign=top width="30%"><CODE>int</CODE></TD>
<TD vAlign=top width="15%">Yes</TD>
<TD vAlign=top width="35%">an integer constant<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>acc</CODE></TD>
<TD vAlign=top width="30%"><CODE>int</CODE></TD>
<TD vAlign=top width="15%">Yes</TD>
<TD vAlign=top width="35%">an ACC register number<SPAN class=Apple-converted-space>&nbsp;</SPAN><BR></TD></TR>
<TR align=left>
<TD vAlign=top width="20%"><CODE>iacc</CODE></TD>
<TD vAlign=top width="30%"><CODE>int</CODE></TD>
<TD vAlign=top width="15%">Yes</TD>
<TD vAlign=top width="35%">an IACC register number<BR></TD></TR></TBODY></TABLE></P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">These pseudo types are not defined by GCC, they are simply a notational convenience used in this manual.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">Arguments of type<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>uh</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>uw1</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sw1</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>uw2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>sw2</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>are evaluated at run time. They correspond to register operands in the underlying FR-V instructions.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE>const</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>arguments represent immediate operands in the underlying FR-V instructions. They must be compile-time constants.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE>acc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>arguments are evaluated at compile time and specify the number of an accumulator register. For example, an<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>acc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>argument of 2 selects the ACC2 register.</P>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px"><CODE>iacc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>arguments are similar to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>acc</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>arguments but specify the number of an IACC register. See see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Other-Built-in-Functions.html#Other-Built-in-Functions">Other Built-in Functions</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>for more details.