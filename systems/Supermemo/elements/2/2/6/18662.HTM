<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.59.13 Function Specific Option Pragmas</H4>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>#pragma GCC target (</CODE><VAR>"string"</VAR><CODE>...)</CODE></DT>
<DD><A name=index-pragma-GCC-target-3776></A>This pragma allows you to set target specific options for functions defined later in the source file. One or more strings can be specified. Each function that is defined after this point is as if<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>attribute((target("STRING")))</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>was specified for that function. The parenthesis around the options is optional. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Function-Attributes.html#Function-Attributes">Function Attributes</A>, for more information about the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>target</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute and the attribute syntax.
<P>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#pragma GCC target</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pragma is presently implemented for i386/x86_64, PowerPC, and Nios II targets only.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>#pragma GCC optimize (</CODE><VAR>"string"</VAR><CODE>...)</CODE></DT>
<DD><A name=index-pragma-GCC-optimize-3777></A>This pragma allows you to set global optimization options for functions defined later in the source file. One or more strings can be specified. Each function that is defined after this point is as if<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>attribute((optimize("STRING")))</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>was specified for that function. The parenthesis around the options is optional. See<SPAN class=Apple-converted-space>&nbsp;</SPAN><A href="https://gcc.gnu.org/onlinedocs/gcc-4.9.1/gcc/Function-Attributes.html#Function-Attributes">Function Attributes</A>, for more information about the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>optimize</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>attribute and the attribute syntax.
<P>The &#8216;<SAMP><SPAN class=samp>#pragma GCC optimize</SPAN></SAMP>&#8217; pragma is not implemented in GCC versions earlier than 4.4.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>#pragma GCC push_options</CODE></DT>
<DT><CODE>#pragma GCC pop_options</CODE></DT>
<DD><A name=index-pragma-GCC-push_005foptions-3778></A><A name=index-pragma-GCC-pop_005foptions-3779></A>These pragmas maintain a stack of the current target and optimization options. It is intended for include files where you temporarily want to switch to using a different &#8216;<SAMP><SPAN class=samp>#pragma GCC target</SPAN></SAMP>&#8217; or &#8216;<SAMP><SPAN class=samp>#pragma GCC optimize</SPAN></SAMP>&#8217; and then to pop back to the previous options.
<P>The &#8216;<SAMP><SPAN class=samp>#pragma GCC push_options</SPAN></SAMP>&#8217; and &#8216;<SAMP><SPAN class=samp>#pragma GCC pop_options</SPAN></SAMP>&#8217; pragmas are not implemented in GCC versions earlier than 4.4.</P></DD></DL>
<DL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<DT><CODE>#pragma GCC reset_options</CODE></DT>
<DD><A name=index-pragma-GCC-reset_005foptions-3780></A>This pragma clears the current<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#pragma GCC target</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>#pragma GCC optimize</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to use the default switches as specified on the command line.
<P>The &#8216;<SAMP><SPAN class=samp>#pragma GCC reset_options</SPAN></SAMP>&#8217; pragma is not implemented in GCC versions earlier than 4.4.</P></DD></DL>