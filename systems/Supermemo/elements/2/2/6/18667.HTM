<H4 style="LINE-HEIGHT: normal; TEXT-TRANSFORM: none; FONT-VARIANT: normal; FONT-STYLE: normal; TEXT-INDENT: 0px; FONT-FAMILY: Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); FONT-SIZE: medium; WORD-SPACING: 0px; -webkit-text-stroke-width: 0px" class=subsection>6.61.2 ISO/IEC 14882:1998 Edits for Thread-Local Storage</H4>
<P style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">The following are a set of changes to ISO/IEC 14882:1998 (aka C++98) that document the exact semantics of the language extension.</P>
<UL style="TEXT-TRANSFORM: none; TEXT-INDENT: 0px; FONT: medium Simsun; WHITE-SPACE: normal; LETTER-SPACING: normal; COLOR: rgb(0,0,0); WORD-SPACING: 0px; -webkit-text-stroke-width: 0px">
<LI><B>[intro.execution]</B>
<P>New text after paragraph 4</P>
<BLOCKQUOTE>A<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>thread</DFN><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a flow of control within the abstract machine. It is implementation defined whether or not there may be more than one thread.</BLOCKQUOTE>
<P>New text after paragraph 7</P>
<BLOCKQUOTE>It is unspecified whether additional action must be taken to ensure when and whether side effects are visible to other threads.</BLOCKQUOTE></LI>
<LI><B>[lex.key]</B>
<P>Add<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE>.</P></LI>
<LI><B>[basic.start.main]</B>
<P>Add after paragraph 5</P>
<BLOCKQUOTE>The thread that begins execution at the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>main</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function is called the<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>main thread</DFN>. It is implementation defined how functions beginning threads other than the main thread are designated or typed. A function so designated, as well as the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>main</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function, is called a<SPAN class=Apple-converted-space>&nbsp;</SPAN><DFN>thread startup function</DFN>. It is implementation defined what happens if a thread startup function returns. It is implementation defined what happens to other threads when any thread calls<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>exit</CODE>.</BLOCKQUOTE></LI>
<LI><B>[basic.start.init]</B>
<P>Add after paragraph 4</P>
<BLOCKQUOTE>The storage for an object of thread storage duration shall be statically initialized before the first statement of the thread startup function. An object of thread storage duration shall not require dynamic initialization.</BLOCKQUOTE></LI>
<LI><B>[basic.start.term]</B>
<P>Add after paragraph 3</P>
<BLOCKQUOTE>The type of an object with thread storage duration shall not have a non-trivial destructor, nor shall it be an array type whose elements (directly or indirectly) have non-trivial destructors.</BLOCKQUOTE></LI>
<LI><B>[basic.stc]</B>
<P>Add &#8220;thread storage duration&#8221; to the list in paragraph 1.</P>
<P>Change paragraph 2</P>
<BLOCKQUOTE>Thread, static, and automatic storage durations are associated with objects introduced by declarations [<SMALL class=dots>...</SMALL>].</BLOCKQUOTE>
<P>Add<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the list of specifiers in paragraph 3.</P></LI>
<LI><B>[basic.stc.thread]</B>
<P>New section before<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>[basic.stc.static]</B></P>
<BLOCKQUOTE>The keyword<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>applied to a non-local object gives the object thread storage duration.
<P>A local variable or class data member declared both<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>static</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>gives the variable or member thread storage duration.</P></BLOCKQUOTE></LI>
<LI><B>[basic.stc.static]</B>
<P>Change paragraph 1</P>
<BLOCKQUOTE>All objects that have neither thread storage duration, dynamic storage duration nor are local [<SMALL class=dots>...</SMALL>].</BLOCKQUOTE></LI>
<LI><B>[dcl.stc]</B>
<P>Add<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the list in paragraph 1.</P>
<P>Change paragraph 1</P>
<BLOCKQUOTE>With the exception of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE>, at most one<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>storage-class-specifier</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>shall appear in a given<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR>decl-specifier-seq</VAR>. The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE>specifier may be used alone, or immediately following the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>extern</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>static</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifiers. [<SMALL class=dots>...</SMALL>]</BLOCKQUOTE>
<P>Add after paragraph 5</P>
<BLOCKQUOTE>The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>specifier can be applied only to the names of objects and to anonymous unions.</BLOCKQUOTE></LI>
<LI><B>[class.mem]</B>
<P>Add after paragraph 6</P>
<BLOCKQUOTE>Non-<CODE>static</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>members shall not be<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE>__thread</CODE>.</BLOCKQUOTE></LI></UL>