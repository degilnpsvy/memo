<H4 id=title-ID0EY1OM class=docSection2Title>Pentium Time Stamp Counter</H4>
<P class=docText>The <SPAN class=docEmphasis><A name="Stamp Counter"></A>Time Stamp Counter</SPAN><A name="number of"></A> (TSC) is a 64-bit register present in Pentium-compatible processors that counts the number of clock cycles consumed by the processor since startup. Because the TSC gets incremented at the rate of the processor cycle speed, it provides a high-resolution timer. The TSC is commonly used for profiling and <A name=iddle2614></A><A name=iddle2642></A><A name=iddle2930></A><A name=iddle3194></A><A name=iddle3751></A><A name=iddle3851></A><A name=iddle4270></A><A name=the></A>instrumenting code. It is accessed using the <TT>rdtsc</TT><A name="microsecond precision"></A> instruction to measure execution time of intervening code with microsecond precision. TSC ticks can be converted to seconds by dividing by the CPU clock speed, which can be read from the kernel variable, <TT>cpu_khz</TT>.</P>
<P class=docText>In the following snippet, <TT>low_tsc_ticks</TT><A name=while></A> contains the lower 32 bits of the TSC, while <TT>high_tsc_ticks</TT><A name="a few"></A> contains the higher 32 bits. The lower 32 bits overflow in a few seconds depending on your processor speed but is sufficient for many code instrumentation purposes as shown here:</P>
<DIV class=docText><PRE>unsigned long low_tsc_ticks0, high_tsc_ticks0;
unsigned long low_tsc_ticks1, high_tsc_ticks1;
unsigned long exec_time;
rdtsc(low_tsc_ticks0, high_tsc_ticks0); /* Timestamp
                                           before */
printk("Hello World\n");                /* Code to be
                                           profiled */
rdtsc(low_tsc_ticks1, high_tsc_ticks1); /* Timestamp after */
exec_time = low_tsc_ticks1 - low_tsc_ticks0;</PRE></DIV><BR>
<P class=docText><TT>exec_time</TT><A name="half a"></A> measured 871 (or half a microsecond) on a 1.8GHz Pentium box.</P><A name=ch02note02></A>
<DIV class=docNote>
<P>
<P class=docText>Support for high-resolution timers (<TT>CONFIG_HIGH_RES_TIMERS</TT><A name="to provide"></A>) has been merged with the 2.6.21 kernel. It makes use of hardware-specific high-speed timers to provide high-precision capabilities to APIs such as <TT>nanosleep()</TT><A name="On Pentium"></A>. On Pentium-class machines, the kernel leverages the TSC to offer this capability.</P></DIV>