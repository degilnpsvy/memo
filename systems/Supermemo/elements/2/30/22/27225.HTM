4.1) Assumptions 
<P></P>
<P>The target word size (TCG_TARGET_REG_BITS) is expected to be 32 bit or 64 bit. It is expected that the pointer has the same size as the word. </P>
<P>On a 32 bit target, all 64 bit operations are converted to 32 bits. A few specific operations must be implemented to allow it (see add2_i32, sub2_i32, brcond2_i32). </P>
<P>On a 64 bit target, the values are transfered between 32 and 64-bit registers using the following ops: </P>
<P>- trunc_shr_i64_i32 </P>
<P>- ext_i32_i64 
<P>- extu_i32_i64 
<P>They ensure that the values are correctly truncated or extended when moved from a 32-bit to a 64-bit register or vice-versa. Note that the trunc_shr_i64_i32 is an optional op. It is not necessary to implement it if all the following conditions are met: 
<P>- 64-bit registers can hold 32-bit values 
<P>- 32-bit values in a 64-bit register do not need to stay zero or sign extended 
<P>- all 32-bit TCG ops ignore the high part of 64-bit registers 
<P>Floating point operations are not supported in this version. A previous incarnation of the code generator had full support of them, but it is better to concentrate on integer operations first.