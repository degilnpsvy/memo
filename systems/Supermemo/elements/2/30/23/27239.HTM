#define ALIGN(x, a)&nbsp;&nbsp;__ALIGN_KERNEL((x), (a))<BR>#define __ALIGN_MASK(x, mask)&nbsp;__ALIGN_KERNEL_MASK((x), (mask))<BR>#define PTR_ALIGN(p, a)&nbsp;&nbsp;((typeof(p))ALIGN((unsigned long)(p), (a)))<BR>#define IS_ALIGNED(x, a)&nbsp;&nbsp;(((x) &amp; ((typeof(x))(a) - 1)) == 0)</P>
<P>&nbsp;</P>
<P>In include/uapi/linux/kernel.h:</P>
<P>#ifndef _UAPI_LINUX_KERNEL_H<BR>#define _UAPI_LINUX_KERNEL_H</P>
<P>#include &lt;linux/sysinfo.h&gt;</P>
<P>/*<BR>&nbsp;* 'kernel.h' contains some often-used function prototypes etc<BR>&nbsp;*/<BR>#define __ALIGN_KERNEL(x, a)&nbsp;&nbsp;__ALIGN_KERNEL_MASK(x, (typeof(x))(a) - 1)<BR>#define __ALIGN_KERNEL_MASK(x, mask)&nbsp;(((x) + (mask)) &amp; ~(mask))</P>
<P><BR>#endif /* _UAPI_LINUX_KERNEL_H */