<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs Lisp: Using thing-at-point</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2011-02-16</TIME>, &#8230;,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2015-05-22</TIME></DIV>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This page shows you how to use emacs lisp's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">thing-at-point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function to get text from buffer into a string.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">thing-at-point</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">When writing interactive commands, one of the most useful function is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">thing-at-point</CODE>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">thing-at-point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>lets you get the current word under cursor into a string. (or, current line, current sentence, paragraph, file, URL, defun, &#8230;.)</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Here's a example.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> xx ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"print current word."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">message</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"%s"</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">thing-at-point</SPAN> 'word)))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Evaluate the code, then try it. &#12308;&#10148;&nbsp;<A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_eval_lisp_code.html">Emacs: How to Evaluate Emacs Lisp Code</A>&#12309;</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Without<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">thing-at-point</CODE>, you have to code about 5 more lines. Here's a example:</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> xx2 ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"print current word."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> (p1 p2)
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-excursion</SPAN>
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">skip-chars-backward</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"-a-z0-9"</SPAN>)
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> p1 (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point</SPAN>))
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">skip-chars-forward</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"-a-z0-9"</SPAN>)
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> p2 (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point</SPAN>))
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">message</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"%s"</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">buffer-substring-no-properties</SPAN> p1 p2)))))</PRE>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Finding the Positions of a Thing's Boundary</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Sometimes you also need to know a thing's boundary, because you may need to delete it (using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(delete-region <VAR class=d style="COLOR: rgb(39,68,88)">position1</VAR> <VAR class=d style="COLOR: rgb(39,68,88)">position2</VAR>)</CODE>).</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">bounds-of-thing-at-point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>returns the boundary positions of the text unit under cursor.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> my-get-boundary-and-thing ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"example of using `bounds-of-thing-at-point'"</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> (bounds pos1 pos2 mything)
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> bounds (<SPAN class=function-name style="COLOR: rgb(0,0,255)">bounds-of-thing-at-point</SPAN> 'symbol))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> pos1 (<SPAN class=keyword style="COLOR: rgb(160,32,240)">car</SPAN> bounds))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> pos2 (<SPAN class=keyword style="COLOR: rgb(160,32,240)">cdr</SPAN> bounds))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mything (<SPAN class=function-name style="COLOR: rgb(0,0,255)">buffer-substring-no-properties</SPAN> pos1 pos2))

    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">message</SPAN> 
     <SPAN class=string style="COLOR: rgb(139,34,82)">"thing begin at [%s], end at [%s], thing is [%s]"</SPAN>
     pos1 pos2 mything)))</PRE>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Problems of thing-at-point</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">thing-at-point does have some annoyances. For example, when getting a line, it'll normally include the newline char "\n", but not if the line is at the end of buffer. For detail, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_thing-at-point_problems.html">Emacs Lisp: Problems of thing-at-point</A>.</P>
<DIV class=rltd style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; DISPLAY: table; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<UL style="MARGIN: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_all_about_lines.html">Emacs Lisp: Functions for Processing Lines</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_printing.html">Emacs Lisp's print, princ, prin1, format, message</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_replace_string_region.html">Emacs Lisp: Multi-Pair Find &#65286; Replace: xah-replace-pairs.el</A></LI></UL></DIV><BR class=Apple-interchange-newline>