<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs Lisp: How to Find/Replace Text</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2008-06-30</TIME>, &#8230;,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2014-10-01</TIME></DIV>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This page shows you emacs lisp idioms for Find/Replace text in buffer.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Find/Replace Text in Buffer</H2><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">idiom for string replacement in current buffer;
</SPAN>
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> ((<SPAN class=variable-name style="COLOR: rgb(159,81,45)">case-fold-search</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">t</SPAN>)) <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">or nil
</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">goto-char</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-min</SPAN>))
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">while</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">search-forward</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"myStr1"</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">t</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">replace-match</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"myReplaceStr1"</SPAN>))

  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">goto-char</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-min</SPAN>))
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">while</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">search-forward</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"myStr2"</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">t</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">replace-match</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"myReplaceStr2"</SPAN>))

  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">repeat for other string pairs
</SPAN>)

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">if you need regexp, use search-forward-regexp</SPAN></PRE>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Letter Case Sensitivity</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">To control the letter case of search, locally set<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">case-fold-search</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>to<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">t</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">nil</CODE>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">To control letter case of the replacement, use the optional arguments in your<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">replace-match</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>function.</P>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Match Data</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Whenever you use regex in emacs lisp, the captured text is stored in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">match-string</CODE>.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">the second captured string
</SPAN>(<SPAN class=function-name style="COLOR: rgb(0,0,255)">match-string</SPAN> 2)

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">get the positions of the 2nd captured string
</SPAN>(<SPAN class=function-name style="COLOR: rgb(0,0,255)">match-beginning</SPAN> 2) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">match-end</SPAN> 2)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Complete match data can be accessed by the function<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">match-data</CODE>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Find/Replace in a Region Boundary</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">If you need to do find/replace on a region only, wrap the code with<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">save-restriction</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">narrow-to-region</CODE>. Example:</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">idiom for string replacement within a region
</SPAN>(<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-restriction</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">narrow-to-region</SPAN> pos1 pos2)

  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">goto-char</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-min</SPAN>))
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">while</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">search-forward</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"myStr1"</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN> <SPAN class=keyword style="COLOR: rgb(160,32,240)">t</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">replace-match</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"myReplaceStr1"</SPAN>))

  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">repeat for other string pairs
</SPAN>)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">If you need to find/replace multiple pairs frequently, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_replace_string_region.html">Emacs Lisp: Multi-Pair Find &#65286; Replace: xah-replace-pairs.el</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">WARNING: Boundary Change After Find/Replace</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Whenever you work in a region, remember that the boundaries of the text that you are interested is changed when you add or remove text in that region. For example, suppose {p1, p2} is the boundary of some text you are interested. After doing some change there, suppose you want to do some more change. Don't just call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(something-region p1 p2)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>again, because p2 is no longer the correct boundary (of the region you are interested).</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Use<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">save-restriction</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">narrow-to-region</CODE>, like this:</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-restriction</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">narrow-to-region</SPAN> pos1 pos2)
  (something1-region (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-min</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-max</SPAN>))
  (something2-region (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-min</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point-max</SPAN>))
  &#8230;
)</PRE>
<DIV class=rltd style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; DISPLAY: table; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<UL style="MARGIN: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_editing_basics.html">Programing: Overview of Text-Processing in Emacs Lisp</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_examples.html">Emacs Lisp Examples</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_idioms_batch.html">Emacs Lisp Idioms for Text Processing in Batch Style</A></LI></UL></DIV><BR class=Apple-interchange-newline>