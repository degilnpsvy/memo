<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs Lisp: How to Write a Command for Comment Handling</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2008-11-30</TIME>, &#8230;,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2015-08-28</TIME></DIV>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This page shows you how to write a command to insert/delete comment syntax chars of a programing language.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">First, you should know about emacs's builtin comment package<CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">newcomment.el</CODE>. See:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_comment_handling.html">Emacs Lisp: How to Write Comment/Uncomment Command in Major Mode</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Problem</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">You want to write a emacs command to comment or uncomment code for your own language. You want to write it from scratch.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Technically, this lesson shows you how to write a command that either insert some string or delete some string in particular positions based on the text in current line or text selection.</P>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Detail</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs has a standard command to insert or delete comment characters in a smart way, named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">comment-dwim</CODE>. It already handles most languages. For your own language, you can implement a comment handling command based on it, with less than 10 lines of code. (For how, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_comment_handling.html">Emacs Lisp: How to Write Comment/Uncomment Command in Major Mode</A>.)</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">However, you may not want to implement your comment command based on it. For example, you may not like its behavior, or can't have your code depend on it. For example, when there's no active region and current line is a comment, it doesn't do anything except moving cursor. Also,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">newcomment.el</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is about 1300 lines of lisp code, designed to handle comments in general. You may find this to be overkill, and don't want your package to depend on it.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">So, your task now is to write your own comment command from scratch.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Solution</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The following code handles C++-style comment<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">// &#8230;</CODE>. The code can be easily modified to handle any comment syntax that starts with a comment char and ends in a newline. (for example, Perl's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon"># &#8230;</CODE>, lisp's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">; &#8230;</CODE>, TeX's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">% &#8230;</CODE>, Visual Basics's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">' &#8230;</CODE>)</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">It has 3 user-level functions:</P>
<UL style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<LI style="FONT-FAMILY: sans-serif">&#8220;my-comment-region&#8221; &#8594; prefix a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">//</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to the beginning of each line in the text selection.</LI>
<LI style="FONT-FAMILY: sans-serif">&#8220;my-uncomment-region&#8221; &#8594; remove the first occurrence of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">//</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>(if any) in each line of the current text selection.</LI>
<LI style="FONT-FAMILY: sans-serif">&#8220;my-comment-dwim&#8221; &#8594; use a heuristic to decided to comment or uncomment.</LI></UL>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">&#8220;my-comment-dwim&#8221; is the general command. If there are no text selection, then it will comment or uncomment the current line, depending on whether the current line is a comment (If the comment start in the middle of the line, the line is not considered a comment). If there is a text selection, then it will comment or uncomment the whole region. Which action it does depends on whether the first line in selection is a comment line.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> my-comment-dwim ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Comment or uncomment the current line or text selection."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)

  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">If there's no text selection, comment or uncomment the line
</SPAN>  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">depending whether the WHOLE line is a comment. If there is a text
</SPAN>  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">selection, using the first line to determine whether to
</SPAN>  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">comment/uncomment.
</SPAN>  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> (p1 p2)
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">if</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">use-region-p</SPAN>)
        (<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-excursion</SPAN>
          (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> p1 (<SPAN class=function-name style="COLOR: rgb(0,0,255)">region-beginning</SPAN>) p2 (<SPAN class=function-name style="COLOR: rgb(0,0,255)">region-end</SPAN>))
          (<SPAN class=function-name style="COLOR: rgb(0,0,255)">goto-char</SPAN> p1)
          (<SPAN class=keyword style="COLOR: rgb(160,32,240)">if</SPAN> (wholeLineIsCmt-p)
              (my-uncomment-region p1 p2)
            (my-comment-region p1 p2)
            ))
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">progn</SPAN>
        (<SPAN class=keyword style="COLOR: rgb(160,32,240)">if</SPAN> (wholeLineIsCmt-p)
            (my-uncomment-current-line)
          (my-comment-current-line)
          )) )))

(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> wholeLineIsCmt-p ()
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-excursion</SPAN>
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">beginning-of-line</SPAN> 1)
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">looking-at</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"[ \t]*//"</SPAN>)
    ))

(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> my-comment-current-line ()
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">beginning-of-line</SPAN> 1)
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">insert</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"//"</SPAN>)
  )

(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> my-uncomment-current-line ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Remove &#8220;//&#8221; (if any) in the beginning of current line."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">when</SPAN> (wholeLineIsCmt-p)
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">beginning-of-line</SPAN> 1)
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">search-forward</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"//"</SPAN>)
    (delete-backward-char 2)
    ))

(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> my-comment-region (p1 p2)
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Add &#8220;//&#8221; to the beginning of each line of selected text."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"r"</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> ((deactivate-mark <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-excursion</SPAN>
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">goto-char</SPAN> p2)
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">while</SPAN> (&gt;= (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point</SPAN>) p1)
        (my-comment-current-line)
        (previous-line)
        ))))

(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> my-uncomment-region (p1 p2)
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Remove &#8220;//&#8221; (if any) in the beginning of each line of selected text."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"r"</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> ((deactivate-mark <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-excursion</SPAN>
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">goto-char</SPAN> p2)
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">while</SPAN> (&gt;= (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point</SPAN>) p1)
        (my-uncomment-current-line)
        (previous-line) )) ))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">If your code is for the public, you may want to change the &#8220;my-&#8221; prefix to something more unique, such as your name's initials. &#8220;my-&#8221; is not a good prefix because otherwise lots of packages will have &#8220;my-this&#8221;, &#8220;my-that&#8221;, which contributes name conflict. Elisp does not have namespaces. &#12308;&#10148;&nbsp;<A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_library_system.html">Emacs Lisp's Library System: What's require, load, load-file, autoload, feature?</A>&#12309;</P>
<DIV class=rltd style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; DISPLAY: table; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<UL style="MARGIN: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_comment_handling.html">Emacs Lisp: How to Write Comment/Uncomment Command in Major Mode</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_syntax_coloring.html">How to Write a Emacs Major Mode for Syntax Coloring</A></LI></UL></DIV><BR class=Apple-interchange-newline>