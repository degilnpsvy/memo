<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">How to Write a Emacs Major Mode for Syntax Coloring</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2008-11-30</TIME>, &#8230;,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2015-06-26</TIME></DIV>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This page shows you how to write a emacs major mode to do syntax coloring of your own language.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Problem</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">You want to write a major mode for a new language, so that the keywords of the language will be highlighted.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Suppose your language source code looks like this:</P><PRE class=code style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(243,243,243); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Sin[x]^2 + Cos[y]^2 == 1
Pi^2/6 == Sum[1/x^2,{x,1,Infinity}]</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">You want the words &#8220;Sin&#8221;, &#8220;Cos&#8221;, &#8220;Sum&#8221;, colored as functions, and &#8220;Pi&#8221; and &#8220;Infinity&#8221; colored as constants.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Solution</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Save the following in a file.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">test. my-math-mode, my first major mode
</SPAN>
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> my-highlights
      '((<SPAN class=string style="COLOR: rgb(139,34,82)">"Sin\\|Cos\\|Sum"</SPAN> . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-function-name-face</SPAN>)
        (<SPAN class=string style="COLOR: rgb(139,34,82)">"Pi\\|Infinity"</SPAN> . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-constant-face</SPAN>)))

(<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-derived-mode</SPAN> my-math-mode fundamental-mode
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-defaults</SPAN> '(my-highlights))
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">mode-name</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"math lang"</SPAN>))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The string<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">"Sin\\|Cos\\|Sum"</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a regex, the<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">font-lock-function-name-face</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a pre-defined variable that holds the value for the default font face used for function keywords.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The line<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">define-derived-mode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>defines your mode, named &#8220;my-math-mode&#8221;, based on the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">fundamental-mode</CODE>(which is the most basic mode).</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The line<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(setq font-lock-defaults '(my-highlights))</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>sets up the syntax highlighting for your mode.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The line<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(setq mode-name "math lang")</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>defines the name to be displayed on the status line, so users know what mode they are in. Otherwise it'll show as<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">*invalid*</CODE>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Now, just select the above code and call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">eval-region</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to let emacs know about it. Now, when you call &#8220;math-lang-mode&#8221;, emacs will now syntax color the buffer's text. (you must have<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">font-lock-mode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>on, if not, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">font-lock-mode</CODE>.) Here's what it looks like:</P><FIGURE style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; MARGIN-LEFT: 0px; MARGIN-TOP: 0px; LETTER-SPACING: normal; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><IMG style="MAX-WIDTH: 100%; HEIGHT: auto; MARGIN: 0px; box-shadow: silver 3px 3px 4px 3px" alt="emacs my math major mode screen" src="http://ergoemacs.org/emacs/i/emacs_my_math_major_mode_screen.png" width=423 height=239><FIGCAPTION style="MARGIN: 0px 0px 0px 1px">emacs my math major mode screen</FIGCAPTION></FIGURE>
<UL style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<LI style="FONT-FAMILY: sans-serif"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Font-Lock-Mode.html">(info "(elisp) Font Lock Mode")</A></SPAN></LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Major-Modes.html">(info "(elisp) Major Modes")</A></SPAN></LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Faces-for-Font-Lock.html">(info "(elisp) Faces for Font Lock")</A></SPAN></LI></UL>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Here's another simple example:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_html6-mode.html">Emacs Lisp: html6-mode</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Writing a Mode for a Language that Has Hundreds of Keywords</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Typically, a language has hundreds of keywords. Elisp has a way to generate regex for your keywords.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Suppose you are writing a mode for the<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none; box-shadow: 0px 1px" href="http://xahsl.org/sl/ls.html">Linden Scripting Language</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>(LSL). LSL has about 553 keywords. First, here's a sample of LSL source code so you get some idea of how we want it colored.</P><PRE class=lsl style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(252,244,248); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">// </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">sample LSL file
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">// </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Examples of variable declaration and assignment:
</SPAN><SPAN class=type style="COLOR: rgb(34,139,34)">integer</SPAN> score = 0;
<SPAN class=type style="COLOR: rgb(34,139,34)">string</SPAN> mySay = <SPAN class=string style="COLOR: rgb(139,34,82)">"i &#9829; you"</SPAN>;
<SPAN class=type style="COLOR: rgb(34,139,34)">vector</SPAN> v = &lt;3,4,5&gt;;
<SPAN class=type style="COLOR: rgb(34,139,34)">list</SPAN> myList= [2,4,7,3];

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">// </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Example of defining a function.
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">// </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">built-in function's names start with &#8220;ll&#8221; (Linden Library).
</SPAN><SPAN class=type style="COLOR: rgb(34,139,34)">integer</SPAN> sum(<SPAN class=type style="COLOR: rgb(34,139,34)">integer</SPAN> a, <SPAN class=type style="COLOR: rgb(34,139,34)">integer</SPAN> b)
{
    <SPAN class=type style="COLOR: rgb(34,139,34)">integer</SPAN> result = a + b;
    <SPAN class=keyword style="COLOR: rgb(160,32,240)">return</SPAN> result;
}

 <SPAN class=keyword style="COLOR: rgb(160,32,240)">default</SPAN>
 {
     <SPAN class=constant style="COLOR: rgb(0,139,139)">state_entry</SPAN>()
     {
         <SPAN class=function-name style="COLOR: rgb(0,0,255)">llSay</SPAN>(0, mySay);
     }

     <SPAN class=constant style="COLOR: rgb(0,139,139)">touch_start</SPAN>(<SPAN class=type style="COLOR: rgb(34,139,34)">integer</SPAN> total_number)
     {
         <SPAN class=keyword style="COLOR: rgb(160,32,240)">if</SPAN> (score == 1) {
             <SPAN class=function-name style="COLOR: rgb(0,0,255)">llSay</SPAN>(0, mySay);
         } <SPAN class=keyword style="COLOR: rgb(160,32,240)">else</SPAN> {
             <SPAN class=function-name style="COLOR: rgb(0,0,255)">llWhisper</SPAN>(0, <SPAN class=string style="COLOR: rgb(139,34,82)">"Ouch!"</SPAN>);
         }
     }
 }</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Each type of keyword uses a different color:</P>
<UL style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<LI style="FONT-FAMILY: sans-serif"><SPAN style="COLOR: rgb(178,34,34)">RED</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; comment</LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN style="COLOR: rgb(34,139,34)">GREEN</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; type</LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN style="COLOR: rgb(160,32,240)">PURPLE</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; &#8220;keyword&#8221;</LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN style="COLOR: rgb(122,55,139)">PINK</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; event</LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN style="COLOR: rgb(0,0,255)">BLUE</SPAN><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; function</LI></UL>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Here's the code.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">mylsl-mode.el --- sample major mode for editing LSL.
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Copyright &#169; 2015, by you
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Author: your name ( your email )
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Version: 2.0.13
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Created: 26 Jun 2015
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Keywords: languages
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Homepage: http://ergoemacs.org/emacs/elisp_syntax_coloring.html
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">This file is not part of GNU Emacs.
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">License:
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">You can redistribute this program and/or modify it under the terms of the GNU General Public License version 2.
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Commentary:
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">short description here
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">full doc on how to use here
</SPAN>

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Code:
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">define several category of keywords
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-keywords '(<SPAN class=string style="COLOR: rgb(139,34,82)">"break"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"default"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"do"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"else"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"for"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"if"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"return"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"state"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"while"</SPAN>) )
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-types '(<SPAN class=string style="COLOR: rgb(139,34,82)">"float"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"integer"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"key"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"list"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"rotation"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"string"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"vector"</SPAN>))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-constants '(<SPAN class=string style="COLOR: rgb(139,34,82)">"ACTIVE"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"AGENT"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"ALL_SIDES"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"ATTACH_BACK"</SPAN>))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-events '(<SPAN class=string style="COLOR: rgb(139,34,82)">"at_rot_target"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"at_target"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"attach"</SPAN>))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-functions '(<SPAN class=string style="COLOR: rgb(139,34,82)">"llAbs"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"llAcos"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"llAddToLandBanList"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"llAddToLandPassList"</SPAN>))

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">generate regex string for each category of keywords
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-keywords-regexp (<SPAN class=keyword style="COLOR: rgb(160,32,240)">regexp-opt</SPAN> mylsl-keywords 'words))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-type-regexp (<SPAN class=keyword style="COLOR: rgb(160,32,240)">regexp-opt</SPAN> mylsl-types 'words))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-constant-regexp (<SPAN class=keyword style="COLOR: rgb(160,32,240)">regexp-opt</SPAN> mylsl-constants 'words))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-event-regexp (<SPAN class=keyword style="COLOR: rgb(160,32,240)">regexp-opt</SPAN> mylsl-events 'words))
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-functions-regexp (<SPAN class=keyword style="COLOR: rgb(160,32,240)">regexp-opt</SPAN> mylsl-functions 'words))

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">create the list for font-lock.
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">each category of keyword is given a particular face
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-font-lock-keywords
      `(
        (,mylsl-type-regexp . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-type-face</SPAN>)
        (,mylsl-constant-regexp . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-constant-face</SPAN>)
        (,mylsl-event-regexp . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-builtin-face</SPAN>)
        (,mylsl-functions-regexp . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-function-name-face</SPAN>)
        (,mylsl-keywords-regexp . <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-keyword-face</SPAN>)
        <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">note: order above matters, because once colored, that part won't change.
</SPAN>        <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">in general, longer words first
</SPAN>        ))

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;;;</SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">###autoload
</SPAN>(<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-derived-mode</SPAN> mylsl-mode fundamental-mode
  <SPAN class=string style="COLOR: rgb(139,34,82)">"lsl mode"</SPAN>
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Major mode for editing LSL (Linden Scripting Language)&#8230;"</SPAN>

  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">code for syntax highlighting
</SPAN>  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">font-lock-defaults</SPAN> '((mylsl-font-lock-keywords))))

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">clear memory. no longer needed
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-keywords <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-types <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-constants <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-events <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-functions <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">clear memory. no longer needed
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-keywords-regexp <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-types-regexp <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-constants-regexp <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-events-regexp <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)
(<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> mylsl-functions-regexp <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>)

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">add the mode to the `features' list
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">provide</SPAN> 'mylsl-mode)

<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">Local Variables:
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">coding: utf-8
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">End:
</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">mylsl-mode.el ends here</SPAN></PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Note that the highlighting mechanism of<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">font-lock-defaults</VAR><SPAN class=Apple-converted-space>&nbsp;</SPAN>is based on first-come-first-serve basis. Once a piece of text got its coloring, it won't be changed. So, the order of your list is important. In general, put longer length keywords first. (this won't fix all cases where a keyword matches part of other keywords. If your language has a lot such keywords, you need to use other forms to solve this problem.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Search_002dbased-Fontification.html">(info "(elisp) Search-based Fontification")</A></SPAN>)</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">`( ,a ,b &#8230;)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a lisp special syntax to evaluate parts of elements inside the list. Inside the paren, elements preceded by a<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">,</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>will be evaluated.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In the above, we based our mode on<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">c-mode</CODE>, because the syntax is similar. Basing on a similar language's mode will save you time in coding many features, such as handling comment and indentation.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">To understand the line:</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">provide</SPAN> 'mylsl-mode)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">See:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_feature_name.html">What's Emacs Lisp feature?</A></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_library_system.html">Emacs Lisp's Library System: What's require, load, load-file, autoload, feature?</A>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Now, to run the code, call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">eval-buffer</CODE>. &#12308;&#10148;&nbsp;<A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_eval_lisp_code.html">Emacs: How to Evaluate Emacs Lisp Code</A>&#12309;</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Open the LSL language sample file given above, then call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">mylsl-mode</CODE>. Here's the result:</P><FIGURE style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; MARGIN-LEFT: 0px; MARGIN-TOP: 0px; LETTER-SPACING: normal; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><IMG style="MAX-WIDTH: 100%; HEIGHT: auto; MARGIN: 0px; box-shadow: silver 3px 3px 4px 3px" alt="emacs sample mylsl-mode" src="http://ergoemacs.org/emacs/i/emacs_sample_mylsl-mode.png" width=584 height=664><FIGCAPTION style="MARGIN: 0px 0px 0px 1px">sample mylsl-mode syntax highlighting result.</FIGCAPTION></FIGURE>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">How to Name Your Mode</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_naming_your_mode.html">Emacs Lisp: How to Name Your Major Mode</A></P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Full Featured Language Mode</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In this tutorial, we only covered syntax coloring of<SPAN class=Apple-converted-space>&nbsp;</SPAN><B>fixed strings</B>.</P>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Complex Syntax Coloring</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">For many language, the syntax coloring are not fixed set of strings. For example, in XML, you have<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">&lt;xyz&gt;&#8230;&lt;/xyz&gt;</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>pattern where the &#8220;xyz&#8221; can be anything.</P><FIGURE style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; MARGIN-LEFT: 0px; MARGIN-TOP: 0px; LETTER-SPACING: normal; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><IMG style="MAX-WIDTH: 100%; HEIGHT: auto; MARGIN: 0px; box-shadow: silver 3px 3px 4px 3px" alt="emacs html-mode syntax coloring screenshot 2013-07-31" src="http://ergoemacs.org/emacs/i/emacs_html-mode_syntax_coloring_screenshot_2013-07-31.png" width=616 height=149><FIGCAPTION style="MARGIN: 0px 0px 0px 1px">emacs<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); MARGIN: 0px; BACKGROUND-COLOR: transparent">html-mode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>syntax coloring screenshot</FIGCAPTION></FIGURE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Note color and underline for text inside the &#8220;h1&#8221; tag. Even though the text isn't any of the keyword in HTML language, but it needs to be syntax colored in a particular way.</P>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Features of a Major Mode</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">A full featured language mode should also handle comments, indentation, keyword completion, function documentation lookup, function template insertion, graphical menu, supporting emacs's customize-group scheme, or any other features that may be useful for coding the language your mode is designed for.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The following will help you implement other features for a major mode:</P>
<UL style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_comment_handling.html">Emacs Lisp: How to Write Comment/Uncomment Command in Major Mode</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_keyword_completion.html">Emacs Lisp: Implementing Keyword Completion</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/emacs_lookup_ref.html">Implement Reference Lookup</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_menu_for_major_mode.html">How to Define Keymap and Menu in Your Emacs Major Mode</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/emacs_templates.html">Adding Templates to your mode by using YASnippet</A></LI></UL>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Major-Mode-Conventions.html">(info "(elisp) Major Mode Conventions")</A></SPAN></P>
<DIV class=rltd style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; DISPLAY: table; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<UL style="MARGIN: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/emacs_custom_system.html">Emacs: Customize System Tutorial</A></LI></UL></DIV><BR class=Apple-interchange-newline>