<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">How to Define Keymap and Menu in Your Emacs Major Mode</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2009-02-20</TIME>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2010-07-17</TIME></DIV>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This page shows you how to define a keyboard shortcut set, and graphical menu, for people who want to write a emacs major mode. You should know the basics of writing a major mode. If not, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_syntax_coloring.html">How to Write a Emacs Major Mode for Syntax Coloring</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Problem</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">You want to add a keyboard shortcut set (aka keybinding), and a menu, for a major mode you are writing.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Your key set will become active, and menu become visible, only when user switches to your major mode.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Solution</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The following shows a working template for defining a major mode with its own custom keys and menu.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">define a var for your keymap, so that you can set it as local map
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">(meaning, active only when your mode is on)
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defvar</SPAN> xlsl-mode-map <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"Keymap for xlsl-mode"</SPAN>)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Both keybindings and graphical menu, are defined in emacs using a keymap. A keymap is basically a elisp datatype. It is a list with a particular structure, and can contain keymaps in its elements.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Format-of-Keymaps.html">(info "(elisp) Format of Keymaps")</A></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In the above code, we declare a variable &#8220;xlsl-mode-map&#8221; using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">defvar</CODE>. This variable will hold the keymap.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">definition for your keybinding and menu
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">when</SPAN> (<SPAN class=keyword style="COLOR: rgb(160,32,240)">not</SPAN> xlsl-mode-map) <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">if it is not already defined
</SPAN>
  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">assign command to keys
</SPAN>  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> xlsl-mode-map (<SPAN class=function-name style="COLOR: rgb(0,0,255)">make-sparse-keymap</SPAN>))
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kbd</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"C-c C-c"</SPAN>) 'xlsl-copy-all)
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kbd</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"C-c C-l"</SPAN>) 'xlsl-syntax-check)
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kbd</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"C-c C-r"</SPAN>) 'xlsl-lookup-lsl-ref)
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kbd</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"C-c C-g"</SPAN>) 'xlsl-convert-rgb)
  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">&#8230; more here &#8230;
</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map [remap comment-dwim] 'xlsl-comment-dwim)
   <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">above: make your comment command &#8220;xlsl-comment-dwim&#8221; use the current key for &#8220;comment-dwim&#8221; (because user may have changed the key for &#8220;comment-dwim&#8221;)
</SPAN>
  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">define your menu
</SPAN>  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map [menu-bar] (<SPAN class=function-name style="COLOR: rgb(0,0,255)">make-sparse-keymap</SPAN>))

  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> ((menuMap (<SPAN class=function-name style="COLOR: rgb(0,0,255)">make-sparse-keymap</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"LSL"</SPAN>)))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map [menu-bar xlsl] (<SPAN class=keyword style="COLOR: rgb(160,32,240)">cons</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"LSL"</SPAN> menuMap))

    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [about]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"About xlsl-mode"</SPAN> . xlsl-about))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [customize]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"Customize xlsl-mode"</SPAN> . xlsl-customize))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [separator]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"--"</SPAN>))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [convert-rgb]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"Convert #rrggbb under cursor"</SPAN> . xlsl-convert-rgb))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [copy-all]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"Copy whole buffer content"</SPAN> . xlsl-copy-all))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [syntax-check]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"Check syntax"</SPAN> . xlsl-syntax-check))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> menuMap [lookup-onlne-doc]
      '(<SPAN class=string style="COLOR: rgb(139,34,82)">"Lookup ref of word under cursor"</SPAN> . xlsl-lookup-lsl-ref))))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In the above, we create a keymap datatype using<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">make-sparse-keymap</CODE>, and set it to the variable. This is done by first checking if the var is defined, because otherwise loading your package twice might screw up the keymap (when the map is complex involving inherited keymap etc.). Even if you can't imagine how your package may be loaded twice, but someone probably will. It is a good practice to make sure your package works fine even if loaded multiple times.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In the above code, the definition are grouped in 2 parts. The first group of lines define the keys, and the second group define menu.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The lines that define keys are easy to understand. No need explanation here. However, you should know about the convention of key choices for major modes. Basically, try to stick to &#12304;<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">Ctrl</KBD>+<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">c</KBD>&nbsp;<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">Ctrl</KBD>+<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">&#8249;letter&#8250;</KBD>&#12305; space, and your letter should not be any of {h, g, ?}. This is to make sure that your keys are compatible with the rest of emacs.<SPAN class=Apple-converted-space>&nbsp;</SPAN><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Key-Binding-Conventions.html">(info "(elisp) Key Binding Conventions")</A></SPAN></P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">For the menu part, it is a bit more complex to explain. Just make sure your own code follows the structure exactly.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Basically, we create another keymap for the menu and attach it to the &#8220;xlsl-mode-map&#8221; keymap, as a branch. This is done by the line</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map [menu-bar] (<SPAN class=function-name style="COLOR: rgb(0,0,255)">make-sparse-keymap</SPAN>))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Now, any branch of &#8220;[menu-bar]&#8221; will become a menu item.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Then, we define a keymap for the menu panel named &#8220;LSL&#8221;, and attach it to the &#8220;[menu-bar]&#8221; keymap. This is done in the line:</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=function-name style="COLOR: rgb(0,0,255)">define-key</SPAN> xlsl-mode-map [menu-bar xlsl] (<SPAN class=keyword style="COLOR: rgb(160,32,240)">cons</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"LSL"</SPAN> menuMap))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Now, anything attached to &#8220;[menu-bar xlsl]&#8221; will be a menu item in that panel.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">After the above, things are easy to understand. We simply add each menu item to that menu panel. For example, a line typically look like this:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(define-key menuMap [about] '("About xlsl-mode" . xlsl-about))</CODE>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">If you want a bit more detailed explanation on how emacs's keymap and menu system works, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_menu.html">How to Add Menu in Emacs</A>.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> xlsl-mode ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Major mode for editing LSL (Linden Scripting Language).

&#8230;"</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kill-all-local-variables</SPAN>)

  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">major-mode</SPAN> 'xlsl-mode)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">mode-name</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"LSL"</SPAN>) <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">for display purposes in mode line
</SPAN>  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">use-local-map</SPAN> xlsl-mode-map)

  <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">&#8230; other code here
</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">run-hooks</SPAN> 'xlsl-mode-hook))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">In the above, we define the major mode function itself. The interesting line here is the<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(use-local-map xlsl-mode-map)</CODE>. This makes sure that your keybindings and menu will be active only when user is in your mode.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">put your mode symbol into the list &#8220;features&#8221;, so that user can
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">call (require 'xlsl-mode), which will load your code only when
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">needed
</SPAN>(<SPAN class=keyword style="COLOR: rgb(160,32,240)">provide</SPAN> 'xlsl-mode)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Finally, we call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(provide 'xlsl-mode)</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to put the symbol on the &#8220;features&#8221; variable that holds a list of symbols. For detail of exactly what {provide, require, feature} do, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_library_system.html">Emacs Lisp's Library System: What's require, load, load-file, autoload, feature?</A>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2010-07-17</TIME><SPAN class=Apple-converted-space>&nbsp;</SPAN>Thanks to Robbie Morrison for correcting a extraneously placed apostrophe in the menu code example.</P>
<DIV class=rltd style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; DISPLAY: table; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<UL style="MARGIN: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_syntax_coloring.html">How to Write a Emacs Major Mode for Syntax Coloring</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_comment_handling.html">Emacs Lisp: How to Write Comment/Uncomment Command in Major Mode</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_menu.html">How to Add Menu in Emacs</A></LI></UL></DIV><BR class=Apple-interchange-newline>