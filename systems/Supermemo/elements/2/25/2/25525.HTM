/**<BR>&nbsp;* platform_device_add_resources - add resources to a platform device<BR>&nbsp;* @pdev: platform device allocated by platform_device_alloc to add resources to<BR>&nbsp;* @res: set of resources that needs to be allocated for the device<BR>&nbsp;* @num: number of resources<BR>&nbsp;*<BR>&nbsp;* Add a copy of the resources to the platform device.&nbsp; The memory<BR>&nbsp;* associated with the resources will be freed when the platform device is<BR>&nbsp;* released.<BR>&nbsp;*/<BR>int platform_device_add_resources(struct platform_device *pdev,<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; const struct resource *res, unsigned int num)<BR>{<BR>&nbsp;struct resource *r = NULL;</P>
<P>&nbsp;if (res) {<BR>&nbsp;&nbsp;r = kmemdup(res, sizeof(struct resource) * num, GFP_KERNEL);<BR>&nbsp;&nbsp;if (!r)<BR>&nbsp;&nbsp;&nbsp;return -ENOMEM;<BR>&nbsp;}</P>
<P>&nbsp;kfree(pdev-&gt;resource);<BR>&nbsp;pdev-&gt;resource = r;<BR>&nbsp;pdev-&gt;num_resources = num;<BR>&nbsp;return 0;<BR>}<BR>EXPORT_SYMBOL_GPL(platform_device_add_resources);