<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs Lisp Examples, page 2</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2005-11-30</TIME>, &#8230;,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2014-07-08</TIME></DIV>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Reference Lookup</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This example shows the use of<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">thing-at-point</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">browse-url</CODE>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">It will look up the word under the cursor in a online dictionary.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> word-definition-lookup ()
<SPAN class=string style="COLOR: rgb(139,34,82)">"Look up the word under cursor in a browser."</SPAN>
 (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
 (browse-url
   (<SPAN class=keyword style="COLOR: rgb(160,32,240)">concat</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"http://www.answers.com/main/ntquery?s="</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">thing-at-point</SPAN> 'symbol))))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">For detail, see:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/emacs_lookup_ref.html">Emacs: Command to Lookup Google, Wikipedia, Dictionary, Programing Reference</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Change Newline Character</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This example shows how to define a function that takes a file path and process the file.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> to-unix-eol (fPath)
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Change file's line ending to unix convention."</SPAN>
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> (myBuffer)
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> myBuffer (<SPAN class=function-name style="COLOR: rgb(0,0,255)">find-file</SPAN> fPath))

    (set-buffer-file-coding-system 'unix) <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">or 'mac or 'dos
</SPAN><SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">do this or that
</SPAN>
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">save-buffer</SPAN>)
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kill-buffer</SPAN> myBuffer)
   )
)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">For example, if the file<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">~/jane/readme.txt</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is a Windows file, you can change its line ending by executing the following:<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">(to-unix-eol "~/jane/readme.txt")</CODE>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">You can also edit the line<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">;; do this or that</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to make this function do other things, such as deleting or replacing some words in the file.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The following example shows how to apply a file processing function to a list of files.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">mapc</SPAN> 'to-unix-eol
 (<SPAN class=keyword style="COLOR: rgb(160,32,240)">list</SPAN>
<SPAN class=string style="COLOR: rgb(139,34,82)">"~/jane/myfile1"</SPAN>
<SPAN class=string style="COLOR: rgb(139,34,82)">"~/jane/myfile2"</SPAN>
<SPAN class=string style="COLOR: rgb(139,34,82)">"~/jane/myfile3"</SPAN>
<SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">&#8230;
</SPAN>  )
)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The following code is a example of making a file-processing function that applies to all marked files in dired.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> dired-2unix-marked-files ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Change to unix line ending for marked (or next arg) files."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">mapc</SPAN> 'to-unix-eol (dired-get-marked-files))
)</PRE>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Delete Current File</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This example shows command that lets you delete the current file. Note here that elisp is used to: {manipulate buffer, manipulate file, prompt user}.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> delete-current-file ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Delete the file associated with the current buffer.
Delete the current buffer too.
If no file is associated, just close buffer without prompt for save."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> (currentFile)
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> currentFile (<SPAN class=function-name style="COLOR: rgb(0,0,255)">buffer-file-name</SPAN>))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">when</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">yes-or-no-p</SPAN> (<SPAN class=keyword style="COLOR: rgb(160,32,240)">concat</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"Delete file?: "</SPAN> currentFile))
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">kill-buffer</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">current-buffer</SPAN>))
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">when</SPAN> (<SPAN class=keyword style="COLOR: rgb(160,32,240)">not</SPAN> (<SPAN class=keyword style="COLOR: rgb(160,32,240)">equal</SPAN> currentFile <SPAN class=keyword style="COLOR: rgb(160,32,240)">nil</SPAN>))
        (<SPAN class=function-name style="COLOR: rgb(0,0,255)">delete-file</SPAN> currentFile) ) ) ) )</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Detail at<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_delete-current-file.html">Emacs Lisp: Delete Current File</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Highlighting Lines</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This example shows you how to make lines containing the words &#8220;ERROR:&#8221; or &#8220;NOTE:&#8221; highlighted, whenever a file ending in &#8220;log&#8221; is opened.</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> highlite-it ()
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Highlight certain lines&#8230;"</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">if</SPAN> (<SPAN class=keyword style="COLOR: rgb(160,32,240)">equal</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"log"</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">file-name-extension</SPAN> (<SPAN class=function-name style="COLOR: rgb(0,0,255)">buffer-file-name</SPAN>)))
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">progn</SPAN>
        (highlight-lines-matching-regexp <SPAN class=string style="COLOR: rgb(139,34,82)">"ERROR:"</SPAN> 'hi-red-b)
        (highlight-lines-matching-regexp <SPAN class=string style="COLOR: rgb(139,34,82)">"NOTE:"</SPAN> 'hi-blue-b))))

(<SPAN class=function-name style="COLOR: rgb(0,0,255)">add-hook</SPAN> '<SPAN class=variable-name style="COLOR: rgb(159,81,45)">find-file-hook</SPAN> 'highlite-it)</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">add-hook</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>line will make emacs call &#8220;highlite-it&#8221; whenever a file is opened. It works by adding the function &#8220;highlite-it&#8221; to the list in the variable<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">find-file-hook</VAR>.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">find-file</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>is the function that open files. find-file-hook is a variable containing list of functions that will run when find-file is run.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Convert Text to Table</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This example shows you how to grab the current paragraph the cursor is on, and do some transformation on it.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This example turns a block of text into a HTML table. The command asks user to enter a string pattern as the separator. For example:</P><PRE class=code style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(243,243,243); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">a  b  c
1  2  3
this  and  that</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">with double space as separator, becomes</P><PRE class=html style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(243,230,217); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">table</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">border</SPAN>=<SPAN class=string style="COLOR: rgb(139,34,82)">"1"</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">cellpadding</SPAN>=<SPAN class=string style="COLOR: rgb(139,34,82)">"5"</SPAN> <SPAN class=variable-name style="COLOR: rgb(159,81,45)">cellspacing</SPAN>=<SPAN class=string style="COLOR: rgb(139,34,82)">"0"</SPAN>&gt;
&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">tr</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;a&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;b&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;c&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">tr</SPAN>&gt;
&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">tr</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;1&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;2&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;3&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">tr</SPAN>&gt;
&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">tr</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;this&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;and&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;that&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">td</SPAN>&gt;&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">tr</SPAN>&gt;
&lt;/<SPAN class=function-name style="COLOR: rgb(0,0,255)">table</SPAN>&gt;</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">and is rendered in browser like this:</P>
<TABLE style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px" cellSpacing=0 cellPadding=5 border=1>
<TBODY>
<TR>
<TD>a</TD>
<TD>b</TD>
<TD>c</TD></TR>
<TR>
<TD>1</TD>
<TD>2</TD>
<TD>3</TD></TR>
<TR>
<TD>this</TD>
<TD>and</TD>
<TD>that</TD></TR></TBODY></TABLE><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> make-html-table-string (textblock delim)
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Turn a text string into a HTML table.
See make-html-table."</SPAN>
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> ()
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> textblock (<SPAN class=function-name style="COLOR: rgb(0,0,255)">replace-regexp-in-string</SPAN> delim <SPAN class=string style="COLOR: rgb(139,34,82)">"&lt;/td&gt;&lt;td&gt;"</SPAN> textblock))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> textblock (<SPAN class=function-name style="COLOR: rgb(0,0,255)">replace-regexp-in-string</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"\n"</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"&lt;/td&gt;&lt;/tr&gt;\n&lt;tr&gt;&lt;td&gt;"</SPAN> textblock))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> textblock (<SPAN class=keyword style="COLOR: rgb(160,32,240)">substring</SPAN> textblock 0 -8)) <SPAN class=comment-delimiter style="COLOR: rgb(178,34,34)">;; </SPAN><SPAN class=comment style="COLOR: rgb(178,34,34)">delet the beginning &#8220;&lt;tr&gt;&lt;td&gt;&#8221; in last line
</SPAN>    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">concat</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"&lt;table border=\"1\" cellpadding=\"5\" cellspacing=\"0\"&gt;\n&lt;tr&gt;&lt;td&gt;"</SPAN> textblock <SPAN class=string style="COLOR: rgb(139,34,82)">"&lt;/table&gt;"</SPAN>)
    ))

(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> make-html-table (sep)
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Turn the current paragraph into a HTML table.

The &#8220;current paragraph&#8221; is defined as having empty lines before and
after the block of text the cursor is on.

For example:

a*b*c
1*2*3
this*and*that

with &#8220;*&#8221; as separator, becomes

&lt;table border=\"1\" cellpadding=\"5\" cellspacing=\"0\"&gt;
&lt;tr&gt;&lt;td&gt;a&lt;/td&gt;&lt;td&gt;b&lt;/td&gt;&lt;td&gt;c&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;this&lt;/td&gt;&lt;td&gt;and&lt;/td&gt;&lt;td&gt;that&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;"</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"sEnter string pattern for column separation:"</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> (bds p1 p2 myStr)
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> bds (<SPAN class=function-name style="COLOR: rgb(0,0,255)">bounds-of-thing-at-point</SPAN> 'paragraph))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> p1 (+ (<SPAN class=keyword style="COLOR: rgb(160,32,240)">car</SPAN> bds) 1))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> p2 (<SPAN class=keyword style="COLOR: rgb(160,32,240)">cdr</SPAN> bds))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> myStr (<SPAN class=function-name style="COLOR: rgb(0,0,255)">buffer-substring-no-properties</SPAN> p1 p2))
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">delete-region</SPAN> p1 p2)
    (<SPAN class=function-name style="COLOR: rgb(0,0,255)">insert</SPAN> (make-html-table-string myStr sep) <SPAN class=string style="COLOR: rgb(139,34,82)">"\n"</SPAN>)
  ))</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">For a detailed explanation on the code, see<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_make-html-table.html">Emacs Lisp: How to Write a make-html-table Command</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Insert Vertical Column of Numbers</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs 24 has a new command<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">rectangle-number-lines</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#12304;<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">Ctrl</KBD>+<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">x</KBD>&nbsp;<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">r</KBD>&nbsp;<KBD style="BORDER-TOP: rgb(194,194,194) 1px solid; FONT-FAMILY: sans-serif; BORDER-RIGHT: rgb(194,194,194) 1px solid; BORDER-BOTTOM: rgb(194,194,194) 1px solid; BORDER-LEFT: rgb(194,194,194) 1px solid; BACKGROUND-COLOR: rgb(240,240,240); border-radius: 4px; box-shadow: silver 1px 1px">N</KBD>&#12305;. It will insert a vertical column of numbers into a block of text, like this:</P><PRE class=code style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(243,243,243); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">  1. x
  2. x
  3. x
  4. x</PRE>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">For emacs 23 users, you can define your own, like this:</P><PRE class=emacs-lisp style="BORDER-TOP: gray thin solid; BORDER-RIGHT: gray thin solid; WHITE-SPACE: pre-wrap; WORD-SPACING: 0px; MIN-WIDTH: 44%; BORDER-BOTTOM: gray thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium 'DejaVu Sans Mono', monospace; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: gray thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(245,255,245); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">(<SPAN class=keyword style="COLOR: rgb(160,32,240)">defun</SPAN> insert-column-counter (n)
  <SPAN class=string style="COLOR: rgb(139,34,82)">"Insert a sequence of numbers vertically.
For example, if your text is:

a b
c d
e f

and your cursor is after &#8220;a&#8221;, then calling this function with argument
3 will change it to become:

a1 b
c2 d
e3 f

If there are not enough existing lines after the cursor
when this function is called, it aborts at the last line.

This command is conveniently used together with `kill-rectangle' and `string-rectangle'."</SPAN>
  (<SPAN class=function-name style="COLOR: rgb(0,0,255)">interactive</SPAN> <SPAN class=string style="COLOR: rgb(139,34,82)">"nEnter the max integer: "</SPAN>)
  (<SPAN class=keyword style="COLOR: rgb(160,32,240)">let</SPAN> ((i 1) colpos )
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> colpos (- (<SPAN class=function-name style="COLOR: rgb(0,0,255)">point</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">line-beginning-position</SPAN>)))
    (<SPAN class=keyword style="COLOR: rgb(160,32,240)">while</SPAN> (&lt;= i n)
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">insert</SPAN> (<SPAN class=keyword style="COLOR: rgb(160,32,240)">number-to-string</SPAN> i))
      (<SPAN class=function-name style="COLOR: rgb(0,0,255)">forward-line</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">beginning-of-line</SPAN>) (<SPAN class=function-name style="COLOR: rgb(0,0,255)">forward-char</SPAN> colpos)
      (<SPAN class=keyword style="COLOR: rgb(160,32,240)">setq</SPAN> i (1+ i))
      )
))</PRE>