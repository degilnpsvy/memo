<H1 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs Lisp's Library System: What's require, load, load-file, autoload, feature?</H1><SECTION class=buy-book style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; FLOAT: right; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; LETTER-SPACING: normal; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(210,254,185); MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 1rem">Buy<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/buy_xah_emacs_tutorial.html">Xah Emacs Tutorial</A>. Master emacs benefits for life.
</SECTION>
<DIV class=byline style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<ADDRESS class=author style="FONT-STYLE: normal; DISPLAY: inline"><A style="TEXT-DECORATION: none" href="mailto:xahlee@gmail.com" rel=author>Xah Lee</A></ADDRESS>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2010-07-13</TIME>, &#8230;,<SPAN class=Apple-converted-space>&nbsp;</SPAN><TIME style="FONT-FAMILY: monospace; WHITE-SPACE: nowrap">2014-04-10</TIME></DIV>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This page explains emacs library system. For example, what's the difference between library, package, features? And what's the difference between {<CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">load-file</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">load</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">require</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">autoload</CODE>}?</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">File/Package Loading Mechanisms</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs lisp's module system is a primitive system, centered on loading file, with some slightly high level things such as its {<VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">features</VAR>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">autoload</CODE>,<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">require</CODE>}. However, nothing is strict or enforced by elisp.</P>
<TABLE class=nrm style="WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-COLLAPSE: collapse; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; MARGIN-LEFT: 0px; MARGIN-TOP: 0px; LETTER-SPACING: normal; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<TBODY>
<TR>
<TH style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(215,228,242)">Function Name</TH>
<TH style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(215,228,242)">Purpose</TH>
<TH style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(215,228,242)">Tech Detail</TH>
<TH style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px; BACKGROUND-COLOR: rgb(215,228,242)">Comment</TH></TR>
<TR>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">load-file</CODE></TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Load a file.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Load one specific file. (&#8220;.el&#8221; or &#8220;.elc&#8221; are not auto added, but &#8220;.gz&#8221; is.)</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Use this for a SPECIFIC file.</TD></TR>
<TR>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">load</CODE></TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Load a file.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Load a file by searching thru var<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">load-path</VAR>. Argument should be just the file name without full path, such as &#8220;undo&#8221;. It'll auto add &#8220;.elc&#8221; for compiled version if exist, or add &#8220;.el&#8221;, or with &#8220;.gz&#8221;.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Use this if the exact file path is not known in advance.</TD></TR>
<TR>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">require</CODE></TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Load a package if it has not already been loaded.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Checks the var<SPAN class=Apple-converted-space>&nbsp;</SPAN><VAR class=elisp style="WHITE-SPACE: nowrap; COLOR: green">features</VAR>, if symbol is not there, then call<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">load</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>to load it.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Best used in elisp source code, similar to other lang's &#8220;require&#8221; or &#8220;import&#8221;.</TD></TR>
<TR>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px"><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">autoload</CODE></TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Load a file only when a function is called.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">Associate a function name with a file path. When the function is called, load the file, and execute the function.</TD>
<TD style="BORDER-TOP: rgb(128,128,128) thin solid; BORDER-RIGHT: rgb(128,128,128) thin solid; BORDER-BOTTOM: rgb(128,128,128) thin solid; PADDING-TOP: 0px; PADDING-LEFT: 0px; BORDER-LEFT: rgb(128,128,128) thin solid; PADDING-RIGHT: 0px">If you are writing a major mode, have your package installation go by<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">autoload</CODE>if possible. It saves startup time.</TD></TR></TBODY></TABLE>
<UL style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<LI style="FONT-FAMILY: sans-serif"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/How-Programs-Do-Loading.html">(info "(elisp) How Programs Do Loading")</A></SPAN></LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/emacs/Lisp-Libraries.html">(info "(emacs) Lisp Libraries")</A></SPAN></LI>
<LI style="FONT-FAMILY: sans-serif"><SPAN class=ref style="FONT-FAMILY: monospace; BACKGROUND-COLOR: rgb(232,255,255)"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs_manual/elisp/Loading.html">(info "(elisp) Loading")</A></SPAN></LI></UL>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">See also:<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_naming_your_mode.html">Emacs Lisp: How to Name Your Major Mode</A>.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">What's Library, Package, Feature?</H2>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">No Namespace</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs lisp the language does not have namespace. Everything is global, with dynamic scope, with some shadowing mechanism. So, don't expect library or module to be language defined namespace constructs like<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none; box-shadow: 0px 1px" href="http://xahlee.info/perl-python/writing_a_module.html">Perl or Python's module system</A><SPAN class=Apple-converted-space>&nbsp;</SPAN>or<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none; box-shadow: 0px 1px" href="http://xahlee.info/java-a-day/package.html">Java's Package system</A>. (note: emacs 24 added lexical scoping for variables, using a directive. It must be specified in each file, and applies to that file's<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">let</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>only.)</P>
<H3 style="FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">What's the difference between a Package &#65286; Library?</H3>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">These words are used losely, and do NOT have TECHNICAL definitions in elisp.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><B>library</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; elisp file(s) containing a collection of useful stuff. For example, the command<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">comment-dwim</CODE>is defined in<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">newcomment.el</CODE>, which is a library of functions.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><B>package</B><SPAN class=Apple-converted-space>&nbsp;</SPAN>&#8594; any useful elisp library for emacs users. &#8278; major mode or minor mode.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">The term &#8220;module&#8221; is not used by emacs.</P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Emacs's Concept of Feature</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_feature_name.html">What's Emacs Lisp feature?</A></P>
<H2 style="BORDER-TOP: gray thin solid; FONT-FAMILY: serif; FONT-VARIANT: normal; WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT-STYLE: normal; LETTER-SPACING: normal; LINE-HEIGHT: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">Package/Library/Feature are not Managed</H2>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">There is no absolute relation between any concept of package/library/feature/autoload facilities and the file name.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">By convention, if a elisp file name is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">xyz-mode.el</CODE>, it OFTEN provides a lisp symbol &#8220;xyz-mode&#8221; as its feature name (if it does at all), and the command to invoke the mode is OFTEN named &#8220;xyz-mode&#8221;. Sometimes the &#8220;-mode&#8221; part is omitted in any of {file name, feature symbol name, command name}.</P>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">This is only a lose convention. There are a lot exceptions. For example:</P>
<UL style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">
<LI style="FONT-FAMILY: sans-serif">The file<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">lisp-mode.el</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides the symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">lisp-mode</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as feature, and is invoked by a command named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">emacs-lisp-mode</CODE>.</LI>
<LI style="FONT-FAMILY: sans-serif">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">cua-base.el</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>file provides symbols<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">cua-base</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>and<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">cua</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as features, and is invoked by a command named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">cua-mode</CODE>.</LI>
<LI style="FONT-FAMILY: sans-serif">The<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">text-mode.el</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>file does not provide any symbol for feature. It is invoked by a command named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">text-mode</CODE>.</LI>
<LI style="FONT-FAMILY: sans-serif">The file<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">desktop.el</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>provides the symbol<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: pre-wrap; COLOR: maroon">desktop</CODE><SPAN class=Apple-converted-space>&nbsp;</SPAN>as feature, and the command name to invoke it is<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=elisp-&#402; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(178,34,34); BACKGROUND-COLOR: transparent">desktop-save-mode</CODE>.</LI></UL>
<P style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); FONT: medium/1.5 sans-serif; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px">All the above means, you could have a file named<SPAN class=Apple-converted-space>&nbsp;</SPAN><CODE class=path-&#945; style="FONT-FAMILY: 'DejaVu Sans Mono', monospace; WHITE-SPACE: nowrap; COLOR: rgb(8,74,78)">Joe-xyz-mode_v2.1.el</CODE>, which provides a feature named &#8220;abc&#8221;, while the command name to activate it may be &#8220;opq&#8221;, and it might be displayed in mode line as &#8220;OPQ helper&#8221;. And, this file can be considered as a package or library.</P>
<DIV class=question-box32371 style="BORDER-TOP: rgb(235,170,169) thin solid; BORDER-RIGHT: rgb(235,170,169) thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: rgb(235,170,169) thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: rgb(235,170,169) thin solid; MARGIN-TOP: 0px; DISPLAY: inline-block; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<P class=q style="WIDTH: auto; PADDING-TOP: 0px; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; MARGIN-TOP: 0px; DISPLAY: inline-block; LINE-HEIGHT: 1.5; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; border-radius: 0.5rem; box-shadow: rgb(72, 4, 3) 4px 4px 8px 2px">Isn't all this &#8220;no namespace&#8221;, &#8220;not managed&#8221; module system very bad?</P>
<P style="LINE-HEIGHT: 1.5">Yes it is.</P>
<P style="LINE-HEIGHT: 1.5">Though, it's just the state of software. Many most popular langs, such as C, C++,<SPAN class=Apple-converted-space>&nbsp;</SPAN><A style="TEXT-DECORATION: none; box-shadow: 0px 1px" href="http://xahlee.info/php/index.html">PHP</A>, do worse. They don't have a module system neither, and they load a file by &#8220;include&#8221;. Note that even Scheme Lisp didn't have module system, until R6RS, released in 2007, and the new module system defined in it is widely criticized, and R6RS caused Scheme community to split.</P></DIV><SPAN style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></SPAN><SPAN style="WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); FONT: medium sans-serif; DISPLAY: inline !important; LETTER-SPACING: normal; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px"></SPAN>
<DIV class=rltd style="BORDER-TOP: silver thin solid; BORDER-RIGHT: silver thin solid; WHITE-SPACE: normal; WORD-SPACING: 0px; BORDER-BOTTOM: silver thin solid; TEXT-TRANSFORM: none; COLOR: rgb(0,0,0); PADDING-TOP: 0px; FONT: medium sans-serif; PADDING-LEFT: 0px; MARGIN-LEFT: 0px; BORDER-LEFT: silver thin solid; MARGIN-TOP: 0px; DISPLAY: table; LETTER-SPACING: normal; PADDING-RIGHT: 0px; MARGIN-RIGHT: 0px; TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px; border-radius: 0.5rem">
<UL style="MARGIN: 0px">
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/elisp_syntax_coloring.html">How to Write a Emacs Major Mode for Syntax Coloring</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none" href="http://ergoemacs.org/emacs/inline_doc.html">Emacs Function's Inline Doc String Markups</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none; box-shadow: 0px 1px" href="http://xahlee.info/UnixResource_dir/writ/lisp_problems.html">Fundamental Problems of Lisp</A></LI>
<LI style="FONT-FAMILY: sans-serif"><A style="TEXT-DECORATION: none; box-shadow: 0px 1px" href="http://xahlee.info/UnixResource_dir/writ/notations.html">How Purely Nested Notation Limits The Language's Utility</A></LI></UL></DIV><BR class=Apple-interchange-newline>